// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoActivity.proto

#ifndef PROTOBUF_ProtoActivity_2eproto__INCLUDED
#define PROTOBUF_ProtoActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoActivity_2eproto();
void protobuf_AssignDesc_ProtoActivity_2eproto();
void protobuf_ShutdownFile_ProtoActivity_2eproto();

class GameAcitivityCPP;
class GameAcitivityAllCPP;
class GameAcitivityRecharge;
class GameAcitivityStatusReq;
class GameAcitivityStatusResp;
class FundPurchaseReq;
class FundPurchaseResp;
class RewardFundGiftReq;
class RewardFundGiftResp;
class PushAutoRewardFundMsg;
class ShareFriendCPP;
class NewShareCPP;
class GetNewShareInfoReq;
class GetNewShareInfoResp;
class NewShareReq;
class NewShareResp;
class RewardNewShareReq;
class RewardNewShareResp;

// ===================================================================

class GameAcitivityCPP : public ::google::protobuf::Message {
 public:
  GameAcitivityCPP();
  virtual ~GameAcitivityCPP();
  
  GameAcitivityCPP(const GameAcitivityCPP& from);
  
  inline GameAcitivityCPP& operator=(const GameAcitivityCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameAcitivityCPP& default_instance();
  
  void Swap(GameAcitivityCPP* other);
  
  // implements Message ----------------------------------------------
  
  GameAcitivityCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameAcitivityCPP& from);
  void MergeFrom(const GameAcitivityCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // repeated uint32 actdata = 3;
  inline int actdata_size() const;
  inline void clear_actdata();
  static const int kActdataFieldNumber = 3;
  inline ::google::protobuf::uint32 actdata(int index) const;
  inline void set_actdata(int index, ::google::protobuf::uint32 value);
  inline void add_actdata(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      actdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_actdata();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GameAcitivityCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > actdata_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GameAcitivityCPP* default_instance_;
};
// -------------------------------------------------------------------

class GameAcitivityAllCPP : public ::google::protobuf::Message {
 public:
  GameAcitivityAllCPP();
  virtual ~GameAcitivityAllCPP();
  
  GameAcitivityAllCPP(const GameAcitivityAllCPP& from);
  
  inline GameAcitivityAllCPP& operator=(const GameAcitivityAllCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameAcitivityAllCPP& default_instance();
  
  void Swap(GameAcitivityAllCPP* other);
  
  // implements Message ----------------------------------------------
  
  GameAcitivityAllCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameAcitivityAllCPP& from);
  void MergeFrom(const GameAcitivityAllCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoActivity.GameAcitivityCPP activities = 1;
  inline int activities_size() const;
  inline void clear_activities();
  static const int kActivitiesFieldNumber = 1;
  inline const ::ProtoActivity::GameAcitivityCPP& activities(int index) const;
  inline ::ProtoActivity::GameAcitivityCPP* mutable_activities(int index);
  inline ::ProtoActivity::GameAcitivityCPP* add_activities();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::GameAcitivityCPP >&
      activities() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::GameAcitivityCPP >*
      mutable_activities();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GameAcitivityAllCPP)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::GameAcitivityCPP > activities_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GameAcitivityAllCPP* default_instance_;
};
// -------------------------------------------------------------------

class GameAcitivityRecharge : public ::google::protobuf::Message {
 public:
  GameAcitivityRecharge();
  virtual ~GameAcitivityRecharge();
  
  GameAcitivityRecharge(const GameAcitivityRecharge& from);
  
  inline GameAcitivityRecharge& operator=(const GameAcitivityRecharge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameAcitivityRecharge& default_instance();
  
  void Swap(GameAcitivityRecharge* other);
  
  // implements Message ----------------------------------------------
  
  GameAcitivityRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameAcitivityRecharge& from);
  void MergeFrom(const GameAcitivityRecharge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ProtoActivity::GameAcitivityCPP& data() const;
  inline ::ProtoActivity::GameAcitivityCPP* mutable_data();
  inline ::ProtoActivity::GameAcitivityCPP* release_data();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GameAcitivityRecharge)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoActivity::GameAcitivityCPP* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GameAcitivityRecharge* default_instance_;
};
// -------------------------------------------------------------------

class GameAcitivityStatusReq : public ::google::protobuf::Message {
 public:
  GameAcitivityStatusReq();
  virtual ~GameAcitivityStatusReq();
  
  GameAcitivityStatusReq(const GameAcitivityStatusReq& from);
  
  inline GameAcitivityStatusReq& operator=(const GameAcitivityStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameAcitivityStatusReq& default_instance();
  
  void Swap(GameAcitivityStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  GameAcitivityStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameAcitivityStatusReq& from);
  void MergeFrom(const GameAcitivityStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GameAcitivityStatusReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GameAcitivityStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class GameAcitivityStatusResp : public ::google::protobuf::Message {
 public:
  GameAcitivityStatusResp();
  virtual ~GameAcitivityStatusResp();
  
  GameAcitivityStatusResp(const GameAcitivityStatusResp& from);
  
  inline GameAcitivityStatusResp& operator=(const GameAcitivityStatusResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameAcitivityStatusResp& default_instance();
  
  void Swap(GameAcitivityStatusResp* other);
  
  // implements Message ----------------------------------------------
  
  GameAcitivityStatusResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameAcitivityStatusResp& from);
  void MergeFrom(const GameAcitivityStatusResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GameAcitivityStatusResp)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GameAcitivityStatusResp* default_instance_;
};
// -------------------------------------------------------------------

class FundPurchaseReq : public ::google::protobuf::Message {
 public:
  FundPurchaseReq();
  virtual ~FundPurchaseReq();
  
  FundPurchaseReq(const FundPurchaseReq& from);
  
  inline FundPurchaseReq& operator=(const FundPurchaseReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FundPurchaseReq& default_instance();
  
  void Swap(FundPurchaseReq* other);
  
  // implements Message ----------------------------------------------
  
  FundPurchaseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FundPurchaseReq& from);
  void MergeFrom(const FundPurchaseReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.FundPurchaseReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static FundPurchaseReq* default_instance_;
};
// -------------------------------------------------------------------

class FundPurchaseResp : public ::google::protobuf::Message {
 public:
  FundPurchaseResp();
  virtual ~FundPurchaseResp();
  
  FundPurchaseResp(const FundPurchaseResp& from);
  
  inline FundPurchaseResp& operator=(const FundPurchaseResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FundPurchaseResp& default_instance();
  
  void Swap(FundPurchaseResp* other);
  
  // implements Message ----------------------------------------------
  
  FundPurchaseResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FundPurchaseResp& from);
  void MergeFrom(const FundPurchaseResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  inline bool has_fundactivity() const;
  inline void clear_fundactivity();
  static const int kFundActivityFieldNumber = 1;
  inline const ::ProtoActivity::GameAcitivityCPP& fundactivity() const;
  inline ::ProtoActivity::GameAcitivityCPP* mutable_fundactivity();
  inline ::ProtoActivity::GameAcitivityCPP* release_fundactivity();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.FundPurchaseResp)
 private:
  inline void set_has_fundactivity();
  inline void clear_has_fundactivity();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoActivity::GameAcitivityCPP* fundactivity_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static FundPurchaseResp* default_instance_;
};
// -------------------------------------------------------------------

class RewardFundGiftReq : public ::google::protobuf::Message {
 public:
  RewardFundGiftReq();
  virtual ~RewardFundGiftReq();
  
  RewardFundGiftReq(const RewardFundGiftReq& from);
  
  inline RewardFundGiftReq& operator=(const RewardFundGiftReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardFundGiftReq& default_instance();
  
  void Swap(RewardFundGiftReq* other);
  
  // implements Message ----------------------------------------------
  
  RewardFundGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardFundGiftReq& from);
  void MergeFrom(const RewardFundGiftReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.RewardFundGiftReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static RewardFundGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class RewardFundGiftResp : public ::google::protobuf::Message {
 public:
  RewardFundGiftResp();
  virtual ~RewardFundGiftResp();
  
  RewardFundGiftResp(const RewardFundGiftResp& from);
  
  inline RewardFundGiftResp& operator=(const RewardFundGiftResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardFundGiftResp& default_instance();
  
  void Swap(RewardFundGiftResp* other);
  
  // implements Message ----------------------------------------------
  
  RewardFundGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardFundGiftResp& from);
  void MergeFrom(const RewardFundGiftResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  inline bool has_fundactivity() const;
  inline void clear_fundactivity();
  static const int kFundActivityFieldNumber = 1;
  inline const ::ProtoActivity::GameAcitivityCPP& fundactivity() const;
  inline ::ProtoActivity::GameAcitivityCPP* mutable_fundactivity();
  inline ::ProtoActivity::GameAcitivityCPP* release_fundactivity();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.RewardFundGiftResp)
 private:
  inline void set_has_fundactivity();
  inline void clear_has_fundactivity();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoActivity::GameAcitivityCPP* fundactivity_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static RewardFundGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class PushAutoRewardFundMsg : public ::google::protobuf::Message {
 public:
  PushAutoRewardFundMsg();
  virtual ~PushAutoRewardFundMsg();
  
  PushAutoRewardFundMsg(const PushAutoRewardFundMsg& from);
  
  inline PushAutoRewardFundMsg& operator=(const PushAutoRewardFundMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushAutoRewardFundMsg& default_instance();
  
  void Swap(PushAutoRewardFundMsg* other);
  
  // implements Message ----------------------------------------------
  
  PushAutoRewardFundMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushAutoRewardFundMsg& from);
  void MergeFrom(const PushAutoRewardFundMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DataCommon.CommonItemsCPP commons = 1;
  inline int commons_size() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons(int index) const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons(int index);
  inline ::DataCommon::CommonItemsCPP* add_commons();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::CommonItemsCPP >&
      commons() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::CommonItemsCPP >*
      mutable_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.PushAutoRewardFundMsg)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DataCommon::CommonItemsCPP > commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static PushAutoRewardFundMsg* default_instance_;
};
// -------------------------------------------------------------------

class ShareFriendCPP : public ::google::protobuf::Message {
 public:
  ShareFriendCPP();
  virtual ~ShareFriendCPP();
  
  ShareFriendCPP(const ShareFriendCPP& from);
  
  inline ShareFriendCPP& operator=(const ShareFriendCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareFriendCPP& default_instance();
  
  void Swap(ShareFriendCPP* other);
  
  // implements Message ----------------------------------------------
  
  ShareFriendCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareFriendCPP& from);
  void MergeFrom(const ShareFriendCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 friendUid = 1;
  inline bool has_frienduid() const;
  inline void clear_frienduid();
  static const int kFriendUidFieldNumber = 1;
  inline ::google::protobuf::uint32 frienduid() const;
  inline void set_frienduid(::google::protobuf::uint32 value);
  
  // required uint32 inviteTs = 2;
  inline bool has_invitets() const;
  inline void clear_invitets();
  static const int kInviteTsFieldNumber = 2;
  inline ::google::protobuf::uint32 invitets() const;
  inline void set_invitets(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.ShareFriendCPP)
 private:
  inline void set_has_frienduid();
  inline void clear_has_frienduid();
  inline void set_has_invitets();
  inline void clear_has_invitets();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 frienduid_;
  ::google::protobuf::uint32 invitets_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static ShareFriendCPP* default_instance_;
};
// -------------------------------------------------------------------

class NewShareCPP : public ::google::protobuf::Message {
 public:
  NewShareCPP();
  virtual ~NewShareCPP();
  
  NewShareCPP(const NewShareCPP& from);
  
  inline NewShareCPP& operator=(const NewShareCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewShareCPP& default_instance();
  
  void Swap(NewShareCPP* other);
  
  // implements Message ----------------------------------------------
  
  NewShareCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewShareCPP& from);
  void MergeFrom(const NewShareCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 nextShareTs = 1;
  inline bool has_nextsharets() const;
  inline void clear_nextsharets();
  static const int kNextShareTsFieldNumber = 1;
  inline ::google::protobuf::uint32 nextsharets() const;
  inline void set_nextsharets(::google::protobuf::uint32 value);
  
  // required uint32 remainShareCnt = 2;
  inline bool has_remainsharecnt() const;
  inline void clear_remainsharecnt();
  static const int kRemainShareCntFieldNumber = 2;
  inline ::google::protobuf::uint32 remainsharecnt() const;
  inline void set_remainsharecnt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.NewShareCPP)
 private:
  inline void set_has_nextsharets();
  inline void clear_has_nextsharets();
  inline void set_has_remainsharecnt();
  inline void clear_has_remainsharecnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 nextsharets_;
  ::google::protobuf::uint32 remainsharecnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static NewShareCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetNewShareInfoReq : public ::google::protobuf::Message {
 public:
  GetNewShareInfoReq();
  virtual ~GetNewShareInfoReq();
  
  GetNewShareInfoReq(const GetNewShareInfoReq& from);
  
  inline GetNewShareInfoReq& operator=(const GetNewShareInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewShareInfoReq& default_instance();
  
  void Swap(GetNewShareInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  GetNewShareInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewShareInfoReq& from);
  void MergeFrom(const GetNewShareInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GetNewShareInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GetNewShareInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNewShareInfoResp : public ::google::protobuf::Message {
 public:
  GetNewShareInfoResp();
  virtual ~GetNewShareInfoResp();
  
  GetNewShareInfoResp(const GetNewShareInfoResp& from);
  
  inline GetNewShareInfoResp& operator=(const GetNewShareInfoResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewShareInfoResp& default_instance();
  
  void Swap(GetNewShareInfoResp* other);
  
  // implements Message ----------------------------------------------
  
  GetNewShareInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewShareInfoResp& from);
  void MergeFrom(const GetNewShareInfoResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoActivity.ShareFriendCPP friend = 1;
  inline int friend__size() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 1;
  inline const ::ProtoActivity::ShareFriendCPP& friend_(int index) const;
  inline ::ProtoActivity::ShareFriendCPP* mutable_friend_(int index);
  inline ::ProtoActivity::ShareFriendCPP* add_friend_();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::ShareFriendCPP >&
      friend_() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::ShareFriendCPP >*
      mutable_friend_();
  
  // required .ProtoActivity.NewShareCPP newShare = 2;
  inline bool has_newshare() const;
  inline void clear_newshare();
  static const int kNewShareFieldNumber = 2;
  inline const ::ProtoActivity::NewShareCPP& newshare() const;
  inline ::ProtoActivity::NewShareCPP* mutable_newshare();
  inline ::ProtoActivity::NewShareCPP* release_newshare();
  
  // repeated uint32 rewardFlag = 3;
  inline int rewardflag_size() const;
  inline void clear_rewardflag();
  static const int kRewardFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 rewardflag(int index) const;
  inline void set_rewardflag(int index, ::google::protobuf::uint32 value);
  inline void add_rewardflag(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardflag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardflag();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.GetNewShareInfoResp)
 private:
  inline void set_has_newshare();
  inline void clear_has_newshare();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::ShareFriendCPP > friend__;
  ::ProtoActivity::NewShareCPP* newshare_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardflag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static GetNewShareInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class NewShareReq : public ::google::protobuf::Message {
 public:
  NewShareReq();
  virtual ~NewShareReq();
  
  NewShareReq(const NewShareReq& from);
  
  inline NewShareReq& operator=(const NewShareReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewShareReq& default_instance();
  
  void Swap(NewShareReq* other);
  
  // implements Message ----------------------------------------------
  
  NewShareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewShareReq& from);
  void MergeFrom(const NewShareReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.NewShareReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static NewShareReq* default_instance_;
};
// -------------------------------------------------------------------

class NewShareResp : public ::google::protobuf::Message {
 public:
  NewShareResp();
  virtual ~NewShareResp();
  
  NewShareResp(const NewShareResp& from);
  
  inline NewShareResp& operator=(const NewShareResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewShareResp& default_instance();
  
  void Swap(NewShareResp* other);
  
  // implements Message ----------------------------------------------
  
  NewShareResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewShareResp& from);
  void MergeFrom(const NewShareResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  
  // required .ProtoActivity.NewShareCPP newShare = 2;
  inline bool has_newshare() const;
  inline void clear_newshare();
  static const int kNewShareFieldNumber = 2;
  inline const ::ProtoActivity::NewShareCPP& newshare() const;
  inline ::ProtoActivity::NewShareCPP* mutable_newshare();
  inline ::ProtoActivity::NewShareCPP* release_newshare();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.NewShareResp)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_newshare();
  inline void clear_has_newshare();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* common_;
  ::ProtoActivity::NewShareCPP* newshare_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static NewShareResp* default_instance_;
};
// -------------------------------------------------------------------

class RewardNewShareReq : public ::google::protobuf::Message {
 public:
  RewardNewShareReq();
  virtual ~RewardNewShareReq();
  
  RewardNewShareReq(const RewardNewShareReq& from);
  
  inline RewardNewShareReq& operator=(const RewardNewShareReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardNewShareReq& default_instance();
  
  void Swap(RewardNewShareReq* other);
  
  // implements Message ----------------------------------------------
  
  RewardNewShareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardNewShareReq& from);
  void MergeFrom(const RewardNewShareReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.RewardNewShareReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static RewardNewShareReq* default_instance_;
};
// -------------------------------------------------------------------

class RewardNewShareResp : public ::google::protobuf::Message {
 public:
  RewardNewShareResp();
  virtual ~RewardNewShareResp();
  
  RewardNewShareResp(const RewardNewShareResp& from);
  
  inline RewardNewShareResp& operator=(const RewardNewShareResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardNewShareResp& default_instance();
  
  void Swap(RewardNewShareResp* other);
  
  // implements Message ----------------------------------------------
  
  RewardNewShareResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardNewShareResp& from);
  void MergeFrom(const RewardNewShareResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 rewardFlag = 1;
  inline int rewardflag_size() const;
  inline void clear_rewardflag();
  static const int kRewardFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 rewardflag(int index) const;
  inline void set_rewardflag(int index, ::google::protobuf::uint32 value);
  inline void add_rewardflag(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardflag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardflag();
  
  // required .DataCommon.CommonItemsCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoActivity.RewardNewShareResp)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardflag_;
  ::DataCommon::CommonItemsCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();
  
  void InitAsDefaultInstance();
  static RewardNewShareResp* default_instance_;
};
// ===================================================================


// ===================================================================

// GameAcitivityCPP

// required uint32 id = 1;
inline bool GameAcitivityCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameAcitivityCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameAcitivityCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameAcitivityCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GameAcitivityCPP::id() const {
  return id_;
}
inline void GameAcitivityCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 version = 2;
inline bool GameAcitivityCPP::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameAcitivityCPP::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameAcitivityCPP::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameAcitivityCPP::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 GameAcitivityCPP::version() const {
  return version_;
}
inline void GameAcitivityCPP::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// repeated uint32 actdata = 3;
inline int GameAcitivityCPP::actdata_size() const {
  return actdata_.size();
}
inline void GameAcitivityCPP::clear_actdata() {
  actdata_.Clear();
}
inline ::google::protobuf::uint32 GameAcitivityCPP::actdata(int index) const {
  return actdata_.Get(index);
}
inline void GameAcitivityCPP::set_actdata(int index, ::google::protobuf::uint32 value) {
  actdata_.Set(index, value);
}
inline void GameAcitivityCPP::add_actdata(::google::protobuf::uint32 value) {
  actdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameAcitivityCPP::actdata() const {
  return actdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameAcitivityCPP::mutable_actdata() {
  return &actdata_;
}

// -------------------------------------------------------------------

// GameAcitivityAllCPP

// repeated .ProtoActivity.GameAcitivityCPP activities = 1;
inline int GameAcitivityAllCPP::activities_size() const {
  return activities_.size();
}
inline void GameAcitivityAllCPP::clear_activities() {
  activities_.Clear();
}
inline const ::ProtoActivity::GameAcitivityCPP& GameAcitivityAllCPP::activities(int index) const {
  return activities_.Get(index);
}
inline ::ProtoActivity::GameAcitivityCPP* GameAcitivityAllCPP::mutable_activities(int index) {
  return activities_.Mutable(index);
}
inline ::ProtoActivity::GameAcitivityCPP* GameAcitivityAllCPP::add_activities() {
  return activities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::GameAcitivityCPP >&
GameAcitivityAllCPP::activities() const {
  return activities_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::GameAcitivityCPP >*
GameAcitivityAllCPP::mutable_activities() {
  return &activities_;
}

// -------------------------------------------------------------------

// GameAcitivityRecharge

// required .ProtoActivity.GameAcitivityCPP data = 1;
inline bool GameAcitivityRecharge::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameAcitivityRecharge::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameAcitivityRecharge::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameAcitivityRecharge::clear_data() {
  if (data_ != NULL) data_->::ProtoActivity::GameAcitivityCPP::Clear();
  clear_has_data();
}
inline const ::ProtoActivity::GameAcitivityCPP& GameAcitivityRecharge::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::ProtoActivity::GameAcitivityCPP* GameAcitivityRecharge::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::ProtoActivity::GameAcitivityCPP;
  return data_;
}
inline ::ProtoActivity::GameAcitivityCPP* GameAcitivityRecharge::release_data() {
  clear_has_data();
  ::ProtoActivity::GameAcitivityCPP* temp = data_;
  data_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GameAcitivityStatusReq

// required uint32 id = 1;
inline bool GameAcitivityStatusReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameAcitivityStatusReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameAcitivityStatusReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameAcitivityStatusReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GameAcitivityStatusReq::id() const {
  return id_;
}
inline void GameAcitivityStatusReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GameAcitivityStatusResp

// required uint32 status = 1;
inline bool GameAcitivityStatusResp::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameAcitivityStatusResp::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameAcitivityStatusResp::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameAcitivityStatusResp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 GameAcitivityStatusResp::status() const {
  return status_;
}
inline void GameAcitivityStatusResp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FundPurchaseReq

// -------------------------------------------------------------------

// FundPurchaseResp

// required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
inline bool FundPurchaseResp::has_fundactivity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FundPurchaseResp::set_has_fundactivity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FundPurchaseResp::clear_has_fundactivity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FundPurchaseResp::clear_fundactivity() {
  if (fundactivity_ != NULL) fundactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
  clear_has_fundactivity();
}
inline const ::ProtoActivity::GameAcitivityCPP& FundPurchaseResp::fundactivity() const {
  return fundactivity_ != NULL ? *fundactivity_ : *default_instance_->fundactivity_;
}
inline ::ProtoActivity::GameAcitivityCPP* FundPurchaseResp::mutable_fundactivity() {
  set_has_fundactivity();
  if (fundactivity_ == NULL) fundactivity_ = new ::ProtoActivity::GameAcitivityCPP;
  return fundactivity_;
}
inline ::ProtoActivity::GameAcitivityCPP* FundPurchaseResp::release_fundactivity() {
  clear_has_fundactivity();
  ::ProtoActivity::GameAcitivityCPP* temp = fundactivity_;
  fundactivity_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool FundPurchaseResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FundPurchaseResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FundPurchaseResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FundPurchaseResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& FundPurchaseResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* FundPurchaseResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* FundPurchaseResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RewardFundGiftReq

// required uint32 index = 1;
inline bool RewardFundGiftReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardFundGiftReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardFundGiftReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardFundGiftReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 RewardFundGiftReq::index() const {
  return index_;
}
inline void RewardFundGiftReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// RewardFundGiftResp

// required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
inline bool RewardFundGiftResp::has_fundactivity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardFundGiftResp::set_has_fundactivity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardFundGiftResp::clear_has_fundactivity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardFundGiftResp::clear_fundactivity() {
  if (fundactivity_ != NULL) fundactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
  clear_has_fundactivity();
}
inline const ::ProtoActivity::GameAcitivityCPP& RewardFundGiftResp::fundactivity() const {
  return fundactivity_ != NULL ? *fundactivity_ : *default_instance_->fundactivity_;
}
inline ::ProtoActivity::GameAcitivityCPP* RewardFundGiftResp::mutable_fundactivity() {
  set_has_fundactivity();
  if (fundactivity_ == NULL) fundactivity_ = new ::ProtoActivity::GameAcitivityCPP;
  return fundactivity_;
}
inline ::ProtoActivity::GameAcitivityCPP* RewardFundGiftResp::release_fundactivity() {
  clear_has_fundactivity();
  ::ProtoActivity::GameAcitivityCPP* temp = fundactivity_;
  fundactivity_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool RewardFundGiftResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardFundGiftResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardFundGiftResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardFundGiftResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& RewardFundGiftResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardFundGiftResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardFundGiftResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushAutoRewardFundMsg

// repeated .DataCommon.CommonItemsCPP commons = 1;
inline int PushAutoRewardFundMsg::commons_size() const {
  return commons_.size();
}
inline void PushAutoRewardFundMsg::clear_commons() {
  commons_.Clear();
}
inline const ::DataCommon::CommonItemsCPP& PushAutoRewardFundMsg::commons(int index) const {
  return commons_.Get(index);
}
inline ::DataCommon::CommonItemsCPP* PushAutoRewardFundMsg::mutable_commons(int index) {
  return commons_.Mutable(index);
}
inline ::DataCommon::CommonItemsCPP* PushAutoRewardFundMsg::add_commons() {
  return commons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::CommonItemsCPP >&
PushAutoRewardFundMsg::commons() const {
  return commons_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::CommonItemsCPP >*
PushAutoRewardFundMsg::mutable_commons() {
  return &commons_;
}

// -------------------------------------------------------------------

// ShareFriendCPP

// required uint32 friendUid = 1;
inline bool ShareFriendCPP::has_frienduid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareFriendCPP::set_has_frienduid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareFriendCPP::clear_has_frienduid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareFriendCPP::clear_frienduid() {
  frienduid_ = 0u;
  clear_has_frienduid();
}
inline ::google::protobuf::uint32 ShareFriendCPP::frienduid() const {
  return frienduid_;
}
inline void ShareFriendCPP::set_frienduid(::google::protobuf::uint32 value) {
  set_has_frienduid();
  frienduid_ = value;
}

// required uint32 inviteTs = 2;
inline bool ShareFriendCPP::has_invitets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareFriendCPP::set_has_invitets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareFriendCPP::clear_has_invitets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareFriendCPP::clear_invitets() {
  invitets_ = 0u;
  clear_has_invitets();
}
inline ::google::protobuf::uint32 ShareFriendCPP::invitets() const {
  return invitets_;
}
inline void ShareFriendCPP::set_invitets(::google::protobuf::uint32 value) {
  set_has_invitets();
  invitets_ = value;
}

// -------------------------------------------------------------------

// NewShareCPP

// required uint32 nextShareTs = 1;
inline bool NewShareCPP::has_nextsharets() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewShareCPP::set_has_nextsharets() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewShareCPP::clear_has_nextsharets() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewShareCPP::clear_nextsharets() {
  nextsharets_ = 0u;
  clear_has_nextsharets();
}
inline ::google::protobuf::uint32 NewShareCPP::nextsharets() const {
  return nextsharets_;
}
inline void NewShareCPP::set_nextsharets(::google::protobuf::uint32 value) {
  set_has_nextsharets();
  nextsharets_ = value;
}

// required uint32 remainShareCnt = 2;
inline bool NewShareCPP::has_remainsharecnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewShareCPP::set_has_remainsharecnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewShareCPP::clear_has_remainsharecnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewShareCPP::clear_remainsharecnt() {
  remainsharecnt_ = 0u;
  clear_has_remainsharecnt();
}
inline ::google::protobuf::uint32 NewShareCPP::remainsharecnt() const {
  return remainsharecnt_;
}
inline void NewShareCPP::set_remainsharecnt(::google::protobuf::uint32 value) {
  set_has_remainsharecnt();
  remainsharecnt_ = value;
}

// -------------------------------------------------------------------

// GetNewShareInfoReq

// -------------------------------------------------------------------

// GetNewShareInfoResp

// repeated .ProtoActivity.ShareFriendCPP friend = 1;
inline int GetNewShareInfoResp::friend__size() const {
  return friend__.size();
}
inline void GetNewShareInfoResp::clear_friend_() {
  friend__.Clear();
}
inline const ::ProtoActivity::ShareFriendCPP& GetNewShareInfoResp::friend_(int index) const {
  return friend__.Get(index);
}
inline ::ProtoActivity::ShareFriendCPP* GetNewShareInfoResp::mutable_friend_(int index) {
  return friend__.Mutable(index);
}
inline ::ProtoActivity::ShareFriendCPP* GetNewShareInfoResp::add_friend_() {
  return friend__.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::ShareFriendCPP >&
GetNewShareInfoResp::friend_() const {
  return friend__;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::ShareFriendCPP >*
GetNewShareInfoResp::mutable_friend_() {
  return &friend__;
}

// required .ProtoActivity.NewShareCPP newShare = 2;
inline bool GetNewShareInfoResp::has_newshare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNewShareInfoResp::set_has_newshare() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNewShareInfoResp::clear_has_newshare() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNewShareInfoResp::clear_newshare() {
  if (newshare_ != NULL) newshare_->::ProtoActivity::NewShareCPP::Clear();
  clear_has_newshare();
}
inline const ::ProtoActivity::NewShareCPP& GetNewShareInfoResp::newshare() const {
  return newshare_ != NULL ? *newshare_ : *default_instance_->newshare_;
}
inline ::ProtoActivity::NewShareCPP* GetNewShareInfoResp::mutable_newshare() {
  set_has_newshare();
  if (newshare_ == NULL) newshare_ = new ::ProtoActivity::NewShareCPP;
  return newshare_;
}
inline ::ProtoActivity::NewShareCPP* GetNewShareInfoResp::release_newshare() {
  clear_has_newshare();
  ::ProtoActivity::NewShareCPP* temp = newshare_;
  newshare_ = NULL;
  return temp;
}

// repeated uint32 rewardFlag = 3;
inline int GetNewShareInfoResp::rewardflag_size() const {
  return rewardflag_.size();
}
inline void GetNewShareInfoResp::clear_rewardflag() {
  rewardflag_.Clear();
}
inline ::google::protobuf::uint32 GetNewShareInfoResp::rewardflag(int index) const {
  return rewardflag_.Get(index);
}
inline void GetNewShareInfoResp::set_rewardflag(int index, ::google::protobuf::uint32 value) {
  rewardflag_.Set(index, value);
}
inline void GetNewShareInfoResp::add_rewardflag(::google::protobuf::uint32 value) {
  rewardflag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetNewShareInfoResp::rewardflag() const {
  return rewardflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetNewShareInfoResp::mutable_rewardflag() {
  return &rewardflag_;
}

// -------------------------------------------------------------------

// NewShareReq

// -------------------------------------------------------------------

// NewShareResp

// required .DataCommon.CommonItemsCPP common = 1;
inline bool NewShareResp::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewShareResp::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewShareResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewShareResp::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& NewShareResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* NewShareResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  return common_;
}
inline ::DataCommon::CommonItemsCPP* NewShareResp::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// required .ProtoActivity.NewShareCPP newShare = 2;
inline bool NewShareResp::has_newshare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewShareResp::set_has_newshare() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewShareResp::clear_has_newshare() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewShareResp::clear_newshare() {
  if (newshare_ != NULL) newshare_->::ProtoActivity::NewShareCPP::Clear();
  clear_has_newshare();
}
inline const ::ProtoActivity::NewShareCPP& NewShareResp::newshare() const {
  return newshare_ != NULL ? *newshare_ : *default_instance_->newshare_;
}
inline ::ProtoActivity::NewShareCPP* NewShareResp::mutable_newshare() {
  set_has_newshare();
  if (newshare_ == NULL) newshare_ = new ::ProtoActivity::NewShareCPP;
  return newshare_;
}
inline ::ProtoActivity::NewShareCPP* NewShareResp::release_newshare() {
  clear_has_newshare();
  ::ProtoActivity::NewShareCPP* temp = newshare_;
  newshare_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RewardNewShareReq

// required uint32 index = 1;
inline bool RewardNewShareReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardNewShareReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardNewShareReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardNewShareReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 RewardNewShareReq::index() const {
  return index_;
}
inline void RewardNewShareReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// RewardNewShareResp

// repeated uint32 rewardFlag = 1;
inline int RewardNewShareResp::rewardflag_size() const {
  return rewardflag_.size();
}
inline void RewardNewShareResp::clear_rewardflag() {
  rewardflag_.Clear();
}
inline ::google::protobuf::uint32 RewardNewShareResp::rewardflag(int index) const {
  return rewardflag_.Get(index);
}
inline void RewardNewShareResp::set_rewardflag(int index, ::google::protobuf::uint32 value) {
  rewardflag_.Set(index, value);
}
inline void RewardNewShareResp::add_rewardflag(::google::protobuf::uint32 value) {
  rewardflag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RewardNewShareResp::rewardflag() const {
  return rewardflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RewardNewShareResp::mutable_rewardflag() {
  return &rewardflag_;
}

// required .DataCommon.CommonItemsCPP common = 2;
inline bool RewardNewShareResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardNewShareResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardNewShareResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardNewShareResp::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& RewardNewShareResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* RewardNewShareResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  return common_;
}
inline ::DataCommon::CommonItemsCPP* RewardNewShareResp::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoActivity_2eproto__INCLUDED
