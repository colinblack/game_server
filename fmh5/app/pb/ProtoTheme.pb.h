// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoTheme.proto

#ifndef PROTOBUF_ProtoTheme_2eproto__INCLUDED
#define PROTOBUF_ProtoTheme_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoTheme {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoTheme_2eproto();
void protobuf_AssignDesc_ProtoTheme_2eproto();
void protobuf_ShutdownFile_ProtoTheme_2eproto();

class ThemeInfoReq;
class ThemeBuyReq;
class ThemeBuyResp;
class ThemeUseReq;
class ThemeInfoResp;

// ===================================================================

class ThemeInfoReq : public ::google::protobuf::Message {
 public:
  ThemeInfoReq();
  virtual ~ThemeInfoReq();
  
  ThemeInfoReq(const ThemeInfoReq& from);
  
  inline ThemeInfoReq& operator=(const ThemeInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeInfoReq& default_instance();
  
  void Swap(ThemeInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  ThemeInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeInfoReq& from);
  void MergeFrom(const ThemeInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoTheme.ThemeInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoTheme_2eproto();
  friend void protobuf_AssignDesc_ProtoTheme_2eproto();
  friend void protobuf_ShutdownFile_ProtoTheme_2eproto();
  
  void InitAsDefaultInstance();
  static ThemeInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ThemeBuyReq : public ::google::protobuf::Message {
 public:
  ThemeBuyReq();
  virtual ~ThemeBuyReq();
  
  ThemeBuyReq(const ThemeBuyReq& from);
  
  inline ThemeBuyReq& operator=(const ThemeBuyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeBuyReq& default_instance();
  
  void Swap(ThemeBuyReq* other);
  
  // implements Message ----------------------------------------------
  
  ThemeBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeBuyReq& from);
  void MergeFrom(const ThemeBuyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 themeId = 1;
  inline bool has_themeid() const;
  inline void clear_themeid();
  static const int kThemeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 themeid() const;
  inline void set_themeid(::google::protobuf::uint32 value);
  
  // required uint32 itemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoTheme.ThemeBuyReq)
 private:
  inline void set_has_themeid();
  inline void clear_has_themeid();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 themeid_;
  ::google::protobuf::uint32 itemtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoTheme_2eproto();
  friend void protobuf_AssignDesc_ProtoTheme_2eproto();
  friend void protobuf_ShutdownFile_ProtoTheme_2eproto();
  
  void InitAsDefaultInstance();
  static ThemeBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class ThemeBuyResp : public ::google::protobuf::Message {
 public:
  ThemeBuyResp();
  virtual ~ThemeBuyResp();
  
  ThemeBuyResp(const ThemeBuyResp& from);
  
  inline ThemeBuyResp& operator=(const ThemeBuyResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeBuyResp& default_instance();
  
  void Swap(ThemeBuyResp* other);
  
  // implements Message ----------------------------------------------
  
  ThemeBuyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeBuyResp& from);
  void MergeFrom(const ThemeBuyResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoTheme.ThemeInfoResp themeInfo = 2;
  inline bool has_themeinfo() const;
  inline void clear_themeinfo();
  static const int kThemeInfoFieldNumber = 2;
  inline const ::ProtoTheme::ThemeInfoResp& themeinfo() const;
  inline ::ProtoTheme::ThemeInfoResp* mutable_themeinfo();
  inline ::ProtoTheme::ThemeInfoResp* release_themeinfo();
  
  // optional uint32 themeId = 3;
  inline bool has_themeid() const;
  inline void clear_themeid();
  static const int kThemeIdFieldNumber = 3;
  inline ::google::protobuf::uint32 themeid() const;
  inline void set_themeid(::google::protobuf::uint32 value);
  
  // optional uint32 itemType = 4;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoTheme.ThemeBuyResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_themeinfo();
  inline void clear_has_themeinfo();
  inline void set_has_themeid();
  inline void clear_has_themeid();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoTheme::ThemeInfoResp* themeinfo_;
  ::google::protobuf::uint32 themeid_;
  ::google::protobuf::uint32 itemtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoTheme_2eproto();
  friend void protobuf_AssignDesc_ProtoTheme_2eproto();
  friend void protobuf_ShutdownFile_ProtoTheme_2eproto();
  
  void InitAsDefaultInstance();
  static ThemeBuyResp* default_instance_;
};
// -------------------------------------------------------------------

class ThemeUseReq : public ::google::protobuf::Message {
 public:
  ThemeUseReq();
  virtual ~ThemeUseReq();
  
  ThemeUseReq(const ThemeUseReq& from);
  
  inline ThemeUseReq& operator=(const ThemeUseReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeUseReq& default_instance();
  
  void Swap(ThemeUseReq* other);
  
  // implements Message ----------------------------------------------
  
  ThemeUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeUseReq& from);
  void MergeFrom(const ThemeUseReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 themeId = 1;
  inline bool has_themeid() const;
  inline void clear_themeid();
  static const int kThemeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 themeid() const;
  inline void set_themeid(::google::protobuf::uint32 value);
  
  // repeated uint32 itemType = 2;
  inline int itemtype_size() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 itemtype(int index) const;
  inline void set_itemtype(int index, ::google::protobuf::uint32 value);
  inline void add_itemtype(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemtype();
  
  // @@protoc_insertion_point(class_scope:ProtoTheme.ThemeUseReq)
 private:
  inline void set_has_themeid();
  inline void clear_has_themeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemtype_;
  ::google::protobuf::uint32 themeid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoTheme_2eproto();
  friend void protobuf_AssignDesc_ProtoTheme_2eproto();
  friend void protobuf_ShutdownFile_ProtoTheme_2eproto();
  
  void InitAsDefaultInstance();
  static ThemeUseReq* default_instance_;
};
// -------------------------------------------------------------------

class ThemeInfoResp : public ::google::protobuf::Message {
 public:
  ThemeInfoResp();
  virtual ~ThemeInfoResp();
  
  ThemeInfoResp(const ThemeInfoResp& from);
  
  inline ThemeInfoResp& operator=(const ThemeInfoResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeInfoResp& default_instance();
  
  void Swap(ThemeInfoResp* other);
  
  // implements Message ----------------------------------------------
  
  ThemeInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeInfoResp& from);
  void MergeFrom(const ThemeInfoResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 use = 1;
  inline int use_size() const;
  inline void clear_use();
  static const int kUseFieldNumber = 1;
  inline ::google::protobuf::uint32 use(int index) const;
  inline void set_use(int index, ::google::protobuf::uint32 value);
  inline void add_use(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      use() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_use();
  
  // repeated uint32 own = 2;
  inline int own_size() const;
  inline void clear_own();
  static const int kOwnFieldNumber = 2;
  inline ::google::protobuf::uint32 own(int index) const;
  inline void set_own(int index, ::google::protobuf::uint32 value);
  inline void add_own(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      own() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_own();
  
  // @@protoc_insertion_point(class_scope:ProtoTheme.ThemeInfoResp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > use_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > own_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoTheme_2eproto();
  friend void protobuf_AssignDesc_ProtoTheme_2eproto();
  friend void protobuf_ShutdownFile_ProtoTheme_2eproto();
  
  void InitAsDefaultInstance();
  static ThemeInfoResp* default_instance_;
};
// ===================================================================


// ===================================================================

// ThemeInfoReq

// -------------------------------------------------------------------

// ThemeBuyReq

// required uint32 themeId = 1;
inline bool ThemeBuyReq::has_themeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeBuyReq::set_has_themeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeBuyReq::clear_has_themeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeBuyReq::clear_themeid() {
  themeid_ = 0u;
  clear_has_themeid();
}
inline ::google::protobuf::uint32 ThemeBuyReq::themeid() const {
  return themeid_;
}
inline void ThemeBuyReq::set_themeid(::google::protobuf::uint32 value) {
  set_has_themeid();
  themeid_ = value;
}

// required uint32 itemType = 2;
inline bool ThemeBuyReq::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThemeBuyReq::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThemeBuyReq::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThemeBuyReq::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 ThemeBuyReq::itemtype() const {
  return itemtype_;
}
inline void ThemeBuyReq::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// -------------------------------------------------------------------

// ThemeBuyResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ThemeBuyResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeBuyResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeBuyResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeBuyResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ThemeBuyResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ThemeBuyResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ThemeBuyResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoTheme.ThemeInfoResp themeInfo = 2;
inline bool ThemeBuyResp::has_themeinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThemeBuyResp::set_has_themeinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThemeBuyResp::clear_has_themeinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThemeBuyResp::clear_themeinfo() {
  if (themeinfo_ != NULL) themeinfo_->::ProtoTheme::ThemeInfoResp::Clear();
  clear_has_themeinfo();
}
inline const ::ProtoTheme::ThemeInfoResp& ThemeBuyResp::themeinfo() const {
  return themeinfo_ != NULL ? *themeinfo_ : *default_instance_->themeinfo_;
}
inline ::ProtoTheme::ThemeInfoResp* ThemeBuyResp::mutable_themeinfo() {
  set_has_themeinfo();
  if (themeinfo_ == NULL) themeinfo_ = new ::ProtoTheme::ThemeInfoResp;
  return themeinfo_;
}
inline ::ProtoTheme::ThemeInfoResp* ThemeBuyResp::release_themeinfo() {
  clear_has_themeinfo();
  ::ProtoTheme::ThemeInfoResp* temp = themeinfo_;
  themeinfo_ = NULL;
  return temp;
}

// optional uint32 themeId = 3;
inline bool ThemeBuyResp::has_themeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ThemeBuyResp::set_has_themeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ThemeBuyResp::clear_has_themeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ThemeBuyResp::clear_themeid() {
  themeid_ = 0u;
  clear_has_themeid();
}
inline ::google::protobuf::uint32 ThemeBuyResp::themeid() const {
  return themeid_;
}
inline void ThemeBuyResp::set_themeid(::google::protobuf::uint32 value) {
  set_has_themeid();
  themeid_ = value;
}

// optional uint32 itemType = 4;
inline bool ThemeBuyResp::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ThemeBuyResp::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ThemeBuyResp::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ThemeBuyResp::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 ThemeBuyResp::itemtype() const {
  return itemtype_;
}
inline void ThemeBuyResp::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// -------------------------------------------------------------------

// ThemeUseReq

// required uint32 themeId = 1;
inline bool ThemeUseReq::has_themeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeUseReq::set_has_themeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeUseReq::clear_has_themeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeUseReq::clear_themeid() {
  themeid_ = 0u;
  clear_has_themeid();
}
inline ::google::protobuf::uint32 ThemeUseReq::themeid() const {
  return themeid_;
}
inline void ThemeUseReq::set_themeid(::google::protobuf::uint32 value) {
  set_has_themeid();
  themeid_ = value;
}

// repeated uint32 itemType = 2;
inline int ThemeUseReq::itemtype_size() const {
  return itemtype_.size();
}
inline void ThemeUseReq::clear_itemtype() {
  itemtype_.Clear();
}
inline ::google::protobuf::uint32 ThemeUseReq::itemtype(int index) const {
  return itemtype_.Get(index);
}
inline void ThemeUseReq::set_itemtype(int index, ::google::protobuf::uint32 value) {
  itemtype_.Set(index, value);
}
inline void ThemeUseReq::add_itemtype(::google::protobuf::uint32 value) {
  itemtype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ThemeUseReq::itemtype() const {
  return itemtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ThemeUseReq::mutable_itemtype() {
  return &itemtype_;
}

// -------------------------------------------------------------------

// ThemeInfoResp

// repeated uint32 use = 1;
inline int ThemeInfoResp::use_size() const {
  return use_.size();
}
inline void ThemeInfoResp::clear_use() {
  use_.Clear();
}
inline ::google::protobuf::uint32 ThemeInfoResp::use(int index) const {
  return use_.Get(index);
}
inline void ThemeInfoResp::set_use(int index, ::google::protobuf::uint32 value) {
  use_.Set(index, value);
}
inline void ThemeInfoResp::add_use(::google::protobuf::uint32 value) {
  use_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ThemeInfoResp::use() const {
  return use_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ThemeInfoResp::mutable_use() {
  return &use_;
}

// repeated uint32 own = 2;
inline int ThemeInfoResp::own_size() const {
  return own_.size();
}
inline void ThemeInfoResp::clear_own() {
  own_.Clear();
}
inline ::google::protobuf::uint32 ThemeInfoResp::own(int index) const {
  return own_.Get(index);
}
inline void ThemeInfoResp::set_own(int index, ::google::protobuf::uint32 value) {
  own_.Set(index, value);
}
inline void ThemeInfoResp::add_own(::google::protobuf::uint32 value) {
  own_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ThemeInfoResp::own() const {
  return own_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ThemeInfoResp::mutable_own() {
  return &own_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoTheme

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoTheme_2eproto__INCLUDED
