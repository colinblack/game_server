// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigActivity {

namespace {

const ::google::protobuf::Descriptor* DailyFundCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyFundCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewShareCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShareCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivityCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivityCfg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigActivity_2eproto() {
  protobuf_AddDesc_ConfigActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigActivity.proto");
  GOOGLE_CHECK(file != NULL);
  DailyFundCPP_descriptor_ = file->message_type(0);
  static const int DailyFundCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFundCPP, diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFundCPP, reward_),
  };
  DailyFundCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyFundCPP_descriptor_,
      DailyFundCPP::default_instance_,
      DailyFundCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFundCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFundCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyFundCPP));
  NewShareCPP_descriptor_ = file->message_type(1);
  static const int NewShareCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, share_cd_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, share_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, reward_),
  };
  NewShareCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewShareCPP_descriptor_,
      NewShareCPP::default_instance_,
      NewShareCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewShareCPP));
  ActivityCfg_descriptor_ = file->message_type(2);
  static const int ActivityCfg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityCfg, daily_fund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityCfg, new_share_),
  };
  ActivityCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivityCfg_descriptor_,
      ActivityCfg::default_instance_,
      ActivityCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivityCfg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyFundCPP_descriptor_, &DailyFundCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewShareCPP_descriptor_, &NewShareCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivityCfg_descriptor_, &ActivityCfg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigActivity_2eproto() {
  delete DailyFundCPP::default_instance_;
  delete DailyFundCPP_reflection_;
  delete NewShareCPP::default_instance_;
  delete NewShareCPP_reflection_;
  delete ActivityCfg::default_instance_;
  delete ActivityCfg_reflection_;
}

void protobuf_AddDesc_ConfigActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConfigActivity.proto\022\016ConfigActivity\032\026"
    "CommonGiftConfig.proto\"w\n\014DailyFundCPP\0223"
    "\n\007diamond\030\001 \002(\0132\".CommonGiftConfig.Commo"
    "nModifyItem\0222\n\006reward\030\002 \003(\0132\".CommonGift"
    "Config.CommonModifyItem\"\222\001\n\013NewShareCPP\022"
    "\025\n\rshare_cd_time\030\001 \003(\r\0228\n\014share_reward\030\002"
    " \003(\0132\".CommonGiftConfig.CommonModifyItem"
    "\0222\n\006reward\030\003 \003(\0132\".CommonGiftConfig.Comm"
    "onModifyItem\"o\n\013ActivityCfg\0220\n\ndaily_fun"
    "d\030\001 \002(\0132\034.ConfigActivity.DailyFundCPP\022.\n"
    "\tnew_share\030\002 \002(\0132\033.ConfigActivity.NewSha"
    "reCPP", 445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigActivity.proto", &protobuf_RegisterTypes);
  DailyFundCPP::default_instance_ = new DailyFundCPP();
  NewShareCPP::default_instance_ = new NewShareCPP();
  ActivityCfg::default_instance_ = new ActivityCfg();
  DailyFundCPP::default_instance_->InitAsDefaultInstance();
  NewShareCPP::default_instance_->InitAsDefaultInstance();
  ActivityCfg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigActivity_2eproto {
  StaticDescriptorInitializer_ConfigActivity_2eproto() {
    protobuf_AddDesc_ConfigActivity_2eproto();
  }
} static_descriptor_initializer_ConfigActivity_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int DailyFundCPP::kDiamondFieldNumber;
const int DailyFundCPP::kRewardFieldNumber;
#endif  // !_MSC_VER

DailyFundCPP::DailyFundCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyFundCPP::InitAsDefaultInstance() {
  diamond_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

DailyFundCPP::DailyFundCPP(const DailyFundCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyFundCPP::SharedCtor() {
  _cached_size_ = 0;
  diamond_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyFundCPP::~DailyFundCPP() {
  SharedDtor();
}

void DailyFundCPP::SharedDtor() {
  if (this != default_instance_) {
    delete diamond_;
  }
}

void DailyFundCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyFundCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyFundCPP_descriptor_;
}

const DailyFundCPP& DailyFundCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigActivity_2eproto();  return *default_instance_;
}

DailyFundCPP* DailyFundCPP::default_instance_ = NULL;

DailyFundCPP* DailyFundCPP::New() const {
  return new DailyFundCPP;
}

void DailyFundCPP::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_diamond()) {
      if (diamond_ != NULL) diamond_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyFundCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CommonGiftConfig.CommonModifyItem diamond = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_diamond()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }
      
      // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyFundCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CommonGiftConfig.CommonModifyItem diamond = 1;
  if (has_diamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->diamond(), output);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyFundCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CommonGiftConfig.CommonModifyItem diamond = 1;
  if (has_diamond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->diamond(), target);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyFundCPP::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem diamond = 1;
    if (has_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diamond());
    }
    
  }
  // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyFundCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyFundCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyFundCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyFundCPP::MergeFrom(const DailyFundCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_diamond()) {
      mutable_diamond()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.diamond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyFundCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyFundCPP::CopyFrom(const DailyFundCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyFundCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_diamond()) {
    if (!this->diamond().IsInitialized()) return false;
  }
  for (int i = 0; i < reward_size(); i++) {
    if (!this->reward(i).IsInitialized()) return false;
  }
  return true;
}

void DailyFundCPP::Swap(DailyFundCPP* other) {
  if (other != this) {
    std::swap(diamond_, other->diamond_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyFundCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyFundCPP_descriptor_;
  metadata.reflection = DailyFundCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewShareCPP::kShareCdTimeFieldNumber;
const int NewShareCPP::kShareRewardFieldNumber;
const int NewShareCPP::kRewardFieldNumber;
#endif  // !_MSC_VER

NewShareCPP::NewShareCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NewShareCPP::InitAsDefaultInstance() {
}

NewShareCPP::NewShareCPP(const NewShareCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NewShareCPP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShareCPP::~NewShareCPP() {
  SharedDtor();
}

void NewShareCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShareCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShareCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShareCPP_descriptor_;
}

const NewShareCPP& NewShareCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigActivity_2eproto();  return *default_instance_;
}

NewShareCPP* NewShareCPP::default_instance_ = NULL;

NewShareCPP* NewShareCPP::New() const {
  return new NewShareCPP;
}

void NewShareCPP::Clear() {
  share_cd_time_.Clear();
  share_reward_.Clear();
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewShareCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 share_cd_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_share_cd_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_share_cd_time())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_share_cd_time())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_share_cd_time;
        if (input->ExpectTag(18)) goto parse_share_reward;
        break;
      }
      
      // repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_share_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_share_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_share_reward;
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }
      
      // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NewShareCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 share_cd_time = 1;
  for (int i = 0; i < this->share_cd_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->share_cd_time(i), output);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
  for (int i = 0; i < this->share_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->share_reward(i), output);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NewShareCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 share_cd_time = 1;
  for (int i = 0; i < this->share_cd_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->share_cd_time(i), target);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
  for (int i = 0; i < this->share_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->share_reward(i), target);
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NewShareCPP::ByteSize() const {
  int total_size = 0;
  
  // repeated uint32 share_cd_time = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->share_cd_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->share_cd_time(i));
    }
    total_size += 1 * this->share_cd_time_size() + data_size;
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
  total_size += 1 * this->share_reward_size();
  for (int i = 0; i < this->share_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->share_reward(i));
  }
  
  // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShareCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewShareCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewShareCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewShareCPP::MergeFrom(const NewShareCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  share_cd_time_.MergeFrom(from.share_cd_time_);
  share_reward_.MergeFrom(from.share_reward_);
  reward_.MergeFrom(from.reward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewShareCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShareCPP::CopyFrom(const NewShareCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShareCPP::IsInitialized() const {
  
  for (int i = 0; i < share_reward_size(); i++) {
    if (!this->share_reward(i).IsInitialized()) return false;
  }
  for (int i = 0; i < reward_size(); i++) {
    if (!this->reward(i).IsInitialized()) return false;
  }
  return true;
}

void NewShareCPP::Swap(NewShareCPP* other) {
  if (other != this) {
    share_cd_time_.Swap(&other->share_cd_time_);
    share_reward_.Swap(&other->share_reward_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewShareCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShareCPP_descriptor_;
  metadata.reflection = NewShareCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityCfg::kDailyFundFieldNumber;
const int ActivityCfg::kNewShareFieldNumber;
#endif  // !_MSC_VER

ActivityCfg::ActivityCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActivityCfg::InitAsDefaultInstance() {
  daily_fund_ = const_cast< ::ConfigActivity::DailyFundCPP*>(&::ConfigActivity::DailyFundCPP::default_instance());
  new_share_ = const_cast< ::ConfigActivity::NewShareCPP*>(&::ConfigActivity::NewShareCPP::default_instance());
}

ActivityCfg::ActivityCfg(const ActivityCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActivityCfg::SharedCtor() {
  _cached_size_ = 0;
  daily_fund_ = NULL;
  new_share_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityCfg::~ActivityCfg() {
  SharedDtor();
}

void ActivityCfg::SharedDtor() {
  if (this != default_instance_) {
    delete daily_fund_;
    delete new_share_;
  }
}

void ActivityCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivityCfg_descriptor_;
}

const ActivityCfg& ActivityCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigActivity_2eproto();  return *default_instance_;
}

ActivityCfg* ActivityCfg::default_instance_ = NULL;

ActivityCfg* ActivityCfg::New() const {
  return new ActivityCfg;
}

void ActivityCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_daily_fund()) {
      if (daily_fund_ != NULL) daily_fund_->::ConfigActivity::DailyFundCPP::Clear();
    }
    if (has_new_share()) {
      if (new_share_ != NULL) new_share_->::ConfigActivity::NewShareCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActivityCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigActivity.DailyFundCPP daily_fund = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_daily_fund()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_new_share;
        break;
      }
      
      // required .ConfigActivity.NewShareCPP new_share = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_new_share:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_share()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActivityCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ConfigActivity.DailyFundCPP daily_fund = 1;
  if (has_daily_fund()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->daily_fund(), output);
  }
  
  // required .ConfigActivity.NewShareCPP new_share = 2;
  if (has_new_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->new_share(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActivityCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ConfigActivity.DailyFundCPP daily_fund = 1;
  if (has_daily_fund()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->daily_fund(), target);
  }
  
  // required .ConfigActivity.NewShareCPP new_share = 2;
  if (has_new_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->new_share(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActivityCfg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigActivity.DailyFundCPP daily_fund = 1;
    if (has_daily_fund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->daily_fund());
    }
    
    // required .ConfigActivity.NewShareCPP new_share = 2;
    if (has_new_share()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->new_share());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivityCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivityCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActivityCfg::MergeFrom(const ActivityCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_daily_fund()) {
      mutable_daily_fund()->::ConfigActivity::DailyFundCPP::MergeFrom(from.daily_fund());
    }
    if (from.has_new_share()) {
      mutable_new_share()->::ConfigActivity::NewShareCPP::MergeFrom(from.new_share());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActivityCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityCfg::CopyFrom(const ActivityCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_daily_fund()) {
    if (!this->daily_fund().IsInitialized()) return false;
  }
  if (has_new_share()) {
    if (!this->new_share().IsInitialized()) return false;
  }
  return true;
}

void ActivityCfg::Swap(ActivityCfg* other) {
  if (other != this) {
    std::swap(daily_fund_, other->daily_fund_);
    std::swap(new_share_, other->new_share_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActivityCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivityCfg_descriptor_;
  metadata.reflection = ActivityCfg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigActivity

// @@protoc_insertion_point(global_scope)
