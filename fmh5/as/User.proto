import "ProtoNotify.proto";
import "ProtoActivity.proto";

package User;

message Base {
	required uint32 uid					 = 1;
	required uint32 register_platform	 = 2;
	required uint32 register_time		 = 3;
	required uint32 last_login_platform	 = 4;
	required uint32 last_login_time		 = 5;
	required uint32 login_times			 = 6;
	required uint32 login_days			 = 7;
	required uint32 last_active_time 	 = 8;
	required uint32 last_off_time	 	 = 9;
	required uint32 forbid_ts			 = 10;
	required bytes forbid_reason		 = 11;
	required uint32 tutorial_stage		 = 12;
	required bytes name					 = 13;
	required bytes fig					 = 14;
	required uint64 exp					 = 15;
	required uint32 level				 = 16;
	required uint32 acccharge			 = 17;
	required uint32 viplevel			 = 18;
	required uint32 cash				 = 19;
	required uint32 coin				 = 20;
	required uint32 first_recharge 		 = 21;  //首充 1--可领取 2--已经领取
	required uint32 alliance_id			 = 22;
}

message ActivityItem{
	required uint32	id			= 1;
	required uint32	bts			= 2;
	required uint32	ets			= 3;
	required uint32	ver			= 4;
}
message Activity{
	repeated ActivityItem act	 = 1;
}

message User {
		required Base base										= 1;
		required uint32 ts										= 2;//服务器时间
		required Activity activity								= 3;//活动时间
		optional ProtoNotify.NotifyItemCPPAll 	notifies		= 4;//活动的通知
		required AccumulateCharge	       charges				= 5;//累积充值.与累积充值活动无关。只保留7日充值数据
		required ProtoActivity.GameAcitivityAllCPP gameactivity	= 6;//已开启的活动
}

message RequestOtherUser{
		required uint32 uid = 1;
}
message OtherUser {
		required Base base								= 1;
}

message Tutorial_stage{	
	required uint32 tutorial_stage		 = 1;
}

message ServerTime{	
	required uint32 ts					 = 1;
}

//////////////////////////////////
//消耗钻石
message CostCashReq {
	required uint32  cash 	 	= 1;  //消耗钻石数
	required string  op_code 	= 2;  //操作备注（不能为空,勿用中文）
	required uint32	 operation 	= 3;  //用于区分客户端逻辑
}

message CostCashResp {
	required uint32  cash 		= 1;  //最新钻石数
	required uint32	 operation 	= 2;  //用于区分客户端逻辑
}
//////////////////////////////////

//7天内的充值数据
message ChargeItem
{
	required uint32 cash = 1;  //充值金额
	required uint32 ts 	 = 2;   //充值时间
}

message AccumulateCharge
{
	repeated ChargeItem accumulate_charge	= 1;   //累积充值
}

//充值后的推送
message PushAccumulateChangeReq
{
	required AccumulateCharge  change_acccharge = 1;  //改变后的累积充值
}
