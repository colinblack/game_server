// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorRet.proto

#ifndef PROTOBUF_ErrorRet_2eproto__INCLUDED
#define PROTOBUF_ErrorRet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ErrorRet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ErrorRet_2eproto();
void protobuf_AssignDesc_ErrorRet_2eproto();
void protobuf_ShutdownFile_ErrorRet_2eproto();

class ErrorRet;

// ===================================================================

class ErrorRet : public ::google::protobuf::Message {
 public:
  ErrorRet();
  virtual ~ErrorRet();
  
  ErrorRet(const ErrorRet& from);
  
  inline ErrorRet& operator=(const ErrorRet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorRet& default_instance();
  
  void Swap(ErrorRet* other);
  
  // implements Message ----------------------------------------------
  
  ErrorRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorRet& from);
  void MergeFrom(const ErrorRet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 errorret = 1;
  inline bool has_errorret() const;
  inline void clear_errorret();
  static const int kErrorretFieldNumber = 1;
  inline ::google::protobuf::uint32 errorret() const;
  inline void set_errorret(::google::protobuf::uint32 value);
  
  // required string errormsg = 2;
  inline bool has_errormsg() const;
  inline void clear_errormsg();
  static const int kErrormsgFieldNumber = 2;
  inline const ::std::string& errormsg() const;
  inline void set_errormsg(const ::std::string& value);
  inline void set_errormsg(const char* value);
  inline void set_errormsg(const char* value, size_t size);
  inline ::std::string* mutable_errormsg();
  inline ::std::string* release_errormsg();
  
  // required string requestmsg = 3;
  inline bool has_requestmsg() const;
  inline void clear_requestmsg();
  static const int kRequestmsgFieldNumber = 3;
  inline const ::std::string& requestmsg() const;
  inline void set_requestmsg(const ::std::string& value);
  inline void set_requestmsg(const char* value);
  inline void set_requestmsg(const char* value, size_t size);
  inline ::std::string* mutable_requestmsg();
  inline ::std::string* release_requestmsg();
  
  // @@protoc_insertion_point(class_scope:ErrorRet.ErrorRet)
 private:
  inline void set_has_errorret();
  inline void clear_has_errorret();
  inline void set_has_errormsg();
  inline void clear_has_errormsg();
  inline void set_has_requestmsg();
  inline void clear_has_requestmsg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* errormsg_;
  ::std::string* requestmsg_;
  ::google::protobuf::uint32 errorret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ErrorRet_2eproto();
  friend void protobuf_AssignDesc_ErrorRet_2eproto();
  friend void protobuf_ShutdownFile_ErrorRet_2eproto();
  
  void InitAsDefaultInstance();
  static ErrorRet* default_instance_;
};
// ===================================================================


// ===================================================================

// ErrorRet

// required uint32 errorret = 1;
inline bool ErrorRet::has_errorret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorRet::set_has_errorret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorRet::clear_has_errorret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorRet::clear_errorret() {
  errorret_ = 0u;
  clear_has_errorret();
}
inline ::google::protobuf::uint32 ErrorRet::errorret() const {
  return errorret_;
}
inline void ErrorRet::set_errorret(::google::protobuf::uint32 value) {
  set_has_errorret();
  errorret_ = value;
}

// required string errormsg = 2;
inline bool ErrorRet::has_errormsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorRet::set_has_errormsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorRet::clear_has_errormsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorRet::clear_errormsg() {
  if (errormsg_ != &::google::protobuf::internal::kEmptyString) {
    errormsg_->clear();
  }
  clear_has_errormsg();
}
inline const ::std::string& ErrorRet::errormsg() const {
  return *errormsg_;
}
inline void ErrorRet::set_errormsg(const ::std::string& value) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(value);
}
inline void ErrorRet::set_errormsg(const char* value) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(value);
}
inline void ErrorRet::set_errormsg(const char* value, size_t size) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ErrorRet::mutable_errormsg() {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  return errormsg_;
}
inline ::std::string* ErrorRet::release_errormsg() {
  clear_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errormsg_;
    errormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string requestmsg = 3;
inline bool ErrorRet::has_requestmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrorRet::set_has_requestmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrorRet::clear_has_requestmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrorRet::clear_requestmsg() {
  if (requestmsg_ != &::google::protobuf::internal::kEmptyString) {
    requestmsg_->clear();
  }
  clear_has_requestmsg();
}
inline const ::std::string& ErrorRet::requestmsg() const {
  return *requestmsg_;
}
inline void ErrorRet::set_requestmsg(const ::std::string& value) {
  set_has_requestmsg();
  if (requestmsg_ == &::google::protobuf::internal::kEmptyString) {
    requestmsg_ = new ::std::string;
  }
  requestmsg_->assign(value);
}
inline void ErrorRet::set_requestmsg(const char* value) {
  set_has_requestmsg();
  if (requestmsg_ == &::google::protobuf::internal::kEmptyString) {
    requestmsg_ = new ::std::string;
  }
  requestmsg_->assign(value);
}
inline void ErrorRet::set_requestmsg(const char* value, size_t size) {
  set_has_requestmsg();
  if (requestmsg_ == &::google::protobuf::internal::kEmptyString) {
    requestmsg_ = new ::std::string;
  }
  requestmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ErrorRet::mutable_requestmsg() {
  set_has_requestmsg();
  if (requestmsg_ == &::google::protobuf::internal::kEmptyString) {
    requestmsg_ = new ::std::string;
  }
  return requestmsg_;
}
inline ::std::string* ErrorRet::release_requestmsg() {
  clear_has_requestmsg();
  if (requestmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = requestmsg_;
    requestmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ErrorRet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ErrorRet_2eproto__INCLUDED
