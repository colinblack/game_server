// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoFriend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoFriend {

namespace {

const ::google::protobuf::Descriptor* RecommendInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecommendInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoRecommendUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoRecommendUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoRecommendUserResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoRecommendUserResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetFriendsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetFriendsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetFriendsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetFriendsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetFriendsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetFriendsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetFriendsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetFriendsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoConcernReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoConcernReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoConcernResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoConcernResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSConcernReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSConcernReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSConcernResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSConcernResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCancelConcernReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCancelConcernReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDonatePowerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDonatePowerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDonatePowerResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDonatePowerResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSDonatePowerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSDonatePowerReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoFriend_2eproto() {
  protobuf_AddDesc_ProtoFriend_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoFriend.proto");
  GOOGLE_CHECK(file != NULL);
  RecommendInfo_descriptor_ = file->message_type(0);
  static const int RecommendInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, fig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, onlinets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, donationts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, battlets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, battle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, heroid_),
  };
  RecommendInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecommendInfo_descriptor_,
      RecommendInfo::default_instance_,
      RecommendInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecommendInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecommendInfo));
  ProtoRecommendUserReq_descriptor_ = file->message_type(1);
  static const int ProtoRecommendUserReq_offsets_[1] = {
  };
  ProtoRecommendUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoRecommendUserReq_descriptor_,
      ProtoRecommendUserReq::default_instance_,
      ProtoRecommendUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoRecommendUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoRecommendUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoRecommendUserReq));
  ProtoRecommendUserResp_descriptor_ = file->message_type(2);
  static const int ProtoRecommendUserResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoRecommendUserResp, user_),
  };
  ProtoRecommendUserResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoRecommendUserResp_descriptor_,
      ProtoRecommendUserResp::default_instance_,
      ProtoRecommendUserResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoRecommendUserResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoRecommendUserResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoRecommendUserResp));
  ProtoGetFriendsReq_descriptor_ = file->message_type(3);
  static const int ProtoGetFriendsReq_offsets_[1] = {
  };
  ProtoGetFriendsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetFriendsReq_descriptor_,
      ProtoGetFriendsReq::default_instance_,
      ProtoGetFriendsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetFriendsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetFriendsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetFriendsReq));
  ProtoGetFriendsResp_descriptor_ = file->message_type(4);
  static const int ProtoGetFriendsResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetFriendsResp, user_),
  };
  ProtoGetFriendsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetFriendsResp_descriptor_,
      ProtoGetFriendsResp::default_instance_,
      ProtoGetFriendsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetFriendsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetFriendsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetFriendsResp));
  ProtoCSGetFriendsReq_descriptor_ = file->message_type(5);
  static const int ProtoCSGetFriendsReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsReq, othuid_),
  };
  ProtoCSGetFriendsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetFriendsReq_descriptor_,
      ProtoCSGetFriendsReq::default_instance_,
      ProtoCSGetFriendsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetFriendsReq));
  ProtoCSGetFriendsResp_descriptor_ = file->message_type(6);
  static const int ProtoCSGetFriendsResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsResp, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsResp, info_),
  };
  ProtoCSGetFriendsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetFriendsResp_descriptor_,
      ProtoCSGetFriendsResp::default_instance_,
      ProtoCSGetFriendsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetFriendsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetFriendsResp));
  ProtoConcernReq_descriptor_ = file->message_type(7);
  static const int ProtoConcernReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernReq, otherid_),
  };
  ProtoConcernReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoConcernReq_descriptor_,
      ProtoConcernReq::default_instance_,
      ProtoConcernReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoConcernReq));
  ProtoConcernResp_descriptor_ = file->message_type(8);
  static const int ProtoConcernResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernResp, info_),
  };
  ProtoConcernResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoConcernResp_descriptor_,
      ProtoConcernResp::default_instance_,
      ProtoConcernResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoConcernResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoConcernResp));
  ProtoCSConcernReq_descriptor_ = file->message_type(9);
  static const int ProtoCSConcernReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernReq, othuid_),
  };
  ProtoCSConcernReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSConcernReq_descriptor_,
      ProtoCSConcernReq::default_instance_,
      ProtoCSConcernReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSConcernReq));
  ProtoCSConcernResp_descriptor_ = file->message_type(10);
  static const int ProtoCSConcernResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernResp, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernResp, info_),
  };
  ProtoCSConcernResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSConcernResp_descriptor_,
      ProtoCSConcernResp::default_instance_,
      ProtoCSConcernResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSConcernResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSConcernResp));
  ProtoCancelConcernReq_descriptor_ = file->message_type(11);
  static const int ProtoCancelConcernReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCancelConcernReq, otherid_),
  };
  ProtoCancelConcernReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCancelConcernReq_descriptor_,
      ProtoCancelConcernReq::default_instance_,
      ProtoCancelConcernReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCancelConcernReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCancelConcernReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCancelConcernReq));
  ProtoDonatePowerReq_descriptor_ = file->message_type(12);
  static const int ProtoDonatePowerReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerReq, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerReq, otherid_),
  };
  ProtoDonatePowerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDonatePowerReq_descriptor_,
      ProtoDonatePowerReq::default_instance_,
      ProtoDonatePowerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDonatePowerReq));
  ProtoDonatePowerResp_descriptor_ = file->message_type(13);
  static const int ProtoDonatePowerResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerResp, commons_),
  };
  ProtoDonatePowerResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDonatePowerResp_descriptor_,
      ProtoDonatePowerResp::default_instance_,
      ProtoDonatePowerResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDonatePowerResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDonatePowerResp));
  ProtoCSDonatePowerReq_descriptor_ = file->message_type(14);
  static const int ProtoCSDonatePowerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDonatePowerReq, othuid_),
  };
  ProtoCSDonatePowerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSDonatePowerReq_descriptor_,
      ProtoCSDonatePowerReq::default_instance_,
      ProtoCSDonatePowerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDonatePowerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDonatePowerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSDonatePowerReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoFriend_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecommendInfo_descriptor_, &RecommendInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoRecommendUserReq_descriptor_, &ProtoRecommendUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoRecommendUserResp_descriptor_, &ProtoRecommendUserResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetFriendsReq_descriptor_, &ProtoGetFriendsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetFriendsResp_descriptor_, &ProtoGetFriendsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetFriendsReq_descriptor_, &ProtoCSGetFriendsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetFriendsResp_descriptor_, &ProtoCSGetFriendsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoConcernReq_descriptor_, &ProtoConcernReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoConcernResp_descriptor_, &ProtoConcernResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSConcernReq_descriptor_, &ProtoCSConcernReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSConcernResp_descriptor_, &ProtoCSConcernResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCancelConcernReq_descriptor_, &ProtoCancelConcernReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDonatePowerReq_descriptor_, &ProtoDonatePowerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDonatePowerResp_descriptor_, &ProtoDonatePowerResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSDonatePowerReq_descriptor_, &ProtoCSDonatePowerReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoFriend_2eproto() {
  delete RecommendInfo::default_instance_;
  delete RecommendInfo_reflection_;
  delete ProtoRecommendUserReq::default_instance_;
  delete ProtoRecommendUserReq_reflection_;
  delete ProtoRecommendUserResp::default_instance_;
  delete ProtoRecommendUserResp_reflection_;
  delete ProtoGetFriendsReq::default_instance_;
  delete ProtoGetFriendsReq_reflection_;
  delete ProtoGetFriendsResp::default_instance_;
  delete ProtoGetFriendsResp_reflection_;
  delete ProtoCSGetFriendsReq::default_instance_;
  delete ProtoCSGetFriendsReq_reflection_;
  delete ProtoCSGetFriendsResp::default_instance_;
  delete ProtoCSGetFriendsResp_reflection_;
  delete ProtoConcernReq::default_instance_;
  delete ProtoConcernReq_reflection_;
  delete ProtoConcernResp::default_instance_;
  delete ProtoConcernResp_reflection_;
  delete ProtoCSConcernReq::default_instance_;
  delete ProtoCSConcernReq_reflection_;
  delete ProtoCSConcernResp::default_instance_;
  delete ProtoCSConcernResp_reflection_;
  delete ProtoCancelConcernReq::default_instance_;
  delete ProtoCancelConcernReq_reflection_;
  delete ProtoDonatePowerReq::default_instance_;
  delete ProtoDonatePowerReq_reflection_;
  delete ProtoDonatePowerResp::default_instance_;
  delete ProtoDonatePowerResp_reflection_;
  delete ProtoCSDonatePowerReq::default_instance_;
  delete ProtoCSDonatePowerReq_reflection_;
}

void protobuf_AddDesc_ProtoFriend_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ProtoFriend.proto\022\013ProtoFriend\032\020DataCo"
    "mmon.proto\"\255\001\n\rRecommendInfo\022\013\n\003uid\030\001 \002("
    "\r\022\014\n\004name\030\002 \002(\t\022\013\n\003fig\030\003 \002(\t\022\r\n\005level\030\004 "
    "\002(\r\022\r\n\005grade\030\005 \002(\r\022\020\n\010onlineTs\030\006 \001(\r\022\022\n\n"
    "donationTs\030\007 \001(\r\022\020\n\010battleTs\030\010 \001(\r\022\016\n\006ba"
    "ttle\030\t \001(\r\022\016\n\006heroId\030\n \003(\r\"\027\n\025ProtoRecom"
    "mendUserReq\"B\n\026ProtoRecommendUserResp\022(\n"
    "\004user\030\001 \003(\0132\032.ProtoFriend.RecommendInfo\""
    "\024\n\022ProtoGetFriendsReq\"\?\n\023ProtoGetFriends"
    "Resp\022(\n\004user\030\001 \003(\0132\032.ProtoFriend.Recomme"
    "ndInfo\"5\n\024ProtoCSGetFriendsReq\022\r\n\005myuid\030"
    "\001 \002(\r\022\016\n\006othuid\030\002 \003(\r\"P\n\025ProtoCSGetFrien"
    "dsResp\022\r\n\005myuid\030\001 \002(\r\022(\n\004info\030\002 \003(\0132\032.Pr"
    "otoFriend.RecommendInfo\"\"\n\017ProtoConcernR"
    "eq\022\017\n\007otherId\030\001 \002(\r\"<\n\020ProtoConcernResp\022"
    "(\n\004info\030\001 \001(\0132\032.ProtoFriend.RecommendInf"
    "o\"2\n\021ProtoCSConcernReq\022\r\n\005myuid\030\001 \002(\r\022\016\n"
    "\006othuid\030\002 \002(\r\"M\n\022ProtoCSConcernResp\022\r\n\005m"
    "yuid\030\001 \002(\r\022(\n\004info\030\002 \002(\0132\032.ProtoFriend.R"
    "ecommendInfo\"(\n\025ProtoCancelConcernReq\022\017\n"
    "\007otherId\030\001 \002(\r\"2\n\023ProtoDonatePowerReq\022\n\n"
    "\002ts\030\001 \002(\r\022\017\n\007otherId\030\002 \002(\r\"C\n\024ProtoDonat"
    "ePowerResp\022+\n\007commons\030\001 \001(\0132\032.DataCommon"
    ".CommonItemsCPP\"\'\n\025ProtoCSDonatePowerReq"
    "\022\016\n\006othuid\030\001 \002(\r", 976);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoFriend.proto", &protobuf_RegisterTypes);
  RecommendInfo::default_instance_ = new RecommendInfo();
  ProtoRecommendUserReq::default_instance_ = new ProtoRecommendUserReq();
  ProtoRecommendUserResp::default_instance_ = new ProtoRecommendUserResp();
  ProtoGetFriendsReq::default_instance_ = new ProtoGetFriendsReq();
  ProtoGetFriendsResp::default_instance_ = new ProtoGetFriendsResp();
  ProtoCSGetFriendsReq::default_instance_ = new ProtoCSGetFriendsReq();
  ProtoCSGetFriendsResp::default_instance_ = new ProtoCSGetFriendsResp();
  ProtoConcernReq::default_instance_ = new ProtoConcernReq();
  ProtoConcernResp::default_instance_ = new ProtoConcernResp();
  ProtoCSConcernReq::default_instance_ = new ProtoCSConcernReq();
  ProtoCSConcernResp::default_instance_ = new ProtoCSConcernResp();
  ProtoCancelConcernReq::default_instance_ = new ProtoCancelConcernReq();
  ProtoDonatePowerReq::default_instance_ = new ProtoDonatePowerReq();
  ProtoDonatePowerResp::default_instance_ = new ProtoDonatePowerResp();
  ProtoCSDonatePowerReq::default_instance_ = new ProtoCSDonatePowerReq();
  RecommendInfo::default_instance_->InitAsDefaultInstance();
  ProtoRecommendUserReq::default_instance_->InitAsDefaultInstance();
  ProtoRecommendUserResp::default_instance_->InitAsDefaultInstance();
  ProtoGetFriendsReq::default_instance_->InitAsDefaultInstance();
  ProtoGetFriendsResp::default_instance_->InitAsDefaultInstance();
  ProtoCSGetFriendsReq::default_instance_->InitAsDefaultInstance();
  ProtoCSGetFriendsResp::default_instance_->InitAsDefaultInstance();
  ProtoConcernReq::default_instance_->InitAsDefaultInstance();
  ProtoConcernResp::default_instance_->InitAsDefaultInstance();
  ProtoCSConcernReq::default_instance_->InitAsDefaultInstance();
  ProtoCSConcernResp::default_instance_->InitAsDefaultInstance();
  ProtoCancelConcernReq::default_instance_->InitAsDefaultInstance();
  ProtoDonatePowerReq::default_instance_->InitAsDefaultInstance();
  ProtoDonatePowerResp::default_instance_->InitAsDefaultInstance();
  ProtoCSDonatePowerReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoFriend_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoFriend_2eproto {
  StaticDescriptorInitializer_ProtoFriend_2eproto() {
    protobuf_AddDesc_ProtoFriend_2eproto();
  }
} static_descriptor_initializer_ProtoFriend_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RecommendInfo::kUidFieldNumber;
const int RecommendInfo::kNameFieldNumber;
const int RecommendInfo::kFigFieldNumber;
const int RecommendInfo::kLevelFieldNumber;
const int RecommendInfo::kGradeFieldNumber;
const int RecommendInfo::kOnlineTsFieldNumber;
const int RecommendInfo::kDonationTsFieldNumber;
const int RecommendInfo::kBattleTsFieldNumber;
const int RecommendInfo::kBattleFieldNumber;
const int RecommendInfo::kHeroIdFieldNumber;
#endif  // !_MSC_VER

RecommendInfo::RecommendInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecommendInfo::InitAsDefaultInstance() {
}

RecommendInfo::RecommendInfo(const RecommendInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecommendInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  grade_ = 0u;
  onlinets_ = 0u;
  donationts_ = 0u;
  battlets_ = 0u;
  battle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecommendInfo::~RecommendInfo() {
  SharedDtor();
}

void RecommendInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    delete fig_;
  }
  if (this != default_instance_) {
  }
}

void RecommendInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecommendInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecommendInfo_descriptor_;
}

const RecommendInfo& RecommendInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

RecommendInfo* RecommendInfo::default_instance_ = NULL;

RecommendInfo* RecommendInfo::New() const {
  return new RecommendInfo;
}

void RecommendInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_fig()) {
      if (fig_ != &::google::protobuf::internal::kEmptyString) {
        fig_->clear();
      }
    }
    level_ = 0u;
    grade_ = 0u;
    onlinets_ = 0u;
    donationts_ = 0u;
    battlets_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    battle_ = 0u;
  }
  heroid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecommendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fig;
        break;
      }
      
      // required string fig = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fig()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fig().data(), this->fig().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }
      
      // required uint32 level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_onlineTs;
        break;
      }
      
      // optional uint32 onlineTs = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_onlineTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &onlinets_)));
          set_has_onlinets();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_donationTs;
        break;
      }
      
      // optional uint32 donationTs = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_donationTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &donationts_)));
          set_has_donationts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_battleTs;
        break;
      }
      
      // optional uint32 battleTs = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_battleTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlets_)));
          set_has_battlets();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_battle;
        break;
      }
      
      // optional uint32 battle = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_battle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battle_)));
          set_has_battle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_heroId;
        break;
      }
      
      // repeated uint32 heroId = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_heroid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_heroid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_heroId;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecommendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // required string fig = 3;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fig(), output);
  }
  
  // required uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }
  
  // required uint32 grade = 5;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->grade(), output);
  }
  
  // optional uint32 onlineTs = 6;
  if (has_onlinets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->onlinets(), output);
  }
  
  // optional uint32 donationTs = 7;
  if (has_donationts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->donationts(), output);
  }
  
  // optional uint32 battleTs = 8;
  if (has_battlets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->battlets(), output);
  }
  
  // optional uint32 battle = 9;
  if (has_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->battle(), output);
  }
  
  // repeated uint32 heroId = 10;
  for (int i = 0; i < this->heroid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->heroid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecommendInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // required string fig = 3;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fig(), target);
  }
  
  // required uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }
  
  // required uint32 grade = 5;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->grade(), target);
  }
  
  // optional uint32 onlineTs = 6;
  if (has_onlinets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->onlinets(), target);
  }
  
  // optional uint32 donationTs = 7;
  if (has_donationts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->donationts(), target);
  }
  
  // optional uint32 battleTs = 8;
  if (has_battlets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->battlets(), target);
  }
  
  // optional uint32 battle = 9;
  if (has_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->battle(), target);
  }
  
  // repeated uint32 heroId = 10;
  for (int i = 0; i < this->heroid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->heroid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecommendInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string fig = 3;
    if (has_fig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fig());
    }
    
    // required uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required uint32 grade = 5;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // optional uint32 onlineTs = 6;
    if (has_onlinets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->onlinets());
    }
    
    // optional uint32 donationTs = 7;
    if (has_donationts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->donationts());
    }
    
    // optional uint32 battleTs = 8;
    if (has_battlets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battlets());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 battle = 9;
    if (has_battle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battle());
    }
    
  }
  // repeated uint32 heroId = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->heroid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->heroid(i));
    }
    total_size += 1 * this->heroid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecommendInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecommendInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecommendInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecommendInfo::MergeFrom(const RecommendInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroid_.MergeFrom(from.heroid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_fig()) {
      set_fig(from.fig());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_onlinets()) {
      set_onlinets(from.onlinets());
    }
    if (from.has_donationts()) {
      set_donationts(from.donationts());
    }
    if (from.has_battlets()) {
      set_battlets(from.battlets());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_battle()) {
      set_battle(from.battle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecommendInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecommendInfo::CopyFrom(const RecommendInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecommendInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void RecommendInfo::Swap(RecommendInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(fig_, other->fig_);
    std::swap(level_, other->level_);
    std::swap(grade_, other->grade_);
    std::swap(onlinets_, other->onlinets_);
    std::swap(donationts_, other->donationts_);
    std::swap(battlets_, other->battlets_);
    std::swap(battle_, other->battle_);
    heroid_.Swap(&other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecommendInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecommendInfo_descriptor_;
  metadata.reflection = RecommendInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoRecommendUserReq::ProtoRecommendUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoRecommendUserReq::InitAsDefaultInstance() {
}

ProtoRecommendUserReq::ProtoRecommendUserReq(const ProtoRecommendUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoRecommendUserReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoRecommendUserReq::~ProtoRecommendUserReq() {
  SharedDtor();
}

void ProtoRecommendUserReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoRecommendUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoRecommendUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoRecommendUserReq_descriptor_;
}

const ProtoRecommendUserReq& ProtoRecommendUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoRecommendUserReq* ProtoRecommendUserReq::default_instance_ = NULL;

ProtoRecommendUserReq* ProtoRecommendUserReq::New() const {
  return new ProtoRecommendUserReq;
}

void ProtoRecommendUserReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoRecommendUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoRecommendUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoRecommendUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoRecommendUserReq::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoRecommendUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoRecommendUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoRecommendUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoRecommendUserReq::MergeFrom(const ProtoRecommendUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoRecommendUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoRecommendUserReq::CopyFrom(const ProtoRecommendUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoRecommendUserReq::IsInitialized() const {
  
  return true;
}

void ProtoRecommendUserReq::Swap(ProtoRecommendUserReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoRecommendUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoRecommendUserReq_descriptor_;
  metadata.reflection = ProtoRecommendUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoRecommendUserResp::kUserFieldNumber;
#endif  // !_MSC_VER

ProtoRecommendUserResp::ProtoRecommendUserResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoRecommendUserResp::InitAsDefaultInstance() {
}

ProtoRecommendUserResp::ProtoRecommendUserResp(const ProtoRecommendUserResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoRecommendUserResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoRecommendUserResp::~ProtoRecommendUserResp() {
  SharedDtor();
}

void ProtoRecommendUserResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoRecommendUserResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoRecommendUserResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoRecommendUserResp_descriptor_;
}

const ProtoRecommendUserResp& ProtoRecommendUserResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoRecommendUserResp* ProtoRecommendUserResp::default_instance_ = NULL;

ProtoRecommendUserResp* ProtoRecommendUserResp::New() const {
  return new ProtoRecommendUserResp;
}

void ProtoRecommendUserResp::Clear() {
  user_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoRecommendUserResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriend.RecommendInfo user = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_user;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoRecommendUserResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriend.RecommendInfo user = 1;
  for (int i = 0; i < this->user_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoRecommendUserResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriend.RecommendInfo user = 1;
  for (int i = 0; i < this->user_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoRecommendUserResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFriend.RecommendInfo user = 1;
  total_size += 1 * this->user_size();
  for (int i = 0; i < this->user_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoRecommendUserResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoRecommendUserResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoRecommendUserResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoRecommendUserResp::MergeFrom(const ProtoRecommendUserResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_.MergeFrom(from.user_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoRecommendUserResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoRecommendUserResp::CopyFrom(const ProtoRecommendUserResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoRecommendUserResp::IsInitialized() const {
  
  for (int i = 0; i < user_size(); i++) {
    if (!this->user(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoRecommendUserResp::Swap(ProtoRecommendUserResp* other) {
  if (other != this) {
    user_.Swap(&other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoRecommendUserResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoRecommendUserResp_descriptor_;
  metadata.reflection = ProtoRecommendUserResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoGetFriendsReq::ProtoGetFriendsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetFriendsReq::InitAsDefaultInstance() {
}

ProtoGetFriendsReq::ProtoGetFriendsReq(const ProtoGetFriendsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetFriendsReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetFriendsReq::~ProtoGetFriendsReq() {
  SharedDtor();
}

void ProtoGetFriendsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetFriendsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetFriendsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetFriendsReq_descriptor_;
}

const ProtoGetFriendsReq& ProtoGetFriendsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoGetFriendsReq* ProtoGetFriendsReq::default_instance_ = NULL;

ProtoGetFriendsReq* ProtoGetFriendsReq::New() const {
  return new ProtoGetFriendsReq;
}

void ProtoGetFriendsReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetFriendsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoGetFriendsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetFriendsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetFriendsReq::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetFriendsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetFriendsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetFriendsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetFriendsReq::MergeFrom(const ProtoGetFriendsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetFriendsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetFriendsReq::CopyFrom(const ProtoGetFriendsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetFriendsReq::IsInitialized() const {
  
  return true;
}

void ProtoGetFriendsReq::Swap(ProtoGetFriendsReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetFriendsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetFriendsReq_descriptor_;
  metadata.reflection = ProtoGetFriendsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetFriendsResp::kUserFieldNumber;
#endif  // !_MSC_VER

ProtoGetFriendsResp::ProtoGetFriendsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetFriendsResp::InitAsDefaultInstance() {
}

ProtoGetFriendsResp::ProtoGetFriendsResp(const ProtoGetFriendsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetFriendsResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetFriendsResp::~ProtoGetFriendsResp() {
  SharedDtor();
}

void ProtoGetFriendsResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetFriendsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetFriendsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetFriendsResp_descriptor_;
}

const ProtoGetFriendsResp& ProtoGetFriendsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoGetFriendsResp* ProtoGetFriendsResp::default_instance_ = NULL;

ProtoGetFriendsResp* ProtoGetFriendsResp::New() const {
  return new ProtoGetFriendsResp;
}

void ProtoGetFriendsResp::Clear() {
  user_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetFriendsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriend.RecommendInfo user = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_user;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetFriendsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriend.RecommendInfo user = 1;
  for (int i = 0; i < this->user_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetFriendsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriend.RecommendInfo user = 1;
  for (int i = 0; i < this->user_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetFriendsResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFriend.RecommendInfo user = 1;
  total_size += 1 * this->user_size();
  for (int i = 0; i < this->user_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetFriendsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetFriendsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetFriendsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetFriendsResp::MergeFrom(const ProtoGetFriendsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_.MergeFrom(from.user_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetFriendsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetFriendsResp::CopyFrom(const ProtoGetFriendsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetFriendsResp::IsInitialized() const {
  
  for (int i = 0; i < user_size(); i++) {
    if (!this->user(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoGetFriendsResp::Swap(ProtoGetFriendsResp* other) {
  if (other != this) {
    user_.Swap(&other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetFriendsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetFriendsResp_descriptor_;
  metadata.reflection = ProtoGetFriendsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetFriendsReq::kMyuidFieldNumber;
const int ProtoCSGetFriendsReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetFriendsReq::ProtoCSGetFriendsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetFriendsReq::InitAsDefaultInstance() {
}

ProtoCSGetFriendsReq::ProtoCSGetFriendsReq(const ProtoCSGetFriendsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetFriendsReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetFriendsReq::~ProtoCSGetFriendsReq() {
  SharedDtor();
}

void ProtoCSGetFriendsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetFriendsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetFriendsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetFriendsReq_descriptor_;
}

const ProtoCSGetFriendsReq& ProtoCSGetFriendsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCSGetFriendsReq* ProtoCSGetFriendsReq::default_instance_ = NULL;

ProtoCSGetFriendsReq* ProtoCSGetFriendsReq::New() const {
  return new ProtoCSGetFriendsReq;
}

void ProtoCSGetFriendsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
  }
  othuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetFriendsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        break;
      }
      
      // repeated uint32 othuid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_othuid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_othuid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetFriendsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // repeated uint32 othuid = 2;
  for (int i = 0; i < this->othuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->othuid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetFriendsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // repeated uint32 othuid = 2;
  for (int i = 0; i < this->othuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->othuid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetFriendsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
  }
  // repeated uint32 othuid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->othuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->othuid(i));
    }
    total_size += 1 * this->othuid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetFriendsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetFriendsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetFriendsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetFriendsReq::MergeFrom(const ProtoCSGetFriendsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  othuid_.MergeFrom(from.othuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetFriendsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetFriendsReq::CopyFrom(const ProtoCSGetFriendsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetFriendsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoCSGetFriendsReq::Swap(ProtoCSGetFriendsReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    othuid_.Swap(&other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetFriendsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetFriendsReq_descriptor_;
  metadata.reflection = ProtoCSGetFriendsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetFriendsResp::kMyuidFieldNumber;
const int ProtoCSGetFriendsResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetFriendsResp::ProtoCSGetFriendsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetFriendsResp::InitAsDefaultInstance() {
}

ProtoCSGetFriendsResp::ProtoCSGetFriendsResp(const ProtoCSGetFriendsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetFriendsResp::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetFriendsResp::~ProtoCSGetFriendsResp() {
  SharedDtor();
}

void ProtoCSGetFriendsResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetFriendsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetFriendsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetFriendsResp_descriptor_;
}

const ProtoCSGetFriendsResp& ProtoCSGetFriendsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCSGetFriendsResp* ProtoCSGetFriendsResp::default_instance_ = NULL;

ProtoCSGetFriendsResp* ProtoCSGetFriendsResp::New() const {
  return new ProtoCSGetFriendsResp;
}

void ProtoCSGetFriendsResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
  }
  info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetFriendsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }
      
      // repeated .ProtoFriend.RecommendInfo info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetFriendsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // repeated .ProtoFriend.RecommendInfo info = 2;
  for (int i = 0; i < this->info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetFriendsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // repeated .ProtoFriend.RecommendInfo info = 2;
  for (int i = 0; i < this->info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetFriendsResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
  }
  // repeated .ProtoFriend.RecommendInfo info = 2;
  total_size += 1 * this->info_size();
  for (int i = 0; i < this->info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetFriendsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetFriendsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetFriendsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetFriendsResp::MergeFrom(const ProtoCSGetFriendsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  info_.MergeFrom(from.info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetFriendsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetFriendsResp::CopyFrom(const ProtoCSGetFriendsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetFriendsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < info_size(); i++) {
    if (!this->info(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoCSGetFriendsResp::Swap(ProtoCSGetFriendsResp* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    info_.Swap(&other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetFriendsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetFriendsResp_descriptor_;
  metadata.reflection = ProtoCSGetFriendsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoConcernReq::kOtherIdFieldNumber;
#endif  // !_MSC_VER

ProtoConcernReq::ProtoConcernReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoConcernReq::InitAsDefaultInstance() {
}

ProtoConcernReq::ProtoConcernReq(const ProtoConcernReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoConcernReq::SharedCtor() {
  _cached_size_ = 0;
  otherid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoConcernReq::~ProtoConcernReq() {
  SharedDtor();
}

void ProtoConcernReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoConcernReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoConcernReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoConcernReq_descriptor_;
}

const ProtoConcernReq& ProtoConcernReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoConcernReq* ProtoConcernReq::default_instance_ = NULL;

ProtoConcernReq* ProtoConcernReq::New() const {
  return new ProtoConcernReq;
}

void ProtoConcernReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    otherid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoConcernReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 otherId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otherid_)));
          set_has_otherid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoConcernReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 otherId = 1;
  if (has_otherid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->otherid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoConcernReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 otherId = 1;
  if (has_otherid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->otherid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoConcernReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 otherId = 1;
    if (has_otherid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otherid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoConcernReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoConcernReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoConcernReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoConcernReq::MergeFrom(const ProtoConcernReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_otherid()) {
      set_otherid(from.otherid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoConcernReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoConcernReq::CopyFrom(const ProtoConcernReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoConcernReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoConcernReq::Swap(ProtoConcernReq* other) {
  if (other != this) {
    std::swap(otherid_, other->otherid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoConcernReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoConcernReq_descriptor_;
  metadata.reflection = ProtoConcernReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoConcernResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoConcernResp::ProtoConcernResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoConcernResp::InitAsDefaultInstance() {
  info_ = const_cast< ::ProtoFriend::RecommendInfo*>(&::ProtoFriend::RecommendInfo::default_instance());
}

ProtoConcernResp::ProtoConcernResp(const ProtoConcernResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoConcernResp::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoConcernResp::~ProtoConcernResp() {
  SharedDtor();
}

void ProtoConcernResp::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void ProtoConcernResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoConcernResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoConcernResp_descriptor_;
}

const ProtoConcernResp& ProtoConcernResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoConcernResp* ProtoConcernResp::default_instance_ = NULL;

ProtoConcernResp* ProtoConcernResp::New() const {
  return new ProtoConcernResp;
}

void ProtoConcernResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_info()) {
      if (info_ != NULL) info_->::ProtoFriend::RecommendInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoConcernResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoFriend.RecommendInfo info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoConcernResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoFriend.RecommendInfo info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoConcernResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoFriend.RecommendInfo info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoConcernResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoFriend.RecommendInfo info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoConcernResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoConcernResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoConcernResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoConcernResp::MergeFrom(const ProtoConcernResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::ProtoFriend::RecommendInfo::MergeFrom(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoConcernResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoConcernResp::CopyFrom(const ProtoConcernResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoConcernResp::IsInitialized() const {
  
  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  return true;
}

void ProtoConcernResp::Swap(ProtoConcernResp* other) {
  if (other != this) {
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoConcernResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoConcernResp_descriptor_;
  metadata.reflection = ProtoConcernResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSConcernReq::kMyuidFieldNumber;
const int ProtoCSConcernReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

ProtoCSConcernReq::ProtoCSConcernReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSConcernReq::InitAsDefaultInstance() {
}

ProtoCSConcernReq::ProtoCSConcernReq(const ProtoCSConcernReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSConcernReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSConcernReq::~ProtoCSConcernReq() {
  SharedDtor();
}

void ProtoCSConcernReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSConcernReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSConcernReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSConcernReq_descriptor_;
}

const ProtoCSConcernReq& ProtoCSConcernReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCSConcernReq* ProtoCSConcernReq::default_instance_ = NULL;

ProtoCSConcernReq* ProtoCSConcernReq::New() const {
  return new ProtoCSConcernReq;
}

void ProtoCSConcernReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    othuid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSConcernReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        break;
      }
      
      // required uint32 othuid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSConcernReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 othuid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSConcernReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 othuid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSConcernReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 othuid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSConcernReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSConcernReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSConcernReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSConcernReq::MergeFrom(const ProtoCSConcernReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSConcernReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSConcernReq::CopyFrom(const ProtoCSConcernReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSConcernReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoCSConcernReq::Swap(ProtoCSConcernReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSConcernReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSConcernReq_descriptor_;
  metadata.reflection = ProtoCSConcernReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSConcernResp::kMyuidFieldNumber;
const int ProtoCSConcernResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoCSConcernResp::ProtoCSConcernResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSConcernResp::InitAsDefaultInstance() {
  info_ = const_cast< ::ProtoFriend::RecommendInfo*>(&::ProtoFriend::RecommendInfo::default_instance());
}

ProtoCSConcernResp::ProtoCSConcernResp(const ProtoCSConcernResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSConcernResp::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSConcernResp::~ProtoCSConcernResp() {
  SharedDtor();
}

void ProtoCSConcernResp::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void ProtoCSConcernResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSConcernResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSConcernResp_descriptor_;
}

const ProtoCSConcernResp& ProtoCSConcernResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCSConcernResp* ProtoCSConcernResp::default_instance_ = NULL;

ProtoCSConcernResp* ProtoCSConcernResp::New() const {
  return new ProtoCSConcernResp;
}

void ProtoCSConcernResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    if (has_info()) {
      if (info_ != NULL) info_->::ProtoFriend::RecommendInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSConcernResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }
      
      // required .ProtoFriend.RecommendInfo info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSConcernResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required .ProtoFriend.RecommendInfo info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSConcernResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required .ProtoFriend.RecommendInfo info = 2;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSConcernResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required .ProtoFriend.RecommendInfo info = 2;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSConcernResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSConcernResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSConcernResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSConcernResp::MergeFrom(const ProtoCSConcernResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_info()) {
      mutable_info()->::ProtoFriend::RecommendInfo::MergeFrom(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSConcernResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSConcernResp::CopyFrom(const ProtoCSConcernResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSConcernResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  return true;
}

void ProtoCSConcernResp::Swap(ProtoCSConcernResp* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSConcernResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSConcernResp_descriptor_;
  metadata.reflection = ProtoCSConcernResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCancelConcernReq::kOtherIdFieldNumber;
#endif  // !_MSC_VER

ProtoCancelConcernReq::ProtoCancelConcernReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCancelConcernReq::InitAsDefaultInstance() {
}

ProtoCancelConcernReq::ProtoCancelConcernReq(const ProtoCancelConcernReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCancelConcernReq::SharedCtor() {
  _cached_size_ = 0;
  otherid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCancelConcernReq::~ProtoCancelConcernReq() {
  SharedDtor();
}

void ProtoCancelConcernReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCancelConcernReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCancelConcernReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCancelConcernReq_descriptor_;
}

const ProtoCancelConcernReq& ProtoCancelConcernReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCancelConcernReq* ProtoCancelConcernReq::default_instance_ = NULL;

ProtoCancelConcernReq* ProtoCancelConcernReq::New() const {
  return new ProtoCancelConcernReq;
}

void ProtoCancelConcernReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    otherid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCancelConcernReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 otherId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otherid_)));
          set_has_otherid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCancelConcernReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 otherId = 1;
  if (has_otherid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->otherid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCancelConcernReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 otherId = 1;
  if (has_otherid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->otherid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCancelConcernReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 otherId = 1;
    if (has_otherid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otherid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCancelConcernReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCancelConcernReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCancelConcernReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCancelConcernReq::MergeFrom(const ProtoCancelConcernReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_otherid()) {
      set_otherid(from.otherid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCancelConcernReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCancelConcernReq::CopyFrom(const ProtoCancelConcernReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCancelConcernReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoCancelConcernReq::Swap(ProtoCancelConcernReq* other) {
  if (other != this) {
    std::swap(otherid_, other->otherid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCancelConcernReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCancelConcernReq_descriptor_;
  metadata.reflection = ProtoCancelConcernReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoDonatePowerReq::kTsFieldNumber;
const int ProtoDonatePowerReq::kOtherIdFieldNumber;
#endif  // !_MSC_VER

ProtoDonatePowerReq::ProtoDonatePowerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDonatePowerReq::InitAsDefaultInstance() {
}

ProtoDonatePowerReq::ProtoDonatePowerReq(const ProtoDonatePowerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDonatePowerReq::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  otherid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDonatePowerReq::~ProtoDonatePowerReq() {
  SharedDtor();
}

void ProtoDonatePowerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoDonatePowerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDonatePowerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDonatePowerReq_descriptor_;
}

const ProtoDonatePowerReq& ProtoDonatePowerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoDonatePowerReq* ProtoDonatePowerReq::default_instance_ = NULL;

ProtoDonatePowerReq* ProtoDonatePowerReq::New() const {
  return new ProtoDonatePowerReq;
}

void ProtoDonatePowerReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ts_ = 0u;
    otherid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDonatePowerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_otherId;
        break;
      }
      
      // required uint32 otherId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_otherId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otherid_)));
          set_has_otherid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoDonatePowerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }
  
  // required uint32 otherId = 2;
  if (has_otherid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->otherid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDonatePowerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }
  
  // required uint32 otherId = 2;
  if (has_otherid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->otherid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDonatePowerReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }
    
    // required uint32 otherId = 2;
    if (has_otherid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otherid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDonatePowerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDonatePowerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDonatePowerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDonatePowerReq::MergeFrom(const ProtoDonatePowerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_otherid()) {
      set_otherid(from.otherid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDonatePowerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDonatePowerReq::CopyFrom(const ProtoDonatePowerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDonatePowerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoDonatePowerReq::Swap(ProtoDonatePowerReq* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(otherid_, other->otherid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDonatePowerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDonatePowerReq_descriptor_;
  metadata.reflection = ProtoDonatePowerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoDonatePowerResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ProtoDonatePowerResp::ProtoDonatePowerResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDonatePowerResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ProtoDonatePowerResp::ProtoDonatePowerResp(const ProtoDonatePowerResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDonatePowerResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDonatePowerResp::~ProtoDonatePowerResp() {
  SharedDtor();
}

void ProtoDonatePowerResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ProtoDonatePowerResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDonatePowerResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDonatePowerResp_descriptor_;
}

const ProtoDonatePowerResp& ProtoDonatePowerResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoDonatePowerResp* ProtoDonatePowerResp::default_instance_ = NULL;

ProtoDonatePowerResp* ProtoDonatePowerResp::New() const {
  return new ProtoDonatePowerResp;
}

void ProtoDonatePowerResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDonatePowerResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoDonatePowerResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDonatePowerResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDonatePowerResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDonatePowerResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDonatePowerResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDonatePowerResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDonatePowerResp::MergeFrom(const ProtoDonatePowerResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDonatePowerResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDonatePowerResp::CopyFrom(const ProtoDonatePowerResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDonatePowerResp::IsInitialized() const {
  
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ProtoDonatePowerResp::Swap(ProtoDonatePowerResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDonatePowerResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDonatePowerResp_descriptor_;
  metadata.reflection = ProtoDonatePowerResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSDonatePowerReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

ProtoCSDonatePowerReq::ProtoCSDonatePowerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSDonatePowerReq::InitAsDefaultInstance() {
}

ProtoCSDonatePowerReq::ProtoCSDonatePowerReq(const ProtoCSDonatePowerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSDonatePowerReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSDonatePowerReq::~ProtoCSDonatePowerReq() {
  SharedDtor();
}

void ProtoCSDonatePowerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSDonatePowerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSDonatePowerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSDonatePowerReq_descriptor_;
}

const ProtoCSDonatePowerReq& ProtoCSDonatePowerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();  return *default_instance_;
}

ProtoCSDonatePowerReq* ProtoCSDonatePowerReq::default_instance_ = NULL;

ProtoCSDonatePowerReq* ProtoCSDonatePowerReq::New() const {
  return new ProtoCSDonatePowerReq;
}

void ProtoCSDonatePowerReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    othuid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSDonatePowerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSDonatePowerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSDonatePowerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSDonatePowerReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSDonatePowerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSDonatePowerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSDonatePowerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSDonatePowerReq::MergeFrom(const ProtoCSDonatePowerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSDonatePowerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSDonatePowerReq::CopyFrom(const ProtoCSDonatePowerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSDonatePowerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoCSDonatePowerReq::Swap(ProtoCSDonatePowerReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSDonatePowerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSDonatePowerReq_descriptor_;
  metadata.reflection = ProtoCSDonatePowerReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoFriend

// @@protoc_insertion_point(global_scope)
