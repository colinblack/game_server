// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoCards.proto

#ifndef PROTOBUF_ProtoCards_2eproto__INCLUDED
#define PROTOBUF_ProtoCards_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoCards {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoCards_2eproto();
void protobuf_AssignDesc_ProtoCards_2eproto();
void protobuf_ShutdownFile_ProtoCards_2eproto();

class UserCardsCPP;
class UnlockCardsCPP;
class CardsAllChangeCPP;
class ProtoUpdateCardReq;
class ProtoUpdateCardResp;
class ProtoDupCardReq;
class ProtoDupCardResp;
class ProtoDelCardReq;
class ProtoDelCardResp;
class ProtoBuyCardReq;
class ProtoBuyCardResp;

// ===================================================================

class UserCardsCPP : public ::google::protobuf::Message {
 public:
  UserCardsCPP();
  virtual ~UserCardsCPP();
  
  UserCardsCPP(const UserCardsCPP& from);
  
  inline UserCardsCPP& operator=(const UserCardsCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCardsCPP& default_instance();
  
  void Swap(UserCardsCPP* other);
  
  // implements Message ----------------------------------------------
  
  UserCardsCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCardsCPP& from);
  void MergeFrom(const UserCardsCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);
  
  // required uint32 cardId = 2;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 2;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);
  
  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.UserCardsCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_cardid();
  inline void clear_has_cardid();
  inline void set_has_star();
  inline void clear_has_star();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 cardid_;
  ::google::protobuf::uint32 star_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static UserCardsCPP* default_instance_;
};
// -------------------------------------------------------------------

class UnlockCardsCPP : public ::google::protobuf::Message {
 public:
  UnlockCardsCPP();
  virtual ~UnlockCardsCPP();
  
  UnlockCardsCPP(const UnlockCardsCPP& from);
  
  inline UnlockCardsCPP& operator=(const UnlockCardsCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockCardsCPP& default_instance();
  
  void Swap(UnlockCardsCPP* other);
  
  // implements Message ----------------------------------------------
  
  UnlockCardsCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockCardsCPP& from);
  void MergeFrom(const UnlockCardsCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.UnlockCardsCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static UnlockCardsCPP* default_instance_;
};
// -------------------------------------------------------------------

class CardsAllChangeCPP : public ::google::protobuf::Message {
 public:
  CardsAllChangeCPP();
  virtual ~CardsAllChangeCPP();
  
  CardsAllChangeCPP(const CardsAllChangeCPP& from);
  
  inline CardsAllChangeCPP& operator=(const CardsAllChangeCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardsAllChangeCPP& default_instance();
  
  void Swap(CardsAllChangeCPP* other);
  
  // implements Message ----------------------------------------------
  
  CardsAllChangeCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardsAllChangeCPP& from);
  void MergeFrom(const CardsAllChangeCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoCards.UserCardsCPP cards = 1;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 1;
  inline const ::ProtoCards::UserCardsCPP& cards(int index) const;
  inline ::ProtoCards::UserCardsCPP* mutable_cards(int index);
  inline ::ProtoCards::UserCardsCPP* add_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
      cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
      mutable_cards();
  
  // @@protoc_insertion_point(class_scope:ProtoCards.CardsAllChangeCPP)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP > cards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static CardsAllChangeCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProtoUpdateCardReq : public ::google::protobuf::Message {
 public:
  ProtoUpdateCardReq();
  virtual ~ProtoUpdateCardReq();
  
  ProtoUpdateCardReq(const ProtoUpdateCardReq& from);
  
  inline ProtoUpdateCardReq& operator=(const ProtoUpdateCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoUpdateCardReq& default_instance();
  
  void Swap(ProtoUpdateCardReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoUpdateCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoUpdateCardReq& from);
  void MergeFrom(const ProtoUpdateCardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cardId = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);
  
  // required uint32 ud = 2;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 2;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoUpdateCardReq)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();
  inline void set_has_ud();
  inline void clear_has_ud();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cardid_;
  ::google::protobuf::uint32 ud_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoUpdateCardReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoUpdateCardResp : public ::google::protobuf::Message {
 public:
  ProtoUpdateCardResp();
  virtual ~ProtoUpdateCardResp();
  
  ProtoUpdateCardResp(const ProtoUpdateCardResp& from);
  
  inline ProtoUpdateCardResp& operator=(const ProtoUpdateCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoUpdateCardResp& default_instance();
  
  void Swap(ProtoUpdateCardResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoUpdateCardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoUpdateCardResp& from);
  void MergeFrom(const ProtoUpdateCardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoUpdateCardResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoUpdateCardResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoDupCardReq : public ::google::protobuf::Message {
 public:
  ProtoDupCardReq();
  virtual ~ProtoDupCardReq();
  
  ProtoDupCardReq(const ProtoDupCardReq& from);
  
  inline ProtoDupCardReq& operator=(const ProtoDupCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDupCardReq& default_instance();
  
  void Swap(ProtoDupCardReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoDupCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDupCardReq& from);
  void MergeFrom(const ProtoDupCardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoDupCardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoDupCardReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoDupCardResp : public ::google::protobuf::Message {
 public:
  ProtoDupCardResp();
  virtual ~ProtoDupCardResp();
  
  ProtoDupCardResp(const ProtoDupCardResp& from);
  
  inline ProtoDupCardResp& operator=(const ProtoDupCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDupCardResp& default_instance();
  
  void Swap(ProtoDupCardResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoDupCardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDupCardResp& from);
  void MergeFrom(const ProtoDupCardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoCards.CardsAllChangeCPP item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ProtoCards::CardsAllChangeCPP& item() const;
  inline ::ProtoCards::CardsAllChangeCPP* mutable_item();
  inline ::ProtoCards::CardsAllChangeCPP* release_item();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoDupCardResp)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoCards::CardsAllChangeCPP* item_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoDupCardResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoDelCardReq : public ::google::protobuf::Message {
 public:
  ProtoDelCardReq();
  virtual ~ProtoDelCardReq();
  
  ProtoDelCardReq(const ProtoDelCardReq& from);
  
  inline ProtoDelCardReq& operator=(const ProtoDelCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDelCardReq& default_instance();
  
  void Swap(ProtoDelCardReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoDelCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDelCardReq& from);
  void MergeFrom(const ProtoDelCardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cardId = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);
  
  // required uint32 ud = 2;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 2;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoDelCardReq)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();
  inline void set_has_ud();
  inline void clear_has_ud();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cardid_;
  ::google::protobuf::uint32 ud_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoDelCardReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoDelCardResp : public ::google::protobuf::Message {
 public:
  ProtoDelCardResp();
  virtual ~ProtoDelCardResp();
  
  ProtoDelCardResp(const ProtoDelCardResp& from);
  
  inline ProtoDelCardResp& operator=(const ProtoDelCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDelCardResp& default_instance();
  
  void Swap(ProtoDelCardResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoDelCardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDelCardResp& from);
  void MergeFrom(const ProtoDelCardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoDelCardResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoDelCardResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBuyCardReq : public ::google::protobuf::Message {
 public:
  ProtoBuyCardReq();
  virtual ~ProtoBuyCardReq();
  
  ProtoBuyCardReq(const ProtoBuyCardReq& from);
  
  inline ProtoBuyCardReq& operator=(const ProtoBuyCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBuyCardReq& default_instance();
  
  void Swap(ProtoBuyCardReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBuyCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBuyCardReq& from);
  void MergeFrom(const ProtoBuyCardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cardId = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoBuyCardReq)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cardid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBuyCardReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBuyCardResp : public ::google::protobuf::Message {
 public:
  ProtoBuyCardResp();
  virtual ~ProtoBuyCardResp();
  
  ProtoBuyCardResp(const ProtoBuyCardResp& from);
  
  inline ProtoBuyCardResp& operator=(const ProtoBuyCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBuyCardResp& default_instance();
  
  void Swap(ProtoBuyCardResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBuyCardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBuyCardResp& from);
  void MergeFrom(const ProtoBuyCardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoCards.CardsAllChangeCPP item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ProtoCards::CardsAllChangeCPP& item() const;
  inline ::ProtoCards::CardsAllChangeCPP* mutable_item();
  inline ::ProtoCards::CardsAllChangeCPP* release_item();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoCards.ProtoBuyCardResp)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoCards::CardsAllChangeCPP* item_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoCards_2eproto();
  friend void protobuf_AssignDesc_ProtoCards_2eproto();
  friend void protobuf_ShutdownFile_ProtoCards_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBuyCardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// UserCardsCPP

// required uint32 ud = 1;
inline bool UserCardsCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCardsCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCardsCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCardsCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 UserCardsCPP::ud() const {
  return ud_;
}
inline void UserCardsCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
}

// required uint32 cardId = 2;
inline bool UserCardsCPP::has_cardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCardsCPP::set_has_cardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCardsCPP::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCardsCPP::clear_cardid() {
  cardid_ = 0u;
  clear_has_cardid();
}
inline ::google::protobuf::uint32 UserCardsCPP::cardid() const {
  return cardid_;
}
inline void UserCardsCPP::set_cardid(::google::protobuf::uint32 value) {
  set_has_cardid();
  cardid_ = value;
}

// optional uint32 star = 3;
inline bool UserCardsCPP::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCardsCPP::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCardsCPP::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCardsCPP::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 UserCardsCPP::star() const {
  return star_;
}
inline void UserCardsCPP::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// UnlockCardsCPP

// required uint32 id = 1;
inline bool UnlockCardsCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockCardsCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockCardsCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockCardsCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UnlockCardsCPP::id() const {
  return id_;
}
inline void UnlockCardsCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CardsAllChangeCPP

// repeated .ProtoCards.UserCardsCPP cards = 1;
inline int CardsAllChangeCPP::cards_size() const {
  return cards_.size();
}
inline void CardsAllChangeCPP::clear_cards() {
  cards_.Clear();
}
inline const ::ProtoCards::UserCardsCPP& CardsAllChangeCPP::cards(int index) const {
  return cards_.Get(index);
}
inline ::ProtoCards::UserCardsCPP* CardsAllChangeCPP::mutable_cards(int index) {
  return cards_.Mutable(index);
}
inline ::ProtoCards::UserCardsCPP* CardsAllChangeCPP::add_cards() {
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
CardsAllChangeCPP::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
CardsAllChangeCPP::mutable_cards() {
  return &cards_;
}

// -------------------------------------------------------------------

// ProtoUpdateCardReq

// required uint32 cardId = 1;
inline bool ProtoUpdateCardReq::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoUpdateCardReq::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoUpdateCardReq::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoUpdateCardReq::clear_cardid() {
  cardid_ = 0u;
  clear_has_cardid();
}
inline ::google::protobuf::uint32 ProtoUpdateCardReq::cardid() const {
  return cardid_;
}
inline void ProtoUpdateCardReq::set_cardid(::google::protobuf::uint32 value) {
  set_has_cardid();
  cardid_ = value;
}

// required uint32 ud = 2;
inline bool ProtoUpdateCardReq::has_ud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoUpdateCardReq::set_has_ud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoUpdateCardReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoUpdateCardReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 ProtoUpdateCardReq::ud() const {
  return ud_;
}
inline void ProtoUpdateCardReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
}

// -------------------------------------------------------------------

// ProtoUpdateCardResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoUpdateCardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoUpdateCardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoUpdateCardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoUpdateCardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoUpdateCardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoUpdateCardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoUpdateCardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoDupCardReq

// required uint32 id = 1;
inline bool ProtoDupCardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDupCardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDupCardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDupCardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoDupCardReq::id() const {
  return id_;
}
inline void ProtoDupCardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ProtoDupCardResp

// required .ProtoCards.CardsAllChangeCPP item = 1;
inline bool ProtoDupCardResp::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDupCardResp::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDupCardResp::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDupCardResp::clear_item() {
  if (item_ != NULL) item_->::ProtoCards::CardsAllChangeCPP::Clear();
  clear_has_item();
}
inline const ::ProtoCards::CardsAllChangeCPP& ProtoDupCardResp::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoDupCardResp::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoCards::CardsAllChangeCPP;
  return item_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoDupCardResp::release_item() {
  clear_has_item();
  ::ProtoCards::CardsAllChangeCPP* temp = item_;
  item_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoDupCardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoDupCardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoDupCardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoDupCardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoDupCardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoDupCardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoDupCardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoDelCardReq

// required uint32 cardId = 1;
inline bool ProtoDelCardReq::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDelCardReq::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDelCardReq::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDelCardReq::clear_cardid() {
  cardid_ = 0u;
  clear_has_cardid();
}
inline ::google::protobuf::uint32 ProtoDelCardReq::cardid() const {
  return cardid_;
}
inline void ProtoDelCardReq::set_cardid(::google::protobuf::uint32 value) {
  set_has_cardid();
  cardid_ = value;
}

// required uint32 ud = 2;
inline bool ProtoDelCardReq::has_ud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoDelCardReq::set_has_ud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoDelCardReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoDelCardReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 ProtoDelCardReq::ud() const {
  return ud_;
}
inline void ProtoDelCardReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
}

// -------------------------------------------------------------------

// ProtoDelCardResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoDelCardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDelCardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDelCardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDelCardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoDelCardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoDelCardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoDelCardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoBuyCardReq

// required uint32 cardId = 1;
inline bool ProtoBuyCardReq::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBuyCardReq::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBuyCardReq::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBuyCardReq::clear_cardid() {
  cardid_ = 0u;
  clear_has_cardid();
}
inline ::google::protobuf::uint32 ProtoBuyCardReq::cardid() const {
  return cardid_;
}
inline void ProtoBuyCardReq::set_cardid(::google::protobuf::uint32 value) {
  set_has_cardid();
  cardid_ = value;
}

// -------------------------------------------------------------------

// ProtoBuyCardResp

// required .ProtoCards.CardsAllChangeCPP item = 1;
inline bool ProtoBuyCardResp::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBuyCardResp::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBuyCardResp::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBuyCardResp::clear_item() {
  if (item_ != NULL) item_->::ProtoCards::CardsAllChangeCPP::Clear();
  clear_has_item();
}
inline const ::ProtoCards::CardsAllChangeCPP& ProtoBuyCardResp::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoBuyCardResp::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoCards::CardsAllChangeCPP;
  return item_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoBuyCardResp::release_item() {
  clear_has_item();
  ::ProtoCards::CardsAllChangeCPP* temp = item_;
  item_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoBuyCardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBuyCardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBuyCardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBuyCardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoBuyCardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoBuyCardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoBuyCardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoCards

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoCards_2eproto__INCLUDED
