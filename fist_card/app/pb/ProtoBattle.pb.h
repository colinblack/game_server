// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBattle.proto

#ifndef PROTOBUF_ProtoBattle_2eproto__INCLUDED
#define PROTOBUF_ProtoBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProtoBattleDemo.pb.h"
#include "DataCommon.pb.h"
#include "ProtoHero.pb.h"
#include "ProtoCards.pb.h"
#include "ProtoMartialClub.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBattle {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBattle_2eproto();
void protobuf_AssignDesc_ProtoBattle_2eproto();
void protobuf_ShutdownFile_ProtoBattle_2eproto();

class BattleCommonCPP;
class BattleCardsCPP;
class ProtoBattleHero;
class ProtoBattleTeam;
class ProtoBattleCPP;
class ProtoTurnEndReq;
class ProtoTurnEndResp;
class ProtoPveBattleReq;
class ProtoPveBattleResp;
class ProtoPveBattleResult;
class ProtoGradeBattleReq;
class ProtoGradeBattleResp;
class ProtoGradeBattleResult;
class ProtoRandomUserReq;
class ProtoRandomUserResp;
class ProtoRandomUserResult;
class ProtoRevengeReq;
class ProtoRevengeResp;
class ProtoFriendBattleReq;
class ProtoFriendBattleResp;
class ProtoFriendBattleResult;
class ProtoMartialClubBattleReq;
class ProtoMartialClubBattleResp;
class ProtoMartialClubBattleResult;
class ProtoCSMartialClubBattleReq;
class ProtoCSMartialClubBattleResp;
class ProtoCSSynOthMartialInfo;
class ProtoMatchReq;
class ProtoMatchResp;
class UpgradeRewardReq;
class UpgradeRewardResp;
class DailyRewardReq;
class DailRewardResp;
class WinStreakRewardReq;
class WinStreakRewardResp;
class UpgradeShareRewardReq;
class UpgradeShareRewardResp;
class SetFormationReq;
class SetFormationResp;
class ProtoRefreshReq;
class ProtoRefreshResp;
class ProtoPost;

// ===================================================================

class BattleCommonCPP : public ::google::protobuf::Message {
 public:
  BattleCommonCPP();
  virtual ~BattleCommonCPP();
  
  BattleCommonCPP(const BattleCommonCPP& from);
  
  inline BattleCommonCPP& operator=(const BattleCommonCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleCommonCPP& default_instance();
  
  void Swap(BattleCommonCPP* other);
  
  // implements Message ----------------------------------------------
  
  BattleCommonCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleCommonCPP& from);
  void MergeFrom(const BattleCommonCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 propId = 2;
  inline int propid_size() const;
  inline void clear_propid();
  static const int kPropIdFieldNumber = 2;
  inline ::google::protobuf::uint32 propid(int index) const;
  inline void set_propid(int index, ::google::protobuf::uint32 value);
  inline void add_propid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      propid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_propid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.BattleCommonCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propid_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static BattleCommonCPP* default_instance_;
};
// -------------------------------------------------------------------

class BattleCardsCPP : public ::google::protobuf::Message {
 public:
  BattleCardsCPP();
  virtual ~BattleCardsCPP();
  
  BattleCardsCPP(const BattleCardsCPP& from);
  
  inline BattleCardsCPP& operator=(const BattleCardsCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleCardsCPP& default_instance();
  
  void Swap(BattleCardsCPP* other);
  
  // implements Message ----------------------------------------------
  
  BattleCardsCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleCardsCPP& from);
  void MergeFrom(const BattleCardsCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoCards.UserCardsCPP bag = 1;
  inline int bag_size() const;
  inline void clear_bag();
  static const int kBagFieldNumber = 1;
  inline const ::ProtoCards::UserCardsCPP& bag(int index) const;
  inline ::ProtoCards::UserCardsCPP* mutable_bag(int index);
  inline ::ProtoCards::UserCardsCPP* add_bag();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
      bag() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
      mutable_bag();
  
  // repeated .ProtoCards.UserCardsCPP hand = 2;
  inline int hand_size() const;
  inline void clear_hand();
  static const int kHandFieldNumber = 2;
  inline const ::ProtoCards::UserCardsCPP& hand(int index) const;
  inline ::ProtoCards::UserCardsCPP* mutable_hand(int index);
  inline ::ProtoCards::UserCardsCPP* add_hand();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
      hand() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
      mutable_hand();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.BattleCardsCPP)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP > bag_;
  ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP > hand_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static BattleCardsCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleHero : public ::google::protobuf::Message {
 public:
  ProtoBattleHero();
  virtual ~ProtoBattleHero();
  
  ProtoBattleHero(const ProtoBattleHero& from);
  
  inline ProtoBattleHero& operator=(const ProtoBattleHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleHero& default_instance();
  
  void Swap(ProtoBattleHero* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleHero& from);
  void MergeFrom(const ProtoBattleHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // required uint32 att = 3;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 3;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // required uint32 def = 4;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 4;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // required uint32 shield = 5;
  inline bool has_shield() const;
  inline void clear_shield();
  static const int kShieldFieldNumber = 5;
  inline ::google::protobuf::uint32 shield() const;
  inline void set_shield(::google::protobuf::uint32 value);
  
  // required uint32 battlePower = 6;
  inline bool has_battlepower() const;
  inline void clear_battlepower();
  static const int kBattlePowerFieldNumber = 6;
  inline ::google::protobuf::uint32 battlepower() const;
  inline void set_battlepower(::google::protobuf::uint32 value);
  
  // required double damInc = 7;
  inline bool has_daminc() const;
  inline void clear_daminc();
  static const int kDamIncFieldNumber = 7;
  inline double daminc() const;
  inline void set_daminc(double value);
  
  // required double damDec = 8;
  inline bool has_damdec() const;
  inline void clear_damdec();
  static const int kDamDecFieldNumber = 8;
  inline double damdec() const;
  inline void set_damdec(double value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoBattleHero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_shield();
  inline void clear_has_shield();
  inline void set_has_battlepower();
  inline void clear_has_battlepower();
  inline void set_has_daminc();
  inline void clear_has_daminc();
  inline void set_has_damdec();
  inline void clear_has_damdec();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 shield_;
  ::google::protobuf::uint32 battlepower_;
  double daminc_;
  double damdec_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleHero* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleTeam : public ::google::protobuf::Message {
 public:
  ProtoBattleTeam();
  virtual ~ProtoBattleTeam();
  
  ProtoBattleTeam(const ProtoBattleTeam& from);
  
  inline ProtoBattleTeam& operator=(const ProtoBattleTeam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleTeam& default_instance();
  
  void Swap(ProtoBattleTeam* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleTeam& from);
  void MergeFrom(const ProtoBattleTeam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated .ProtoBattle.ProtoBattleHero heros = 3;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 3;
  inline const ::ProtoBattle::ProtoBattleHero& heros(int index) const;
  inline ::ProtoBattle::ProtoBattleHero* mutable_heros(int index);
  inline ::ProtoBattle::ProtoBattleHero* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattle::ProtoBattleHero >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattle::ProtoBattleHero >*
      mutable_heros();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoBattleTeam)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattle::ProtoBattleHero > heros_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleTeam* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleCPP : public ::google::protobuf::Message {
 public:
  ProtoBattleCPP();
  virtual ~ProtoBattleCPP();
  
  ProtoBattleCPP(const ProtoBattleCPP& from);
  
  inline ProtoBattleCPP& operator=(const ProtoBattleCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleCPP& default_instance();
  
  void Swap(ProtoBattleCPP* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleCPP& from);
  void MergeFrom(const ProtoBattleCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCardsCPP cards = 2;
  inline bool has_cards() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 2;
  inline const ::ProtoBattle::BattleCardsCPP& cards() const;
  inline ::ProtoBattle::BattleCardsCPP* mutable_cards();
  inline ::ProtoBattle::BattleCardsCPP* release_cards();
  
  // required .ProtoBattle.ProtoBattleTeam attacker = 3;
  inline bool has_attacker() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 3;
  inline const ::ProtoBattle::ProtoBattleTeam& attacker() const;
  inline ::ProtoBattle::ProtoBattleTeam* mutable_attacker();
  inline ::ProtoBattle::ProtoBattleTeam* release_attacker();
  
  // required .ProtoBattle.ProtoBattleTeam defender = 4;
  inline bool has_defender() const;
  inline void clear_defender();
  static const int kDefenderFieldNumber = 4;
  inline const ::ProtoBattle::ProtoBattleTeam& defender() const;
  inline ::ProtoBattle::ProtoBattleTeam* mutable_defender();
  inline ::ProtoBattle::ProtoBattleTeam* release_defender();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoBattleCPP)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_cards();
  inline void clear_has_cards();
  inline void set_has_attacker();
  inline void clear_has_attacker();
  inline void set_has_defender();
  inline void clear_has_defender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCardsCPP* cards_;
  ::ProtoBattle::ProtoBattleTeam* attacker_;
  ::ProtoBattle::ProtoBattleTeam* defender_;
  ::google::protobuf::uint32 first_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTurnEndReq : public ::google::protobuf::Message {
 public:
  ProtoTurnEndReq();
  virtual ~ProtoTurnEndReq();
  
  ProtoTurnEndReq(const ProtoTurnEndReq& from);
  
  inline ProtoTurnEndReq& operator=(const ProtoTurnEndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTurnEndReq& default_instance();
  
  void Swap(ProtoTurnEndReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoTurnEndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTurnEndReq& from);
  void MergeFrom(const ProtoTurnEndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoTurnEndReq)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoTurnEndReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTurnEndResp : public ::google::protobuf::Message {
 public:
  ProtoTurnEndResp();
  virtual ~ProtoTurnEndResp();
  
  ProtoTurnEndResp(const ProtoTurnEndResp& from);
  
  inline ProtoTurnEndResp& operator=(const ProtoTurnEndResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTurnEndResp& default_instance();
  
  void Swap(ProtoTurnEndResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoTurnEndResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTurnEndResp& from);
  void MergeFrom(const ProtoTurnEndResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 nextUser = 1;
  inline bool has_nextuser() const;
  inline void clear_nextuser();
  static const int kNextUserFieldNumber = 1;
  inline ::google::protobuf::uint32 nextuser() const;
  inline void set_nextuser(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCardsCPP cards = 2;
  inline bool has_cards() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 2;
  inline const ::ProtoBattle::BattleCardsCPP& cards() const;
  inline ::ProtoBattle::BattleCardsCPP* mutable_cards();
  inline ::ProtoBattle::BattleCardsCPP* release_cards();
  
  // required uint32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoTurnEndResp)
 private:
  inline void set_has_nextuser();
  inline void clear_has_nextuser();
  inline void set_has_cards();
  inline void clear_has_cards();
  inline void set_has_point();
  inline void clear_has_point();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCardsCPP* cards_;
  ::google::protobuf::uint32 nextuser_;
  ::google::protobuf::uint32 point_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoTurnEndResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPveBattleReq : public ::google::protobuf::Message {
 public:
  ProtoPveBattleReq();
  virtual ~ProtoPveBattleReq();
  
  ProtoPveBattleReq(const ProtoPveBattleReq& from);
  
  inline ProtoPveBattleReq& operator=(const ProtoPveBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPveBattleReq& default_instance();
  
  void Swap(ProtoPveBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPveBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPveBattleReq& from);
  void MergeFrom(const ProtoPveBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattle.BattleCommonCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPveBattleReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommonCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPveBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPveBattleResp : public ::google::protobuf::Message {
 public:
  ProtoPveBattleResp();
  virtual ~ProtoPveBattleResp();
  
  ProtoPveBattleResp(const ProtoPveBattleResp& from);
  
  inline ProtoPveBattleResp& operator=(const ProtoPveBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPveBattleResp& default_instance();
  
  void Swap(ProtoPveBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPveBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPveBattleResp& from);
  void MergeFrom(const ProtoPveBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPveBattleResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPveBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPveBattleResult : public ::google::protobuf::Message {
 public:
  ProtoPveBattleResult();
  virtual ~ProtoPveBattleResult();
  
  ProtoPveBattleResult(const ProtoPveBattleResult& from);
  
  inline ProtoPveBattleResult& operator=(const ProtoPveBattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPveBattleResult& default_instance();
  
  void Swap(ProtoPveBattleResult* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPveBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPveBattleResult& from);
  void MergeFrom(const ProtoPveBattleResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // optional .ProtoCards.CardsAllChangeCPP dropCards = 2;
  inline bool has_dropcards() const;
  inline void clear_dropcards();
  static const int kDropCardsFieldNumber = 2;
  inline const ::ProtoCards::CardsAllChangeCPP& dropcards() const;
  inline ::ProtoCards::CardsAllChangeCPP* mutable_dropcards();
  inline ::ProtoCards::CardsAllChangeCPP* release_dropcards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPveBattleResult)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_dropcards();
  inline void clear_has_dropcards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoCards::CardsAllChangeCPP* dropcards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPveBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGradeBattleReq : public ::google::protobuf::Message {
 public:
  ProtoGradeBattleReq();
  virtual ~ProtoGradeBattleReq();
  
  ProtoGradeBattleReq(const ProtoGradeBattleReq& from);
  
  inline ProtoGradeBattleReq& operator=(const ProtoGradeBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGradeBattleReq& default_instance();
  
  void Swap(ProtoGradeBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoGradeBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGradeBattleReq& from);
  void MergeFrom(const ProtoGradeBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .ProtoBattle.BattleCommonCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoGradeBattleReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommonCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoGradeBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGradeBattleResp : public ::google::protobuf::Message {
 public:
  ProtoGradeBattleResp();
  virtual ~ProtoGradeBattleResp();
  
  ProtoGradeBattleResp(const ProtoGradeBattleResp& from);
  
  inline ProtoGradeBattleResp& operator=(const ProtoGradeBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGradeBattleResp& default_instance();
  
  void Swap(ProtoGradeBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoGradeBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGradeBattleResp& from);
  void MergeFrom(const ProtoGradeBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoGradeBattleResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoGradeBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGradeBattleResult : public ::google::protobuf::Message {
 public:
  ProtoGradeBattleResult();
  virtual ~ProtoGradeBattleResult();
  
  ProtoGradeBattleResult(const ProtoGradeBattleResult& from);
  
  inline ProtoGradeBattleResult& operator=(const ProtoGradeBattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGradeBattleResult& default_instance();
  
  void Swap(ProtoGradeBattleResult* other);
  
  // implements Message ----------------------------------------------
  
  ProtoGradeBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGradeBattleResult& from);
  void MergeFrom(const ProtoGradeBattleResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // required uint32 dailyScore = 3;
  inline bool has_dailyscore() const;
  inline void clear_dailyscore();
  static const int kDailyScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 dailyscore() const;
  inline void set_dailyscore(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoGradeBattleResult)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_dailyscore();
  inline void clear_has_dailyscore();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 dailyscore_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoGradeBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRandomUserReq : public ::google::protobuf::Message {
 public:
  ProtoRandomUserReq();
  virtual ~ProtoRandomUserReq();
  
  ProtoRandomUserReq(const ProtoRandomUserReq& from);
  
  inline ProtoRandomUserReq& operator=(const ProtoRandomUserReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRandomUserReq& default_instance();
  
  void Swap(ProtoRandomUserReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRandomUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRandomUserReq& from);
  void MergeFrom(const ProtoRandomUserReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .ProtoBattle.BattleCommonCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRandomUserReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommonCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRandomUserReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRandomUserResp : public ::google::protobuf::Message {
 public:
  ProtoRandomUserResp();
  virtual ~ProtoRandomUserResp();
  
  ProtoRandomUserResp(const ProtoRandomUserResp& from);
  
  inline ProtoRandomUserResp& operator=(const ProtoRandomUserResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRandomUserResp& default_instance();
  
  void Swap(ProtoRandomUserResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRandomUserResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRandomUserResp& from);
  void MergeFrom(const ProtoRandomUserResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRandomUserResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRandomUserResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRandomUserResult : public ::google::protobuf::Message {
 public:
  ProtoRandomUserResult();
  virtual ~ProtoRandomUserResult();
  
  ProtoRandomUserResult(const ProtoRandomUserResult& from);
  
  inline ProtoRandomUserResult& operator=(const ProtoRandomUserResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRandomUserResult& default_instance();
  
  void Swap(ProtoRandomUserResult* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRandomUserResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRandomUserResult& from);
  void MergeFrom(const ProtoRandomUserResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRandomUserResult)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRandomUserResult* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRevengeReq : public ::google::protobuf::Message {
 public:
  ProtoRevengeReq();
  virtual ~ProtoRevengeReq();
  
  ProtoRevengeReq(const ProtoRevengeReq& from);
  
  inline ProtoRevengeReq& operator=(const ProtoRevengeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRevengeReq& default_instance();
  
  void Swap(ProtoRevengeReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRevengeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRevengeReq& from);
  void MergeFrom(const ProtoRevengeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .ProtoBattle.BattleCommonCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRevengeReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommonCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRevengeReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRevengeResp : public ::google::protobuf::Message {
 public:
  ProtoRevengeResp();
  virtual ~ProtoRevengeResp();
  
  ProtoRevengeResp(const ProtoRevengeResp& from);
  
  inline ProtoRevengeResp& operator=(const ProtoRevengeResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRevengeResp& default_instance();
  
  void Swap(ProtoRevengeResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRevengeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRevengeResp& from);
  void MergeFrom(const ProtoRevengeResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRevengeResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRevengeResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendBattleReq : public ::google::protobuf::Message {
 public:
  ProtoFriendBattleReq();
  virtual ~ProtoFriendBattleReq();
  
  ProtoFriendBattleReq(const ProtoFriendBattleReq& from);
  
  inline ProtoFriendBattleReq& operator=(const ProtoFriendBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendBattleReq& default_instance();
  
  void Swap(ProtoFriendBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoFriendBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendBattleReq& from);
  void MergeFrom(const ProtoFriendBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 otherId = 1;
  inline bool has_otherid() const;
  inline void clear_otherid();
  static const int kOtherIdFieldNumber = 1;
  inline ::google::protobuf::uint32 otherid() const;
  inline void set_otherid(::google::protobuf::uint32 value);
  
  // optional .ProtoBattle.BattleCommonCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoFriendBattleReq)
 private:
  inline void set_has_otherid();
  inline void clear_has_otherid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommonCPP* common_;
  ::google::protobuf::uint32 otherid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoFriendBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendBattleResp : public ::google::protobuf::Message {
 public:
  ProtoFriendBattleResp();
  virtual ~ProtoFriendBattleResp();
  
  ProtoFriendBattleResp(const ProtoFriendBattleResp& from);
  
  inline ProtoFriendBattleResp& operator=(const ProtoFriendBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendBattleResp& default_instance();
  
  void Swap(ProtoFriendBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoFriendBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendBattleResp& from);
  void MergeFrom(const ProtoFriendBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoFriendBattleResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoFriendBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendBattleResult : public ::google::protobuf::Message {
 public:
  ProtoFriendBattleResult();
  virtual ~ProtoFriendBattleResult();
  
  ProtoFriendBattleResult(const ProtoFriendBattleResult& from);
  
  inline ProtoFriendBattleResult& operator=(const ProtoFriendBattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendBattleResult& default_instance();
  
  void Swap(ProtoFriendBattleResult* other);
  
  // implements Message ----------------------------------------------
  
  ProtoFriendBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendBattleResult& from);
  void MergeFrom(const ProtoFriendBattleResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoFriendBattleResult)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoFriendBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMartialClubBattleReq : public ::google::protobuf::Message {
 public:
  ProtoMartialClubBattleReq();
  virtual ~ProtoMartialClubBattleReq();
  
  ProtoMartialClubBattleReq(const ProtoMartialClubBattleReq& from);
  
  inline ProtoMartialClubBattleReq& operator=(const ProtoMartialClubBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMartialClubBattleReq& default_instance();
  
  void Swap(ProtoMartialClubBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMartialClubBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMartialClubBattleReq& from);
  void MergeFrom(const ProtoMartialClubBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myMartialGrade = 1;
  inline bool has_mymartialgrade() const;
  inline void clear_mymartialgrade();
  static const int kMyMartialGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 mymartialgrade() const;
  inline void set_mymartialgrade(::google::protobuf::uint32 value);
  
  // required uint32 othUid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othMartialGrade = 3;
  inline bool has_othmartialgrade() const;
  inline void clear_othmartialgrade();
  static const int kOthMartialGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 othmartialgrade() const;
  inline void set_othmartialgrade(::google::protobuf::uint32 value);
  
  // optional .ProtoBattle.BattleCommonCPP common = 4;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 4;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMartialClubBattleReq)
 private:
  inline void set_has_mymartialgrade();
  inline void clear_has_mymartialgrade();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmartialgrade();
  inline void clear_has_othmartialgrade();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mymartialgrade_;
  ::google::protobuf::uint32 othuid_;
  ::ProtoBattle::BattleCommonCPP* common_;
  ::google::protobuf::uint32 othmartialgrade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMartialClubBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMartialClubBattleResp : public ::google::protobuf::Message {
 public:
  ProtoMartialClubBattleResp();
  virtual ~ProtoMartialClubBattleResp();
  
  ProtoMartialClubBattleResp(const ProtoMartialClubBattleResp& from);
  
  inline ProtoMartialClubBattleResp& operator=(const ProtoMartialClubBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMartialClubBattleResp& default_instance();
  
  void Swap(ProtoMartialClubBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMartialClubBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMartialClubBattleResp& from);
  void MergeFrom(const ProtoMartialClubBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.ProtoBattleCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::ProtoBattleCPP& common() const;
  inline ::ProtoBattle::ProtoBattleCPP* mutable_common();
  inline ::ProtoBattle::ProtoBattleCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMartialClubBattleResp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::ProtoBattleCPP* common_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMartialClubBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMartialClubBattleResult : public ::google::protobuf::Message {
 public:
  ProtoMartialClubBattleResult();
  virtual ~ProtoMartialClubBattleResult();
  
  ProtoMartialClubBattleResult(const ProtoMartialClubBattleResult& from);
  
  inline ProtoMartialClubBattleResult& operator=(const ProtoMartialClubBattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMartialClubBattleResult& default_instance();
  
  void Swap(ProtoMartialClubBattleResult* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMartialClubBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMartialClubBattleResult& from);
  void MergeFrom(const ProtoMartialClubBattleResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMartialClubBattleResult)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMartialClubBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSMartialClubBattleReq : public ::google::protobuf::Message {
 public:
  ProtoCSMartialClubBattleReq();
  virtual ~ProtoCSMartialClubBattleReq();
  
  ProtoCSMartialClubBattleReq(const ProtoCSMartialClubBattleReq& from);
  
  inline ProtoCSMartialClubBattleReq& operator=(const ProtoCSMartialClubBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSMartialClubBattleReq& default_instance();
  
  void Swap(ProtoCSMartialClubBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSMartialClubBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSMartialClubBattleReq& from);
  void MergeFrom(const ProtoCSMartialClubBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myUid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);
  
  // required uint32 mymGrade = 2;
  inline bool has_mymgrade() const;
  inline void clear_mymgrade();
  static const int kMymGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 mymgrade() const;
  inline void set_mymgrade(::google::protobuf::uint32 value);
  
  // required uint32 othUid = 3;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 3;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othmGrade = 4;
  inline bool has_othmgrade() const;
  inline void clear_othmgrade();
  static const int kOthmGradeFieldNumber = 4;
  inline ::google::protobuf::uint32 othmgrade() const;
  inline void set_othmgrade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSMartialClubBattleReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_mymgrade();
  inline void clear_has_mymgrade();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmgrade();
  inline void clear_has_othmgrade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 mymgrade_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 othmgrade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSMartialClubBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSMartialClubBattleResp : public ::google::protobuf::Message {
 public:
  ProtoCSMartialClubBattleResp();
  virtual ~ProtoCSMartialClubBattleResp();
  
  ProtoCSMartialClubBattleResp(const ProtoCSMartialClubBattleResp& from);
  
  inline ProtoCSMartialClubBattleResp& operator=(const ProtoCSMartialClubBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSMartialClubBattleResp& default_instance();
  
  void Swap(ProtoCSMartialClubBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSMartialClubBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSMartialClubBattleResp& from);
  void MergeFrom(const ProtoCSMartialClubBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myUid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);
  
  // required uint32 mymGrade = 2;
  inline bool has_mymgrade() const;
  inline void clear_mymgrade();
  static const int kMymGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 mymgrade() const;
  inline void set_mymgrade(::google::protobuf::uint32 value);
  
  // required uint32 othUid = 3;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 3;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othmGrade = 4;
  inline bool has_othmgrade() const;
  inline void clear_othmgrade();
  static const int kOthmGradeFieldNumber = 4;
  inline ::google::protobuf::uint32 othmgrade() const;
  inline void set_othmgrade(::google::protobuf::uint32 value);
  
  // required uint32 othProtectTs = 5;
  inline bool has_othprotectts() const;
  inline void clear_othprotectts();
  static const int kOthProtectTsFieldNumber = 5;
  inline ::google::protobuf::uint32 othprotectts() const;
  inline void set_othprotectts(::google::protobuf::uint32 value);
  
  // required uint32 othCoins = 6;
  inline bool has_othcoins() const;
  inline void clear_othcoins();
  static const int kOthCoinsFieldNumber = 6;
  inline ::google::protobuf::uint32 othcoins() const;
  inline void set_othcoins(::google::protobuf::uint32 value);
  
  // repeated .ProtoMartialClub.MartialClubProp othProps = 7;
  inline int othprops_size() const;
  inline void clear_othprops();
  static const int kOthPropsFieldNumber = 7;
  inline const ::ProtoMartialClub::MartialClubProp& othprops(int index) const;
  inline ::ProtoMartialClub::MartialClubProp* mutable_othprops(int index);
  inline ::ProtoMartialClub::MartialClubProp* add_othprops();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >&
      othprops() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >*
      mutable_othprops();
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 8;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 8;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // optional .ProtoBattle.BattleCommonCPP common = 9;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 9;
  inline const ::ProtoBattle::BattleCommonCPP& common() const;
  inline ::ProtoBattle::BattleCommonCPP* mutable_common();
  inline ::ProtoBattle::BattleCommonCPP* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSMartialClubBattleResp)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_mymgrade();
  inline void clear_has_mymgrade();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmgrade();
  inline void clear_has_othmgrade();
  inline void set_has_othprotectts();
  inline void clear_has_othprotectts();
  inline void set_has_othcoins();
  inline void clear_has_othcoins();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 mymgrade_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 othmgrade_;
  ::google::protobuf::uint32 othprotectts_;
  ::google::protobuf::uint32 othcoins_;
  ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp > othprops_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  ::ProtoBattle::BattleCommonCPP* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSMartialClubBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSSynOthMartialInfo : public ::google::protobuf::Message {
 public:
  ProtoCSSynOthMartialInfo();
  virtual ~ProtoCSSynOthMartialInfo();
  
  ProtoCSSynOthMartialInfo(const ProtoCSSynOthMartialInfo& from);
  
  inline ProtoCSSynOthMartialInfo& operator=(const ProtoCSSynOthMartialInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSSynOthMartialInfo& default_instance();
  
  void Swap(ProtoCSSynOthMartialInfo* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSSynOthMartialInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSSynOthMartialInfo& from);
  void MergeFrom(const ProtoCSSynOthMartialInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 othUid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othmGrade = 2;
  inline bool has_othmgrade() const;
  inline void clear_othmgrade();
  static const int kOthmGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 othmgrade() const;
  inline void set_othmgrade(::google::protobuf::uint32 value);
  
  // required uint32 othCoins = 3;
  inline bool has_othcoins() const;
  inline void clear_othcoins();
  static const int kOthCoinsFieldNumber = 3;
  inline ::google::protobuf::uint32 othcoins() const;
  inline void set_othcoins(::google::protobuf::uint32 value);
  
  // required uint32 othProtectTs = 4;
  inline bool has_othprotectts() const;
  inline void clear_othprotectts();
  static const int kOthProtectTsFieldNumber = 4;
  inline ::google::protobuf::uint32 othprotectts() const;
  inline void set_othprotectts(::google::protobuf::uint32 value);
  
  // repeated .ProtoMartialClub.MartialClubProp othProps = 5;
  inline int othprops_size() const;
  inline void clear_othprops();
  static const int kOthPropsFieldNumber = 5;
  inline const ::ProtoMartialClub::MartialClubProp& othprops(int index) const;
  inline ::ProtoMartialClub::MartialClubProp* mutable_othprops(int index);
  inline ::ProtoMartialClub::MartialClubProp* add_othprops();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >&
      othprops() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >*
      mutable_othprops();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSSynOthMartialInfo)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmgrade();
  inline void clear_has_othmgrade();
  inline void set_has_othcoins();
  inline void clear_has_othcoins();
  inline void set_has_othprotectts();
  inline void clear_has_othprotectts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 othmgrade_;
  ::google::protobuf::uint32 othcoins_;
  ::google::protobuf::uint32 othprotectts_;
  ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp > othprops_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSSynOthMartialInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMatchReq : public ::google::protobuf::Message {
 public:
  ProtoMatchReq();
  virtual ~ProtoMatchReq();
  
  ProtoMatchReq(const ProtoMatchReq& from);
  
  inline ProtoMatchReq& operator=(const ProtoMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMatchReq& default_instance();
  
  void Swap(ProtoMatchReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMatchReq& from);
  void MergeFrom(const ProtoMatchReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMatchReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMatchResp : public ::google::protobuf::Message {
 public:
  ProtoMatchResp();
  virtual ~ProtoMatchResp();
  
  ProtoMatchResp(const ProtoMatchResp& from);
  
  inline ProtoMatchResp& operator=(const ProtoMatchResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMatchResp& default_instance();
  
  void Swap(ProtoMatchResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMatchResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMatchResp& from);
  void MergeFrom(const ProtoMatchResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string fig = 1;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 1;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // repeated uint32 heroid = 4;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 4;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMatchResp)
 private:
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMatchResp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeRewardReq : public ::google::protobuf::Message {
 public:
  UpgradeRewardReq();
  virtual ~UpgradeRewardReq();
  
  UpgradeRewardReq(const UpgradeRewardReq& from);
  
  inline UpgradeRewardReq& operator=(const UpgradeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeRewardReq& default_instance();
  
  void Swap(UpgradeRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeRewardReq& from);
  void MergeFrom(const UpgradeRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeRewardReq)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeRewardResp : public ::google::protobuf::Message {
 public:
  UpgradeRewardResp();
  virtual ~UpgradeRewardResp();
  
  UpgradeRewardResp(const UpgradeRewardResp& from);
  
  inline UpgradeRewardResp& operator=(const UpgradeRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeRewardResp& default_instance();
  
  void Swap(UpgradeRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeRewardResp& from);
  void MergeFrom(const UpgradeRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class DailyRewardReq : public ::google::protobuf::Message {
 public:
  DailyRewardReq();
  virtual ~DailyRewardReq();
  
  DailyRewardReq(const DailyRewardReq& from);
  
  inline DailyRewardReq& operator=(const DailyRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyRewardReq& default_instance();
  
  void Swap(DailyRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  DailyRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyRewardReq& from);
  void MergeFrom(const DailyRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.DailyRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static DailyRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class DailRewardResp : public ::google::protobuf::Message {
 public:
  DailRewardResp();
  virtual ~DailRewardResp();
  
  DailRewardResp(const DailRewardResp& from);
  
  inline DailRewardResp& operator=(const DailRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailRewardResp& default_instance();
  
  void Swap(DailRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  DailRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailRewardResp& from);
  void MergeFrom(const DailRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP rewards = 2;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.DailRewardResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static DailRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class WinStreakRewardReq : public ::google::protobuf::Message {
 public:
  WinStreakRewardReq();
  virtual ~WinStreakRewardReq();
  
  WinStreakRewardReq(const WinStreakRewardReq& from);
  
  inline WinStreakRewardReq& operator=(const WinStreakRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WinStreakRewardReq& default_instance();
  
  void Swap(WinStreakRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  WinStreakRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinStreakRewardReq& from);
  void MergeFrom(const WinStreakRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.WinStreakRewardReq)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static WinStreakRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class WinStreakRewardResp : public ::google::protobuf::Message {
 public:
  WinStreakRewardResp();
  virtual ~WinStreakRewardResp();
  
  WinStreakRewardResp(const WinStreakRewardResp& from);
  
  inline WinStreakRewardResp& operator=(const WinStreakRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WinStreakRewardResp& default_instance();
  
  void Swap(WinStreakRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  WinStreakRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinStreakRewardResp& from);
  void MergeFrom(const WinStreakRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.WinStreakRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static WinStreakRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeShareRewardReq : public ::google::protobuf::Message {
 public:
  UpgradeShareRewardReq();
  virtual ~UpgradeShareRewardReq();
  
  UpgradeShareRewardReq(const UpgradeShareRewardReq& from);
  
  inline UpgradeShareRewardReq& operator=(const UpgradeShareRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeShareRewardReq& default_instance();
  
  void Swap(UpgradeShareRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeShareRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeShareRewardReq& from);
  void MergeFrom(const UpgradeShareRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeShareRewardReq)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeShareRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeShareRewardResp : public ::google::protobuf::Message {
 public:
  UpgradeShareRewardResp();
  virtual ~UpgradeShareRewardResp();
  
  UpgradeShareRewardResp(const UpgradeShareRewardResp& from);
  
  inline UpgradeShareRewardResp& operator=(const UpgradeShareRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeShareRewardResp& default_instance();
  
  void Swap(UpgradeShareRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeShareRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeShareRewardResp& from);
  void MergeFrom(const UpgradeShareRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeShareRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeShareRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class SetFormationReq : public ::google::protobuf::Message {
 public:
  SetFormationReq();
  virtual ~SetFormationReq();
  
  SetFormationReq(const SetFormationReq& from);
  
  inline SetFormationReq& operator=(const SetFormationReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormationReq& default_instance();
  
  void Swap(SetFormationReq* other);
  
  // implements Message ----------------------------------------------
  
  SetFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormationReq& from);
  void MergeFrom(const SetFormationReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 heroid = 1;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.SetFormationReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static SetFormationReq* default_instance_;
};
// -------------------------------------------------------------------

class SetFormationResp : public ::google::protobuf::Message {
 public:
  SetFormationResp();
  virtual ~SetFormationResp();
  
  SetFormationResp(const SetFormationResp& from);
  
  inline SetFormationResp& operator=(const SetFormationResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormationResp& default_instance();
  
  void Swap(SetFormationResp* other);
  
  // implements Message ----------------------------------------------
  
  SetFormationResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormationResp& from);
  void MergeFrom(const SetFormationResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.SetFormationResp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static SetFormationResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRefreshReq : public ::google::protobuf::Message {
 public:
  ProtoRefreshReq();
  virtual ~ProtoRefreshReq();
  
  ProtoRefreshReq(const ProtoRefreshReq& from);
  
  inline ProtoRefreshReq& operator=(const ProtoRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRefreshReq& default_instance();
  
  void Swap(ProtoRefreshReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRefreshReq& from);
  void MergeFrom(const ProtoRefreshReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRefreshReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRefreshResp : public ::google::protobuf::Message {
 public:
  ProtoRefreshResp();
  virtual ~ProtoRefreshResp();
  
  ProtoRefreshResp(const ProtoRefreshResp& from);
  
  inline ProtoRefreshResp& operator=(const ProtoRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRefreshResp& default_instance();
  
  void Swap(ProtoRefreshResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRefreshResp& from);
  void MergeFrom(const ProtoRefreshResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string fig = 1;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 1;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 3;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRefreshResp)
 private:
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPost : public ::google::protobuf::Message {
 public:
  ProtoPost();
  virtual ~ProtoPost();
  
  ProtoPost(const ProtoPost& from);
  
  inline ProtoPost& operator=(const ProtoPost& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPost& default_instance();
  
  void Swap(ProtoPost* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPost& from);
  void MergeFrom(const ProtoPost& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPost)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPost* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleCommonCPP

// optional uint32 id = 1;
inline bool BattleCommonCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleCommonCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleCommonCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleCommonCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BattleCommonCPP::id() const {
  return id_;
}
inline void BattleCommonCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 propId = 2;
inline int BattleCommonCPP::propid_size() const {
  return propid_.size();
}
inline void BattleCommonCPP::clear_propid() {
  propid_.Clear();
}
inline ::google::protobuf::uint32 BattleCommonCPP::propid(int index) const {
  return propid_.Get(index);
}
inline void BattleCommonCPP::set_propid(int index, ::google::protobuf::uint32 value) {
  propid_.Set(index, value);
}
inline void BattleCommonCPP::add_propid(::google::protobuf::uint32 value) {
  propid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleCommonCPP::propid() const {
  return propid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleCommonCPP::mutable_propid() {
  return &propid_;
}

// -------------------------------------------------------------------

// BattleCardsCPP

// repeated .ProtoCards.UserCardsCPP bag = 1;
inline int BattleCardsCPP::bag_size() const {
  return bag_.size();
}
inline void BattleCardsCPP::clear_bag() {
  bag_.Clear();
}
inline const ::ProtoCards::UserCardsCPP& BattleCardsCPP::bag(int index) const {
  return bag_.Get(index);
}
inline ::ProtoCards::UserCardsCPP* BattleCardsCPP::mutable_bag(int index) {
  return bag_.Mutable(index);
}
inline ::ProtoCards::UserCardsCPP* BattleCardsCPP::add_bag() {
  return bag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
BattleCardsCPP::bag() const {
  return bag_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
BattleCardsCPP::mutable_bag() {
  return &bag_;
}

// repeated .ProtoCards.UserCardsCPP hand = 2;
inline int BattleCardsCPP::hand_size() const {
  return hand_.size();
}
inline void BattleCardsCPP::clear_hand() {
  hand_.Clear();
}
inline const ::ProtoCards::UserCardsCPP& BattleCardsCPP::hand(int index) const {
  return hand_.Get(index);
}
inline ::ProtoCards::UserCardsCPP* BattleCardsCPP::mutable_hand(int index) {
  return hand_.Mutable(index);
}
inline ::ProtoCards::UserCardsCPP* BattleCardsCPP::add_hand() {
  return hand_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
BattleCardsCPP::hand() const {
  return hand_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
BattleCardsCPP::mutable_hand() {
  return &hand_;
}

// -------------------------------------------------------------------

// ProtoBattleHero

// required uint32 id = 1;
inline bool ProtoBattleHero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleHero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleHero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleHero::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoBattleHero::id() const {
  return id_;
}
inline void ProtoBattleHero::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 hp = 2;
inline bool ProtoBattleHero::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleHero::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleHero::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleHero::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ProtoBattleHero::hp() const {
  return hp_;
}
inline void ProtoBattleHero::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 att = 3;
inline bool ProtoBattleHero::has_att() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleHero::set_has_att() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleHero::clear_has_att() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleHero::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 ProtoBattleHero::att() const {
  return att_;
}
inline void ProtoBattleHero::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// required uint32 def = 4;
inline bool ProtoBattleHero::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleHero::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleHero::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleHero::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 ProtoBattleHero::def() const {
  return def_;
}
inline void ProtoBattleHero::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 shield = 5;
inline bool ProtoBattleHero::has_shield() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleHero::set_has_shield() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleHero::clear_has_shield() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleHero::clear_shield() {
  shield_ = 0u;
  clear_has_shield();
}
inline ::google::protobuf::uint32 ProtoBattleHero::shield() const {
  return shield_;
}
inline void ProtoBattleHero::set_shield(::google::protobuf::uint32 value) {
  set_has_shield();
  shield_ = value;
}

// required uint32 battlePower = 6;
inline bool ProtoBattleHero::has_battlepower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoBattleHero::set_has_battlepower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoBattleHero::clear_has_battlepower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoBattleHero::clear_battlepower() {
  battlepower_ = 0u;
  clear_has_battlepower();
}
inline ::google::protobuf::uint32 ProtoBattleHero::battlepower() const {
  return battlepower_;
}
inline void ProtoBattleHero::set_battlepower(::google::protobuf::uint32 value) {
  set_has_battlepower();
  battlepower_ = value;
}

// required double damInc = 7;
inline bool ProtoBattleHero::has_daminc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoBattleHero::set_has_daminc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoBattleHero::clear_has_daminc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoBattleHero::clear_daminc() {
  daminc_ = 0;
  clear_has_daminc();
}
inline double ProtoBattleHero::daminc() const {
  return daminc_;
}
inline void ProtoBattleHero::set_daminc(double value) {
  set_has_daminc();
  daminc_ = value;
}

// required double damDec = 8;
inline bool ProtoBattleHero::has_damdec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoBattleHero::set_has_damdec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoBattleHero::clear_has_damdec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoBattleHero::clear_damdec() {
  damdec_ = 0;
  clear_has_damdec();
}
inline double ProtoBattleHero::damdec() const {
  return damdec_;
}
inline void ProtoBattleHero::set_damdec(double value) {
  set_has_damdec();
  damdec_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleTeam

// optional uint32 uid = 1;
inline bool ProtoBattleTeam::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleTeam::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleTeam::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleTeam::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ProtoBattleTeam::uid() const {
  return uid_;
}
inline void ProtoBattleTeam::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 level = 2;
inline bool ProtoBattleTeam::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleTeam::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleTeam::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleTeam::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ProtoBattleTeam::level() const {
  return level_;
}
inline void ProtoBattleTeam::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated .ProtoBattle.ProtoBattleHero heros = 3;
inline int ProtoBattleTeam::heros_size() const {
  return heros_.size();
}
inline void ProtoBattleTeam::clear_heros() {
  heros_.Clear();
}
inline const ::ProtoBattle::ProtoBattleHero& ProtoBattleTeam::heros(int index) const {
  return heros_.Get(index);
}
inline ::ProtoBattle::ProtoBattleHero* ProtoBattleTeam::mutable_heros(int index) {
  return heros_.Mutable(index);
}
inline ::ProtoBattle::ProtoBattleHero* ProtoBattleTeam::add_heros() {
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattle::ProtoBattleHero >&
ProtoBattleTeam::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattle::ProtoBattleHero >*
ProtoBattleTeam::mutable_heros() {
  return &heros_;
}

// -------------------------------------------------------------------

// ProtoBattleCPP

// required uint32 first = 1;
inline bool ProtoBattleCPP::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleCPP::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleCPP::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleCPP::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 ProtoBattleCPP::first() const {
  return first_;
}
inline void ProtoBattleCPP::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// required .ProtoBattle.BattleCardsCPP cards = 2;
inline bool ProtoBattleCPP::has_cards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleCPP::set_has_cards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleCPP::clear_has_cards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleCPP::clear_cards() {
  if (cards_ != NULL) cards_->::ProtoBattle::BattleCardsCPP::Clear();
  clear_has_cards();
}
inline const ::ProtoBattle::BattleCardsCPP& ProtoBattleCPP::cards() const {
  return cards_ != NULL ? *cards_ : *default_instance_->cards_;
}
inline ::ProtoBattle::BattleCardsCPP* ProtoBattleCPP::mutable_cards() {
  set_has_cards();
  if (cards_ == NULL) cards_ = new ::ProtoBattle::BattleCardsCPP;
  return cards_;
}
inline ::ProtoBattle::BattleCardsCPP* ProtoBattleCPP::release_cards() {
  clear_has_cards();
  ::ProtoBattle::BattleCardsCPP* temp = cards_;
  cards_ = NULL;
  return temp;
}

// required .ProtoBattle.ProtoBattleTeam attacker = 3;
inline bool ProtoBattleCPP::has_attacker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleCPP::set_has_attacker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleCPP::clear_has_attacker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleCPP::clear_attacker() {
  if (attacker_ != NULL) attacker_->::ProtoBattle::ProtoBattleTeam::Clear();
  clear_has_attacker();
}
inline const ::ProtoBattle::ProtoBattleTeam& ProtoBattleCPP::attacker() const {
  return attacker_ != NULL ? *attacker_ : *default_instance_->attacker_;
}
inline ::ProtoBattle::ProtoBattleTeam* ProtoBattleCPP::mutable_attacker() {
  set_has_attacker();
  if (attacker_ == NULL) attacker_ = new ::ProtoBattle::ProtoBattleTeam;
  return attacker_;
}
inline ::ProtoBattle::ProtoBattleTeam* ProtoBattleCPP::release_attacker() {
  clear_has_attacker();
  ::ProtoBattle::ProtoBattleTeam* temp = attacker_;
  attacker_ = NULL;
  return temp;
}

// required .ProtoBattle.ProtoBattleTeam defender = 4;
inline bool ProtoBattleCPP::has_defender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleCPP::set_has_defender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleCPP::clear_has_defender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleCPP::clear_defender() {
  if (defender_ != NULL) defender_->::ProtoBattle::ProtoBattleTeam::Clear();
  clear_has_defender();
}
inline const ::ProtoBattle::ProtoBattleTeam& ProtoBattleCPP::defender() const {
  return defender_ != NULL ? *defender_ : *default_instance_->defender_;
}
inline ::ProtoBattle::ProtoBattleTeam* ProtoBattleCPP::mutable_defender() {
  set_has_defender();
  if (defender_ == NULL) defender_ = new ::ProtoBattle::ProtoBattleTeam;
  return defender_;
}
inline ::ProtoBattle::ProtoBattleTeam* ProtoBattleCPP::release_defender() {
  clear_has_defender();
  ::ProtoBattle::ProtoBattleTeam* temp = defender_;
  defender_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoTurnEndReq

// required uint32 battleid = 1;
inline bool ProtoTurnEndReq::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTurnEndReq::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTurnEndReq::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTurnEndReq::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoTurnEndReq::battleid() const {
  return battleid_;
}
inline void ProtoTurnEndReq::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required uint32 type = 2;
inline bool ProtoTurnEndReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTurnEndReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTurnEndReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTurnEndReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ProtoTurnEndReq::type() const {
  return type_;
}
inline void ProtoTurnEndReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ProtoTurnEndResp

// required uint32 nextUser = 1;
inline bool ProtoTurnEndResp::has_nextuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTurnEndResp::set_has_nextuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTurnEndResp::clear_has_nextuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTurnEndResp::clear_nextuser() {
  nextuser_ = 0u;
  clear_has_nextuser();
}
inline ::google::protobuf::uint32 ProtoTurnEndResp::nextuser() const {
  return nextuser_;
}
inline void ProtoTurnEndResp::set_nextuser(::google::protobuf::uint32 value) {
  set_has_nextuser();
  nextuser_ = value;
}

// required .ProtoBattle.BattleCardsCPP cards = 2;
inline bool ProtoTurnEndResp::has_cards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTurnEndResp::set_has_cards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTurnEndResp::clear_has_cards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTurnEndResp::clear_cards() {
  if (cards_ != NULL) cards_->::ProtoBattle::BattleCardsCPP::Clear();
  clear_has_cards();
}
inline const ::ProtoBattle::BattleCardsCPP& ProtoTurnEndResp::cards() const {
  return cards_ != NULL ? *cards_ : *default_instance_->cards_;
}
inline ::ProtoBattle::BattleCardsCPP* ProtoTurnEndResp::mutable_cards() {
  set_has_cards();
  if (cards_ == NULL) cards_ = new ::ProtoBattle::BattleCardsCPP;
  return cards_;
}
inline ::ProtoBattle::BattleCardsCPP* ProtoTurnEndResp::release_cards() {
  clear_has_cards();
  ::ProtoBattle::BattleCardsCPP* temp = cards_;
  cards_ = NULL;
  return temp;
}

// required uint32 point = 3;
inline bool ProtoTurnEndResp::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTurnEndResp::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTurnEndResp::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTurnEndResp::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 ProtoTurnEndResp::point() const {
  return point_;
}
inline void ProtoTurnEndResp::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// ProtoPveBattleReq

// required .ProtoBattle.BattleCommonCPP common = 1;
inline bool ProtoPveBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPveBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPveBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPveBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoPveBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoPveBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoPveBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoPveBattleResp

// required uint32 battleid = 1;
inline bool ProtoPveBattleResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPveBattleResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPveBattleResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPveBattleResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoPveBattleResp::battleid() const {
  return battleid_;
}
inline void ProtoPveBattleResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoPveBattleResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPveBattleResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPveBattleResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPveBattleResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoPveBattleResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoPveBattleResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoPveBattleResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoPveBattleResult

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoPveBattleResult::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPveBattleResult::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPveBattleResult::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPveBattleResult::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoPveBattleResult::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoPveBattleResult::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoPveBattleResult::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// optional .ProtoCards.CardsAllChangeCPP dropCards = 2;
inline bool ProtoPveBattleResult::has_dropcards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPveBattleResult::set_has_dropcards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPveBattleResult::clear_has_dropcards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPveBattleResult::clear_dropcards() {
  if (dropcards_ != NULL) dropcards_->::ProtoCards::CardsAllChangeCPP::Clear();
  clear_has_dropcards();
}
inline const ::ProtoCards::CardsAllChangeCPP& ProtoPveBattleResult::dropcards() const {
  return dropcards_ != NULL ? *dropcards_ : *default_instance_->dropcards_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoPveBattleResult::mutable_dropcards() {
  set_has_dropcards();
  if (dropcards_ == NULL) dropcards_ = new ::ProtoCards::CardsAllChangeCPP;
  return dropcards_;
}
inline ::ProtoCards::CardsAllChangeCPP* ProtoPveBattleResult::release_dropcards() {
  clear_has_dropcards();
  ::ProtoCards::CardsAllChangeCPP* temp = dropcards_;
  dropcards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoGradeBattleReq

// optional .ProtoBattle.BattleCommonCPP common = 1;
inline bool ProtoGradeBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGradeBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGradeBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGradeBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoGradeBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoGradeBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoGradeBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoGradeBattleResp

// required uint32 battleid = 1;
inline bool ProtoGradeBattleResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGradeBattleResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGradeBattleResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGradeBattleResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResp::battleid() const {
  return battleid_;
}
inline void ProtoGradeBattleResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoGradeBattleResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoGradeBattleResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoGradeBattleResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoGradeBattleResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoGradeBattleResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoGradeBattleResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoGradeBattleResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoGradeBattleResult

// required uint32 grade = 1;
inline bool ProtoGradeBattleResult::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGradeBattleResult::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGradeBattleResult::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGradeBattleResult::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResult::grade() const {
  return grade_;
}
inline void ProtoGradeBattleResult::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// required uint32 score = 2;
inline bool ProtoGradeBattleResult::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoGradeBattleResult::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoGradeBattleResult::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoGradeBattleResult::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResult::score() const {
  return score_;
}
inline void ProtoGradeBattleResult::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 dailyScore = 3;
inline bool ProtoGradeBattleResult::has_dailyscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoGradeBattleResult::set_has_dailyscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoGradeBattleResult::clear_has_dailyscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoGradeBattleResult::clear_dailyscore() {
  dailyscore_ = 0u;
  clear_has_dailyscore();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResult::dailyscore() const {
  return dailyscore_;
}
inline void ProtoGradeBattleResult::set_dailyscore(::google::protobuf::uint32 value) {
  set_has_dailyscore();
  dailyscore_ = value;
}

// -------------------------------------------------------------------

// ProtoRandomUserReq

// optional .ProtoBattle.BattleCommonCPP common = 1;
inline bool ProtoRandomUserReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRandomUserReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRandomUserReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRandomUserReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoRandomUserReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoRandomUserReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoRandomUserReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRandomUserResp

// required uint32 battleid = 1;
inline bool ProtoRandomUserResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRandomUserResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRandomUserResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRandomUserResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoRandomUserResp::battleid() const {
  return battleid_;
}
inline void ProtoRandomUserResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoRandomUserResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRandomUserResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRandomUserResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRandomUserResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoRandomUserResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoRandomUserResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoRandomUserResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRandomUserResult

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoRandomUserResult::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRandomUserResult::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRandomUserResult::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRandomUserResult::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoRandomUserResult::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRandomUserResult::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRandomUserResult::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRevengeReq

// optional .ProtoBattle.BattleCommonCPP common = 1;
inline bool ProtoRevengeReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRevengeReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRevengeReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRevengeReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoRevengeReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoRevengeReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoRevengeReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRevengeResp

// required uint32 battleid = 1;
inline bool ProtoRevengeResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRevengeResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRevengeResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRevengeResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoRevengeResp::battleid() const {
  return battleid_;
}
inline void ProtoRevengeResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoRevengeResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRevengeResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRevengeResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRevengeResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoRevengeResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoRevengeResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoRevengeResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoFriendBattleReq

// required uint32 otherId = 1;
inline bool ProtoFriendBattleReq::has_otherid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendBattleReq::set_has_otherid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendBattleReq::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendBattleReq::clear_otherid() {
  otherid_ = 0u;
  clear_has_otherid();
}
inline ::google::protobuf::uint32 ProtoFriendBattleReq::otherid() const {
  return otherid_;
}
inline void ProtoFriendBattleReq::set_otherid(::google::protobuf::uint32 value) {
  set_has_otherid();
  otherid_ = value;
}

// optional .ProtoBattle.BattleCommonCPP common = 2;
inline bool ProtoFriendBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoFriendBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoFriendBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoFriendBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoFriendBattleResp

// required uint32 battleid = 1;
inline bool ProtoFriendBattleResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendBattleResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendBattleResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendBattleResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoFriendBattleResp::battleid() const {
  return battleid_;
}
inline void ProtoFriendBattleResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoFriendBattleResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendBattleResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendBattleResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendBattleResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoFriendBattleResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoFriendBattleResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoFriendBattleResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoFriendBattleResult

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoFriendBattleResult::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendBattleResult::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendBattleResult::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendBattleResult::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoFriendBattleResult::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoFriendBattleResult::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoFriendBattleResult::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMartialClubBattleReq

// required uint32 myMartialGrade = 1;
inline bool ProtoMartialClubBattleReq::has_mymartialgrade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_mymartialgrade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMartialClubBattleReq::clear_has_mymartialgrade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMartialClubBattleReq::clear_mymartialgrade() {
  mymartialgrade_ = 0u;
  clear_has_mymartialgrade();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::mymartialgrade() const {
  return mymartialgrade_;
}
inline void ProtoMartialClubBattleReq::set_mymartialgrade(::google::protobuf::uint32 value) {
  set_has_mymartialgrade();
  mymartialgrade_ = value;
}

// required uint32 othUid = 2;
inline bool ProtoMartialClubBattleReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMartialClubBattleReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMartialClubBattleReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::othuid() const {
  return othuid_;
}
inline void ProtoMartialClubBattleReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othMartialGrade = 3;
inline bool ProtoMartialClubBattleReq::has_othmartialgrade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_othmartialgrade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoMartialClubBattleReq::clear_has_othmartialgrade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoMartialClubBattleReq::clear_othmartialgrade() {
  othmartialgrade_ = 0u;
  clear_has_othmartialgrade();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::othmartialgrade() const {
  return othmartialgrade_;
}
inline void ProtoMartialClubBattleReq::set_othmartialgrade(::google::protobuf::uint32 value) {
  set_has_othmartialgrade();
  othmartialgrade_ = value;
}

// optional .ProtoBattle.BattleCommonCPP common = 4;
inline bool ProtoMartialClubBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoMartialClubBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoMartialClubBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoMartialClubBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoMartialClubBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoMartialClubBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMartialClubBattleResp

// required uint32 battleid = 1;
inline bool ProtoMartialClubBattleResp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMartialClubBattleResp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMartialClubBattleResp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMartialClubBattleResp::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleResp::battleid() const {
  return battleid_;
}
inline void ProtoMartialClubBattleResp::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required .ProtoBattle.ProtoBattleCPP common = 2;
inline bool ProtoMartialClubBattleResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMartialClubBattleResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMartialClubBattleResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMartialClubBattleResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::ProtoBattleCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::ProtoBattleCPP& ProtoMartialClubBattleResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoMartialClubBattleResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::ProtoBattleCPP;
  return common_;
}
inline ::ProtoBattle::ProtoBattleCPP* ProtoMartialClubBattleResp::release_common() {
  clear_has_common();
  ::ProtoBattle::ProtoBattleCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMartialClubBattleResult

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoMartialClubBattleResult::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMartialClubBattleResult::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMartialClubBattleResult::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMartialClubBattleResult::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoMartialClubBattleResult::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoMartialClubBattleResult::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoMartialClubBattleResult::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoCSMartialClubBattleReq

// required uint32 myUid = 1;
inline bool ProtoCSMartialClubBattleReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSMartialClubBattleReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::myuid() const {
  return myuid_;
}
inline void ProtoCSMartialClubBattleReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
}

// required uint32 mymGrade = 2;
inline bool ProtoCSMartialClubBattleReq::has_mymgrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_mymgrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_mymgrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSMartialClubBattleReq::clear_mymgrade() {
  mymgrade_ = 0u;
  clear_has_mymgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::mymgrade() const {
  return mymgrade_;
}
inline void ProtoCSMartialClubBattleReq::set_mymgrade(::google::protobuf::uint32 value) {
  set_has_mymgrade();
  mymgrade_ = value;
}

// required uint32 othUid = 3;
inline bool ProtoCSMartialClubBattleReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCSMartialClubBattleReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::othuid() const {
  return othuid_;
}
inline void ProtoCSMartialClubBattleReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othmGrade = 4;
inline bool ProtoCSMartialClubBattleReq::has_othmgrade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_othmgrade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_othmgrade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCSMartialClubBattleReq::clear_othmgrade() {
  othmgrade_ = 0u;
  clear_has_othmgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::othmgrade() const {
  return othmgrade_;
}
inline void ProtoCSMartialClubBattleReq::set_othmgrade(::google::protobuf::uint32 value) {
  set_has_othmgrade();
  othmgrade_ = value;
}

// -------------------------------------------------------------------

// ProtoCSMartialClubBattleResp

// required uint32 myUid = 1;
inline bool ProtoCSMartialClubBattleResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSMartialClubBattleResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::myuid() const {
  return myuid_;
}
inline void ProtoCSMartialClubBattleResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
}

// required uint32 mymGrade = 2;
inline bool ProtoCSMartialClubBattleResp::has_mymgrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_mymgrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_mymgrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSMartialClubBattleResp::clear_mymgrade() {
  mymgrade_ = 0u;
  clear_has_mymgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::mymgrade() const {
  return mymgrade_;
}
inline void ProtoCSMartialClubBattleResp::set_mymgrade(::google::protobuf::uint32 value) {
  set_has_mymgrade();
  mymgrade_ = value;
}

// required uint32 othUid = 3;
inline bool ProtoCSMartialClubBattleResp::has_othuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_othuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCSMartialClubBattleResp::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::othuid() const {
  return othuid_;
}
inline void ProtoCSMartialClubBattleResp::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othmGrade = 4;
inline bool ProtoCSMartialClubBattleResp::has_othmgrade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_othmgrade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_othmgrade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCSMartialClubBattleResp::clear_othmgrade() {
  othmgrade_ = 0u;
  clear_has_othmgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::othmgrade() const {
  return othmgrade_;
}
inline void ProtoCSMartialClubBattleResp::set_othmgrade(::google::protobuf::uint32 value) {
  set_has_othmgrade();
  othmgrade_ = value;
}

// required uint32 othProtectTs = 5;
inline bool ProtoCSMartialClubBattleResp::has_othprotectts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_othprotectts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_othprotectts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoCSMartialClubBattleResp::clear_othprotectts() {
  othprotectts_ = 0u;
  clear_has_othprotectts();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::othprotectts() const {
  return othprotectts_;
}
inline void ProtoCSMartialClubBattleResp::set_othprotectts(::google::protobuf::uint32 value) {
  set_has_othprotectts();
  othprotectts_ = value;
}

// required uint32 othCoins = 6;
inline bool ProtoCSMartialClubBattleResp::has_othcoins() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_othcoins() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_othcoins() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoCSMartialClubBattleResp::clear_othcoins() {
  othcoins_ = 0u;
  clear_has_othcoins();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleResp::othcoins() const {
  return othcoins_;
}
inline void ProtoCSMartialClubBattleResp::set_othcoins(::google::protobuf::uint32 value) {
  set_has_othcoins();
  othcoins_ = value;
}

// repeated .ProtoMartialClub.MartialClubProp othProps = 7;
inline int ProtoCSMartialClubBattleResp::othprops_size() const {
  return othprops_.size();
}
inline void ProtoCSMartialClubBattleResp::clear_othprops() {
  othprops_.Clear();
}
inline const ::ProtoMartialClub::MartialClubProp& ProtoCSMartialClubBattleResp::othprops(int index) const {
  return othprops_.Get(index);
}
inline ::ProtoMartialClub::MartialClubProp* ProtoCSMartialClubBattleResp::mutable_othprops(int index) {
  return othprops_.Mutable(index);
}
inline ::ProtoMartialClub::MartialClubProp* ProtoCSMartialClubBattleResp::add_othprops() {
  return othprops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >&
ProtoCSMartialClubBattleResp::othprops() const {
  return othprops_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >*
ProtoCSMartialClubBattleResp::mutable_othprops() {
  return &othprops_;
}

// repeated .ProtoHero.HeroBaseInfoCPP hero = 8;
inline int ProtoCSMartialClubBattleResp::hero_size() const {
  return hero_.size();
}
inline void ProtoCSMartialClubBattleResp::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoCSMartialClubBattleResp::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoCSMartialClubBattleResp::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoCSMartialClubBattleResp::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
ProtoCSMartialClubBattleResp::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
ProtoCSMartialClubBattleResp::mutable_hero() {
  return &hero_;
}

// optional .ProtoBattle.BattleCommonCPP common = 9;
inline bool ProtoCSMartialClubBattleResp::has_common() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_common() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoCSMartialClubBattleResp::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommonCPP::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommonCPP& ProtoCSMartialClubBattleResp::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoCSMartialClubBattleResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommonCPP;
  return common_;
}
inline ::ProtoBattle::BattleCommonCPP* ProtoCSMartialClubBattleResp::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommonCPP* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoCSSynOthMartialInfo

// required uint32 othUid = 1;
inline bool ProtoCSSynOthMartialInfo::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSSynOthMartialInfo::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSSynOthMartialInfo::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSSynOthMartialInfo::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoCSSynOthMartialInfo::othuid() const {
  return othuid_;
}
inline void ProtoCSSynOthMartialInfo::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othmGrade = 2;
inline bool ProtoCSSynOthMartialInfo::has_othmgrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSSynOthMartialInfo::set_has_othmgrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSSynOthMartialInfo::clear_has_othmgrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSSynOthMartialInfo::clear_othmgrade() {
  othmgrade_ = 0u;
  clear_has_othmgrade();
}
inline ::google::protobuf::uint32 ProtoCSSynOthMartialInfo::othmgrade() const {
  return othmgrade_;
}
inline void ProtoCSSynOthMartialInfo::set_othmgrade(::google::protobuf::uint32 value) {
  set_has_othmgrade();
  othmgrade_ = value;
}

// required uint32 othCoins = 3;
inline bool ProtoCSSynOthMartialInfo::has_othcoins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCSSynOthMartialInfo::set_has_othcoins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCSSynOthMartialInfo::clear_has_othcoins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCSSynOthMartialInfo::clear_othcoins() {
  othcoins_ = 0u;
  clear_has_othcoins();
}
inline ::google::protobuf::uint32 ProtoCSSynOthMartialInfo::othcoins() const {
  return othcoins_;
}
inline void ProtoCSSynOthMartialInfo::set_othcoins(::google::protobuf::uint32 value) {
  set_has_othcoins();
  othcoins_ = value;
}

// required uint32 othProtectTs = 4;
inline bool ProtoCSSynOthMartialInfo::has_othprotectts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCSSynOthMartialInfo::set_has_othprotectts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCSSynOthMartialInfo::clear_has_othprotectts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCSSynOthMartialInfo::clear_othprotectts() {
  othprotectts_ = 0u;
  clear_has_othprotectts();
}
inline ::google::protobuf::uint32 ProtoCSSynOthMartialInfo::othprotectts() const {
  return othprotectts_;
}
inline void ProtoCSSynOthMartialInfo::set_othprotectts(::google::protobuf::uint32 value) {
  set_has_othprotectts();
  othprotectts_ = value;
}

// repeated .ProtoMartialClub.MartialClubProp othProps = 5;
inline int ProtoCSSynOthMartialInfo::othprops_size() const {
  return othprops_.size();
}
inline void ProtoCSSynOthMartialInfo::clear_othprops() {
  othprops_.Clear();
}
inline const ::ProtoMartialClub::MartialClubProp& ProtoCSSynOthMartialInfo::othprops(int index) const {
  return othprops_.Get(index);
}
inline ::ProtoMartialClub::MartialClubProp* ProtoCSSynOthMartialInfo::mutable_othprops(int index) {
  return othprops_.Mutable(index);
}
inline ::ProtoMartialClub::MartialClubProp* ProtoCSSynOthMartialInfo::add_othprops() {
  return othprops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >&
ProtoCSSynOthMartialInfo::othprops() const {
  return othprops_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialClubProp >*
ProtoCSSynOthMartialInfo::mutable_othprops() {
  return &othprops_;
}

// -------------------------------------------------------------------

// ProtoMatchReq

// -------------------------------------------------------------------

// ProtoMatchResp

// optional string fig = 1;
inline bool ProtoMatchResp::has_fig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMatchResp::set_has_fig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMatchResp::clear_has_fig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMatchResp::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ProtoMatchResp::fig() const {
  return *fig_;
}
inline void ProtoMatchResp::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoMatchResp::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoMatchResp::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoMatchResp::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* ProtoMatchResp::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string name = 2;
inline bool ProtoMatchResp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMatchResp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMatchResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMatchResp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoMatchResp::name() const {
  return *name_;
}
inline void ProtoMatchResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoMatchResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoMatchResp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoMatchResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoMatchResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 grade = 3;
inline bool ProtoMatchResp::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoMatchResp::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoMatchResp::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoMatchResp::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 ProtoMatchResp::grade() const {
  return grade_;
}
inline void ProtoMatchResp::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// repeated uint32 heroid = 4;
inline int ProtoMatchResp::heroid_size() const {
  return heroid_.size();
}
inline void ProtoMatchResp::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 ProtoMatchResp::heroid(int index) const {
  return heroid_.Get(index);
}
inline void ProtoMatchResp::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void ProtoMatchResp::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoMatchResp::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoMatchResp::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// UpgradeRewardReq

// required uint32 grade = 1;
inline bool UpgradeRewardReq::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeRewardReq::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeRewardReq::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeRewardReq::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 UpgradeRewardReq::grade() const {
  return grade_;
}
inline void UpgradeRewardReq::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// -------------------------------------------------------------------

// UpgradeRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool UpgradeRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& UpgradeRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// DailyRewardReq

// -------------------------------------------------------------------

// DailRewardResp

// required uint32 ts = 1;
inline bool DailRewardResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailRewardResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailRewardResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailRewardResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 DailRewardResp::ts() const {
  return ts_;
}
inline void DailRewardResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required .DataCommon.CommonItemsCPP rewards = 2;
inline bool DailRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& DailRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* DailRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* DailRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// WinStreakRewardReq

// required uint32 count = 1;
inline bool WinStreakRewardReq::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinStreakRewardReq::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinStreakRewardReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinStreakRewardReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 WinStreakRewardReq::count() const {
  return count_;
}
inline void WinStreakRewardReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// WinStreakRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool WinStreakRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinStreakRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinStreakRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinStreakRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& WinStreakRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* WinStreakRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* WinStreakRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// UpgradeShareRewardReq

// required uint32 grade = 1;
inline bool UpgradeShareRewardReq::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeShareRewardReq::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeShareRewardReq::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeShareRewardReq::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 UpgradeShareRewardReq::grade() const {
  return grade_;
}
inline void UpgradeShareRewardReq::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// -------------------------------------------------------------------

// UpgradeShareRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool UpgradeShareRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeShareRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeShareRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeShareRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& UpgradeShareRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeShareRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeShareRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SetFormationReq

// repeated uint32 heroid = 1;
inline int SetFormationReq::heroid_size() const {
  return heroid_.size();
}
inline void SetFormationReq::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 SetFormationReq::heroid(int index) const {
  return heroid_.Get(index);
}
inline void SetFormationReq::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void SetFormationReq::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SetFormationReq::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SetFormationReq::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// SetFormationResp

// -------------------------------------------------------------------

// ProtoRefreshReq

// -------------------------------------------------------------------

// ProtoRefreshResp

// optional string fig = 1;
inline bool ProtoRefreshResp::has_fig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRefreshResp::set_has_fig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRefreshResp::clear_has_fig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRefreshResp::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ProtoRefreshResp::fig() const {
  return *fig_;
}
inline void ProtoRefreshResp::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoRefreshResp::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoRefreshResp::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRefreshResp::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* ProtoRefreshResp::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string name = 2;
inline bool ProtoRefreshResp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRefreshResp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRefreshResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRefreshResp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoRefreshResp::name() const {
  return *name_;
}
inline void ProtoRefreshResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRefreshResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRefreshResp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRefreshResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoRefreshResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
inline int ProtoRefreshResp::hero_size() const {
  return hero_.size();
}
inline void ProtoRefreshResp::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoRefreshResp::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoRefreshResp::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoRefreshResp::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
ProtoRefreshResp::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
ProtoRefreshResp::mutable_hero() {
  return &hero_;
}

// -------------------------------------------------------------------

// ProtoPost

// required string info = 1;
inline bool ProtoPost::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPost::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPost::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPost::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& ProtoPost::info() const {
  return *info_;
}
inline void ProtoPost::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void ProtoPost::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void ProtoPost::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoPost::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* ProtoPost::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBattle

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBattle_2eproto__INCLUDED
