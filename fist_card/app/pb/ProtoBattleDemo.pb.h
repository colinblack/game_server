// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBattleDemo.proto

#ifndef PROTOBUF_ProtoBattleDemo_2eproto__INCLUDED
#define PROTOBUF_ProtoBattleDemo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ProtoBattleDemo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();

class ProtoBattleDemoHeroSkill;
class ProtoBattleDemoItem;
class ProtoBattleDemoHero;
class ProtoBattleDemoTeam;
class ProtoBattleDemoTurn;
class ProtoBattleDemoTurnInfo;
class ProtoBattleReq;
class ProtoBattleResp;
class ProtoBattleDemo;

// ===================================================================

class ProtoBattleDemoHeroSkill : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoHeroSkill();
  virtual ~ProtoBattleDemoHeroSkill();
  
  ProtoBattleDemoHeroSkill(const ProtoBattleDemoHeroSkill& from);
  
  inline ProtoBattleDemoHeroSkill& operator=(const ProtoBattleDemoHeroSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoHeroSkill& default_instance();
  
  void Swap(ProtoBattleDemoHeroSkill* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoHeroSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoHeroSkill& from);
  void MergeFrom(const ProtoBattleDemoHeroSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional double s = 3;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 3;
  inline double s() const;
  inline void set_s(double value);
  
  // optional int32 c = 4;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 4;
  inline ::google::protobuf::int32 c() const;
  inline void set_c(::google::protobuf::int32 value);
  
  // optional uint32 pc = 5;
  inline bool has_pc() const;
  inline void clear_pc();
  static const int kPcFieldNumber = 5;
  inline ::google::protobuf::uint32 pc() const;
  inline void set_pc(::google::protobuf::uint32 value);
  
  // optional uint32 pa = 6;
  inline bool has_pa() const;
  inline void clear_pa();
  static const int kPaFieldNumber = 6;
  inline ::google::protobuf::uint32 pa() const;
  inline void set_pa(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoHeroSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_pc();
  inline void clear_has_pc();
  inline void set_has_pa();
  inline void clear_has_pa();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double s_;
  ::google::protobuf::int32 c_;
  ::google::protobuf::uint32 pc_;
  ::google::protobuf::uint32 pa_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoHeroSkill* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemoItem : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoItem();
  virtual ~ProtoBattleDemoItem();
  
  ProtoBattleDemoItem(const ProtoBattleDemoItem& from);
  
  inline ProtoBattleDemoItem& operator=(const ProtoBattleDemoItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoItem& default_instance();
  
  void Swap(ProtoBattleDemoItem* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoItem& from);
  void MergeFrom(const ProtoBattleDemoItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional double s = 3;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 3;
  inline double s() const;
  inline void set_s(double value);
  
  // optional int32 c = 4;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 4;
  inline ::google::protobuf::int32 c() const;
  inline void set_c(::google::protobuf::int32 value);
  
  // optional uint32 turn = 5;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 5;
  inline ::google::protobuf::uint32 turn() const;
  inline void set_turn(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_turn();
  inline void clear_has_turn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double s_;
  ::google::protobuf::int32 c_;
  ::google::protobuf::uint32 turn_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoItem* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemoHero : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoHero();
  virtual ~ProtoBattleDemoHero();
  
  ProtoBattleDemoHero(const ProtoBattleDemoHero& from);
  
  inline ProtoBattleDemoHero& operator=(const ProtoBattleDemoHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoHero& default_instance();
  
  void Swap(ProtoBattleDemoHero* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoHero& from);
  void MergeFrom(const ProtoBattleDemoHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 att = 3;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 3;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // optional uint32 def = 4;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 4;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // optional uint32 crit = 5;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 5;
  inline ::google::protobuf::uint32 crit() const;
  inline void set_crit(::google::protobuf::uint32 value);
  
  // optional uint32 acrit = 6;
  inline bool has_acrit() const;
  inline void clear_acrit();
  static const int kAcritFieldNumber = 6;
  inline ::google::protobuf::uint32 acrit() const;
  inline void set_acrit(::google::protobuf::uint32 value);
  
  // optional uint32 dodge = 7;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 7;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // optional uint32 adodge = 8;
  inline bool has_adodge() const;
  inline void clear_adodge();
  static const int kAdodgeFieldNumber = 8;
  inline ::google::protobuf::uint32 adodge() const;
  inline void set_adodge(::google::protobuf::uint32 value);
  
  // optional double critt = 9;
  inline bool has_critt() const;
  inline void clear_critt();
  static const int kCrittFieldNumber = 9;
  inline double critt() const;
  inline void set_critt(double value);
  
  // optional uint32 speed = 10;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 10;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);
  
  // optional uint32 battlePower = 11;
  inline bool has_battlepower() const;
  inline void clear_battlepower();
  static const int kBattlePowerFieldNumber = 11;
  inline ::google::protobuf::uint32 battlepower() const;
  inline void set_battlepower(::google::protobuf::uint32 value);
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoHeroSkill skill = 12;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 12;
  inline const ::ProtoBattleDemo::ProtoBattleDemoHeroSkill& skill(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoHeroSkill* mutable_skill(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoHeroSkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHeroSkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHeroSkill >*
      mutable_skill();
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoHero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_acrit();
  inline void clear_has_acrit();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_adodge();
  inline void clear_has_adodge();
  inline void set_has_critt();
  inline void clear_has_critt();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_battlepower();
  inline void clear_has_battlepower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 crit_;
  ::google::protobuf::uint32 acrit_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 adodge_;
  double critt_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 battlepower_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHeroSkill > skill_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoHero* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemoTeam : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoTeam();
  virtual ~ProtoBattleDemoTeam();
  
  ProtoBattleDemoTeam(const ProtoBattleDemoTeam& from);
  
  inline ProtoBattleDemoTeam& operator=(const ProtoBattleDemoTeam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoTeam& default_instance();
  
  void Swap(ProtoBattleDemoTeam* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoTeam& from);
  void MergeFrom(const ProtoBattleDemoTeam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoHero hero = 1;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemoHero& hero(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoHero* mutable_hero(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoHero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHero >*
      mutable_hero();
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::ProtoBattleDemo::ProtoBattleDemoItem& item(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoItem* mutable_item(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoItem >*
      mutable_item();
  
  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoTeam)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHero > hero_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoItem > item_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoTeam* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemoTurn : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoTurn();
  virtual ~ProtoBattleDemoTurn();
  
  ProtoBattleDemoTurn(const ProtoBattleDemoTurn& from);
  
  inline ProtoBattleDemoTurn& operator=(const ProtoBattleDemoTurn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoTurn& default_instance();
  
  void Swap(ProtoBattleDemoTurn* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoTurn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoTurn& from);
  void MergeFrom(const ProtoBattleDemoTurn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skillindex = 1;
  inline bool has_skillindex() const;
  inline void clear_skillindex();
  static const int kSkillindexFieldNumber = 1;
  inline ::google::protobuf::uint32 skillindex() const;
  inline void set_skillindex(::google::protobuf::uint32 value);
  
  // required uint32 itemindex = 2;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemindexFieldNumber = 2;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
  // optional uint32 skilldam = 3;
  inline bool has_skilldam() const;
  inline void clear_skilldam();
  static const int kSkilldamFieldNumber = 3;
  inline ::google::protobuf::uint32 skilldam() const;
  inline void set_skilldam(::google::protobuf::uint32 value);
  
  // optional bool crit = 4;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 4;
  inline bool crit() const;
  inline void set_crit(bool value);
  
  // optional uint32 extradam = 5;
  inline bool has_extradam() const;
  inline void clear_extradam();
  static const int kExtradamFieldNumber = 5;
  inline ::google::protobuf::uint32 extradam() const;
  inline void set_extradam(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoTurn)
 private:
  inline void set_has_skillindex();
  inline void clear_has_skillindex();
  inline void set_has_itemindex();
  inline void clear_has_itemindex();
  inline void set_has_skilldam();
  inline void clear_has_skilldam();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_extradam();
  inline void clear_has_extradam();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillindex_;
  ::google::protobuf::uint32 itemindex_;
  ::google::protobuf::uint32 skilldam_;
  bool crit_;
  ::google::protobuf::uint32 extradam_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoTurn* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemoTurnInfo : public ::google::protobuf::Message {
 public:
  ProtoBattleDemoTurnInfo();
  virtual ~ProtoBattleDemoTurnInfo();
  
  ProtoBattleDemoTurnInfo(const ProtoBattleDemoTurnInfo& from);
  
  inline ProtoBattleDemoTurnInfo& operator=(const ProtoBattleDemoTurnInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemoTurnInfo& default_instance();
  
  void Swap(ProtoBattleDemoTurnInfo* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemoTurnInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemoTurnInfo& from);
  void MergeFrom(const ProtoBattleDemoTurnInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 ahp = 1;
  inline bool has_ahp() const;
  inline void clear_ahp();
  static const int kAhpFieldNumber = 1;
  inline ::google::protobuf::int32 ahp() const;
  inline void set_ahp(::google::protobuf::int32 value);
  
  // required uint32 ap = 2;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kApFieldNumber = 2;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
  // required int32 dhp = 3;
  inline bool has_dhp() const;
  inline void clear_dhp();
  static const int kDhpFieldNumber = 3;
  inline ::google::protobuf::int32 dhp() const;
  inline void set_dhp(::google::protobuf::int32 value);
  
  // required uint32 dp = 4;
  inline bool has_dp() const;
  inline void clear_dp();
  static const int kDpFieldNumber = 4;
  inline ::google::protobuf::uint32 dp() const;
  inline void set_dp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemoTurnInfo)
 private:
  inline void set_has_ahp();
  inline void clear_has_ahp();
  inline void set_has_ap();
  inline void clear_has_ap();
  inline void set_has_dhp();
  inline void clear_has_dhp();
  inline void set_has_dp();
  inline void clear_has_dp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 ahp_;
  ::google::protobuf::uint32 ap_;
  ::google::protobuf::int32 dhp_;
  ::google::protobuf::uint32 dp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemoTurnInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleReq : public ::google::protobuf::Message {
 public:
  ProtoBattleReq();
  virtual ~ProtoBattleReq();
  
  ProtoBattleReq(const ProtoBattleReq& from);
  
  inline ProtoBattleReq& operator=(const ProtoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleReq& default_instance();
  
  void Swap(ProtoBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleReq& from);
  void MergeFrom(const ProtoBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 battleid = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // required uint32 ud = 2;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 2;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);
  
  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 heroid = 4;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 4;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 aimuid = 5;
  inline bool has_aimuid() const;
  inline void clear_aimuid();
  static const int kAimuidFieldNumber = 5;
  inline ::google::protobuf::uint32 aimuid() const;
  inline void set_aimuid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleReq)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_aimuid();
  inline void clear_has_aimuid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 aimuid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleResp : public ::google::protobuf::Message {
 public:
  ProtoBattleResp();
  virtual ~ProtoBattleResp();
  
  ProtoBattleResp(const ProtoBattleResp& from);
  
  inline ProtoBattleResp& operator=(const ProtoBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleResp& default_instance();
  
  void Swap(ProtoBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleResp& from);
  void MergeFrom(const ProtoBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 next = 1;
  inline bool has_next() const;
  inline void clear_next();
  static const int kNextFieldNumber = 1;
  inline ::google::protobuf::uint32 next() const;
  inline void set_next(::google::protobuf::uint32 value);
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoTurnInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::ProtoBattleDemo::ProtoBattleDemoTurnInfo& info(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* mutable_info(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleResp)
 private:
  inline void set_has_next();
  inline void clear_has_next();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo > info_;
  ::google::protobuf::uint32 next_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBattleDemo : public ::google::protobuf::Message {
 public:
  ProtoBattleDemo();
  virtual ~ProtoBattleDemo();
  
  ProtoBattleDemo(const ProtoBattleDemo& from);
  
  inline ProtoBattleDemo& operator=(const ProtoBattleDemo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBattleDemo& default_instance();
  
  void Swap(ProtoBattleDemo* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBattleDemo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBattleDemo& from);
  void MergeFrom(const ProtoBattleDemo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemoTeam attacker = 1;
  inline bool has_attacker() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemoTeam& attacker() const;
  inline ::ProtoBattleDemo::ProtoBattleDemoTeam* mutable_attacker();
  inline ::ProtoBattleDemo::ProtoBattleDemoTeam* release_attacker();
  
  // required .ProtoBattleDemo.ProtoBattleDemoTeam defender = 2;
  inline bool has_defender() const;
  inline void clear_defender();
  static const int kDefenderFieldNumber = 2;
  inline const ::ProtoBattleDemo::ProtoBattleDemoTeam& defender() const;
  inline ::ProtoBattleDemo::ProtoBattleDemoTeam* mutable_defender();
  inline ::ProtoBattleDemo::ProtoBattleDemoTeam* release_defender();
  
  // optional uint32 first = 3;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 3;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // optional bool attackerWin = 4;
  inline bool has_attackerwin() const;
  inline void clear_attackerwin();
  static const int kAttackerWinFieldNumber = 4;
  inline bool attackerwin() const;
  inline void set_attackerwin(bool value);
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoTurn turn = 5;
  inline int turn_size() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 5;
  inline const ::ProtoBattleDemo::ProtoBattleDemoTurn& turn(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoTurn* mutable_turn(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoTurn* add_turn();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurn >&
      turn() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurn >*
      mutable_turn();
  
  // repeated .ProtoBattleDemo.ProtoBattleDemoTurnInfo info = 6;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 6;
  inline const ::ProtoBattleDemo::ProtoBattleDemoTurnInfo& info(int index) const;
  inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* mutable_info(int index);
  inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattleDemo.ProtoBattleDemo)
 private:
  inline void set_has_attacker();
  inline void clear_has_attacker();
  inline void set_has_defender();
  inline void clear_has_defender();
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_attackerwin();
  inline void clear_has_attackerwin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemoTeam* attacker_;
  ::ProtoBattleDemo::ProtoBattleDemoTeam* defender_;
  ::google::protobuf::uint32 first_;
  bool attackerwin_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurn > turn_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleDemo_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleDemo_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBattleDemo* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoBattleDemoHeroSkill

// required uint32 id = 1;
inline bool ProtoBattleDemoHeroSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemoHeroSkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHeroSkill::id() const {
  return id_;
}
inline void ProtoBattleDemoHeroSkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool ProtoBattleDemoHeroSkill::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemoHeroSkill::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHeroSkill::type() const {
  return type_;
}
inline void ProtoBattleDemoHeroSkill::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional double s = 3;
inline bool ProtoBattleDemoHeroSkill::has_s() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_s() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_s() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoHeroSkill::clear_s() {
  s_ = 0;
  clear_has_s();
}
inline double ProtoBattleDemoHeroSkill::s() const {
  return s_;
}
inline void ProtoBattleDemoHeroSkill::set_s(double value) {
  set_has_s();
  s_ = value;
}

// optional int32 c = 4;
inline bool ProtoBattleDemoHeroSkill::has_c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_c() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_c() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemoHeroSkill::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline ::google::protobuf::int32 ProtoBattleDemoHeroSkill::c() const {
  return c_;
}
inline void ProtoBattleDemoHeroSkill::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
}

// optional uint32 pc = 5;
inline bool ProtoBattleDemoHeroSkill::has_pc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_pc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_pc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleDemoHeroSkill::clear_pc() {
  pc_ = 0u;
  clear_has_pc();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHeroSkill::pc() const {
  return pc_;
}
inline void ProtoBattleDemoHeroSkill::set_pc(::google::protobuf::uint32 value) {
  set_has_pc();
  pc_ = value;
}

// optional uint32 pa = 6;
inline bool ProtoBattleDemoHeroSkill::has_pa() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoBattleDemoHeroSkill::set_has_pa() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoBattleDemoHeroSkill::clear_has_pa() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoBattleDemoHeroSkill::clear_pa() {
  pa_ = 0u;
  clear_has_pa();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHeroSkill::pa() const {
  return pa_;
}
inline void ProtoBattleDemoHeroSkill::set_pa(::google::protobuf::uint32 value) {
  set_has_pa();
  pa_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleDemoItem

// required uint32 id = 1;
inline bool ProtoBattleDemoItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemoItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemoItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemoItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoBattleDemoItem::id() const {
  return id_;
}
inline void ProtoBattleDemoItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool ProtoBattleDemoItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemoItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemoItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemoItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ProtoBattleDemoItem::type() const {
  return type_;
}
inline void ProtoBattleDemoItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional double s = 3;
inline bool ProtoBattleDemoItem::has_s() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoItem::set_has_s() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoItem::clear_has_s() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoItem::clear_s() {
  s_ = 0;
  clear_has_s();
}
inline double ProtoBattleDemoItem::s() const {
  return s_;
}
inline void ProtoBattleDemoItem::set_s(double value) {
  set_has_s();
  s_ = value;
}

// optional int32 c = 4;
inline bool ProtoBattleDemoItem::has_c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemoItem::set_has_c() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemoItem::clear_has_c() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemoItem::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline ::google::protobuf::int32 ProtoBattleDemoItem::c() const {
  return c_;
}
inline void ProtoBattleDemoItem::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
}

// optional uint32 turn = 5;
inline bool ProtoBattleDemoItem::has_turn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleDemoItem::set_has_turn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleDemoItem::clear_has_turn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleDemoItem::clear_turn() {
  turn_ = 0u;
  clear_has_turn();
}
inline ::google::protobuf::uint32 ProtoBattleDemoItem::turn() const {
  return turn_;
}
inline void ProtoBattleDemoItem::set_turn(::google::protobuf::uint32 value) {
  set_has_turn();
  turn_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleDemoHero

// required uint32 id = 1;
inline bool ProtoBattleDemoHero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemoHero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemoHero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemoHero::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::id() const {
  return id_;
}
inline void ProtoBattleDemoHero::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 hp = 2;
inline bool ProtoBattleDemoHero::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemoHero::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemoHero::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemoHero::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::hp() const {
  return hp_;
}
inline void ProtoBattleDemoHero::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 att = 3;
inline bool ProtoBattleDemoHero::has_att() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoHero::set_has_att() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoHero::clear_has_att() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoHero::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::att() const {
  return att_;
}
inline void ProtoBattleDemoHero::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// optional uint32 def = 4;
inline bool ProtoBattleDemoHero::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemoHero::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemoHero::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemoHero::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::def() const {
  return def_;
}
inline void ProtoBattleDemoHero::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// optional uint32 crit = 5;
inline bool ProtoBattleDemoHero::has_crit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleDemoHero::set_has_crit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleDemoHero::clear_has_crit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleDemoHero::clear_crit() {
  crit_ = 0u;
  clear_has_crit();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::crit() const {
  return crit_;
}
inline void ProtoBattleDemoHero::set_crit(::google::protobuf::uint32 value) {
  set_has_crit();
  crit_ = value;
}

// optional uint32 acrit = 6;
inline bool ProtoBattleDemoHero::has_acrit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoBattleDemoHero::set_has_acrit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoBattleDemoHero::clear_has_acrit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoBattleDemoHero::clear_acrit() {
  acrit_ = 0u;
  clear_has_acrit();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::acrit() const {
  return acrit_;
}
inline void ProtoBattleDemoHero::set_acrit(::google::protobuf::uint32 value) {
  set_has_acrit();
  acrit_ = value;
}

// optional uint32 dodge = 7;
inline bool ProtoBattleDemoHero::has_dodge() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoBattleDemoHero::set_has_dodge() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoBattleDemoHero::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoBattleDemoHero::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::dodge() const {
  return dodge_;
}
inline void ProtoBattleDemoHero::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// optional uint32 adodge = 8;
inline bool ProtoBattleDemoHero::has_adodge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoBattleDemoHero::set_has_adodge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoBattleDemoHero::clear_has_adodge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoBattleDemoHero::clear_adodge() {
  adodge_ = 0u;
  clear_has_adodge();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::adodge() const {
  return adodge_;
}
inline void ProtoBattleDemoHero::set_adodge(::google::protobuf::uint32 value) {
  set_has_adodge();
  adodge_ = value;
}

// optional double critt = 9;
inline bool ProtoBattleDemoHero::has_critt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoBattleDemoHero::set_has_critt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoBattleDemoHero::clear_has_critt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoBattleDemoHero::clear_critt() {
  critt_ = 0;
  clear_has_critt();
}
inline double ProtoBattleDemoHero::critt() const {
  return critt_;
}
inline void ProtoBattleDemoHero::set_critt(double value) {
  set_has_critt();
  critt_ = value;
}

// optional uint32 speed = 10;
inline bool ProtoBattleDemoHero::has_speed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoBattleDemoHero::set_has_speed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoBattleDemoHero::clear_has_speed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoBattleDemoHero::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::speed() const {
  return speed_;
}
inline void ProtoBattleDemoHero::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// optional uint32 battlePower = 11;
inline bool ProtoBattleDemoHero::has_battlepower() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoBattleDemoHero::set_has_battlepower() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoBattleDemoHero::clear_has_battlepower() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoBattleDemoHero::clear_battlepower() {
  battlepower_ = 0u;
  clear_has_battlepower();
}
inline ::google::protobuf::uint32 ProtoBattleDemoHero::battlepower() const {
  return battlepower_;
}
inline void ProtoBattleDemoHero::set_battlepower(::google::protobuf::uint32 value) {
  set_has_battlepower();
  battlepower_ = value;
}

// repeated .ProtoBattleDemo.ProtoBattleDemoHeroSkill skill = 12;
inline int ProtoBattleDemoHero::skill_size() const {
  return skill_.size();
}
inline void ProtoBattleDemoHero::clear_skill() {
  skill_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoHeroSkill& ProtoBattleDemoHero::skill(int index) const {
  return skill_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoHeroSkill* ProtoBattleDemoHero::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoHeroSkill* ProtoBattleDemoHero::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHeroSkill >&
ProtoBattleDemoHero::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHeroSkill >*
ProtoBattleDemoHero::mutable_skill() {
  return &skill_;
}

// -------------------------------------------------------------------

// ProtoBattleDemoTeam

// repeated .ProtoBattleDemo.ProtoBattleDemoHero hero = 1;
inline int ProtoBattleDemoTeam::hero_size() const {
  return hero_.size();
}
inline void ProtoBattleDemoTeam::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoHero& ProtoBattleDemoTeam::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoHero* ProtoBattleDemoTeam::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoHero* ProtoBattleDemoTeam::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHero >&
ProtoBattleDemoTeam::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoHero >*
ProtoBattleDemoTeam::mutable_hero() {
  return &hero_;
}

// repeated .ProtoBattleDemo.ProtoBattleDemoItem item = 2;
inline int ProtoBattleDemoTeam::item_size() const {
  return item_.size();
}
inline void ProtoBattleDemoTeam::clear_item() {
  item_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoItem& ProtoBattleDemoTeam::item(int index) const {
  return item_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoItem* ProtoBattleDemoTeam::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoItem* ProtoBattleDemoTeam::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoItem >&
ProtoBattleDemoTeam::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoItem >*
ProtoBattleDemoTeam::mutable_item() {
  return &item_;
}

// required uint32 level = 3;
inline bool ProtoBattleDemoTeam::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoTeam::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoTeam::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoTeam::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTeam::level() const {
  return level_;
}
inline void ProtoBattleDemoTeam::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleDemoTurn

// required uint32 skillindex = 1;
inline bool ProtoBattleDemoTurn::has_skillindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemoTurn::set_has_skillindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemoTurn::clear_has_skillindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemoTurn::clear_skillindex() {
  skillindex_ = 0u;
  clear_has_skillindex();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurn::skillindex() const {
  return skillindex_;
}
inline void ProtoBattleDemoTurn::set_skillindex(::google::protobuf::uint32 value) {
  set_has_skillindex();
  skillindex_ = value;
}

// required uint32 itemindex = 2;
inline bool ProtoBattleDemoTurn::has_itemindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemoTurn::set_has_itemindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemoTurn::clear_has_itemindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemoTurn::clear_itemindex() {
  itemindex_ = 0u;
  clear_has_itemindex();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurn::itemindex() const {
  return itemindex_;
}
inline void ProtoBattleDemoTurn::set_itemindex(::google::protobuf::uint32 value) {
  set_has_itemindex();
  itemindex_ = value;
}

// optional uint32 skilldam = 3;
inline bool ProtoBattleDemoTurn::has_skilldam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoTurn::set_has_skilldam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoTurn::clear_has_skilldam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoTurn::clear_skilldam() {
  skilldam_ = 0u;
  clear_has_skilldam();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurn::skilldam() const {
  return skilldam_;
}
inline void ProtoBattleDemoTurn::set_skilldam(::google::protobuf::uint32 value) {
  set_has_skilldam();
  skilldam_ = value;
}

// optional bool crit = 4;
inline bool ProtoBattleDemoTurn::has_crit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemoTurn::set_has_crit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemoTurn::clear_has_crit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemoTurn::clear_crit() {
  crit_ = false;
  clear_has_crit();
}
inline bool ProtoBattleDemoTurn::crit() const {
  return crit_;
}
inline void ProtoBattleDemoTurn::set_crit(bool value) {
  set_has_crit();
  crit_ = value;
}

// optional uint32 extradam = 5;
inline bool ProtoBattleDemoTurn::has_extradam() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleDemoTurn::set_has_extradam() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleDemoTurn::clear_has_extradam() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleDemoTurn::clear_extradam() {
  extradam_ = 0u;
  clear_has_extradam();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurn::extradam() const {
  return extradam_;
}
inline void ProtoBattleDemoTurn::set_extradam(::google::protobuf::uint32 value) {
  set_has_extradam();
  extradam_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleDemoTurnInfo

// required int32 ahp = 1;
inline bool ProtoBattleDemoTurnInfo::has_ahp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemoTurnInfo::set_has_ahp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemoTurnInfo::clear_has_ahp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemoTurnInfo::clear_ahp() {
  ahp_ = 0;
  clear_has_ahp();
}
inline ::google::protobuf::int32 ProtoBattleDemoTurnInfo::ahp() const {
  return ahp_;
}
inline void ProtoBattleDemoTurnInfo::set_ahp(::google::protobuf::int32 value) {
  set_has_ahp();
  ahp_ = value;
}

// required uint32 ap = 2;
inline bool ProtoBattleDemoTurnInfo::has_ap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemoTurnInfo::set_has_ap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemoTurnInfo::clear_has_ap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemoTurnInfo::clear_ap() {
  ap_ = 0u;
  clear_has_ap();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurnInfo::ap() const {
  return ap_;
}
inline void ProtoBattleDemoTurnInfo::set_ap(::google::protobuf::uint32 value) {
  set_has_ap();
  ap_ = value;
}

// required int32 dhp = 3;
inline bool ProtoBattleDemoTurnInfo::has_dhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemoTurnInfo::set_has_dhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemoTurnInfo::clear_has_dhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemoTurnInfo::clear_dhp() {
  dhp_ = 0;
  clear_has_dhp();
}
inline ::google::protobuf::int32 ProtoBattleDemoTurnInfo::dhp() const {
  return dhp_;
}
inline void ProtoBattleDemoTurnInfo::set_dhp(::google::protobuf::int32 value) {
  set_has_dhp();
  dhp_ = value;
}

// required uint32 dp = 4;
inline bool ProtoBattleDemoTurnInfo::has_dp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemoTurnInfo::set_has_dp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemoTurnInfo::clear_has_dp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemoTurnInfo::clear_dp() {
  dp_ = 0u;
  clear_has_dp();
}
inline ::google::protobuf::uint32 ProtoBattleDemoTurnInfo::dp() const {
  return dp_;
}
inline void ProtoBattleDemoTurnInfo::set_dp(::google::protobuf::uint32 value) {
  set_has_dp();
  dp_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleReq

// required uint32 battleid = 1;
inline bool ProtoBattleReq::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleReq::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleReq::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleReq::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 ProtoBattleReq::battleid() const {
  return battleid_;
}
inline void ProtoBattleReq::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// required uint32 ud = 2;
inline bool ProtoBattleReq::has_ud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleReq::set_has_ud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 ProtoBattleReq::ud() const {
  return ud_;
}
inline void ProtoBattleReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
}

// required uint32 id = 3;
inline bool ProtoBattleReq::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleReq::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ProtoBattleReq::id() const {
  return id_;
}
inline void ProtoBattleReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 heroid = 4;
inline bool ProtoBattleReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 ProtoBattleReq::heroid() const {
  return heroid_;
}
inline void ProtoBattleReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 aimuid = 5;
inline bool ProtoBattleReq::has_aimuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoBattleReq::set_has_aimuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoBattleReq::clear_has_aimuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoBattleReq::clear_aimuid() {
  aimuid_ = 0u;
  clear_has_aimuid();
}
inline ::google::protobuf::uint32 ProtoBattleReq::aimuid() const {
  return aimuid_;
}
inline void ProtoBattleReq::set_aimuid(::google::protobuf::uint32 value) {
  set_has_aimuid();
  aimuid_ = value;
}

// -------------------------------------------------------------------

// ProtoBattleResp

// required uint32 next = 1;
inline bool ProtoBattleResp::has_next() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleResp::set_has_next() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleResp::clear_has_next() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleResp::clear_next() {
  next_ = 0u;
  clear_has_next();
}
inline ::google::protobuf::uint32 ProtoBattleResp::next() const {
  return next_;
}
inline void ProtoBattleResp::set_next(::google::protobuf::uint32 value) {
  set_has_next();
  next_ = value;
}

// repeated .ProtoBattleDemo.ProtoBattleDemoTurnInfo info = 2;
inline int ProtoBattleResp::info_size() const {
  return info_.size();
}
inline void ProtoBattleResp::clear_info() {
  info_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoTurnInfo& ProtoBattleResp::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* ProtoBattleResp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* ProtoBattleResp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >&
ProtoBattleResp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >*
ProtoBattleResp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// ProtoBattleDemo

// required .ProtoBattleDemo.ProtoBattleDemoTeam attacker = 1;
inline bool ProtoBattleDemo::has_attacker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBattleDemo::set_has_attacker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBattleDemo::clear_has_attacker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBattleDemo::clear_attacker() {
  if (attacker_ != NULL) attacker_->::ProtoBattleDemo::ProtoBattleDemoTeam::Clear();
  clear_has_attacker();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoTeam& ProtoBattleDemo::attacker() const {
  return attacker_ != NULL ? *attacker_ : *default_instance_->attacker_;
}
inline ::ProtoBattleDemo::ProtoBattleDemoTeam* ProtoBattleDemo::mutable_attacker() {
  set_has_attacker();
  if (attacker_ == NULL) attacker_ = new ::ProtoBattleDemo::ProtoBattleDemoTeam;
  return attacker_;
}
inline ::ProtoBattleDemo::ProtoBattleDemoTeam* ProtoBattleDemo::release_attacker() {
  clear_has_attacker();
  ::ProtoBattleDemo::ProtoBattleDemoTeam* temp = attacker_;
  attacker_ = NULL;
  return temp;
}

// required .ProtoBattleDemo.ProtoBattleDemoTeam defender = 2;
inline bool ProtoBattleDemo::has_defender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBattleDemo::set_has_defender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoBattleDemo::clear_has_defender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoBattleDemo::clear_defender() {
  if (defender_ != NULL) defender_->::ProtoBattleDemo::ProtoBattleDemoTeam::Clear();
  clear_has_defender();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoTeam& ProtoBattleDemo::defender() const {
  return defender_ != NULL ? *defender_ : *default_instance_->defender_;
}
inline ::ProtoBattleDemo::ProtoBattleDemoTeam* ProtoBattleDemo::mutable_defender() {
  set_has_defender();
  if (defender_ == NULL) defender_ = new ::ProtoBattleDemo::ProtoBattleDemoTeam;
  return defender_;
}
inline ::ProtoBattleDemo::ProtoBattleDemoTeam* ProtoBattleDemo::release_defender() {
  clear_has_defender();
  ::ProtoBattleDemo::ProtoBattleDemoTeam* temp = defender_;
  defender_ = NULL;
  return temp;
}

// optional uint32 first = 3;
inline bool ProtoBattleDemo::has_first() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBattleDemo::set_has_first() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoBattleDemo::clear_has_first() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoBattleDemo::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 ProtoBattleDemo::first() const {
  return first_;
}
inline void ProtoBattleDemo::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional bool attackerWin = 4;
inline bool ProtoBattleDemo::has_attackerwin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoBattleDemo::set_has_attackerwin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoBattleDemo::clear_has_attackerwin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoBattleDemo::clear_attackerwin() {
  attackerwin_ = false;
  clear_has_attackerwin();
}
inline bool ProtoBattleDemo::attackerwin() const {
  return attackerwin_;
}
inline void ProtoBattleDemo::set_attackerwin(bool value) {
  set_has_attackerwin();
  attackerwin_ = value;
}

// repeated .ProtoBattleDemo.ProtoBattleDemoTurn turn = 5;
inline int ProtoBattleDemo::turn_size() const {
  return turn_.size();
}
inline void ProtoBattleDemo::clear_turn() {
  turn_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoTurn& ProtoBattleDemo::turn(int index) const {
  return turn_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurn* ProtoBattleDemo::mutable_turn(int index) {
  return turn_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurn* ProtoBattleDemo::add_turn() {
  return turn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurn >&
ProtoBattleDemo::turn() const {
  return turn_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurn >*
ProtoBattleDemo::mutable_turn() {
  return &turn_;
}

// repeated .ProtoBattleDemo.ProtoBattleDemoTurnInfo info = 6;
inline int ProtoBattleDemo::info_size() const {
  return info_.size();
}
inline void ProtoBattleDemo::clear_info() {
  info_.Clear();
}
inline const ::ProtoBattleDemo::ProtoBattleDemoTurnInfo& ProtoBattleDemo::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* ProtoBattleDemo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBattleDemo::ProtoBattleDemoTurnInfo* ProtoBattleDemo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >&
ProtoBattleDemo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleDemo::ProtoBattleDemoTurnInfo >*
ProtoBattleDemo::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBattleDemo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBattleDemo_2eproto__INCLUDED
