// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#ifndef PROTOBUF_User_2eproto__INCLUDED
#define PROTOBUF_User_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProtoNotify.pb.h"
#include "ProtoActivity.pb.h"
#include "DataCommon.pb.h"
#include "ProtoHero.pb.h"
#include "ProtoBattle.pb.h"
#include "ProtoFriend.pb.h"
#include "ProtoMartialClub.pb.h"
#include "ProtoCards.pb.h"
// @@protoc_insertion_point(includes)

namespace User {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_User_2eproto();
void protobuf_AssignDesc_User_2eproto();
void protobuf_ShutdownFile_User_2eproto();

class Base;
class ActivityItem;
class Activity;
class GradeBattle;
class User;
class RequestOtherUser;
class OtherUser;
class Tutorialstage;
class ServerTime;
class CostCashReq;
class CostCashResp;
class ChargeItem;
class AccumulateCharge;
class PushAccumulateChangeReq;
class BuyMaterialInfo;
class BuyMaterialReq;
class BuyMaterialResp;
class RequestOtherUserBC;
class SpeedUpReq;
class SpeedUpResp;
class HerosInfo;
class CardsInfo;
class UnlockCards;
class FriendInfo;
class OnhookReward;
class MartialClub;
class MartialHero;
class BuyPowerReq;
class BuyPowerResp;
class OnhookOnlinePropReward;
class InivteUserInfoCPP;
class InviteActivityUrlReq;
class CSInviteActivityUrlReq;
class GetInviteRewardReq;
class GetInviteRewardResp;
class GetAddInviteRewardReq;
class GetAddInviteRewardResp;
class GetDrawRewardReq;
class GetDrawRewardResp;
class NewUserAddExpReq;
class NewUserAddExpResp;

// ===================================================================

class Base : public ::google::protobuf::Message {
 public:
  Base();
  virtual ~Base();
  
  Base(const Base& from);
  
  inline Base& operator=(const Base& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Base& default_instance();
  
  void Swap(Base* other);
  
  // implements Message ----------------------------------------------
  
  Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Base& from);
  void MergeFrom(const Base& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 registerPlatform = 2;
  inline bool has_registerplatform() const;
  inline void clear_registerplatform();
  static const int kRegisterPlatformFieldNumber = 2;
  inline ::google::protobuf::uint32 registerplatform() const;
  inline void set_registerplatform(::google::protobuf::uint32 value);
  
  // required uint32 registerTime = 3;
  inline bool has_registertime() const;
  inline void clear_registertime();
  static const int kRegisterTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 registertime() const;
  inline void set_registertime(::google::protobuf::uint32 value);
  
  // required uint32 lastLoginPlatform = 4;
  inline bool has_lastloginplatform() const;
  inline void clear_lastloginplatform();
  static const int kLastLoginPlatformFieldNumber = 4;
  inline ::google::protobuf::uint32 lastloginplatform() const;
  inline void set_lastloginplatform(::google::protobuf::uint32 value);
  
  // required uint32 lastLoginTime = 5;
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::uint32 value);
  
  // required uint32 loginTimes = 6;
  inline bool has_logintimes() const;
  inline void clear_logintimes();
  static const int kLoginTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 logintimes() const;
  inline void set_logintimes(::google::protobuf::uint32 value);
  
  // required uint32 loginDays = 7;
  inline bool has_logindays() const;
  inline void clear_logindays();
  static const int kLoginDaysFieldNumber = 7;
  inline ::google::protobuf::uint32 logindays() const;
  inline void set_logindays(::google::protobuf::uint32 value);
  
  // required uint32 lastActiveTime = 8;
  inline bool has_lastactivetime() const;
  inline void clear_lastactivetime();
  static const int kLastActiveTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lastactivetime() const;
  inline void set_lastactivetime(::google::protobuf::uint32 value);
  
  // required uint32 lastOffTime = 9;
  inline bool has_lastofftime() const;
  inline void clear_lastofftime();
  static const int kLastOffTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 lastofftime() const;
  inline void set_lastofftime(::google::protobuf::uint32 value);
  
  // required uint32 forbidTs = 10;
  inline bool has_forbidts() const;
  inline void clear_forbidts();
  static const int kForbidTsFieldNumber = 10;
  inline ::google::protobuf::uint32 forbidts() const;
  inline void set_forbidts(::google::protobuf::uint32 value);
  
  // required bytes forbidReason = 11;
  inline bool has_forbidreason() const;
  inline void clear_forbidreason();
  static const int kForbidReasonFieldNumber = 11;
  inline const ::std::string& forbidreason() const;
  inline void set_forbidreason(const ::std::string& value);
  inline void set_forbidreason(const char* value);
  inline void set_forbidreason(const void* value, size_t size);
  inline ::std::string* mutable_forbidreason();
  inline ::std::string* release_forbidreason();
  
  // required uint32 tutorialStage = 12;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 12;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);
  
  // required bytes name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required bytes fig = 14;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 14;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required uint64 exp = 15;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 15;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // required uint32 level = 16;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 16;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 acccharge = 17;
  inline bool has_acccharge() const;
  inline void clear_acccharge();
  static const int kAccchargeFieldNumber = 17;
  inline ::google::protobuf::uint32 acccharge() const;
  inline void set_acccharge(::google::protobuf::uint32 value);
  
  // required uint32 viplevel = 18;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 18;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);
  
  // required uint32 cash = 19;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 19;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // required uint32 coin = 20;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 20;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // required uint32 firstRecharge = 21;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 21;
  inline ::google::protobuf::uint32 firstrecharge() const;
  inline void set_firstrecharge(::google::protobuf::uint32 value);
  
  // required uint32 allianceId = 22;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 22;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);
  
  // required bytes archiveChip = 23;
  inline bool has_archivechip() const;
  inline void clear_archivechip();
  static const int kArchiveChipFieldNumber = 23;
  inline const ::std::string& archivechip() const;
  inline void set_archivechip(const ::std::string& value);
  inline void set_archivechip(const char* value);
  inline void set_archivechip(const void* value, size_t size);
  inline ::std::string* mutable_archivechip();
  inline ::std::string* release_archivechip();
  
  // required bytes archiveLevel = 24;
  inline bool has_archivelevel() const;
  inline void clear_archivelevel();
  static const int kArchiveLevelFieldNumber = 24;
  inline const ::std::string& archivelevel() const;
  inline void set_archivelevel(const ::std::string& value);
  inline void set_archivelevel(const char* value);
  inline void set_archivelevel(const void* value, size_t size);
  inline ::std::string* mutable_archivelevel();
  inline ::std::string* release_archivelevel();
  
  // required bytes archiveReward = 25;
  inline bool has_archivereward() const;
  inline void clear_archivereward();
  static const int kArchiveRewardFieldNumber = 25;
  inline const ::std::string& archivereward() const;
  inline void set_archivereward(const ::std::string& value);
  inline void set_archivereward(const char* value);
  inline void set_archivereward(const void* value, size_t size);
  inline ::std::string* mutable_archivereward();
  inline ::std::string* release_archivereward();
  
  // required uint32 power = 26;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 26;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);
  
  // required uint32 recoverTime = 27;
  inline bool has_recovertime() const;
  inline void clear_recovertime();
  static const int kRecoverTimeFieldNumber = 27;
  inline ::google::protobuf::uint32 recovertime() const;
  inline void set_recovertime(::google::protobuf::uint32 value);
  
  // required uint32 pass = 28;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 28;
  inline ::google::protobuf::uint32 pass() const;
  inline void set_pass(::google::protobuf::uint32 value);
  
  // required bytes limitTimesProps = 29;
  inline bool has_limittimesprops() const;
  inline void clear_limittimesprops();
  static const int kLimitTimesPropsFieldNumber = 29;
  inline const ::std::string& limittimesprops() const;
  inline void set_limittimesprops(const ::std::string& value);
  inline void set_limittimesprops(const char* value);
  inline void set_limittimesprops(const void* value, size_t size);
  inline ::std::string* mutable_limittimesprops();
  inline ::std::string* release_limittimesprops();
  
  // required uint32 usePropsTs = 30;
  inline bool has_usepropsts() const;
  inline void clear_usepropsts();
  static const int kUsePropsTsFieldNumber = 30;
  inline ::google::protobuf::uint32 usepropsts() const;
  inline void set_usepropsts(::google::protobuf::uint32 value);
  
  // required uint32 heroId = 31;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 31;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint64 honor = 32;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 32;
  inline ::google::protobuf::uint64 honor() const;
  inline void set_honor(::google::protobuf::uint64 value);
  
  // required uint32 dailyPower = 33;
  inline bool has_dailypower() const;
  inline void clear_dailypower();
  static const int kDailyPowerFieldNumber = 33;
  inline ::google::protobuf::uint32 dailypower() const;
  inline void set_dailypower(::google::protobuf::uint32 value);
  
  // required uint32 dailyPowerTs = 34;
  inline bool has_dailypowerts() const;
  inline void clear_dailypowerts();
  static const int kDailyPowerTsFieldNumber = 34;
  inline ::google::protobuf::uint32 dailypowerts() const;
  inline void set_dailypowerts(::google::protobuf::uint32 value);
  
  // required uint32 onhookCoinTs = 35;
  inline bool has_onhookcoints() const;
  inline void clear_onhookcoints();
  static const int kOnhookCoinTsFieldNumber = 35;
  inline ::google::protobuf::uint32 onhookcoints() const;
  inline void set_onhookcoints(::google::protobuf::uint32 value);
  
  // required uint32 onhookExpTs = 36;
  inline bool has_onhookexpts() const;
  inline void clear_onhookexpts();
  static const int kOnhookExpTsFieldNumber = 36;
  inline ::google::protobuf::uint32 onhookexpts() const;
  inline void set_onhookexpts(::google::protobuf::uint32 value);
  
  // required uint32 dailyBattleTs = 37;
  inline bool has_dailybattlets() const;
  inline void clear_dailybattlets();
  static const int kDailyBattleTsFieldNumber = 37;
  inline ::google::protobuf::uint32 dailybattlets() const;
  inline void set_dailybattlets(::google::protobuf::uint32 value);
  
  // required uint32 dailyBattleCount = 38;
  inline bool has_dailybattlecount() const;
  inline void clear_dailybattlecount();
  static const int kDailyBattleCountFieldNumber = 38;
  inline ::google::protobuf::uint32 dailybattlecount() const;
  inline void set_dailybattlecount(::google::protobuf::uint32 value);
  
  // required uint32 inviteFriendCount = 39;
  inline bool has_invitefriendcount() const;
  inline void clear_invitefriendcount();
  static const int kInviteFriendCountFieldNumber = 39;
  inline ::google::protobuf::uint32 invitefriendcount() const;
  inline void set_invitefriendcount(::google::protobuf::uint32 value);
  
  // required uint64 inviteRewardMark = 40;
  inline bool has_inviterewardmark() const;
  inline void clear_inviterewardmark();
  static const int kInviteRewardMarkFieldNumber = 40;
  inline ::google::protobuf::uint64 inviterewardmark() const;
  inline void set_inviterewardmark(::google::protobuf::uint64 value);
  
  // required uint32 inviteAddRewardMark = 41;
  inline bool has_inviteaddrewardmark() const;
  inline void clear_inviteaddrewardmark();
  static const int kInviteAddRewardMarkFieldNumber = 41;
  inline ::google::protobuf::uint32 inviteaddrewardmark() const;
  inline void set_inviteaddrewardmark(::google::protobuf::uint32 value);
  
  // required uint32 freeDrawRewardsTs = 42;
  inline bool has_freedrawrewardsts() const;
  inline void clear_freedrawrewardsts();
  static const int kFreeDrawRewardsTsFieldNumber = 42;
  inline ::google::protobuf::uint32 freedrawrewardsts() const;
  inline void set_freedrawrewardsts(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.Base)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_registerplatform();
  inline void clear_has_registerplatform();
  inline void set_has_registertime();
  inline void clear_has_registertime();
  inline void set_has_lastloginplatform();
  inline void clear_has_lastloginplatform();
  inline void set_has_lastlogintime();
  inline void clear_has_lastlogintime();
  inline void set_has_logintimes();
  inline void clear_has_logintimes();
  inline void set_has_logindays();
  inline void clear_has_logindays();
  inline void set_has_lastactivetime();
  inline void clear_has_lastactivetime();
  inline void set_has_lastofftime();
  inline void clear_has_lastofftime();
  inline void set_has_forbidts();
  inline void clear_has_forbidts();
  inline void set_has_forbidreason();
  inline void clear_has_forbidreason();
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_acccharge();
  inline void clear_has_acccharge();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_archivechip();
  inline void clear_has_archivechip();
  inline void set_has_archivelevel();
  inline void clear_has_archivelevel();
  inline void set_has_archivereward();
  inline void clear_has_archivereward();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_recovertime();
  inline void clear_has_recovertime();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_limittimesprops();
  inline void clear_has_limittimesprops();
  inline void set_has_usepropsts();
  inline void clear_has_usepropsts();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_dailypower();
  inline void clear_has_dailypower();
  inline void set_has_dailypowerts();
  inline void clear_has_dailypowerts();
  inline void set_has_onhookcoints();
  inline void clear_has_onhookcoints();
  inline void set_has_onhookexpts();
  inline void clear_has_onhookexpts();
  inline void set_has_dailybattlets();
  inline void clear_has_dailybattlets();
  inline void set_has_dailybattlecount();
  inline void clear_has_dailybattlecount();
  inline void set_has_invitefriendcount();
  inline void clear_has_invitefriendcount();
  inline void set_has_inviterewardmark();
  inline void clear_has_inviterewardmark();
  inline void set_has_inviteaddrewardmark();
  inline void clear_has_inviteaddrewardmark();
  inline void set_has_freedrawrewardsts();
  inline void clear_has_freedrawrewardsts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 registerplatform_;
  ::google::protobuf::uint32 registertime_;
  ::google::protobuf::uint32 lastloginplatform_;
  ::google::protobuf::uint32 lastlogintime_;
  ::google::protobuf::uint32 logintimes_;
  ::google::protobuf::uint32 logindays_;
  ::google::protobuf::uint32 lastactivetime_;
  ::google::protobuf::uint32 lastofftime_;
  ::google::protobuf::uint32 forbidts_;
  ::std::string* forbidreason_;
  ::std::string* name_;
  ::std::string* fig_;
  ::google::protobuf::uint32 tutorialstage_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 acccharge_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 firstrecharge_;
  ::google::protobuf::uint32 allianceid_;
  ::std::string* archivechip_;
  ::std::string* archivelevel_;
  ::std::string* archivereward_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 recovertime_;
  ::std::string* limittimesprops_;
  ::google::protobuf::uint32 pass_;
  ::google::protobuf::uint32 usepropsts_;
  ::google::protobuf::uint64 honor_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 dailypower_;
  ::google::protobuf::uint32 dailypowerts_;
  ::google::protobuf::uint32 onhookcoints_;
  ::google::protobuf::uint32 onhookexpts_;
  ::google::protobuf::uint32 dailybattlets_;
  ::google::protobuf::uint32 dailybattlecount_;
  ::google::protobuf::uint32 invitefriendcount_;
  ::google::protobuf::uint64 inviterewardmark_;
  ::google::protobuf::uint32 inviteaddrewardmark_;
  ::google::protobuf::uint32 freedrawrewardsts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(42 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static Base* default_instance_;
};
// -------------------------------------------------------------------

class ActivityItem : public ::google::protobuf::Message {
 public:
  ActivityItem();
  virtual ~ActivityItem();
  
  ActivityItem(const ActivityItem& from);
  
  inline ActivityItem& operator=(const ActivityItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityItem& default_instance();
  
  void Swap(ActivityItem* other);
  
  // implements Message ----------------------------------------------
  
  ActivityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityItem& from);
  void MergeFrom(const ActivityItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 bts = 2;
  inline bool has_bts() const;
  inline void clear_bts();
  static const int kBtsFieldNumber = 2;
  inline ::google::protobuf::uint32 bts() const;
  inline void set_bts(::google::protobuf::uint32 value);
  
  // required uint32 ets = 3;
  inline bool has_ets() const;
  inline void clear_ets();
  static const int kEtsFieldNumber = 3;
  inline ::google::protobuf::uint32 ets() const;
  inline void set_ets(::google::protobuf::uint32 value);
  
  // required uint32 ver = 4;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 4;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.ActivityItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bts();
  inline void clear_has_bts();
  inline void set_has_ets();
  inline void clear_has_ets();
  inline void set_has_ver();
  inline void clear_has_ver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 bts_;
  ::google::protobuf::uint32 ets_;
  ::google::protobuf::uint32 ver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static ActivityItem* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();
  
  Activity(const Activity& from);
  
  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();
  
  void Swap(Activity* other);
  
  // implements Message ----------------------------------------------
  
  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .User.ActivityItem act = 1;
  inline int act_size() const;
  inline void clear_act();
  static const int kActFieldNumber = 1;
  inline const ::User::ActivityItem& act(int index) const;
  inline ::User::ActivityItem* mutable_act(int index);
  inline ::User::ActivityItem* add_act();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
      act() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
      mutable_act();
  
  // @@protoc_insertion_point(class_scope:User.Activity)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::User::ActivityItem > act_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class GradeBattle : public ::google::protobuf::Message {
 public:
  GradeBattle();
  virtual ~GradeBattle();
  
  GradeBattle(const GradeBattle& from);
  
  inline GradeBattle& operator=(const GradeBattle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GradeBattle& default_instance();
  
  void Swap(GradeBattle* other);
  
  // implements Message ----------------------------------------------
  
  GradeBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GradeBattle& from);
  void MergeFrom(const GradeBattle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // required uint32 dailyScore = 2;
  inline bool has_dailyscore() const;
  inline void clear_dailyscore();
  static const int kDailyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 dailyscore() const;
  inline void set_dailyscore(::google::protobuf::uint32 value);
  
  // required uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // required uint32 ts = 4;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 4;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.GradeBattle)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_dailyscore();
  inline void clear_has_dailyscore();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_ts();
  inline void clear_has_ts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 dailyscore_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GradeBattle* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();
  
  User(const User& from);
  
  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();
  
  void Swap(User* other);
  
  // implements Message ----------------------------------------------
  
  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  
  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required .User.Activity activity = 3;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 3;
  inline const ::User::Activity& activity() const;
  inline ::User::Activity* mutable_activity();
  inline ::User::Activity* release_activity();
  
  // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
  inline bool has_notifies() const;
  inline void clear_notifies();
  static const int kNotifiesFieldNumber = 4;
  inline const ::ProtoNotify::NotifyItemCPPAll& notifies() const;
  inline ::ProtoNotify::NotifyItemCPPAll* mutable_notifies();
  inline ::ProtoNotify::NotifyItemCPPAll* release_notifies();
  
  // required .User.AccumulateCharge charges = 5;
  inline bool has_charges() const;
  inline void clear_charges();
  static const int kChargesFieldNumber = 5;
  inline const ::User::AccumulateCharge& charges() const;
  inline ::User::AccumulateCharge* mutable_charges();
  inline ::User::AccumulateCharge* release_charges();
  
  // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
  inline bool has_gameactivity() const;
  inline void clear_gameactivity();
  static const int kGameactivityFieldNumber = 6;
  inline const ::ProtoActivity::GameAcitivityAllCPP& gameactivity() const;
  inline ::ProtoActivity::GameAcitivityAllCPP* mutable_gameactivity();
  inline ::ProtoActivity::GameAcitivityAllCPP* release_gameactivity();
  
  // repeated .DataCommon.PropsItemCPP item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline const ::DataCommon::PropsItemCPP& item(int index) const;
  inline ::DataCommon::PropsItemCPP* mutable_item(int index);
  inline ::DataCommon::PropsItemCPP* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
      mutable_item();
  
  // required uint32 opents = 8;
  inline bool has_opents() const;
  inline void clear_opents();
  static const int kOpentsFieldNumber = 8;
  inline ::google::protobuf::uint32 opents() const;
  inline void set_opents(::google::protobuf::uint32 value);
  
  // required .User.HerosInfo heros = 9;
  inline bool has_heros() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 9;
  inline const ::User::HerosInfo& heros() const;
  inline ::User::HerosInfo* mutable_heros();
  inline ::User::HerosInfo* release_heros();
  
  // required .User.CardsInfo cards = 10;
  inline bool has_cards() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 10;
  inline const ::User::CardsInfo& cards() const;
  inline ::User::CardsInfo* mutable_cards();
  inline ::User::CardsInfo* release_cards();
  
  // required .User.UnlockCards unlock = 11;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 11;
  inline const ::User::UnlockCards& unlock() const;
  inline ::User::UnlockCards* mutable_unlock();
  inline ::User::UnlockCards* release_unlock();
  
  // required .User.GradeBattle grade = 12;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 12;
  inline const ::User::GradeBattle& grade() const;
  inline ::User::GradeBattle* mutable_grade();
  inline ::User::GradeBattle* release_grade();
  
  // required .User.FriendInfo friends = 13;
  inline bool has_friends() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 13;
  inline const ::User::FriendInfo& friends() const;
  inline ::User::FriendInfo* mutable_friends();
  inline ::User::FriendInfo* release_friends();
  
  // required .User.OnhookReward onhook = 14;
  inline bool has_onhook() const;
  inline void clear_onhook();
  static const int kOnhookFieldNumber = 14;
  inline const ::User::OnhookReward& onhook() const;
  inline ::User::OnhookReward* mutable_onhook();
  inline ::User::OnhookReward* release_onhook();
  
  // required .User.MartialClub allclub = 15;
  inline bool has_allclub() const;
  inline void clear_allclub();
  static const int kAllclubFieldNumber = 15;
  inline const ::User::MartialClub& allclub() const;
  inline ::User::MartialClub* mutable_allclub();
  inline ::User::MartialClub* release_allclub();
  
  // required .ProtoNotify.PostItemCPPAll post = 16;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 16;
  inline const ::ProtoNotify::PostItemCPPAll& post() const;
  inline ::ProtoNotify::PostItemCPPAll* mutable_post();
  inline ::ProtoNotify::PostItemCPPAll* release_post();
  
  // required uint32 drawRewardId = 17;
  inline bool has_drawrewardid() const;
  inline void clear_drawrewardid();
  static const int kDrawRewardIdFieldNumber = 17;
  inline ::google::protobuf::uint32 drawrewardid() const;
  inline void set_drawrewardid(::google::protobuf::uint32 value);
  
  // repeated .User.InivteUserInfoCPP inviteInfo = 18;
  inline int inviteinfo_size() const;
  inline void clear_inviteinfo();
  static const int kInviteInfoFieldNumber = 18;
  inline const ::User::InivteUserInfoCPP& inviteinfo(int index) const;
  inline ::User::InivteUserInfoCPP* mutable_inviteinfo(int index);
  inline ::User::InivteUserInfoCPP* add_inviteinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::User::InivteUserInfoCPP >&
      inviteinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::InivteUserInfoCPP >*
      mutable_inviteinfo();
  
  // @@protoc_insertion_point(class_scope:User.User)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_notifies();
  inline void clear_has_notifies();
  inline void set_has_charges();
  inline void clear_has_charges();
  inline void set_has_gameactivity();
  inline void clear_has_gameactivity();
  inline void set_has_opents();
  inline void clear_has_opents();
  inline void set_has_heros();
  inline void clear_has_heros();
  inline void set_has_cards();
  inline void clear_has_cards();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_friends();
  inline void clear_has_friends();
  inline void set_has_onhook();
  inline void clear_has_onhook();
  inline void set_has_allclub();
  inline void clear_has_allclub();
  inline void set_has_post();
  inline void clear_has_post();
  inline void set_has_drawrewardid();
  inline void clear_has_drawrewardid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::User::Base* base_;
  ::User::Activity* activity_;
  ::ProtoNotify::NotifyItemCPPAll* notifies_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 opents_;
  ::User::AccumulateCharge* charges_;
  ::ProtoActivity::GameAcitivityAllCPP* gameactivity_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP > item_;
  ::User::HerosInfo* heros_;
  ::User::CardsInfo* cards_;
  ::User::UnlockCards* unlock_;
  ::User::GradeBattle* grade_;
  ::User::FriendInfo* friends_;
  ::User::OnhookReward* onhook_;
  ::User::MartialClub* allclub_;
  ::ProtoNotify::PostItemCPPAll* post_;
  ::google::protobuf::RepeatedPtrField< ::User::InivteUserInfoCPP > inviteinfo_;
  ::google::protobuf::uint32 drawrewardid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static User* default_instance_;
};
// -------------------------------------------------------------------

class RequestOtherUser : public ::google::protobuf::Message {
 public:
  RequestOtherUser();
  virtual ~RequestOtherUser();
  
  RequestOtherUser(const RequestOtherUser& from);
  
  inline RequestOtherUser& operator=(const RequestOtherUser& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOtherUser& default_instance();
  
  void Swap(RequestOtherUser* other);
  
  // implements Message ----------------------------------------------
  
  RequestOtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOtherUser& from);
  void MergeFrom(const RequestOtherUser& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.RequestOtherUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static RequestOtherUser* default_instance_;
};
// -------------------------------------------------------------------

class OtherUser : public ::google::protobuf::Message {
 public:
  OtherUser();
  virtual ~OtherUser();
  
  OtherUser(const OtherUser& from);
  
  inline OtherUser& operator=(const OtherUser& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherUser& default_instance();
  
  void Swap(OtherUser* other);
  
  // implements Message ----------------------------------------------
  
  OtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherUser& from);
  void MergeFrom(const OtherUser& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  
  // @@protoc_insertion_point(class_scope:User.OtherUser)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::User::Base* base_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static OtherUser* default_instance_;
};
// -------------------------------------------------------------------

class Tutorialstage : public ::google::protobuf::Message {
 public:
  Tutorialstage();
  virtual ~Tutorialstage();
  
  Tutorialstage(const Tutorialstage& from);
  
  inline Tutorialstage& operator=(const Tutorialstage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tutorialstage& default_instance();
  
  void Swap(Tutorialstage* other);
  
  // implements Message ----------------------------------------------
  
  Tutorialstage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tutorialstage& from);
  void MergeFrom(const Tutorialstage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 tutorialStage = 1;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 1;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.Tutorialstage)
 private:
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 tutorialstage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static Tutorialstage* default_instance_;
};
// -------------------------------------------------------------------

class ServerTime : public ::google::protobuf::Message {
 public:
  ServerTime();
  virtual ~ServerTime();
  
  ServerTime(const ServerTime& from);
  
  inline ServerTime& operator=(const ServerTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTime& default_instance();
  
  void Swap(ServerTime* other);
  
  // implements Message ----------------------------------------------
  
  ServerTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTime& from);
  void MergeFrom(const ServerTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.ServerTime)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static ServerTime* default_instance_;
};
// -------------------------------------------------------------------

class CostCashReq : public ::google::protobuf::Message {
 public:
  CostCashReq();
  virtual ~CostCashReq();
  
  CostCashReq(const CostCashReq& from);
  
  inline CostCashReq& operator=(const CostCashReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashReq& default_instance();
  
  void Swap(CostCashReq* other);
  
  // implements Message ----------------------------------------------
  
  CostCashReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashReq& from);
  void MergeFrom(const CostCashReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // required string opCode = 2;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  inline const ::std::string& opcode() const;
  inline void set_opcode(const ::std::string& value);
  inline void set_opcode(const char* value);
  inline void set_opcode(const char* value, size_t size);
  inline ::std::string* mutable_opcode();
  inline ::std::string* release_opcode();
  
  // required uint32 operation = 3;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 3;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.CostCashReq)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_operation();
  inline void clear_has_operation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* opcode_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static CostCashReq* default_instance_;
};
// -------------------------------------------------------------------

class CostCashResp : public ::google::protobuf::Message {
 public:
  CostCashResp();
  virtual ~CostCashResp();
  
  CostCashResp(const CostCashResp& from);
  
  inline CostCashResp& operator=(const CostCashResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashResp& default_instance();
  
  void Swap(CostCashResp* other);
  
  // implements Message ----------------------------------------------
  
  CostCashResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashResp& from);
  void MergeFrom(const CostCashResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // required uint32 operation = 2;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 2;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.CostCashResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_operation();
  inline void clear_has_operation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static CostCashResp* default_instance_;
};
// -------------------------------------------------------------------

class ChargeItem : public ::google::protobuf::Message {
 public:
  ChargeItem();
  virtual ~ChargeItem();
  
  ChargeItem(const ChargeItem& from);
  
  inline ChargeItem& operator=(const ChargeItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeItem& default_instance();
  
  void Swap(ChargeItem* other);
  
  // implements Message ----------------------------------------------
  
  ChargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeItem& from);
  void MergeFrom(const ChargeItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.ChargeItem)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_ts();
  inline void clear_has_ts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static ChargeItem* default_instance_;
};
// -------------------------------------------------------------------

class AccumulateCharge : public ::google::protobuf::Message {
 public:
  AccumulateCharge();
  virtual ~AccumulateCharge();
  
  AccumulateCharge(const AccumulateCharge& from);
  
  inline AccumulateCharge& operator=(const AccumulateCharge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulateCharge& default_instance();
  
  void Swap(AccumulateCharge* other);
  
  // implements Message ----------------------------------------------
  
  AccumulateCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccumulateCharge& from);
  void MergeFrom(const AccumulateCharge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .User.ChargeItem accumulateCharge = 1;
  inline int accumulatecharge_size() const;
  inline void clear_accumulatecharge();
  static const int kAccumulateChargeFieldNumber = 1;
  inline const ::User::ChargeItem& accumulatecharge(int index) const;
  inline ::User::ChargeItem* mutable_accumulatecharge(int index);
  inline ::User::ChargeItem* add_accumulatecharge();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
      accumulatecharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
      mutable_accumulatecharge();
  
  // @@protoc_insertion_point(class_scope:User.AccumulateCharge)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::User::ChargeItem > accumulatecharge_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static AccumulateCharge* default_instance_;
};
// -------------------------------------------------------------------

class PushAccumulateChangeReq : public ::google::protobuf::Message {
 public:
  PushAccumulateChangeReq();
  virtual ~PushAccumulateChangeReq();
  
  PushAccumulateChangeReq(const PushAccumulateChangeReq& from);
  
  inline PushAccumulateChangeReq& operator=(const PushAccumulateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushAccumulateChangeReq& default_instance();
  
  void Swap(PushAccumulateChangeReq* other);
  
  // implements Message ----------------------------------------------
  
  PushAccumulateChangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushAccumulateChangeReq& from);
  void MergeFrom(const PushAccumulateChangeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .User.AccumulateCharge changeAcccharge = 1;
  inline bool has_changeacccharge() const;
  inline void clear_changeacccharge();
  static const int kChangeAccchargeFieldNumber = 1;
  inline const ::User::AccumulateCharge& changeacccharge() const;
  inline ::User::AccumulateCharge* mutable_changeacccharge();
  inline ::User::AccumulateCharge* release_changeacccharge();
  
  // @@protoc_insertion_point(class_scope:User.PushAccumulateChangeReq)
 private:
  inline void set_has_changeacccharge();
  inline void clear_has_changeacccharge();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::User::AccumulateCharge* changeacccharge_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static PushAccumulateChangeReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialInfo : public ::google::protobuf::Message {
 public:
  BuyMaterialInfo();
  virtual ~BuyMaterialInfo();
  
  BuyMaterialInfo(const BuyMaterialInfo& from);
  
  inline BuyMaterialInfo& operator=(const BuyMaterialInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialInfo& default_instance();
  
  void Swap(BuyMaterialInfo* other);
  
  // implements Message ----------------------------------------------
  
  BuyMaterialInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialInfo& from);
  void MergeFrom(const BuyMaterialInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 propsid = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);
  
  // required uint32 propscnt = 2;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropscntFieldNumber = 2;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.BuyMaterialInfo)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static BuyMaterialInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialReq : public ::google::protobuf::Message {
 public:
  BuyMaterialReq();
  virtual ~BuyMaterialReq();
  
  BuyMaterialReq(const BuyMaterialReq& from);
  
  inline BuyMaterialReq& operator=(const BuyMaterialReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialReq& default_instance();
  
  void Swap(BuyMaterialReq* other);
  
  // implements Message ----------------------------------------------
  
  BuyMaterialReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialReq& from);
  void MergeFrom(const BuyMaterialReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .User.BuyMaterialInfo buyinfo = 1;
  inline int buyinfo_size() const;
  inline void clear_buyinfo();
  static const int kBuyinfoFieldNumber = 1;
  inline const ::User::BuyMaterialInfo& buyinfo(int index) const;
  inline ::User::BuyMaterialInfo* mutable_buyinfo(int index);
  inline ::User::BuyMaterialInfo* add_buyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
      buyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
      mutable_buyinfo();
  
  // @@protoc_insertion_point(class_scope:User.BuyMaterialReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo > buyinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static BuyMaterialReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialResp : public ::google::protobuf::Message {
 public:
  BuyMaterialResp();
  virtual ~BuyMaterialResp();
  
  BuyMaterialResp(const BuyMaterialResp& from);
  
  inline BuyMaterialResp& operator=(const BuyMaterialResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialResp& default_instance();
  
  void Swap(BuyMaterialResp* other);
  
  // implements Message ----------------------------------------------
  
  BuyMaterialResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialResp& from);
  void MergeFrom(const BuyMaterialResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.BuyMaterialResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static BuyMaterialResp* default_instance_;
};
// -------------------------------------------------------------------

class RequestOtherUserBC : public ::google::protobuf::Message {
 public:
  RequestOtherUserBC();
  virtual ~RequestOtherUserBC();
  
  RequestOtherUserBC(const RequestOtherUserBC& from);
  
  inline RequestOtherUserBC& operator=(const RequestOtherUserBC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOtherUserBC& default_instance();
  
  void Swap(RequestOtherUserBC* other);
  
  // implements Message ----------------------------------------------
  
  RequestOtherUserBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOtherUserBC& from);
  void MergeFrom(const RequestOtherUserBC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.RequestOtherUserBC)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_myuid();
  inline void clear_has_myuid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 myuid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static RequestOtherUserBC* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpReq : public ::google::protobuf::Message {
 public:
  SpeedUpReq();
  virtual ~SpeedUpReq();
  
  SpeedUpReq(const SpeedUpReq& from);
  
  inline SpeedUpReq& operator=(const SpeedUpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpReq& default_instance();
  
  void Swap(SpeedUpReq* other);
  
  // implements Message ----------------------------------------------
  
  SpeedUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpReq& from);
  void MergeFrom(const SpeedUpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 ud = 2;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 2;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.SpeedUpReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ud();
  inline void clear_has_ud();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 ud_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static SpeedUpReq* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpResp : public ::google::protobuf::Message {
 public:
  SpeedUpResp();
  virtual ~SpeedUpResp();
  
  SpeedUpResp(const SpeedUpResp& from);
  
  inline SpeedUpResp& operator=(const SpeedUpResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpResp& default_instance();
  
  void Swap(SpeedUpResp* other);
  
  // implements Message ----------------------------------------------
  
  SpeedUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpResp& from);
  void MergeFrom(const SpeedUpResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.SpeedUpResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static SpeedUpResp* default_instance_;
};
// -------------------------------------------------------------------

class HerosInfo : public ::google::protobuf::Message {
 public:
  HerosInfo();
  virtual ~HerosInfo();
  
  HerosInfo(const HerosInfo& from);
  
  inline HerosInfo& operator=(const HerosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HerosInfo& default_instance();
  
  void Swap(HerosInfo* other);
  
  // implements Message ----------------------------------------------
  
  HerosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HerosInfo& from);
  void MergeFrom(const HerosInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 1;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:User.HerosInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static HerosInfo* default_instance_;
};
// -------------------------------------------------------------------

class CardsInfo : public ::google::protobuf::Message {
 public:
  CardsInfo();
  virtual ~CardsInfo();
  
  CardsInfo(const CardsInfo& from);
  
  inline CardsInfo& operator=(const CardsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardsInfo& default_instance();
  
  void Swap(CardsInfo* other);
  
  // implements Message ----------------------------------------------
  
  CardsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardsInfo& from);
  void MergeFrom(const CardsInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoCards.UserCardsCPP userCards = 1;
  inline int usercards_size() const;
  inline void clear_usercards();
  static const int kUserCardsFieldNumber = 1;
  inline const ::ProtoCards::UserCardsCPP& usercards(int index) const;
  inline ::ProtoCards::UserCardsCPP* mutable_usercards(int index);
  inline ::ProtoCards::UserCardsCPP* add_usercards();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
      usercards() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
      mutable_usercards();
  
  // @@protoc_insertion_point(class_scope:User.CardsInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP > usercards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static CardsInfo* default_instance_;
};
// -------------------------------------------------------------------

class UnlockCards : public ::google::protobuf::Message {
 public:
  UnlockCards();
  virtual ~UnlockCards();
  
  UnlockCards(const UnlockCards& from);
  
  inline UnlockCards& operator=(const UnlockCards& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockCards& default_instance();
  
  void Swap(UnlockCards* other);
  
  // implements Message ----------------------------------------------
  
  UnlockCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockCards& from);
  void MergeFrom(const UnlockCards& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoCards.UnlockCardsCPP unlockInfo = 1;
  inline int unlockinfo_size() const;
  inline void clear_unlockinfo();
  static const int kUnlockInfoFieldNumber = 1;
  inline const ::ProtoCards::UnlockCardsCPP& unlockinfo(int index) const;
  inline ::ProtoCards::UnlockCardsCPP* mutable_unlockinfo(int index);
  inline ::ProtoCards::UnlockCardsCPP* add_unlockinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UnlockCardsCPP >&
      unlockinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UnlockCardsCPP >*
      mutable_unlockinfo();
  
  // @@protoc_insertion_point(class_scope:User.UnlockCards)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoCards::UnlockCardsCPP > unlockinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static UnlockCards* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();
  
  FriendInfo(const FriendInfo& from);
  
  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();
  
  void Swap(FriendInfo* other);
  
  // implements Message ----------------------------------------------
  
  FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoFriend.RecommendInfo info = 11;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 11;
  inline const ::ProtoFriend::RecommendInfo& info(int index) const;
  inline ::ProtoFriend::RecommendInfo* mutable_info(int index);
  inline ::ProtoFriend::RecommendInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::RecommendInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::RecommendInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:User.FriendInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoFriend::RecommendInfo > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class OnhookReward : public ::google::protobuf::Message {
 public:
  OnhookReward();
  virtual ~OnhookReward();
  
  OnhookReward(const OnhookReward& from);
  
  inline OnhookReward& operator=(const OnhookReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnhookReward& default_instance();
  
  void Swap(OnhookReward* other);
  
  // implements Message ----------------------------------------------
  
  OnhookReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnhookReward& from);
  void MergeFrom(const OnhookReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.OnhookReward)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static OnhookReward* default_instance_;
};
// -------------------------------------------------------------------

class MartialClub : public ::google::protobuf::Message {
 public:
  MartialClub();
  virtual ~MartialClub();
  
  MartialClub(const MartialClub& from);
  
  inline MartialClub& operator=(const MartialClub& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialClub& default_instance();
  
  void Swap(MartialClub* other);
  
  // implements Message ----------------------------------------------
  
  MartialClub* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialClub& from);
  void MergeFrom(const MartialClub& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoMartialClub.SingleMartialClub club = 1;
  inline int club_size() const;
  inline void clear_club();
  static const int kClubFieldNumber = 1;
  inline const ::ProtoMartialClub::SingleMartialClub& club(int index) const;
  inline ::ProtoMartialClub::SingleMartialClub* mutable_club(int index);
  inline ::ProtoMartialClub::SingleMartialClub* add_club();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::SingleMartialClub >&
      club() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::SingleMartialClub >*
      mutable_club();
  
  // @@protoc_insertion_point(class_scope:User.MartialClub)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::SingleMartialClub > club_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static MartialClub* default_instance_;
};
// -------------------------------------------------------------------

class MartialHero : public ::google::protobuf::Message {
 public:
  MartialHero();
  virtual ~MartialHero();
  
  MartialHero(const MartialHero& from);
  
  inline MartialHero& operator=(const MartialHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialHero& default_instance();
  
  void Swap(MartialHero* other);
  
  // implements Message ----------------------------------------------
  
  MartialHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialHero& from);
  void MergeFrom(const MartialHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 1;
  inline int heroinfo_size() const;
  inline void clear_heroinfo();
  static const int kHeroInfoFieldNumber = 1;
  inline const ::ProtoMartialClub::MartialHeroInfo& heroinfo(int index) const;
  inline ::ProtoMartialClub::MartialHeroInfo* mutable_heroinfo(int index);
  inline ::ProtoMartialClub::MartialHeroInfo* add_heroinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialHeroInfo >&
      heroinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialHeroInfo >*
      mutable_heroinfo();
  
  // @@protoc_insertion_point(class_scope:User.MartialHero)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialHeroInfo > heroinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static MartialHero* default_instance_;
};
// -------------------------------------------------------------------

class BuyPowerReq : public ::google::protobuf::Message {
 public:
  BuyPowerReq();
  virtual ~BuyPowerReq();
  
  BuyPowerReq(const BuyPowerReq& from);
  
  inline BuyPowerReq& operator=(const BuyPowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyPowerReq& default_instance();
  
  void Swap(BuyPowerReq* other);
  
  // implements Message ----------------------------------------------
  
  BuyPowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyPowerReq& from);
  void MergeFrom(const BuyPowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 propid = 1;
  inline bool has_propid() const;
  inline void clear_propid();
  static const int kPropidFieldNumber = 1;
  inline ::google::protobuf::uint32 propid() const;
  inline void set_propid(::google::protobuf::uint32 value);
  
  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.BuyPowerReq)
 private:
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_ts();
  inline void clear_has_ts();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 propid_;
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static BuyPowerReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyPowerResp : public ::google::protobuf::Message {
 public:
  BuyPowerResp();
  virtual ~BuyPowerResp();
  
  BuyPowerResp(const BuyPowerResp& from);
  
  inline BuyPowerResp& operator=(const BuyPowerResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyPowerResp& default_instance();
  
  void Swap(BuyPowerResp* other);
  
  // implements Message ----------------------------------------------
  
  BuyPowerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyPowerResp& from);
  void MergeFrom(const BuyPowerResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.BuyPowerResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static BuyPowerResp* default_instance_;
};
// -------------------------------------------------------------------

class OnhookOnlinePropReward : public ::google::protobuf::Message {
 public:
  OnhookOnlinePropReward();
  virtual ~OnhookOnlinePropReward();
  
  OnhookOnlinePropReward(const OnhookOnlinePropReward& from);
  
  inline OnhookOnlinePropReward& operator=(const OnhookOnlinePropReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnhookOnlinePropReward& default_instance();
  
  void Swap(OnhookOnlinePropReward* other);
  
  // implements Message ----------------------------------------------
  
  OnhookOnlinePropReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnhookOnlinePropReward& from);
  void MergeFrom(const OnhookOnlinePropReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.OnhookOnlinePropReward)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static OnhookOnlinePropReward* default_instance_;
};
// -------------------------------------------------------------------

class InivteUserInfoCPP : public ::google::protobuf::Message {
 public:
  InivteUserInfoCPP();
  virtual ~InivteUserInfoCPP();
  
  InivteUserInfoCPP(const InivteUserInfoCPP& from);
  
  inline InivteUserInfoCPP& operator=(const InivteUserInfoCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InivteUserInfoCPP& default_instance();
  
  void Swap(InivteUserInfoCPP* other);
  
  // implements Message ----------------------------------------------
  
  InivteUserInfoCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InivteUserInfoCPP& from);
  void MergeFrom(const InivteUserInfoCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required bytes fig = 3;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 3;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // @@protoc_insertion_point(class_scope:User.InivteUserInfoCPP)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* fig_;
  ::google::protobuf::uint32 uid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static InivteUserInfoCPP* default_instance_;
};
// -------------------------------------------------------------------

class InviteActivityUrlReq : public ::google::protobuf::Message {
 public:
  InviteActivityUrlReq();
  virtual ~InviteActivityUrlReq();
  
  InviteActivityUrlReq(const InviteActivityUrlReq& from);
  
  inline InviteActivityUrlReq& operator=(const InviteActivityUrlReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteActivityUrlReq& default_instance();
  
  void Swap(InviteActivityUrlReq* other);
  
  // implements Message ----------------------------------------------
  
  InviteActivityUrlReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteActivityUrlReq& from);
  void MergeFrom(const InviteActivityUrlReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint32 uuid() const;
  inline void set_uuid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.InviteActivityUrlReq)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uuid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static InviteActivityUrlReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInviteActivityUrlReq : public ::google::protobuf::Message {
 public:
  CSInviteActivityUrlReq();
  virtual ~CSInviteActivityUrlReq();
  
  CSInviteActivityUrlReq(const CSInviteActivityUrlReq& from);
  
  inline CSInviteActivityUrlReq& operator=(const CSInviteActivityUrlReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInviteActivityUrlReq& default_instance();
  
  void Swap(CSInviteActivityUrlReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInviteActivityUrlReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInviteActivityUrlReq& from);
  void MergeFrom(const CSInviteActivityUrlReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint32 uuid() const;
  inline void set_uuid(::google::protobuf::uint32 value);
  
  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.CSInviteActivityUrlReq)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_uid();
  inline void clear_has_uid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uuid_;
  ::google::protobuf::uint32 uid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static CSInviteActivityUrlReq* default_instance_;
};
// -------------------------------------------------------------------

class GetInviteRewardReq : public ::google::protobuf::Message {
 public:
  GetInviteRewardReq();
  virtual ~GetInviteRewardReq();
  
  GetInviteRewardReq(const GetInviteRewardReq& from);
  
  inline GetInviteRewardReq& operator=(const GetInviteRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInviteRewardReq& default_instance();
  
  void Swap(GetInviteRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  GetInviteRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInviteRewardReq& from);
  void MergeFrom(const GetInviteRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.GetInviteRewardReq)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seq_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetInviteRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetInviteRewardResp : public ::google::protobuf::Message {
 public:
  GetInviteRewardResp();
  virtual ~GetInviteRewardResp();
  
  GetInviteRewardResp(const GetInviteRewardResp& from);
  
  inline GetInviteRewardResp& operator=(const GetInviteRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInviteRewardResp& default_instance();
  
  void Swap(GetInviteRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  GetInviteRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInviteRewardResp& from);
  void MergeFrom(const GetInviteRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mark = 1;
  inline bool has_mark() const;
  inline void clear_mark();
  static const int kMarkFieldNumber = 1;
  inline ::google::protobuf::uint64 mark() const;
  inline void set_mark(::google::protobuf::uint64 value);
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.GetInviteRewardResp)
 private:
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mark_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetInviteRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class GetAddInviteRewardReq : public ::google::protobuf::Message {
 public:
  GetAddInviteRewardReq();
  virtual ~GetAddInviteRewardReq();
  
  GetAddInviteRewardReq(const GetAddInviteRewardReq& from);
  
  inline GetAddInviteRewardReq& operator=(const GetAddInviteRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddInviteRewardReq& default_instance();
  
  void Swap(GetAddInviteRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  GetAddInviteRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAddInviteRewardReq& from);
  void MergeFrom(const GetAddInviteRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.GetAddInviteRewardReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetAddInviteRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAddInviteRewardResp : public ::google::protobuf::Message {
 public:
  GetAddInviteRewardResp();
  virtual ~GetAddInviteRewardResp();
  
  GetAddInviteRewardResp(const GetAddInviteRewardResp& from);
  
  inline GetAddInviteRewardResp& operator=(const GetAddInviteRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddInviteRewardResp& default_instance();
  
  void Swap(GetAddInviteRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  GetAddInviteRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAddInviteRewardResp& from);
  void MergeFrom(const GetAddInviteRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mark = 1;
  inline bool has_mark() const;
  inline void clear_mark();
  static const int kMarkFieldNumber = 1;
  inline ::google::protobuf::uint32 mark() const;
  inline void set_mark(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.GetAddInviteRewardResp)
 private:
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 mark_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetAddInviteRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class GetDrawRewardReq : public ::google::protobuf::Message {
 public:
  GetDrawRewardReq();
  virtual ~GetDrawRewardReq();
  
  GetDrawRewardReq(const GetDrawRewardReq& from);
  
  inline GetDrawRewardReq& operator=(const GetDrawRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDrawRewardReq& default_instance();
  
  void Swap(GetDrawRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  GetDrawRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDrawRewardReq& from);
  void MergeFrom(const GetDrawRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 free = 1;
  inline bool has_free() const;
  inline void clear_free();
  static const int kFreeFieldNumber = 1;
  inline ::google::protobuf::uint32 free() const;
  inline void set_free(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.GetDrawRewardReq)
 private:
  inline void set_has_free();
  inline void clear_has_free();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 free_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetDrawRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDrawRewardResp : public ::google::protobuf::Message {
 public:
  GetDrawRewardResp();
  virtual ~GetDrawRewardResp();
  
  GetDrawRewardResp(const GetDrawRewardResp& from);
  
  inline GetDrawRewardResp& operator=(const GetDrawRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDrawRewardResp& default_instance();
  
  void Swap(GetDrawRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  GetDrawRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDrawRewardResp& from);
  void MergeFrom(const GetDrawRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 nextId = 1;
  inline bool has_nextid() const;
  inline void clear_nextid();
  static const int kNextIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nextid() const;
  inline void set_nextid(::google::protobuf::uint32 value);
  
  // required uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.GetDrawRewardResp)
 private:
  inline void set_has_nextid();
  inline void clear_has_nextid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 nextid_;
  ::google::protobuf::uint32 index_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static GetDrawRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class NewUserAddExpReq : public ::google::protobuf::Message {
 public:
  NewUserAddExpReq();
  virtual ~NewUserAddExpReq();
  
  NewUserAddExpReq(const NewUserAddExpReq& from);
  
  inline NewUserAddExpReq& operator=(const NewUserAddExpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUserAddExpReq& default_instance();
  
  void Swap(NewUserAddExpReq* other);
  
  // implements Message ----------------------------------------------
  
  NewUserAddExpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUserAddExpReq& from);
  void MergeFrom(const NewUserAddExpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:User.NewUserAddExpReq)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static NewUserAddExpReq* default_instance_;
};
// -------------------------------------------------------------------

class NewUserAddExpResp : public ::google::protobuf::Message {
 public:
  NewUserAddExpResp();
  virtual ~NewUserAddExpResp();
  
  NewUserAddExpResp(const NewUserAddExpResp& from);
  
  inline NewUserAddExpResp& operator=(const NewUserAddExpResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUserAddExpResp& default_instance();
  
  void Swap(NewUserAddExpResp* other);
  
  // implements Message ----------------------------------------------
  
  NewUserAddExpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUserAddExpResp& from);
  void MergeFrom(const NewUserAddExpResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:User.NewUserAddExpResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();
  
  void InitAsDefaultInstance();
  static NewUserAddExpResp* default_instance_;
};
// ===================================================================


// ===================================================================

// Base

// required uint32 uid = 1;
inline bool Base::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Base::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Base::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Base::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Base::uid() const {
  return uid_;
}
inline void Base::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 registerPlatform = 2;
inline bool Base::has_registerplatform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Base::set_has_registerplatform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Base::clear_has_registerplatform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Base::clear_registerplatform() {
  registerplatform_ = 0u;
  clear_has_registerplatform();
}
inline ::google::protobuf::uint32 Base::registerplatform() const {
  return registerplatform_;
}
inline void Base::set_registerplatform(::google::protobuf::uint32 value) {
  set_has_registerplatform();
  registerplatform_ = value;
}

// required uint32 registerTime = 3;
inline bool Base::has_registertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Base::set_has_registertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Base::clear_has_registertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Base::clear_registertime() {
  registertime_ = 0u;
  clear_has_registertime();
}
inline ::google::protobuf::uint32 Base::registertime() const {
  return registertime_;
}
inline void Base::set_registertime(::google::protobuf::uint32 value) {
  set_has_registertime();
  registertime_ = value;
}

// required uint32 lastLoginPlatform = 4;
inline bool Base::has_lastloginplatform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Base::set_has_lastloginplatform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Base::clear_has_lastloginplatform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Base::clear_lastloginplatform() {
  lastloginplatform_ = 0u;
  clear_has_lastloginplatform();
}
inline ::google::protobuf::uint32 Base::lastloginplatform() const {
  return lastloginplatform_;
}
inline void Base::set_lastloginplatform(::google::protobuf::uint32 value) {
  set_has_lastloginplatform();
  lastloginplatform_ = value;
}

// required uint32 lastLoginTime = 5;
inline bool Base::has_lastlogintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Base::set_has_lastlogintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Base::clear_has_lastlogintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Base::clear_lastlogintime() {
  lastlogintime_ = 0u;
  clear_has_lastlogintime();
}
inline ::google::protobuf::uint32 Base::lastlogintime() const {
  return lastlogintime_;
}
inline void Base::set_lastlogintime(::google::protobuf::uint32 value) {
  set_has_lastlogintime();
  lastlogintime_ = value;
}

// required uint32 loginTimes = 6;
inline bool Base::has_logintimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Base::set_has_logintimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Base::clear_has_logintimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Base::clear_logintimes() {
  logintimes_ = 0u;
  clear_has_logintimes();
}
inline ::google::protobuf::uint32 Base::logintimes() const {
  return logintimes_;
}
inline void Base::set_logintimes(::google::protobuf::uint32 value) {
  set_has_logintimes();
  logintimes_ = value;
}

// required uint32 loginDays = 7;
inline bool Base::has_logindays() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Base::set_has_logindays() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Base::clear_has_logindays() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Base::clear_logindays() {
  logindays_ = 0u;
  clear_has_logindays();
}
inline ::google::protobuf::uint32 Base::logindays() const {
  return logindays_;
}
inline void Base::set_logindays(::google::protobuf::uint32 value) {
  set_has_logindays();
  logindays_ = value;
}

// required uint32 lastActiveTime = 8;
inline bool Base::has_lastactivetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Base::set_has_lastactivetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Base::clear_has_lastactivetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Base::clear_lastactivetime() {
  lastactivetime_ = 0u;
  clear_has_lastactivetime();
}
inline ::google::protobuf::uint32 Base::lastactivetime() const {
  return lastactivetime_;
}
inline void Base::set_lastactivetime(::google::protobuf::uint32 value) {
  set_has_lastactivetime();
  lastactivetime_ = value;
}

// required uint32 lastOffTime = 9;
inline bool Base::has_lastofftime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Base::set_has_lastofftime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Base::clear_has_lastofftime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Base::clear_lastofftime() {
  lastofftime_ = 0u;
  clear_has_lastofftime();
}
inline ::google::protobuf::uint32 Base::lastofftime() const {
  return lastofftime_;
}
inline void Base::set_lastofftime(::google::protobuf::uint32 value) {
  set_has_lastofftime();
  lastofftime_ = value;
}

// required uint32 forbidTs = 10;
inline bool Base::has_forbidts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Base::set_has_forbidts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Base::clear_has_forbidts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Base::clear_forbidts() {
  forbidts_ = 0u;
  clear_has_forbidts();
}
inline ::google::protobuf::uint32 Base::forbidts() const {
  return forbidts_;
}
inline void Base::set_forbidts(::google::protobuf::uint32 value) {
  set_has_forbidts();
  forbidts_ = value;
}

// required bytes forbidReason = 11;
inline bool Base::has_forbidreason() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Base::set_has_forbidreason() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Base::clear_has_forbidreason() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Base::clear_forbidreason() {
  if (forbidreason_ != &::google::protobuf::internal::kEmptyString) {
    forbidreason_->clear();
  }
  clear_has_forbidreason();
}
inline const ::std::string& Base::forbidreason() const {
  return *forbidreason_;
}
inline void Base::set_forbidreason(const ::std::string& value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::kEmptyString) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
}
inline void Base::set_forbidreason(const char* value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::kEmptyString) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
}
inline void Base::set_forbidreason(const void* value, size_t size) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::kEmptyString) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_forbidreason() {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::kEmptyString) {
    forbidreason_ = new ::std::string;
  }
  return forbidreason_;
}
inline ::std::string* Base::release_forbidreason() {
  clear_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = forbidreason_;
    forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 tutorialStage = 12;
inline bool Base::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Base::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Base::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Base::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Base::tutorialstage() const {
  return tutorialstage_;
}
inline void Base::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
}

// required bytes name = 13;
inline bool Base::has_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Base::set_has_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Base::clear_has_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Base::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Base::name() const {
  return *name_;
}
inline void Base::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Base::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Base::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Base::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes fig = 14;
inline bool Base::has_fig() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Base::set_has_fig() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Base::clear_has_fig() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Base::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& Base::fig() const {
  return *fig_;
}
inline void Base::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void Base::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void Base::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* Base::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint64 exp = 15;
inline bool Base::has_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Base::set_has_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Base::clear_has_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Base::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 Base::exp() const {
  return exp_;
}
inline void Base::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 level = 16;
inline bool Base::has_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Base::set_has_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Base::clear_has_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Base::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Base::level() const {
  return level_;
}
inline void Base::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 acccharge = 17;
inline bool Base::has_acccharge() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Base::set_has_acccharge() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Base::clear_has_acccharge() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Base::clear_acccharge() {
  acccharge_ = 0u;
  clear_has_acccharge();
}
inline ::google::protobuf::uint32 Base::acccharge() const {
  return acccharge_;
}
inline void Base::set_acccharge(::google::protobuf::uint32 value) {
  set_has_acccharge();
  acccharge_ = value;
}

// required uint32 viplevel = 18;
inline bool Base::has_viplevel() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Base::set_has_viplevel() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Base::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Base::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 Base::viplevel() const {
  return viplevel_;
}
inline void Base::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required uint32 cash = 19;
inline bool Base::has_cash() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Base::set_has_cash() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Base::clear_has_cash() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Base::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 Base::cash() const {
  return cash_;
}
inline void Base::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// required uint32 coin = 20;
inline bool Base::has_coin() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Base::set_has_coin() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Base::clear_has_coin() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Base::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Base::coin() const {
  return coin_;
}
inline void Base::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required uint32 firstRecharge = 21;
inline bool Base::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Base::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Base::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Base::clear_firstrecharge() {
  firstrecharge_ = 0u;
  clear_has_firstrecharge();
}
inline ::google::protobuf::uint32 Base::firstrecharge() const {
  return firstrecharge_;
}
inline void Base::set_firstrecharge(::google::protobuf::uint32 value) {
  set_has_firstrecharge();
  firstrecharge_ = value;
}

// required uint32 allianceId = 22;
inline bool Base::has_allianceid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Base::set_has_allianceid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Base::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Base::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 Base::allianceid() const {
  return allianceid_;
}
inline void Base::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
}

// required bytes archiveChip = 23;
inline bool Base::has_archivechip() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Base::set_has_archivechip() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Base::clear_has_archivechip() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Base::clear_archivechip() {
  if (archivechip_ != &::google::protobuf::internal::kEmptyString) {
    archivechip_->clear();
  }
  clear_has_archivechip();
}
inline const ::std::string& Base::archivechip() const {
  return *archivechip_;
}
inline void Base::set_archivechip(const ::std::string& value) {
  set_has_archivechip();
  if (archivechip_ == &::google::protobuf::internal::kEmptyString) {
    archivechip_ = new ::std::string;
  }
  archivechip_->assign(value);
}
inline void Base::set_archivechip(const char* value) {
  set_has_archivechip();
  if (archivechip_ == &::google::protobuf::internal::kEmptyString) {
    archivechip_ = new ::std::string;
  }
  archivechip_->assign(value);
}
inline void Base::set_archivechip(const void* value, size_t size) {
  set_has_archivechip();
  if (archivechip_ == &::google::protobuf::internal::kEmptyString) {
    archivechip_ = new ::std::string;
  }
  archivechip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_archivechip() {
  set_has_archivechip();
  if (archivechip_ == &::google::protobuf::internal::kEmptyString) {
    archivechip_ = new ::std::string;
  }
  return archivechip_;
}
inline ::std::string* Base::release_archivechip() {
  clear_has_archivechip();
  if (archivechip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = archivechip_;
    archivechip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes archiveLevel = 24;
inline bool Base::has_archivelevel() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Base::set_has_archivelevel() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Base::clear_has_archivelevel() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Base::clear_archivelevel() {
  if (archivelevel_ != &::google::protobuf::internal::kEmptyString) {
    archivelevel_->clear();
  }
  clear_has_archivelevel();
}
inline const ::std::string& Base::archivelevel() const {
  return *archivelevel_;
}
inline void Base::set_archivelevel(const ::std::string& value) {
  set_has_archivelevel();
  if (archivelevel_ == &::google::protobuf::internal::kEmptyString) {
    archivelevel_ = new ::std::string;
  }
  archivelevel_->assign(value);
}
inline void Base::set_archivelevel(const char* value) {
  set_has_archivelevel();
  if (archivelevel_ == &::google::protobuf::internal::kEmptyString) {
    archivelevel_ = new ::std::string;
  }
  archivelevel_->assign(value);
}
inline void Base::set_archivelevel(const void* value, size_t size) {
  set_has_archivelevel();
  if (archivelevel_ == &::google::protobuf::internal::kEmptyString) {
    archivelevel_ = new ::std::string;
  }
  archivelevel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_archivelevel() {
  set_has_archivelevel();
  if (archivelevel_ == &::google::protobuf::internal::kEmptyString) {
    archivelevel_ = new ::std::string;
  }
  return archivelevel_;
}
inline ::std::string* Base::release_archivelevel() {
  clear_has_archivelevel();
  if (archivelevel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = archivelevel_;
    archivelevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes archiveReward = 25;
inline bool Base::has_archivereward() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Base::set_has_archivereward() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Base::clear_has_archivereward() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Base::clear_archivereward() {
  if (archivereward_ != &::google::protobuf::internal::kEmptyString) {
    archivereward_->clear();
  }
  clear_has_archivereward();
}
inline const ::std::string& Base::archivereward() const {
  return *archivereward_;
}
inline void Base::set_archivereward(const ::std::string& value) {
  set_has_archivereward();
  if (archivereward_ == &::google::protobuf::internal::kEmptyString) {
    archivereward_ = new ::std::string;
  }
  archivereward_->assign(value);
}
inline void Base::set_archivereward(const char* value) {
  set_has_archivereward();
  if (archivereward_ == &::google::protobuf::internal::kEmptyString) {
    archivereward_ = new ::std::string;
  }
  archivereward_->assign(value);
}
inline void Base::set_archivereward(const void* value, size_t size) {
  set_has_archivereward();
  if (archivereward_ == &::google::protobuf::internal::kEmptyString) {
    archivereward_ = new ::std::string;
  }
  archivereward_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_archivereward() {
  set_has_archivereward();
  if (archivereward_ == &::google::protobuf::internal::kEmptyString) {
    archivereward_ = new ::std::string;
  }
  return archivereward_;
}
inline ::std::string* Base::release_archivereward() {
  clear_has_archivereward();
  if (archivereward_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = archivereward_;
    archivereward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 power = 26;
inline bool Base::has_power() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Base::set_has_power() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Base::clear_has_power() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Base::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 Base::power() const {
  return power_;
}
inline void Base::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
}

// required uint32 recoverTime = 27;
inline bool Base::has_recovertime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Base::set_has_recovertime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Base::clear_has_recovertime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Base::clear_recovertime() {
  recovertime_ = 0u;
  clear_has_recovertime();
}
inline ::google::protobuf::uint32 Base::recovertime() const {
  return recovertime_;
}
inline void Base::set_recovertime(::google::protobuf::uint32 value) {
  set_has_recovertime();
  recovertime_ = value;
}

// required uint32 pass = 28;
inline bool Base::has_pass() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Base::set_has_pass() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Base::clear_has_pass() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Base::clear_pass() {
  pass_ = 0u;
  clear_has_pass();
}
inline ::google::protobuf::uint32 Base::pass() const {
  return pass_;
}
inline void Base::set_pass(::google::protobuf::uint32 value) {
  set_has_pass();
  pass_ = value;
}

// required bytes limitTimesProps = 29;
inline bool Base::has_limittimesprops() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Base::set_has_limittimesprops() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Base::clear_has_limittimesprops() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Base::clear_limittimesprops() {
  if (limittimesprops_ != &::google::protobuf::internal::kEmptyString) {
    limittimesprops_->clear();
  }
  clear_has_limittimesprops();
}
inline const ::std::string& Base::limittimesprops() const {
  return *limittimesprops_;
}
inline void Base::set_limittimesprops(const ::std::string& value) {
  set_has_limittimesprops();
  if (limittimesprops_ == &::google::protobuf::internal::kEmptyString) {
    limittimesprops_ = new ::std::string;
  }
  limittimesprops_->assign(value);
}
inline void Base::set_limittimesprops(const char* value) {
  set_has_limittimesprops();
  if (limittimesprops_ == &::google::protobuf::internal::kEmptyString) {
    limittimesprops_ = new ::std::string;
  }
  limittimesprops_->assign(value);
}
inline void Base::set_limittimesprops(const void* value, size_t size) {
  set_has_limittimesprops();
  if (limittimesprops_ == &::google::protobuf::internal::kEmptyString) {
    limittimesprops_ = new ::std::string;
  }
  limittimesprops_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Base::mutable_limittimesprops() {
  set_has_limittimesprops();
  if (limittimesprops_ == &::google::protobuf::internal::kEmptyString) {
    limittimesprops_ = new ::std::string;
  }
  return limittimesprops_;
}
inline ::std::string* Base::release_limittimesprops() {
  clear_has_limittimesprops();
  if (limittimesprops_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = limittimesprops_;
    limittimesprops_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 usePropsTs = 30;
inline bool Base::has_usepropsts() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Base::set_has_usepropsts() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Base::clear_has_usepropsts() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Base::clear_usepropsts() {
  usepropsts_ = 0u;
  clear_has_usepropsts();
}
inline ::google::protobuf::uint32 Base::usepropsts() const {
  return usepropsts_;
}
inline void Base::set_usepropsts(::google::protobuf::uint32 value) {
  set_has_usepropsts();
  usepropsts_ = value;
}

// required uint32 heroId = 31;
inline bool Base::has_heroid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Base::set_has_heroid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Base::clear_has_heroid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Base::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 Base::heroid() const {
  return heroid_;
}
inline void Base::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint64 honor = 32;
inline bool Base::has_honor() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Base::set_has_honor() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Base::clear_has_honor() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Base::clear_honor() {
  honor_ = GOOGLE_ULONGLONG(0);
  clear_has_honor();
}
inline ::google::protobuf::uint64 Base::honor() const {
  return honor_;
}
inline void Base::set_honor(::google::protobuf::uint64 value) {
  set_has_honor();
  honor_ = value;
}

// required uint32 dailyPower = 33;
inline bool Base::has_dailypower() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Base::set_has_dailypower() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Base::clear_has_dailypower() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Base::clear_dailypower() {
  dailypower_ = 0u;
  clear_has_dailypower();
}
inline ::google::protobuf::uint32 Base::dailypower() const {
  return dailypower_;
}
inline void Base::set_dailypower(::google::protobuf::uint32 value) {
  set_has_dailypower();
  dailypower_ = value;
}

// required uint32 dailyPowerTs = 34;
inline bool Base::has_dailypowerts() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Base::set_has_dailypowerts() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Base::clear_has_dailypowerts() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Base::clear_dailypowerts() {
  dailypowerts_ = 0u;
  clear_has_dailypowerts();
}
inline ::google::protobuf::uint32 Base::dailypowerts() const {
  return dailypowerts_;
}
inline void Base::set_dailypowerts(::google::protobuf::uint32 value) {
  set_has_dailypowerts();
  dailypowerts_ = value;
}

// required uint32 onhookCoinTs = 35;
inline bool Base::has_onhookcoints() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Base::set_has_onhookcoints() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Base::clear_has_onhookcoints() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Base::clear_onhookcoints() {
  onhookcoints_ = 0u;
  clear_has_onhookcoints();
}
inline ::google::protobuf::uint32 Base::onhookcoints() const {
  return onhookcoints_;
}
inline void Base::set_onhookcoints(::google::protobuf::uint32 value) {
  set_has_onhookcoints();
  onhookcoints_ = value;
}

// required uint32 onhookExpTs = 36;
inline bool Base::has_onhookexpts() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Base::set_has_onhookexpts() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Base::clear_has_onhookexpts() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Base::clear_onhookexpts() {
  onhookexpts_ = 0u;
  clear_has_onhookexpts();
}
inline ::google::protobuf::uint32 Base::onhookexpts() const {
  return onhookexpts_;
}
inline void Base::set_onhookexpts(::google::protobuf::uint32 value) {
  set_has_onhookexpts();
  onhookexpts_ = value;
}

// required uint32 dailyBattleTs = 37;
inline bool Base::has_dailybattlets() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Base::set_has_dailybattlets() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Base::clear_has_dailybattlets() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Base::clear_dailybattlets() {
  dailybattlets_ = 0u;
  clear_has_dailybattlets();
}
inline ::google::protobuf::uint32 Base::dailybattlets() const {
  return dailybattlets_;
}
inline void Base::set_dailybattlets(::google::protobuf::uint32 value) {
  set_has_dailybattlets();
  dailybattlets_ = value;
}

// required uint32 dailyBattleCount = 38;
inline bool Base::has_dailybattlecount() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Base::set_has_dailybattlecount() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Base::clear_has_dailybattlecount() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Base::clear_dailybattlecount() {
  dailybattlecount_ = 0u;
  clear_has_dailybattlecount();
}
inline ::google::protobuf::uint32 Base::dailybattlecount() const {
  return dailybattlecount_;
}
inline void Base::set_dailybattlecount(::google::protobuf::uint32 value) {
  set_has_dailybattlecount();
  dailybattlecount_ = value;
}

// required uint32 inviteFriendCount = 39;
inline bool Base::has_invitefriendcount() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Base::set_has_invitefriendcount() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Base::clear_has_invitefriendcount() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Base::clear_invitefriendcount() {
  invitefriendcount_ = 0u;
  clear_has_invitefriendcount();
}
inline ::google::protobuf::uint32 Base::invitefriendcount() const {
  return invitefriendcount_;
}
inline void Base::set_invitefriendcount(::google::protobuf::uint32 value) {
  set_has_invitefriendcount();
  invitefriendcount_ = value;
}

// required uint64 inviteRewardMark = 40;
inline bool Base::has_inviterewardmark() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Base::set_has_inviterewardmark() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Base::clear_has_inviterewardmark() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Base::clear_inviterewardmark() {
  inviterewardmark_ = GOOGLE_ULONGLONG(0);
  clear_has_inviterewardmark();
}
inline ::google::protobuf::uint64 Base::inviterewardmark() const {
  return inviterewardmark_;
}
inline void Base::set_inviterewardmark(::google::protobuf::uint64 value) {
  set_has_inviterewardmark();
  inviterewardmark_ = value;
}

// required uint32 inviteAddRewardMark = 41;
inline bool Base::has_inviteaddrewardmark() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Base::set_has_inviteaddrewardmark() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Base::clear_has_inviteaddrewardmark() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Base::clear_inviteaddrewardmark() {
  inviteaddrewardmark_ = 0u;
  clear_has_inviteaddrewardmark();
}
inline ::google::protobuf::uint32 Base::inviteaddrewardmark() const {
  return inviteaddrewardmark_;
}
inline void Base::set_inviteaddrewardmark(::google::protobuf::uint32 value) {
  set_has_inviteaddrewardmark();
  inviteaddrewardmark_ = value;
}

// required uint32 freeDrawRewardsTs = 42;
inline bool Base::has_freedrawrewardsts() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Base::set_has_freedrawrewardsts() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Base::clear_has_freedrawrewardsts() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Base::clear_freedrawrewardsts() {
  freedrawrewardsts_ = 0u;
  clear_has_freedrawrewardsts();
}
inline ::google::protobuf::uint32 Base::freedrawrewardsts() const {
  return freedrawrewardsts_;
}
inline void Base::set_freedrawrewardsts(::google::protobuf::uint32 value) {
  set_has_freedrawrewardsts();
  freedrawrewardsts_ = value;
}

// -------------------------------------------------------------------

// ActivityItem

// required uint32 id = 1;
inline bool ActivityItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityItem::id() const {
  return id_;
}
inline void ActivityItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 bts = 2;
inline bool ActivityItem::has_bts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityItem::set_has_bts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityItem::clear_has_bts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityItem::clear_bts() {
  bts_ = 0u;
  clear_has_bts();
}
inline ::google::protobuf::uint32 ActivityItem::bts() const {
  return bts_;
}
inline void ActivityItem::set_bts(::google::protobuf::uint32 value) {
  set_has_bts();
  bts_ = value;
}

// required uint32 ets = 3;
inline bool ActivityItem::has_ets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityItem::set_has_ets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityItem::clear_has_ets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityItem::clear_ets() {
  ets_ = 0u;
  clear_has_ets();
}
inline ::google::protobuf::uint32 ActivityItem::ets() const {
  return ets_;
}
inline void ActivityItem::set_ets(::google::protobuf::uint32 value) {
  set_has_ets();
  ets_ = value;
}

// required uint32 ver = 4;
inline bool ActivityItem::has_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityItem::set_has_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityItem::clear_has_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityItem::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 ActivityItem::ver() const {
  return ver_;
}
inline void ActivityItem::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
}

// -------------------------------------------------------------------

// Activity

// repeated .User.ActivityItem act = 1;
inline int Activity::act_size() const {
  return act_.size();
}
inline void Activity::clear_act() {
  act_.Clear();
}
inline const ::User::ActivityItem& Activity::act(int index) const {
  return act_.Get(index);
}
inline ::User::ActivityItem* Activity::mutable_act(int index) {
  return act_.Mutable(index);
}
inline ::User::ActivityItem* Activity::add_act() {
  return act_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
Activity::act() const {
  return act_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
Activity::mutable_act() {
  return &act_;
}

// -------------------------------------------------------------------

// GradeBattle

// required uint32 grade = 1;
inline bool GradeBattle::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GradeBattle::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GradeBattle::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GradeBattle::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 GradeBattle::grade() const {
  return grade_;
}
inline void GradeBattle::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// required uint32 dailyScore = 2;
inline bool GradeBattle::has_dailyscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GradeBattle::set_has_dailyscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GradeBattle::clear_has_dailyscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GradeBattle::clear_dailyscore() {
  dailyscore_ = 0u;
  clear_has_dailyscore();
}
inline ::google::protobuf::uint32 GradeBattle::dailyscore() const {
  return dailyscore_;
}
inline void GradeBattle::set_dailyscore(::google::protobuf::uint32 value) {
  set_has_dailyscore();
  dailyscore_ = value;
}

// required uint32 score = 3;
inline bool GradeBattle::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GradeBattle::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GradeBattle::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GradeBattle::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GradeBattle::score() const {
  return score_;
}
inline void GradeBattle::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 ts = 4;
inline bool GradeBattle::has_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GradeBattle::set_has_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GradeBattle::clear_has_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GradeBattle::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 GradeBattle::ts() const {
  return ts_;
}
inline void GradeBattle::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// -------------------------------------------------------------------

// User

// required .User.Base base = 1;
inline bool User::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& User::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* User::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  return base_;
}
inline ::User::Base* User::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}

// required uint32 ts = 2;
inline bool User::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 User::ts() const {
  return ts_;
}
inline void User::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required .User.Activity activity = 3;
inline bool User::has_activity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User::set_has_activity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User::clear_has_activity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User::clear_activity() {
  if (activity_ != NULL) activity_->::User::Activity::Clear();
  clear_has_activity();
}
inline const ::User::Activity& User::activity() const {
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::User::Activity* User::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::User::Activity;
  return activity_;
}
inline ::User::Activity* User::release_activity() {
  clear_has_activity();
  ::User::Activity* temp = activity_;
  activity_ = NULL;
  return temp;
}

// optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
inline bool User::has_notifies() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_notifies() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_notifies() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_notifies() {
  if (notifies_ != NULL) notifies_->::ProtoNotify::NotifyItemCPPAll::Clear();
  clear_has_notifies();
}
inline const ::ProtoNotify::NotifyItemCPPAll& User::notifies() const {
  return notifies_ != NULL ? *notifies_ : *default_instance_->notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::mutable_notifies() {
  set_has_notifies();
  if (notifies_ == NULL) notifies_ = new ::ProtoNotify::NotifyItemCPPAll;
  return notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::release_notifies() {
  clear_has_notifies();
  ::ProtoNotify::NotifyItemCPPAll* temp = notifies_;
  notifies_ = NULL;
  return temp;
}

// required .User.AccumulateCharge charges = 5;
inline bool User::has_charges() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void User::set_has_charges() {
  _has_bits_[0] |= 0x00000010u;
}
inline void User::clear_has_charges() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void User::clear_charges() {
  if (charges_ != NULL) charges_->::User::AccumulateCharge::Clear();
  clear_has_charges();
}
inline const ::User::AccumulateCharge& User::charges() const {
  return charges_ != NULL ? *charges_ : *default_instance_->charges_;
}
inline ::User::AccumulateCharge* User::mutable_charges() {
  set_has_charges();
  if (charges_ == NULL) charges_ = new ::User::AccumulateCharge;
  return charges_;
}
inline ::User::AccumulateCharge* User::release_charges() {
  clear_has_charges();
  ::User::AccumulateCharge* temp = charges_;
  charges_ = NULL;
  return temp;
}

// required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
inline bool User::has_gameactivity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_gameactivity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_gameactivity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_gameactivity() {
  if (gameactivity_ != NULL) gameactivity_->::ProtoActivity::GameAcitivityAllCPP::Clear();
  clear_has_gameactivity();
}
inline const ::ProtoActivity::GameAcitivityAllCPP& User::gameactivity() const {
  return gameactivity_ != NULL ? *gameactivity_ : *default_instance_->gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::mutable_gameactivity() {
  set_has_gameactivity();
  if (gameactivity_ == NULL) gameactivity_ = new ::ProtoActivity::GameAcitivityAllCPP;
  return gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::release_gameactivity() {
  clear_has_gameactivity();
  ::ProtoActivity::GameAcitivityAllCPP* temp = gameactivity_;
  gameactivity_ = NULL;
  return temp;
}

// repeated .DataCommon.PropsItemCPP item = 7;
inline int User::item_size() const {
  return item_.size();
}
inline void User::clear_item() {
  item_.Clear();
}
inline const ::DataCommon::PropsItemCPP& User::item(int index) const {
  return item_.Get(index);
}
inline ::DataCommon::PropsItemCPP* User::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::DataCommon::PropsItemCPP* User::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
User::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
User::mutable_item() {
  return &item_;
}

// required uint32 opents = 8;
inline bool User::has_opents() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void User::set_has_opents() {
  _has_bits_[0] |= 0x00000080u;
}
inline void User::clear_has_opents() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void User::clear_opents() {
  opents_ = 0u;
  clear_has_opents();
}
inline ::google::protobuf::uint32 User::opents() const {
  return opents_;
}
inline void User::set_opents(::google::protobuf::uint32 value) {
  set_has_opents();
  opents_ = value;
}

// required .User.HerosInfo heros = 9;
inline bool User::has_heros() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void User::set_has_heros() {
  _has_bits_[0] |= 0x00000100u;
}
inline void User::clear_has_heros() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void User::clear_heros() {
  if (heros_ != NULL) heros_->::User::HerosInfo::Clear();
  clear_has_heros();
}
inline const ::User::HerosInfo& User::heros() const {
  return heros_ != NULL ? *heros_ : *default_instance_->heros_;
}
inline ::User::HerosInfo* User::mutable_heros() {
  set_has_heros();
  if (heros_ == NULL) heros_ = new ::User::HerosInfo;
  return heros_;
}
inline ::User::HerosInfo* User::release_heros() {
  clear_has_heros();
  ::User::HerosInfo* temp = heros_;
  heros_ = NULL;
  return temp;
}

// required .User.CardsInfo cards = 10;
inline bool User::has_cards() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void User::set_has_cards() {
  _has_bits_[0] |= 0x00000200u;
}
inline void User::clear_has_cards() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void User::clear_cards() {
  if (cards_ != NULL) cards_->::User::CardsInfo::Clear();
  clear_has_cards();
}
inline const ::User::CardsInfo& User::cards() const {
  return cards_ != NULL ? *cards_ : *default_instance_->cards_;
}
inline ::User::CardsInfo* User::mutable_cards() {
  set_has_cards();
  if (cards_ == NULL) cards_ = new ::User::CardsInfo;
  return cards_;
}
inline ::User::CardsInfo* User::release_cards() {
  clear_has_cards();
  ::User::CardsInfo* temp = cards_;
  cards_ = NULL;
  return temp;
}

// required .User.UnlockCards unlock = 11;
inline bool User::has_unlock() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void User::set_has_unlock() {
  _has_bits_[0] |= 0x00000400u;
}
inline void User::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void User::clear_unlock() {
  if (unlock_ != NULL) unlock_->::User::UnlockCards::Clear();
  clear_has_unlock();
}
inline const ::User::UnlockCards& User::unlock() const {
  return unlock_ != NULL ? *unlock_ : *default_instance_->unlock_;
}
inline ::User::UnlockCards* User::mutable_unlock() {
  set_has_unlock();
  if (unlock_ == NULL) unlock_ = new ::User::UnlockCards;
  return unlock_;
}
inline ::User::UnlockCards* User::release_unlock() {
  clear_has_unlock();
  ::User::UnlockCards* temp = unlock_;
  unlock_ = NULL;
  return temp;
}

// required .User.GradeBattle grade = 12;
inline bool User::has_grade() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void User::set_has_grade() {
  _has_bits_[0] |= 0x00000800u;
}
inline void User::clear_has_grade() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void User::clear_grade() {
  if (grade_ != NULL) grade_->::User::GradeBattle::Clear();
  clear_has_grade();
}
inline const ::User::GradeBattle& User::grade() const {
  return grade_ != NULL ? *grade_ : *default_instance_->grade_;
}
inline ::User::GradeBattle* User::mutable_grade() {
  set_has_grade();
  if (grade_ == NULL) grade_ = new ::User::GradeBattle;
  return grade_;
}
inline ::User::GradeBattle* User::release_grade() {
  clear_has_grade();
  ::User::GradeBattle* temp = grade_;
  grade_ = NULL;
  return temp;
}

// required .User.FriendInfo friends = 13;
inline bool User::has_friends() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void User::set_has_friends() {
  _has_bits_[0] |= 0x00001000u;
}
inline void User::clear_has_friends() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void User::clear_friends() {
  if (friends_ != NULL) friends_->::User::FriendInfo::Clear();
  clear_has_friends();
}
inline const ::User::FriendInfo& User::friends() const {
  return friends_ != NULL ? *friends_ : *default_instance_->friends_;
}
inline ::User::FriendInfo* User::mutable_friends() {
  set_has_friends();
  if (friends_ == NULL) friends_ = new ::User::FriendInfo;
  return friends_;
}
inline ::User::FriendInfo* User::release_friends() {
  clear_has_friends();
  ::User::FriendInfo* temp = friends_;
  friends_ = NULL;
  return temp;
}

// required .User.OnhookReward onhook = 14;
inline bool User::has_onhook() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void User::set_has_onhook() {
  _has_bits_[0] |= 0x00002000u;
}
inline void User::clear_has_onhook() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void User::clear_onhook() {
  if (onhook_ != NULL) onhook_->::User::OnhookReward::Clear();
  clear_has_onhook();
}
inline const ::User::OnhookReward& User::onhook() const {
  return onhook_ != NULL ? *onhook_ : *default_instance_->onhook_;
}
inline ::User::OnhookReward* User::mutable_onhook() {
  set_has_onhook();
  if (onhook_ == NULL) onhook_ = new ::User::OnhookReward;
  return onhook_;
}
inline ::User::OnhookReward* User::release_onhook() {
  clear_has_onhook();
  ::User::OnhookReward* temp = onhook_;
  onhook_ = NULL;
  return temp;
}

// required .User.MartialClub allclub = 15;
inline bool User::has_allclub() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void User::set_has_allclub() {
  _has_bits_[0] |= 0x00004000u;
}
inline void User::clear_has_allclub() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void User::clear_allclub() {
  if (allclub_ != NULL) allclub_->::User::MartialClub::Clear();
  clear_has_allclub();
}
inline const ::User::MartialClub& User::allclub() const {
  return allclub_ != NULL ? *allclub_ : *default_instance_->allclub_;
}
inline ::User::MartialClub* User::mutable_allclub() {
  set_has_allclub();
  if (allclub_ == NULL) allclub_ = new ::User::MartialClub;
  return allclub_;
}
inline ::User::MartialClub* User::release_allclub() {
  clear_has_allclub();
  ::User::MartialClub* temp = allclub_;
  allclub_ = NULL;
  return temp;
}

// required .ProtoNotify.PostItemCPPAll post = 16;
inline bool User::has_post() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void User::set_has_post() {
  _has_bits_[0] |= 0x00008000u;
}
inline void User::clear_has_post() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void User::clear_post() {
  if (post_ != NULL) post_->::ProtoNotify::PostItemCPPAll::Clear();
  clear_has_post();
}
inline const ::ProtoNotify::PostItemCPPAll& User::post() const {
  return post_ != NULL ? *post_ : *default_instance_->post_;
}
inline ::ProtoNotify::PostItemCPPAll* User::mutable_post() {
  set_has_post();
  if (post_ == NULL) post_ = new ::ProtoNotify::PostItemCPPAll;
  return post_;
}
inline ::ProtoNotify::PostItemCPPAll* User::release_post() {
  clear_has_post();
  ::ProtoNotify::PostItemCPPAll* temp = post_;
  post_ = NULL;
  return temp;
}

// required uint32 drawRewardId = 17;
inline bool User::has_drawrewardid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void User::set_has_drawrewardid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void User::clear_has_drawrewardid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void User::clear_drawrewardid() {
  drawrewardid_ = 0u;
  clear_has_drawrewardid();
}
inline ::google::protobuf::uint32 User::drawrewardid() const {
  return drawrewardid_;
}
inline void User::set_drawrewardid(::google::protobuf::uint32 value) {
  set_has_drawrewardid();
  drawrewardid_ = value;
}

// repeated .User.InivteUserInfoCPP inviteInfo = 18;
inline int User::inviteinfo_size() const {
  return inviteinfo_.size();
}
inline void User::clear_inviteinfo() {
  inviteinfo_.Clear();
}
inline const ::User::InivteUserInfoCPP& User::inviteinfo(int index) const {
  return inviteinfo_.Get(index);
}
inline ::User::InivteUserInfoCPP* User::mutable_inviteinfo(int index) {
  return inviteinfo_.Mutable(index);
}
inline ::User::InivteUserInfoCPP* User::add_inviteinfo() {
  return inviteinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::InivteUserInfoCPP >&
User::inviteinfo() const {
  return inviteinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::InivteUserInfoCPP >*
User::mutable_inviteinfo() {
  return &inviteinfo_;
}

// -------------------------------------------------------------------

// RequestOtherUser

// required uint32 uid = 1;
inline bool RequestOtherUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOtherUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOtherUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOtherUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestOtherUser::uid() const {
  return uid_;
}
inline void RequestOtherUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// OtherUser

// required .User.Base base = 1;
inline bool OtherUser::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherUser::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherUser::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherUser::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& OtherUser::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* OtherUser::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  return base_;
}
inline ::User::Base* OtherUser::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// Tutorialstage

// required uint32 tutorialStage = 1;
inline bool Tutorialstage::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tutorialstage::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tutorialstage::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tutorialstage::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Tutorialstage::tutorialstage() const {
  return tutorialstage_;
}
inline void Tutorialstage::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
}

// -------------------------------------------------------------------

// ServerTime

// required uint32 ts = 1;
inline bool ServerTime::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTime::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTime::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTime::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ServerTime::ts() const {
  return ts_;
}
inline void ServerTime::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// -------------------------------------------------------------------

// CostCashReq

// required uint32 cash = 1;
inline bool CostCashReq::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashReq::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashReq::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashReq::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashReq::cash() const {
  return cash_;
}
inline void CostCashReq::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// required string opCode = 2;
inline bool CostCashReq::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashReq::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashReq::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashReq::clear_opcode() {
  if (opcode_ != &::google::protobuf::internal::kEmptyString) {
    opcode_->clear();
  }
  clear_has_opcode();
}
inline const ::std::string& CostCashReq::opcode() const {
  return *opcode_;
}
inline void CostCashReq::set_opcode(const ::std::string& value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::kEmptyString) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
}
inline void CostCashReq::set_opcode(const char* value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::kEmptyString) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
}
inline void CostCashReq::set_opcode(const char* value, size_t size) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::kEmptyString) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CostCashReq::mutable_opcode() {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::kEmptyString) {
    opcode_ = new ::std::string;
  }
  return opcode_;
}
inline ::std::string* CostCashReq::release_opcode() {
  clear_has_opcode();
  if (opcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opcode_;
    opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 operation = 3;
inline bool CostCashReq::has_operation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostCashReq::set_has_operation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostCashReq::clear_has_operation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostCashReq::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashReq::operation() const {
  return operation_;
}
inline void CostCashReq::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
}

// -------------------------------------------------------------------

// CostCashResp

// required uint32 cash = 1;
inline bool CostCashResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashResp::cash() const {
  return cash_;
}
inline void CostCashResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// required uint32 operation = 2;
inline bool CostCashResp::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashResp::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashResp::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashResp::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashResp::operation() const {
  return operation_;
}
inline void CostCashResp::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
}

// -------------------------------------------------------------------

// ChargeItem

// required uint32 cash = 1;
inline bool ChargeItem::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeItem::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeItem::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeItem::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 ChargeItem::cash() const {
  return cash_;
}
inline void ChargeItem::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// required uint32 ts = 2;
inline bool ChargeItem::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeItem::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ChargeItem::ts() const {
  return ts_;
}
inline void ChargeItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// -------------------------------------------------------------------

// AccumulateCharge

// repeated .User.ChargeItem accumulateCharge = 1;
inline int AccumulateCharge::accumulatecharge_size() const {
  return accumulatecharge_.size();
}
inline void AccumulateCharge::clear_accumulatecharge() {
  accumulatecharge_.Clear();
}
inline const ::User::ChargeItem& AccumulateCharge::accumulatecharge(int index) const {
  return accumulatecharge_.Get(index);
}
inline ::User::ChargeItem* AccumulateCharge::mutable_accumulatecharge(int index) {
  return accumulatecharge_.Mutable(index);
}
inline ::User::ChargeItem* AccumulateCharge::add_accumulatecharge() {
  return accumulatecharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
AccumulateCharge::accumulatecharge() const {
  return accumulatecharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
AccumulateCharge::mutable_accumulatecharge() {
  return &accumulatecharge_;
}

// -------------------------------------------------------------------

// PushAccumulateChangeReq

// required .User.AccumulateCharge changeAcccharge = 1;
inline bool PushAccumulateChangeReq::has_changeacccharge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushAccumulateChangeReq::set_has_changeacccharge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushAccumulateChangeReq::clear_has_changeacccharge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushAccumulateChangeReq::clear_changeacccharge() {
  if (changeacccharge_ != NULL) changeacccharge_->::User::AccumulateCharge::Clear();
  clear_has_changeacccharge();
}
inline const ::User::AccumulateCharge& PushAccumulateChangeReq::changeacccharge() const {
  return changeacccharge_ != NULL ? *changeacccharge_ : *default_instance_->changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::mutable_changeacccharge() {
  set_has_changeacccharge();
  if (changeacccharge_ == NULL) changeacccharge_ = new ::User::AccumulateCharge;
  return changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::release_changeacccharge() {
  clear_has_changeacccharge();
  ::User::AccumulateCharge* temp = changeacccharge_;
  changeacccharge_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BuyMaterialInfo

// required uint32 propsid = 1;
inline bool BuyMaterialInfo::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialInfo::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialInfo::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialInfo::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::propsid() const {
  return propsid_;
}
inline void BuyMaterialInfo::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
}

// required uint32 propscnt = 2;
inline bool BuyMaterialInfo::has_propscnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyMaterialInfo::set_has_propscnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyMaterialInfo::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyMaterialInfo::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::propscnt() const {
  return propscnt_;
}
inline void BuyMaterialInfo::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
}

// -------------------------------------------------------------------

// BuyMaterialReq

// repeated .User.BuyMaterialInfo buyinfo = 1;
inline int BuyMaterialReq::buyinfo_size() const {
  return buyinfo_.size();
}
inline void BuyMaterialReq::clear_buyinfo() {
  buyinfo_.Clear();
}
inline const ::User::BuyMaterialInfo& BuyMaterialReq::buyinfo(int index) const {
  return buyinfo_.Get(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::mutable_buyinfo(int index) {
  return buyinfo_.Mutable(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::add_buyinfo() {
  return buyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
BuyMaterialReq::buyinfo() const {
  return buyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
BuyMaterialReq::mutable_buyinfo() {
  return &buyinfo_;
}

// -------------------------------------------------------------------

// BuyMaterialResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool BuyMaterialResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyMaterialResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RequestOtherUserBC

// required uint32 othuid = 1;
inline bool RequestOtherUserBC::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOtherUserBC::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOtherUserBC::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOtherUserBC::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 RequestOtherUserBC::othuid() const {
  return othuid_;
}
inline void RequestOtherUserBC::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 myuid = 2;
inline bool RequestOtherUserBC::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestOtherUserBC::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestOtherUserBC::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestOtherUserBC::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 RequestOtherUserBC::myuid() const {
  return myuid_;
}
inline void RequestOtherUserBC::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
}

// -------------------------------------------------------------------

// SpeedUpReq

// required uint32 type = 1;
inline bool SpeedUpReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SpeedUpReq::type() const {
  return type_;
}
inline void SpeedUpReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 ud = 2;
inline bool SpeedUpReq::has_ud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpeedUpReq::set_has_ud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpeedUpReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpeedUpReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 SpeedUpReq::ud() const {
  return ud_;
}
inline void SpeedUpReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
}

// -------------------------------------------------------------------

// SpeedUpResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool SpeedUpResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SpeedUpResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// HerosInfo

// repeated .ProtoHero.HeroBaseInfoCPP hero = 1;
inline int HerosInfo::hero_size() const {
  return hero_.size();
}
inline void HerosInfo::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& HerosInfo::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* HerosInfo::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* HerosInfo::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
HerosInfo::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
HerosInfo::mutable_hero() {
  return &hero_;
}

// -------------------------------------------------------------------

// CardsInfo

// repeated .ProtoCards.UserCardsCPP userCards = 1;
inline int CardsInfo::usercards_size() const {
  return usercards_.size();
}
inline void CardsInfo::clear_usercards() {
  usercards_.Clear();
}
inline const ::ProtoCards::UserCardsCPP& CardsInfo::usercards(int index) const {
  return usercards_.Get(index);
}
inline ::ProtoCards::UserCardsCPP* CardsInfo::mutable_usercards(int index) {
  return usercards_.Mutable(index);
}
inline ::ProtoCards::UserCardsCPP* CardsInfo::add_usercards() {
  return usercards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >&
CardsInfo::usercards() const {
  return usercards_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UserCardsCPP >*
CardsInfo::mutable_usercards() {
  return &usercards_;
}

// -------------------------------------------------------------------

// UnlockCards

// repeated .ProtoCards.UnlockCardsCPP unlockInfo = 1;
inline int UnlockCards::unlockinfo_size() const {
  return unlockinfo_.size();
}
inline void UnlockCards::clear_unlockinfo() {
  unlockinfo_.Clear();
}
inline const ::ProtoCards::UnlockCardsCPP& UnlockCards::unlockinfo(int index) const {
  return unlockinfo_.Get(index);
}
inline ::ProtoCards::UnlockCardsCPP* UnlockCards::mutable_unlockinfo(int index) {
  return unlockinfo_.Mutable(index);
}
inline ::ProtoCards::UnlockCardsCPP* UnlockCards::add_unlockinfo() {
  return unlockinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCards::UnlockCardsCPP >&
UnlockCards::unlockinfo() const {
  return unlockinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCards::UnlockCardsCPP >*
UnlockCards::mutable_unlockinfo() {
  return &unlockinfo_;
}

// -------------------------------------------------------------------

// FriendInfo

// repeated .ProtoFriend.RecommendInfo info = 11;
inline int FriendInfo::info_size() const {
  return info_.size();
}
inline void FriendInfo::clear_info() {
  info_.Clear();
}
inline const ::ProtoFriend::RecommendInfo& FriendInfo::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoFriend::RecommendInfo* FriendInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoFriend::RecommendInfo* FriendInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::RecommendInfo >&
FriendInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::RecommendInfo >*
FriendInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// OnhookReward

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool OnhookReward::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnhookReward::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnhookReward::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnhookReward::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& OnhookReward::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* OnhookReward::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* OnhookReward::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MartialClub

// repeated .ProtoMartialClub.SingleMartialClub club = 1;
inline int MartialClub::club_size() const {
  return club_.size();
}
inline void MartialClub::clear_club() {
  club_.Clear();
}
inline const ::ProtoMartialClub::SingleMartialClub& MartialClub::club(int index) const {
  return club_.Get(index);
}
inline ::ProtoMartialClub::SingleMartialClub* MartialClub::mutable_club(int index) {
  return club_.Mutable(index);
}
inline ::ProtoMartialClub::SingleMartialClub* MartialClub::add_club() {
  return club_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::SingleMartialClub >&
MartialClub::club() const {
  return club_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::SingleMartialClub >*
MartialClub::mutable_club() {
  return &club_;
}

// -------------------------------------------------------------------

// MartialHero

// repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 1;
inline int MartialHero::heroinfo_size() const {
  return heroinfo_.size();
}
inline void MartialHero::clear_heroinfo() {
  heroinfo_.Clear();
}
inline const ::ProtoMartialClub::MartialHeroInfo& MartialHero::heroinfo(int index) const {
  return heroinfo_.Get(index);
}
inline ::ProtoMartialClub::MartialHeroInfo* MartialHero::mutable_heroinfo(int index) {
  return heroinfo_.Mutable(index);
}
inline ::ProtoMartialClub::MartialHeroInfo* MartialHero::add_heroinfo() {
  return heroinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialHeroInfo >&
MartialHero::heroinfo() const {
  return heroinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoMartialClub::MartialHeroInfo >*
MartialHero::mutable_heroinfo() {
  return &heroinfo_;
}

// -------------------------------------------------------------------

// BuyPowerReq

// required uint32 propid = 1;
inline bool BuyPowerReq::has_propid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyPowerReq::set_has_propid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyPowerReq::clear_has_propid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyPowerReq::clear_propid() {
  propid_ = 0u;
  clear_has_propid();
}
inline ::google::protobuf::uint32 BuyPowerReq::propid() const {
  return propid_;
}
inline void BuyPowerReq::set_propid(::google::protobuf::uint32 value) {
  set_has_propid();
  propid_ = value;
}

// required uint32 ts = 2;
inline bool BuyPowerReq::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyPowerReq::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyPowerReq::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyPowerReq::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 BuyPowerReq::ts() const {
  return ts_;
}
inline void BuyPowerReq::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// -------------------------------------------------------------------

// BuyPowerResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool BuyPowerResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyPowerResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyPowerResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyPowerResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyPowerResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyPowerResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyPowerResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// OnhookOnlinePropReward

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool OnhookOnlinePropReward::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnhookOnlinePropReward::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnhookOnlinePropReward::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnhookOnlinePropReward::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& OnhookOnlinePropReward::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* OnhookOnlinePropReward::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* OnhookOnlinePropReward::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// InivteUserInfoCPP

// required uint32 uid = 1;
inline bool InivteUserInfoCPP::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InivteUserInfoCPP::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InivteUserInfoCPP::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InivteUserInfoCPP::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 InivteUserInfoCPP::uid() const {
  return uid_;
}
inline void InivteUserInfoCPP::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required bytes name = 2;
inline bool InivteUserInfoCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InivteUserInfoCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InivteUserInfoCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InivteUserInfoCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& InivteUserInfoCPP::name() const {
  return *name_;
}
inline void InivteUserInfoCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void InivteUserInfoCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void InivteUserInfoCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InivteUserInfoCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* InivteUserInfoCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes fig = 3;
inline bool InivteUserInfoCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InivteUserInfoCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InivteUserInfoCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InivteUserInfoCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& InivteUserInfoCPP::fig() const {
  return *fig_;
}
inline void InivteUserInfoCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void InivteUserInfoCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void InivteUserInfoCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InivteUserInfoCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* InivteUserInfoCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// InviteActivityUrlReq

// required uint32 uuid = 1;
inline bool InviteActivityUrlReq::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteActivityUrlReq::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteActivityUrlReq::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteActivityUrlReq::clear_uuid() {
  uuid_ = 0u;
  clear_has_uuid();
}
inline ::google::protobuf::uint32 InviteActivityUrlReq::uuid() const {
  return uuid_;
}
inline void InviteActivityUrlReq::set_uuid(::google::protobuf::uint32 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// CSInviteActivityUrlReq

// required uint32 uuid = 1;
inline bool CSInviteActivityUrlReq::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInviteActivityUrlReq::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInviteActivityUrlReq::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInviteActivityUrlReq::clear_uuid() {
  uuid_ = 0u;
  clear_has_uuid();
}
inline ::google::protobuf::uint32 CSInviteActivityUrlReq::uuid() const {
  return uuid_;
}
inline void CSInviteActivityUrlReq::set_uuid(::google::protobuf::uint32 value) {
  set_has_uuid();
  uuid_ = value;
}

// required uint32 uid = 2;
inline bool CSInviteActivityUrlReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInviteActivityUrlReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInviteActivityUrlReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInviteActivityUrlReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSInviteActivityUrlReq::uid() const {
  return uid_;
}
inline void CSInviteActivityUrlReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// GetInviteRewardReq

// required uint32 seq = 1;
inline bool GetInviteRewardReq::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInviteRewardReq::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInviteRewardReq::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInviteRewardReq::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 GetInviteRewardReq::seq() const {
  return seq_;
}
inline void GetInviteRewardReq::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// GetInviteRewardResp

// required uint64 mark = 1;
inline bool GetInviteRewardResp::has_mark() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInviteRewardResp::set_has_mark() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInviteRewardResp::clear_has_mark() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInviteRewardResp::clear_mark() {
  mark_ = GOOGLE_ULONGLONG(0);
  clear_has_mark();
}
inline ::google::protobuf::uint64 GetInviteRewardResp::mark() const {
  return mark_;
}
inline void GetInviteRewardResp::set_mark(::google::protobuf::uint64 value) {
  set_has_mark();
  mark_ = value;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool GetInviteRewardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInviteRewardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInviteRewardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInviteRewardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& GetInviteRewardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* GetInviteRewardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* GetInviteRewardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetAddInviteRewardReq

// required uint32 num = 1;
inline bool GetAddInviteRewardReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddInviteRewardReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddInviteRewardReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddInviteRewardReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 GetAddInviteRewardReq::num() const {
  return num_;
}
inline void GetAddInviteRewardReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GetAddInviteRewardResp

// required uint32 mark = 1;
inline bool GetAddInviteRewardResp::has_mark() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddInviteRewardResp::set_has_mark() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddInviteRewardResp::clear_has_mark() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddInviteRewardResp::clear_mark() {
  mark_ = 0u;
  clear_has_mark();
}
inline ::google::protobuf::uint32 GetAddInviteRewardResp::mark() const {
  return mark_;
}
inline void GetAddInviteRewardResp::set_mark(::google::protobuf::uint32 value) {
  set_has_mark();
  mark_ = value;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool GetAddInviteRewardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAddInviteRewardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAddInviteRewardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAddInviteRewardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& GetAddInviteRewardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* GetAddInviteRewardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* GetAddInviteRewardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetDrawRewardReq

// required uint32 free = 1;
inline bool GetDrawRewardReq::has_free() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDrawRewardReq::set_has_free() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDrawRewardReq::clear_has_free() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDrawRewardReq::clear_free() {
  free_ = 0u;
  clear_has_free();
}
inline ::google::protobuf::uint32 GetDrawRewardReq::free() const {
  return free_;
}
inline void GetDrawRewardReq::set_free(::google::protobuf::uint32 value) {
  set_has_free();
  free_ = value;
}

// -------------------------------------------------------------------

// GetDrawRewardResp

// required uint32 nextId = 1;
inline bool GetDrawRewardResp::has_nextid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDrawRewardResp::set_has_nextid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDrawRewardResp::clear_has_nextid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDrawRewardResp::clear_nextid() {
  nextid_ = 0u;
  clear_has_nextid();
}
inline ::google::protobuf::uint32 GetDrawRewardResp::nextid() const {
  return nextid_;
}
inline void GetDrawRewardResp::set_nextid(::google::protobuf::uint32 value) {
  set_has_nextid();
  nextid_ = value;
}

// required uint32 index = 2;
inline bool GetDrawRewardResp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDrawRewardResp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDrawRewardResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDrawRewardResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GetDrawRewardResp::index() const {
  return index_;
}
inline void GetDrawRewardResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .DataCommon.CommonItemsCPP commons = 3;
inline bool GetDrawRewardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetDrawRewardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetDrawRewardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetDrawRewardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& GetDrawRewardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* GetDrawRewardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* GetDrawRewardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// NewUserAddExpReq

// required uint32 exp = 1;
inline bool NewUserAddExpReq::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUserAddExpReq::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUserAddExpReq::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUserAddExpReq::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 NewUserAddExpReq::exp() const {
  return exp_;
}
inline void NewUserAddExpReq::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// NewUserAddExpResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool NewUserAddExpResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUserAddExpResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUserAddExpResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUserAddExpResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& NewUserAddExpResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* NewUserAddExpResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* NewUserAddExpResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace User

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_User_2eproto__INCLUDED
