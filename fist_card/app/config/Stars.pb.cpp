// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Stars.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Stars {

namespace {

const ::google::protobuf::Descriptor* Attributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Attributes_reflection_ = NULL;
const ::google::protobuf::Descriptor* StarList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StarList_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroWithStars_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroWithStars_reflection_ = NULL;
const ::google::protobuf::Descriptor* StarInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StarInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Stars_2eproto() {
  protobuf_AddDesc_Stars_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Stars.proto");
  GOOGLE_CHECK(file != NULL);
  Attributes_descriptor_ = file->message_type(0);
  static const int Attributes_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, att_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, first_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, dodge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, critstrike_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, critrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, critresist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, hp_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, att_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, def_add_),
  };
  Attributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Attributes_descriptor_,
      Attributes::default_instance_,
      Attributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Attributes));
  StarList_descriptor_ = file->message_type(1);
  static const int StarList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, fight_power_),
  };
  StarList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StarList_descriptor_,
      StarList::default_instance_,
      StarList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StarList));
  HeroWithStars_descriptor_ = file->message_type(2);
  static const int HeroWithStars_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroWithStars, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroWithStars, list_),
  };
  HeroWithStars_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroWithStars_descriptor_,
      HeroWithStars::default_instance_,
      HeroWithStars_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroWithStars, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroWithStars, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroWithStars));
  StarInfo_descriptor_ = file->message_type(3);
  static const int StarInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfo, starinfo_),
  };
  StarInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StarInfo_descriptor_,
      StarInfo::default_instance_,
      StarInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StarInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Stars_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Attributes_descriptor_, &Attributes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StarList_descriptor_, &StarList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroWithStars_descriptor_, &HeroWithStars::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StarInfo_descriptor_, &StarInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Stars_2eproto() {
  delete Attributes::default_instance_;
  delete Attributes_reflection_;
  delete StarList::default_instance_;
  delete StarList_reflection_;
  delete HeroWithStars::default_instance_;
  delete HeroWithStars_reflection_;
  delete StarInfo::default_instance_;
  delete StarInfo_reflection_;
}

void protobuf_AddDesc_Stars_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Stars.proto\022\005Stars\032\026CommonGiftConfig.p"
    "roto\"\311\001\n\nAttributes\022\n\n\002hp\030\001 \001(\r\022\013\n\003att\030\002"
    " \001(\r\022\013\n\003def\030\003 \001(\r\022\r\n\005first\030\004 \001(\r\022\013\n\003hit\030"
    "\005 \001(\r\022\r\n\005dodge\030\006 \001(\r\022\022\n\ncritStrike\030\007 \001(\r"
    "\022\020\n\010critRate\030\010 \001(\r\022\022\n\ncritResist\030\t \001(\r\022\016"
    "\n\006hp_add\030\n \001(\001\022\017\n\007att_add\030\013 \001(\001\022\017\n\007def_a"
    "dd\030\014 \001(\001\"\177\n\010StarList\022\n\n\002id\030\001 \002(\r\022\037\n\004attr"
    "\030\002 \002(\0132\021.Stars.Attributes\0221\n\005price\030\003 \002(\013"
    "2\".CommonGiftConfig.CommonModifyItem\022\023\n\013"
    "fight_power\030\004 \002(\r\">\n\rHeroWithStars\022\016\n\006he"
    "roid\030\001 \002(\r\022\035\n\004list\030\002 \003(\0132\017.Stars.StarLis"
    "t\"2\n\010StarInfo\022&\n\010starInfo\030\001 \003(\0132\024.Stars."
    "HeroWithStars", 493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Stars.proto", &protobuf_RegisterTypes);
  Attributes::default_instance_ = new Attributes();
  StarList::default_instance_ = new StarList();
  HeroWithStars::default_instance_ = new HeroWithStars();
  StarInfo::default_instance_ = new StarInfo();
  Attributes::default_instance_->InitAsDefaultInstance();
  StarList::default_instance_->InitAsDefaultInstance();
  HeroWithStars::default_instance_->InitAsDefaultInstance();
  StarInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Stars_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Stars_2eproto {
  StaticDescriptorInitializer_Stars_2eproto() {
    protobuf_AddDesc_Stars_2eproto();
  }
} static_descriptor_initializer_Stars_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Attributes::kHpFieldNumber;
const int Attributes::kAttFieldNumber;
const int Attributes::kDefFieldNumber;
const int Attributes::kFirstFieldNumber;
const int Attributes::kHitFieldNumber;
const int Attributes::kDodgeFieldNumber;
const int Attributes::kCritStrikeFieldNumber;
const int Attributes::kCritRateFieldNumber;
const int Attributes::kCritResistFieldNumber;
const int Attributes::kHpAddFieldNumber;
const int Attributes::kAttAddFieldNumber;
const int Attributes::kDefAddFieldNumber;
#endif  // !_MSC_VER

Attributes::Attributes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Attributes::InitAsDefaultInstance() {
}

Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Attributes::SharedCtor() {
  _cached_size_ = 0;
  hp_ = 0u;
  att_ = 0u;
  def_ = 0u;
  first_ = 0u;
  hit_ = 0u;
  dodge_ = 0u;
  critstrike_ = 0u;
  critrate_ = 0u;
  critresist_ = 0u;
  hp_add_ = 0;
  att_add_ = 0;
  def_add_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Attributes::~Attributes() {
  SharedDtor();
}

void Attributes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Attributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Attributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Attributes_descriptor_;
}

const Attributes& Attributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Stars_2eproto();  return *default_instance_;
}

Attributes* Attributes::default_instance_ = NULL;

Attributes* Attributes::New() const {
  return new Attributes;
}

void Attributes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hp_ = 0u;
    att_ = 0u;
    def_ = 0u;
    first_ = 0u;
    hit_ = 0u;
    dodge_ = 0u;
    critstrike_ = 0u;
    critrate_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    critresist_ = 0u;
    hp_add_ = 0;
    att_add_ = 0;
    def_add_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_att;
        break;
      }
      
      // optional uint32 att = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_att:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &att_)));
          set_has_att();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_def;
        break;
      }
      
      // optional uint32 def = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));
          set_has_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_first;
        break;
      }
      
      // optional uint32 first = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_)));
          set_has_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_hit;
        break;
      }
      
      // optional uint32 hit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_dodge;
        break;
      }
      
      // optional uint32 dodge = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dodge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dodge_)));
          set_has_dodge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_critStrike;
        break;
      }
      
      // optional uint32 critStrike = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critStrike:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critstrike_)));
          set_has_critstrike();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_critRate;
        break;
      }
      
      // optional uint32 critRate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critrate_)));
          set_has_critrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_critResist;
        break;
      }
      
      // optional uint32 critResist = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critResist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critresist_)));
          set_has_critresist();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_hp_add;
        break;
      }
      
      // optional double hp_add = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_hp_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hp_add_)));
          set_has_hp_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_att_add;
        break;
      }
      
      // optional double att_add = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_att_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &att_add_)));
          set_has_att_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_def_add;
        break;
      }
      
      // optional double def_add = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_def_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &def_add_)));
          set_has_def_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 hp = 1;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hp(), output);
  }
  
  // optional uint32 att = 2;
  if (has_att()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->att(), output);
  }
  
  // optional uint32 def = 3;
  if (has_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->def(), output);
  }
  
  // optional uint32 first = 4;
  if (has_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->first(), output);
  }
  
  // optional uint32 hit = 5;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hit(), output);
  }
  
  // optional uint32 dodge = 6;
  if (has_dodge()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->dodge(), output);
  }
  
  // optional uint32 critStrike = 7;
  if (has_critstrike()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->critstrike(), output);
  }
  
  // optional uint32 critRate = 8;
  if (has_critrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->critrate(), output);
  }
  
  // optional uint32 critResist = 9;
  if (has_critresist()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->critresist(), output);
  }
  
  // optional double hp_add = 10;
  if (has_hp_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->hp_add(), output);
  }
  
  // optional double att_add = 11;
  if (has_att_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->att_add(), output);
  }
  
  // optional double def_add = 12;
  if (has_def_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->def_add(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Attributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 hp = 1;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hp(), target);
  }
  
  // optional uint32 att = 2;
  if (has_att()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->att(), target);
  }
  
  // optional uint32 def = 3;
  if (has_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->def(), target);
  }
  
  // optional uint32 first = 4;
  if (has_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->first(), target);
  }
  
  // optional uint32 hit = 5;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hit(), target);
  }
  
  // optional uint32 dodge = 6;
  if (has_dodge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->dodge(), target);
  }
  
  // optional uint32 critStrike = 7;
  if (has_critstrike()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->critstrike(), target);
  }
  
  // optional uint32 critRate = 8;
  if (has_critrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->critrate(), target);
  }
  
  // optional uint32 critResist = 9;
  if (has_critresist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->critresist(), target);
  }
  
  // optional double hp_add = 10;
  if (has_hp_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->hp_add(), target);
  }
  
  // optional double att_add = 11;
  if (has_att_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->att_add(), target);
  }
  
  // optional double def_add = 12;
  if (has_def_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->def_add(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Attributes::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 hp = 1;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }
    
    // optional uint32 att = 2;
    if (has_att()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->att());
    }
    
    // optional uint32 def = 3;
    if (has_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def());
    }
    
    // optional uint32 first = 4;
    if (has_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->first());
    }
    
    // optional uint32 hit = 5;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hit());
    }
    
    // optional uint32 dodge = 6;
    if (has_dodge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dodge());
    }
    
    // optional uint32 critStrike = 7;
    if (has_critstrike()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critstrike());
    }
    
    // optional uint32 critRate = 8;
    if (has_critrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critrate());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 critResist = 9;
    if (has_critresist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critresist());
    }
    
    // optional double hp_add = 10;
    if (has_hp_add()) {
      total_size += 1 + 8;
    }
    
    // optional double att_add = 11;
    if (has_att_add()) {
      total_size += 1 + 8;
    }
    
    // optional double def_add = 12;
    if (has_def_add()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Attributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Attributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Attributes::MergeFrom(const Attributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_att()) {
      set_att(from.att());
    }
    if (from.has_def()) {
      set_def(from.def());
    }
    if (from.has_first()) {
      set_first(from.first());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_dodge()) {
      set_dodge(from.dodge());
    }
    if (from.has_critstrike()) {
      set_critstrike(from.critstrike());
    }
    if (from.has_critrate()) {
      set_critrate(from.critrate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_critresist()) {
      set_critresist(from.critresist());
    }
    if (from.has_hp_add()) {
      set_hp_add(from.hp_add());
    }
    if (from.has_att_add()) {
      set_att_add(from.att_add());
    }
    if (from.has_def_add()) {
      set_def_add(from.def_add());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Attributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes::CopyFrom(const Attributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  
  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other != this) {
    std::swap(hp_, other->hp_);
    std::swap(att_, other->att_);
    std::swap(def_, other->def_);
    std::swap(first_, other->first_);
    std::swap(hit_, other->hit_);
    std::swap(dodge_, other->dodge_);
    std::swap(critstrike_, other->critstrike_);
    std::swap(critrate_, other->critrate_);
    std::swap(critresist_, other->critresist_);
    std::swap(hp_add_, other->hp_add_);
    std::swap(att_add_, other->att_add_);
    std::swap(def_add_, other->def_add_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Attributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Attributes_descriptor_;
  metadata.reflection = Attributes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StarList::kIdFieldNumber;
const int StarList::kAttrFieldNumber;
const int StarList::kPriceFieldNumber;
const int StarList::kFightPowerFieldNumber;
#endif  // !_MSC_VER

StarList::StarList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StarList::InitAsDefaultInstance() {
  attr_ = const_cast< ::Stars::Attributes*>(&::Stars::Attributes::default_instance());
  price_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

StarList::StarList(const StarList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StarList::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  attr_ = NULL;
  price_ = NULL;
  fight_power_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StarList::~StarList() {
  SharedDtor();
}

void StarList::SharedDtor() {
  if (this != default_instance_) {
    delete attr_;
    delete price_;
  }
}

void StarList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StarList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StarList_descriptor_;
}

const StarList& StarList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Stars_2eproto();  return *default_instance_;
}

StarList* StarList::default_instance_ = NULL;

StarList* StarList::New() const {
  return new StarList;
}

void StarList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_attr()) {
      if (attr_ != NULL) attr_->::Stars::Attributes::Clear();
    }
    if (has_price()) {
      if (price_ != NULL) price_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    fight_power_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StarList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }
      
      // required .Stars.Attributes attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_price;
        break;
      }
      
      // required .CommonGiftConfig.CommonModifyItem price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fight_power;
        break;
      }
      
      // required uint32 fight_power = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fight_power_)));
          set_has_fight_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StarList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // required .Stars.Attributes attr = 2;
  if (has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(), output);
  }
  
  // required .CommonGiftConfig.CommonModifyItem price = 3;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->price(), output);
  }
  
  // required uint32 fight_power = 4;
  if (has_fight_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fight_power(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StarList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // required .Stars.Attributes attr = 2;
  if (has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(), target);
  }
  
  // required .CommonGiftConfig.CommonModifyItem price = 3;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->price(), target);
  }
  
  // required uint32 fight_power = 4;
  if (has_fight_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fight_power(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StarList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // required .Stars.Attributes attr = 2;
    if (has_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr());
    }
    
    // required .CommonGiftConfig.CommonModifyItem price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->price());
    }
    
    // required uint32 fight_power = 4;
    if (has_fight_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fight_power());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StarList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StarList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StarList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StarList::MergeFrom(const StarList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_attr()) {
      mutable_attr()->::Stars::Attributes::MergeFrom(from.attr());
    }
    if (from.has_price()) {
      mutable_price()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.price());
    }
    if (from.has_fight_power()) {
      set_fight_power(from.fight_power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StarList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StarList::CopyFrom(const StarList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StarList::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  if (has_price()) {
    if (!this->price().IsInitialized()) return false;
  }
  return true;
}

void StarList::Swap(StarList* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(attr_, other->attr_);
    std::swap(price_, other->price_);
    std::swap(fight_power_, other->fight_power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StarList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StarList_descriptor_;
  metadata.reflection = StarList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroWithStars::kHeroidFieldNumber;
const int HeroWithStars::kListFieldNumber;
#endif  // !_MSC_VER

HeroWithStars::HeroWithStars()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroWithStars::InitAsDefaultInstance() {
}

HeroWithStars::HeroWithStars(const HeroWithStars& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroWithStars::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroWithStars::~HeroWithStars() {
  SharedDtor();
}

void HeroWithStars::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroWithStars::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroWithStars::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroWithStars_descriptor_;
}

const HeroWithStars& HeroWithStars::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Stars_2eproto();  return *default_instance_;
}

HeroWithStars* HeroWithStars::default_instance_ = NULL;

HeroWithStars* HeroWithStars::New() const {
  return new HeroWithStars;
}

void HeroWithStars::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0u;
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroWithStars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }
      
      // repeated .Stars.StarList list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroWithStars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }
  
  // repeated .Stars.StarList list = 2;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroWithStars::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }
  
  // repeated .Stars.StarList list = 2;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroWithStars::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
  }
  // repeated .Stars.StarList list = 2;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroWithStars::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroWithStars* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroWithStars*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroWithStars::MergeFrom(const HeroWithStars& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroWithStars::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroWithStars::CopyFrom(const HeroWithStars& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroWithStars::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void HeroWithStars::Swap(HeroWithStars* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroWithStars::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroWithStars_descriptor_;
  metadata.reflection = HeroWithStars_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StarInfo::kStarInfoFieldNumber;
#endif  // !_MSC_VER

StarInfo::StarInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StarInfo::InitAsDefaultInstance() {
}

StarInfo::StarInfo(const StarInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StarInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StarInfo::~StarInfo() {
  SharedDtor();
}

void StarInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StarInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StarInfo_descriptor_;
}

const StarInfo& StarInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Stars_2eproto();  return *default_instance_;
}

StarInfo* StarInfo::default_instance_ = NULL;

StarInfo* StarInfo::New() const {
  return new StarInfo;
}

void StarInfo::Clear() {
  starinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Stars.HeroWithStars starInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_starInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_starinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_starInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Stars.HeroWithStars starInfo = 1;
  for (int i = 0; i < this->starinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->starinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StarInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Stars.HeroWithStars starInfo = 1;
  for (int i = 0; i < this->starinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->starinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StarInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .Stars.HeroWithStars starInfo = 1;
  total_size += 1 * this->starinfo_size();
  for (int i = 0; i < this->starinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->starinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StarInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StarInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StarInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StarInfo::MergeFrom(const StarInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  starinfo_.MergeFrom(from.starinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StarInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StarInfo::CopyFrom(const StarInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StarInfo::IsInitialized() const {
  
  for (int i = 0; i < starinfo_size(); i++) {
    if (!this->starinfo(i).IsInitialized()) return false;
  }
  return true;
}

void StarInfo::Swap(StarInfo* other) {
  if (other != this) {
    starinfo_.Swap(&other->starinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StarInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StarInfo_descriptor_;
  metadata.reflection = StarInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Stars

// @@protoc_insertion_point(global_scope)
