// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MartialClub.proto

#ifndef PROTOBUF_MartialClub_2eproto__INCLUDED
#define PROTOBUF_MartialClub_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace MartialClub {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MartialClub_2eproto();
void protobuf_AssignDesc_MartialClub_2eproto();
void protobuf_ShutdownFile_MartialClub_2eproto();

class MartialClubReward;
class MartialClubInfo;
class MartialClubCfg;

// ===================================================================

class MartialClubReward : public ::google::protobuf::Message {
 public:
  MartialClubReward();
  virtual ~MartialClubReward();
  
  MartialClubReward(const MartialClubReward& from);
  
  inline MartialClubReward& operator=(const MartialClubReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialClubReward& default_instance();
  
  void Swap(MartialClubReward* other);
  
  // implements Message ----------------------------------------------
  
  MartialClubReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialClubReward& from);
  void MergeFrom(const MartialClubReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 propsTs = 2;
  inline bool has_propsts() const;
  inline void clear_propsts();
  static const int kPropsTsFieldNumber = 2;
  inline ::google::protobuf::uint32 propsts() const;
  inline void set_propsts(::google::protobuf::uint32 value);
  
  // required uint32 levelUpTs = 3;
  inline bool has_levelupts() const;
  inline void clear_levelupts();
  static const int kLevelUpTsFieldNumber = 3;
  inline ::google::protobuf::uint32 levelupts() const;
  inline void set_levelupts(::google::protobuf::uint32 value);
  
  // required .CommonGiftConfig.CommonModifyItem reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  
  // @@protoc_insertion_point(class_scope:MartialClub.MartialClubReward)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_propsts();
  inline void clear_has_propsts();
  inline void set_has_levelupts();
  inline void clear_has_levelupts();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 propsts_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 levelupts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_MartialClub_2eproto();
  friend void protobuf_AssignDesc_MartialClub_2eproto();
  friend void protobuf_ShutdownFile_MartialClub_2eproto();
  
  void InitAsDefaultInstance();
  static MartialClubReward* default_instance_;
};
// -------------------------------------------------------------------

class MartialClubInfo : public ::google::protobuf::Message {
 public:
  MartialClubInfo();
  virtual ~MartialClubInfo();
  
  MartialClubInfo(const MartialClubInfo& from);
  
  inline MartialClubInfo& operator=(const MartialClubInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialClubInfo& default_instance();
  
  void Swap(MartialClubInfo* other);
  
  // implements Message ----------------------------------------------
  
  MartialClubInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialClubInfo& from);
  void MergeFrom(const MartialClubInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // required uint32 capacity = 2;
  inline bool has_capacity() const;
  inline void clear_capacity();
  static const int kCapacityFieldNumber = 2;
  inline ::google::protobuf::uint32 capacity() const;
  inline void set_capacity(::google::protobuf::uint32 value);
  
  // required uint32 unlockLevel = 3;
  inline bool has_unlocklevel() const;
  inline void clear_unlocklevel();
  static const int kUnlockLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 unlocklevel() const;
  inline void set_unlocklevel(::google::protobuf::uint32 value);
  
  // required uint32 multiple = 4;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 4;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);
  
  // repeated .MartialClub.MartialClubReward rewards = 5;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 5;
  inline const ::MartialClub::MartialClubReward& rewards(int index) const;
  inline ::MartialClub::MartialClubReward* mutable_rewards(int index);
  inline ::MartialClub::MartialClubReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubReward >*
      mutable_rewards();
  
  // @@protoc_insertion_point(class_scope:MartialClub.MartialClubInfo)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_capacity();
  inline void clear_has_capacity();
  inline void set_has_unlocklevel();
  inline void clear_has_unlocklevel();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 capacity_;
  ::google::protobuf::uint32 unlocklevel_;
  ::google::protobuf::uint32 multiple_;
  ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubReward > rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_MartialClub_2eproto();
  friend void protobuf_AssignDesc_MartialClub_2eproto();
  friend void protobuf_ShutdownFile_MartialClub_2eproto();
  
  void InitAsDefaultInstance();
  static MartialClubInfo* default_instance_;
};
// -------------------------------------------------------------------

class MartialClubCfg : public ::google::protobuf::Message {
 public:
  MartialClubCfg();
  virtual ~MartialClubCfg();
  
  MartialClubCfg(const MartialClubCfg& from);
  
  inline MartialClubCfg& operator=(const MartialClubCfg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialClubCfg& default_instance();
  
  void Swap(MartialClubCfg* other);
  
  // implements Message ----------------------------------------------
  
  MartialClubCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialClubCfg& from);
  void MergeFrom(const MartialClubCfg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MartialClub.MartialClubInfo club = 1;
  inline int club_size() const;
  inline void clear_club();
  static const int kClubFieldNumber = 1;
  inline const ::MartialClub::MartialClubInfo& club(int index) const;
  inline ::MartialClub::MartialClubInfo* mutable_club(int index);
  inline ::MartialClub::MartialClubInfo* add_club();
  inline const ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubInfo >&
      club() const;
  inline ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubInfo >*
      mutable_club();
  
  // @@protoc_insertion_point(class_scope:MartialClub.MartialClubCfg)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubInfo > club_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_MartialClub_2eproto();
  friend void protobuf_AssignDesc_MartialClub_2eproto();
  friend void protobuf_ShutdownFile_MartialClub_2eproto();
  
  void InitAsDefaultInstance();
  static MartialClubCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// MartialClubReward

// required uint32 level = 1;
inline bool MartialClubReward::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MartialClubReward::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MartialClubReward::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MartialClubReward::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MartialClubReward::level() const {
  return level_;
}
inline void MartialClubReward::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 propsTs = 2;
inline bool MartialClubReward::has_propsts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MartialClubReward::set_has_propsts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MartialClubReward::clear_has_propsts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MartialClubReward::clear_propsts() {
  propsts_ = 0u;
  clear_has_propsts();
}
inline ::google::protobuf::uint32 MartialClubReward::propsts() const {
  return propsts_;
}
inline void MartialClubReward::set_propsts(::google::protobuf::uint32 value) {
  set_has_propsts();
  propsts_ = value;
}

// required uint32 levelUpTs = 3;
inline bool MartialClubReward::has_levelupts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MartialClubReward::set_has_levelupts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MartialClubReward::clear_has_levelupts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MartialClubReward::clear_levelupts() {
  levelupts_ = 0u;
  clear_has_levelupts();
}
inline ::google::protobuf::uint32 MartialClubReward::levelupts() const {
  return levelupts_;
}
inline void MartialClubReward::set_levelupts(::google::protobuf::uint32 value) {
  set_has_levelupts();
  levelupts_ = value;
}

// required .CommonGiftConfig.CommonModifyItem reward = 4;
inline bool MartialClubReward::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MartialClubReward::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MartialClubReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MartialClubReward::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& MartialClubReward::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* MartialClubReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* MartialClubReward::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MartialClubInfo

// required uint32 grade = 1;
inline bool MartialClubInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MartialClubInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MartialClubInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MartialClubInfo::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 MartialClubInfo::grade() const {
  return grade_;
}
inline void MartialClubInfo::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// required uint32 capacity = 2;
inline bool MartialClubInfo::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MartialClubInfo::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MartialClubInfo::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MartialClubInfo::clear_capacity() {
  capacity_ = 0u;
  clear_has_capacity();
}
inline ::google::protobuf::uint32 MartialClubInfo::capacity() const {
  return capacity_;
}
inline void MartialClubInfo::set_capacity(::google::protobuf::uint32 value) {
  set_has_capacity();
  capacity_ = value;
}

// required uint32 unlockLevel = 3;
inline bool MartialClubInfo::has_unlocklevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MartialClubInfo::set_has_unlocklevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MartialClubInfo::clear_has_unlocklevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MartialClubInfo::clear_unlocklevel() {
  unlocklevel_ = 0u;
  clear_has_unlocklevel();
}
inline ::google::protobuf::uint32 MartialClubInfo::unlocklevel() const {
  return unlocklevel_;
}
inline void MartialClubInfo::set_unlocklevel(::google::protobuf::uint32 value) {
  set_has_unlocklevel();
  unlocklevel_ = value;
}

// required uint32 multiple = 4;
inline bool MartialClubInfo::has_multiple() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MartialClubInfo::set_has_multiple() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MartialClubInfo::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MartialClubInfo::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 MartialClubInfo::multiple() const {
  return multiple_;
}
inline void MartialClubInfo::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
}

// repeated .MartialClub.MartialClubReward rewards = 5;
inline int MartialClubInfo::rewards_size() const {
  return rewards_.size();
}
inline void MartialClubInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::MartialClub::MartialClubReward& MartialClubInfo::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::MartialClub::MartialClubReward* MartialClubInfo::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::MartialClub::MartialClubReward* MartialClubInfo::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubReward >&
MartialClubInfo::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubReward >*
MartialClubInfo::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// MartialClubCfg

// repeated .MartialClub.MartialClubInfo club = 1;
inline int MartialClubCfg::club_size() const {
  return club_.size();
}
inline void MartialClubCfg::clear_club() {
  club_.Clear();
}
inline const ::MartialClub::MartialClubInfo& MartialClubCfg::club(int index) const {
  return club_.Get(index);
}
inline ::MartialClub::MartialClubInfo* MartialClubCfg::mutable_club(int index) {
  return club_.Mutable(index);
}
inline ::MartialClub::MartialClubInfo* MartialClubCfg::add_club() {
  return club_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubInfo >&
MartialClubCfg::club() const {
  return club_;
}
inline ::google::protobuf::RepeatedPtrField< ::MartialClub::MartialClubInfo >*
MartialClubCfg::mutable_club() {
  return &club_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MartialClub

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MartialClub_2eproto__INCLUDED
