// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NpcConfig.proto

#ifndef PROTOBUF_NpcConfig_2eproto__INCLUDED
#define PROTOBUF_NpcConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace NpcConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_NpcConfig_2eproto();
void protobuf_AssignDesc_NpcConfig_2eproto();
void protobuf_ShutdownFile_NpcConfig_2eproto();

class NpcLevelAttribute;
class NpcAttribute;
class SkillInfo;
class NpcSkill;
class NpcInfo;
class Npc;

// ===================================================================

class NpcLevelAttribute : public ::google::protobuf::Message {
 public:
  NpcLevelAttribute();
  virtual ~NpcLevelAttribute();
  
  NpcLevelAttribute(const NpcLevelAttribute& from);
  
  inline NpcLevelAttribute& operator=(const NpcLevelAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcLevelAttribute& default_instance();
  
  void Swap(NpcLevelAttribute* other);
  
  // implements Message ----------------------------------------------
  
  NpcLevelAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcLevelAttribute& from);
  void MergeFrom(const NpcLevelAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // required uint32 att = 3;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 3;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // required uint32 def = 4;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 4;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // required uint32 first = 5;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 5;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:NpcConfig.NpcLevelAttribute)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_first();
  inline void clear_has_first();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 first_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static NpcLevelAttribute* default_instance_;
};
// -------------------------------------------------------------------

class NpcAttribute : public ::google::protobuf::Message {
 public:
  NpcAttribute();
  virtual ~NpcAttribute();
  
  NpcAttribute(const NpcAttribute& from);
  
  inline NpcAttribute& operator=(const NpcAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcAttribute& default_instance();
  
  void Swap(NpcAttribute* other);
  
  // implements Message ----------------------------------------------
  
  NpcAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcAttribute& from);
  void MergeFrom(const NpcAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hit = 1;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 1;
  inline ::google::protobuf::uint32 hit() const;
  inline void set_hit(::google::protobuf::uint32 value);
  
  // required uint32 dodge = 2;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 2;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // required uint32 critStrike = 3;
  inline bool has_critstrike() const;
  inline void clear_critstrike();
  static const int kCritStrikeFieldNumber = 3;
  inline ::google::protobuf::uint32 critstrike() const;
  inline void set_critstrike(::google::protobuf::uint32 value);
  
  // required uint32 critRate = 4;
  inline bool has_critrate() const;
  inline void clear_critrate();
  static const int kCritRateFieldNumber = 4;
  inline ::google::protobuf::uint32 critrate() const;
  inline void set_critrate(::google::protobuf::uint32 value);
  
  // required uint32 critResist = 5;
  inline bool has_critresist() const;
  inline void clear_critresist();
  static const int kCritResistFieldNumber = 5;
  inline ::google::protobuf::uint32 critresist() const;
  inline void set_critresist(::google::protobuf::uint32 value);
  
  // repeated .NpcConfig.NpcLevelAttribute levelAttr = 6;
  inline int levelattr_size() const;
  inline void clear_levelattr();
  static const int kLevelAttrFieldNumber = 6;
  inline const ::NpcConfig::NpcLevelAttribute& levelattr(int index) const;
  inline ::NpcConfig::NpcLevelAttribute* mutable_levelattr(int index);
  inline ::NpcConfig::NpcLevelAttribute* add_levelattr();
  inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcLevelAttribute >&
      levelattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcLevelAttribute >*
      mutable_levelattr();
  
  // @@protoc_insertion_point(class_scope:NpcConfig.NpcAttribute)
 private:
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_critstrike();
  inline void clear_has_critstrike();
  inline void set_has_critrate();
  inline void clear_has_critrate();
  inline void set_has_critresist();
  inline void clear_has_critresist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 critstrike_;
  ::google::protobuf::uint32 critrate_;
  ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcLevelAttribute > levelattr_;
  ::google::protobuf::uint32 critresist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static NpcAttribute* default_instance_;
};
// -------------------------------------------------------------------

class SkillInfo : public ::google::protobuf::Message {
 public:
  SkillInfo();
  virtual ~SkillInfo();
  
  SkillInfo(const SkillInfo& from);
  
  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();
  
  void Swap(SkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  SkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required double multiple = 2;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 2;
  inline double multiple() const;
  inline void set_multiple(double value);
  
  // required uint32 hurtValue = 3;
  inline bool has_hurtvalue() const;
  inline void clear_hurtvalue();
  static const int kHurtValueFieldNumber = 3;
  inline ::google::protobuf::uint32 hurtvalue() const;
  inline void set_hurtvalue(::google::protobuf::uint32 value);
  
  // required uint32 fight_power = 4;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 4;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:NpcConfig.SkillInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_hurtvalue();
  inline void clear_has_hurtvalue();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double multiple_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hurtvalue_;
  ::google::protobuf::uint32 fight_power_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static SkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class NpcSkill : public ::google::protobuf::Message {
 public:
  NpcSkill();
  virtual ~NpcSkill();
  
  NpcSkill(const NpcSkill& from);
  
  inline NpcSkill& operator=(const NpcSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcSkill& default_instance();
  
  void Swap(NpcSkill* other);
  
  // implements Message ----------------------------------------------
  
  NpcSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcSkill& from);
  void MergeFrom(const NpcSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated .NpcConfig.SkillInfo skillInfo = 2;
  inline int skillinfo_size() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 2;
  inline const ::NpcConfig::SkillInfo& skillinfo(int index) const;
  inline ::NpcConfig::SkillInfo* mutable_skillinfo(int index);
  inline ::NpcConfig::SkillInfo* add_skillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::SkillInfo >&
      skillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::SkillInfo >*
      mutable_skillinfo();
  
  // @@protoc_insertion_point(class_scope:NpcConfig.NpcSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::NpcConfig::SkillInfo > skillinfo_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static NpcSkill* default_instance_;
};
// -------------------------------------------------------------------

class NpcInfo : public ::google::protobuf::Message {
 public:
  NpcInfo();
  virtual ~NpcInfo();
  
  NpcInfo(const NpcInfo& from);
  
  inline NpcInfo& operator=(const NpcInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcInfo& default_instance();
  
  void Swap(NpcInfo* other);
  
  // implements Message ----------------------------------------------
  
  NpcInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcInfo& from);
  void MergeFrom(const NpcInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 prof = 2;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 2;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);
  
  // required .NpcConfig.NpcAttribute attr = 3;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::NpcConfig::NpcAttribute& attr() const;
  inline ::NpcConfig::NpcAttribute* mutable_attr();
  inline ::NpcConfig::NpcAttribute* release_attr();
  
  // repeated .NpcConfig.NpcSkill skill = 4;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 4;
  inline const ::NpcConfig::NpcSkill& skill(int index) const;
  inline ::NpcConfig::NpcSkill* mutable_skill(int index);
  inline ::NpcConfig::NpcSkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcSkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcSkill >*
      mutable_skill();
  
  // @@protoc_insertion_point(class_scope:NpcConfig.NpcInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_attr();
  inline void clear_has_attr();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 prof_;
  ::NpcConfig::NpcAttribute* attr_;
  ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcSkill > skill_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static NpcInfo* default_instance_;
};
// -------------------------------------------------------------------

class Npc : public ::google::protobuf::Message {
 public:
  Npc();
  virtual ~Npc();
  
  Npc(const Npc& from);
  
  inline Npc& operator=(const Npc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Npc& default_instance();
  
  void Swap(Npc* other);
  
  // implements Message ----------------------------------------------
  
  Npc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Npc& from);
  void MergeFrom(const Npc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .NpcConfig.NpcInfo allNpc = 2;
  inline int allnpc_size() const;
  inline void clear_allnpc();
  static const int kAllNpcFieldNumber = 2;
  inline const ::NpcConfig::NpcInfo& allnpc(int index) const;
  inline ::NpcConfig::NpcInfo* mutable_allnpc(int index);
  inline ::NpcConfig::NpcInfo* add_allnpc();
  inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcInfo >&
      allnpc() const;
  inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcInfo >*
      mutable_allnpc();
  
  // @@protoc_insertion_point(class_scope:NpcConfig.Npc)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcInfo > allnpc_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_NpcConfig_2eproto();
  friend void protobuf_AssignDesc_NpcConfig_2eproto();
  friend void protobuf_ShutdownFile_NpcConfig_2eproto();
  
  void InitAsDefaultInstance();
  static Npc* default_instance_;
};
// ===================================================================


// ===================================================================

// NpcLevelAttribute

// required uint32 level = 1;
inline bool NpcLevelAttribute::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcLevelAttribute::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcLevelAttribute::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcLevelAttribute::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 NpcLevelAttribute::level() const {
  return level_;
}
inline void NpcLevelAttribute::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 hp = 2;
inline bool NpcLevelAttribute::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcLevelAttribute::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcLevelAttribute::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcLevelAttribute::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 NpcLevelAttribute::hp() const {
  return hp_;
}
inline void NpcLevelAttribute::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 att = 3;
inline bool NpcLevelAttribute::has_att() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcLevelAttribute::set_has_att() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcLevelAttribute::clear_has_att() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcLevelAttribute::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 NpcLevelAttribute::att() const {
  return att_;
}
inline void NpcLevelAttribute::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// required uint32 def = 4;
inline bool NpcLevelAttribute::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcLevelAttribute::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcLevelAttribute::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcLevelAttribute::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 NpcLevelAttribute::def() const {
  return def_;
}
inline void NpcLevelAttribute::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 first = 5;
inline bool NpcLevelAttribute::has_first() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NpcLevelAttribute::set_has_first() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NpcLevelAttribute::clear_has_first() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NpcLevelAttribute::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 NpcLevelAttribute::first() const {
  return first_;
}
inline void NpcLevelAttribute::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// -------------------------------------------------------------------

// NpcAttribute

// required uint32 hit = 1;
inline bool NpcAttribute::has_hit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcAttribute::set_has_hit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcAttribute::clear_has_hit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcAttribute::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 NpcAttribute::hit() const {
  return hit_;
}
inline void NpcAttribute::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
}

// required uint32 dodge = 2;
inline bool NpcAttribute::has_dodge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcAttribute::set_has_dodge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcAttribute::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcAttribute::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 NpcAttribute::dodge() const {
  return dodge_;
}
inline void NpcAttribute::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// required uint32 critStrike = 3;
inline bool NpcAttribute::has_critstrike() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcAttribute::set_has_critstrike() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcAttribute::clear_has_critstrike() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcAttribute::clear_critstrike() {
  critstrike_ = 0u;
  clear_has_critstrike();
}
inline ::google::protobuf::uint32 NpcAttribute::critstrike() const {
  return critstrike_;
}
inline void NpcAttribute::set_critstrike(::google::protobuf::uint32 value) {
  set_has_critstrike();
  critstrike_ = value;
}

// required uint32 critRate = 4;
inline bool NpcAttribute::has_critrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcAttribute::set_has_critrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcAttribute::clear_has_critrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcAttribute::clear_critrate() {
  critrate_ = 0u;
  clear_has_critrate();
}
inline ::google::protobuf::uint32 NpcAttribute::critrate() const {
  return critrate_;
}
inline void NpcAttribute::set_critrate(::google::protobuf::uint32 value) {
  set_has_critrate();
  critrate_ = value;
}

// required uint32 critResist = 5;
inline bool NpcAttribute::has_critresist() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NpcAttribute::set_has_critresist() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NpcAttribute::clear_has_critresist() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NpcAttribute::clear_critresist() {
  critresist_ = 0u;
  clear_has_critresist();
}
inline ::google::protobuf::uint32 NpcAttribute::critresist() const {
  return critresist_;
}
inline void NpcAttribute::set_critresist(::google::protobuf::uint32 value) {
  set_has_critresist();
  critresist_ = value;
}

// repeated .NpcConfig.NpcLevelAttribute levelAttr = 6;
inline int NpcAttribute::levelattr_size() const {
  return levelattr_.size();
}
inline void NpcAttribute::clear_levelattr() {
  levelattr_.Clear();
}
inline const ::NpcConfig::NpcLevelAttribute& NpcAttribute::levelattr(int index) const {
  return levelattr_.Get(index);
}
inline ::NpcConfig::NpcLevelAttribute* NpcAttribute::mutable_levelattr(int index) {
  return levelattr_.Mutable(index);
}
inline ::NpcConfig::NpcLevelAttribute* NpcAttribute::add_levelattr() {
  return levelattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcLevelAttribute >&
NpcAttribute::levelattr() const {
  return levelattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcLevelAttribute >*
NpcAttribute::mutable_levelattr() {
  return &levelattr_;
}

// -------------------------------------------------------------------

// SkillInfo

// required uint32 level = 1;
inline bool SkillInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SkillInfo::level() const {
  return level_;
}
inline void SkillInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required double multiple = 2;
inline bool SkillInfo::has_multiple() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillInfo::set_has_multiple() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillInfo::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillInfo::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline double SkillInfo::multiple() const {
  return multiple_;
}
inline void SkillInfo::set_multiple(double value) {
  set_has_multiple();
  multiple_ = value;
}

// required uint32 hurtValue = 3;
inline bool SkillInfo::has_hurtvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillInfo::set_has_hurtvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillInfo::clear_has_hurtvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillInfo::clear_hurtvalue() {
  hurtvalue_ = 0u;
  clear_has_hurtvalue();
}
inline ::google::protobuf::uint32 SkillInfo::hurtvalue() const {
  return hurtvalue_;
}
inline void SkillInfo::set_hurtvalue(::google::protobuf::uint32 value) {
  set_has_hurtvalue();
  hurtvalue_ = value;
}

// required uint32 fight_power = 4;
inline bool SkillInfo::has_fight_power() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillInfo::set_has_fight_power() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillInfo::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillInfo::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 SkillInfo::fight_power() const {
  return fight_power_;
}
inline void SkillInfo::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// -------------------------------------------------------------------

// NpcSkill

// required uint32 id = 1;
inline bool NpcSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcSkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NpcSkill::id() const {
  return id_;
}
inline void NpcSkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .NpcConfig.SkillInfo skillInfo = 2;
inline int NpcSkill::skillinfo_size() const {
  return skillinfo_.size();
}
inline void NpcSkill::clear_skillinfo() {
  skillinfo_.Clear();
}
inline const ::NpcConfig::SkillInfo& NpcSkill::skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline ::NpcConfig::SkillInfo* NpcSkill::mutable_skillinfo(int index) {
  return skillinfo_.Mutable(index);
}
inline ::NpcConfig::SkillInfo* NpcSkill::add_skillinfo() {
  return skillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::SkillInfo >&
NpcSkill::skillinfo() const {
  return skillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::SkillInfo >*
NpcSkill::mutable_skillinfo() {
  return &skillinfo_;
}

// -------------------------------------------------------------------

// NpcInfo

// required uint32 id = 1;
inline bool NpcInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NpcInfo::id() const {
  return id_;
}
inline void NpcInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 prof = 2;
inline bool NpcInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 NpcInfo::prof() const {
  return prof_;
}
inline void NpcInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required .NpcConfig.NpcAttribute attr = 3;
inline bool NpcInfo::has_attr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcInfo::set_has_attr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcInfo::clear_has_attr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcInfo::clear_attr() {
  if (attr_ != NULL) attr_->::NpcConfig::NpcAttribute::Clear();
  clear_has_attr();
}
inline const ::NpcConfig::NpcAttribute& NpcInfo::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::NpcConfig::NpcAttribute* NpcInfo::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::NpcConfig::NpcAttribute;
  return attr_;
}
inline ::NpcConfig::NpcAttribute* NpcInfo::release_attr() {
  clear_has_attr();
  ::NpcConfig::NpcAttribute* temp = attr_;
  attr_ = NULL;
  return temp;
}

// repeated .NpcConfig.NpcSkill skill = 4;
inline int NpcInfo::skill_size() const {
  return skill_.size();
}
inline void NpcInfo::clear_skill() {
  skill_.Clear();
}
inline const ::NpcConfig::NpcSkill& NpcInfo::skill(int index) const {
  return skill_.Get(index);
}
inline ::NpcConfig::NpcSkill* NpcInfo::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::NpcConfig::NpcSkill* NpcInfo::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcSkill >&
NpcInfo::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcSkill >*
NpcInfo::mutable_skill() {
  return &skill_;
}

// -------------------------------------------------------------------

// Npc

// repeated .NpcConfig.NpcInfo allNpc = 2;
inline int Npc::allnpc_size() const {
  return allnpc_.size();
}
inline void Npc::clear_allnpc() {
  allnpc_.Clear();
}
inline const ::NpcConfig::NpcInfo& Npc::allnpc(int index) const {
  return allnpc_.Get(index);
}
inline ::NpcConfig::NpcInfo* Npc::mutable_allnpc(int index) {
  return allnpc_.Mutable(index);
}
inline ::NpcConfig::NpcInfo* Npc::add_allnpc() {
  return allnpc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcInfo >&
Npc::allnpc() const {
  return allnpc_;
}
inline ::google::protobuf::RepeatedPtrField< ::NpcConfig::NpcInfo >*
Npc::mutable_allnpc() {
  return &allnpc_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NpcConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_NpcConfig_2eproto__INCLUDED
