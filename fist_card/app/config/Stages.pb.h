// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Stages.proto

#ifndef PROTOBUF_Stages_2eproto__INCLUDED
#define PROTOBUF_Stages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "CommonGiftConfig.pb.h"
#include "Cards.pb.h"
// @@protoc_insertion_point(includes)

namespace Stages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Stages_2eproto();
void protobuf_AssignDesc_Stages_2eproto();
void protobuf_ShutdownFile_Stages_2eproto();

class Dragon;
class AllStage;
class StagesInfo;

// ===================================================================

class Dragon : public ::google::protobuf::Message {
 public:
  Dragon();
  virtual ~Dragon();
  
  Dragon(const Dragon& from);
  
  inline Dragon& operator=(const Dragon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon& default_instance();
  
  void Swap(Dragon* other);
  
  // implements Message ----------------------------------------------
  
  Dragon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon& from);
  void MergeFrom(const Dragon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Stages.Dragon)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_idx();
  inline void clear_has_idx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 idx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Stages_2eproto();
  friend void protobuf_AssignDesc_Stages_2eproto();
  friend void protobuf_ShutdownFile_Stages_2eproto();
  
  void InitAsDefaultInstance();
  static Dragon* default_instance_;
};
// -------------------------------------------------------------------

class AllStage : public ::google::protobuf::Message {
 public:
  AllStage();
  virtual ~AllStage();
  
  AllStage(const AllStage& from);
  
  inline AllStage& operator=(const AllStage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllStage& default_instance();
  
  void Swap(AllStage* other);
  
  // implements Message ----------------------------------------------
  
  AllStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllStage& from);
  void MergeFrom(const AllStage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated uint32 npcId = 3;
  inline int npcid_size() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid(int index) const;
  inline void set_npcid(int index, ::google::protobuf::uint32 value);
  inline void add_npcid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      npcid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_npcid();
  
  // repeated .Cards.Card cards = 4;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 4;
  inline const ::Cards::Card& cards(int index) const;
  inline ::Cards::Card* mutable_cards(int index);
  inline ::Cards::Card* add_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::Cards::Card >&
      cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cards::Card >*
      mutable_cards();
  
  // required .CommonGiftConfig.CommonModifyItem rewards = 5;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 5;
  inline const ::CommonGiftConfig::CommonModifyItem& rewards() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_rewards();
  inline ::CommonGiftConfig::CommonModifyItem* release_rewards();
  
  // required uint32 heroExp = 6;
  inline bool has_heroexp() const;
  inline void clear_heroexp();
  static const int kHeroExpFieldNumber = 6;
  inline ::google::protobuf::uint32 heroexp() const;
  inline void set_heroexp(::google::protobuf::uint32 value);
  
  // repeated .Cards.Card dropCards = 7;
  inline int dropcards_size() const;
  inline void clear_dropcards();
  static const int kDropCardsFieldNumber = 7;
  inline const ::Cards::Card& dropcards(int index) const;
  inline ::Cards::Card* mutable_dropcards(int index);
  inline ::Cards::Card* add_dropcards();
  inline const ::google::protobuf::RepeatedPtrField< ::Cards::Card >&
      dropcards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cards::Card >*
      mutable_dropcards();
  
  // @@protoc_insertion_point(class_scope:Stages.AllStage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  inline void set_has_heroexp();
  inline void clear_has_heroexp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npcid_;
  ::google::protobuf::RepeatedPtrField< ::Cards::Card > cards_;
  ::CommonGiftConfig::CommonModifyItem* rewards_;
  ::google::protobuf::RepeatedPtrField< ::Cards::Card > dropcards_;
  ::google::protobuf::uint32 heroexp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_Stages_2eproto();
  friend void protobuf_AssignDesc_Stages_2eproto();
  friend void protobuf_ShutdownFile_Stages_2eproto();
  
  void InitAsDefaultInstance();
  static AllStage* default_instance_;
};
// -------------------------------------------------------------------

class StagesInfo : public ::google::protobuf::Message {
 public:
  StagesInfo();
  virtual ~StagesInfo();
  
  StagesInfo(const StagesInfo& from);
  
  inline StagesInfo& operator=(const StagesInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StagesInfo& default_instance();
  
  void Swap(StagesInfo* other);
  
  // implements Message ----------------------------------------------
  
  StagesInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StagesInfo& from);
  void MergeFrom(const StagesInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Stages.AllStage stage = 1;
  inline int stage_size() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline const ::Stages::AllStage& stage(int index) const;
  inline ::Stages::AllStage* mutable_stage(int index);
  inline ::Stages::AllStage* add_stage();
  inline const ::google::protobuf::RepeatedPtrField< ::Stages::AllStage >&
      stage() const;
  inline ::google::protobuf::RepeatedPtrField< ::Stages::AllStage >*
      mutable_stage();
  
  // @@protoc_insertion_point(class_scope:Stages.StagesInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Stages::AllStage > stage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Stages_2eproto();
  friend void protobuf_AssignDesc_Stages_2eproto();
  friend void protobuf_ShutdownFile_Stages_2eproto();
  
  void InitAsDefaultInstance();
  static StagesInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// Dragon

// required uint32 heroid = 1;
inline bool Dragon::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 Dragon::heroid() const {
  return heroid_;
}
inline void Dragon::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 idx = 2;
inline bool Dragon::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dragon::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dragon::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dragon::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 Dragon::idx() const {
  return idx_;
}
inline void Dragon::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// AllStage

// required uint32 id = 1;
inline bool AllStage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllStage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllStage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllStage::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AllStage::id() const {
  return id_;
}
inline void AllStage::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool AllStage::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllStage::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllStage::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllStage::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllStage::level() const {
  return level_;
}
inline void AllStage::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated uint32 npcId = 3;
inline int AllStage::npcid_size() const {
  return npcid_.size();
}
inline void AllStage::clear_npcid() {
  npcid_.Clear();
}
inline ::google::protobuf::uint32 AllStage::npcid(int index) const {
  return npcid_.Get(index);
}
inline void AllStage::set_npcid(int index, ::google::protobuf::uint32 value) {
  npcid_.Set(index, value);
}
inline void AllStage::add_npcid(::google::protobuf::uint32 value) {
  npcid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllStage::npcid() const {
  return npcid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllStage::mutable_npcid() {
  return &npcid_;
}

// repeated .Cards.Card cards = 4;
inline int AllStage::cards_size() const {
  return cards_.size();
}
inline void AllStage::clear_cards() {
  cards_.Clear();
}
inline const ::Cards::Card& AllStage::cards(int index) const {
  return cards_.Get(index);
}
inline ::Cards::Card* AllStage::mutable_cards(int index) {
  return cards_.Mutable(index);
}
inline ::Cards::Card* AllStage::add_cards() {
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cards::Card >&
AllStage::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cards::Card >*
AllStage::mutable_cards() {
  return &cards_;
}

// required .CommonGiftConfig.CommonModifyItem rewards = 5;
inline bool AllStage::has_rewards() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllStage::set_has_rewards() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllStage::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllStage::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_rewards();
}
inline const ::CommonGiftConfig::CommonModifyItem& AllStage::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CommonGiftConfig::CommonModifyItem* AllStage::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CommonGiftConfig::CommonModifyItem;
  return rewards_;
}
inline ::CommonGiftConfig::CommonModifyItem* AllStage::release_rewards() {
  clear_has_rewards();
  ::CommonGiftConfig::CommonModifyItem* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// required uint32 heroExp = 6;
inline bool AllStage::has_heroexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllStage::set_has_heroexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllStage::clear_has_heroexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllStage::clear_heroexp() {
  heroexp_ = 0u;
  clear_has_heroexp();
}
inline ::google::protobuf::uint32 AllStage::heroexp() const {
  return heroexp_;
}
inline void AllStage::set_heroexp(::google::protobuf::uint32 value) {
  set_has_heroexp();
  heroexp_ = value;
}

// repeated .Cards.Card dropCards = 7;
inline int AllStage::dropcards_size() const {
  return dropcards_.size();
}
inline void AllStage::clear_dropcards() {
  dropcards_.Clear();
}
inline const ::Cards::Card& AllStage::dropcards(int index) const {
  return dropcards_.Get(index);
}
inline ::Cards::Card* AllStage::mutable_dropcards(int index) {
  return dropcards_.Mutable(index);
}
inline ::Cards::Card* AllStage::add_dropcards() {
  return dropcards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cards::Card >&
AllStage::dropcards() const {
  return dropcards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cards::Card >*
AllStage::mutable_dropcards() {
  return &dropcards_;
}

// -------------------------------------------------------------------

// StagesInfo

// repeated .Stages.AllStage stage = 1;
inline int StagesInfo::stage_size() const {
  return stage_.size();
}
inline void StagesInfo::clear_stage() {
  stage_.Clear();
}
inline const ::Stages::AllStage& StagesInfo::stage(int index) const {
  return stage_.Get(index);
}
inline ::Stages::AllStage* StagesInfo::mutable_stage(int index) {
  return stage_.Mutable(index);
}
inline ::Stages::AllStage* StagesInfo::add_stage() {
  return stage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Stages::AllStage >&
StagesInfo::stage() const {
  return stage_;
}
inline ::google::protobuf::RepeatedPtrField< ::Stages::AllStage >*
StagesInfo::mutable_stage() {
  return &stage_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Stages

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Stages_2eproto__INCLUDED
