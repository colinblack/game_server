// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Hero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Hero {

namespace {

const ::google::protobuf::Descriptor* HeroLevelAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroLevelAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroResume_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroResume_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroLevelExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroLevelExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroSkillUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroSkillUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CardByGetHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CardByGetHero_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Hero_2eproto() {
  protobuf_AddDesc_Hero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Hero.proto");
  GOOGLE_CHECK(file != NULL);
  HeroLevelAttribute_descriptor_ = file->message_type(0);
  static const int HeroLevelAttribute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, att_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, first_),
  };
  HeroLevelAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroLevelAttribute_descriptor_,
      HeroLevelAttribute::default_instance_,
      HeroLevelAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroLevelAttribute));
  HeroAttribute_descriptor_ = file->message_type(1);
  static const int HeroAttribute_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, dodge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, critstrike_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, critrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, critresist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, levelattr_),
  };
  HeroAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroAttribute_descriptor_,
      HeroAttribute::default_instance_,
      HeroAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroAttribute));
  SkillInfo_descriptor_ = file->message_type(2);
  static const int SkillInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, hurtvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, fight_power_),
  };
  SkillInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillInfo_descriptor_,
      SkillInfo::default_instance_,
      SkillInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillInfo));
  HeroSkill_descriptor_ = file->message_type(3);
  static const int HeroSkill_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkill, skillinfo_),
  };
  HeroSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroSkill_descriptor_,
      HeroSkill::default_instance_,
      HeroSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroSkill));
  HeroResume_descriptor_ = file->message_type(4);
  static const int HeroResume_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResume, prof_),
  };
  HeroResume_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroResume_descriptor_,
      HeroResume::default_instance_,
      HeroResume_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResume, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResume, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroResume));
  HeroInfoList_descriptor_ = file->message_type(5);
  static const int HeroInfoList_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, unlocklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, unlockdaynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, unlockheronum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, sharereward_),
  };
  HeroInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroInfoList_descriptor_,
      HeroInfoList::default_instance_,
      HeroInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroInfoList));
  HeroLevelExp_descriptor_ = file->message_type(6);
  static const int HeroLevelExp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelExp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelExp, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelExp, coin_),
  };
  HeroLevelExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroLevelExp_descriptor_,
      HeroLevelExp::default_instance_,
      HeroLevelExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroLevelExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroLevelExp));
  HeroSkillUp_descriptor_ = file->message_type(7);
  static const int HeroSkillUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkillUp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkillUp, cost_),
  };
  HeroSkillUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroSkillUp_descriptor_,
      HeroSkillUp::default_instance_,
      HeroSkillUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkillUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSkillUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroSkillUp));
  CardByGetHero_descriptor_ = file->message_type(8);
  static const int CardByGetHero_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardByGetHero, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardByGetHero, cardid_),
  };
  CardByGetHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CardByGetHero_descriptor_,
      CardByGetHero::default_instance_,
      CardByGetHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardByGetHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardByGetHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CardByGetHero));
  HeroInfo_descriptor_ = file->message_type(9);
  static const int HeroInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, levelexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, skillup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, cards_),
  };
  HeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroInfo_descriptor_,
      HeroInfo::default_instance_,
      HeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Hero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroLevelAttribute_descriptor_, &HeroLevelAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroAttribute_descriptor_, &HeroAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillInfo_descriptor_, &SkillInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroSkill_descriptor_, &HeroSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroResume_descriptor_, &HeroResume::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroInfoList_descriptor_, &HeroInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroLevelExp_descriptor_, &HeroLevelExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroSkillUp_descriptor_, &HeroSkillUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CardByGetHero_descriptor_, &CardByGetHero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroInfo_descriptor_, &HeroInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Hero_2eproto() {
  delete HeroLevelAttribute::default_instance_;
  delete HeroLevelAttribute_reflection_;
  delete HeroAttribute::default_instance_;
  delete HeroAttribute_reflection_;
  delete SkillInfo::default_instance_;
  delete SkillInfo_reflection_;
  delete HeroSkill::default_instance_;
  delete HeroSkill_reflection_;
  delete HeroResume::default_instance_;
  delete HeroResume_reflection_;
  delete HeroInfoList::default_instance_;
  delete HeroInfoList_reflection_;
  delete HeroLevelExp::default_instance_;
  delete HeroLevelExp_reflection_;
  delete HeroSkillUp::default_instance_;
  delete HeroSkillUp_reflection_;
  delete CardByGetHero::default_instance_;
  delete CardByGetHero_reflection_;
  delete HeroInfo::default_instance_;
  delete HeroInfo_reflection_;
}

void protobuf_AddDesc_Hero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nHero.proto\022\004Hero\032\026CommonGiftConfig.pro"
    "to\"X\n\022HeroLevelAttribute\022\r\n\005level\030\001 \002(\r\022"
    "\n\n\002hp\030\002 \002(\r\022\013\n\003att\030\003 \002(\r\022\013\n\003def\030\004 \002(\r\022\r\n"
    "\005first\030\005 \002(\r\"\222\001\n\rHeroAttribute\022\013\n\003hit\030\001 "
    "\002(\r\022\r\n\005dodge\030\002 \002(\r\022\022\n\ncritStrike\030\003 \002(\r\022\020"
    "\n\010critRate\030\004 \002(\r\022\022\n\ncritResist\030\005 \002(\r\022+\n\t"
    "levelAttr\030\006 \003(\0132\030.Hero.HeroLevelAttribut"
    "e\"T\n\tSkillInfo\022\r\n\005level\030\001 \002(\r\022\020\n\010multipl"
    "e\030\002 \002(\001\022\021\n\thurtValue\030\003 \002(\r\022\023\n\013fight_powe"
    "r\030\004 \002(\r\";\n\tHeroSkill\022\n\n\002id\030\001 \002(\r\022\"\n\tskil"
    "lInfo\030\002 \003(\0132\017.Hero.SkillInfo\"\032\n\nHeroResu"
    "me\022\014\n\004prof\030\001 \002(\r\"\252\002\n\014HeroInfoList\022\n\n\002id\030"
    "\001 \002(\r\022!\n\004attr\030\002 \002(\0132\023.Hero.HeroAttribute"
    "\0220\n\004cost\030\003 \002(\0132\".CommonGiftConfig.Common"
    "ModifyItem\022\036\n\004info\030\004 \002(\0132\020.Hero.HeroResu"
    "me\022\023\n\013unlockLevel\030\005 \001(\r\022\024\n\014unLockDayNum\030"
    "\006 \001(\r\022\025\n\runLockHeroNum\030\007 \001(\r\022\036\n\005skill\030\010 "
    "\003(\0132\017.Hero.HeroSkill\0227\n\013shareReward\030\t \002("
    "\0132\".CommonGiftConfig.CommonModifyItem\"8\n"
    "\014HeroLevelExp\022\r\n\005level\030\001 \002(\r\022\013\n\003exp\030\002 \002("
    "\004\022\014\n\004coin\030\003 \002(\005\"N\n\013HeroSkillUp\022\r\n\005level\030"
    "\001 \002(\r\0220\n\004cost\030\002 \002(\0132\".CommonGiftConfig.C"
    "ommonModifyItem\"/\n\rCardByGetHero\022\016\n\006hero"
    "Id\030\001 \002(\r\022\016\n\006cardId\030\002 \003(\r\"\232\001\n\010HeroInfo\022 \n"
    "\004hero\030\001 \003(\0132\022.Hero.HeroInfoList\022$\n\010level"
    "Exp\030\002 \003(\0132\022.Hero.HeroLevelExp\022\"\n\007skillUp"
    "\030\003 \003(\0132\021.Hero.HeroSkillUp\022\"\n\005cards\030\004 \003(\013"
    "2\023.Hero.CardByGetHero", 1101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Hero.proto", &protobuf_RegisterTypes);
  HeroLevelAttribute::default_instance_ = new HeroLevelAttribute();
  HeroAttribute::default_instance_ = new HeroAttribute();
  SkillInfo::default_instance_ = new SkillInfo();
  HeroSkill::default_instance_ = new HeroSkill();
  HeroResume::default_instance_ = new HeroResume();
  HeroInfoList::default_instance_ = new HeroInfoList();
  HeroLevelExp::default_instance_ = new HeroLevelExp();
  HeroSkillUp::default_instance_ = new HeroSkillUp();
  CardByGetHero::default_instance_ = new CardByGetHero();
  HeroInfo::default_instance_ = new HeroInfo();
  HeroLevelAttribute::default_instance_->InitAsDefaultInstance();
  HeroAttribute::default_instance_->InitAsDefaultInstance();
  SkillInfo::default_instance_->InitAsDefaultInstance();
  HeroSkill::default_instance_->InitAsDefaultInstance();
  HeroResume::default_instance_->InitAsDefaultInstance();
  HeroInfoList::default_instance_->InitAsDefaultInstance();
  HeroLevelExp::default_instance_->InitAsDefaultInstance();
  HeroSkillUp::default_instance_->InitAsDefaultInstance();
  CardByGetHero::default_instance_->InitAsDefaultInstance();
  HeroInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Hero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Hero_2eproto {
  StaticDescriptorInitializer_Hero_2eproto() {
    protobuf_AddDesc_Hero_2eproto();
  }
} static_descriptor_initializer_Hero_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int HeroLevelAttribute::kLevelFieldNumber;
const int HeroLevelAttribute::kHpFieldNumber;
const int HeroLevelAttribute::kAttFieldNumber;
const int HeroLevelAttribute::kDefFieldNumber;
const int HeroLevelAttribute::kFirstFieldNumber;
#endif  // !_MSC_VER

HeroLevelAttribute::HeroLevelAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroLevelAttribute::InitAsDefaultInstance() {
}

HeroLevelAttribute::HeroLevelAttribute(const HeroLevelAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroLevelAttribute::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  hp_ = 0u;
  att_ = 0u;
  def_ = 0u;
  first_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroLevelAttribute::~HeroLevelAttribute() {
  SharedDtor();
}

void HeroLevelAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroLevelAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroLevelAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroLevelAttribute_descriptor_;
}

const HeroLevelAttribute& HeroLevelAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroLevelAttribute* HeroLevelAttribute::default_instance_ = NULL;

HeroLevelAttribute* HeroLevelAttribute::New() const {
  return new HeroLevelAttribute;
}

void HeroLevelAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0u;
    hp_ = 0u;
    att_ = 0u;
    def_ = 0u;
    first_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroLevelAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hp;
        break;
      }
      
      // required uint32 hp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_att;
        break;
      }
      
      // required uint32 att = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_att:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &att_)));
          set_has_att();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_def;
        break;
      }
      
      // required uint32 def = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));
          set_has_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_first;
        break;
      }
      
      // required uint32 first = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_)));
          set_has_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroLevelAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }
  
  // required uint32 hp = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hp(), output);
  }
  
  // required uint32 att = 3;
  if (has_att()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->att(), output);
  }
  
  // required uint32 def = 4;
  if (has_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }
  
  // required uint32 first = 5;
  if (has_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroLevelAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }
  
  // required uint32 hp = 2;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hp(), target);
  }
  
  // required uint32 att = 3;
  if (has_att()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->att(), target);
  }
  
  // required uint32 def = 4;
  if (has_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }
  
  // required uint32 first = 5;
  if (has_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroLevelAttribute::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required uint32 hp = 2;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }
    
    // required uint32 att = 3;
    if (has_att()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->att());
    }
    
    // required uint32 def = 4;
    if (has_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def());
    }
    
    // required uint32 first = 5;
    if (has_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroLevelAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroLevelAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroLevelAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroLevelAttribute::MergeFrom(const HeroLevelAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_att()) {
      set_att(from.att());
    }
    if (from.has_def()) {
      set_def(from.def());
    }
    if (from.has_first()) {
      set_first(from.first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroLevelAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroLevelAttribute::CopyFrom(const HeroLevelAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroLevelAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void HeroLevelAttribute::Swap(HeroLevelAttribute* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(hp_, other->hp_);
    std::swap(att_, other->att_);
    std::swap(def_, other->def_);
    std::swap(first_, other->first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroLevelAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroLevelAttribute_descriptor_;
  metadata.reflection = HeroLevelAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroAttribute::kHitFieldNumber;
const int HeroAttribute::kDodgeFieldNumber;
const int HeroAttribute::kCritStrikeFieldNumber;
const int HeroAttribute::kCritRateFieldNumber;
const int HeroAttribute::kCritResistFieldNumber;
const int HeroAttribute::kLevelAttrFieldNumber;
#endif  // !_MSC_VER

HeroAttribute::HeroAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroAttribute::InitAsDefaultInstance() {
}

HeroAttribute::HeroAttribute(const HeroAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroAttribute::SharedCtor() {
  _cached_size_ = 0;
  hit_ = 0u;
  dodge_ = 0u;
  critstrike_ = 0u;
  critrate_ = 0u;
  critresist_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroAttribute::~HeroAttribute() {
  SharedDtor();
}

void HeroAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroAttribute_descriptor_;
}

const HeroAttribute& HeroAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroAttribute* HeroAttribute::default_instance_ = NULL;

HeroAttribute* HeroAttribute::New() const {
  return new HeroAttribute;
}

void HeroAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hit_ = 0u;
    dodge_ = 0u;
    critstrike_ = 0u;
    critrate_ = 0u;
    critresist_ = 0u;
  }
  levelattr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_dodge;
        break;
      }
      
      // required uint32 dodge = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dodge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dodge_)));
          set_has_dodge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_critStrike;
        break;
      }
      
      // required uint32 critStrike = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critStrike:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critstrike_)));
          set_has_critstrike();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_critRate;
        break;
      }
      
      // required uint32 critRate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critrate_)));
          set_has_critrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_critResist;
        break;
      }
      
      // required uint32 critResist = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critResist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critresist_)));
          set_has_critresist();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_levelAttr;
        break;
      }
      
      // repeated .Hero.HeroLevelAttribute levelAttr = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_levelAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_levelattr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_levelAttr;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 hit = 1;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hit(), output);
  }
  
  // required uint32 dodge = 2;
  if (has_dodge()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dodge(), output);
  }
  
  // required uint32 critStrike = 3;
  if (has_critstrike()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->critstrike(), output);
  }
  
  // required uint32 critRate = 4;
  if (has_critrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->critrate(), output);
  }
  
  // required uint32 critResist = 5;
  if (has_critresist()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->critresist(), output);
  }
  
  // repeated .Hero.HeroLevelAttribute levelAttr = 6;
  for (int i = 0; i < this->levelattr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->levelattr(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 hit = 1;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hit(), target);
  }
  
  // required uint32 dodge = 2;
  if (has_dodge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dodge(), target);
  }
  
  // required uint32 critStrike = 3;
  if (has_critstrike()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->critstrike(), target);
  }
  
  // required uint32 critRate = 4;
  if (has_critrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->critrate(), target);
  }
  
  // required uint32 critResist = 5;
  if (has_critresist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->critresist(), target);
  }
  
  // repeated .Hero.HeroLevelAttribute levelAttr = 6;
  for (int i = 0; i < this->levelattr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->levelattr(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroAttribute::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 hit = 1;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hit());
    }
    
    // required uint32 dodge = 2;
    if (has_dodge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dodge());
    }
    
    // required uint32 critStrike = 3;
    if (has_critstrike()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critstrike());
    }
    
    // required uint32 critRate = 4;
    if (has_critrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critrate());
    }
    
    // required uint32 critResist = 5;
    if (has_critresist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critresist());
    }
    
  }
  // repeated .Hero.HeroLevelAttribute levelAttr = 6;
  total_size += 1 * this->levelattr_size();
  for (int i = 0; i < this->levelattr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levelattr(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroAttribute::MergeFrom(const HeroAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  levelattr_.MergeFrom(from.levelattr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_dodge()) {
      set_dodge(from.dodge());
    }
    if (from.has_critstrike()) {
      set_critstrike(from.critstrike());
    }
    if (from.has_critrate()) {
      set_critrate(from.critrate());
    }
    if (from.has_critresist()) {
      set_critresist(from.critresist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroAttribute::CopyFrom(const HeroAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  for (int i = 0; i < levelattr_size(); i++) {
    if (!this->levelattr(i).IsInitialized()) return false;
  }
  return true;
}

void HeroAttribute::Swap(HeroAttribute* other) {
  if (other != this) {
    std::swap(hit_, other->hit_);
    std::swap(dodge_, other->dodge_);
    std::swap(critstrike_, other->critstrike_);
    std::swap(critrate_, other->critrate_);
    std::swap(critresist_, other->critresist_);
    levelattr_.Swap(&other->levelattr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroAttribute_descriptor_;
  metadata.reflection = HeroAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillInfo::kLevelFieldNumber;
const int SkillInfo::kMultipleFieldNumber;
const int SkillInfo::kHurtValueFieldNumber;
const int SkillInfo::kFightPowerFieldNumber;
#endif  // !_MSC_VER

SkillInfo::SkillInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillInfo::InitAsDefaultInstance() {
}

SkillInfo::SkillInfo(const SkillInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillInfo::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  multiple_ = 0;
  hurtvalue_ = 0u;
  fight_power_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillInfo::~SkillInfo() {
  SharedDtor();
}

void SkillInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillInfo_descriptor_;
}

const SkillInfo& SkillInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

SkillInfo* SkillInfo::default_instance_ = NULL;

SkillInfo* SkillInfo::New() const {
  return new SkillInfo;
}

void SkillInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0u;
    multiple_ = 0;
    hurtvalue_ = 0u;
    fight_power_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_multiple;
        break;
      }
      
      // required double multiple = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_hurtValue;
        break;
      }
      
      // required uint32 hurtValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hurtValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hurtvalue_)));
          set_has_hurtvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fight_power;
        break;
      }
      
      // required uint32 fight_power = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fight_power_)));
          set_has_fight_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }
  
  // required double multiple = 2;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->multiple(), output);
  }
  
  // required uint32 hurtValue = 3;
  if (has_hurtvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hurtvalue(), output);
  }
  
  // required uint32 fight_power = 4;
  if (has_fight_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fight_power(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }
  
  // required double multiple = 2;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->multiple(), target);
  }
  
  // required uint32 hurtValue = 3;
  if (has_hurtvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hurtvalue(), target);
  }
  
  // required uint32 fight_power = 4;
  if (has_fight_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fight_power(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required double multiple = 2;
    if (has_multiple()) {
      total_size += 1 + 8;
    }
    
    // required uint32 hurtValue = 3;
    if (has_hurtvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hurtvalue());
    }
    
    // required uint32 fight_power = 4;
    if (has_fight_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fight_power());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillInfo::MergeFrom(const SkillInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
    if (from.has_hurtvalue()) {
      set_hurtvalue(from.hurtvalue());
    }
    if (from.has_fight_power()) {
      set_fight_power(from.fight_power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillInfo::CopyFrom(const SkillInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void SkillInfo::Swap(SkillInfo* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(multiple_, other->multiple_);
    std::swap(hurtvalue_, other->hurtvalue_);
    std::swap(fight_power_, other->fight_power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillInfo_descriptor_;
  metadata.reflection = SkillInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroSkill::kIdFieldNumber;
const int HeroSkill::kSkillInfoFieldNumber;
#endif  // !_MSC_VER

HeroSkill::HeroSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroSkill::InitAsDefaultInstance() {
}

HeroSkill::HeroSkill(const HeroSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroSkill::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroSkill::~HeroSkill() {
  SharedDtor();
}

void HeroSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroSkill_descriptor_;
}

const HeroSkill& HeroSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroSkill* HeroSkill::default_instance_ = NULL;

HeroSkill* HeroSkill::New() const {
  return new HeroSkill;
}

void HeroSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  skillinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skillInfo;
        break;
      }
      
      // repeated .Hero.SkillInfo skillInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skillInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // repeated .Hero.SkillInfo skillInfo = 2;
  for (int i = 0; i < this->skillinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skillinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // repeated .Hero.SkillInfo skillInfo = 2;
  for (int i = 0; i < this->skillinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skillinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroSkill::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
  }
  // repeated .Hero.SkillInfo skillInfo = 2;
  total_size += 1 * this->skillinfo_size();
  for (int i = 0; i < this->skillinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroSkill::MergeFrom(const HeroSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillinfo_.MergeFrom(from.skillinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroSkill::CopyFrom(const HeroSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroSkill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < skillinfo_size(); i++) {
    if (!this->skillinfo(i).IsInitialized()) return false;
  }
  return true;
}

void HeroSkill::Swap(HeroSkill* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    skillinfo_.Swap(&other->skillinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroSkill_descriptor_;
  metadata.reflection = HeroSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroResume::kProfFieldNumber;
#endif  // !_MSC_VER

HeroResume::HeroResume()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroResume::InitAsDefaultInstance() {
}

HeroResume::HeroResume(const HeroResume& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroResume::SharedCtor() {
  _cached_size_ = 0;
  prof_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroResume::~HeroResume() {
  SharedDtor();
}

void HeroResume::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroResume::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroResume::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroResume_descriptor_;
}

const HeroResume& HeroResume::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroResume* HeroResume::default_instance_ = NULL;

HeroResume* HeroResume::New() const {
  return new HeroResume;
}

void HeroResume::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    prof_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroResume::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 prof = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prof_)));
          set_has_prof();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroResume::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 prof = 1;
  if (has_prof()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prof(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroResume::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 prof = 1;
  if (has_prof()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prof(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroResume::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 prof = 1;
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prof());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroResume::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroResume* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroResume*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroResume::MergeFrom(const HeroResume& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prof()) {
      set_prof(from.prof());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroResume::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroResume::CopyFrom(const HeroResume& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroResume::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void HeroResume::Swap(HeroResume* other) {
  if (other != this) {
    std::swap(prof_, other->prof_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroResume::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroResume_descriptor_;
  metadata.reflection = HeroResume_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroInfoList::kIdFieldNumber;
const int HeroInfoList::kAttrFieldNumber;
const int HeroInfoList::kCostFieldNumber;
const int HeroInfoList::kInfoFieldNumber;
const int HeroInfoList::kUnlockLevelFieldNumber;
const int HeroInfoList::kUnLockDayNumFieldNumber;
const int HeroInfoList::kUnLockHeroNumFieldNumber;
const int HeroInfoList::kSkillFieldNumber;
const int HeroInfoList::kShareRewardFieldNumber;
#endif  // !_MSC_VER

HeroInfoList::HeroInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroInfoList::InitAsDefaultInstance() {
  attr_ = const_cast< ::Hero::HeroAttribute*>(&::Hero::HeroAttribute::default_instance());
  cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  info_ = const_cast< ::Hero::HeroResume*>(&::Hero::HeroResume::default_instance());
  sharereward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

HeroInfoList::HeroInfoList(const HeroInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroInfoList::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  attr_ = NULL;
  cost_ = NULL;
  info_ = NULL;
  unlocklevel_ = 0u;
  unlockdaynum_ = 0u;
  unlockheronum_ = 0u;
  sharereward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroInfoList::~HeroInfoList() {
  SharedDtor();
}

void HeroInfoList::SharedDtor() {
  if (this != default_instance_) {
    delete attr_;
    delete cost_;
    delete info_;
    delete sharereward_;
  }
}

void HeroInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroInfoList_descriptor_;
}

const HeroInfoList& HeroInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroInfoList* HeroInfoList::default_instance_ = NULL;

HeroInfoList* HeroInfoList::New() const {
  return new HeroInfoList;
}

void HeroInfoList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_attr()) {
      if (attr_ != NULL) attr_->::Hero::HeroAttribute::Clear();
    }
    if (has_cost()) {
      if (cost_ != NULL) cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_info()) {
      if (info_ != NULL) info_->::Hero::HeroResume::Clear();
    }
    unlocklevel_ = 0u;
    unlockdaynum_ = 0u;
    unlockheronum_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_sharereward()) {
      if (sharereward_ != NULL) sharereward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }
      
      // required .Hero.HeroAttribute attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cost;
        break;
      }
      
      // required .CommonGiftConfig.CommonModifyItem cost = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_info;
        break;
      }
      
      // required .Hero.HeroResume info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_unlockLevel;
        break;
      }
      
      // optional uint32 unlockLevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unlockLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlocklevel_)));
          set_has_unlocklevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_unLockDayNum;
        break;
      }
      
      // optional uint32 unLockDayNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unLockDayNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlockdaynum_)));
          set_has_unlockdaynum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_unLockHeroNum;
        break;
      }
      
      // optional uint32 unLockHeroNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unLockHeroNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlockheronum_)));
          set_has_unlockheronum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_skill;
        break;
      }
      
      // repeated .Hero.HeroSkill skill = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_skill;
        if (input->ExpectTag(74)) goto parse_shareReward;
        break;
      }
      
      // required .CommonGiftConfig.CommonModifyItem shareReward = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shareReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharereward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // required .Hero.HeroAttribute attr = 2;
  if (has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(), output);
  }
  
  // required .CommonGiftConfig.CommonModifyItem cost = 3;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cost(), output);
  }
  
  // required .Hero.HeroResume info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->info(), output);
  }
  
  // optional uint32 unlockLevel = 5;
  if (has_unlocklevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unlocklevel(), output);
  }
  
  // optional uint32 unLockDayNum = 6;
  if (has_unlockdaynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->unlockdaynum(), output);
  }
  
  // optional uint32 unLockHeroNum = 7;
  if (has_unlockheronum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->unlockheronum(), output);
  }
  
  // repeated .Hero.HeroSkill skill = 8;
  for (int i = 0; i < this->skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->skill(i), output);
  }
  
  // required .CommonGiftConfig.CommonModifyItem shareReward = 9;
  if (has_sharereward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sharereward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // required .Hero.HeroAttribute attr = 2;
  if (has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(), target);
  }
  
  // required .CommonGiftConfig.CommonModifyItem cost = 3;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cost(), target);
  }
  
  // required .Hero.HeroResume info = 4;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->info(), target);
  }
  
  // optional uint32 unlockLevel = 5;
  if (has_unlocklevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unlocklevel(), target);
  }
  
  // optional uint32 unLockDayNum = 6;
  if (has_unlockdaynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->unlockdaynum(), target);
  }
  
  // optional uint32 unLockHeroNum = 7;
  if (has_unlockheronum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->unlockheronum(), target);
  }
  
  // repeated .Hero.HeroSkill skill = 8;
  for (int i = 0; i < this->skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->skill(i), target);
  }
  
  // required .CommonGiftConfig.CommonModifyItem shareReward = 9;
  if (has_sharereward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->sharereward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroInfoList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // required .Hero.HeroAttribute attr = 2;
    if (has_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr());
    }
    
    // required .CommonGiftConfig.CommonModifyItem cost = 3;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost());
    }
    
    // required .Hero.HeroResume info = 4;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }
    
    // optional uint32 unlockLevel = 5;
    if (has_unlocklevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlocklevel());
    }
    
    // optional uint32 unLockDayNum = 6;
    if (has_unlockdaynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlockdaynum());
    }
    
    // optional uint32 unLockHeroNum = 7;
    if (has_unlockheronum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlockheronum());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem shareReward = 9;
    if (has_sharereward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sharereward());
    }
    
  }
  // repeated .Hero.HeroSkill skill = 8;
  total_size += 1 * this->skill_size();
  for (int i = 0; i < this->skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroInfoList::MergeFrom(const HeroInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_.MergeFrom(from.skill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_attr()) {
      mutable_attr()->::Hero::HeroAttribute::MergeFrom(from.attr());
    }
    if (from.has_cost()) {
      mutable_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.cost());
    }
    if (from.has_info()) {
      mutable_info()->::Hero::HeroResume::MergeFrom(from.info());
    }
    if (from.has_unlocklevel()) {
      set_unlocklevel(from.unlocklevel());
    }
    if (from.has_unlockdaynum()) {
      set_unlockdaynum(from.unlockdaynum());
    }
    if (from.has_unlockheronum()) {
      set_unlockheronum(from.unlockheronum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sharereward()) {
      mutable_sharereward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.sharereward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroInfoList::CopyFrom(const HeroInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroInfoList::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000010f) != 0x0000010f) return false;
  
  if (has_attr()) {
    if (!this->attr().IsInitialized()) return false;
  }
  if (has_cost()) {
    if (!this->cost().IsInitialized()) return false;
  }
  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  for (int i = 0; i < skill_size(); i++) {
    if (!this->skill(i).IsInitialized()) return false;
  }
  if (has_sharereward()) {
    if (!this->sharereward().IsInitialized()) return false;
  }
  return true;
}

void HeroInfoList::Swap(HeroInfoList* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(attr_, other->attr_);
    std::swap(cost_, other->cost_);
    std::swap(info_, other->info_);
    std::swap(unlocklevel_, other->unlocklevel_);
    std::swap(unlockdaynum_, other->unlockdaynum_);
    std::swap(unlockheronum_, other->unlockheronum_);
    skill_.Swap(&other->skill_);
    std::swap(sharereward_, other->sharereward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroInfoList_descriptor_;
  metadata.reflection = HeroInfoList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroLevelExp::kLevelFieldNumber;
const int HeroLevelExp::kExpFieldNumber;
const int HeroLevelExp::kCoinFieldNumber;
#endif  // !_MSC_VER

HeroLevelExp::HeroLevelExp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroLevelExp::InitAsDefaultInstance() {
}

HeroLevelExp::HeroLevelExp(const HeroLevelExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroLevelExp::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = GOOGLE_ULONGLONG(0);
  coin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroLevelExp::~HeroLevelExp() {
  SharedDtor();
}

void HeroLevelExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroLevelExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroLevelExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroLevelExp_descriptor_;
}

const HeroLevelExp& HeroLevelExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroLevelExp* HeroLevelExp::default_instance_ = NULL;

HeroLevelExp* HeroLevelExp::New() const {
  return new HeroLevelExp;
}

void HeroLevelExp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0u;
    exp_ = GOOGLE_ULONGLONG(0);
    coin_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroLevelExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // required uint64 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }
      
      // required int32 coin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroLevelExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }
  
  // required uint64 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->exp(), output);
  }
  
  // required int32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coin(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroLevelExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }
  
  // required uint64 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->exp(), target);
  }
  
  // required int32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coin(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroLevelExp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required uint64 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }
    
    // required int32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroLevelExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroLevelExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroLevelExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroLevelExp::MergeFrom(const HeroLevelExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroLevelExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroLevelExp::CopyFrom(const HeroLevelExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroLevelExp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void HeroLevelExp::Swap(HeroLevelExp* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(coin_, other->coin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroLevelExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroLevelExp_descriptor_;
  metadata.reflection = HeroLevelExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroSkillUp::kLevelFieldNumber;
const int HeroSkillUp::kCostFieldNumber;
#endif  // !_MSC_VER

HeroSkillUp::HeroSkillUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroSkillUp::InitAsDefaultInstance() {
  cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

HeroSkillUp::HeroSkillUp(const HeroSkillUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroSkillUp::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  cost_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroSkillUp::~HeroSkillUp() {
  SharedDtor();
}

void HeroSkillUp::SharedDtor() {
  if (this != default_instance_) {
    delete cost_;
  }
}

void HeroSkillUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroSkillUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroSkillUp_descriptor_;
}

const HeroSkillUp& HeroSkillUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroSkillUp* HeroSkillUp::default_instance_ = NULL;

HeroSkillUp* HeroSkillUp::New() const {
  return new HeroSkillUp;
}

void HeroSkillUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0u;
    if (has_cost()) {
      if (cost_ != NULL) cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroSkillUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cost;
        break;
      }
      
      // required .CommonGiftConfig.CommonModifyItem cost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroSkillUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }
  
  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cost(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroSkillUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }
  
  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cost(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroSkillUp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required .CommonGiftConfig.CommonModifyItem cost = 2;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroSkillUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroSkillUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroSkillUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroSkillUp::MergeFrom(const HeroSkillUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_cost()) {
      mutable_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroSkillUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroSkillUp::CopyFrom(const HeroSkillUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroSkillUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_cost()) {
    if (!this->cost().IsInitialized()) return false;
  }
  return true;
}

void HeroSkillUp::Swap(HeroSkillUp* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(cost_, other->cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroSkillUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroSkillUp_descriptor_;
  metadata.reflection = HeroSkillUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CardByGetHero::kHeroIdFieldNumber;
const int CardByGetHero::kCardIdFieldNumber;
#endif  // !_MSC_VER

CardByGetHero::CardByGetHero()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CardByGetHero::InitAsDefaultInstance() {
}

CardByGetHero::CardByGetHero(const CardByGetHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CardByGetHero::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CardByGetHero::~CardByGetHero() {
  SharedDtor();
}

void CardByGetHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CardByGetHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardByGetHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CardByGetHero_descriptor_;
}

const CardByGetHero& CardByGetHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

CardByGetHero* CardByGetHero::default_instance_ = NULL;

CardByGetHero* CardByGetHero::New() const {
  return new CardByGetHero;
}

void CardByGetHero::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0u;
  }
  cardid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CardByGetHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cardId;
        break;
      }
      
      // repeated uint32 cardId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_cardid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cardid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cardId;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CardByGetHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }
  
  // repeated uint32 cardId = 2;
  for (int i = 0; i < this->cardid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->cardid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CardByGetHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }
  
  // repeated uint32 cardId = 2;
  for (int i = 0; i < this->cardid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->cardid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CardByGetHero::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
  }
  // repeated uint32 cardId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->cardid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->cardid(i));
    }
    total_size += 1 * this->cardid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardByGetHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CardByGetHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CardByGetHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CardByGetHero::MergeFrom(const CardByGetHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardid_.MergeFrom(from.cardid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CardByGetHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardByGetHero::CopyFrom(const CardByGetHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardByGetHero::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void CardByGetHero::Swap(CardByGetHero* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    cardid_.Swap(&other->cardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CardByGetHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CardByGetHero_descriptor_;
  metadata.reflection = CardByGetHero_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroInfo::kHeroFieldNumber;
const int HeroInfo::kLevelExpFieldNumber;
const int HeroInfo::kSkillUpFieldNumber;
const int HeroInfo::kCardsFieldNumber;
#endif  // !_MSC_VER

HeroInfo::HeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroInfo::InitAsDefaultInstance() {
}

HeroInfo::HeroInfo(const HeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroInfo::~HeroInfo() {
  SharedDtor();
}

void HeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroInfo_descriptor_;
}

const HeroInfo& HeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

HeroInfo* HeroInfo::default_instance_ = NULL;

HeroInfo* HeroInfo::New() const {
  return new HeroInfo;
}

void HeroInfo::Clear() {
  hero_.Clear();
  levelexp_.Clear();
  skillup_.Clear();
  cards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Hero.HeroInfoList hero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hero;
        if (input->ExpectTag(18)) goto parse_levelExp;
        break;
      }
      
      // repeated .Hero.HeroLevelExp levelExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_levelExp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_levelexp()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_levelExp;
        if (input->ExpectTag(26)) goto parse_skillUp;
        break;
      }
      
      // repeated .Hero.HeroSkillUp skillUp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillUp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skillUp;
        if (input->ExpectTag(34)) goto parse_cards;
        break;
      }
      
      // repeated .Hero.CardByGetHero cards = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cards()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_cards;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Hero.HeroInfoList hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(i), output);
  }
  
  // repeated .Hero.HeroLevelExp levelExp = 2;
  for (int i = 0; i < this->levelexp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->levelexp(i), output);
  }
  
  // repeated .Hero.HeroSkillUp skillUp = 3;
  for (int i = 0; i < this->skillup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->skillup(i), output);
  }
  
  // repeated .Hero.CardByGetHero cards = 4;
  for (int i = 0; i < this->cards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->cards(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Hero.HeroInfoList hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(i), target);
  }
  
  // repeated .Hero.HeroLevelExp levelExp = 2;
  for (int i = 0; i < this->levelexp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->levelexp(i), target);
  }
  
  // repeated .Hero.HeroSkillUp skillUp = 3;
  for (int i = 0; i < this->skillup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->skillup(i), target);
  }
  
  // repeated .Hero.CardByGetHero cards = 4;
  for (int i = 0; i < this->cards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->cards(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .Hero.HeroInfoList hero = 1;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }
  
  // repeated .Hero.HeroLevelExp levelExp = 2;
  total_size += 1 * this->levelexp_size();
  for (int i = 0; i < this->levelexp_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levelexp(i));
  }
  
  // repeated .Hero.HeroSkillUp skillUp = 3;
  total_size += 1 * this->skillup_size();
  for (int i = 0; i < this->skillup_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillup(i));
  }
  
  // repeated .Hero.CardByGetHero cards = 4;
  total_size += 1 * this->cards_size();
  for (int i = 0; i < this->cards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cards(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroInfo::MergeFrom(const HeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_.MergeFrom(from.hero_);
  levelexp_.MergeFrom(from.levelexp_);
  skillup_.MergeFrom(from.skillup_);
  cards_.MergeFrom(from.cards_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroInfo::CopyFrom(const HeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroInfo::IsInitialized() const {
  
  for (int i = 0; i < hero_size(); i++) {
    if (!this->hero(i).IsInitialized()) return false;
  }
  for (int i = 0; i < levelexp_size(); i++) {
    if (!this->levelexp(i).IsInitialized()) return false;
  }
  for (int i = 0; i < skillup_size(); i++) {
    if (!this->skillup(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cards_size(); i++) {
    if (!this->cards(i).IsInitialized()) return false;
  }
  return true;
}

void HeroInfo::Swap(HeroInfo* other) {
  if (other != this) {
    hero_.Swap(&other->hero_);
    levelexp_.Swap(&other->levelexp_);
    skillup_.Swap(&other->skillup_);
    cards_.Swap(&other->cards_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroInfo_descriptor_;
  metadata.reflection = HeroInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Hero

// @@protoc_insertion_point(global_scope)
