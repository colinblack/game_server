// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Archive.proto

#ifndef PROTOBUF_Archive_2eproto__INCLUDED
#define PROTOBUF_Archive_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace Archive {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Archive_2eproto();
void protobuf_AssignDesc_Archive_2eproto();
void protobuf_ShutdownFile_Archive_2eproto();

class Attributes;
class LevelAttribute;
class HeroWithArchive;
class ArchiveRward;
class ArchiveInfo;

// ===================================================================

class Attributes : public ::google::protobuf::Message {
 public:
  Attributes();
  virtual ~Attributes();
  
  Attributes(const Attributes& from);
  
  inline Attributes& operator=(const Attributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Attributes& default_instance();
  
  void Swap(Attributes* other);
  
  // implements Message ----------------------------------------------
  
  Attributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attributes& from);
  void MergeFrom(const Attributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 att = 2;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 2;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // optional uint32 def = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 3;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // optional uint32 first = 4;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 4;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // optional uint32 hit = 5;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 5;
  inline ::google::protobuf::uint32 hit() const;
  inline void set_hit(::google::protobuf::uint32 value);
  
  // optional uint32 dodge = 6;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 6;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // optional uint32 critStrike = 7;
  inline bool has_critstrike() const;
  inline void clear_critstrike();
  static const int kCritStrikeFieldNumber = 7;
  inline ::google::protobuf::uint32 critstrike() const;
  inline void set_critstrike(::google::protobuf::uint32 value);
  
  // optional uint32 critRate = 8;
  inline bool has_critrate() const;
  inline void clear_critrate();
  static const int kCritRateFieldNumber = 8;
  inline ::google::protobuf::uint32 critrate() const;
  inline void set_critrate(::google::protobuf::uint32 value);
  
  // optional uint32 critResist = 9;
  inline bool has_critresist() const;
  inline void clear_critresist();
  static const int kCritResistFieldNumber = 9;
  inline ::google::protobuf::uint32 critresist() const;
  inline void set_critresist(::google::protobuf::uint32 value);
  
  // optional double hp_add = 10;
  inline bool has_hp_add() const;
  inline void clear_hp_add();
  static const int kHpAddFieldNumber = 10;
  inline double hp_add() const;
  inline void set_hp_add(double value);
  
  // optional double att_add = 11;
  inline bool has_att_add() const;
  inline void clear_att_add();
  static const int kAttAddFieldNumber = 11;
  inline double att_add() const;
  inline void set_att_add(double value);
  
  // optional double def_add = 12;
  inline bool has_def_add() const;
  inline void clear_def_add();
  static const int kDefAddFieldNumber = 12;
  inline double def_add() const;
  inline void set_def_add(double value);
  
  // required uint32 fight_power = 13;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 13;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Archive.Attributes)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_critstrike();
  inline void clear_has_critstrike();
  inline void set_has_critrate();
  inline void clear_has_critrate();
  inline void set_has_critresist();
  inline void clear_has_critresist();
  inline void set_has_hp_add();
  inline void clear_has_hp_add();
  inline void set_has_att_add();
  inline void clear_has_att_add();
  inline void set_has_def_add();
  inline void clear_has_def_add();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 first_;
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 critstrike_;
  ::google::protobuf::uint32 critrate_;
  double hp_add_;
  double att_add_;
  ::google::protobuf::uint32 critresist_;
  ::google::protobuf::uint32 fight_power_;
  double def_add_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_Archive_2eproto();
  friend void protobuf_AssignDesc_Archive_2eproto();
  friend void protobuf_ShutdownFile_Archive_2eproto();
  
  void InitAsDefaultInstance();
  static Attributes* default_instance_;
};
// -------------------------------------------------------------------

class LevelAttribute : public ::google::protobuf::Message {
 public:
  LevelAttribute();
  virtual ~LevelAttribute();
  
  LevelAttribute(const LevelAttribute& from);
  
  inline LevelAttribute& operator=(const LevelAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelAttribute& default_instance();
  
  void Swap(LevelAttribute* other);
  
  // implements Message ----------------------------------------------
  
  LevelAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelAttribute& from);
  void MergeFrom(const LevelAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required .Archive.Attributes attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::Archive::Attributes& attr() const;
  inline ::Archive::Attributes* mutable_attr();
  inline ::Archive::Attributes* release_attr();
  
  // @@protoc_insertion_point(class_scope:Archive.LevelAttribute)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_attr();
  inline void clear_has_attr();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::Archive::Attributes* attr_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Archive_2eproto();
  friend void protobuf_AssignDesc_Archive_2eproto();
  friend void protobuf_ShutdownFile_Archive_2eproto();
  
  void InitAsDefaultInstance();
  static LevelAttribute* default_instance_;
};
// -------------------------------------------------------------------

class HeroWithArchive : public ::google::protobuf::Message {
 public:
  HeroWithArchive();
  virtual ~HeroWithArchive();
  
  HeroWithArchive(const HeroWithArchive& from);
  
  inline HeroWithArchive& operator=(const HeroWithArchive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroWithArchive& default_instance();
  
  void Swap(HeroWithArchive* other);
  
  // implements Message ----------------------------------------------
  
  HeroWithArchive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroWithArchive& from);
  void MergeFrom(const HeroWithArchive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated .Archive.LevelAttribute levelAttr = 2;
  inline int levelattr_size() const;
  inline void clear_levelattr();
  static const int kLevelAttrFieldNumber = 2;
  inline const ::Archive::LevelAttribute& levelattr(int index) const;
  inline ::Archive::LevelAttribute* mutable_levelattr(int index);
  inline ::Archive::LevelAttribute* add_levelattr();
  inline const ::google::protobuf::RepeatedPtrField< ::Archive::LevelAttribute >&
      levelattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::Archive::LevelAttribute >*
      mutable_levelattr();
  
  // @@protoc_insertion_point(class_scope:Archive.HeroWithArchive)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Archive::LevelAttribute > levelattr_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Archive_2eproto();
  friend void protobuf_AssignDesc_Archive_2eproto();
  friend void protobuf_ShutdownFile_Archive_2eproto();
  
  void InitAsDefaultInstance();
  static HeroWithArchive* default_instance_;
};
// -------------------------------------------------------------------

class ArchiveRward : public ::google::protobuf::Message {
 public:
  ArchiveRward();
  virtual ~ArchiveRward();
  
  ArchiveRward(const ArchiveRward& from);
  
  inline ArchiveRward& operator=(const ArchiveRward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveRward& default_instance();
  
  void Swap(ArchiveRward* other);
  
  // implements Message ----------------------------------------------
  
  ArchiveRward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArchiveRward& from);
  void MergeFrom(const ArchiveRward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  
  // @@protoc_insertion_point(class_scope:Archive.ArchiveRward)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Archive_2eproto();
  friend void protobuf_AssignDesc_Archive_2eproto();
  friend void protobuf_ShutdownFile_Archive_2eproto();
  
  void InitAsDefaultInstance();
  static ArchiveRward* default_instance_;
};
// -------------------------------------------------------------------

class ArchiveInfo : public ::google::protobuf::Message {
 public:
  ArchiveInfo();
  virtual ~ArchiveInfo();
  
  ArchiveInfo(const ArchiveInfo& from);
  
  inline ArchiveInfo& operator=(const ArchiveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveInfo& default_instance();
  
  void Swap(ArchiveInfo* other);
  
  // implements Message ----------------------------------------------
  
  ArchiveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArchiveInfo& from);
  void MergeFrom(const ArchiveInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Archive.HeroWithArchive archiveInfo = 1;
  inline int archiveinfo_size() const;
  inline void clear_archiveinfo();
  static const int kArchiveInfoFieldNumber = 1;
  inline const ::Archive::HeroWithArchive& archiveinfo(int index) const;
  inline ::Archive::HeroWithArchive* mutable_archiveinfo(int index);
  inline ::Archive::HeroWithArchive* add_archiveinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Archive::HeroWithArchive >&
      archiveinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Archive::HeroWithArchive >*
      mutable_archiveinfo();
  
  // repeated .Archive.ArchiveRward rewards = 2;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::Archive::ArchiveRward& rewards(int index) const;
  inline ::Archive::ArchiveRward* mutable_rewards(int index);
  inline ::Archive::ArchiveRward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::Archive::ArchiveRward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Archive::ArchiveRward >*
      mutable_rewards();
  
  // @@protoc_insertion_point(class_scope:Archive.ArchiveInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Archive::HeroWithArchive > archiveinfo_;
  ::google::protobuf::RepeatedPtrField< ::Archive::ArchiveRward > rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Archive_2eproto();
  friend void protobuf_AssignDesc_Archive_2eproto();
  friend void protobuf_ShutdownFile_Archive_2eproto();
  
  void InitAsDefaultInstance();
  static ArchiveInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// Attributes

// optional uint32 hp = 1;
inline bool Attributes::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attributes::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attributes::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attributes::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 Attributes::hp() const {
  return hp_;
}
inline void Attributes::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 att = 2;
inline bool Attributes::has_att() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attributes::set_has_att() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attributes::clear_has_att() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attributes::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 Attributes::att() const {
  return att_;
}
inline void Attributes::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// optional uint32 def = 3;
inline bool Attributes::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Attributes::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Attributes::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Attributes::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 Attributes::def() const {
  return def_;
}
inline void Attributes::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// optional uint32 first = 4;
inline bool Attributes::has_first() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Attributes::set_has_first() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Attributes::clear_has_first() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Attributes::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 Attributes::first() const {
  return first_;
}
inline void Attributes::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional uint32 hit = 5;
inline bool Attributes::has_hit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Attributes::set_has_hit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Attributes::clear_has_hit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Attributes::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 Attributes::hit() const {
  return hit_;
}
inline void Attributes::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
}

// optional uint32 dodge = 6;
inline bool Attributes::has_dodge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Attributes::set_has_dodge() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Attributes::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Attributes::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 Attributes::dodge() const {
  return dodge_;
}
inline void Attributes::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// optional uint32 critStrike = 7;
inline bool Attributes::has_critstrike() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Attributes::set_has_critstrike() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Attributes::clear_has_critstrike() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Attributes::clear_critstrike() {
  critstrike_ = 0u;
  clear_has_critstrike();
}
inline ::google::protobuf::uint32 Attributes::critstrike() const {
  return critstrike_;
}
inline void Attributes::set_critstrike(::google::protobuf::uint32 value) {
  set_has_critstrike();
  critstrike_ = value;
}

// optional uint32 critRate = 8;
inline bool Attributes::has_critrate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Attributes::set_has_critrate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Attributes::clear_has_critrate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Attributes::clear_critrate() {
  critrate_ = 0u;
  clear_has_critrate();
}
inline ::google::protobuf::uint32 Attributes::critrate() const {
  return critrate_;
}
inline void Attributes::set_critrate(::google::protobuf::uint32 value) {
  set_has_critrate();
  critrate_ = value;
}

// optional uint32 critResist = 9;
inline bool Attributes::has_critresist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Attributes::set_has_critresist() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Attributes::clear_has_critresist() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Attributes::clear_critresist() {
  critresist_ = 0u;
  clear_has_critresist();
}
inline ::google::protobuf::uint32 Attributes::critresist() const {
  return critresist_;
}
inline void Attributes::set_critresist(::google::protobuf::uint32 value) {
  set_has_critresist();
  critresist_ = value;
}

// optional double hp_add = 10;
inline bool Attributes::has_hp_add() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Attributes::set_has_hp_add() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Attributes::clear_has_hp_add() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Attributes::clear_hp_add() {
  hp_add_ = 0;
  clear_has_hp_add();
}
inline double Attributes::hp_add() const {
  return hp_add_;
}
inline void Attributes::set_hp_add(double value) {
  set_has_hp_add();
  hp_add_ = value;
}

// optional double att_add = 11;
inline bool Attributes::has_att_add() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Attributes::set_has_att_add() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Attributes::clear_has_att_add() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Attributes::clear_att_add() {
  att_add_ = 0;
  clear_has_att_add();
}
inline double Attributes::att_add() const {
  return att_add_;
}
inline void Attributes::set_att_add(double value) {
  set_has_att_add();
  att_add_ = value;
}

// optional double def_add = 12;
inline bool Attributes::has_def_add() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Attributes::set_has_def_add() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Attributes::clear_has_def_add() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Attributes::clear_def_add() {
  def_add_ = 0;
  clear_has_def_add();
}
inline double Attributes::def_add() const {
  return def_add_;
}
inline void Attributes::set_def_add(double value) {
  set_has_def_add();
  def_add_ = value;
}

// required uint32 fight_power = 13;
inline bool Attributes::has_fight_power() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Attributes::set_has_fight_power() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Attributes::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Attributes::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 Attributes::fight_power() const {
  return fight_power_;
}
inline void Attributes::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// -------------------------------------------------------------------

// LevelAttribute

// required uint32 level = 1;
inline bool LevelAttribute::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelAttribute::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelAttribute::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelAttribute::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LevelAttribute::level() const {
  return level_;
}
inline void LevelAttribute::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required .Archive.Attributes attr = 2;
inline bool LevelAttribute::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelAttribute::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelAttribute::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelAttribute::clear_attr() {
  if (attr_ != NULL) attr_->::Archive::Attributes::Clear();
  clear_has_attr();
}
inline const ::Archive::Attributes& LevelAttribute::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::Archive::Attributes* LevelAttribute::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::Archive::Attributes;
  return attr_;
}
inline ::Archive::Attributes* LevelAttribute::release_attr() {
  clear_has_attr();
  ::Archive::Attributes* temp = attr_;
  attr_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// HeroWithArchive

// required uint32 id = 1;
inline bool HeroWithArchive::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroWithArchive::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroWithArchive::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroWithArchive::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroWithArchive::id() const {
  return id_;
}
inline void HeroWithArchive::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .Archive.LevelAttribute levelAttr = 2;
inline int HeroWithArchive::levelattr_size() const {
  return levelattr_.size();
}
inline void HeroWithArchive::clear_levelattr() {
  levelattr_.Clear();
}
inline const ::Archive::LevelAttribute& HeroWithArchive::levelattr(int index) const {
  return levelattr_.Get(index);
}
inline ::Archive::LevelAttribute* HeroWithArchive::mutable_levelattr(int index) {
  return levelattr_.Mutable(index);
}
inline ::Archive::LevelAttribute* HeroWithArchive::add_levelattr() {
  return levelattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Archive::LevelAttribute >&
HeroWithArchive::levelattr() const {
  return levelattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::Archive::LevelAttribute >*
HeroWithArchive::mutable_levelattr() {
  return &levelattr_;
}

// -------------------------------------------------------------------

// ArchiveRward

// required uint32 level = 1;
inline bool ArchiveRward::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArchiveRward::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArchiveRward::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArchiveRward::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ArchiveRward::level() const {
  return level_;
}
inline void ArchiveRward::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required .CommonGiftConfig.CommonModifyItem reward = 2;
inline bool ArchiveRward::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArchiveRward::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArchiveRward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArchiveRward::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& ArchiveRward::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* ArchiveRward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* ArchiveRward::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ArchiveInfo

// repeated .Archive.HeroWithArchive archiveInfo = 1;
inline int ArchiveInfo::archiveinfo_size() const {
  return archiveinfo_.size();
}
inline void ArchiveInfo::clear_archiveinfo() {
  archiveinfo_.Clear();
}
inline const ::Archive::HeroWithArchive& ArchiveInfo::archiveinfo(int index) const {
  return archiveinfo_.Get(index);
}
inline ::Archive::HeroWithArchive* ArchiveInfo::mutable_archiveinfo(int index) {
  return archiveinfo_.Mutable(index);
}
inline ::Archive::HeroWithArchive* ArchiveInfo::add_archiveinfo() {
  return archiveinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Archive::HeroWithArchive >&
ArchiveInfo::archiveinfo() const {
  return archiveinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Archive::HeroWithArchive >*
ArchiveInfo::mutable_archiveinfo() {
  return &archiveinfo_;
}

// repeated .Archive.ArchiveRward rewards = 2;
inline int ArchiveInfo::rewards_size() const {
  return rewards_.size();
}
inline void ArchiveInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::Archive::ArchiveRward& ArchiveInfo::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::Archive::ArchiveRward* ArchiveInfo::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::Archive::ArchiveRward* ArchiveInfo::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Archive::ArchiveRward >&
ArchiveInfo::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Archive::ArchiveRward >*
ArchiveInfo::mutable_rewards() {
  return &rewards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Archive

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Archive_2eproto__INCLUDED
