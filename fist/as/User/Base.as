package com.sanguo.game.server.connectlogic.common.message.User
{
	import com.sanguo.game.server.ServerManager;
	import laya.utils.Byte;
	public class Base
	{
		public static const PROTO:String = "User.Base";
		public var package_root:*;
		public  var message:*;
		public var uid:int;
		public var registerPlatform:int;
		public var registerTime:int;
		public var lastLoginPlatform:int;
		public var lastLoginTime:int;
		public var loginTimes:int;
		public var loginDays:int;
		public var lastActiveTime:int;
		public var lastOffTime:int;
		public var forbidTs:int;
		public var forbidReason:Byte;
		public var tutorialStage:int;
		public var name:Byte;
		public var fig:Byte;
		public var exp:Number;
		public var level:int;
		public var acccharge:int;
		public var viplevel:int;
		public var cash:int;
		public var coin:int;
		public var firstRecharge:int;
		public var allianceId:int;
		public var archiveChip:Byte;
		public var archiveLevel:Byte;
		public var archiveReward:Byte;
		public var power:int;
		public var recoverTime:int;
		public var pass:int;
		public var limitTimesProps:Byte;
		public var usePropsTs:int;
		public var heroId:int;
		public var honor:Number;
		public var dailyPower:int;
		public var dailyPowerTs:int;
		public var onhookCoinTs:int;
		public var onhookExpTs:int;
		public var dailyBattleTs:int;
		public var dailyBattleCount:int;
		public var inviteFriendCount:int;
		public var inviteRewardMark:Number;
		public var inviteAddRewardMark:int;
		public var freeDrawRewardsTs:int;
		public function Base(root:*)
		{
			package_root = root;
			message = ServerManager.getProtoMsg(PROTO);
			uid = undefined;
			registerPlatform = undefined;
			registerTime = undefined;
			lastLoginPlatform = undefined;
			lastLoginTime = undefined;
			loginTimes = undefined;
			loginDays = undefined;
			lastActiveTime = undefined;
			lastOffTime = undefined;
			forbidTs = undefined;
			forbidReason = undefined;
			tutorialStage = undefined;
			name = undefined;
			fig = undefined;
			exp = undefined;
			level = undefined;
			acccharge = undefined;
			viplevel = undefined;
			cash = undefined;
			coin = undefined;
			firstRecharge = undefined;
			allianceId = undefined;
			archiveChip = undefined;
			archiveLevel = undefined;
			archiveReward = undefined;
			power = undefined;
			recoverTime = undefined;
			pass = undefined;
			limitTimesProps = undefined;
			usePropsTs = undefined;
			heroId = undefined;
			honor = undefined;
			dailyPower = undefined;
			dailyPowerTs = undefined;
			onhookCoinTs = undefined;
			onhookExpTs = undefined;
			dailyBattleTs = undefined;
			dailyBattleCount = undefined;
			inviteFriendCount = undefined;
			inviteRewardMark = undefined;
			inviteAddRewardMark = undefined;
			freeDrawRewardsTs = undefined;
		}
		public function serialize():*
		{
			var serializeObj:Object = {};
			serializeObj.uid = this.uid;
			serializeObj.registerPlatform = this.registerPlatform;
			serializeObj.registerTime = this.registerTime;
			serializeObj.lastLoginPlatform = this.lastLoginPlatform;
			serializeObj.lastLoginTime = this.lastLoginTime;
			serializeObj.loginTimes = this.loginTimes;
			serializeObj.loginDays = this.loginDays;
			serializeObj.lastActiveTime = this.lastActiveTime;
			serializeObj.lastOffTime = this.lastOffTime;
			serializeObj.forbidTs = this.forbidTs;
			this.forbidReason.pos = 0;
			serializeObj.tutorialStage = this.tutorialStage;
			this.name.pos = 0;
			this.fig.pos = 0;
			serializeObj.exp = this.exp;
			serializeObj.level = this.level;
			serializeObj.acccharge = this.acccharge;
			serializeObj.viplevel = this.viplevel;
			serializeObj.cash = this.cash;
			serializeObj.coin = this.coin;
			serializeObj.firstRecharge = this.firstRecharge;
			serializeObj.allianceId = this.allianceId;
			this.archiveChip.pos = 0;
			this.archiveLevel.pos = 0;
			this.archiveReward.pos = 0;
			serializeObj.power = this.power;
			serializeObj.recoverTime = this.recoverTime;
			serializeObj.pass = this.pass;
			this.limitTimesProps.pos = 0;
			serializeObj.usePropsTs = this.usePropsTs;
			serializeObj.heroId = this.heroId;
			serializeObj.honor = this.honor;
			serializeObj.dailyPower = this.dailyPower;
			serializeObj.dailyPowerTs = this.dailyPowerTs;
			serializeObj.onhookCoinTs = this.onhookCoinTs;
			serializeObj.onhookExpTs = this.onhookExpTs;
			serializeObj.dailyBattleTs = this.dailyBattleTs;
			serializeObj.dailyBattleCount = this.dailyBattleCount;
			serializeObj.inviteFriendCount = this.inviteFriendCount;
			serializeObj.inviteRewardMark = this.inviteRewardMark;
			serializeObj.inviteAddRewardMark = this.inviteAddRewardMark;
			serializeObj.freeDrawRewardsTs = this.freeDrawRewardsTs;
			return serializeObj;
		}
		public function unserialize(msgObj:*):Base
		{
			uid = undefined;
			registerPlatform = undefined;
			registerTime = undefined;
			lastLoginPlatform = undefined;
			lastLoginTime = undefined;
			loginTimes = undefined;
			loginDays = undefined;
			lastActiveTime = undefined;
			lastOffTime = undefined;
			forbidTs = undefined;
			forbidReason = undefined;
			tutorialStage = undefined;
			name = undefined;
			fig = undefined;
			exp = undefined;
			level = undefined;
			acccharge = undefined;
			viplevel = undefined;
			cash = undefined;
			coin = undefined;
			firstRecharge = undefined;
			allianceId = undefined;
			archiveChip = undefined;
			archiveLevel = undefined;
			archiveReward = undefined;
			power = undefined;
			recoverTime = undefined;
			pass = undefined;
			limitTimesProps = undefined;
			usePropsTs = undefined;
			heroId = undefined;
			honor = undefined;
			dailyPower = undefined;
			dailyPowerTs = undefined;
			onhookCoinTs = undefined;
			onhookExpTs = undefined;
			dailyBattleTs = undefined;
			dailyBattleCount = undefined;
			inviteFriendCount = undefined;
			inviteRewardMark = undefined;
			inviteAddRewardMark = undefined;
			freeDrawRewardsTs = undefined;
			this.uid = msgObj.uid;
			this.registerPlatform = msgObj.registerPlatform;
			this.registerTime = msgObj.registerTime;
			this.lastLoginPlatform = msgObj.lastLoginPlatform;
			this.lastLoginTime = msgObj.lastLoginTime;
			this.loginTimes = msgObj.loginTimes;
			this.loginDays = msgObj.loginDays;
			this.lastActiveTime = msgObj.lastActiveTime;
			this.lastOffTime = msgObj.lastOffTime;
			this.forbidTs = msgObj.forbidTs;
			this.forbidReason = new Byte();
			this.forbidReason.writeArrayBuffer(msgObj.forbidReason);
			this.forbidReason.pos = 0;
			this.tutorialStage = msgObj.tutorialStage;
			this.name = new Byte();
			this.name.writeArrayBuffer(msgObj.name);
			this.name.pos = 0;
			this.fig = new Byte();
			this.fig.writeArrayBuffer(msgObj.fig);
			this.fig.pos = 0;
			this.exp = msgObj.exp;
			this.level = msgObj.level;
			this.acccharge = msgObj.acccharge;
			this.viplevel = msgObj.viplevel;
			this.cash = msgObj.cash;
			this.coin = msgObj.coin;
			this.firstRecharge = msgObj.firstRecharge;
			this.allianceId = msgObj.allianceId;
			this.archiveChip = new Byte();
			this.archiveChip.writeArrayBuffer(msgObj.archiveChip);
			this.archiveChip.pos = 0;
			this.archiveLevel = new Byte();
			this.archiveLevel.writeArrayBuffer(msgObj.archiveLevel);
			this.archiveLevel.pos = 0;
			this.archiveReward = new Byte();
			this.archiveReward.writeArrayBuffer(msgObj.archiveReward);
			this.archiveReward.pos = 0;
			this.power = msgObj.power;
			this.recoverTime = msgObj.recoverTime;
			this.pass = msgObj.pass;
			this.limitTimesProps = new Byte();
			this.limitTimesProps.writeArrayBuffer(msgObj.limitTimesProps);
			this.limitTimesProps.pos = 0;
			this.usePropsTs = msgObj.usePropsTs;
			this.heroId = msgObj.heroId;
			this.honor = msgObj.honor;
			this.dailyPower = msgObj.dailyPower;
			this.dailyPowerTs = msgObj.dailyPowerTs;
			this.onhookCoinTs = msgObj.onhookCoinTs;
			this.onhookExpTs = msgObj.onhookExpTs;
			this.dailyBattleTs = msgObj.dailyBattleTs;
			this.dailyBattleCount = msgObj.dailyBattleCount;
			this.inviteFriendCount = msgObj.inviteFriendCount;
			this.inviteRewardMark = msgObj.inviteRewardMark;
			this.inviteAddRewardMark = msgObj.inviteAddRewardMark;
			this.freeDrawRewardsTs = msgObj.freeDrawRewardsTs;
			return this;
		}
		public function encode():* 
		{
			return message.encode(serialize()).finish();
		}
		public function decode(buffer:*):Base
		{
			var msg:* = message.decode(buffer);
			return unserialize(msg);
		}
	}
}