// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigItem.proto

#ifndef PROTOBUF_ConfigItem_2eproto__INCLUDED
#define PROTOBUF_ConfigItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigItem {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigItem_2eproto();
void protobuf_AssignDesc_ConfigItem_2eproto();
void protobuf_ShutdownFile_ConfigItem_2eproto();

class PropItem;
class Items;

// ===================================================================

class PropItem : public ::google::protobuf::Message {
 public:
  PropItem();
  virtual ~PropItem();
  
  PropItem(const PropItem& from);
  
  inline PropItem& operator=(const PropItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropItem& default_instance();
  
  void Swap(PropItem* other);
  
  // implements Message ----------------------------------------------
  
  PropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropItem& from);
  void MergeFrom(const PropItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 limitnum = 3;
  inline bool has_limitnum() const;
  inline void clear_limitnum();
  static const int kLimitnumFieldNumber = 3;
  inline ::google::protobuf::uint32 limitnum() const;
  inline void set_limitnum(::google::protobuf::uint32 value);
  
  // optional .CommonGiftConfig.CommonModifyItem dimond_cost = 4;
  inline bool has_dimond_cost() const;
  inline void clear_dimond_cost();
  static const int kDimondCostFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& dimond_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_dimond_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_dimond_cost();
  
  // optional uint32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional double factor = 6;
  inline bool has_factor() const;
  inline void clear_factor();
  static const int kFactorFieldNumber = 6;
  inline double factor() const;
  inline void set_factor(double value);
  
  // optional uint32 turn = 7;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 7;
  inline ::google::protobuf::uint32 turn() const;
  inline void set_turn(::google::protobuf::uint32 value);
  
  // optional uint32 heroid = 8;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 8;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // optional uint32 seq = 9;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 9;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ConfigItem.PropItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_limitnum();
  inline void clear_has_limitnum();
  inline void set_has_dimond_cost();
  inline void clear_has_dimond_cost();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_factor();
  inline void clear_has_factor();
  inline void set_has_turn();
  inline void clear_has_turn();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_seq();
  inline void clear_has_seq();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::CommonGiftConfig::CommonModifyItem* dimond_cost_;
  ::google::protobuf::uint32 limitnum_;
  ::google::protobuf::uint32 value_;
  double factor_;
  ::google::protobuf::uint32 turn_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 seq_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_ConfigItem_2eproto();
  friend void protobuf_AssignDesc_ConfigItem_2eproto();
  friend void protobuf_ShutdownFile_ConfigItem_2eproto();
  
  void InitAsDefaultInstance();
  static PropItem* default_instance_;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message {
 public:
  Items();
  virtual ~Items();
  
  Items(const Items& from);
  
  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();
  
  void Swap(Items* other);
  
  // implements Message ----------------------------------------------
  
  Items* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ConfigItem.PropItem itemes = 1;
  inline int itemes_size() const;
  inline void clear_itemes();
  static const int kItemesFieldNumber = 1;
  inline const ::ConfigItem::PropItem& itemes(int index) const;
  inline ::ConfigItem::PropItem* mutable_itemes(int index);
  inline ::ConfigItem::PropItem* add_itemes();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >&
      itemes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >*
      mutable_itemes();
  
  // @@protoc_insertion_point(class_scope:ConfigItem.Items)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem > itemes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ConfigItem_2eproto();
  friend void protobuf_AssignDesc_ConfigItem_2eproto();
  friend void protobuf_ShutdownFile_ConfigItem_2eproto();
  
  void InitAsDefaultInstance();
  static Items* default_instance_;
};
// ===================================================================


// ===================================================================

// PropItem

// required uint32 id = 1;
inline bool PropItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PropItem::id() const {
  return id_;
}
inline void PropItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 type = 2;
inline bool PropItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PropItem::type() const {
  return type_;
}
inline void PropItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 limitnum = 3;
inline bool PropItem::has_limitnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PropItem::set_has_limitnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PropItem::clear_has_limitnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PropItem::clear_limitnum() {
  limitnum_ = 0u;
  clear_has_limitnum();
}
inline ::google::protobuf::uint32 PropItem::limitnum() const {
  return limitnum_;
}
inline void PropItem::set_limitnum(::google::protobuf::uint32 value) {
  set_has_limitnum();
  limitnum_ = value;
}

// optional .CommonGiftConfig.CommonModifyItem dimond_cost = 4;
inline bool PropItem::has_dimond_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PropItem::set_has_dimond_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PropItem::clear_has_dimond_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PropItem::clear_dimond_cost() {
  if (dimond_cost_ != NULL) dimond_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_dimond_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PropItem::dimond_cost() const {
  return dimond_cost_ != NULL ? *dimond_cost_ : *default_instance_->dimond_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::mutable_dimond_cost() {
  set_has_dimond_cost();
  if (dimond_cost_ == NULL) dimond_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  return dimond_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::release_dimond_cost() {
  clear_has_dimond_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = dimond_cost_;
  dimond_cost_ = NULL;
  return temp;
}

// optional uint32 value = 5;
inline bool PropItem::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PropItem::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PropItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PropItem::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 PropItem::value() const {
  return value_;
}
inline void PropItem::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional double factor = 6;
inline bool PropItem::has_factor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PropItem::set_has_factor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PropItem::clear_has_factor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PropItem::clear_factor() {
  factor_ = 0;
  clear_has_factor();
}
inline double PropItem::factor() const {
  return factor_;
}
inline void PropItem::set_factor(double value) {
  set_has_factor();
  factor_ = value;
}

// optional uint32 turn = 7;
inline bool PropItem::has_turn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PropItem::set_has_turn() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PropItem::clear_has_turn() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PropItem::clear_turn() {
  turn_ = 0u;
  clear_has_turn();
}
inline ::google::protobuf::uint32 PropItem::turn() const {
  return turn_;
}
inline void PropItem::set_turn(::google::protobuf::uint32 value) {
  set_has_turn();
  turn_ = value;
}

// optional uint32 heroid = 8;
inline bool PropItem::has_heroid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PropItem::set_has_heroid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PropItem::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PropItem::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 PropItem::heroid() const {
  return heroid_;
}
inline void PropItem::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional uint32 seq = 9;
inline bool PropItem::has_seq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PropItem::set_has_seq() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PropItem::clear_has_seq() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PropItem::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 PropItem::seq() const {
  return seq_;
}
inline void PropItem::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// Items

// repeated .ConfigItem.PropItem itemes = 1;
inline int Items::itemes_size() const {
  return itemes_.size();
}
inline void Items::clear_itemes() {
  itemes_.Clear();
}
inline const ::ConfigItem::PropItem& Items::itemes(int index) const {
  return itemes_.Get(index);
}
inline ::ConfigItem::PropItem* Items::mutable_itemes(int index) {
  return itemes_.Mutable(index);
}
inline ::ConfigItem::PropItem* Items::add_itemes() {
  return itemes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >&
Items::itemes() const {
  return itemes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >*
Items::mutable_itemes() {
  return &itemes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigItem

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigItem_2eproto__INCLUDED
