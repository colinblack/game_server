// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Combine.proto

#ifndef PROTOBUF_Combine_2eproto__INCLUDED
#define PROTOBUF_Combine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace Combine {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Combine_2eproto();
void protobuf_AssignDesc_Combine_2eproto();
void protobuf_ShutdownFile_Combine_2eproto();

class LimitsList;
class AttributesList;
class HeroCombine;
class HeroCombineInfo;

// ===================================================================

class LimitsList : public ::google::protobuf::Message {
 public:
  LimitsList();
  virtual ~LimitsList();
  
  LimitsList(const LimitsList& from);
  
  inline LimitsList& operator=(const LimitsList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitsList& default_instance();
  
  void Swap(LimitsList* other);
  
  // implements Message ----------------------------------------------
  
  LimitsList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitsList& from);
  void MergeFrom(const LimitsList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Combine.LimitsList)
 private:
  inline void set_has_star();
  inline void clear_has_star();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 star_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Combine_2eproto();
  friend void protobuf_AssignDesc_Combine_2eproto();
  friend void protobuf_ShutdownFile_Combine_2eproto();
  
  void InitAsDefaultInstance();
  static LimitsList* default_instance_;
};
// -------------------------------------------------------------------

class AttributesList : public ::google::protobuf::Message {
 public:
  AttributesList();
  virtual ~AttributesList();
  
  AttributesList(const AttributesList& from);
  
  inline AttributesList& operator=(const AttributesList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributesList& default_instance();
  
  void Swap(AttributesList* other);
  
  // implements Message ----------------------------------------------
  
  AttributesList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributesList& from);
  void MergeFrom(const AttributesList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 att = 2;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 2;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // optional uint32 def = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 3;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // optional uint32 first = 4;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 4;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // optional uint32 hit = 5;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 5;
  inline ::google::protobuf::uint32 hit() const;
  inline void set_hit(::google::protobuf::uint32 value);
  
  // optional uint32 dodge = 6;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 6;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // optional uint32 critStrike = 7;
  inline bool has_critstrike() const;
  inline void clear_critstrike();
  static const int kCritStrikeFieldNumber = 7;
  inline ::google::protobuf::uint32 critstrike() const;
  inline void set_critstrike(::google::protobuf::uint32 value);
  
  // optional uint32 critRate = 8;
  inline bool has_critrate() const;
  inline void clear_critrate();
  static const int kCritRateFieldNumber = 8;
  inline ::google::protobuf::uint32 critrate() const;
  inline void set_critrate(::google::protobuf::uint32 value);
  
  // optional uint32 critResist = 9;
  inline bool has_critresist() const;
  inline void clear_critresist();
  static const int kCritResistFieldNumber = 9;
  inline ::google::protobuf::uint32 critresist() const;
  inline void set_critresist(::google::protobuf::uint32 value);
  
  // optional double hp_add = 10;
  inline bool has_hp_add() const;
  inline void clear_hp_add();
  static const int kHpAddFieldNumber = 10;
  inline double hp_add() const;
  inline void set_hp_add(double value);
  
  // optional double att_add = 11;
  inline bool has_att_add() const;
  inline void clear_att_add();
  static const int kAttAddFieldNumber = 11;
  inline double att_add() const;
  inline void set_att_add(double value);
  
  // optional double def_add = 12;
  inline bool has_def_add() const;
  inline void clear_def_add();
  static const int kDefAddFieldNumber = 12;
  inline double def_add() const;
  inline void set_def_add(double value);
  
  // optional .Combine.LimitsList limit = 13;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 13;
  inline const ::Combine::LimitsList& limit() const;
  inline ::Combine::LimitsList* mutable_limit();
  inline ::Combine::LimitsList* release_limit();
  
  // @@protoc_insertion_point(class_scope:Combine.AttributesList)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_critstrike();
  inline void clear_has_critstrike();
  inline void set_has_critrate();
  inline void clear_has_critrate();
  inline void set_has_critresist();
  inline void clear_has_critresist();
  inline void set_has_hp_add();
  inline void clear_has_hp_add();
  inline void set_has_att_add();
  inline void clear_has_att_add();
  inline void set_has_def_add();
  inline void clear_has_def_add();
  inline void set_has_limit();
  inline void clear_has_limit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 first_;
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 critstrike_;
  ::google::protobuf::uint32 critrate_;
  double hp_add_;
  double att_add_;
  double def_add_;
  ::Combine::LimitsList* limit_;
  ::google::protobuf::uint32 critresist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_Combine_2eproto();
  friend void protobuf_AssignDesc_Combine_2eproto();
  friend void protobuf_ShutdownFile_Combine_2eproto();
  
  void InitAsDefaultInstance();
  static AttributesList* default_instance_;
};
// -------------------------------------------------------------------

class HeroCombine : public ::google::protobuf::Message {
 public:
  HeroCombine();
  virtual ~HeroCombine();
  
  HeroCombine(const HeroCombine& from);
  
  inline HeroCombine& operator=(const HeroCombine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroCombine& default_instance();
  
  void Swap(HeroCombine* other);
  
  // implements Message ----------------------------------------------
  
  HeroCombine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroCombine& from);
  void MergeFrom(const HeroCombine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 heroid = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // repeated .Combine.AttributesList list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::Combine::AttributesList& list(int index) const;
  inline ::Combine::AttributesList* mutable_list(int index);
  inline ::Combine::AttributesList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Combine::AttributesList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Combine::AttributesList >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:Combine.HeroCombine)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::RepeatedPtrField< ::Combine::AttributesList > list_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Combine_2eproto();
  friend void protobuf_AssignDesc_Combine_2eproto();
  friend void protobuf_ShutdownFile_Combine_2eproto();
  
  void InitAsDefaultInstance();
  static HeroCombine* default_instance_;
};
// -------------------------------------------------------------------

class HeroCombineInfo : public ::google::protobuf::Message {
 public:
  HeroCombineInfo();
  virtual ~HeroCombineInfo();
  
  HeroCombineInfo(const HeroCombineInfo& from);
  
  inline HeroCombineInfo& operator=(const HeroCombineInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroCombineInfo& default_instance();
  
  void Swap(HeroCombineInfo* other);
  
  // implements Message ----------------------------------------------
  
  HeroCombineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroCombineInfo& from);
  void MergeFrom(const HeroCombineInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Combine.HeroCombine combineInfo = 1;
  inline int combineinfo_size() const;
  inline void clear_combineinfo();
  static const int kCombineInfoFieldNumber = 1;
  inline const ::Combine::HeroCombine& combineinfo(int index) const;
  inline ::Combine::HeroCombine* mutable_combineinfo(int index);
  inline ::Combine::HeroCombine* add_combineinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Combine::HeroCombine >&
      combineinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Combine::HeroCombine >*
      mutable_combineinfo();
  
  // @@protoc_insertion_point(class_scope:Combine.HeroCombineInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Combine::HeroCombine > combineinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Combine_2eproto();
  friend void protobuf_AssignDesc_Combine_2eproto();
  friend void protobuf_ShutdownFile_Combine_2eproto();
  
  void InitAsDefaultInstance();
  static HeroCombineInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// LimitsList

// optional uint32 star = 1;
inline bool LimitsList::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitsList::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitsList::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitsList::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 LimitsList::star() const {
  return star_;
}
inline void LimitsList::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// AttributesList

// optional uint32 hp = 1;
inline bool AttributesList::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttributesList::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttributesList::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttributesList::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 AttributesList::hp() const {
  return hp_;
}
inline void AttributesList::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 att = 2;
inline bool AttributesList::has_att() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttributesList::set_has_att() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttributesList::clear_has_att() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttributesList::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 AttributesList::att() const {
  return att_;
}
inline void AttributesList::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// optional uint32 def = 3;
inline bool AttributesList::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttributesList::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttributesList::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttributesList::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 AttributesList::def() const {
  return def_;
}
inline void AttributesList::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// optional uint32 first = 4;
inline bool AttributesList::has_first() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttributesList::set_has_first() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttributesList::clear_has_first() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttributesList::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 AttributesList::first() const {
  return first_;
}
inline void AttributesList::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional uint32 hit = 5;
inline bool AttributesList::has_hit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttributesList::set_has_hit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttributesList::clear_has_hit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttributesList::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 AttributesList::hit() const {
  return hit_;
}
inline void AttributesList::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
}

// optional uint32 dodge = 6;
inline bool AttributesList::has_dodge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AttributesList::set_has_dodge() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AttributesList::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AttributesList::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 AttributesList::dodge() const {
  return dodge_;
}
inline void AttributesList::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// optional uint32 critStrike = 7;
inline bool AttributesList::has_critstrike() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AttributesList::set_has_critstrike() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AttributesList::clear_has_critstrike() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AttributesList::clear_critstrike() {
  critstrike_ = 0u;
  clear_has_critstrike();
}
inline ::google::protobuf::uint32 AttributesList::critstrike() const {
  return critstrike_;
}
inline void AttributesList::set_critstrike(::google::protobuf::uint32 value) {
  set_has_critstrike();
  critstrike_ = value;
}

// optional uint32 critRate = 8;
inline bool AttributesList::has_critrate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AttributesList::set_has_critrate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AttributesList::clear_has_critrate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AttributesList::clear_critrate() {
  critrate_ = 0u;
  clear_has_critrate();
}
inline ::google::protobuf::uint32 AttributesList::critrate() const {
  return critrate_;
}
inline void AttributesList::set_critrate(::google::protobuf::uint32 value) {
  set_has_critrate();
  critrate_ = value;
}

// optional uint32 critResist = 9;
inline bool AttributesList::has_critresist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AttributesList::set_has_critresist() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AttributesList::clear_has_critresist() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AttributesList::clear_critresist() {
  critresist_ = 0u;
  clear_has_critresist();
}
inline ::google::protobuf::uint32 AttributesList::critresist() const {
  return critresist_;
}
inline void AttributesList::set_critresist(::google::protobuf::uint32 value) {
  set_has_critresist();
  critresist_ = value;
}

// optional double hp_add = 10;
inline bool AttributesList::has_hp_add() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AttributesList::set_has_hp_add() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AttributesList::clear_has_hp_add() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AttributesList::clear_hp_add() {
  hp_add_ = 0;
  clear_has_hp_add();
}
inline double AttributesList::hp_add() const {
  return hp_add_;
}
inline void AttributesList::set_hp_add(double value) {
  set_has_hp_add();
  hp_add_ = value;
}

// optional double att_add = 11;
inline bool AttributesList::has_att_add() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AttributesList::set_has_att_add() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AttributesList::clear_has_att_add() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AttributesList::clear_att_add() {
  att_add_ = 0;
  clear_has_att_add();
}
inline double AttributesList::att_add() const {
  return att_add_;
}
inline void AttributesList::set_att_add(double value) {
  set_has_att_add();
  att_add_ = value;
}

// optional double def_add = 12;
inline bool AttributesList::has_def_add() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AttributesList::set_has_def_add() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AttributesList::clear_has_def_add() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AttributesList::clear_def_add() {
  def_add_ = 0;
  clear_has_def_add();
}
inline double AttributesList::def_add() const {
  return def_add_;
}
inline void AttributesList::set_def_add(double value) {
  set_has_def_add();
  def_add_ = value;
}

// optional .Combine.LimitsList limit = 13;
inline bool AttributesList::has_limit() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AttributesList::set_has_limit() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AttributesList::clear_has_limit() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AttributesList::clear_limit() {
  if (limit_ != NULL) limit_->::Combine::LimitsList::Clear();
  clear_has_limit();
}
inline const ::Combine::LimitsList& AttributesList::limit() const {
  return limit_ != NULL ? *limit_ : *default_instance_->limit_;
}
inline ::Combine::LimitsList* AttributesList::mutable_limit() {
  set_has_limit();
  if (limit_ == NULL) limit_ = new ::Combine::LimitsList;
  return limit_;
}
inline ::Combine::LimitsList* AttributesList::release_limit() {
  clear_has_limit();
  ::Combine::LimitsList* temp = limit_;
  limit_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// HeroCombine

// required uint32 id = 1;
inline bool HeroCombine::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroCombine::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroCombine::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroCombine::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroCombine::id() const {
  return id_;
}
inline void HeroCombine::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 heroid = 2;
inline int HeroCombine::heroid_size() const {
  return heroid_.size();
}
inline void HeroCombine::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 HeroCombine::heroid(int index) const {
  return heroid_.Get(index);
}
inline void HeroCombine::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void HeroCombine::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroCombine::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroCombine::mutable_heroid() {
  return &heroid_;
}

// repeated .Combine.AttributesList list = 3;
inline int HeroCombine::list_size() const {
  return list_.size();
}
inline void HeroCombine::clear_list() {
  list_.Clear();
}
inline const ::Combine::AttributesList& HeroCombine::list(int index) const {
  return list_.Get(index);
}
inline ::Combine::AttributesList* HeroCombine::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::Combine::AttributesList* HeroCombine::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Combine::AttributesList >&
HeroCombine::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Combine::AttributesList >*
HeroCombine::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// HeroCombineInfo

// repeated .Combine.HeroCombine combineInfo = 1;
inline int HeroCombineInfo::combineinfo_size() const {
  return combineinfo_.size();
}
inline void HeroCombineInfo::clear_combineinfo() {
  combineinfo_.Clear();
}
inline const ::Combine::HeroCombine& HeroCombineInfo::combineinfo(int index) const {
  return combineinfo_.Get(index);
}
inline ::Combine::HeroCombine* HeroCombineInfo::mutable_combineinfo(int index) {
  return combineinfo_.Mutable(index);
}
inline ::Combine::HeroCombine* HeroCombineInfo::add_combineinfo() {
  return combineinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Combine::HeroCombine >&
HeroCombineInfo::combineinfo() const {
  return combineinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Combine::HeroCombine >*
HeroCombineInfo::mutable_combineinfo() {
  return &combineinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Combine

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Combine_2eproto__INCLUDED
