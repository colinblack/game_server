// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBattle.proto

#ifndef PROTOBUF_ProtoBattle_2eproto__INCLUDED
#define PROTOBUF_ProtoBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProtoBattleDemo.pb.h"
#include "DataCommon.pb.h"
#include "ProtoHero.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBattle {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBattle_2eproto();
void protobuf_AssignDesc_ProtoBattle_2eproto();
void protobuf_ShutdownFile_ProtoBattle_2eproto();

class BattleCommon;
class ProtoPveBattleReq;
class ProtoPveBattleResp;
class ProtoGradeBattleReq;
class ProtoGradeBattleResp;
class ProtoMatchReq;
class ProtoMatchResp;
class UpgradeRewardReq;
class UpgradeRewardResp;
class DailyRewardReq;
class DailRewardResp;
class WinStreakRewardReq;
class WinStreakRewardResp;
class UpgradeShareRewardReq;
class UpgradeShareRewardResp;
class SetFormationReq;
class SetFormationResp;
class ProtoRandomUserReq;
class ProtoRandomUserResp;
class ProtoRevengeReq;
class ProtoRevengeResp;
class ProtoRefreshReq;
class ProtoRefreshResp;
class ProtoPost;
class ProtoFriendBattleReq;
class ProtoFriendBattleResp;
class ProtoMartialClubBattleReq;
class ProtoMartialClubBattleResp;
class ProtoCSMartialClubBattleReq;
class ProtoCSBattleResultReq;
class ProtoCSMartialClubBattleResp;

// ===================================================================

class BattleCommon : public ::google::protobuf::Message {
 public:
  BattleCommon();
  virtual ~BattleCommon();
  
  BattleCommon(const BattleCommon& from);
  
  inline BattleCommon& operator=(const BattleCommon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleCommon& default_instance();
  
  void Swap(BattleCommon* other);
  
  // implements Message ----------------------------------------------
  
  BattleCommon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleCommon& from);
  void MergeFrom(const BattleCommon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 stageId = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);
  
  // repeated uint32 propId = 2;
  inline int propid_size() const;
  inline void clear_propid();
  static const int kPropIdFieldNumber = 2;
  inline ::google::protobuf::uint32 propid(int index) const;
  inline void set_propid(int index, ::google::protobuf::uint32 value);
  inline void add_propid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      propid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_propid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.BattleCommon)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propid_;
  ::google::protobuf::uint32 stageid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static BattleCommon* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPveBattleReq : public ::google::protobuf::Message {
 public:
  ProtoPveBattleReq();
  virtual ~ProtoPveBattleReq();
  
  ProtoPveBattleReq(const ProtoPveBattleReq& from);
  
  inline ProtoPveBattleReq& operator=(const ProtoPveBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPveBattleReq& default_instance();
  
  void Swap(ProtoPveBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPveBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPveBattleReq& from);
  void MergeFrom(const ProtoPveBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattle.BattleCommon common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPveBattleReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommon* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPveBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPveBattleResp : public ::google::protobuf::Message {
 public:
  ProtoPveBattleResp();
  virtual ~ProtoPveBattleResp();
  
  ProtoPveBattleResp(const ProtoPveBattleResp& from);
  
  inline ProtoPveBattleResp& operator=(const ProtoPveBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPveBattleResp& default_instance();
  
  void Swap(ProtoPveBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPveBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPveBattleResp& from);
  void MergeFrom(const ProtoPveBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 3;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPveBattleResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPveBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGradeBattleReq : public ::google::protobuf::Message {
 public:
  ProtoGradeBattleReq();
  virtual ~ProtoGradeBattleReq();
  
  ProtoGradeBattleReq(const ProtoGradeBattleReq& from);
  
  inline ProtoGradeBattleReq& operator=(const ProtoGradeBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGradeBattleReq& default_instance();
  
  void Swap(ProtoGradeBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoGradeBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGradeBattleReq& from);
  void MergeFrom(const ProtoGradeBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattle.BattleCommon common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoGradeBattleReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommon* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoGradeBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGradeBattleResp : public ::google::protobuf::Message {
 public:
  ProtoGradeBattleResp();
  virtual ~ProtoGradeBattleResp();
  
  ProtoGradeBattleResp(const ProtoGradeBattleResp& from);
  
  inline ProtoGradeBattleResp& operator=(const ProtoGradeBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGradeBattleResp& default_instance();
  
  void Swap(ProtoGradeBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoGradeBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGradeBattleResp& from);
  void MergeFrom(const ProtoGradeBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // required uint32 dailyScore = 3;
  inline bool has_dailyscore() const;
  inline void clear_dailyscore();
  static const int kDailyScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 dailyscore() const;
  inline void set_dailyscore(::google::protobuf::uint32 value);
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 5;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 5;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoGradeBattleResp)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_dailyscore();
  inline void clear_has_dailyscore();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 score_;
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 dailyscore_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoGradeBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMatchReq : public ::google::protobuf::Message {
 public:
  ProtoMatchReq();
  virtual ~ProtoMatchReq();
  
  ProtoMatchReq(const ProtoMatchReq& from);
  
  inline ProtoMatchReq& operator=(const ProtoMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMatchReq& default_instance();
  
  void Swap(ProtoMatchReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMatchReq& from);
  void MergeFrom(const ProtoMatchReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMatchReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMatchResp : public ::google::protobuf::Message {
 public:
  ProtoMatchResp();
  virtual ~ProtoMatchResp();
  
  ProtoMatchResp(const ProtoMatchResp& from);
  
  inline ProtoMatchResp& operator=(const ProtoMatchResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMatchResp& default_instance();
  
  void Swap(ProtoMatchResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMatchResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMatchResp& from);
  void MergeFrom(const ProtoMatchResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string fig = 1;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 1;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // repeated uint32 heroid = 4;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 4;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMatchResp)
 private:
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMatchResp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeRewardReq : public ::google::protobuf::Message {
 public:
  UpgradeRewardReq();
  virtual ~UpgradeRewardReq();
  
  UpgradeRewardReq(const UpgradeRewardReq& from);
  
  inline UpgradeRewardReq& operator=(const UpgradeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeRewardReq& default_instance();
  
  void Swap(UpgradeRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeRewardReq& from);
  void MergeFrom(const UpgradeRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeRewardReq)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeRewardResp : public ::google::protobuf::Message {
 public:
  UpgradeRewardResp();
  virtual ~UpgradeRewardResp();
  
  UpgradeRewardResp(const UpgradeRewardResp& from);
  
  inline UpgradeRewardResp& operator=(const UpgradeRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeRewardResp& default_instance();
  
  void Swap(UpgradeRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeRewardResp& from);
  void MergeFrom(const UpgradeRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class DailyRewardReq : public ::google::protobuf::Message {
 public:
  DailyRewardReq();
  virtual ~DailyRewardReq();
  
  DailyRewardReq(const DailyRewardReq& from);
  
  inline DailyRewardReq& operator=(const DailyRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyRewardReq& default_instance();
  
  void Swap(DailyRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  DailyRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyRewardReq& from);
  void MergeFrom(const DailyRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.DailyRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static DailyRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class DailRewardResp : public ::google::protobuf::Message {
 public:
  DailRewardResp();
  virtual ~DailRewardResp();
  
  DailRewardResp(const DailRewardResp& from);
  
  inline DailRewardResp& operator=(const DailRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailRewardResp& default_instance();
  
  void Swap(DailRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  DailRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailRewardResp& from);
  void MergeFrom(const DailRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP rewards = 2;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.DailRewardResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  ::google::protobuf::uint32 ts_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static DailRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class WinStreakRewardReq : public ::google::protobuf::Message {
 public:
  WinStreakRewardReq();
  virtual ~WinStreakRewardReq();
  
  WinStreakRewardReq(const WinStreakRewardReq& from);
  
  inline WinStreakRewardReq& operator=(const WinStreakRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WinStreakRewardReq& default_instance();
  
  void Swap(WinStreakRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  WinStreakRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinStreakRewardReq& from);
  void MergeFrom(const WinStreakRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.WinStreakRewardReq)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static WinStreakRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class WinStreakRewardResp : public ::google::protobuf::Message {
 public:
  WinStreakRewardResp();
  virtual ~WinStreakRewardResp();
  
  WinStreakRewardResp(const WinStreakRewardResp& from);
  
  inline WinStreakRewardResp& operator=(const WinStreakRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WinStreakRewardResp& default_instance();
  
  void Swap(WinStreakRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  WinStreakRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinStreakRewardResp& from);
  void MergeFrom(const WinStreakRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.WinStreakRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static WinStreakRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeShareRewardReq : public ::google::protobuf::Message {
 public:
  UpgradeShareRewardReq();
  virtual ~UpgradeShareRewardReq();
  
  UpgradeShareRewardReq(const UpgradeShareRewardReq& from);
  
  inline UpgradeShareRewardReq& operator=(const UpgradeShareRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeShareRewardReq& default_instance();
  
  void Swap(UpgradeShareRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeShareRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeShareRewardReq& from);
  void MergeFrom(const UpgradeShareRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeShareRewardReq)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeShareRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeShareRewardResp : public ::google::protobuf::Message {
 public:
  UpgradeShareRewardResp();
  virtual ~UpgradeShareRewardResp();
  
  UpgradeShareRewardResp(const UpgradeShareRewardResp& from);
  
  inline UpgradeShareRewardResp& operator=(const UpgradeShareRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeShareRewardResp& default_instance();
  
  void Swap(UpgradeShareRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeShareRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeShareRewardResp& from);
  void MergeFrom(const UpgradeShareRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& rewards() const;
  inline ::DataCommon::CommonItemsCPP* mutable_rewards();
  inline ::DataCommon::CommonItemsCPP* release_rewards();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.UpgradeShareRewardResp)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeShareRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class SetFormationReq : public ::google::protobuf::Message {
 public:
  SetFormationReq();
  virtual ~SetFormationReq();
  
  SetFormationReq(const SetFormationReq& from);
  
  inline SetFormationReq& operator=(const SetFormationReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormationReq& default_instance();
  
  void Swap(SetFormationReq* other);
  
  // implements Message ----------------------------------------------
  
  SetFormationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormationReq& from);
  void MergeFrom(const SetFormationReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 heroid = 1;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.SetFormationReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static SetFormationReq* default_instance_;
};
// -------------------------------------------------------------------

class SetFormationResp : public ::google::protobuf::Message {
 public:
  SetFormationResp();
  virtual ~SetFormationResp();
  
  SetFormationResp(const SetFormationResp& from);
  
  inline SetFormationResp& operator=(const SetFormationResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormationResp& default_instance();
  
  void Swap(SetFormationResp* other);
  
  // implements Message ----------------------------------------------
  
  SetFormationResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormationResp& from);
  void MergeFrom(const SetFormationResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.SetFormationResp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static SetFormationResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRandomUserReq : public ::google::protobuf::Message {
 public:
  ProtoRandomUserReq();
  virtual ~ProtoRandomUserReq();
  
  ProtoRandomUserReq(const ProtoRandomUserReq& from);
  
  inline ProtoRandomUserReq& operator=(const ProtoRandomUserReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRandomUserReq& default_instance();
  
  void Swap(ProtoRandomUserReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRandomUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRandomUserReq& from);
  void MergeFrom(const ProtoRandomUserReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattle.BattleCommon common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRandomUserReq)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommon* common_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRandomUserReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRandomUserResp : public ::google::protobuf::Message {
 public:
  ProtoRandomUserResp();
  virtual ~ProtoRandomUserResp();
  
  ProtoRandomUserResp(const ProtoRandomUserResp& from);
  
  inline ProtoRandomUserResp& operator=(const ProtoRandomUserResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRandomUserResp& default_instance();
  
  void Swap(ProtoRandomUserResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRandomUserResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRandomUserResp& from);
  void MergeFrom(const ProtoRandomUserResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRandomUserResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRandomUserResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRevengeReq : public ::google::protobuf::Message {
 public:
  ProtoRevengeReq();
  virtual ~ProtoRevengeReq();
  
  ProtoRevengeReq(const ProtoRevengeReq& from);
  
  inline ProtoRevengeReq& operator=(const ProtoRevengeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRevengeReq& default_instance();
  
  void Swap(ProtoRevengeReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRevengeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRevengeReq& from);
  void MergeFrom(const ProtoRevengeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 enemyId = 1;
  inline bool has_enemyid() const;
  inline void clear_enemyid();
  static const int kEnemyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 enemyid() const;
  inline void set_enemyid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCommon common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRevengeReq)
 private:
  inline void set_has_enemyid();
  inline void clear_has_enemyid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommon* common_;
  ::google::protobuf::uint32 enemyid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRevengeReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRevengeResp : public ::google::protobuf::Message {
 public:
  ProtoRevengeResp();
  virtual ~ProtoRevengeResp();
  
  ProtoRevengeResp(const ProtoRevengeResp& from);
  
  inline ProtoRevengeResp& operator=(const ProtoRevengeResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRevengeResp& default_instance();
  
  void Swap(ProtoRevengeResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRevengeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRevengeResp& from);
  void MergeFrom(const ProtoRevengeResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRevengeResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRevengeResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRefreshReq : public ::google::protobuf::Message {
 public:
  ProtoRefreshReq();
  virtual ~ProtoRefreshReq();
  
  ProtoRefreshReq(const ProtoRefreshReq& from);
  
  inline ProtoRefreshReq& operator=(const ProtoRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRefreshReq& default_instance();
  
  void Swap(ProtoRefreshReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRefreshReq& from);
  void MergeFrom(const ProtoRefreshReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRefreshReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRefreshResp : public ::google::protobuf::Message {
 public:
  ProtoRefreshResp();
  virtual ~ProtoRefreshResp();
  
  ProtoRefreshResp(const ProtoRefreshResp& from);
  
  inline ProtoRefreshResp& operator=(const ProtoRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRefreshResp& default_instance();
  
  void Swap(ProtoRefreshResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRefreshResp& from);
  void MergeFrom(const ProtoRefreshResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string fig = 1;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 1;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 3;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoRefreshResp)
 private:
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPost : public ::google::protobuf::Message {
 public:
  ProtoPost();
  virtual ~ProtoPost();
  
  ProtoPost(const ProtoPost& from);
  
  inline ProtoPost& operator=(const ProtoPost& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPost& default_instance();
  
  void Swap(ProtoPost* other);
  
  // implements Message ----------------------------------------------
  
  ProtoPost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPost& from);
  void MergeFrom(const ProtoPost& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoPost)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoPost* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendBattleReq : public ::google::protobuf::Message {
 public:
  ProtoFriendBattleReq();
  virtual ~ProtoFriendBattleReq();
  
  ProtoFriendBattleReq(const ProtoFriendBattleReq& from);
  
  inline ProtoFriendBattleReq& operator=(const ProtoFriendBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendBattleReq& default_instance();
  
  void Swap(ProtoFriendBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoFriendBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendBattleReq& from);
  void MergeFrom(const ProtoFriendBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 otherId = 1;
  inline bool has_otherid() const;
  inline void clear_otherid();
  static const int kOtherIdFieldNumber = 1;
  inline ::google::protobuf::uint32 otherid() const;
  inline void set_otherid(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCommon common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoFriendBattleReq)
 private:
  inline void set_has_otherid();
  inline void clear_has_otherid();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattle::BattleCommon* common_;
  ::google::protobuf::uint32 otherid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoFriendBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendBattleResp : public ::google::protobuf::Message {
 public:
  ProtoFriendBattleResp();
  virtual ~ProtoFriendBattleResp();
  
  ProtoFriendBattleResp(const ProtoFriendBattleResp& from);
  
  inline ProtoFriendBattleResp& operator=(const ProtoFriendBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendBattleResp& default_instance();
  
  void Swap(ProtoFriendBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoFriendBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendBattleResp& from);
  void MergeFrom(const ProtoFriendBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoFriendBattleResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoFriendBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMartialClubBattleReq : public ::google::protobuf::Message {
 public:
  ProtoMartialClubBattleReq();
  virtual ~ProtoMartialClubBattleReq();
  
  ProtoMartialClubBattleReq(const ProtoMartialClubBattleReq& from);
  
  inline ProtoMartialClubBattleReq& operator=(const ProtoMartialClubBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMartialClubBattleReq& default_instance();
  
  void Swap(ProtoMartialClubBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMartialClubBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMartialClubBattleReq& from);
  void MergeFrom(const ProtoMartialClubBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myMartialGrade = 1;
  inline bool has_mymartialgrade() const;
  inline void clear_mymartialgrade();
  static const int kMyMartialGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 mymartialgrade() const;
  inline void set_mymartialgrade(::google::protobuf::uint32 value);
  
  // required uint32 othUid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othMartialGrade = 3;
  inline bool has_othmartialgrade() const;
  inline void clear_othmartialgrade();
  static const int kOthMartialGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 othmartialgrade() const;
  inline void set_othmartialgrade(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCommon common = 4;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 4;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMartialClubBattleReq)
 private:
  inline void set_has_mymartialgrade();
  inline void clear_has_mymartialgrade();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmartialgrade();
  inline void clear_has_othmartialgrade();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mymartialgrade_;
  ::google::protobuf::uint32 othuid_;
  ::ProtoBattle::BattleCommon* common_;
  ::google::protobuf::uint32 othmartialgrade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMartialClubBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMartialClubBattleResp : public ::google::protobuf::Message {
 public:
  ProtoMartialClubBattleResp();
  virtual ~ProtoMartialClubBattleResp();
  
  ProtoMartialClubBattleResp(const ProtoMartialClubBattleResp& from);
  
  inline ProtoMartialClubBattleResp& operator=(const ProtoMartialClubBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMartialClubBattleResp& default_instance();
  
  void Swap(ProtoMartialClubBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoMartialClubBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMartialClubBattleResp& from);
  void MergeFrom(const ProtoMartialClubBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoMartialClubBattleResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoMartialClubBattleResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSMartialClubBattleReq : public ::google::protobuf::Message {
 public:
  ProtoCSMartialClubBattleReq();
  virtual ~ProtoCSMartialClubBattleReq();
  
  ProtoCSMartialClubBattleReq(const ProtoCSMartialClubBattleReq& from);
  
  inline ProtoCSMartialClubBattleReq& operator=(const ProtoCSMartialClubBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSMartialClubBattleReq& default_instance();
  
  void Swap(ProtoCSMartialClubBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSMartialClubBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSMartialClubBattleReq& from);
  void MergeFrom(const ProtoCSMartialClubBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myUid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required string myName = 3;
  inline bool has_myname() const;
  inline void clear_myname();
  static const int kMyNameFieldNumber = 3;
  inline const ::std::string& myname() const;
  inline void set_myname(const ::std::string& value);
  inline void set_myname(const char* value);
  inline void set_myname(const char* value, size_t size);
  inline ::std::string* mutable_myname();
  inline ::std::string* release_myname();
  
  // required string myFig = 4;
  inline bool has_myfig() const;
  inline void clear_myfig();
  static const int kMyFigFieldNumber = 4;
  inline const ::std::string& myfig() const;
  inline void set_myfig(const ::std::string& value);
  inline void set_myfig(const char* value);
  inline void set_myfig(const char* value, size_t size);
  inline ::std::string* mutable_myfig();
  inline ::std::string* release_myfig();
  
  // required uint32 myMartialGrade = 5;
  inline bool has_mymartialgrade() const;
  inline void clear_mymartialgrade();
  static const int kMyMartialGradeFieldNumber = 5;
  inline ::google::protobuf::uint32 mymartialgrade() const;
  inline void set_mymartialgrade(::google::protobuf::uint32 value);
  
  // required uint32 othUid = 6;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthUidFieldNumber = 6;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);
  
  // required uint32 othMartialGrade = 7;
  inline bool has_othmartialgrade() const;
  inline void clear_othmartialgrade();
  static const int kOthMartialGradeFieldNumber = 7;
  inline ::google::protobuf::uint32 othmartialgrade() const;
  inline void set_othmartialgrade(::google::protobuf::uint32 value);
  
  // required .ProtoBattle.BattleCommon common = 8;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 8;
  inline const ::ProtoBattle::BattleCommon& common() const;
  inline ::ProtoBattle::BattleCommon* mutable_common();
  inline ::ProtoBattle::BattleCommon* release_common();
  
  // repeated .ProtoHero.HeroBaseInfoCPP hero = 9;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 9;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSMartialClubBattleReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_myname();
  inline void clear_has_myname();
  inline void set_has_myfig();
  inline void clear_has_myfig();
  inline void set_has_mymartialgrade();
  inline void clear_has_mymartialgrade();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_othmartialgrade();
  inline void clear_has_othmartialgrade();
  inline void set_has_common();
  inline void clear_has_common();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 level_;
  ::std::string* myname_;
  ::std::string* myfig_;
  ::google::protobuf::uint32 mymartialgrade_;
  ::google::protobuf::uint32 othuid_;
  ::ProtoBattle::BattleCommon* common_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > hero_;
  ::google::protobuf::uint32 othmartialgrade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSMartialClubBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSBattleResultReq : public ::google::protobuf::Message {
 public:
  ProtoCSBattleResultReq();
  virtual ~ProtoCSBattleResultReq();
  
  ProtoCSBattleResultReq(const ProtoCSBattleResultReq& from);
  
  inline ProtoCSBattleResultReq& operator=(const ProtoCSBattleResultReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSBattleResultReq& default_instance();
  
  void Swap(ProtoCSBattleResultReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSBattleResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSBattleResultReq& from);
  void MergeFrom(const ProtoCSBattleResultReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 myUid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);
  
  // required uint32 myMartialGrade = 2;
  inline bool has_mymartialgrade() const;
  inline void clear_mymartialgrade();
  static const int kMyMartialGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 mymartialgrade() const;
  inline void set_mymartialgrade(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSBattleResultReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_mymartialgrade();
  inline void clear_has_mymartialgrade();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 mymartialgrade_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSBattleResultReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCSMartialClubBattleResp : public ::google::protobuf::Message {
 public:
  ProtoCSMartialClubBattleResp();
  virtual ~ProtoCSMartialClubBattleResp();
  
  ProtoCSMartialClubBattleResp(const ProtoCSMartialClubBattleResp& from);
  
  inline ProtoCSMartialClubBattleResp& operator=(const ProtoCSMartialClubBattleResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCSMartialClubBattleResp& default_instance();
  
  void Swap(ProtoCSMartialClubBattleResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCSMartialClubBattleResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCSMartialClubBattleResp& from);
  void MergeFrom(const ProtoCSMartialClubBattleResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoBattleDemo.ProtoBattleDemo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::ProtoBattleDemo::ProtoBattleDemo& info() const;
  inline ::ProtoBattleDemo::ProtoBattleDemo* mutable_info();
  inline ::ProtoBattleDemo::ProtoBattleDemo* release_info();
  
  // @@protoc_insertion_point(class_scope:ProtoBattle.ProtoCSMartialClubBattleResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoBattleDemo::ProtoBattleDemo* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoBattle_2eproto();
  friend void protobuf_AssignDesc_ProtoBattle_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattle_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCSMartialClubBattleResp* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleCommon

// optional uint32 stageId = 1;
inline bool BattleCommon::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleCommon::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleCommon::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleCommon::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 BattleCommon::stageid() const {
  return stageid_;
}
inline void BattleCommon::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
}

// repeated uint32 propId = 2;
inline int BattleCommon::propid_size() const {
  return propid_.size();
}
inline void BattleCommon::clear_propid() {
  propid_.Clear();
}
inline ::google::protobuf::uint32 BattleCommon::propid(int index) const {
  return propid_.Get(index);
}
inline void BattleCommon::set_propid(int index, ::google::protobuf::uint32 value) {
  propid_.Set(index, value);
}
inline void BattleCommon::add_propid(::google::protobuf::uint32 value) {
  propid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleCommon::propid() const {
  return propid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleCommon::mutable_propid() {
  return &propid_;
}

// -------------------------------------------------------------------

// ProtoPveBattleReq

// required .ProtoBattle.BattleCommon common = 1;
inline bool ProtoPveBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPveBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPveBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPveBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoPveBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoPveBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoPveBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoPveBattleResp

// required .ProtoBattleDemo.ProtoBattleDemo info = 1;
inline bool ProtoPveBattleResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPveBattleResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPveBattleResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPveBattleResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoPveBattleResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoPveBattleResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoPveBattleResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoPveBattleResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPveBattleResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPveBattleResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPveBattleResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoPveBattleResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoPveBattleResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoPveBattleResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
inline int ProtoPveBattleResp::hero_size() const {
  return hero_.size();
}
inline void ProtoPveBattleResp::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoPveBattleResp::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoPveBattleResp::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoPveBattleResp::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
ProtoPveBattleResp::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
ProtoPveBattleResp::mutable_hero() {
  return &hero_;
}

// -------------------------------------------------------------------

// ProtoGradeBattleReq

// required .ProtoBattle.BattleCommon common = 1;
inline bool ProtoGradeBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGradeBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGradeBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGradeBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoGradeBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoGradeBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoGradeBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoGradeBattleResp

// required uint32 grade = 1;
inline bool ProtoGradeBattleResp::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGradeBattleResp::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGradeBattleResp::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGradeBattleResp::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResp::grade() const {
  return grade_;
}
inline void ProtoGradeBattleResp::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// required uint32 score = 2;
inline bool ProtoGradeBattleResp::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoGradeBattleResp::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoGradeBattleResp::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoGradeBattleResp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResp::score() const {
  return score_;
}
inline void ProtoGradeBattleResp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 dailyScore = 3;
inline bool ProtoGradeBattleResp::has_dailyscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoGradeBattleResp::set_has_dailyscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoGradeBattleResp::clear_has_dailyscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoGradeBattleResp::clear_dailyscore() {
  dailyscore_ = 0u;
  clear_has_dailyscore();
}
inline ::google::protobuf::uint32 ProtoGradeBattleResp::dailyscore() const {
  return dailyscore_;
}
inline void ProtoGradeBattleResp::set_dailyscore(::google::protobuf::uint32 value) {
  set_has_dailyscore();
  dailyscore_ = value;
}

// required .ProtoBattleDemo.ProtoBattleDemo info = 4;
inline bool ProtoGradeBattleResp::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoGradeBattleResp::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoGradeBattleResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoGradeBattleResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoGradeBattleResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoGradeBattleResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoGradeBattleResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 5;
inline bool ProtoGradeBattleResp::has_commons() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoGradeBattleResp::set_has_commons() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoGradeBattleResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoGradeBattleResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoGradeBattleResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoGradeBattleResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoGradeBattleResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMatchReq

// -------------------------------------------------------------------

// ProtoMatchResp

// optional string fig = 1;
inline bool ProtoMatchResp::has_fig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMatchResp::set_has_fig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMatchResp::clear_has_fig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMatchResp::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ProtoMatchResp::fig() const {
  return *fig_;
}
inline void ProtoMatchResp::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoMatchResp::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoMatchResp::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoMatchResp::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* ProtoMatchResp::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string name = 2;
inline bool ProtoMatchResp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMatchResp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMatchResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMatchResp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoMatchResp::name() const {
  return *name_;
}
inline void ProtoMatchResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoMatchResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoMatchResp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoMatchResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoMatchResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 grade = 3;
inline bool ProtoMatchResp::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoMatchResp::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoMatchResp::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoMatchResp::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 ProtoMatchResp::grade() const {
  return grade_;
}
inline void ProtoMatchResp::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// repeated uint32 heroid = 4;
inline int ProtoMatchResp::heroid_size() const {
  return heroid_.size();
}
inline void ProtoMatchResp::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 ProtoMatchResp::heroid(int index) const {
  return heroid_.Get(index);
}
inline void ProtoMatchResp::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void ProtoMatchResp::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoMatchResp::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoMatchResp::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// UpgradeRewardReq

// required uint32 grade = 1;
inline bool UpgradeRewardReq::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeRewardReq::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeRewardReq::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeRewardReq::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 UpgradeRewardReq::grade() const {
  return grade_;
}
inline void UpgradeRewardReq::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// -------------------------------------------------------------------

// UpgradeRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool UpgradeRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& UpgradeRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// DailyRewardReq

// -------------------------------------------------------------------

// DailRewardResp

// required uint32 ts = 1;
inline bool DailRewardResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailRewardResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailRewardResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailRewardResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 DailRewardResp::ts() const {
  return ts_;
}
inline void DailRewardResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required .DataCommon.CommonItemsCPP rewards = 2;
inline bool DailRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& DailRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* DailRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* DailRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// WinStreakRewardReq

// required uint32 count = 1;
inline bool WinStreakRewardReq::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinStreakRewardReq::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinStreakRewardReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinStreakRewardReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 WinStreakRewardReq::count() const {
  return count_;
}
inline void WinStreakRewardReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// WinStreakRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool WinStreakRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinStreakRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinStreakRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinStreakRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& WinStreakRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* WinStreakRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* WinStreakRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// UpgradeShareRewardReq

// required uint32 grade = 1;
inline bool UpgradeShareRewardReq::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeShareRewardReq::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeShareRewardReq::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeShareRewardReq::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 UpgradeShareRewardReq::grade() const {
  return grade_;
}
inline void UpgradeShareRewardReq::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// -------------------------------------------------------------------

// UpgradeShareRewardResp

// required .DataCommon.CommonItemsCPP rewards = 1;
inline bool UpgradeShareRewardResp::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeShareRewardResp::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeShareRewardResp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeShareRewardResp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_rewards();
}
inline const ::DataCommon::CommonItemsCPP& UpgradeShareRewardResp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeShareRewardResp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::DataCommon::CommonItemsCPP;
  return rewards_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeShareRewardResp::release_rewards() {
  clear_has_rewards();
  ::DataCommon::CommonItemsCPP* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SetFormationReq

// repeated uint32 heroid = 1;
inline int SetFormationReq::heroid_size() const {
  return heroid_.size();
}
inline void SetFormationReq::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 SetFormationReq::heroid(int index) const {
  return heroid_.Get(index);
}
inline void SetFormationReq::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void SetFormationReq::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SetFormationReq::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SetFormationReq::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// SetFormationResp

// -------------------------------------------------------------------

// ProtoRandomUserReq

// required .ProtoBattle.BattleCommon common = 1;
inline bool ProtoRandomUserReq::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRandomUserReq::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRandomUserReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRandomUserReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoRandomUserReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoRandomUserReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoRandomUserReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRandomUserResp

// required .ProtoBattleDemo.ProtoBattleDemo info = 1;
inline bool ProtoRandomUserResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRandomUserResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRandomUserResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRandomUserResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoRandomUserResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoRandomUserResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoRandomUserResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoRandomUserResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRandomUserResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRandomUserResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRandomUserResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoRandomUserResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRandomUserResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRandomUserResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRevengeReq

// required uint32 enemyId = 1;
inline bool ProtoRevengeReq::has_enemyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRevengeReq::set_has_enemyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRevengeReq::clear_has_enemyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRevengeReq::clear_enemyid() {
  enemyid_ = 0u;
  clear_has_enemyid();
}
inline ::google::protobuf::uint32 ProtoRevengeReq::enemyid() const {
  return enemyid_;
}
inline void ProtoRevengeReq::set_enemyid(::google::protobuf::uint32 value) {
  set_has_enemyid();
  enemyid_ = value;
}

// required .ProtoBattle.BattleCommon common = 2;
inline bool ProtoRevengeReq::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRevengeReq::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRevengeReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRevengeReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoRevengeReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoRevengeReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoRevengeReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRevengeResp

// required .ProtoBattleDemo.ProtoBattleDemo info = 1;
inline bool ProtoRevengeResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRevengeResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRevengeResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRevengeResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoRevengeResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoRevengeResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoRevengeResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoRevengeResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRevengeResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRevengeResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRevengeResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoRevengeResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRevengeResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoRevengeResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoRefreshReq

// -------------------------------------------------------------------

// ProtoRefreshResp

// optional string fig = 1;
inline bool ProtoRefreshResp::has_fig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRefreshResp::set_has_fig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRefreshResp::clear_has_fig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRefreshResp::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ProtoRefreshResp::fig() const {
  return *fig_;
}
inline void ProtoRefreshResp::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoRefreshResp::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void ProtoRefreshResp::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRefreshResp::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* ProtoRefreshResp::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string name = 2;
inline bool ProtoRefreshResp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRefreshResp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRefreshResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRefreshResp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoRefreshResp::name() const {
  return *name_;
}
inline void ProtoRefreshResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRefreshResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRefreshResp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRefreshResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoRefreshResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ProtoHero.HeroBaseInfoCPP hero = 3;
inline int ProtoRefreshResp::hero_size() const {
  return hero_.size();
}
inline void ProtoRefreshResp::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoRefreshResp::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoRefreshResp::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoRefreshResp::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
ProtoRefreshResp::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
ProtoRefreshResp::mutable_hero() {
  return &hero_;
}

// -------------------------------------------------------------------

// ProtoPost

// required string info = 1;
inline bool ProtoPost::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPost::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPost::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPost::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& ProtoPost::info() const {
  return *info_;
}
inline void ProtoPost::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void ProtoPost::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void ProtoPost::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoPost::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* ProtoPost::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoFriendBattleReq

// required uint32 otherId = 1;
inline bool ProtoFriendBattleReq::has_otherid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendBattleReq::set_has_otherid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendBattleReq::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendBattleReq::clear_otherid() {
  otherid_ = 0u;
  clear_has_otherid();
}
inline ::google::protobuf::uint32 ProtoFriendBattleReq::otherid() const {
  return otherid_;
}
inline void ProtoFriendBattleReq::set_otherid(::google::protobuf::uint32 value) {
  set_has_otherid();
  otherid_ = value;
}

// required .ProtoBattle.BattleCommon common = 2;
inline bool ProtoFriendBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoFriendBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoFriendBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoFriendBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoFriendBattleResp

// required .ProtoBattleDemo.ProtoBattleDemo info = 1;
inline bool ProtoFriendBattleResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendBattleResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendBattleResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendBattleResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoFriendBattleResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoFriendBattleResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoFriendBattleResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoFriendBattleResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendBattleResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendBattleResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendBattleResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoFriendBattleResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoFriendBattleResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoFriendBattleResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMartialClubBattleReq

// required uint32 myMartialGrade = 1;
inline bool ProtoMartialClubBattleReq::has_mymartialgrade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_mymartialgrade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMartialClubBattleReq::clear_has_mymartialgrade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMartialClubBattleReq::clear_mymartialgrade() {
  mymartialgrade_ = 0u;
  clear_has_mymartialgrade();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::mymartialgrade() const {
  return mymartialgrade_;
}
inline void ProtoMartialClubBattleReq::set_mymartialgrade(::google::protobuf::uint32 value) {
  set_has_mymartialgrade();
  mymartialgrade_ = value;
}

// required uint32 othUid = 2;
inline bool ProtoMartialClubBattleReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMartialClubBattleReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMartialClubBattleReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::othuid() const {
  return othuid_;
}
inline void ProtoMartialClubBattleReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othMartialGrade = 3;
inline bool ProtoMartialClubBattleReq::has_othmartialgrade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_othmartialgrade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoMartialClubBattleReq::clear_has_othmartialgrade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoMartialClubBattleReq::clear_othmartialgrade() {
  othmartialgrade_ = 0u;
  clear_has_othmartialgrade();
}
inline ::google::protobuf::uint32 ProtoMartialClubBattleReq::othmartialgrade() const {
  return othmartialgrade_;
}
inline void ProtoMartialClubBattleReq::set_othmartialgrade(::google::protobuf::uint32 value) {
  set_has_othmartialgrade();
  othmartialgrade_ = value;
}

// required .ProtoBattle.BattleCommon common = 4;
inline bool ProtoMartialClubBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoMartialClubBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoMartialClubBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoMartialClubBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoMartialClubBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoMartialClubBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoMartialClubBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoMartialClubBattleResp

// required .ProtoBattleDemo.ProtoBattleDemo info = 1;
inline bool ProtoMartialClubBattleResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMartialClubBattleResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMartialClubBattleResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMartialClubBattleResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoMartialClubBattleResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoMartialClubBattleResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoMartialClubBattleResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool ProtoMartialClubBattleResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMartialClubBattleResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMartialClubBattleResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMartialClubBattleResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoMartialClubBattleResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoMartialClubBattleResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoMartialClubBattleResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoCSMartialClubBattleReq

// required uint32 myUid = 1;
inline bool ProtoCSMartialClubBattleReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSMartialClubBattleReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::myuid() const {
  return myuid_;
}
inline void ProtoCSMartialClubBattleReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
}

// required uint32 level = 2;
inline bool ProtoCSMartialClubBattleReq::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSMartialClubBattleReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::level() const {
  return level_;
}
inline void ProtoCSMartialClubBattleReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required string myName = 3;
inline bool ProtoCSMartialClubBattleReq::has_myname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_myname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_myname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCSMartialClubBattleReq::clear_myname() {
  if (myname_ != &::google::protobuf::internal::kEmptyString) {
    myname_->clear();
  }
  clear_has_myname();
}
inline const ::std::string& ProtoCSMartialClubBattleReq::myname() const {
  return *myname_;
}
inline void ProtoCSMartialClubBattleReq::set_myname(const ::std::string& value) {
  set_has_myname();
  if (myname_ == &::google::protobuf::internal::kEmptyString) {
    myname_ = new ::std::string;
  }
  myname_->assign(value);
}
inline void ProtoCSMartialClubBattleReq::set_myname(const char* value) {
  set_has_myname();
  if (myname_ == &::google::protobuf::internal::kEmptyString) {
    myname_ = new ::std::string;
  }
  myname_->assign(value);
}
inline void ProtoCSMartialClubBattleReq::set_myname(const char* value, size_t size) {
  set_has_myname();
  if (myname_ == &::google::protobuf::internal::kEmptyString) {
    myname_ = new ::std::string;
  }
  myname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoCSMartialClubBattleReq::mutable_myname() {
  set_has_myname();
  if (myname_ == &::google::protobuf::internal::kEmptyString) {
    myname_ = new ::std::string;
  }
  return myname_;
}
inline ::std::string* ProtoCSMartialClubBattleReq::release_myname() {
  clear_has_myname();
  if (myname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = myname_;
    myname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string myFig = 4;
inline bool ProtoCSMartialClubBattleReq::has_myfig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_myfig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_myfig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCSMartialClubBattleReq::clear_myfig() {
  if (myfig_ != &::google::protobuf::internal::kEmptyString) {
    myfig_->clear();
  }
  clear_has_myfig();
}
inline const ::std::string& ProtoCSMartialClubBattleReq::myfig() const {
  return *myfig_;
}
inline void ProtoCSMartialClubBattleReq::set_myfig(const ::std::string& value) {
  set_has_myfig();
  if (myfig_ == &::google::protobuf::internal::kEmptyString) {
    myfig_ = new ::std::string;
  }
  myfig_->assign(value);
}
inline void ProtoCSMartialClubBattleReq::set_myfig(const char* value) {
  set_has_myfig();
  if (myfig_ == &::google::protobuf::internal::kEmptyString) {
    myfig_ = new ::std::string;
  }
  myfig_->assign(value);
}
inline void ProtoCSMartialClubBattleReq::set_myfig(const char* value, size_t size) {
  set_has_myfig();
  if (myfig_ == &::google::protobuf::internal::kEmptyString) {
    myfig_ = new ::std::string;
  }
  myfig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoCSMartialClubBattleReq::mutable_myfig() {
  set_has_myfig();
  if (myfig_ == &::google::protobuf::internal::kEmptyString) {
    myfig_ = new ::std::string;
  }
  return myfig_;
}
inline ::std::string* ProtoCSMartialClubBattleReq::release_myfig() {
  clear_has_myfig();
  if (myfig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = myfig_;
    myfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 myMartialGrade = 5;
inline bool ProtoCSMartialClubBattleReq::has_mymartialgrade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_mymartialgrade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_mymartialgrade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoCSMartialClubBattleReq::clear_mymartialgrade() {
  mymartialgrade_ = 0u;
  clear_has_mymartialgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::mymartialgrade() const {
  return mymartialgrade_;
}
inline void ProtoCSMartialClubBattleReq::set_mymartialgrade(::google::protobuf::uint32 value) {
  set_has_mymartialgrade();
  mymartialgrade_ = value;
}

// required uint32 othUid = 6;
inline bool ProtoCSMartialClubBattleReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoCSMartialClubBattleReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::othuid() const {
  return othuid_;
}
inline void ProtoCSMartialClubBattleReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
}

// required uint32 othMartialGrade = 7;
inline bool ProtoCSMartialClubBattleReq::has_othmartialgrade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_othmartialgrade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_othmartialgrade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoCSMartialClubBattleReq::clear_othmartialgrade() {
  othmartialgrade_ = 0u;
  clear_has_othmartialgrade();
}
inline ::google::protobuf::uint32 ProtoCSMartialClubBattleReq::othmartialgrade() const {
  return othmartialgrade_;
}
inline void ProtoCSMartialClubBattleReq::set_othmartialgrade(::google::protobuf::uint32 value) {
  set_has_othmartialgrade();
  othmartialgrade_ = value;
}

// required .ProtoBattle.BattleCommon common = 8;
inline bool ProtoCSMartialClubBattleReq::has_common() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoCSMartialClubBattleReq::set_has_common() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoCSMartialClubBattleReq::clear_has_common() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoCSMartialClubBattleReq::clear_common() {
  if (common_ != NULL) common_->::ProtoBattle::BattleCommon::Clear();
  clear_has_common();
}
inline const ::ProtoBattle::BattleCommon& ProtoCSMartialClubBattleReq::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ProtoBattle::BattleCommon* ProtoCSMartialClubBattleReq::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ProtoBattle::BattleCommon;
  return common_;
}
inline ::ProtoBattle::BattleCommon* ProtoCSMartialClubBattleReq::release_common() {
  clear_has_common();
  ::ProtoBattle::BattleCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// repeated .ProtoHero.HeroBaseInfoCPP hero = 9;
inline int ProtoCSMartialClubBattleReq::hero_size() const {
  return hero_.size();
}
inline void ProtoCSMartialClubBattleReq::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoCSMartialClubBattleReq::hero(int index) const {
  return hero_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoCSMartialClubBattleReq::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoCSMartialClubBattleReq::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
ProtoCSMartialClubBattleReq::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
ProtoCSMartialClubBattleReq::mutable_hero() {
  return &hero_;
}

// -------------------------------------------------------------------

// ProtoCSBattleResultReq

// required uint32 myUid = 1;
inline bool ProtoCSBattleResultReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSBattleResultReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSBattleResultReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSBattleResultReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 ProtoCSBattleResultReq::myuid() const {
  return myuid_;
}
inline void ProtoCSBattleResultReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
}

// required uint32 myMartialGrade = 2;
inline bool ProtoCSBattleResultReq::has_mymartialgrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSBattleResultReq::set_has_mymartialgrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSBattleResultReq::clear_has_mymartialgrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSBattleResultReq::clear_mymartialgrade() {
  mymartialgrade_ = 0u;
  clear_has_mymartialgrade();
}
inline ::google::protobuf::uint32 ProtoCSBattleResultReq::mymartialgrade() const {
  return mymartialgrade_;
}
inline void ProtoCSBattleResultReq::set_mymartialgrade(::google::protobuf::uint32 value) {
  set_has_mymartialgrade();
  mymartialgrade_ = value;
}

// required .DataCommon.CommonItemsCPP commons = 3;
inline bool ProtoCSBattleResultReq::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCSBattleResultReq::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCSBattleResultReq::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCSBattleResultReq::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoCSBattleResultReq::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoCSBattleResultReq::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoCSBattleResultReq::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoBattleDemo.ProtoBattleDemo info = 4;
inline bool ProtoCSBattleResultReq::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCSBattleResultReq::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCSBattleResultReq::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCSBattleResultReq::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoCSBattleResultReq::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoCSBattleResultReq::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoCSBattleResultReq::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoCSMartialClubBattleResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoCSMartialClubBattleResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCSMartialClubBattleResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoCSMartialClubBattleResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoCSMartialClubBattleResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoCSMartialClubBattleResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoBattleDemo.ProtoBattleDemo info = 2;
inline bool ProtoCSMartialClubBattleResp::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCSMartialClubBattleResp::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCSMartialClubBattleResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCSMartialClubBattleResp::clear_info() {
  if (info_ != NULL) info_->::ProtoBattleDemo::ProtoBattleDemo::Clear();
  clear_has_info();
}
inline const ::ProtoBattleDemo::ProtoBattleDemo& ProtoCSMartialClubBattleResp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoCSMartialClubBattleResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoBattleDemo::ProtoBattleDemo;
  return info_;
}
inline ::ProtoBattleDemo::ProtoBattleDemo* ProtoCSMartialClubBattleResp::release_info() {
  clear_has_info();
  ::ProtoBattleDemo::ProtoBattleDemo* temp = info_;
  info_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBattle

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBattle_2eproto__INCLUDED
