// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoHero.proto

#ifndef PROTOBUF_ProtoHero_2eproto__INCLUDED
#define PROTOBUF_ProtoHero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoHero {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoHero_2eproto();
void protobuf_AssignDesc_ProtoHero_2eproto();
void protobuf_ShutdownFile_ProtoHero_2eproto();

class HeroBaseInfoCPP;
class BuyHeroReq;
class BuyHeroResp;
class UpgradeHeroByCoinReq;
class UpgradeHeroByCoinResp;
class UpGradeHeroSkillReq;
class UpGradeHeroSkillResp;
class UpGradeHeroStarReq;
class UpGradeHeroStarResp;
class SetHeroReq;
class SetHeroResp;
class ActArchiveChipReq;
class ActArchiveChipResp;
class ArchiveRewardReq;
class ArchiveRewardResp;
class ProtoActDragonBallReq;
class ProtoActDragonBallResp;
class ProtoBuyHeroShareRewardReq;
class ProtoBuyHeroShareRewardResp;

// ===================================================================

class HeroBaseInfoCPP : public ::google::protobuf::Message {
 public:
  HeroBaseInfoCPP();
  virtual ~HeroBaseInfoCPP();
  
  HeroBaseInfoCPP(const HeroBaseInfoCPP& from);
  
  inline HeroBaseInfoCPP& operator=(const HeroBaseInfoCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroBaseInfoCPP& default_instance();
  
  void Swap(HeroBaseInfoCPP* other);
  
  // implements Message ----------------------------------------------
  
  HeroBaseInfoCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroBaseInfoCPP& from);
  void MergeFrom(const HeroBaseInfoCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // optional uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 addExp = 3;
  inline bool has_addexp() const;
  inline void clear_addexp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::uint32 addexp() const;
  inline void set_addexp(::google::protobuf::uint32 value);
  
  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 hp = 5;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 5;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 att = 6;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 6;
  inline ::google::protobuf::uint32 att() const;
  inline void set_att(::google::protobuf::uint32 value);
  
  // optional uint32 def = 7;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 7;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // optional uint32 first = 8;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 8;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
  // optional uint32 hit = 9;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 9;
  inline ::google::protobuf::uint32 hit() const;
  inline void set_hit(::google::protobuf::uint32 value);
  
  // optional uint32 dodge = 10;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 10;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // optional uint32 critStrike = 11;
  inline bool has_critstrike() const;
  inline void clear_critstrike();
  static const int kCritStrikeFieldNumber = 11;
  inline ::google::protobuf::uint32 critstrike() const;
  inline void set_critstrike(::google::protobuf::uint32 value);
  
  // optional uint32 critRate = 12;
  inline bool has_critrate() const;
  inline void clear_critrate();
  static const int kCritRateFieldNumber = 12;
  inline ::google::protobuf::uint32 critrate() const;
  inline void set_critrate(::google::protobuf::uint32 value);
  
  // optional uint32 critResist = 13;
  inline bool has_critresist() const;
  inline void clear_critresist();
  static const int kCritResistFieldNumber = 13;
  inline ::google::protobuf::uint32 critresist() const;
  inline void set_critresist(::google::protobuf::uint32 value);
  
  // optional uint32 dragonBall = 14;
  inline bool has_dragonball() const;
  inline void clear_dragonball();
  static const int kDragonBallFieldNumber = 14;
  inline ::google::protobuf::uint32 dragonball() const;
  inline void set_dragonball(::google::protobuf::uint32 value);
  
  // optional uint32 stars = 15;
  inline bool has_stars() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 15;
  inline ::google::protobuf::uint32 stars() const;
  inline void set_stars(::google::protobuf::uint32 value);
  
  // repeated uint32 skill = 16;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 16;
  inline ::google::protobuf::uint32 skill(int index) const;
  inline void set_skill(int index, ::google::protobuf::uint32 value);
  inline void add_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill();
  
  // optional uint32 detachUid = 17;
  inline bool has_detachuid() const;
  inline void clear_detachuid();
  static const int kDetachUidFieldNumber = 17;
  inline ::google::protobuf::uint32 detachuid() const;
  inline void set_detachuid(::google::protobuf::uint32 value);
  
  // optional uint32 detachSlot = 18;
  inline bool has_detachslot() const;
  inline void clear_detachslot();
  static const int kDetachSlotFieldNumber = 18;
  inline ::google::protobuf::uint32 detachslot() const;
  inline void set_detachslot(::google::protobuf::uint32 value);
  
  // optional uint32 battlePower = 19;
  inline bool has_battlepower() const;
  inline void clear_battlepower();
  static const int kBattlePowerFieldNumber = 19;
  inline ::google::protobuf::uint32 battlepower() const;
  inline void set_battlepower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.HeroBaseInfoCPP)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_addexp();
  inline void clear_has_addexp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_critstrike();
  inline void clear_has_critstrike();
  inline void set_has_critrate();
  inline void clear_has_critrate();
  inline void set_has_critresist();
  inline void clear_has_critresist();
  inline void set_has_dragonball();
  inline void clear_has_dragonball();
  inline void set_has_stars();
  inline void clear_has_stars();
  inline void set_has_detachuid();
  inline void clear_has_detachuid();
  inline void set_has_detachslot();
  inline void clear_has_detachslot();
  inline void set_has_battlepower();
  inline void clear_has_battlepower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 addexp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 att_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 first_;
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 critstrike_;
  ::google::protobuf::uint32 critrate_;
  ::google::protobuf::uint32 critresist_;
  ::google::protobuf::uint32 dragonball_;
  ::google::protobuf::uint32 stars_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_;
  ::google::protobuf::uint32 detachuid_;
  ::google::protobuf::uint32 detachslot_;
  ::google::protobuf::uint32 battlepower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static HeroBaseInfoCPP* default_instance_;
};
// -------------------------------------------------------------------

class BuyHeroReq : public ::google::protobuf::Message {
 public:
  BuyHeroReq();
  virtual ~BuyHeroReq();
  
  BuyHeroReq(const BuyHeroReq& from);
  
  inline BuyHeroReq& operator=(const BuyHeroReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyHeroReq& default_instance();
  
  void Swap(BuyHeroReq* other);
  
  // implements Message ----------------------------------------------
  
  BuyHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyHeroReq& from);
  void MergeFrom(const BuyHeroReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.BuyHeroReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static BuyHeroReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyHeroResp : public ::google::protobuf::Message {
 public:
  BuyHeroResp();
  virtual ~BuyHeroResp();
  
  BuyHeroResp(const BuyHeroResp& from);
  
  inline BuyHeroResp& operator=(const BuyHeroResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyHeroResp& default_instance();
  
  void Swap(BuyHeroResp* other);
  
  // implements Message ----------------------------------------------
  
  BuyHeroResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyHeroResp& from);
  void MergeFrom(const BuyHeroResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.BuyHeroResp)
 private:
  inline void set_has_hero();
  inline void clear_has_hero();
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static BuyHeroResp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeHeroByCoinReq : public ::google::protobuf::Message {
 public:
  UpgradeHeroByCoinReq();
  virtual ~UpgradeHeroByCoinReq();
  
  UpgradeHeroByCoinReq(const UpgradeHeroByCoinReq& from);
  
  inline UpgradeHeroByCoinReq& operator=(const UpgradeHeroByCoinReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeHeroByCoinReq& default_instance();
  
  void Swap(UpgradeHeroByCoinReq* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeHeroByCoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeHeroByCoinReq& from);
  void MergeFrom(const UpgradeHeroByCoinReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 oneclick = 2;
  inline bool has_oneclick() const;
  inline void clear_oneclick();
  static const int kOneclickFieldNumber = 2;
  inline ::google::protobuf::uint32 oneclick() const;
  inline void set_oneclick(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpgradeHeroByCoinReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_oneclick();
  inline void clear_has_oneclick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 oneclick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeHeroByCoinReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeHeroByCoinResp : public ::google::protobuf::Message {
 public:
  UpgradeHeroByCoinResp();
  virtual ~UpgradeHeroByCoinResp();
  
  UpgradeHeroByCoinResp(const UpgradeHeroByCoinResp& from);
  
  inline UpgradeHeroByCoinResp& operator=(const UpgradeHeroByCoinResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeHeroByCoinResp& default_instance();
  
  void Swap(UpgradeHeroByCoinResp* other);
  
  // implements Message ----------------------------------------------
  
  UpgradeHeroByCoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeHeroByCoinResp& from);
  void MergeFrom(const UpgradeHeroByCoinResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpgradeHeroByCoinResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpgradeHeroByCoinResp* default_instance_;
};
// -------------------------------------------------------------------

class UpGradeHeroSkillReq : public ::google::protobuf::Message {
 public:
  UpGradeHeroSkillReq();
  virtual ~UpGradeHeroSkillReq();
  
  UpGradeHeroSkillReq(const UpGradeHeroSkillReq& from);
  
  inline UpGradeHeroSkillReq& operator=(const UpGradeHeroSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpGradeHeroSkillReq& default_instance();
  
  void Swap(UpGradeHeroSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  UpGradeHeroSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpGradeHeroSkillReq& from);
  void MergeFrom(const UpGradeHeroSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 skillid = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpGradeHeroSkillReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 skillid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpGradeHeroSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class UpGradeHeroSkillResp : public ::google::protobuf::Message {
 public:
  UpGradeHeroSkillResp();
  virtual ~UpGradeHeroSkillResp();
  
  UpGradeHeroSkillResp(const UpGradeHeroSkillResp& from);
  
  inline UpGradeHeroSkillResp& operator=(const UpGradeHeroSkillResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpGradeHeroSkillResp& default_instance();
  
  void Swap(UpGradeHeroSkillResp* other);
  
  // implements Message ----------------------------------------------
  
  UpGradeHeroSkillResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpGradeHeroSkillResp& from);
  void MergeFrom(const UpGradeHeroSkillResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required uint32 battlePower = 3;
  inline bool has_battlepower() const;
  inline void clear_battlepower();
  static const int kBattlePowerFieldNumber = 3;
  inline ::google::protobuf::uint32 battlepower() const;
  inline void set_battlepower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpGradeHeroSkillResp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_battlepower();
  inline void clear_has_battlepower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 battlepower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpGradeHeroSkillResp* default_instance_;
};
// -------------------------------------------------------------------

class UpGradeHeroStarReq : public ::google::protobuf::Message {
 public:
  UpGradeHeroStarReq();
  virtual ~UpGradeHeroStarReq();
  
  UpGradeHeroStarReq(const UpGradeHeroStarReq& from);
  
  inline UpGradeHeroStarReq& operator=(const UpGradeHeroStarReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpGradeHeroStarReq& default_instance();
  
  void Swap(UpGradeHeroStarReq* other);
  
  // implements Message ----------------------------------------------
  
  UpGradeHeroStarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpGradeHeroStarReq& from);
  void MergeFrom(const UpGradeHeroStarReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 starid = 2;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStaridFieldNumber = 2;
  inline ::google::protobuf::uint32 starid() const;
  inline void set_starid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpGradeHeroStarReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_starid();
  inline void clear_has_starid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 starid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpGradeHeroStarReq* default_instance_;
};
// -------------------------------------------------------------------

class UpGradeHeroStarResp : public ::google::protobuf::Message {
 public:
  UpGradeHeroStarResp();
  virtual ~UpGradeHeroStarResp();
  
  UpGradeHeroStarResp(const UpGradeHeroStarResp& from);
  
  inline UpGradeHeroStarResp& operator=(const UpGradeHeroStarResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpGradeHeroStarResp& default_instance();
  
  void Swap(UpGradeHeroStarResp* other);
  
  // implements Message ----------------------------------------------
  
  UpGradeHeroStarResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpGradeHeroStarResp& from);
  void MergeFrom(const UpGradeHeroStarResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.UpGradeHeroStarResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static UpGradeHeroStarResp* default_instance_;
};
// -------------------------------------------------------------------

class SetHeroReq : public ::google::protobuf::Message {
 public:
  SetHeroReq();
  virtual ~SetHeroReq();
  
  SetHeroReq(const SetHeroReq& from);
  
  inline SetHeroReq& operator=(const SetHeroReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetHeroReq& default_instance();
  
  void Swap(SetHeroReq* other);
  
  // implements Message ----------------------------------------------
  
  SetHeroReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetHeroReq& from);
  void MergeFrom(const SetHeroReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.SetHeroReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static SetHeroReq* default_instance_;
};
// -------------------------------------------------------------------

class SetHeroResp : public ::google::protobuf::Message {
 public:
  SetHeroResp();
  virtual ~SetHeroResp();
  
  SetHeroResp(const SetHeroResp& from);
  
  inline SetHeroResp& operator=(const SetHeroResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetHeroResp& default_instance();
  
  void Swap(SetHeroResp* other);
  
  // implements Message ----------------------------------------------
  
  SetHeroResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetHeroResp& from);
  void MergeFrom(const SetHeroResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoHero.SetHeroResp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static SetHeroResp* default_instance_;
};
// -------------------------------------------------------------------

class ActArchiveChipReq : public ::google::protobuf::Message {
 public:
  ActArchiveChipReq();
  virtual ~ActArchiveChipReq();
  
  ActArchiveChipReq(const ActArchiveChipReq& from);
  
  inline ActArchiveChipReq& operator=(const ActArchiveChipReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActArchiveChipReq& default_instance();
  
  void Swap(ActArchiveChipReq* other);
  
  // implements Message ----------------------------------------------
  
  ActArchiveChipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActArchiveChipReq& from);
  void MergeFrom(const ActArchiveChipReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 act = 2;
  inline bool has_act() const;
  inline void clear_act();
  static const int kActFieldNumber = 2;
  inline ::google::protobuf::uint32 act() const;
  inline void set_act(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ActArchiveChipReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_act();
  inline void clear_has_act();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 act_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ActArchiveChipReq* default_instance_;
};
// -------------------------------------------------------------------

class ActArchiveChipResp : public ::google::protobuf::Message {
 public:
  ActArchiveChipResp();
  virtual ~ActArchiveChipResp();
  
  ActArchiveChipResp(const ActArchiveChipResp& from);
  
  inline ActArchiveChipResp& operator=(const ActArchiveChipResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActArchiveChipResp& default_instance();
  
  void Swap(ActArchiveChipResp* other);
  
  // implements Message ----------------------------------------------
  
  ActArchiveChipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActArchiveChipResp& from);
  void MergeFrom(const ActArchiveChipResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // optional .ProtoHero.HeroBaseInfoCPP hero = 2;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ActArchiveChipResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ActArchiveChipResp* default_instance_;
};
// -------------------------------------------------------------------

class ArchiveRewardReq : public ::google::protobuf::Message {
 public:
  ArchiveRewardReq();
  virtual ~ArchiveRewardReq();
  
  ArchiveRewardReq(const ArchiveRewardReq& from);
  
  inline ArchiveRewardReq& operator=(const ArchiveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveRewardReq& default_instance();
  
  void Swap(ArchiveRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  ArchiveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArchiveRewardReq& from);
  void MergeFrom(const ArchiveRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ArchiveRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ArchiveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class ArchiveRewardResp : public ::google::protobuf::Message {
 public:
  ArchiveRewardResp();
  virtual ~ArchiveRewardResp();
  
  ArchiveRewardResp(const ArchiveRewardResp& from);
  
  inline ArchiveRewardResp& operator=(const ArchiveRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveRewardResp& default_instance();
  
  void Swap(ArchiveRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  ArchiveRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArchiveRewardResp& from);
  void MergeFrom(const ArchiveRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ArchiveRewardResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ArchiveRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoActDragonBallReq : public ::google::protobuf::Message {
 public:
  ProtoActDragonBallReq();
  virtual ~ProtoActDragonBallReq();
  
  ProtoActDragonBallReq(const ProtoActDragonBallReq& from);
  
  inline ProtoActDragonBallReq& operator=(const ProtoActDragonBallReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoActDragonBallReq& default_instance();
  
  void Swap(ProtoActDragonBallReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoActDragonBallReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoActDragonBallReq& from);
  void MergeFrom(const ProtoActDragonBallReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // required uint32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ProtoActDragonBallReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_idx();
  inline void clear_has_idx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 idx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoActDragonBallReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoActDragonBallResp : public ::google::protobuf::Message {
 public:
  ProtoActDragonBallResp();
  virtual ~ProtoActDragonBallResp();
  
  ProtoActDragonBallResp(const ProtoActDragonBallResp& from);
  
  inline ProtoActDragonBallResp& operator=(const ProtoActDragonBallResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoActDragonBallResp& default_instance();
  
  void Swap(ProtoActDragonBallResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoActDragonBallResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoActDragonBallResp& from);
  void MergeFrom(const ProtoActDragonBallResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ProtoActDragonBallResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoActDragonBallResp* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBuyHeroShareRewardReq : public ::google::protobuf::Message {
 public:
  ProtoBuyHeroShareRewardReq();
  virtual ~ProtoBuyHeroShareRewardReq();
  
  ProtoBuyHeroShareRewardReq(const ProtoBuyHeroShareRewardReq& from);
  
  inline ProtoBuyHeroShareRewardReq& operator=(const ProtoBuyHeroShareRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBuyHeroShareRewardReq& default_instance();
  
  void Swap(ProtoBuyHeroShareRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBuyHeroShareRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBuyHeroShareRewardReq& from);
  void MergeFrom(const ProtoBuyHeroShareRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ProtoBuyHeroShareRewardReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBuyHeroShareRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtoBuyHeroShareRewardResp : public ::google::protobuf::Message {
 public:
  ProtoBuyHeroShareRewardResp();
  virtual ~ProtoBuyHeroShareRewardResp();
  
  ProtoBuyHeroShareRewardResp(const ProtoBuyHeroShareRewardResp& from);
  
  inline ProtoBuyHeroShareRewardResp& operator=(const ProtoBuyHeroShareRewardResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBuyHeroShareRewardResp& default_instance();
  
  void Swap(ProtoBuyHeroShareRewardResp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoBuyHeroShareRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoBuyHeroShareRewardResp& from);
  void MergeFrom(const ProtoBuyHeroShareRewardResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoHero.ProtoBuyHeroShareRewardResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoHero_2eproto();
  friend void protobuf_AssignDesc_ProtoHero_2eproto();
  friend void protobuf_ShutdownFile_ProtoHero_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoBuyHeroShareRewardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// HeroBaseInfoCPP

// required uint32 heroid = 1;
inline bool HeroBaseInfoCPP::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroBaseInfoCPP::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroBaseInfoCPP::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroBaseInfoCPP::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::heroid() const {
  return heroid_;
}
inline void HeroBaseInfoCPP::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional uint64 exp = 2;
inline bool HeroBaseInfoCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroBaseInfoCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroBaseInfoCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroBaseInfoCPP::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 HeroBaseInfoCPP::exp() const {
  return exp_;
}
inline void HeroBaseInfoCPP::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 addExp = 3;
inline bool HeroBaseInfoCPP::has_addexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroBaseInfoCPP::set_has_addexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroBaseInfoCPP::clear_has_addexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroBaseInfoCPP::clear_addexp() {
  addexp_ = 0u;
  clear_has_addexp();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::addexp() const {
  return addexp_;
}
inline void HeroBaseInfoCPP::set_addexp(::google::protobuf::uint32 value) {
  set_has_addexp();
  addexp_ = value;
}

// optional uint32 level = 4;
inline bool HeroBaseInfoCPP::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroBaseInfoCPP::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroBaseInfoCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroBaseInfoCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::level() const {
  return level_;
}
inline void HeroBaseInfoCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 hp = 5;
inline bool HeroBaseInfoCPP::has_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroBaseInfoCPP::set_has_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroBaseInfoCPP::clear_has_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroBaseInfoCPP::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::hp() const {
  return hp_;
}
inline void HeroBaseInfoCPP::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 att = 6;
inline bool HeroBaseInfoCPP::has_att() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroBaseInfoCPP::set_has_att() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroBaseInfoCPP::clear_has_att() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroBaseInfoCPP::clear_att() {
  att_ = 0u;
  clear_has_att();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::att() const {
  return att_;
}
inline void HeroBaseInfoCPP::set_att(::google::protobuf::uint32 value) {
  set_has_att();
  att_ = value;
}

// optional uint32 def = 7;
inline bool HeroBaseInfoCPP::has_def() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroBaseInfoCPP::set_has_def() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroBaseInfoCPP::clear_has_def() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroBaseInfoCPP::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::def() const {
  return def_;
}
inline void HeroBaseInfoCPP::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// optional uint32 first = 8;
inline bool HeroBaseInfoCPP::has_first() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeroBaseInfoCPP::set_has_first() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeroBaseInfoCPP::clear_has_first() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeroBaseInfoCPP::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::first() const {
  return first_;
}
inline void HeroBaseInfoCPP::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional uint32 hit = 9;
inline bool HeroBaseInfoCPP::has_hit() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeroBaseInfoCPP::set_has_hit() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeroBaseInfoCPP::clear_has_hit() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeroBaseInfoCPP::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::hit() const {
  return hit_;
}
inline void HeroBaseInfoCPP::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
}

// optional uint32 dodge = 10;
inline bool HeroBaseInfoCPP::has_dodge() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HeroBaseInfoCPP::set_has_dodge() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HeroBaseInfoCPP::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HeroBaseInfoCPP::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::dodge() const {
  return dodge_;
}
inline void HeroBaseInfoCPP::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// optional uint32 critStrike = 11;
inline bool HeroBaseInfoCPP::has_critstrike() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HeroBaseInfoCPP::set_has_critstrike() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HeroBaseInfoCPP::clear_has_critstrike() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HeroBaseInfoCPP::clear_critstrike() {
  critstrike_ = 0u;
  clear_has_critstrike();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::critstrike() const {
  return critstrike_;
}
inline void HeroBaseInfoCPP::set_critstrike(::google::protobuf::uint32 value) {
  set_has_critstrike();
  critstrike_ = value;
}

// optional uint32 critRate = 12;
inline bool HeroBaseInfoCPP::has_critrate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HeroBaseInfoCPP::set_has_critrate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HeroBaseInfoCPP::clear_has_critrate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HeroBaseInfoCPP::clear_critrate() {
  critrate_ = 0u;
  clear_has_critrate();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::critrate() const {
  return critrate_;
}
inline void HeroBaseInfoCPP::set_critrate(::google::protobuf::uint32 value) {
  set_has_critrate();
  critrate_ = value;
}

// optional uint32 critResist = 13;
inline bool HeroBaseInfoCPP::has_critresist() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_critresist() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HeroBaseInfoCPP::clear_has_critresist() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HeroBaseInfoCPP::clear_critresist() {
  critresist_ = 0u;
  clear_has_critresist();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::critresist() const {
  return critresist_;
}
inline void HeroBaseInfoCPP::set_critresist(::google::protobuf::uint32 value) {
  set_has_critresist();
  critresist_ = value;
}

// optional uint32 dragonBall = 14;
inline bool HeroBaseInfoCPP::has_dragonball() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_dragonball() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HeroBaseInfoCPP::clear_has_dragonball() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HeroBaseInfoCPP::clear_dragonball() {
  dragonball_ = 0u;
  clear_has_dragonball();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::dragonball() const {
  return dragonball_;
}
inline void HeroBaseInfoCPP::set_dragonball(::google::protobuf::uint32 value) {
  set_has_dragonball();
  dragonball_ = value;
}

// optional uint32 stars = 15;
inline bool HeroBaseInfoCPP::has_stars() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_stars() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HeroBaseInfoCPP::clear_has_stars() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HeroBaseInfoCPP::clear_stars() {
  stars_ = 0u;
  clear_has_stars();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::stars() const {
  return stars_;
}
inline void HeroBaseInfoCPP::set_stars(::google::protobuf::uint32 value) {
  set_has_stars();
  stars_ = value;
}

// repeated uint32 skill = 16;
inline int HeroBaseInfoCPP::skill_size() const {
  return skill_.size();
}
inline void HeroBaseInfoCPP::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::skill(int index) const {
  return skill_.Get(index);
}
inline void HeroBaseInfoCPP::set_skill(int index, ::google::protobuf::uint32 value) {
  skill_.Set(index, value);
}
inline void HeroBaseInfoCPP::add_skill(::google::protobuf::uint32 value) {
  skill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroBaseInfoCPP::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroBaseInfoCPP::mutable_skill() {
  return &skill_;
}

// optional uint32 detachUid = 17;
inline bool HeroBaseInfoCPP::has_detachuid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_detachuid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HeroBaseInfoCPP::clear_has_detachuid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HeroBaseInfoCPP::clear_detachuid() {
  detachuid_ = 0u;
  clear_has_detachuid();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::detachuid() const {
  return detachuid_;
}
inline void HeroBaseInfoCPP::set_detachuid(::google::protobuf::uint32 value) {
  set_has_detachuid();
  detachuid_ = value;
}

// optional uint32 detachSlot = 18;
inline bool HeroBaseInfoCPP::has_detachslot() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_detachslot() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HeroBaseInfoCPP::clear_has_detachslot() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HeroBaseInfoCPP::clear_detachslot() {
  detachslot_ = 0u;
  clear_has_detachslot();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::detachslot() const {
  return detachslot_;
}
inline void HeroBaseInfoCPP::set_detachslot(::google::protobuf::uint32 value) {
  set_has_detachslot();
  detachslot_ = value;
}

// optional uint32 battlePower = 19;
inline bool HeroBaseInfoCPP::has_battlepower() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HeroBaseInfoCPP::set_has_battlepower() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HeroBaseInfoCPP::clear_has_battlepower() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HeroBaseInfoCPP::clear_battlepower() {
  battlepower_ = 0u;
  clear_has_battlepower();
}
inline ::google::protobuf::uint32 HeroBaseInfoCPP::battlepower() const {
  return battlepower_;
}
inline void HeroBaseInfoCPP::set_battlepower(::google::protobuf::uint32 value) {
  set_has_battlepower();
  battlepower_ = value;
}

// -------------------------------------------------------------------

// BuyHeroReq

// required uint32 heroid = 1;
inline bool BuyHeroReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyHeroReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyHeroReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyHeroReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 BuyHeroReq::heroid() const {
  return heroid_;
}
inline void BuyHeroReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// -------------------------------------------------------------------

// BuyHeroResp

// required .ProtoHero.HeroBaseInfoCPP hero = 1;
inline bool BuyHeroResp::has_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyHeroResp::set_has_hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyHeroResp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyHeroResp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& BuyHeroResp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* BuyHeroResp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* BuyHeroResp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool BuyHeroResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyHeroResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyHeroResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyHeroResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyHeroResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyHeroResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyHeroResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// UpgradeHeroByCoinReq

// required uint32 heroid = 1;
inline bool UpgradeHeroByCoinReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeHeroByCoinReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeHeroByCoinReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeHeroByCoinReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 UpgradeHeroByCoinReq::heroid() const {
  return heroid_;
}
inline void UpgradeHeroByCoinReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 oneclick = 2;
inline bool UpgradeHeroByCoinReq::has_oneclick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeHeroByCoinReq::set_has_oneclick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeHeroByCoinReq::clear_has_oneclick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeHeroByCoinReq::clear_oneclick() {
  oneclick_ = 0u;
  clear_has_oneclick();
}
inline ::google::protobuf::uint32 UpgradeHeroByCoinReq::oneclick() const {
  return oneclick_;
}
inline void UpgradeHeroByCoinReq::set_oneclick(::google::protobuf::uint32 value) {
  set_has_oneclick();
  oneclick_ = value;
}

// -------------------------------------------------------------------

// UpgradeHeroByCoinResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool UpgradeHeroByCoinResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeHeroByCoinResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeHeroByCoinResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeHeroByCoinResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UpgradeHeroByCoinResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeHeroByCoinResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UpgradeHeroByCoinResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoHero.HeroBaseInfoCPP hero = 2;
inline bool UpgradeHeroByCoinResp::has_hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeHeroByCoinResp::set_has_hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeHeroByCoinResp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeHeroByCoinResp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& UpgradeHeroByCoinResp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* UpgradeHeroByCoinResp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* UpgradeHeroByCoinResp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// UpGradeHeroSkillReq

// required uint32 heroid = 1;
inline bool UpGradeHeroSkillReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpGradeHeroSkillReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpGradeHeroSkillReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpGradeHeroSkillReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 UpGradeHeroSkillReq::heroid() const {
  return heroid_;
}
inline void UpGradeHeroSkillReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 skillid = 2;
inline bool UpGradeHeroSkillReq::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpGradeHeroSkillReq::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpGradeHeroSkillReq::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpGradeHeroSkillReq::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UpGradeHeroSkillReq::skillid() const {
  return skillid_;
}
inline void UpGradeHeroSkillReq::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// UpGradeHeroSkillResp

// required uint32 level = 1;
inline bool UpGradeHeroSkillResp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpGradeHeroSkillResp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpGradeHeroSkillResp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpGradeHeroSkillResp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UpGradeHeroSkillResp::level() const {
  return level_;
}
inline void UpGradeHeroSkillResp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool UpGradeHeroSkillResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpGradeHeroSkillResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpGradeHeroSkillResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpGradeHeroSkillResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UpGradeHeroSkillResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UpGradeHeroSkillResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UpGradeHeroSkillResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required uint32 battlePower = 3;
inline bool UpGradeHeroSkillResp::has_battlepower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpGradeHeroSkillResp::set_has_battlepower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpGradeHeroSkillResp::clear_has_battlepower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpGradeHeroSkillResp::clear_battlepower() {
  battlepower_ = 0u;
  clear_has_battlepower();
}
inline ::google::protobuf::uint32 UpGradeHeroSkillResp::battlepower() const {
  return battlepower_;
}
inline void UpGradeHeroSkillResp::set_battlepower(::google::protobuf::uint32 value) {
  set_has_battlepower();
  battlepower_ = value;
}

// -------------------------------------------------------------------

// UpGradeHeroStarReq

// required uint32 heroid = 1;
inline bool UpGradeHeroStarReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpGradeHeroStarReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpGradeHeroStarReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpGradeHeroStarReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 UpGradeHeroStarReq::heroid() const {
  return heroid_;
}
inline void UpGradeHeroStarReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 starid = 2;
inline bool UpGradeHeroStarReq::has_starid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpGradeHeroStarReq::set_has_starid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpGradeHeroStarReq::clear_has_starid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpGradeHeroStarReq::clear_starid() {
  starid_ = 0u;
  clear_has_starid();
}
inline ::google::protobuf::uint32 UpGradeHeroStarReq::starid() const {
  return starid_;
}
inline void UpGradeHeroStarReq::set_starid(::google::protobuf::uint32 value) {
  set_has_starid();
  starid_ = value;
}

// -------------------------------------------------------------------

// UpGradeHeroStarResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool UpGradeHeroStarResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpGradeHeroStarResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpGradeHeroStarResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpGradeHeroStarResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UpGradeHeroStarResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UpGradeHeroStarResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UpGradeHeroStarResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoHero.HeroBaseInfoCPP hero = 2;
inline bool UpGradeHeroStarResp::has_hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpGradeHeroStarResp::set_has_hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpGradeHeroStarResp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpGradeHeroStarResp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& UpGradeHeroStarResp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* UpGradeHeroStarResp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* UpGradeHeroStarResp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SetHeroReq

// required uint32 heroid = 1;
inline bool SetHeroReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetHeroReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetHeroReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetHeroReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 SetHeroReq::heroid() const {
  return heroid_;
}
inline void SetHeroReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// -------------------------------------------------------------------

// SetHeroResp

// -------------------------------------------------------------------

// ActArchiveChipReq

// required uint32 id = 1;
inline bool ActArchiveChipReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActArchiveChipReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActArchiveChipReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActArchiveChipReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActArchiveChipReq::id() const {
  return id_;
}
inline void ActArchiveChipReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 act = 2;
inline bool ActArchiveChipReq::has_act() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActArchiveChipReq::set_has_act() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActArchiveChipReq::clear_has_act() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActArchiveChipReq::clear_act() {
  act_ = 0u;
  clear_has_act();
}
inline ::google::protobuf::uint32 ActArchiveChipReq::act() const {
  return act_;
}
inline void ActArchiveChipReq::set_act(::google::protobuf::uint32 value) {
  set_has_act();
  act_ = value;
}

// -------------------------------------------------------------------

// ActArchiveChipResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ActArchiveChipResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActArchiveChipResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActArchiveChipResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActArchiveChipResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ActArchiveChipResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ActArchiveChipResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ActArchiveChipResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// optional .ProtoHero.HeroBaseInfoCPP hero = 2;
inline bool ActArchiveChipResp::has_hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActArchiveChipResp::set_has_hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActArchiveChipResp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActArchiveChipResp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ActArchiveChipResp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* ActArchiveChipResp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* ActArchiveChipResp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ArchiveRewardReq

// required uint32 id = 1;
inline bool ArchiveRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArchiveRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArchiveRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArchiveRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ArchiveRewardReq::id() const {
  return id_;
}
inline void ArchiveRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ArchiveRewardResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ArchiveRewardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArchiveRewardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArchiveRewardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArchiveRewardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ArchiveRewardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ArchiveRewardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ArchiveRewardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoActDragonBallReq

// required uint32 heroid = 1;
inline bool ProtoActDragonBallReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoActDragonBallReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoActDragonBallReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoActDragonBallReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 ProtoActDragonBallReq::heroid() const {
  return heroid_;
}
inline void ProtoActDragonBallReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 idx = 2;
inline bool ProtoActDragonBallReq::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoActDragonBallReq::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoActDragonBallReq::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoActDragonBallReq::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 ProtoActDragonBallReq::idx() const {
  return idx_;
}
inline void ProtoActDragonBallReq::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// ProtoActDragonBallResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoActDragonBallResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoActDragonBallResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoActDragonBallResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoActDragonBallResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoActDragonBallResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoActDragonBallResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoActDragonBallResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// required .ProtoHero.HeroBaseInfoCPP hero = 2;
inline bool ProtoActDragonBallResp::has_hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoActDragonBallResp::set_has_hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoActDragonBallResp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoActDragonBallResp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& ProtoActDragonBallResp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoActDragonBallResp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* ProtoActDragonBallResp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoBuyHeroShareRewardReq

// required uint32 heroid = 1;
inline bool ProtoBuyHeroShareRewardReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBuyHeroShareRewardReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBuyHeroShareRewardReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBuyHeroShareRewardReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 ProtoBuyHeroShareRewardReq::heroid() const {
  return heroid_;
}
inline void ProtoBuyHeroShareRewardReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// -------------------------------------------------------------------

// ProtoBuyHeroShareRewardResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ProtoBuyHeroShareRewardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBuyHeroShareRewardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoBuyHeroShareRewardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoBuyHeroShareRewardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ProtoBuyHeroShareRewardResp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoBuyHeroShareRewardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ProtoBuyHeroShareRewardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoHero

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoHero_2eproto__INCLUDED
