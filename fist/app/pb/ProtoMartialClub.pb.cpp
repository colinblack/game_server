// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoMartialClub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoMartialClub {

namespace {

const ::google::protobuf::Descriptor* MartialClubProp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialClubProp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MartialClubInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialClubInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MartialHeroBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialHeroBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MartialClubUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialClubUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MartialHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SingleMartialClub_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SingleMartialClub_reflection_ = NULL;
const ::google::protobuf::Descriptor* MartialClubGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MartialClubGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoOpenMartialClubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoOpenMartialClubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoOpenMartialClubResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoOpenMartialClubResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetOwnerClubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetOwnerClubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetOwnerClubResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetOwnerClubResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetPartTimeClubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetPartTimeClubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetPartTimeClubResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetPartTimeClubResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoPartimeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoPartimeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetPartTimeClubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetPartTimeClubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetPartTimeClubResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetPartTimeClubResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoSetHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoSetHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoSetHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoSetHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSSetHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSSetHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSSetHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSSetHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSSetHeroToBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSSetHeroToBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetInviteUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetInviteUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetInviteUserResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetInviteUserResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoInviteUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoInviteUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSInviteUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSInviteUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSInviteUserResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSInviteUserResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetIncomeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetIncomeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetIncomeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetIncomeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetOtherIncomeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetOtherIncomeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetOtherIncomeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetOtherIncomeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetOtherIncomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetOtherIncomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSGetOtherIncomeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSGetOtherIncomeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetMartialClubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetMartialClubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoGetMartialClubResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoGetMartialClubResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoUpdateLevelReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoUpdateLevelReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoUpdateLevelResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoUpdateLevelResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDelHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDelHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDelHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDelHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSDelHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSDelHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDelParttimerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDelParttimerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoDelParttimerResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoDelParttimerResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSDelParttimerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSDelParttimerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSDelParttimerToBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSDelParttimerToBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSDelParttimerResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSDelParttimerResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoChangeNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoChangeNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoCSMartialHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoCSMartialHeroInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoMartialClub_2eproto() {
  protobuf_AddDesc_ProtoMartialClub_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoMartialClub.proto");
  GOOGLE_CHECK(file != NULL);
  MartialClubProp_descriptor_ = file->message_type(0);
  static const int MartialClubProp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubProp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubProp, count_),
  };
  MartialClubProp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialClubProp_descriptor_,
      MartialClubProp::default_instance_,
      MartialClubProp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubProp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubProp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialClubProp));
  MartialClubInfo_descriptor_ = file->message_type(1);
  static const int MartialClubInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, nextts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, protectts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, martialname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, incomestartts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, coins_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, props_),
  };
  MartialClubInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialClubInfo_descriptor_,
      MartialClubInfo::default_instance_,
      MartialClubInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialClubInfo));
  MartialHeroBaseInfo_descriptor_ = file->message_type(2);
  static const int MartialHeroBaseInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, battlepower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, coins_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, startts_),
  };
  MartialHeroBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialHeroBaseInfo_descriptor_,
      MartialHeroBaseInfo::default_instance_,
      MartialHeroBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialHeroBaseInfo));
  MartialClubUserInfo_descriptor_ = file->message_type(3);
  static const int MartialClubUserInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, fig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, grade_),
  };
  MartialClubUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialClubUserInfo_descriptor_,
      MartialClubUserInfo::default_instance_,
      MartialClubUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialClubUserInfo));
  MartialHeroInfo_descriptor_ = file->message_type(4);
  static const int MartialHeroInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroInfo, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroInfo, hero_),
  };
  MartialHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialHeroInfo_descriptor_,
      MartialHeroInfo::default_instance_,
      MartialHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialHeroInfo));
  SingleMartialClub_descriptor_ = file->message_type(5);
  static const int SingleMartialClub_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleMartialClub, clubinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleMartialClub, heroinfo_),
  };
  SingleMartialClub_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SingleMartialClub_descriptor_,
      SingleMartialClub::default_instance_,
      SingleMartialClub_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleMartialClub, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleMartialClub, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SingleMartialClub));
  MartialClubGroup_descriptor_ = file->message_type(6);
  static const int MartialClubGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubGroup, clubs_),
  };
  MartialClubGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MartialClubGroup_descriptor_,
      MartialClubGroup::default_instance_,
      MartialClubGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MartialClubGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MartialClubGroup));
  ProtoOpenMartialClubReq_descriptor_ = file->message_type(7);
  static const int ProtoOpenMartialClubReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubReq, grade_),
  };
  ProtoOpenMartialClubReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoOpenMartialClubReq_descriptor_,
      ProtoOpenMartialClubReq::default_instance_,
      ProtoOpenMartialClubReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoOpenMartialClubReq));
  ProtoOpenMartialClubResp_descriptor_ = file->message_type(8);
  static const int ProtoOpenMartialClubResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubResp, nextts_),
  };
  ProtoOpenMartialClubResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoOpenMartialClubResp_descriptor_,
      ProtoOpenMartialClubResp::default_instance_,
      ProtoOpenMartialClubResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoOpenMartialClubResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoOpenMartialClubResp));
  ProtoGetOwnerClubReq_descriptor_ = file->message_type(9);
  static const int ProtoGetOwnerClubReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubReq, grade_),
  };
  ProtoGetOwnerClubReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetOwnerClubReq_descriptor_,
      ProtoGetOwnerClubReq::default_instance_,
      ProtoGetOwnerClubReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetOwnerClubReq));
  ProtoGetOwnerClubResp_descriptor_ = file->message_type(10);
  static const int ProtoGetOwnerClubResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubResp, info_),
  };
  ProtoGetOwnerClubResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetOwnerClubResp_descriptor_,
      ProtoGetOwnerClubResp::default_instance_,
      ProtoGetOwnerClubResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOwnerClubResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetOwnerClubResp));
  ProtoGetHeroReq_descriptor_ = file->message_type(11);
  static const int ProtoGetHeroReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroReq, owneruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroReq, grade_),
  };
  ProtoGetHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetHeroReq_descriptor_,
      ProtoGetHeroReq::default_instance_,
      ProtoGetHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetHeroReq));
  ProtoGetHeroResp_descriptor_ = file->message_type(12);
  static const int ProtoGetHeroResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroResp, hero_),
  };
  ProtoGetHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetHeroResp_descriptor_,
      ProtoGetHeroResp::default_instance_,
      ProtoGetHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetHeroResp));
  ProtoCSGetHeroReq_descriptor_ = file->message_type(13);
  static const int ProtoCSGetHeroReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroReq, owneruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroReq, grade_),
  };
  ProtoCSGetHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetHeroReq_descriptor_,
      ProtoCSGetHeroReq::default_instance_,
      ProtoCSGetHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetHeroReq));
  ProtoCSGetHeroResp_descriptor_ = file->message_type(14);
  static const int ProtoCSGetHeroResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroResp, hero_),
  };
  ProtoCSGetHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetHeroResp_descriptor_,
      ProtoCSGetHeroResp::default_instance_,
      ProtoCSGetHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetHeroResp));
  ProtoGetPartTimeClubReq_descriptor_ = file->message_type(15);
  static const int ProtoGetPartTimeClubReq_offsets_[1] = {
  };
  ProtoGetPartTimeClubReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetPartTimeClubReq_descriptor_,
      ProtoGetPartTimeClubReq::default_instance_,
      ProtoGetPartTimeClubReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetPartTimeClubReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetPartTimeClubReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetPartTimeClubReq));
  ProtoGetPartTimeClubResp_descriptor_ = file->message_type(16);
  static const int ProtoGetPartTimeClubResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetPartTimeClubResp, info_),
  };
  ProtoGetPartTimeClubResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetPartTimeClubResp_descriptor_,
      ProtoGetPartTimeClubResp::default_instance_,
      ProtoGetPartTimeClubResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetPartTimeClubResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetPartTimeClubResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetPartTimeClubResp));
  ProtoPartimeInfo_descriptor_ = file->message_type(17);
  static const int ProtoPartimeInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPartimeInfo, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPartimeInfo, heroinfo_),
  };
  ProtoPartimeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoPartimeInfo_descriptor_,
      ProtoPartimeInfo::default_instance_,
      ProtoPartimeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPartimeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPartimeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoPartimeInfo));
  ProtoCSGetPartTimeClubReq_descriptor_ = file->message_type(18);
  static const int ProtoCSGetPartTimeClubReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubReq, clubinfo_),
  };
  ProtoCSGetPartTimeClubReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetPartTimeClubReq_descriptor_,
      ProtoCSGetPartTimeClubReq::default_instance_,
      ProtoCSGetPartTimeClubReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetPartTimeClubReq));
  ProtoCSGetPartTimeClubResp_descriptor_ = file->message_type(19);
  static const int ProtoCSGetPartTimeClubResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubResp, info_),
  };
  ProtoCSGetPartTimeClubResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetPartTimeClubResp_descriptor_,
      ProtoCSGetPartTimeClubResp::default_instance_,
      ProtoCSGetPartTimeClubResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetPartTimeClubResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetPartTimeClubResp));
  ProtoSetHeroReq_descriptor_ = file->message_type(20);
  static const int ProtoSetHeroReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, detachuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, slot_),
  };
  ProtoSetHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoSetHeroReq_descriptor_,
      ProtoSetHeroReq::default_instance_,
      ProtoSetHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoSetHeroReq));
  ProtoSetHeroResp_descriptor_ = file->message_type(21);
  static const int ProtoSetHeroResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroResp, sethero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroResp, incomestartts_),
  };
  ProtoSetHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoSetHeroResp_descriptor_,
      ProtoSetHeroResp::default_instance_,
      ProtoSetHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSetHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoSetHeroResp));
  ProtoCSSetHeroReq_descriptor_ = file->message_type(22);
  static const int ProtoCSSetHeroReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, detachuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, sethero_),
  };
  ProtoCSSetHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSSetHeroReq_descriptor_,
      ProtoCSSetHeroReq::default_instance_,
      ProtoCSSetHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSSetHeroReq));
  ProtoCSSetHeroResp_descriptor_ = file->message_type(23);
  static const int ProtoCSSetHeroResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroResp, sethero_),
  };
  ProtoCSSetHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSSetHeroResp_descriptor_,
      ProtoCSSetHeroResp::default_instance_,
      ProtoCSSetHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSSetHeroResp));
  ProtoCSSetHeroToBattleReq_descriptor_ = file->message_type(24);
  static const int ProtoCSSetHeroToBattleReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, heronum_),
  };
  ProtoCSSetHeroToBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSSetHeroToBattleReq_descriptor_,
      ProtoCSSetHeroToBattleReq::default_instance_,
      ProtoCSSetHeroToBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSSetHeroToBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSSetHeroToBattleReq));
  ProtoGetInviteUserReq_descriptor_ = file->message_type(25);
  static const int ProtoGetInviteUserReq_offsets_[1] = {
  };
  ProtoGetInviteUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetInviteUserReq_descriptor_,
      ProtoGetInviteUserReq::default_instance_,
      ProtoGetInviteUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetInviteUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetInviteUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetInviteUserReq));
  ProtoGetInviteUserResp_descriptor_ = file->message_type(26);
  static const int ProtoGetInviteUserResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetInviteUserResp, users_),
  };
  ProtoGetInviteUserResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetInviteUserResp_descriptor_,
      ProtoGetInviteUserResp::default_instance_,
      ProtoGetInviteUserResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetInviteUserResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetInviteUserResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetInviteUserResp));
  ProtoInviteUserReq_descriptor_ = file->message_type(27);
  static const int ProtoInviteUserReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoInviteUserReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoInviteUserReq, martialgrade_),
  };
  ProtoInviteUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoInviteUserReq_descriptor_,
      ProtoInviteUserReq::default_instance_,
      ProtoInviteUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoInviteUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoInviteUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoInviteUserReq));
  ProtoCSInviteUserReq_descriptor_ = file->message_type(28);
  static const int ProtoCSInviteUserReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, martialgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, mylevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, myfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, myname_),
  };
  ProtoCSInviteUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSInviteUserReq_descriptor_,
      ProtoCSInviteUserReq::default_instance_,
      ProtoCSInviteUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSInviteUserReq));
  ProtoCSInviteUserResp_descriptor_ = file->message_type(29);
  static const int ProtoCSInviteUserResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserResp, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserResp, martialgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserResp, slot_),
  };
  ProtoCSInviteUserResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSInviteUserResp_descriptor_,
      ProtoCSInviteUserResp::default_instance_,
      ProtoCSInviteUserResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSInviteUserResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSInviteUserResp));
  ProtoGetIncomeReq_descriptor_ = file->message_type(30);
  static const int ProtoGetIncomeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeReq, martialgrade_),
  };
  ProtoGetIncomeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetIncomeReq_descriptor_,
      ProtoGetIncomeReq::default_instance_,
      ProtoGetIncomeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetIncomeReq));
  ProtoGetIncomeResp_descriptor_ = file->message_type(31);
  static const int ProtoGetIncomeResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeResp, commons_),
  };
  ProtoGetIncomeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetIncomeResp_descriptor_,
      ProtoGetIncomeResp::default_instance_,
      ProtoGetIncomeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetIncomeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetIncomeResp));
  ProtoGetOtherIncomeReq_descriptor_ = file->message_type(32);
  static const int ProtoGetOtherIncomeReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeReq, slot_),
  };
  ProtoGetOtherIncomeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetOtherIncomeReq_descriptor_,
      ProtoGetOtherIncomeReq::default_instance_,
      ProtoGetOtherIncomeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetOtherIncomeReq));
  ProtoGetOtherIncomeResp_descriptor_ = file->message_type(33);
  static const int ProtoGetOtherIncomeResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeResp, commons_),
  };
  ProtoGetOtherIncomeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetOtherIncomeResp_descriptor_,
      ProtoGetOtherIncomeResp::default_instance_,
      ProtoGetOtherIncomeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetOtherIncomeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetOtherIncomeResp));
  ProtoCSGetOtherIncomReq_descriptor_ = file->message_type(34);
  static const int ProtoCSGetOtherIncomReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, slot_),
  };
  ProtoCSGetOtherIncomReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetOtherIncomReq_descriptor_,
      ProtoCSGetOtherIncomReq::default_instance_,
      ProtoCSGetOtherIncomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetOtherIncomReq));
  ProtoCSGetOtherIncomeResp_descriptor_ = file->message_type(35);
  static const int ProtoCSGetOtherIncomeResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomeResp, commons_),
  };
  ProtoCSGetOtherIncomeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSGetOtherIncomeResp_descriptor_,
      ProtoCSGetOtherIncomeResp::default_instance_,
      ProtoCSGetOtherIncomeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSGetOtherIncomeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSGetOtherIncomeResp));
  ProtoGetMartialClubReq_descriptor_ = file->message_type(36);
  static const int ProtoGetMartialClubReq_offsets_[1] = {
  };
  ProtoGetMartialClubReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetMartialClubReq_descriptor_,
      ProtoGetMartialClubReq::default_instance_,
      ProtoGetMartialClubReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetMartialClubReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetMartialClubReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetMartialClubReq));
  ProtoGetMartialClubResp_descriptor_ = file->message_type(37);
  static const int ProtoGetMartialClubResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetMartialClubResp, group_),
  };
  ProtoGetMartialClubResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoGetMartialClubResp_descriptor_,
      ProtoGetMartialClubResp::default_instance_,
      ProtoGetMartialClubResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetMartialClubResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoGetMartialClubResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoGetMartialClubResp));
  ProtoUpdateLevelReq_descriptor_ = file->message_type(38);
  static const int ProtoUpdateLevelReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelReq, martialgrade_),
  };
  ProtoUpdateLevelReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoUpdateLevelReq_descriptor_,
      ProtoUpdateLevelReq::default_instance_,
      ProtoUpdateLevelReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoUpdateLevelReq));
  ProtoUpdateLevelResp_descriptor_ = file->message_type(39);
  static const int ProtoUpdateLevelResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelResp, nextts_),
  };
  ProtoUpdateLevelResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoUpdateLevelResp_descriptor_,
      ProtoUpdateLevelResp::default_instance_,
      ProtoUpdateLevelResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoUpdateLevelResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoUpdateLevelResp));
  ProtoDelHeroReq_descriptor_ = file->message_type(40);
  static const int ProtoDelHeroReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroReq, slot_),
  };
  ProtoDelHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDelHeroReq_descriptor_,
      ProtoDelHeroReq::default_instance_,
      ProtoDelHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDelHeroReq));
  ProtoDelHeroResp_descriptor_ = file->message_type(41);
  static const int ProtoDelHeroResp_offsets_[1] = {
  };
  ProtoDelHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDelHeroResp_descriptor_,
      ProtoDelHeroResp::default_instance_,
      ProtoDelHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDelHeroResp));
  ProtoCSDelHeroReq_descriptor_ = file->message_type(42);
  static const int ProtoCSDelHeroReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelHeroReq, owneruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelHeroReq, heroid_),
  };
  ProtoCSDelHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSDelHeroReq_descriptor_,
      ProtoCSDelHeroReq::default_instance_,
      ProtoCSDelHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSDelHeroReq));
  ProtoDelParttimerReq_descriptor_ = file->message_type(43);
  static const int ProtoDelParttimerReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, detachuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, slot_),
  };
  ProtoDelParttimerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDelParttimerReq_descriptor_,
      ProtoDelParttimerReq::default_instance_,
      ProtoDelParttimerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDelParttimerReq));
  ProtoDelParttimerResp_descriptor_ = file->message_type(44);
  static const int ProtoDelParttimerResp_offsets_[1] = {
  };
  ProtoDelParttimerResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoDelParttimerResp_descriptor_,
      ProtoDelParttimerResp::default_instance_,
      ProtoDelParttimerResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDelParttimerResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoDelParttimerResp));
  ProtoCSDelParttimerReq_descriptor_ = file->message_type(45);
  static const int ProtoCSDelParttimerReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, detachuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, heroid_),
  };
  ProtoCSDelParttimerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSDelParttimerReq_descriptor_,
      ProtoCSDelParttimerReq::default_instance_,
      ProtoCSDelParttimerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSDelParttimerReq));
  ProtoCSDelParttimerToBattleReq_descriptor_ = file->message_type(46);
  static const int ProtoCSDelParttimerToBattleReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerToBattleReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerToBattleReq, heroid_),
  };
  ProtoCSDelParttimerToBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSDelParttimerToBattleReq_descriptor_,
      ProtoCSDelParttimerToBattleReq::default_instance_,
      ProtoCSDelParttimerToBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerToBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerToBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSDelParttimerToBattleReq));
  ProtoCSDelParttimerResp_descriptor_ = file->message_type(47);
  static const int ProtoCSDelParttimerResp_offsets_[1] = {
  };
  ProtoCSDelParttimerResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSDelParttimerResp_descriptor_,
      ProtoCSDelParttimerResp::default_instance_,
      ProtoCSDelParttimerResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSDelParttimerResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSDelParttimerResp));
  ProtoChangeNameReq_descriptor_ = file->message_type(48);
  static const int ProtoChangeNameReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoChangeNameReq, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoChangeNameReq, name_),
  };
  ProtoChangeNameReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoChangeNameReq_descriptor_,
      ProtoChangeNameReq::default_instance_,
      ProtoChangeNameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoChangeNameReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoChangeNameReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoChangeNameReq));
  ProtoCSMartialHeroInfo_descriptor_ = file->message_type(49);
  static const int ProtoCSMartialHeroInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSMartialHeroInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSMartialHeroInfo, attr_),
  };
  ProtoCSMartialHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoCSMartialHeroInfo_descriptor_,
      ProtoCSMartialHeroInfo::default_instance_,
      ProtoCSMartialHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSMartialHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoCSMartialHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoCSMartialHeroInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoMartialClub_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialClubProp_descriptor_, &MartialClubProp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialClubInfo_descriptor_, &MartialClubInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialHeroBaseInfo_descriptor_, &MartialHeroBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialClubUserInfo_descriptor_, &MartialClubUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialHeroInfo_descriptor_, &MartialHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SingleMartialClub_descriptor_, &SingleMartialClub::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MartialClubGroup_descriptor_, &MartialClubGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoOpenMartialClubReq_descriptor_, &ProtoOpenMartialClubReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoOpenMartialClubResp_descriptor_, &ProtoOpenMartialClubResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetOwnerClubReq_descriptor_, &ProtoGetOwnerClubReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetOwnerClubResp_descriptor_, &ProtoGetOwnerClubResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetHeroReq_descriptor_, &ProtoGetHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetHeroResp_descriptor_, &ProtoGetHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetHeroReq_descriptor_, &ProtoCSGetHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetHeroResp_descriptor_, &ProtoCSGetHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetPartTimeClubReq_descriptor_, &ProtoGetPartTimeClubReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetPartTimeClubResp_descriptor_, &ProtoGetPartTimeClubResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoPartimeInfo_descriptor_, &ProtoPartimeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetPartTimeClubReq_descriptor_, &ProtoCSGetPartTimeClubReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetPartTimeClubResp_descriptor_, &ProtoCSGetPartTimeClubResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoSetHeroReq_descriptor_, &ProtoSetHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoSetHeroResp_descriptor_, &ProtoSetHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSSetHeroReq_descriptor_, &ProtoCSSetHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSSetHeroResp_descriptor_, &ProtoCSSetHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSSetHeroToBattleReq_descriptor_, &ProtoCSSetHeroToBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetInviteUserReq_descriptor_, &ProtoGetInviteUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetInviteUserResp_descriptor_, &ProtoGetInviteUserResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoInviteUserReq_descriptor_, &ProtoInviteUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSInviteUserReq_descriptor_, &ProtoCSInviteUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSInviteUserResp_descriptor_, &ProtoCSInviteUserResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetIncomeReq_descriptor_, &ProtoGetIncomeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetIncomeResp_descriptor_, &ProtoGetIncomeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetOtherIncomeReq_descriptor_, &ProtoGetOtherIncomeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetOtherIncomeResp_descriptor_, &ProtoGetOtherIncomeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetOtherIncomReq_descriptor_, &ProtoCSGetOtherIncomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSGetOtherIncomeResp_descriptor_, &ProtoCSGetOtherIncomeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetMartialClubReq_descriptor_, &ProtoGetMartialClubReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoGetMartialClubResp_descriptor_, &ProtoGetMartialClubResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoUpdateLevelReq_descriptor_, &ProtoUpdateLevelReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoUpdateLevelResp_descriptor_, &ProtoUpdateLevelResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDelHeroReq_descriptor_, &ProtoDelHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDelHeroResp_descriptor_, &ProtoDelHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSDelHeroReq_descriptor_, &ProtoCSDelHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDelParttimerReq_descriptor_, &ProtoDelParttimerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoDelParttimerResp_descriptor_, &ProtoDelParttimerResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSDelParttimerReq_descriptor_, &ProtoCSDelParttimerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSDelParttimerToBattleReq_descriptor_, &ProtoCSDelParttimerToBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSDelParttimerResp_descriptor_, &ProtoCSDelParttimerResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoChangeNameReq_descriptor_, &ProtoChangeNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoCSMartialHeroInfo_descriptor_, &ProtoCSMartialHeroInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoMartialClub_2eproto() {
  delete MartialClubProp::default_instance_;
  delete MartialClubProp_reflection_;
  delete MartialClubInfo::default_instance_;
  delete MartialClubInfo_reflection_;
  delete MartialHeroBaseInfo::default_instance_;
  delete MartialHeroBaseInfo_reflection_;
  delete MartialClubUserInfo::default_instance_;
  delete MartialClubUserInfo_reflection_;
  delete MartialHeroInfo::default_instance_;
  delete MartialHeroInfo_reflection_;
  delete SingleMartialClub::default_instance_;
  delete SingleMartialClub_reflection_;
  delete MartialClubGroup::default_instance_;
  delete MartialClubGroup_reflection_;
  delete ProtoOpenMartialClubReq::default_instance_;
  delete ProtoOpenMartialClubReq_reflection_;
  delete ProtoOpenMartialClubResp::default_instance_;
  delete ProtoOpenMartialClubResp_reflection_;
  delete ProtoGetOwnerClubReq::default_instance_;
  delete ProtoGetOwnerClubReq_reflection_;
  delete ProtoGetOwnerClubResp::default_instance_;
  delete ProtoGetOwnerClubResp_reflection_;
  delete ProtoGetHeroReq::default_instance_;
  delete ProtoGetHeroReq_reflection_;
  delete ProtoGetHeroResp::default_instance_;
  delete ProtoGetHeroResp_reflection_;
  delete ProtoCSGetHeroReq::default_instance_;
  delete ProtoCSGetHeroReq_reflection_;
  delete ProtoCSGetHeroResp::default_instance_;
  delete ProtoCSGetHeroResp_reflection_;
  delete ProtoGetPartTimeClubReq::default_instance_;
  delete ProtoGetPartTimeClubReq_reflection_;
  delete ProtoGetPartTimeClubResp::default_instance_;
  delete ProtoGetPartTimeClubResp_reflection_;
  delete ProtoPartimeInfo::default_instance_;
  delete ProtoPartimeInfo_reflection_;
  delete ProtoCSGetPartTimeClubReq::default_instance_;
  delete ProtoCSGetPartTimeClubReq_reflection_;
  delete ProtoCSGetPartTimeClubResp::default_instance_;
  delete ProtoCSGetPartTimeClubResp_reflection_;
  delete ProtoSetHeroReq::default_instance_;
  delete ProtoSetHeroReq_reflection_;
  delete ProtoSetHeroResp::default_instance_;
  delete ProtoSetHeroResp_reflection_;
  delete ProtoCSSetHeroReq::default_instance_;
  delete ProtoCSSetHeroReq_reflection_;
  delete ProtoCSSetHeroResp::default_instance_;
  delete ProtoCSSetHeroResp_reflection_;
  delete ProtoCSSetHeroToBattleReq::default_instance_;
  delete ProtoCSSetHeroToBattleReq_reflection_;
  delete ProtoGetInviteUserReq::default_instance_;
  delete ProtoGetInviteUserReq_reflection_;
  delete ProtoGetInviteUserResp::default_instance_;
  delete ProtoGetInviteUserResp_reflection_;
  delete ProtoInviteUserReq::default_instance_;
  delete ProtoInviteUserReq_reflection_;
  delete ProtoCSInviteUserReq::default_instance_;
  delete ProtoCSInviteUserReq_reflection_;
  delete ProtoCSInviteUserResp::default_instance_;
  delete ProtoCSInviteUserResp_reflection_;
  delete ProtoGetIncomeReq::default_instance_;
  delete ProtoGetIncomeReq_reflection_;
  delete ProtoGetIncomeResp::default_instance_;
  delete ProtoGetIncomeResp_reflection_;
  delete ProtoGetOtherIncomeReq::default_instance_;
  delete ProtoGetOtherIncomeReq_reflection_;
  delete ProtoGetOtherIncomeResp::default_instance_;
  delete ProtoGetOtherIncomeResp_reflection_;
  delete ProtoCSGetOtherIncomReq::default_instance_;
  delete ProtoCSGetOtherIncomReq_reflection_;
  delete ProtoCSGetOtherIncomeResp::default_instance_;
  delete ProtoCSGetOtherIncomeResp_reflection_;
  delete ProtoGetMartialClubReq::default_instance_;
  delete ProtoGetMartialClubReq_reflection_;
  delete ProtoGetMartialClubResp::default_instance_;
  delete ProtoGetMartialClubResp_reflection_;
  delete ProtoUpdateLevelReq::default_instance_;
  delete ProtoUpdateLevelReq_reflection_;
  delete ProtoUpdateLevelResp::default_instance_;
  delete ProtoUpdateLevelResp_reflection_;
  delete ProtoDelHeroReq::default_instance_;
  delete ProtoDelHeroReq_reflection_;
  delete ProtoDelHeroResp::default_instance_;
  delete ProtoDelHeroResp_reflection_;
  delete ProtoCSDelHeroReq::default_instance_;
  delete ProtoCSDelHeroReq_reflection_;
  delete ProtoDelParttimerReq::default_instance_;
  delete ProtoDelParttimerReq_reflection_;
  delete ProtoDelParttimerResp::default_instance_;
  delete ProtoDelParttimerResp_reflection_;
  delete ProtoCSDelParttimerReq::default_instance_;
  delete ProtoCSDelParttimerReq_reflection_;
  delete ProtoCSDelParttimerToBattleReq::default_instance_;
  delete ProtoCSDelParttimerToBattleReq_reflection_;
  delete ProtoCSDelParttimerResp::default_instance_;
  delete ProtoCSDelParttimerResp_reflection_;
  delete ProtoChangeNameReq::default_instance_;
  delete ProtoChangeNameReq_reflection_;
  delete ProtoCSMartialHeroInfo::default_instance_;
  delete ProtoCSMartialHeroInfo_reflection_;
}

void protobuf_AddDesc_ProtoMartialClub_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoHero::protobuf_AddDesc_ProtoHero_2eproto();
  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026ProtoMartialClub.proto\022\020ProtoMartialCl"
    "ub\032\017ProtoHero.proto\032\020DataCommon.proto\",\n"
    "\017MartialClubProp\022\n\n\002id\030\001 \002(\r\022\r\n\005count\030\002 "
    "\002(\r\"\314\001\n\017MartialClubInfo\022\013\n\003uid\030\001 \002(\r\022\r\n\005"
    "grade\030\002 \002(\r\022\r\n\005level\030\003 \002(\r\022\016\n\006nextTs\030\004 \002"
    "(\r\022\021\n\tprotectTs\030\005 \002(\r\022\023\n\013martialName\030\006 \002"
    "(\t\022\025\n\rincomeStartTs\030\007 \002(\r\022\r\n\005coins\030\010 \002(\r"
    "\0220\n\005props\030\t \003(\0132!.ProtoMartialClub.Marti"
    "alClubProp\"h\n\023MartialHeroBaseInfo\022\016\n\006her"
    "oid\030\001 \001(\r\022\014\n\004slot\030\002 \001(\r\022\023\n\013battlePower\030\003"
    " \001(\r\022\r\n\005coins\030\004 \001(\r\022\017\n\007startTs\030\005 \001(\r\"[\n\023"
    "MartialClubUserInfo\022\013\n\003uid\030\001 \002(\r\022\014\n\004name"
    "\030\002 \002(\t\022\013\n\003fig\030\003 \002(\t\022\r\n\005level\030\004 \001(\r\022\r\n\005gr"
    "ade\030\005 \001(\r\"{\n\017MartialHeroInfo\0223\n\004user\030\001 \002"
    "(\0132%.ProtoMartialClub.MartialClubUserInf"
    "o\0223\n\004hero\030\002 \002(\0132%.ProtoMartialClub.Marti"
    "alHeroBaseInfo\"}\n\021SingleMartialClub\0223\n\010c"
    "lubInfo\030\001 \002(\0132!.ProtoMartialClub.Martial"
    "ClubInfo\0223\n\010heroInfo\030\002 \003(\0132!.ProtoMartia"
    "lClub.MartialHeroInfo\"F\n\020MartialClubGrou"
    "p\0222\n\005clubs\030\001 \003(\0132#.ProtoMartialClub.Sing"
    "leMartialClub\"(\n\027ProtoOpenMartialClubReq"
    "\022\r\n\005grade\030\001 \002(\r\"*\n\030ProtoOpenMartialClubR"
    "esp\022\016\n\006nextTs\030\001 \002(\r\"%\n\024ProtoGetOwnerClub"
    "Req\022\r\n\005grade\030\001 \002(\r\"J\n\025ProtoGetOwnerClubR"
    "esp\0221\n\004info\030\001 \002(\0132#.ProtoMartialClub.Sin"
    "gleMartialClub\"2\n\017ProtoGetHeroReq\022\020\n\010own"
    "erUid\030\001 \002(\r\022\r\n\005grade\030\002 \002(\r\"C\n\020ProtoGetHe"
    "roResp\022/\n\004hero\030\001 \003(\0132!.ProtoMartialClub."
    "MartialHeroInfo\"C\n\021ProtoCSGetHeroReq\022\r\n\005"
    "myUid\030\001 \002(\r\022\020\n\010ownerUid\030\002 \002(\r\022\r\n\005grade\030\003"
    " \002(\r\"E\n\022ProtoCSGetHeroResp\022/\n\004hero\030\001 \003(\013"
    "2!.ProtoMartialClub.MartialHeroInfo\"\031\n\027P"
    "rotoGetPartTimeClubReq\"M\n\030ProtoGetPartTi"
    "meClubResp\0221\n\004info\030\001 \003(\0132#.ProtoMartialC"
    "lub.SingleMartialClub\"Z\n\020ProtoPartimeInf"
    "o\022\r\n\005grade\030\001 \002(\r\0227\n\010heroInfo\030\002 \002(\0132%.Pro"
    "toMartialClub.MartialHeroBaseInfo\"p\n\031Pro"
    "toCSGetPartTimeClubReq\022\r\n\005myUid\030\001 \002(\r\022\016\n"
    "\006othUid\030\002 \002(\r\0224\n\010clubInfo\030\003 \003(\0132\".ProtoM"
    "artialClub.ProtoPartimeInfo\"O\n\032ProtoCSGe"
    "tPartTimeClubResp\0221\n\004info\030\001 \003(\0132#.ProtoM"
    "artialClub.SingleMartialClub\"Q\n\017ProtoSet"
    "HeroReq\022\021\n\tdetachUid\030\001 \001(\r\022\r\n\005grade\030\002 \001("
    "\r\022\016\n\006heroId\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\"]\n\020Proto"
    "SetHeroResp\0222\n\007setHero\030\001 \002(\0132!.ProtoMart"
    "ialClub.MartialHeroInfo\022\025\n\rincomeStartTs"
    "\030\002 \001(\r\"\206\001\n\021ProtoCSSetHeroReq\022\r\n\005myUid\030\001 "
    "\002(\r\022\021\n\tdetachUid\030\002 \002(\r\022\r\n\005grade\030\003 \002(\r\022\014\n"
    "\004slot\030\004 \002(\r\0222\n\007setHero\030\005 \002(\0132!.ProtoMart"
    "ialClub.MartialHeroInfo\"H\n\022ProtoCSSetHer"
    "oResp\0222\n\007setHero\030\001 \002(\0132!.ProtoMartialClu"
    "b.MartialHeroInfo\"x\n\031ProtoCSSetHeroToBat"
    "tleReq\022\r\n\005myUid\030\001 \002(\r\022\016\n\006othUid\030\002 \002(\r\022\016\n"
    "\006heroId\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\022\r\n\005level\030\005 \002"
    "(\r\022\017\n\007heroNum\030\006 \002(\r\"\027\n\025ProtoGetInviteUse"
    "rReq\"N\n\026ProtoGetInviteUserResp\0224\n\005users\030"
    "\001 \003(\0132%.ProtoMartialClub.MartialClubUser"
    "Info\":\n\022ProtoInviteUserReq\022\016\n\006othUid\030\001 \002"
    "(\r\022\024\n\014martialGrade\030\002 \002(\r\"\211\001\n\024ProtoCSInvi"
    "teUserReq\022\r\n\005myUid\030\001 \002(\r\022\016\n\006othUid\030\002 \002(\r"
    "\022\014\n\004slot\030\003 \002(\r\022\024\n\014martialGrade\030\004 \002(\r\022\017\n\007"
    "myLevel\030\005 \002(\r\022\r\n\005myFig\030\006 \002(\t\022\016\n\006myName\030\007"
    " \002(\t\"J\n\025ProtoCSInviteUserResp\022\r\n\005myUid\030\001"
    " \002(\r\022\024\n\014martialGrade\030\002 \002(\r\022\014\n\004slot\030\003 \002(\r"
    "\")\n\021ProtoGetIncomeReq\022\024\n\014martialGrade\030\001 "
    "\002(\r\"A\n\022ProtoGetIncomeResp\022+\n\007commons\030\001 \002"
    "(\0132\032.DataCommon.CommonItemsCPP\"F\n\026ProtoG"
    "etOtherIncomeReq\022\016\n\006othUid\030\001 \002(\r\022\016\n\006hero"
    "Id\030\002 \002(\r\022\014\n\004slot\030\003 \002(\r\"F\n\027ProtoGetOtherI"
    "ncomeResp\022+\n\007commons\030\001 \002(\0132\032.DataCommon."
    "CommonItemsCPP\"V\n\027ProtoCSGetOtherIncomRe"
    "q\022\r\n\005myUid\030\001 \002(\r\022\016\n\006othUid\030\002 \002(\r\022\016\n\006hero"
    "Id\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\"H\n\031ProtoCSGetOthe"
    "rIncomeResp\022+\n\007commons\030\001 \002(\0132\032.DataCommo"
    "n.CommonItemsCPP\"\030\n\026ProtoGetMartialClubR"
    "eq\"L\n\027ProtoGetMartialClubResp\0221\n\005group\030\001"
    " \003(\0132\".ProtoMartialClub.MartialClubGroup"
    "\"+\n\023ProtoUpdateLevelReq\022\024\n\014martialGrade\030"
    "\001 \002(\r\"&\n\024ProtoUpdateLevelResp\022\016\n\006nextTs\030"
    "\001 \002(\r\">\n\017ProtoDelHeroReq\022\r\n\005grade\030\002 \002(\r\022"
    "\016\n\006heroId\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\"\022\n\020ProtoDe"
    "lHeroResp\"5\n\021ProtoCSDelHeroReq\022\020\n\010ownerU"
    "id\030\001 \002(\r\022\016\n\006heroId\030\002 \002(\r\"V\n\024ProtoDelPart"
    "timerReq\022\021\n\tdetachUid\030\001 \001(\r\022\r\n\005grade\030\002 \001"
    "(\r\022\016\n\006heroId\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\"\027\n\025Prot"
    "oDelParttimerResp\"g\n\026ProtoCSDelParttimer"
    "Req\022\r\n\005myUid\030\001 \002(\r\022\021\n\tdetachUid\030\002 \002(\r\022\r\n"
    "\005grade\030\003 \002(\r\022\014\n\004slot\030\004 \002(\r\022\016\n\006heroId\030\005 \002"
    "(\r\"\?\n\036ProtoCSDelParttimerToBattleReq\022\r\n\005"
    "myUid\030\001 \002(\r\022\016\n\006heroId\030\002 \002(\r\"\031\n\027ProtoCSDe"
    "lParttimerResp\"1\n\022ProtoChangeNameReq\022\r\n\005"
    "grade\030\001 \002(\r\022\014\n\004name\030\002 \002(\t\"O\n\026ProtoCSMart"
    "ialHeroInfo\022\013\n\003uid\030\001 \002(\r\022(\n\004attr\030\002 \003(\0132\032"
    ".ProtoHero.HeroBaseInfoCPP", 3786);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoMartialClub.proto", &protobuf_RegisterTypes);
  MartialClubProp::default_instance_ = new MartialClubProp();
  MartialClubInfo::default_instance_ = new MartialClubInfo();
  MartialHeroBaseInfo::default_instance_ = new MartialHeroBaseInfo();
  MartialClubUserInfo::default_instance_ = new MartialClubUserInfo();
  MartialHeroInfo::default_instance_ = new MartialHeroInfo();
  SingleMartialClub::default_instance_ = new SingleMartialClub();
  MartialClubGroup::default_instance_ = new MartialClubGroup();
  ProtoOpenMartialClubReq::default_instance_ = new ProtoOpenMartialClubReq();
  ProtoOpenMartialClubResp::default_instance_ = new ProtoOpenMartialClubResp();
  ProtoGetOwnerClubReq::default_instance_ = new ProtoGetOwnerClubReq();
  ProtoGetOwnerClubResp::default_instance_ = new ProtoGetOwnerClubResp();
  ProtoGetHeroReq::default_instance_ = new ProtoGetHeroReq();
  ProtoGetHeroResp::default_instance_ = new ProtoGetHeroResp();
  ProtoCSGetHeroReq::default_instance_ = new ProtoCSGetHeroReq();
  ProtoCSGetHeroResp::default_instance_ = new ProtoCSGetHeroResp();
  ProtoGetPartTimeClubReq::default_instance_ = new ProtoGetPartTimeClubReq();
  ProtoGetPartTimeClubResp::default_instance_ = new ProtoGetPartTimeClubResp();
  ProtoPartimeInfo::default_instance_ = new ProtoPartimeInfo();
  ProtoCSGetPartTimeClubReq::default_instance_ = new ProtoCSGetPartTimeClubReq();
  ProtoCSGetPartTimeClubResp::default_instance_ = new ProtoCSGetPartTimeClubResp();
  ProtoSetHeroReq::default_instance_ = new ProtoSetHeroReq();
  ProtoSetHeroResp::default_instance_ = new ProtoSetHeroResp();
  ProtoCSSetHeroReq::default_instance_ = new ProtoCSSetHeroReq();
  ProtoCSSetHeroResp::default_instance_ = new ProtoCSSetHeroResp();
  ProtoCSSetHeroToBattleReq::default_instance_ = new ProtoCSSetHeroToBattleReq();
  ProtoGetInviteUserReq::default_instance_ = new ProtoGetInviteUserReq();
  ProtoGetInviteUserResp::default_instance_ = new ProtoGetInviteUserResp();
  ProtoInviteUserReq::default_instance_ = new ProtoInviteUserReq();
  ProtoCSInviteUserReq::default_instance_ = new ProtoCSInviteUserReq();
  ProtoCSInviteUserResp::default_instance_ = new ProtoCSInviteUserResp();
  ProtoGetIncomeReq::default_instance_ = new ProtoGetIncomeReq();
  ProtoGetIncomeResp::default_instance_ = new ProtoGetIncomeResp();
  ProtoGetOtherIncomeReq::default_instance_ = new ProtoGetOtherIncomeReq();
  ProtoGetOtherIncomeResp::default_instance_ = new ProtoGetOtherIncomeResp();
  ProtoCSGetOtherIncomReq::default_instance_ = new ProtoCSGetOtherIncomReq();
  ProtoCSGetOtherIncomeResp::default_instance_ = new ProtoCSGetOtherIncomeResp();
  ProtoGetMartialClubReq::default_instance_ = new ProtoGetMartialClubReq();
  ProtoGetMartialClubResp::default_instance_ = new ProtoGetMartialClubResp();
  ProtoUpdateLevelReq::default_instance_ = new ProtoUpdateLevelReq();
  ProtoUpdateLevelResp::default_instance_ = new ProtoUpdateLevelResp();
  ProtoDelHeroReq::default_instance_ = new ProtoDelHeroReq();
  ProtoDelHeroResp::default_instance_ = new ProtoDelHeroResp();
  ProtoCSDelHeroReq::default_instance_ = new ProtoCSDelHeroReq();
  ProtoDelParttimerReq::default_instance_ = new ProtoDelParttimerReq();
  ProtoDelParttimerResp::default_instance_ = new ProtoDelParttimerResp();
  ProtoCSDelParttimerReq::default_instance_ = new ProtoCSDelParttimerReq();
  ProtoCSDelParttimerToBattleReq::default_instance_ = new ProtoCSDelParttimerToBattleReq();
  ProtoCSDelParttimerResp::default_instance_ = new ProtoCSDelParttimerResp();
  ProtoChangeNameReq::default_instance_ = new ProtoChangeNameReq();
  ProtoCSMartialHeroInfo::default_instance_ = new ProtoCSMartialHeroInfo();
  MartialClubProp::default_instance_->InitAsDefaultInstance();
  MartialClubInfo::default_instance_->InitAsDefaultInstance();
  MartialHeroBaseInfo::default_instance_->InitAsDefaultInstance();
  MartialClubUserInfo::default_instance_->InitAsDefaultInstance();
  MartialHeroInfo::default_instance_->InitAsDefaultInstance();
  SingleMartialClub::default_instance_->InitAsDefaultInstance();
  MartialClubGroup::default_instance_->InitAsDefaultInstance();
  ProtoOpenMartialClubReq::default_instance_->InitAsDefaultInstance();
  ProtoOpenMartialClubResp::default_instance_->InitAsDefaultInstance();
  ProtoGetOwnerClubReq::default_instance_->InitAsDefaultInstance();
  ProtoGetOwnerClubResp::default_instance_->InitAsDefaultInstance();
  ProtoGetHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoGetHeroResp::default_instance_->InitAsDefaultInstance();
  ProtoCSGetHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoCSGetHeroResp::default_instance_->InitAsDefaultInstance();
  ProtoGetPartTimeClubReq::default_instance_->InitAsDefaultInstance();
  ProtoGetPartTimeClubResp::default_instance_->InitAsDefaultInstance();
  ProtoPartimeInfo::default_instance_->InitAsDefaultInstance();
  ProtoCSGetPartTimeClubReq::default_instance_->InitAsDefaultInstance();
  ProtoCSGetPartTimeClubResp::default_instance_->InitAsDefaultInstance();
  ProtoSetHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoSetHeroResp::default_instance_->InitAsDefaultInstance();
  ProtoCSSetHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoCSSetHeroResp::default_instance_->InitAsDefaultInstance();
  ProtoCSSetHeroToBattleReq::default_instance_->InitAsDefaultInstance();
  ProtoGetInviteUserReq::default_instance_->InitAsDefaultInstance();
  ProtoGetInviteUserResp::default_instance_->InitAsDefaultInstance();
  ProtoInviteUserReq::default_instance_->InitAsDefaultInstance();
  ProtoCSInviteUserReq::default_instance_->InitAsDefaultInstance();
  ProtoCSInviteUserResp::default_instance_->InitAsDefaultInstance();
  ProtoGetIncomeReq::default_instance_->InitAsDefaultInstance();
  ProtoGetIncomeResp::default_instance_->InitAsDefaultInstance();
  ProtoGetOtherIncomeReq::default_instance_->InitAsDefaultInstance();
  ProtoGetOtherIncomeResp::default_instance_->InitAsDefaultInstance();
  ProtoCSGetOtherIncomReq::default_instance_->InitAsDefaultInstance();
  ProtoCSGetOtherIncomeResp::default_instance_->InitAsDefaultInstance();
  ProtoGetMartialClubReq::default_instance_->InitAsDefaultInstance();
  ProtoGetMartialClubResp::default_instance_->InitAsDefaultInstance();
  ProtoUpdateLevelReq::default_instance_->InitAsDefaultInstance();
  ProtoUpdateLevelResp::default_instance_->InitAsDefaultInstance();
  ProtoDelHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoDelHeroResp::default_instance_->InitAsDefaultInstance();
  ProtoCSDelHeroReq::default_instance_->InitAsDefaultInstance();
  ProtoDelParttimerReq::default_instance_->InitAsDefaultInstance();
  ProtoDelParttimerResp::default_instance_->InitAsDefaultInstance();
  ProtoCSDelParttimerReq::default_instance_->InitAsDefaultInstance();
  ProtoCSDelParttimerToBattleReq::default_instance_->InitAsDefaultInstance();
  ProtoCSDelParttimerResp::default_instance_->InitAsDefaultInstance();
  ProtoChangeNameReq::default_instance_->InitAsDefaultInstance();
  ProtoCSMartialHeroInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoMartialClub_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoMartialClub_2eproto {
  StaticDescriptorInitializer_ProtoMartialClub_2eproto() {
    protobuf_AddDesc_ProtoMartialClub_2eproto();
  }
} static_descriptor_initializer_ProtoMartialClub_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MartialClubProp::kIdFieldNumber;
const int MartialClubProp::kCountFieldNumber;
#endif  // !_MSC_VER

MartialClubProp::MartialClubProp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialClubProp::InitAsDefaultInstance() {
}

MartialClubProp::MartialClubProp(const MartialClubProp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialClubProp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialClubProp::~MartialClubProp() {
  SharedDtor();
}

void MartialClubProp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MartialClubProp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialClubProp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialClubProp_descriptor_;
}

const MartialClubProp& MartialClubProp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialClubProp* MartialClubProp::default_instance_ = NULL;

MartialClubProp* MartialClubProp::New() const {
  return new MartialClubProp;
}

void MartialClubProp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialClubProp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // required uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialClubProp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialClubProp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialClubProp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialClubProp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialClubProp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialClubProp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialClubProp::MergeFrom(const MartialClubProp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialClubProp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialClubProp::CopyFrom(const MartialClubProp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialClubProp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MartialClubProp::Swap(MartialClubProp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialClubProp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialClubProp_descriptor_;
  metadata.reflection = MartialClubProp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MartialClubInfo::kUidFieldNumber;
const int MartialClubInfo::kGradeFieldNumber;
const int MartialClubInfo::kLevelFieldNumber;
const int MartialClubInfo::kNextTsFieldNumber;
const int MartialClubInfo::kProtectTsFieldNumber;
const int MartialClubInfo::kMartialNameFieldNumber;
const int MartialClubInfo::kIncomeStartTsFieldNumber;
const int MartialClubInfo::kCoinsFieldNumber;
const int MartialClubInfo::kPropsFieldNumber;
#endif  // !_MSC_VER

MartialClubInfo::MartialClubInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialClubInfo::InitAsDefaultInstance() {
}

MartialClubInfo::MartialClubInfo(const MartialClubInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialClubInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  grade_ = 0u;
  level_ = 0u;
  nextts_ = 0u;
  protectts_ = 0u;
  martialname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  incomestartts_ = 0u;
  coins_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialClubInfo::~MartialClubInfo() {
  SharedDtor();
}

void MartialClubInfo::SharedDtor() {
  if (martialname_ != &::google::protobuf::internal::kEmptyString) {
    delete martialname_;
  }
  if (this != default_instance_) {
  }
}

void MartialClubInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialClubInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialClubInfo_descriptor_;
}

const MartialClubInfo& MartialClubInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialClubInfo* MartialClubInfo::default_instance_ = NULL;

MartialClubInfo* MartialClubInfo::New() const {
  return new MartialClubInfo;
}

void MartialClubInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    grade_ = 0u;
    level_ = 0u;
    nextts_ = 0u;
    protectts_ = 0u;
    if (has_martialname()) {
      if (martialname_ != &::google::protobuf::internal::kEmptyString) {
        martialname_->clear();
      }
    }
    incomestartts_ = 0u;
    coins_ = 0u;
  }
  props_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialClubInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // required uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nextTs;
        break;
      }
      
      // required uint32 nextTs = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nextTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextts_)));
          set_has_nextts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_protectTs;
        break;
      }
      
      // required uint32 protectTs = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protectTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protectts_)));
          set_has_protectts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_martialName;
        break;
      }
      
      // required string martialName = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_martialName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_martialname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->martialname().data(), this->martialname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_incomeStartTs;
        break;
      }
      
      // required uint32 incomeStartTs = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_incomeStartTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incomestartts_)));
          set_has_incomestartts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_coins;
        break;
      }
      
      // required uint32 coins = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coins_)));
          set_has_coins();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_props;
        break;
      }
      
      // repeated .ProtoMartialClub.MartialClubProp props = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_props()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_props;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialClubInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required uint32 grade = 2;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grade(), output);
  }
  
  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }
  
  // required uint32 nextTs = 4;
  if (has_nextts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nextts(), output);
  }
  
  // required uint32 protectTs = 5;
  if (has_protectts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->protectts(), output);
  }
  
  // required string martialName = 6;
  if (has_martialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->martialname().data(), this->martialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->martialname(), output);
  }
  
  // required uint32 incomeStartTs = 7;
  if (has_incomestartts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->incomestartts(), output);
  }
  
  // required uint32 coins = 8;
  if (has_coins()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->coins(), output);
  }
  
  // repeated .ProtoMartialClub.MartialClubProp props = 9;
  for (int i = 0; i < this->props_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->props(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialClubInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required uint32 grade = 2;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grade(), target);
  }
  
  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }
  
  // required uint32 nextTs = 4;
  if (has_nextts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nextts(), target);
  }
  
  // required uint32 protectTs = 5;
  if (has_protectts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->protectts(), target);
  }
  
  // required string martialName = 6;
  if (has_martialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->martialname().data(), this->martialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->martialname(), target);
  }
  
  // required uint32 incomeStartTs = 7;
  if (has_incomestartts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->incomestartts(), target);
  }
  
  // required uint32 coins = 8;
  if (has_coins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->coins(), target);
  }
  
  // repeated .ProtoMartialClub.MartialClubProp props = 9;
  for (int i = 0; i < this->props_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->props(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialClubInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required uint32 grade = 2;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required uint32 nextTs = 4;
    if (has_nextts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextts());
    }
    
    // required uint32 protectTs = 5;
    if (has_protectts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protectts());
    }
    
    // required string martialName = 6;
    if (has_martialname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->martialname());
    }
    
    // required uint32 incomeStartTs = 7;
    if (has_incomestartts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->incomestartts());
    }
    
    // required uint32 coins = 8;
    if (has_coins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coins());
    }
    
  }
  // repeated .ProtoMartialClub.MartialClubProp props = 9;
  total_size += 1 * this->props_size();
  for (int i = 0; i < this->props_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->props(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialClubInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialClubInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialClubInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialClubInfo::MergeFrom(const MartialClubInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  props_.MergeFrom(from.props_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_nextts()) {
      set_nextts(from.nextts());
    }
    if (from.has_protectts()) {
      set_protectts(from.protectts());
    }
    if (from.has_martialname()) {
      set_martialname(from.martialname());
    }
    if (from.has_incomestartts()) {
      set_incomestartts(from.incomestartts());
    }
    if (from.has_coins()) {
      set_coins(from.coins());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialClubInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialClubInfo::CopyFrom(const MartialClubInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialClubInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  
  for (int i = 0; i < props_size(); i++) {
    if (!this->props(i).IsInitialized()) return false;
  }
  return true;
}

void MartialClubInfo::Swap(MartialClubInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(grade_, other->grade_);
    std::swap(level_, other->level_);
    std::swap(nextts_, other->nextts_);
    std::swap(protectts_, other->protectts_);
    std::swap(martialname_, other->martialname_);
    std::swap(incomestartts_, other->incomestartts_);
    std::swap(coins_, other->coins_);
    props_.Swap(&other->props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialClubInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialClubInfo_descriptor_;
  metadata.reflection = MartialClubInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MartialHeroBaseInfo::kHeroidFieldNumber;
const int MartialHeroBaseInfo::kSlotFieldNumber;
const int MartialHeroBaseInfo::kBattlePowerFieldNumber;
const int MartialHeroBaseInfo::kCoinsFieldNumber;
const int MartialHeroBaseInfo::kStartTsFieldNumber;
#endif  // !_MSC_VER

MartialHeroBaseInfo::MartialHeroBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialHeroBaseInfo::InitAsDefaultInstance() {
}

MartialHeroBaseInfo::MartialHeroBaseInfo(const MartialHeroBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialHeroBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  slot_ = 0u;
  battlepower_ = 0u;
  coins_ = 0u;
  startts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialHeroBaseInfo::~MartialHeroBaseInfo() {
  SharedDtor();
}

void MartialHeroBaseInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MartialHeroBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialHeroBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialHeroBaseInfo_descriptor_;
}

const MartialHeroBaseInfo& MartialHeroBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialHeroBaseInfo* MartialHeroBaseInfo::default_instance_ = NULL;

MartialHeroBaseInfo* MartialHeroBaseInfo::New() const {
  return new MartialHeroBaseInfo;
}

void MartialHeroBaseInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0u;
    slot_ = 0u;
    battlepower_ = 0u;
    coins_ = 0u;
    startts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialHeroBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 heroid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot;
        break;
      }
      
      // optional uint32 slot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_battlePower;
        break;
      }
      
      // optional uint32 battlePower = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_battlePower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlepower_)));
          set_has_battlepower();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_coins;
        break;
      }
      
      // optional uint32 coins = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coins_)));
          set_has_coins();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_startTs;
        break;
      }
      
      // optional uint32 startTs = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startts_)));
          set_has_startts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialHeroBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }
  
  // optional uint32 slot = 2;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->slot(), output);
  }
  
  // optional uint32 battlePower = 3;
  if (has_battlepower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->battlepower(), output);
  }
  
  // optional uint32 coins = 4;
  if (has_coins()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->coins(), output);
  }
  
  // optional uint32 startTs = 5;
  if (has_startts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->startts(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialHeroBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }
  
  // optional uint32 slot = 2;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->slot(), target);
  }
  
  // optional uint32 battlePower = 3;
  if (has_battlepower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->battlepower(), target);
  }
  
  // optional uint32 coins = 4;
  if (has_coins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->coins(), target);
  }
  
  // optional uint32 startTs = 5;
  if (has_startts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->startts(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialHeroBaseInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // optional uint32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
    // optional uint32 battlePower = 3;
    if (has_battlepower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battlepower());
    }
    
    // optional uint32 coins = 4;
    if (has_coins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coins());
    }
    
    // optional uint32 startTs = 5;
    if (has_startts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->startts());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialHeroBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialHeroBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialHeroBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialHeroBaseInfo::MergeFrom(const MartialHeroBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
    if (from.has_battlepower()) {
      set_battlepower(from.battlepower());
    }
    if (from.has_coins()) {
      set_coins(from.coins());
    }
    if (from.has_startts()) {
      set_startts(from.startts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialHeroBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialHeroBaseInfo::CopyFrom(const MartialHeroBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialHeroBaseInfo::IsInitialized() const {
  
  return true;
}

void MartialHeroBaseInfo::Swap(MartialHeroBaseInfo* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(battlepower_, other->battlepower_);
    std::swap(coins_, other->coins_);
    std::swap(startts_, other->startts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialHeroBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialHeroBaseInfo_descriptor_;
  metadata.reflection = MartialHeroBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MartialClubUserInfo::kUidFieldNumber;
const int MartialClubUserInfo::kNameFieldNumber;
const int MartialClubUserInfo::kFigFieldNumber;
const int MartialClubUserInfo::kLevelFieldNumber;
const int MartialClubUserInfo::kGradeFieldNumber;
#endif  // !_MSC_VER

MartialClubUserInfo::MartialClubUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialClubUserInfo::InitAsDefaultInstance() {
}

MartialClubUserInfo::MartialClubUserInfo(const MartialClubUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialClubUserInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  grade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialClubUserInfo::~MartialClubUserInfo() {
  SharedDtor();
}

void MartialClubUserInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    delete fig_;
  }
  if (this != default_instance_) {
  }
}

void MartialClubUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialClubUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialClubUserInfo_descriptor_;
}

const MartialClubUserInfo& MartialClubUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialClubUserInfo* MartialClubUserInfo::default_instance_ = NULL;

MartialClubUserInfo* MartialClubUserInfo::New() const {
  return new MartialClubUserInfo;
}

void MartialClubUserInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_fig()) {
      if (fig_ != &::google::protobuf::internal::kEmptyString) {
        fig_->clear();
      }
    }
    level_ = 0u;
    grade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialClubUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fig;
        break;
      }
      
      // required string fig = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fig()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fig().data(), this->fig().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }
      
      // optional uint32 level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_grade;
        break;
      }
      
      // optional uint32 grade = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialClubUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // required string fig = 3;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fig(), output);
  }
  
  // optional uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }
  
  // optional uint32 grade = 5;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->grade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialClubUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // required string fig = 3;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fig(), target);
  }
  
  // optional uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }
  
  // optional uint32 grade = 5;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->grade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialClubUserInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string fig = 3;
    if (has_fig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fig());
    }
    
    // optional uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // optional uint32 grade = 5;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialClubUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialClubUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialClubUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialClubUserInfo::MergeFrom(const MartialClubUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_fig()) {
      set_fig(from.fig());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialClubUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialClubUserInfo::CopyFrom(const MartialClubUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialClubUserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MartialClubUserInfo::Swap(MartialClubUserInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(fig_, other->fig_);
    std::swap(level_, other->level_);
    std::swap(grade_, other->grade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialClubUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialClubUserInfo_descriptor_;
  metadata.reflection = MartialClubUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MartialHeroInfo::kUserFieldNumber;
const int MartialHeroInfo::kHeroFieldNumber;
#endif  // !_MSC_VER

MartialHeroInfo::MartialHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialHeroInfo::InitAsDefaultInstance() {
  user_ = const_cast< ::ProtoMartialClub::MartialClubUserInfo*>(&::ProtoMartialClub::MartialClubUserInfo::default_instance());
  hero_ = const_cast< ::ProtoMartialClub::MartialHeroBaseInfo*>(&::ProtoMartialClub::MartialHeroBaseInfo::default_instance());
}

MartialHeroInfo::MartialHeroInfo(const MartialHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  user_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialHeroInfo::~MartialHeroInfo() {
  SharedDtor();
}

void MartialHeroInfo::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
    delete hero_;
  }
}

void MartialHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialHeroInfo_descriptor_;
}

const MartialHeroInfo& MartialHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialHeroInfo* MartialHeroInfo::default_instance_ = NULL;

MartialHeroInfo* MartialHeroInfo::New() const {
  return new MartialHeroInfo;
}

void MartialHeroInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_user()) {
      if (user_ != NULL) user_->::ProtoMartialClub::MartialClubUserInfo::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoMartialClub::MartialHeroBaseInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMartialClub.MartialClubUserInfo user = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }
      
      // required .ProtoMartialClub.MartialHeroBaseInfo hero = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoMartialClub.MartialClubUserInfo user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(), output);
  }
  
  // required .ProtoMartialClub.MartialHeroBaseInfo hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoMartialClub.MartialClubUserInfo user = 1;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user(), target);
  }
  
  // required .ProtoMartialClub.MartialHeroBaseInfo hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialHeroInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMartialClub.MartialClubUserInfo user = 1;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }
    
    // required .ProtoMartialClub.MartialHeroBaseInfo hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialHeroInfo::MergeFrom(const MartialHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user()) {
      mutable_user()->::ProtoMartialClub::MartialClubUserInfo::MergeFrom(from.user());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoMartialClub::MartialHeroBaseInfo::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialHeroInfo::CopyFrom(const MartialHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialHeroInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_user()) {
    if (!this->user().IsInitialized()) return false;
  }
  return true;
}

void MartialHeroInfo::Swap(MartialHeroInfo* other) {
  if (other != this) {
    std::swap(user_, other->user_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialHeroInfo_descriptor_;
  metadata.reflection = MartialHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SingleMartialClub::kClubInfoFieldNumber;
const int SingleMartialClub::kHeroInfoFieldNumber;
#endif  // !_MSC_VER

SingleMartialClub::SingleMartialClub()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SingleMartialClub::InitAsDefaultInstance() {
  clubinfo_ = const_cast< ::ProtoMartialClub::MartialClubInfo*>(&::ProtoMartialClub::MartialClubInfo::default_instance());
}

SingleMartialClub::SingleMartialClub(const SingleMartialClub& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SingleMartialClub::SharedCtor() {
  _cached_size_ = 0;
  clubinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SingleMartialClub::~SingleMartialClub() {
  SharedDtor();
}

void SingleMartialClub::SharedDtor() {
  if (this != default_instance_) {
    delete clubinfo_;
  }
}

void SingleMartialClub::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleMartialClub::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SingleMartialClub_descriptor_;
}

const SingleMartialClub& SingleMartialClub::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

SingleMartialClub* SingleMartialClub::default_instance_ = NULL;

SingleMartialClub* SingleMartialClub::New() const {
  return new SingleMartialClub;
}

void SingleMartialClub::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_clubinfo()) {
      if (clubinfo_ != NULL) clubinfo_->::ProtoMartialClub::MartialClubInfo::Clear();
    }
  }
  heroinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SingleMartialClub::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMartialClub.MartialClubInfo clubInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clubinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heroInfo;
        break;
      }
      
      // repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heroInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SingleMartialClub::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoMartialClub.MartialClubInfo clubInfo = 1;
  if (has_clubinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clubinfo(), output);
  }
  
  // repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 2;
  for (int i = 0; i < this->heroinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SingleMartialClub::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoMartialClub.MartialClubInfo clubInfo = 1;
  if (has_clubinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->clubinfo(), target);
  }
  
  // repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 2;
  for (int i = 0; i < this->heroinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SingleMartialClub::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMartialClub.MartialClubInfo clubInfo = 1;
    if (has_clubinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clubinfo());
    }
    
  }
  // repeated .ProtoMartialClub.MartialHeroInfo heroInfo = 2;
  total_size += 1 * this->heroinfo_size();
  for (int i = 0; i < this->heroinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleMartialClub::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SingleMartialClub* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SingleMartialClub*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SingleMartialClub::MergeFrom(const SingleMartialClub& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroinfo_.MergeFrom(from.heroinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clubinfo()) {
      mutable_clubinfo()->::ProtoMartialClub::MartialClubInfo::MergeFrom(from.clubinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SingleMartialClub::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleMartialClub::CopyFrom(const SingleMartialClub& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleMartialClub::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_clubinfo()) {
    if (!this->clubinfo().IsInitialized()) return false;
  }
  for (int i = 0; i < heroinfo_size(); i++) {
    if (!this->heroinfo(i).IsInitialized()) return false;
  }
  return true;
}

void SingleMartialClub::Swap(SingleMartialClub* other) {
  if (other != this) {
    std::swap(clubinfo_, other->clubinfo_);
    heroinfo_.Swap(&other->heroinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SingleMartialClub::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SingleMartialClub_descriptor_;
  metadata.reflection = SingleMartialClub_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MartialClubGroup::kClubsFieldNumber;
#endif  // !_MSC_VER

MartialClubGroup::MartialClubGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MartialClubGroup::InitAsDefaultInstance() {
}

MartialClubGroup::MartialClubGroup(const MartialClubGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MartialClubGroup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MartialClubGroup::~MartialClubGroup() {
  SharedDtor();
}

void MartialClubGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MartialClubGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MartialClubGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MartialClubGroup_descriptor_;
}

const MartialClubGroup& MartialClubGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

MartialClubGroup* MartialClubGroup::default_instance_ = NULL;

MartialClubGroup* MartialClubGroup::New() const {
  return new MartialClubGroup;
}

void MartialClubGroup::Clear() {
  clubs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MartialClubGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.SingleMartialClub clubs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clubs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_clubs;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MartialClubGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.SingleMartialClub clubs = 1;
  for (int i = 0; i < this->clubs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clubs(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MartialClubGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.SingleMartialClub clubs = 1;
  for (int i = 0; i < this->clubs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->clubs(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MartialClubGroup::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.SingleMartialClub clubs = 1;
  total_size += 1 * this->clubs_size();
  for (int i = 0; i < this->clubs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->clubs(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MartialClubGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MartialClubGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MartialClubGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MartialClubGroup::MergeFrom(const MartialClubGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  clubs_.MergeFrom(from.clubs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MartialClubGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MartialClubGroup::CopyFrom(const MartialClubGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MartialClubGroup::IsInitialized() const {
  
  for (int i = 0; i < clubs_size(); i++) {
    if (!this->clubs(i).IsInitialized()) return false;
  }
  return true;
}

void MartialClubGroup::Swap(MartialClubGroup* other) {
  if (other != this) {
    clubs_.Swap(&other->clubs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MartialClubGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MartialClubGroup_descriptor_;
  metadata.reflection = MartialClubGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoOpenMartialClubReq::kGradeFieldNumber;
#endif  // !_MSC_VER

ProtoOpenMartialClubReq::ProtoOpenMartialClubReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoOpenMartialClubReq::InitAsDefaultInstance() {
}

ProtoOpenMartialClubReq::ProtoOpenMartialClubReq(const ProtoOpenMartialClubReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoOpenMartialClubReq::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoOpenMartialClubReq::~ProtoOpenMartialClubReq() {
  SharedDtor();
}

void ProtoOpenMartialClubReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoOpenMartialClubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoOpenMartialClubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoOpenMartialClubReq_descriptor_;
}

const ProtoOpenMartialClubReq& ProtoOpenMartialClubReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoOpenMartialClubReq* ProtoOpenMartialClubReq::default_instance_ = NULL;

ProtoOpenMartialClubReq* ProtoOpenMartialClubReq::New() const {
  return new ProtoOpenMartialClubReq;
}

void ProtoOpenMartialClubReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoOpenMartialClubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoOpenMartialClubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoOpenMartialClubReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoOpenMartialClubReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoOpenMartialClubReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoOpenMartialClubReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoOpenMartialClubReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoOpenMartialClubReq::MergeFrom(const ProtoOpenMartialClubReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoOpenMartialClubReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOpenMartialClubReq::CopyFrom(const ProtoOpenMartialClubReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOpenMartialClubReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoOpenMartialClubReq::Swap(ProtoOpenMartialClubReq* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoOpenMartialClubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoOpenMartialClubReq_descriptor_;
  metadata.reflection = ProtoOpenMartialClubReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoOpenMartialClubResp::kNextTsFieldNumber;
#endif  // !_MSC_VER

ProtoOpenMartialClubResp::ProtoOpenMartialClubResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoOpenMartialClubResp::InitAsDefaultInstance() {
}

ProtoOpenMartialClubResp::ProtoOpenMartialClubResp(const ProtoOpenMartialClubResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoOpenMartialClubResp::SharedCtor() {
  _cached_size_ = 0;
  nextts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoOpenMartialClubResp::~ProtoOpenMartialClubResp() {
  SharedDtor();
}

void ProtoOpenMartialClubResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoOpenMartialClubResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoOpenMartialClubResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoOpenMartialClubResp_descriptor_;
}

const ProtoOpenMartialClubResp& ProtoOpenMartialClubResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoOpenMartialClubResp* ProtoOpenMartialClubResp::default_instance_ = NULL;

ProtoOpenMartialClubResp* ProtoOpenMartialClubResp::New() const {
  return new ProtoOpenMartialClubResp;
}

void ProtoOpenMartialClubResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nextts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoOpenMartialClubResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nextTs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextts_)));
          set_has_nextts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoOpenMartialClubResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 nextTs = 1;
  if (has_nextts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextts(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoOpenMartialClubResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 nextTs = 1;
  if (has_nextts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextts(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoOpenMartialClubResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nextTs = 1;
    if (has_nextts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextts());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoOpenMartialClubResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoOpenMartialClubResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoOpenMartialClubResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoOpenMartialClubResp::MergeFrom(const ProtoOpenMartialClubResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nextts()) {
      set_nextts(from.nextts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoOpenMartialClubResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOpenMartialClubResp::CopyFrom(const ProtoOpenMartialClubResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOpenMartialClubResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoOpenMartialClubResp::Swap(ProtoOpenMartialClubResp* other) {
  if (other != this) {
    std::swap(nextts_, other->nextts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoOpenMartialClubResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoOpenMartialClubResp_descriptor_;
  metadata.reflection = ProtoOpenMartialClubResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetOwnerClubReq::kGradeFieldNumber;
#endif  // !_MSC_VER

ProtoGetOwnerClubReq::ProtoGetOwnerClubReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetOwnerClubReq::InitAsDefaultInstance() {
}

ProtoGetOwnerClubReq::ProtoGetOwnerClubReq(const ProtoGetOwnerClubReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetOwnerClubReq::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetOwnerClubReq::~ProtoGetOwnerClubReq() {
  SharedDtor();
}

void ProtoGetOwnerClubReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetOwnerClubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetOwnerClubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetOwnerClubReq_descriptor_;
}

const ProtoGetOwnerClubReq& ProtoGetOwnerClubReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetOwnerClubReq* ProtoGetOwnerClubReq::default_instance_ = NULL;

ProtoGetOwnerClubReq* ProtoGetOwnerClubReq::New() const {
  return new ProtoGetOwnerClubReq;
}

void ProtoGetOwnerClubReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetOwnerClubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetOwnerClubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetOwnerClubReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetOwnerClubReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetOwnerClubReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetOwnerClubReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetOwnerClubReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetOwnerClubReq::MergeFrom(const ProtoGetOwnerClubReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetOwnerClubReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetOwnerClubReq::CopyFrom(const ProtoGetOwnerClubReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetOwnerClubReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoGetOwnerClubReq::Swap(ProtoGetOwnerClubReq* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetOwnerClubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetOwnerClubReq_descriptor_;
  metadata.reflection = ProtoGetOwnerClubReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetOwnerClubResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoGetOwnerClubResp::ProtoGetOwnerClubResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetOwnerClubResp::InitAsDefaultInstance() {
  info_ = const_cast< ::ProtoMartialClub::SingleMartialClub*>(&::ProtoMartialClub::SingleMartialClub::default_instance());
}

ProtoGetOwnerClubResp::ProtoGetOwnerClubResp(const ProtoGetOwnerClubResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetOwnerClubResp::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetOwnerClubResp::~ProtoGetOwnerClubResp() {
  SharedDtor();
}

void ProtoGetOwnerClubResp::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void ProtoGetOwnerClubResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetOwnerClubResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetOwnerClubResp_descriptor_;
}

const ProtoGetOwnerClubResp& ProtoGetOwnerClubResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetOwnerClubResp* ProtoGetOwnerClubResp::default_instance_ = NULL;

ProtoGetOwnerClubResp* ProtoGetOwnerClubResp::New() const {
  return new ProtoGetOwnerClubResp;
}

void ProtoGetOwnerClubResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_info()) {
      if (info_ != NULL) info_->::ProtoMartialClub::SingleMartialClub::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetOwnerClubResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMartialClub.SingleMartialClub info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetOwnerClubResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoMartialClub.SingleMartialClub info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetOwnerClubResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoMartialClub.SingleMartialClub info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetOwnerClubResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMartialClub.SingleMartialClub info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetOwnerClubResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetOwnerClubResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetOwnerClubResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetOwnerClubResp::MergeFrom(const ProtoGetOwnerClubResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::ProtoMartialClub::SingleMartialClub::MergeFrom(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetOwnerClubResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetOwnerClubResp::CopyFrom(const ProtoGetOwnerClubResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetOwnerClubResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  return true;
}

void ProtoGetOwnerClubResp::Swap(ProtoGetOwnerClubResp* other) {
  if (other != this) {
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetOwnerClubResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetOwnerClubResp_descriptor_;
  metadata.reflection = ProtoGetOwnerClubResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetHeroReq::kOwnerUidFieldNumber;
const int ProtoGetHeroReq::kGradeFieldNumber;
#endif  // !_MSC_VER

ProtoGetHeroReq::ProtoGetHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetHeroReq::InitAsDefaultInstance() {
}

ProtoGetHeroReq::ProtoGetHeroReq(const ProtoGetHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetHeroReq::SharedCtor() {
  _cached_size_ = 0;
  owneruid_ = 0u;
  grade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetHeroReq::~ProtoGetHeroReq() {
  SharedDtor();
}

void ProtoGetHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetHeroReq_descriptor_;
}

const ProtoGetHeroReq& ProtoGetHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetHeroReq* ProtoGetHeroReq::default_instance_ = NULL;

ProtoGetHeroReq* ProtoGetHeroReq::New() const {
  return new ProtoGetHeroReq;
}

void ProtoGetHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    owneruid_ = 0u;
    grade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ownerUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owneruid_)));
          set_has_owneruid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ownerUid = 1;
  if (has_owneruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owneruid(), output);
  }
  
  // required uint32 grade = 2;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ownerUid = 1;
  if (has_owneruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owneruid(), target);
  }
  
  // required uint32 grade = 2;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ownerUid = 1;
    if (has_owneruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owneruid());
    }
    
    // required uint32 grade = 2;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetHeroReq::MergeFrom(const ProtoGetHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_owneruid()) {
      set_owneruid(from.owneruid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetHeroReq::CopyFrom(const ProtoGetHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoGetHeroReq::Swap(ProtoGetHeroReq* other) {
  if (other != this) {
    std::swap(owneruid_, other->owneruid_);
    std::swap(grade_, other->grade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetHeroReq_descriptor_;
  metadata.reflection = ProtoGetHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetHeroResp::kHeroFieldNumber;
#endif  // !_MSC_VER

ProtoGetHeroResp::ProtoGetHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetHeroResp::InitAsDefaultInstance() {
}

ProtoGetHeroResp::ProtoGetHeroResp(const ProtoGetHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetHeroResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetHeroResp::~ProtoGetHeroResp() {
  SharedDtor();
}

void ProtoGetHeroResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetHeroResp_descriptor_;
}

const ProtoGetHeroResp& ProtoGetHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetHeroResp* ProtoGetHeroResp::default_instance_ = NULL;

ProtoGetHeroResp* ProtoGetHeroResp::New() const {
  return new ProtoGetHeroResp;
}

void ProtoGetHeroResp::Clear() {
  hero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hero;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetHeroResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetHeroResp::MergeFrom(const ProtoGetHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_.MergeFrom(from.hero_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetHeroResp::CopyFrom(const ProtoGetHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetHeroResp::IsInitialized() const {
  
  for (int i = 0; i < hero_size(); i++) {
    if (!this->hero(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoGetHeroResp::Swap(ProtoGetHeroResp* other) {
  if (other != this) {
    hero_.Swap(&other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetHeroResp_descriptor_;
  metadata.reflection = ProtoGetHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetHeroReq::kMyUidFieldNumber;
const int ProtoCSGetHeroReq::kOwnerUidFieldNumber;
const int ProtoCSGetHeroReq::kGradeFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetHeroReq::ProtoCSGetHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetHeroReq::InitAsDefaultInstance() {
}

ProtoCSGetHeroReq::ProtoCSGetHeroReq(const ProtoCSGetHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetHeroReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  owneruid_ = 0u;
  grade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetHeroReq::~ProtoCSGetHeroReq() {
  SharedDtor();
}

void ProtoCSGetHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetHeroReq_descriptor_;
}

const ProtoCSGetHeroReq& ProtoCSGetHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetHeroReq* ProtoCSGetHeroReq::default_instance_ = NULL;

ProtoCSGetHeroReq* ProtoCSGetHeroReq::New() const {
  return new ProtoCSGetHeroReq;
}

void ProtoCSGetHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    owneruid_ = 0u;
    grade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ownerUid;
        break;
      }
      
      // required uint32 ownerUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ownerUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owneruid_)));
          set_has_owneruid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 ownerUid = 2;
  if (has_owneruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owneruid(), output);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->grade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 ownerUid = 2;
  if (has_owneruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owneruid(), target);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->grade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 ownerUid = 2;
    if (has_owneruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owneruid());
    }
    
    // required uint32 grade = 3;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetHeroReq::MergeFrom(const ProtoCSGetHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_owneruid()) {
      set_owneruid(from.owneruid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetHeroReq::CopyFrom(const ProtoCSGetHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void ProtoCSGetHeroReq::Swap(ProtoCSGetHeroReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(owneruid_, other->owneruid_);
    std::swap(grade_, other->grade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetHeroReq_descriptor_;
  metadata.reflection = ProtoCSGetHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetHeroResp::kHeroFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetHeroResp::ProtoCSGetHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetHeroResp::InitAsDefaultInstance() {
}

ProtoCSGetHeroResp::ProtoCSGetHeroResp(const ProtoCSGetHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetHeroResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetHeroResp::~ProtoCSGetHeroResp() {
  SharedDtor();
}

void ProtoCSGetHeroResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetHeroResp_descriptor_;
}

const ProtoCSGetHeroResp& ProtoCSGetHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetHeroResp* ProtoCSGetHeroResp::default_instance_ = NULL;

ProtoCSGetHeroResp* ProtoCSGetHeroResp::New() const {
  return new ProtoCSGetHeroResp;
}

void ProtoCSGetHeroResp::Clear() {
  hero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hero;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetHeroResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.MartialHeroInfo hero = 1;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetHeroResp::MergeFrom(const ProtoCSGetHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_.MergeFrom(from.hero_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetHeroResp::CopyFrom(const ProtoCSGetHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetHeroResp::IsInitialized() const {
  
  for (int i = 0; i < hero_size(); i++) {
    if (!this->hero(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoCSGetHeroResp::Swap(ProtoCSGetHeroResp* other) {
  if (other != this) {
    hero_.Swap(&other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetHeroResp_descriptor_;
  metadata.reflection = ProtoCSGetHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoGetPartTimeClubReq::ProtoGetPartTimeClubReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetPartTimeClubReq::InitAsDefaultInstance() {
}

ProtoGetPartTimeClubReq::ProtoGetPartTimeClubReq(const ProtoGetPartTimeClubReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetPartTimeClubReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetPartTimeClubReq::~ProtoGetPartTimeClubReq() {
  SharedDtor();
}

void ProtoGetPartTimeClubReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetPartTimeClubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetPartTimeClubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetPartTimeClubReq_descriptor_;
}

const ProtoGetPartTimeClubReq& ProtoGetPartTimeClubReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetPartTimeClubReq* ProtoGetPartTimeClubReq::default_instance_ = NULL;

ProtoGetPartTimeClubReq* ProtoGetPartTimeClubReq::New() const {
  return new ProtoGetPartTimeClubReq;
}

void ProtoGetPartTimeClubReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetPartTimeClubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoGetPartTimeClubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetPartTimeClubReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetPartTimeClubReq::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetPartTimeClubReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetPartTimeClubReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetPartTimeClubReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetPartTimeClubReq::MergeFrom(const ProtoGetPartTimeClubReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetPartTimeClubReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetPartTimeClubReq::CopyFrom(const ProtoGetPartTimeClubReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetPartTimeClubReq::IsInitialized() const {
  
  return true;
}

void ProtoGetPartTimeClubReq::Swap(ProtoGetPartTimeClubReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetPartTimeClubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetPartTimeClubReq_descriptor_;
  metadata.reflection = ProtoGetPartTimeClubReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetPartTimeClubResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoGetPartTimeClubResp::ProtoGetPartTimeClubResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetPartTimeClubResp::InitAsDefaultInstance() {
}

ProtoGetPartTimeClubResp::ProtoGetPartTimeClubResp(const ProtoGetPartTimeClubResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetPartTimeClubResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetPartTimeClubResp::~ProtoGetPartTimeClubResp() {
  SharedDtor();
}

void ProtoGetPartTimeClubResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetPartTimeClubResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetPartTimeClubResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetPartTimeClubResp_descriptor_;
}

const ProtoGetPartTimeClubResp& ProtoGetPartTimeClubResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetPartTimeClubResp* ProtoGetPartTimeClubResp::default_instance_ = NULL;

ProtoGetPartTimeClubResp* ProtoGetPartTimeClubResp::New() const {
  return new ProtoGetPartTimeClubResp;
}

void ProtoGetPartTimeClubResp::Clear() {
  info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetPartTimeClubResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.SingleMartialClub info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetPartTimeClubResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  for (int i = 0; i < this->info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetPartTimeClubResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  for (int i = 0; i < this->info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetPartTimeClubResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  total_size += 1 * this->info_size();
  for (int i = 0; i < this->info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetPartTimeClubResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetPartTimeClubResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetPartTimeClubResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetPartTimeClubResp::MergeFrom(const ProtoGetPartTimeClubResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  info_.MergeFrom(from.info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetPartTimeClubResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetPartTimeClubResp::CopyFrom(const ProtoGetPartTimeClubResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetPartTimeClubResp::IsInitialized() const {
  
  for (int i = 0; i < info_size(); i++) {
    if (!this->info(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoGetPartTimeClubResp::Swap(ProtoGetPartTimeClubResp* other) {
  if (other != this) {
    info_.Swap(&other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetPartTimeClubResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetPartTimeClubResp_descriptor_;
  metadata.reflection = ProtoGetPartTimeClubResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoPartimeInfo::kGradeFieldNumber;
const int ProtoPartimeInfo::kHeroInfoFieldNumber;
#endif  // !_MSC_VER

ProtoPartimeInfo::ProtoPartimeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoPartimeInfo::InitAsDefaultInstance() {
  heroinfo_ = const_cast< ::ProtoMartialClub::MartialHeroBaseInfo*>(&::ProtoMartialClub::MartialHeroBaseInfo::default_instance());
}

ProtoPartimeInfo::ProtoPartimeInfo(const ProtoPartimeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoPartimeInfo::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  heroinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoPartimeInfo::~ProtoPartimeInfo() {
  SharedDtor();
}

void ProtoPartimeInfo::SharedDtor() {
  if (this != default_instance_) {
    delete heroinfo_;
  }
}

void ProtoPartimeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoPartimeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoPartimeInfo_descriptor_;
}

const ProtoPartimeInfo& ProtoPartimeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoPartimeInfo* ProtoPartimeInfo::default_instance_ = NULL;

ProtoPartimeInfo* ProtoPartimeInfo::New() const {
  return new ProtoPartimeInfo;
}

void ProtoPartimeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
    if (has_heroinfo()) {
      if (heroinfo_ != NULL) heroinfo_->::ProtoMartialClub::MartialHeroBaseInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoPartimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heroInfo;
        break;
      }
      
      // required .ProtoMartialClub.MartialHeroBaseInfo heroInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoPartimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }
  
  // required .ProtoMartialClub.MartialHeroBaseInfo heroInfo = 2;
  if (has_heroinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroinfo(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoPartimeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }
  
  // required .ProtoMartialClub.MartialHeroBaseInfo heroInfo = 2;
  if (has_heroinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroinfo(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoPartimeInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required .ProtoMartialClub.MartialHeroBaseInfo heroInfo = 2;
    if (has_heroinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroinfo());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPartimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoPartimeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoPartimeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoPartimeInfo::MergeFrom(const ProtoPartimeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_heroinfo()) {
      mutable_heroinfo()->::ProtoMartialClub::MartialHeroBaseInfo::MergeFrom(from.heroinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoPartimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoPartimeInfo::CopyFrom(const ProtoPartimeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPartimeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoPartimeInfo::Swap(ProtoPartimeInfo* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(heroinfo_, other->heroinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoPartimeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoPartimeInfo_descriptor_;
  metadata.reflection = ProtoPartimeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetPartTimeClubReq::kMyUidFieldNumber;
const int ProtoCSGetPartTimeClubReq::kOthUidFieldNumber;
const int ProtoCSGetPartTimeClubReq::kClubInfoFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetPartTimeClubReq::ProtoCSGetPartTimeClubReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetPartTimeClubReq::InitAsDefaultInstance() {
}

ProtoCSGetPartTimeClubReq::ProtoCSGetPartTimeClubReq(const ProtoCSGetPartTimeClubReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetPartTimeClubReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetPartTimeClubReq::~ProtoCSGetPartTimeClubReq() {
  SharedDtor();
}

void ProtoCSGetPartTimeClubReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetPartTimeClubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetPartTimeClubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetPartTimeClubReq_descriptor_;
}

const ProtoCSGetPartTimeClubReq& ProtoCSGetPartTimeClubReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetPartTimeClubReq* ProtoCSGetPartTimeClubReq::default_instance_ = NULL;

ProtoCSGetPartTimeClubReq* ProtoCSGetPartTimeClubReq::New() const {
  return new ProtoCSGetPartTimeClubReq;
}

void ProtoCSGetPartTimeClubReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    othuid_ = 0u;
  }
  clubinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetPartTimeClubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othUid;
        break;
      }
      
      // required uint32 othUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_clubInfo;
        break;
      }
      
      // repeated .ProtoMartialClub.ProtoPartimeInfo clubInfo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clubinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_clubInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetPartTimeClubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }
  
  // repeated .ProtoMartialClub.ProtoPartimeInfo clubInfo = 3;
  for (int i = 0; i < this->clubinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->clubinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetPartTimeClubReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }
  
  // repeated .ProtoMartialClub.ProtoPartimeInfo clubInfo = 3;
  for (int i = 0; i < this->clubinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->clubinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetPartTimeClubReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 othUid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
  }
  // repeated .ProtoMartialClub.ProtoPartimeInfo clubInfo = 3;
  total_size += 1 * this->clubinfo_size();
  for (int i = 0; i < this->clubinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->clubinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetPartTimeClubReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetPartTimeClubReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetPartTimeClubReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetPartTimeClubReq::MergeFrom(const ProtoCSGetPartTimeClubReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  clubinfo_.MergeFrom(from.clubinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetPartTimeClubReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetPartTimeClubReq::CopyFrom(const ProtoCSGetPartTimeClubReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetPartTimeClubReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  for (int i = 0; i < clubinfo_size(); i++) {
    if (!this->clubinfo(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoCSGetPartTimeClubReq::Swap(ProtoCSGetPartTimeClubReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    clubinfo_.Swap(&other->clubinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetPartTimeClubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetPartTimeClubReq_descriptor_;
  metadata.reflection = ProtoCSGetPartTimeClubReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetPartTimeClubResp::kInfoFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetPartTimeClubResp::ProtoCSGetPartTimeClubResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetPartTimeClubResp::InitAsDefaultInstance() {
}

ProtoCSGetPartTimeClubResp::ProtoCSGetPartTimeClubResp(const ProtoCSGetPartTimeClubResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetPartTimeClubResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetPartTimeClubResp::~ProtoCSGetPartTimeClubResp() {
  SharedDtor();
}

void ProtoCSGetPartTimeClubResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetPartTimeClubResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetPartTimeClubResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetPartTimeClubResp_descriptor_;
}

const ProtoCSGetPartTimeClubResp& ProtoCSGetPartTimeClubResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetPartTimeClubResp* ProtoCSGetPartTimeClubResp::default_instance_ = NULL;

ProtoCSGetPartTimeClubResp* ProtoCSGetPartTimeClubResp::New() const {
  return new ProtoCSGetPartTimeClubResp;
}

void ProtoCSGetPartTimeClubResp::Clear() {
  info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetPartTimeClubResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.SingleMartialClub info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetPartTimeClubResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  for (int i = 0; i < this->info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetPartTimeClubResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  for (int i = 0; i < this->info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetPartTimeClubResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.SingleMartialClub info = 1;
  total_size += 1 * this->info_size();
  for (int i = 0; i < this->info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetPartTimeClubResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetPartTimeClubResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetPartTimeClubResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetPartTimeClubResp::MergeFrom(const ProtoCSGetPartTimeClubResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  info_.MergeFrom(from.info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetPartTimeClubResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetPartTimeClubResp::CopyFrom(const ProtoCSGetPartTimeClubResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetPartTimeClubResp::IsInitialized() const {
  
  for (int i = 0; i < info_size(); i++) {
    if (!this->info(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoCSGetPartTimeClubResp::Swap(ProtoCSGetPartTimeClubResp* other) {
  if (other != this) {
    info_.Swap(&other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetPartTimeClubResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetPartTimeClubResp_descriptor_;
  metadata.reflection = ProtoCSGetPartTimeClubResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoSetHeroReq::kDetachUidFieldNumber;
const int ProtoSetHeroReq::kGradeFieldNumber;
const int ProtoSetHeroReq::kHeroIdFieldNumber;
const int ProtoSetHeroReq::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoSetHeroReq::ProtoSetHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoSetHeroReq::InitAsDefaultInstance() {
}

ProtoSetHeroReq::ProtoSetHeroReq(const ProtoSetHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoSetHeroReq::SharedCtor() {
  _cached_size_ = 0;
  detachuid_ = 0u;
  grade_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoSetHeroReq::~ProtoSetHeroReq() {
  SharedDtor();
}

void ProtoSetHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoSetHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoSetHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoSetHeroReq_descriptor_;
}

const ProtoSetHeroReq& ProtoSetHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoSetHeroReq* ProtoSetHeroReq::default_instance_ = NULL;

ProtoSetHeroReq* ProtoSetHeroReq::New() const {
  return new ProtoSetHeroReq;
}

void ProtoSetHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    detachuid_ = 0u;
    grade_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoSetHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 detachUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detachuid_)));
          set_has_detachuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_grade;
        break;
      }
      
      // optional uint32 grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoSetHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 detachUid = 1;
  if (has_detachuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->detachuid(), output);
  }
  
  // optional uint32 grade = 2;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grade(), output);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heroid(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoSetHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 detachUid = 1;
  if (has_detachuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->detachuid(), target);
  }
  
  // optional uint32 grade = 2;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grade(), target);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heroid(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoSetHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 detachUid = 1;
    if (has_detachuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->detachuid());
    }
    
    // optional uint32 grade = 2;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoSetHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoSetHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoSetHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoSetHeroReq::MergeFrom(const ProtoSetHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_detachuid()) {
      set_detachuid(from.detachuid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoSetHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoSetHeroReq::CopyFrom(const ProtoSetHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoSetHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  
  return true;
}

void ProtoSetHeroReq::Swap(ProtoSetHeroReq* other) {
  if (other != this) {
    std::swap(detachuid_, other->detachuid_);
    std::swap(grade_, other->grade_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoSetHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoSetHeroReq_descriptor_;
  metadata.reflection = ProtoSetHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoSetHeroResp::kSetHeroFieldNumber;
const int ProtoSetHeroResp::kIncomeStartTsFieldNumber;
#endif  // !_MSC_VER

ProtoSetHeroResp::ProtoSetHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoSetHeroResp::InitAsDefaultInstance() {
  sethero_ = const_cast< ::ProtoMartialClub::MartialHeroInfo*>(&::ProtoMartialClub::MartialHeroInfo::default_instance());
}

ProtoSetHeroResp::ProtoSetHeroResp(const ProtoSetHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoSetHeroResp::SharedCtor() {
  _cached_size_ = 0;
  sethero_ = NULL;
  incomestartts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoSetHeroResp::~ProtoSetHeroResp() {
  SharedDtor();
}

void ProtoSetHeroResp::SharedDtor() {
  if (this != default_instance_) {
    delete sethero_;
  }
}

void ProtoSetHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoSetHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoSetHeroResp_descriptor_;
}

const ProtoSetHeroResp& ProtoSetHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoSetHeroResp* ProtoSetHeroResp::default_instance_ = NULL;

ProtoSetHeroResp* ProtoSetHeroResp::New() const {
  return new ProtoSetHeroResp;
}

void ProtoSetHeroResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sethero()) {
      if (sethero_ != NULL) sethero_->::ProtoMartialClub::MartialHeroInfo::Clear();
    }
    incomestartts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoSetHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sethero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_incomeStartTs;
        break;
      }
      
      // optional uint32 incomeStartTs = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_incomeStartTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incomestartts_)));
          set_has_incomestartts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoSetHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
  if (has_sethero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sethero(), output);
  }
  
  // optional uint32 incomeStartTs = 2;
  if (has_incomestartts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->incomestartts(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoSetHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
  if (has_sethero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sethero(), target);
  }
  
  // optional uint32 incomeStartTs = 2;
  if (has_incomestartts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->incomestartts(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoSetHeroResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
    if (has_sethero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sethero());
    }
    
    // optional uint32 incomeStartTs = 2;
    if (has_incomestartts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->incomestartts());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoSetHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoSetHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoSetHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoSetHeroResp::MergeFrom(const ProtoSetHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sethero()) {
      mutable_sethero()->::ProtoMartialClub::MartialHeroInfo::MergeFrom(from.sethero());
    }
    if (from.has_incomestartts()) {
      set_incomestartts(from.incomestartts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoSetHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoSetHeroResp::CopyFrom(const ProtoSetHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoSetHeroResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_sethero()) {
    if (!this->sethero().IsInitialized()) return false;
  }
  return true;
}

void ProtoSetHeroResp::Swap(ProtoSetHeroResp* other) {
  if (other != this) {
    std::swap(sethero_, other->sethero_);
    std::swap(incomestartts_, other->incomestartts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoSetHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoSetHeroResp_descriptor_;
  metadata.reflection = ProtoSetHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSSetHeroReq::kMyUidFieldNumber;
const int ProtoCSSetHeroReq::kDetachUidFieldNumber;
const int ProtoCSSetHeroReq::kGradeFieldNumber;
const int ProtoCSSetHeroReq::kSlotFieldNumber;
const int ProtoCSSetHeroReq::kSetHeroFieldNumber;
#endif  // !_MSC_VER

ProtoCSSetHeroReq::ProtoCSSetHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSSetHeroReq::InitAsDefaultInstance() {
  sethero_ = const_cast< ::ProtoMartialClub::MartialHeroInfo*>(&::ProtoMartialClub::MartialHeroInfo::default_instance());
}

ProtoCSSetHeroReq::ProtoCSSetHeroReq(const ProtoCSSetHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSSetHeroReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  detachuid_ = 0u;
  grade_ = 0u;
  slot_ = 0u;
  sethero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSSetHeroReq::~ProtoCSSetHeroReq() {
  SharedDtor();
}

void ProtoCSSetHeroReq::SharedDtor() {
  if (this != default_instance_) {
    delete sethero_;
  }
}

void ProtoCSSetHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSSetHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSSetHeroReq_descriptor_;
}

const ProtoCSSetHeroReq& ProtoCSSetHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSSetHeroReq* ProtoCSSetHeroReq::default_instance_ = NULL;

ProtoCSSetHeroReq* ProtoCSSetHeroReq::New() const {
  return new ProtoCSSetHeroReq;
}

void ProtoCSSetHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    detachuid_ = 0u;
    grade_ = 0u;
    slot_ = 0u;
    if (has_sethero()) {
      if (sethero_ != NULL) sethero_->::ProtoMartialClub::MartialHeroInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSSetHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_detachUid;
        break;
      }
      
      // required uint32 detachUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_detachUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detachuid_)));
          set_has_detachuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_setHero;
        break;
      }
      
      // required .ProtoMartialClub.MartialHeroInfo setHero = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_setHero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sethero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSSetHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 detachUid = 2;
  if (has_detachuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->detachuid(), output);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->grade(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  // required .ProtoMartialClub.MartialHeroInfo setHero = 5;
  if (has_sethero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sethero(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSSetHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 detachUid = 2;
  if (has_detachuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->detachuid(), target);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->grade(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  // required .ProtoMartialClub.MartialHeroInfo setHero = 5;
  if (has_sethero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->sethero(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSSetHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 detachUid = 2;
    if (has_detachuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->detachuid());
    }
    
    // required uint32 grade = 3;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
    // required .ProtoMartialClub.MartialHeroInfo setHero = 5;
    if (has_sethero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sethero());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSSetHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSSetHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSSetHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSSetHeroReq::MergeFrom(const ProtoCSSetHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_detachuid()) {
      set_detachuid(from.detachuid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
    if (from.has_sethero()) {
      mutable_sethero()->::ProtoMartialClub::MartialHeroInfo::MergeFrom(from.sethero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSSetHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSSetHeroReq::CopyFrom(const ProtoCSSetHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSSetHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  if (has_sethero()) {
    if (!this->sethero().IsInitialized()) return false;
  }
  return true;
}

void ProtoCSSetHeroReq::Swap(ProtoCSSetHeroReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(detachuid_, other->detachuid_);
    std::swap(grade_, other->grade_);
    std::swap(slot_, other->slot_);
    std::swap(sethero_, other->sethero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSSetHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSSetHeroReq_descriptor_;
  metadata.reflection = ProtoCSSetHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSSetHeroResp::kSetHeroFieldNumber;
#endif  // !_MSC_VER

ProtoCSSetHeroResp::ProtoCSSetHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSSetHeroResp::InitAsDefaultInstance() {
  sethero_ = const_cast< ::ProtoMartialClub::MartialHeroInfo*>(&::ProtoMartialClub::MartialHeroInfo::default_instance());
}

ProtoCSSetHeroResp::ProtoCSSetHeroResp(const ProtoCSSetHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSSetHeroResp::SharedCtor() {
  _cached_size_ = 0;
  sethero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSSetHeroResp::~ProtoCSSetHeroResp() {
  SharedDtor();
}

void ProtoCSSetHeroResp::SharedDtor() {
  if (this != default_instance_) {
    delete sethero_;
  }
}

void ProtoCSSetHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSSetHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSSetHeroResp_descriptor_;
}

const ProtoCSSetHeroResp& ProtoCSSetHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSSetHeroResp* ProtoCSSetHeroResp::default_instance_ = NULL;

ProtoCSSetHeroResp* ProtoCSSetHeroResp::New() const {
  return new ProtoCSSetHeroResp;
}

void ProtoCSSetHeroResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sethero()) {
      if (sethero_ != NULL) sethero_->::ProtoMartialClub::MartialHeroInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSSetHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sethero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSSetHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
  if (has_sethero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sethero(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSSetHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
  if (has_sethero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sethero(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSSetHeroResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMartialClub.MartialHeroInfo setHero = 1;
    if (has_sethero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sethero());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSSetHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSSetHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSSetHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSSetHeroResp::MergeFrom(const ProtoCSSetHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sethero()) {
      mutable_sethero()->::ProtoMartialClub::MartialHeroInfo::MergeFrom(from.sethero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSSetHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSSetHeroResp::CopyFrom(const ProtoCSSetHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSSetHeroResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_sethero()) {
    if (!this->sethero().IsInitialized()) return false;
  }
  return true;
}

void ProtoCSSetHeroResp::Swap(ProtoCSSetHeroResp* other) {
  if (other != this) {
    std::swap(sethero_, other->sethero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSSetHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSSetHeroResp_descriptor_;
  metadata.reflection = ProtoCSSetHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSSetHeroToBattleReq::kMyUidFieldNumber;
const int ProtoCSSetHeroToBattleReq::kOthUidFieldNumber;
const int ProtoCSSetHeroToBattleReq::kHeroIdFieldNumber;
const int ProtoCSSetHeroToBattleReq::kSlotFieldNumber;
const int ProtoCSSetHeroToBattleReq::kLevelFieldNumber;
const int ProtoCSSetHeroToBattleReq::kHeroNumFieldNumber;
#endif  // !_MSC_VER

ProtoCSSetHeroToBattleReq::ProtoCSSetHeroToBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSSetHeroToBattleReq::InitAsDefaultInstance() {
}

ProtoCSSetHeroToBattleReq::ProtoCSSetHeroToBattleReq(const ProtoCSSetHeroToBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSSetHeroToBattleReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  level_ = 0u;
  heronum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSSetHeroToBattleReq::~ProtoCSSetHeroToBattleReq() {
  SharedDtor();
}

void ProtoCSSetHeroToBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSSetHeroToBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSSetHeroToBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSSetHeroToBattleReq_descriptor_;
}

const ProtoCSSetHeroToBattleReq& ProtoCSSetHeroToBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSSetHeroToBattleReq* ProtoCSSetHeroToBattleReq::default_instance_ = NULL;

ProtoCSSetHeroToBattleReq* ProtoCSSetHeroToBattleReq::New() const {
  return new ProtoCSSetHeroToBattleReq;
}

void ProtoCSSetHeroToBattleReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    othuid_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
    level_ = 0u;
    heronum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSSetHeroToBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othUid;
        break;
      }
      
      // required uint32 othUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }
      
      // required uint32 level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_heroNum;
        break;
      }
      
      // required uint32 heroNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heronum_)));
          set_has_heronum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSSetHeroToBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heroid(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  // required uint32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }
  
  // required uint32 heroNum = 6;
  if (has_heronum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->heronum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSSetHeroToBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heroid(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  // required uint32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }
  
  // required uint32 heroNum = 6;
  if (has_heronum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->heronum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSSetHeroToBattleReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 othUid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
    // required uint32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
    // required uint32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
    // required uint32 heroNum = 6;
    if (has_heronum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heronum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSSetHeroToBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSSetHeroToBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSSetHeroToBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSSetHeroToBattleReq::MergeFrom(const ProtoCSSetHeroToBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_heronum()) {
      set_heronum(from.heronum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSSetHeroToBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSSetHeroToBattleReq::CopyFrom(const ProtoCSSetHeroToBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSSetHeroToBattleReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  
  return true;
}

void ProtoCSSetHeroToBattleReq::Swap(ProtoCSSetHeroToBattleReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(level_, other->level_);
    std::swap(heronum_, other->heronum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSSetHeroToBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSSetHeroToBattleReq_descriptor_;
  metadata.reflection = ProtoCSSetHeroToBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoGetInviteUserReq::ProtoGetInviteUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetInviteUserReq::InitAsDefaultInstance() {
}

ProtoGetInviteUserReq::ProtoGetInviteUserReq(const ProtoGetInviteUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetInviteUserReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetInviteUserReq::~ProtoGetInviteUserReq() {
  SharedDtor();
}

void ProtoGetInviteUserReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetInviteUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetInviteUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetInviteUserReq_descriptor_;
}

const ProtoGetInviteUserReq& ProtoGetInviteUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetInviteUserReq* ProtoGetInviteUserReq::default_instance_ = NULL;

ProtoGetInviteUserReq* ProtoGetInviteUserReq::New() const {
  return new ProtoGetInviteUserReq;
}

void ProtoGetInviteUserReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetInviteUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoGetInviteUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetInviteUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetInviteUserReq::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetInviteUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetInviteUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetInviteUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetInviteUserReq::MergeFrom(const ProtoGetInviteUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetInviteUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetInviteUserReq::CopyFrom(const ProtoGetInviteUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetInviteUserReq::IsInitialized() const {
  
  return true;
}

void ProtoGetInviteUserReq::Swap(ProtoGetInviteUserReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetInviteUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetInviteUserReq_descriptor_;
  metadata.reflection = ProtoGetInviteUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetInviteUserResp::kUsersFieldNumber;
#endif  // !_MSC_VER

ProtoGetInviteUserResp::ProtoGetInviteUserResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetInviteUserResp::InitAsDefaultInstance() {
}

ProtoGetInviteUserResp::ProtoGetInviteUserResp(const ProtoGetInviteUserResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetInviteUserResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetInviteUserResp::~ProtoGetInviteUserResp() {
  SharedDtor();
}

void ProtoGetInviteUserResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetInviteUserResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetInviteUserResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetInviteUserResp_descriptor_;
}

const ProtoGetInviteUserResp& ProtoGetInviteUserResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetInviteUserResp* ProtoGetInviteUserResp::default_instance_ = NULL;

ProtoGetInviteUserResp* ProtoGetInviteUserResp::New() const {
  return new ProtoGetInviteUserResp;
}

void ProtoGetInviteUserResp::Clear() {
  users_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetInviteUserResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.MartialClubUserInfo users = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_users()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_users;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetInviteUserResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.MartialClubUserInfo users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetInviteUserResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.MartialClubUserInfo users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->users(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetInviteUserResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.MartialClubUserInfo users = 1;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->users(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetInviteUserResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetInviteUserResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetInviteUserResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetInviteUserResp::MergeFrom(const ProtoGetInviteUserResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  users_.MergeFrom(from.users_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetInviteUserResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetInviteUserResp::CopyFrom(const ProtoGetInviteUserResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetInviteUserResp::IsInitialized() const {
  
  for (int i = 0; i < users_size(); i++) {
    if (!this->users(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoGetInviteUserResp::Swap(ProtoGetInviteUserResp* other) {
  if (other != this) {
    users_.Swap(&other->users_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetInviteUserResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetInviteUserResp_descriptor_;
  metadata.reflection = ProtoGetInviteUserResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoInviteUserReq::kOthUidFieldNumber;
const int ProtoInviteUserReq::kMartialGradeFieldNumber;
#endif  // !_MSC_VER

ProtoInviteUserReq::ProtoInviteUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoInviteUserReq::InitAsDefaultInstance() {
}

ProtoInviteUserReq::ProtoInviteUserReq(const ProtoInviteUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoInviteUserReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  martialgrade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoInviteUserReq::~ProtoInviteUserReq() {
  SharedDtor();
}

void ProtoInviteUserReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoInviteUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoInviteUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoInviteUserReq_descriptor_;
}

const ProtoInviteUserReq& ProtoInviteUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoInviteUserReq* ProtoInviteUserReq::default_instance_ = NULL;

ProtoInviteUserReq* ProtoInviteUserReq::New() const {
  return new ProtoInviteUserReq;
}

void ProtoInviteUserReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    othuid_ = 0u;
    martialgrade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoInviteUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_martialGrade;
        break;
      }
      
      // required uint32 martialGrade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_martialGrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &martialgrade_)));
          set_has_martialgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoInviteUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 othUid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }
  
  // required uint32 martialGrade = 2;
  if (has_martialgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->martialgrade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoInviteUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 othUid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }
  
  // required uint32 martialGrade = 2;
  if (has_martialgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->martialgrade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoInviteUserReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othUid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
    // required uint32 martialGrade = 2;
    if (has_martialgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->martialgrade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoInviteUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoInviteUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoInviteUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoInviteUserReq::MergeFrom(const ProtoInviteUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_martialgrade()) {
      set_martialgrade(from.martialgrade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoInviteUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoInviteUserReq::CopyFrom(const ProtoInviteUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoInviteUserReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoInviteUserReq::Swap(ProtoInviteUserReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(martialgrade_, other->martialgrade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoInviteUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoInviteUserReq_descriptor_;
  metadata.reflection = ProtoInviteUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSInviteUserReq::kMyUidFieldNumber;
const int ProtoCSInviteUserReq::kOthUidFieldNumber;
const int ProtoCSInviteUserReq::kSlotFieldNumber;
const int ProtoCSInviteUserReq::kMartialGradeFieldNumber;
const int ProtoCSInviteUserReq::kMyLevelFieldNumber;
const int ProtoCSInviteUserReq::kMyFigFieldNumber;
const int ProtoCSInviteUserReq::kMyNameFieldNumber;
#endif  // !_MSC_VER

ProtoCSInviteUserReq::ProtoCSInviteUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSInviteUserReq::InitAsDefaultInstance() {
}

ProtoCSInviteUserReq::ProtoCSInviteUserReq(const ProtoCSInviteUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSInviteUserReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  slot_ = 0u;
  martialgrade_ = 0u;
  mylevel_ = 0u;
  myfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  myname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSInviteUserReq::~ProtoCSInviteUserReq() {
  SharedDtor();
}

void ProtoCSInviteUserReq::SharedDtor() {
  if (myfig_ != &::google::protobuf::internal::kEmptyString) {
    delete myfig_;
  }
  if (myname_ != &::google::protobuf::internal::kEmptyString) {
    delete myname_;
  }
  if (this != default_instance_) {
  }
}

void ProtoCSInviteUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSInviteUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSInviteUserReq_descriptor_;
}

const ProtoCSInviteUserReq& ProtoCSInviteUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSInviteUserReq* ProtoCSInviteUserReq::default_instance_ = NULL;

ProtoCSInviteUserReq* ProtoCSInviteUserReq::New() const {
  return new ProtoCSInviteUserReq;
}

void ProtoCSInviteUserReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    othuid_ = 0u;
    slot_ = 0u;
    martialgrade_ = 0u;
    mylevel_ = 0u;
    if (has_myfig()) {
      if (myfig_ != &::google::protobuf::internal::kEmptyString) {
        myfig_->clear();
      }
    }
    if (has_myname()) {
      if (myname_ != &::google::protobuf::internal::kEmptyString) {
        myname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSInviteUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othUid;
        break;
      }
      
      // required uint32 othUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_martialGrade;
        break;
      }
      
      // required uint32 martialGrade = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_martialGrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &martialgrade_)));
          set_has_martialgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_myLevel;
        break;
      }
      
      // required uint32 myLevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_myLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mylevel_)));
          set_has_mylevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_myFig;
        break;
      }
      
      // required string myFig = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_myFig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_myfig()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->myfig().data(), this->myfig().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_myName;
        break;
      }
      
      // required string myName = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_myName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_myname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->myname().data(), this->myname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSInviteUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot(), output);
  }
  
  // required uint32 martialGrade = 4;
  if (has_martialgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->martialgrade(), output);
  }
  
  // required uint32 myLevel = 5;
  if (has_mylevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mylevel(), output);
  }
  
  // required string myFig = 6;
  if (has_myfig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->myfig().data(), this->myfig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->myfig(), output);
  }
  
  // required string myName = 7;
  if (has_myname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->myname().data(), this->myname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->myname(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSInviteUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot(), target);
  }
  
  // required uint32 martialGrade = 4;
  if (has_martialgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->martialgrade(), target);
  }
  
  // required uint32 myLevel = 5;
  if (has_mylevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mylevel(), target);
  }
  
  // required string myFig = 6;
  if (has_myfig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->myfig().data(), this->myfig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->myfig(), target);
  }
  
  // required string myName = 7;
  if (has_myname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->myname().data(), this->myname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->myname(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSInviteUserReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 othUid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
    // required uint32 slot = 3;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
    // required uint32 martialGrade = 4;
    if (has_martialgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->martialgrade());
    }
    
    // required uint32 myLevel = 5;
    if (has_mylevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mylevel());
    }
    
    // required string myFig = 6;
    if (has_myfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->myfig());
    }
    
    // required string myName = 7;
    if (has_myname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->myname());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSInviteUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSInviteUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSInviteUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSInviteUserReq::MergeFrom(const ProtoCSInviteUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
    if (from.has_martialgrade()) {
      set_martialgrade(from.martialgrade());
    }
    if (from.has_mylevel()) {
      set_mylevel(from.mylevel());
    }
    if (from.has_myfig()) {
      set_myfig(from.myfig());
    }
    if (from.has_myname()) {
      set_myname(from.myname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSInviteUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSInviteUserReq::CopyFrom(const ProtoCSInviteUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSInviteUserReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  
  return true;
}

void ProtoCSInviteUserReq::Swap(ProtoCSInviteUserReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(slot_, other->slot_);
    std::swap(martialgrade_, other->martialgrade_);
    std::swap(mylevel_, other->mylevel_);
    std::swap(myfig_, other->myfig_);
    std::swap(myname_, other->myname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSInviteUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSInviteUserReq_descriptor_;
  metadata.reflection = ProtoCSInviteUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSInviteUserResp::kMyUidFieldNumber;
const int ProtoCSInviteUserResp::kMartialGradeFieldNumber;
const int ProtoCSInviteUserResp::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoCSInviteUserResp::ProtoCSInviteUserResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSInviteUserResp::InitAsDefaultInstance() {
}

ProtoCSInviteUserResp::ProtoCSInviteUserResp(const ProtoCSInviteUserResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSInviteUserResp::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  martialgrade_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSInviteUserResp::~ProtoCSInviteUserResp() {
  SharedDtor();
}

void ProtoCSInviteUserResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSInviteUserResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSInviteUserResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSInviteUserResp_descriptor_;
}

const ProtoCSInviteUserResp& ProtoCSInviteUserResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSInviteUserResp* ProtoCSInviteUserResp::default_instance_ = NULL;

ProtoCSInviteUserResp* ProtoCSInviteUserResp::New() const {
  return new ProtoCSInviteUserResp;
}

void ProtoCSInviteUserResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    martialgrade_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSInviteUserResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_martialGrade;
        break;
      }
      
      // required uint32 martialGrade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_martialGrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &martialgrade_)));
          set_has_martialgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSInviteUserResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 martialGrade = 2;
  if (has_martialgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->martialgrade(), output);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSInviteUserResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 martialGrade = 2;
  if (has_martialgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->martialgrade(), target);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSInviteUserResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 martialGrade = 2;
    if (has_martialgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->martialgrade());
    }
    
    // required uint32 slot = 3;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSInviteUserResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSInviteUserResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSInviteUserResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSInviteUserResp::MergeFrom(const ProtoCSInviteUserResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_martialgrade()) {
      set_martialgrade(from.martialgrade());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSInviteUserResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSInviteUserResp::CopyFrom(const ProtoCSInviteUserResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSInviteUserResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void ProtoCSInviteUserResp::Swap(ProtoCSInviteUserResp* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(martialgrade_, other->martialgrade_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSInviteUserResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSInviteUserResp_descriptor_;
  metadata.reflection = ProtoCSInviteUserResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetIncomeReq::kMartialGradeFieldNumber;
#endif  // !_MSC_VER

ProtoGetIncomeReq::ProtoGetIncomeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetIncomeReq::InitAsDefaultInstance() {
}

ProtoGetIncomeReq::ProtoGetIncomeReq(const ProtoGetIncomeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetIncomeReq::SharedCtor() {
  _cached_size_ = 0;
  martialgrade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetIncomeReq::~ProtoGetIncomeReq() {
  SharedDtor();
}

void ProtoGetIncomeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetIncomeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetIncomeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetIncomeReq_descriptor_;
}

const ProtoGetIncomeReq& ProtoGetIncomeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetIncomeReq* ProtoGetIncomeReq::default_instance_ = NULL;

ProtoGetIncomeReq* ProtoGetIncomeReq::New() const {
  return new ProtoGetIncomeReq;
}

void ProtoGetIncomeReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    martialgrade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetIncomeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 martialGrade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &martialgrade_)));
          set_has_martialgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetIncomeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 martialGrade = 1;
  if (has_martialgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->martialgrade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetIncomeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 martialGrade = 1;
  if (has_martialgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->martialgrade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetIncomeReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 martialGrade = 1;
    if (has_martialgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->martialgrade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetIncomeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetIncomeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetIncomeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetIncomeReq::MergeFrom(const ProtoGetIncomeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_martialgrade()) {
      set_martialgrade(from.martialgrade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetIncomeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetIncomeReq::CopyFrom(const ProtoGetIncomeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetIncomeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoGetIncomeReq::Swap(ProtoGetIncomeReq* other) {
  if (other != this) {
    std::swap(martialgrade_, other->martialgrade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetIncomeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetIncomeReq_descriptor_;
  metadata.reflection = ProtoGetIncomeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetIncomeResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ProtoGetIncomeResp::ProtoGetIncomeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetIncomeResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ProtoGetIncomeResp::ProtoGetIncomeResp(const ProtoGetIncomeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetIncomeResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetIncomeResp::~ProtoGetIncomeResp() {
  SharedDtor();
}

void ProtoGetIncomeResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ProtoGetIncomeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetIncomeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetIncomeResp_descriptor_;
}

const ProtoGetIncomeResp& ProtoGetIncomeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetIncomeResp* ProtoGetIncomeResp::default_instance_ = NULL;

ProtoGetIncomeResp* ProtoGetIncomeResp::New() const {
  return new ProtoGetIncomeResp;
}

void ProtoGetIncomeResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetIncomeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetIncomeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetIncomeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetIncomeResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetIncomeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetIncomeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetIncomeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetIncomeResp::MergeFrom(const ProtoGetIncomeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetIncomeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetIncomeResp::CopyFrom(const ProtoGetIncomeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetIncomeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ProtoGetIncomeResp::Swap(ProtoGetIncomeResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetIncomeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetIncomeResp_descriptor_;
  metadata.reflection = ProtoGetIncomeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetOtherIncomeReq::kOthUidFieldNumber;
const int ProtoGetOtherIncomeReq::kHeroIdFieldNumber;
const int ProtoGetOtherIncomeReq::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoGetOtherIncomeReq::ProtoGetOtherIncomeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetOtherIncomeReq::InitAsDefaultInstance() {
}

ProtoGetOtherIncomeReq::ProtoGetOtherIncomeReq(const ProtoGetOtherIncomeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetOtherIncomeReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetOtherIncomeReq::~ProtoGetOtherIncomeReq() {
  SharedDtor();
}

void ProtoGetOtherIncomeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetOtherIncomeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetOtherIncomeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetOtherIncomeReq_descriptor_;
}

const ProtoGetOtherIncomeReq& ProtoGetOtherIncomeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetOtherIncomeReq* ProtoGetOtherIncomeReq::default_instance_ = NULL;

ProtoGetOtherIncomeReq* ProtoGetOtherIncomeReq::New() const {
  return new ProtoGetOtherIncomeReq;
}

void ProtoGetOtherIncomeReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    othuid_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetOtherIncomeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetOtherIncomeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 othUid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetOtherIncomeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 othUid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }
  
  // required uint32 slot = 3;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetOtherIncomeReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othUid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
    // required uint32 heroId = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 3;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetOtherIncomeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetOtherIncomeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetOtherIncomeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetOtherIncomeReq::MergeFrom(const ProtoGetOtherIncomeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetOtherIncomeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetOtherIncomeReq::CopyFrom(const ProtoGetOtherIncomeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetOtherIncomeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void ProtoGetOtherIncomeReq::Swap(ProtoGetOtherIncomeReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetOtherIncomeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetOtherIncomeReq_descriptor_;
  metadata.reflection = ProtoGetOtherIncomeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetOtherIncomeResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ProtoGetOtherIncomeResp::ProtoGetOtherIncomeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetOtherIncomeResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ProtoGetOtherIncomeResp::ProtoGetOtherIncomeResp(const ProtoGetOtherIncomeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetOtherIncomeResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetOtherIncomeResp::~ProtoGetOtherIncomeResp() {
  SharedDtor();
}

void ProtoGetOtherIncomeResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ProtoGetOtherIncomeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetOtherIncomeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetOtherIncomeResp_descriptor_;
}

const ProtoGetOtherIncomeResp& ProtoGetOtherIncomeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetOtherIncomeResp* ProtoGetOtherIncomeResp::default_instance_ = NULL;

ProtoGetOtherIncomeResp* ProtoGetOtherIncomeResp::New() const {
  return new ProtoGetOtherIncomeResp;
}

void ProtoGetOtherIncomeResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetOtherIncomeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetOtherIncomeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetOtherIncomeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetOtherIncomeResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetOtherIncomeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetOtherIncomeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetOtherIncomeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetOtherIncomeResp::MergeFrom(const ProtoGetOtherIncomeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetOtherIncomeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetOtherIncomeResp::CopyFrom(const ProtoGetOtherIncomeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetOtherIncomeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ProtoGetOtherIncomeResp::Swap(ProtoGetOtherIncomeResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetOtherIncomeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetOtherIncomeResp_descriptor_;
  metadata.reflection = ProtoGetOtherIncomeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetOtherIncomReq::kMyUidFieldNumber;
const int ProtoCSGetOtherIncomReq::kOthUidFieldNumber;
const int ProtoCSGetOtherIncomReq::kHeroIdFieldNumber;
const int ProtoCSGetOtherIncomReq::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetOtherIncomReq::ProtoCSGetOtherIncomReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetOtherIncomReq::InitAsDefaultInstance() {
}

ProtoCSGetOtherIncomReq::ProtoCSGetOtherIncomReq(const ProtoCSGetOtherIncomReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetOtherIncomReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetOtherIncomReq::~ProtoCSGetOtherIncomReq() {
  SharedDtor();
}

void ProtoCSGetOtherIncomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSGetOtherIncomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetOtherIncomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetOtherIncomReq_descriptor_;
}

const ProtoCSGetOtherIncomReq& ProtoCSGetOtherIncomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetOtherIncomReq* ProtoCSGetOtherIncomReq::default_instance_ = NULL;

ProtoCSGetOtherIncomReq* ProtoCSGetOtherIncomReq::New() const {
  return new ProtoCSGetOtherIncomReq;
}

void ProtoCSGetOtherIncomReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    othuid_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetOtherIncomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_othUid;
        break;
      }
      
      // required uint32 othUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_othUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetOtherIncomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heroid(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetOtherIncomReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 othUid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heroid(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetOtherIncomReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 othUid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }
    
    // required uint32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetOtherIncomReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetOtherIncomReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetOtherIncomReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetOtherIncomReq::MergeFrom(const ProtoCSGetOtherIncomReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetOtherIncomReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetOtherIncomReq::CopyFrom(const ProtoCSGetOtherIncomReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetOtherIncomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void ProtoCSGetOtherIncomReq::Swap(ProtoCSGetOtherIncomReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetOtherIncomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetOtherIncomReq_descriptor_;
  metadata.reflection = ProtoCSGetOtherIncomReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSGetOtherIncomeResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ProtoCSGetOtherIncomeResp::ProtoCSGetOtherIncomeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSGetOtherIncomeResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ProtoCSGetOtherIncomeResp::ProtoCSGetOtherIncomeResp(const ProtoCSGetOtherIncomeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSGetOtherIncomeResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSGetOtherIncomeResp::~ProtoCSGetOtherIncomeResp() {
  SharedDtor();
}

void ProtoCSGetOtherIncomeResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ProtoCSGetOtherIncomeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSGetOtherIncomeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSGetOtherIncomeResp_descriptor_;
}

const ProtoCSGetOtherIncomeResp& ProtoCSGetOtherIncomeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSGetOtherIncomeResp* ProtoCSGetOtherIncomeResp::default_instance_ = NULL;

ProtoCSGetOtherIncomeResp* ProtoCSGetOtherIncomeResp::New() const {
  return new ProtoCSGetOtherIncomeResp;
}

void ProtoCSGetOtherIncomeResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSGetOtherIncomeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSGetOtherIncomeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSGetOtherIncomeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSGetOtherIncomeResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSGetOtherIncomeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSGetOtherIncomeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSGetOtherIncomeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSGetOtherIncomeResp::MergeFrom(const ProtoCSGetOtherIncomeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSGetOtherIncomeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSGetOtherIncomeResp::CopyFrom(const ProtoCSGetOtherIncomeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSGetOtherIncomeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ProtoCSGetOtherIncomeResp::Swap(ProtoCSGetOtherIncomeResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSGetOtherIncomeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSGetOtherIncomeResp_descriptor_;
  metadata.reflection = ProtoCSGetOtherIncomeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoGetMartialClubReq::ProtoGetMartialClubReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetMartialClubReq::InitAsDefaultInstance() {
}

ProtoGetMartialClubReq::ProtoGetMartialClubReq(const ProtoGetMartialClubReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetMartialClubReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetMartialClubReq::~ProtoGetMartialClubReq() {
  SharedDtor();
}

void ProtoGetMartialClubReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetMartialClubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetMartialClubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetMartialClubReq_descriptor_;
}

const ProtoGetMartialClubReq& ProtoGetMartialClubReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetMartialClubReq* ProtoGetMartialClubReq::default_instance_ = NULL;

ProtoGetMartialClubReq* ProtoGetMartialClubReq::New() const {
  return new ProtoGetMartialClubReq;
}

void ProtoGetMartialClubReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetMartialClubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoGetMartialClubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetMartialClubReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetMartialClubReq::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetMartialClubReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetMartialClubReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetMartialClubReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetMartialClubReq::MergeFrom(const ProtoGetMartialClubReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetMartialClubReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetMartialClubReq::CopyFrom(const ProtoGetMartialClubReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetMartialClubReq::IsInitialized() const {
  
  return true;
}

void ProtoGetMartialClubReq::Swap(ProtoGetMartialClubReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetMartialClubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetMartialClubReq_descriptor_;
  metadata.reflection = ProtoGetMartialClubReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoGetMartialClubResp::kGroupFieldNumber;
#endif  // !_MSC_VER

ProtoGetMartialClubResp::ProtoGetMartialClubResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoGetMartialClubResp::InitAsDefaultInstance() {
}

ProtoGetMartialClubResp::ProtoGetMartialClubResp(const ProtoGetMartialClubResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoGetMartialClubResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoGetMartialClubResp::~ProtoGetMartialClubResp() {
  SharedDtor();
}

void ProtoGetMartialClubResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoGetMartialClubResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoGetMartialClubResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoGetMartialClubResp_descriptor_;
}

const ProtoGetMartialClubResp& ProtoGetMartialClubResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoGetMartialClubResp* ProtoGetMartialClubResp::default_instance_ = NULL;

ProtoGetMartialClubResp* ProtoGetMartialClubResp::New() const {
  return new ProtoGetMartialClubResp;
}

void ProtoGetMartialClubResp::Clear() {
  group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoGetMartialClubResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMartialClub.MartialClubGroup group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoGetMartialClubResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMartialClub.MartialClubGroup group = 1;
  for (int i = 0; i < this->group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->group(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoGetMartialClubResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMartialClub.MartialClubGroup group = 1;
  for (int i = 0; i < this->group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->group(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoGetMartialClubResp::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMartialClub.MartialClubGroup group = 1;
  total_size += 1 * this->group_size();
  for (int i = 0; i < this->group_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoGetMartialClubResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoGetMartialClubResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoGetMartialClubResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoGetMartialClubResp::MergeFrom(const ProtoGetMartialClubResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_.MergeFrom(from.group_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoGetMartialClubResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoGetMartialClubResp::CopyFrom(const ProtoGetMartialClubResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGetMartialClubResp::IsInitialized() const {
  
  for (int i = 0; i < group_size(); i++) {
    if (!this->group(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoGetMartialClubResp::Swap(ProtoGetMartialClubResp* other) {
  if (other != this) {
    group_.Swap(&other->group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoGetMartialClubResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoGetMartialClubResp_descriptor_;
  metadata.reflection = ProtoGetMartialClubResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoUpdateLevelReq::kMartialGradeFieldNumber;
#endif  // !_MSC_VER

ProtoUpdateLevelReq::ProtoUpdateLevelReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoUpdateLevelReq::InitAsDefaultInstance() {
}

ProtoUpdateLevelReq::ProtoUpdateLevelReq(const ProtoUpdateLevelReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoUpdateLevelReq::SharedCtor() {
  _cached_size_ = 0;
  martialgrade_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoUpdateLevelReq::~ProtoUpdateLevelReq() {
  SharedDtor();
}

void ProtoUpdateLevelReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoUpdateLevelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoUpdateLevelReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoUpdateLevelReq_descriptor_;
}

const ProtoUpdateLevelReq& ProtoUpdateLevelReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoUpdateLevelReq* ProtoUpdateLevelReq::default_instance_ = NULL;

ProtoUpdateLevelReq* ProtoUpdateLevelReq::New() const {
  return new ProtoUpdateLevelReq;
}

void ProtoUpdateLevelReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    martialgrade_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoUpdateLevelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 martialGrade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &martialgrade_)));
          set_has_martialgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoUpdateLevelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 martialGrade = 1;
  if (has_martialgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->martialgrade(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoUpdateLevelReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 martialGrade = 1;
  if (has_martialgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->martialgrade(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoUpdateLevelReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 martialGrade = 1;
    if (has_martialgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->martialgrade());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoUpdateLevelReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoUpdateLevelReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoUpdateLevelReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoUpdateLevelReq::MergeFrom(const ProtoUpdateLevelReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_martialgrade()) {
      set_martialgrade(from.martialgrade());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoUpdateLevelReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoUpdateLevelReq::CopyFrom(const ProtoUpdateLevelReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoUpdateLevelReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoUpdateLevelReq::Swap(ProtoUpdateLevelReq* other) {
  if (other != this) {
    std::swap(martialgrade_, other->martialgrade_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoUpdateLevelReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoUpdateLevelReq_descriptor_;
  metadata.reflection = ProtoUpdateLevelReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoUpdateLevelResp::kNextTsFieldNumber;
#endif  // !_MSC_VER

ProtoUpdateLevelResp::ProtoUpdateLevelResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoUpdateLevelResp::InitAsDefaultInstance() {
}

ProtoUpdateLevelResp::ProtoUpdateLevelResp(const ProtoUpdateLevelResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoUpdateLevelResp::SharedCtor() {
  _cached_size_ = 0;
  nextts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoUpdateLevelResp::~ProtoUpdateLevelResp() {
  SharedDtor();
}

void ProtoUpdateLevelResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoUpdateLevelResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoUpdateLevelResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoUpdateLevelResp_descriptor_;
}

const ProtoUpdateLevelResp& ProtoUpdateLevelResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoUpdateLevelResp* ProtoUpdateLevelResp::default_instance_ = NULL;

ProtoUpdateLevelResp* ProtoUpdateLevelResp::New() const {
  return new ProtoUpdateLevelResp;
}

void ProtoUpdateLevelResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nextts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoUpdateLevelResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nextTs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextts_)));
          set_has_nextts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoUpdateLevelResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 nextTs = 1;
  if (has_nextts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextts(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoUpdateLevelResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 nextTs = 1;
  if (has_nextts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextts(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoUpdateLevelResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nextTs = 1;
    if (has_nextts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextts());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoUpdateLevelResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoUpdateLevelResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoUpdateLevelResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoUpdateLevelResp::MergeFrom(const ProtoUpdateLevelResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nextts()) {
      set_nextts(from.nextts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoUpdateLevelResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoUpdateLevelResp::CopyFrom(const ProtoUpdateLevelResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoUpdateLevelResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ProtoUpdateLevelResp::Swap(ProtoUpdateLevelResp* other) {
  if (other != this) {
    std::swap(nextts_, other->nextts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoUpdateLevelResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoUpdateLevelResp_descriptor_;
  metadata.reflection = ProtoUpdateLevelResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoDelHeroReq::kGradeFieldNumber;
const int ProtoDelHeroReq::kHeroIdFieldNumber;
const int ProtoDelHeroReq::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoDelHeroReq::ProtoDelHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDelHeroReq::InitAsDefaultInstance() {
}

ProtoDelHeroReq::ProtoDelHeroReq(const ProtoDelHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDelHeroReq::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDelHeroReq::~ProtoDelHeroReq() {
  SharedDtor();
}

void ProtoDelHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoDelHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDelHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDelHeroReq_descriptor_;
}

const ProtoDelHeroReq& ProtoDelHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoDelHeroReq* ProtoDelHeroReq::default_instance_ = NULL;

ProtoDelHeroReq* ProtoDelHeroReq::New() const {
  return new ProtoDelHeroReq;
}

void ProtoDelHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDelHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoDelHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grade = 2;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grade(), output);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heroid(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDelHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grade = 2;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grade(), target);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heroid(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDelHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grade = 2;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDelHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDelHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDelHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDelHeroReq::MergeFrom(const ProtoDelHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDelHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDelHeroReq::CopyFrom(const ProtoDelHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDelHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void ProtoDelHeroReq::Swap(ProtoDelHeroReq* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDelHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDelHeroReq_descriptor_;
  metadata.reflection = ProtoDelHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoDelHeroResp::ProtoDelHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDelHeroResp::InitAsDefaultInstance() {
}

ProtoDelHeroResp::ProtoDelHeroResp(const ProtoDelHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDelHeroResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDelHeroResp::~ProtoDelHeroResp() {
  SharedDtor();
}

void ProtoDelHeroResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoDelHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDelHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDelHeroResp_descriptor_;
}

const ProtoDelHeroResp& ProtoDelHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoDelHeroResp* ProtoDelHeroResp::default_instance_ = NULL;

ProtoDelHeroResp* ProtoDelHeroResp::New() const {
  return new ProtoDelHeroResp;
}

void ProtoDelHeroResp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDelHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoDelHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDelHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDelHeroResp::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDelHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDelHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDelHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDelHeroResp::MergeFrom(const ProtoDelHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDelHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDelHeroResp::CopyFrom(const ProtoDelHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDelHeroResp::IsInitialized() const {
  
  return true;
}

void ProtoDelHeroResp::Swap(ProtoDelHeroResp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDelHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDelHeroResp_descriptor_;
  metadata.reflection = ProtoDelHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSDelHeroReq::kOwnerUidFieldNumber;
const int ProtoCSDelHeroReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

ProtoCSDelHeroReq::ProtoCSDelHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSDelHeroReq::InitAsDefaultInstance() {
}

ProtoCSDelHeroReq::ProtoCSDelHeroReq(const ProtoCSDelHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSDelHeroReq::SharedCtor() {
  _cached_size_ = 0;
  owneruid_ = 0u;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSDelHeroReq::~ProtoCSDelHeroReq() {
  SharedDtor();
}

void ProtoCSDelHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSDelHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSDelHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSDelHeroReq_descriptor_;
}

const ProtoCSDelHeroReq& ProtoCSDelHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSDelHeroReq* ProtoCSDelHeroReq::default_instance_ = NULL;

ProtoCSDelHeroReq* ProtoCSDelHeroReq::New() const {
  return new ProtoCSDelHeroReq;
}

void ProtoCSDelHeroReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    owneruid_ = 0u;
    heroid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSDelHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ownerUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owneruid_)));
          set_has_owneruid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSDelHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ownerUid = 1;
  if (has_owneruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owneruid(), output);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSDelHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ownerUid = 1;
  if (has_owneruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owneruid(), target);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSDelHeroReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ownerUid = 1;
    if (has_owneruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owneruid());
    }
    
    // required uint32 heroId = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSDelHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSDelHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSDelHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSDelHeroReq::MergeFrom(const ProtoCSDelHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_owneruid()) {
      set_owneruid(from.owneruid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSDelHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSDelHeroReq::CopyFrom(const ProtoCSDelHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSDelHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoCSDelHeroReq::Swap(ProtoCSDelHeroReq* other) {
  if (other != this) {
    std::swap(owneruid_, other->owneruid_);
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSDelHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSDelHeroReq_descriptor_;
  metadata.reflection = ProtoCSDelHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoDelParttimerReq::kDetachUidFieldNumber;
const int ProtoDelParttimerReq::kGradeFieldNumber;
const int ProtoDelParttimerReq::kHeroIdFieldNumber;
const int ProtoDelParttimerReq::kSlotFieldNumber;
#endif  // !_MSC_VER

ProtoDelParttimerReq::ProtoDelParttimerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDelParttimerReq::InitAsDefaultInstance() {
}

ProtoDelParttimerReq::ProtoDelParttimerReq(const ProtoDelParttimerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDelParttimerReq::SharedCtor() {
  _cached_size_ = 0;
  detachuid_ = 0u;
  grade_ = 0u;
  heroid_ = 0u;
  slot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDelParttimerReq::~ProtoDelParttimerReq() {
  SharedDtor();
}

void ProtoDelParttimerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoDelParttimerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDelParttimerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDelParttimerReq_descriptor_;
}

const ProtoDelParttimerReq& ProtoDelParttimerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoDelParttimerReq* ProtoDelParttimerReq::default_instance_ = NULL;

ProtoDelParttimerReq* ProtoDelParttimerReq::New() const {
  return new ProtoDelParttimerReq;
}

void ProtoDelParttimerReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    detachuid_ = 0u;
    grade_ = 0u;
    heroid_ = 0u;
    slot_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDelParttimerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 detachUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detachuid_)));
          set_has_detachuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_grade;
        break;
      }
      
      // optional uint32 grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoDelParttimerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 detachUid = 1;
  if (has_detachuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->detachuid(), output);
  }
  
  // optional uint32 grade = 2;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grade(), output);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heroid(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDelParttimerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 detachUid = 1;
  if (has_detachuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->detachuid(), target);
  }
  
  // optional uint32 grade = 2;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grade(), target);
  }
  
  // required uint32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heroid(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDelParttimerReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 detachUid = 1;
    if (has_detachuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->detachuid());
    }
    
    // optional uint32 grade = 2;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDelParttimerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDelParttimerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDelParttimerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDelParttimerReq::MergeFrom(const ProtoDelParttimerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_detachuid()) {
      set_detachuid(from.detachuid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDelParttimerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDelParttimerReq::CopyFrom(const ProtoDelParttimerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDelParttimerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  
  return true;
}

void ProtoDelParttimerReq::Swap(ProtoDelParttimerReq* other) {
  if (other != this) {
    std::swap(detachuid_, other->detachuid_);
    std::swap(grade_, other->grade_);
    std::swap(heroid_, other->heroid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDelParttimerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDelParttimerReq_descriptor_;
  metadata.reflection = ProtoDelParttimerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoDelParttimerResp::ProtoDelParttimerResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoDelParttimerResp::InitAsDefaultInstance() {
}

ProtoDelParttimerResp::ProtoDelParttimerResp(const ProtoDelParttimerResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoDelParttimerResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoDelParttimerResp::~ProtoDelParttimerResp() {
  SharedDtor();
}

void ProtoDelParttimerResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoDelParttimerResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDelParttimerResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDelParttimerResp_descriptor_;
}

const ProtoDelParttimerResp& ProtoDelParttimerResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoDelParttimerResp* ProtoDelParttimerResp::default_instance_ = NULL;

ProtoDelParttimerResp* ProtoDelParttimerResp::New() const {
  return new ProtoDelParttimerResp;
}

void ProtoDelParttimerResp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoDelParttimerResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoDelParttimerResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoDelParttimerResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoDelParttimerResp::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDelParttimerResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoDelParttimerResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoDelParttimerResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoDelParttimerResp::MergeFrom(const ProtoDelParttimerResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoDelParttimerResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDelParttimerResp::CopyFrom(const ProtoDelParttimerResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDelParttimerResp::IsInitialized() const {
  
  return true;
}

void ProtoDelParttimerResp::Swap(ProtoDelParttimerResp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoDelParttimerResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoDelParttimerResp_descriptor_;
  metadata.reflection = ProtoDelParttimerResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSDelParttimerReq::kMyUidFieldNumber;
const int ProtoCSDelParttimerReq::kDetachUidFieldNumber;
const int ProtoCSDelParttimerReq::kGradeFieldNumber;
const int ProtoCSDelParttimerReq::kSlotFieldNumber;
const int ProtoCSDelParttimerReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

ProtoCSDelParttimerReq::ProtoCSDelParttimerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSDelParttimerReq::InitAsDefaultInstance() {
}

ProtoCSDelParttimerReq::ProtoCSDelParttimerReq(const ProtoCSDelParttimerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSDelParttimerReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  detachuid_ = 0u;
  grade_ = 0u;
  slot_ = 0u;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSDelParttimerReq::~ProtoCSDelParttimerReq() {
  SharedDtor();
}

void ProtoCSDelParttimerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSDelParttimerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSDelParttimerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSDelParttimerReq_descriptor_;
}

const ProtoCSDelParttimerReq& ProtoCSDelParttimerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSDelParttimerReq* ProtoCSDelParttimerReq::default_instance_ = NULL;

ProtoCSDelParttimerReq* ProtoCSDelParttimerReq::New() const {
  return new ProtoCSDelParttimerReq;
}

void ProtoCSDelParttimerReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    detachuid_ = 0u;
    grade_ = 0u;
    slot_ = 0u;
    heroid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSDelParttimerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_detachUid;
        break;
      }
      
      // required uint32 detachUid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_detachUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detachuid_)));
          set_has_detachuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_grade;
        break;
      }
      
      // required uint32 grade = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }
      
      // required uint32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSDelParttimerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 detachUid = 2;
  if (has_detachuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->detachuid(), output);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->grade(), output);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot(), output);
  }
  
  // required uint32 heroId = 5;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->heroid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSDelParttimerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 detachUid = 2;
  if (has_detachuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->detachuid(), target);
  }
  
  // required uint32 grade = 3;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->grade(), target);
  }
  
  // required uint32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot(), target);
  }
  
  // required uint32 heroId = 5;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->heroid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSDelParttimerReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 detachUid = 2;
    if (has_detachuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->detachuid());
    }
    
    // required uint32 grade = 3;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required uint32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }
    
    // required uint32 heroId = 5;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSDelParttimerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSDelParttimerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSDelParttimerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSDelParttimerReq::MergeFrom(const ProtoCSDelParttimerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_detachuid()) {
      set_detachuid(from.detachuid());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSDelParttimerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSDelParttimerReq::CopyFrom(const ProtoCSDelParttimerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSDelParttimerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void ProtoCSDelParttimerReq::Swap(ProtoCSDelParttimerReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(detachuid_, other->detachuid_);
    std::swap(grade_, other->grade_);
    std::swap(slot_, other->slot_);
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSDelParttimerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSDelParttimerReq_descriptor_;
  metadata.reflection = ProtoCSDelParttimerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSDelParttimerToBattleReq::kMyUidFieldNumber;
const int ProtoCSDelParttimerToBattleReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

ProtoCSDelParttimerToBattleReq::ProtoCSDelParttimerToBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSDelParttimerToBattleReq::InitAsDefaultInstance() {
}

ProtoCSDelParttimerToBattleReq::ProtoCSDelParttimerToBattleReq(const ProtoCSDelParttimerToBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSDelParttimerToBattleReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSDelParttimerToBattleReq::~ProtoCSDelParttimerToBattleReq() {
  SharedDtor();
}

void ProtoCSDelParttimerToBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSDelParttimerToBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSDelParttimerToBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSDelParttimerToBattleReq_descriptor_;
}

const ProtoCSDelParttimerToBattleReq& ProtoCSDelParttimerToBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSDelParttimerToBattleReq* ProtoCSDelParttimerToBattleReq::default_instance_ = NULL;

ProtoCSDelParttimerToBattleReq* ProtoCSDelParttimerToBattleReq::New() const {
  return new ProtoCSDelParttimerToBattleReq;
}

void ProtoCSDelParttimerToBattleReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    myuid_ = 0u;
    heroid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSDelParttimerToBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroId;
        break;
      }
      
      // required uint32 heroId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSDelParttimerToBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSDelParttimerToBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 myUid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }
  
  // required uint32 heroId = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSDelParttimerToBattleReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myUid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }
    
    // required uint32 heroId = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSDelParttimerToBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSDelParttimerToBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSDelParttimerToBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSDelParttimerToBattleReq::MergeFrom(const ProtoCSDelParttimerToBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSDelParttimerToBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSDelParttimerToBattleReq::CopyFrom(const ProtoCSDelParttimerToBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSDelParttimerToBattleReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoCSDelParttimerToBattleReq::Swap(ProtoCSDelParttimerToBattleReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSDelParttimerToBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSDelParttimerToBattleReq_descriptor_;
  metadata.reflection = ProtoCSDelParttimerToBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoCSDelParttimerResp::ProtoCSDelParttimerResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSDelParttimerResp::InitAsDefaultInstance() {
}

ProtoCSDelParttimerResp::ProtoCSDelParttimerResp(const ProtoCSDelParttimerResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSDelParttimerResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSDelParttimerResp::~ProtoCSDelParttimerResp() {
  SharedDtor();
}

void ProtoCSDelParttimerResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSDelParttimerResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSDelParttimerResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSDelParttimerResp_descriptor_;
}

const ProtoCSDelParttimerResp& ProtoCSDelParttimerResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSDelParttimerResp* ProtoCSDelParttimerResp::default_instance_ = NULL;

ProtoCSDelParttimerResp* ProtoCSDelParttimerResp::New() const {
  return new ProtoCSDelParttimerResp;
}

void ProtoCSDelParttimerResp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSDelParttimerResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoCSDelParttimerResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSDelParttimerResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSDelParttimerResp::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSDelParttimerResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSDelParttimerResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSDelParttimerResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSDelParttimerResp::MergeFrom(const ProtoCSDelParttimerResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSDelParttimerResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSDelParttimerResp::CopyFrom(const ProtoCSDelParttimerResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSDelParttimerResp::IsInitialized() const {
  
  return true;
}

void ProtoCSDelParttimerResp::Swap(ProtoCSDelParttimerResp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSDelParttimerResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSDelParttimerResp_descriptor_;
  metadata.reflection = ProtoCSDelParttimerResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoChangeNameReq::kGradeFieldNumber;
const int ProtoChangeNameReq::kNameFieldNumber;
#endif  // !_MSC_VER

ProtoChangeNameReq::ProtoChangeNameReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoChangeNameReq::InitAsDefaultInstance() {
}

ProtoChangeNameReq::ProtoChangeNameReq(const ProtoChangeNameReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoChangeNameReq::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoChangeNameReq::~ProtoChangeNameReq() {
  SharedDtor();
}

void ProtoChangeNameReq::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ProtoChangeNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoChangeNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoChangeNameReq_descriptor_;
}

const ProtoChangeNameReq& ProtoChangeNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoChangeNameReq* ProtoChangeNameReq::default_instance_ = NULL;

ProtoChangeNameReq* ProtoChangeNameReq::New() const {
  return new ProtoChangeNameReq;
}

void ProtoChangeNameReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoChangeNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoChangeNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoChangeNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }
  
  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoChangeNameReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoChangeNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoChangeNameReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoChangeNameReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoChangeNameReq::MergeFrom(const ProtoChangeNameReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoChangeNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoChangeNameReq::CopyFrom(const ProtoChangeNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoChangeNameReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProtoChangeNameReq::Swap(ProtoChangeNameReq* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoChangeNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoChangeNameReq_descriptor_;
  metadata.reflection = ProtoChangeNameReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoCSMartialHeroInfo::kUidFieldNumber;
const int ProtoCSMartialHeroInfo::kAttrFieldNumber;
#endif  // !_MSC_VER

ProtoCSMartialHeroInfo::ProtoCSMartialHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoCSMartialHeroInfo::InitAsDefaultInstance() {
}

ProtoCSMartialHeroInfo::ProtoCSMartialHeroInfo(const ProtoCSMartialHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoCSMartialHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoCSMartialHeroInfo::~ProtoCSMartialHeroInfo() {
  SharedDtor();
}

void ProtoCSMartialHeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoCSMartialHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCSMartialHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCSMartialHeroInfo_descriptor_;
}

const ProtoCSMartialHeroInfo& ProtoCSMartialHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMartialClub_2eproto();  return *default_instance_;
}

ProtoCSMartialHeroInfo* ProtoCSMartialHeroInfo::default_instance_ = NULL;

ProtoCSMartialHeroInfo* ProtoCSMartialHeroInfo::New() const {
  return new ProtoCSMartialHeroInfo;
}

void ProtoCSMartialHeroInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
  }
  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoCSMartialHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }
      
      // repeated .ProtoHero.HeroBaseInfoCPP attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoCSMartialHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // repeated .ProtoHero.HeroBaseInfoCPP attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoCSMartialHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // repeated .ProtoHero.HeroBaseInfoCPP attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoCSMartialHeroInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
  }
  // repeated .ProtoHero.HeroBaseInfoCPP attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCSMartialHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoCSMartialHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoCSMartialHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoCSMartialHeroInfo::MergeFrom(const ProtoCSMartialHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoCSMartialHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCSMartialHeroInfo::CopyFrom(const ProtoCSMartialHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCSMartialHeroInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < attr_size(); i++) {
    if (!this->attr(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoCSMartialHeroInfo::Swap(ProtoCSMartialHeroInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoCSMartialHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoCSMartialHeroInfo_descriptor_;
  metadata.reflection = ProtoCSMartialHeroInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMartialClub

// @@protoc_insertion_point(global_scope)
