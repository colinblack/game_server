// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoNotify.proto

#ifndef PROTOBUF_ProtoNotify_2eproto__INCLUDED
#define PROTOBUF_ProtoNotify_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ProtoNotify {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoNotify_2eproto();
void protobuf_AssignDesc_ProtoNotify_2eproto();
void protobuf_ShutdownFile_ProtoNotify_2eproto();

class NotifyItemCPP;
class RandomUserItemCPP;
class PropsItemCpp;
class MartialClubItemCpp;
class NotifyItemCPPAll;
class GetNotifyReq;
class GetNotifyResp;
class PushNotifyReq;
class PushInvitePost;
class PushMartialBattlePost;
class PostItemCPPAll;
class PostRemove;

// ===================================================================

class NotifyItemCPP : public ::google::protobuf::Message {
 public:
  NotifyItemCPP();
  virtual ~NotifyItemCPP();
  
  NotifyItemCPP(const NotifyItemCPP& from);
  
  inline NotifyItemCPP& operator=(const NotifyItemCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyItemCPP& default_instance();
  
  void Swap(NotifyItemCPP* other);
  
  // implements Message ----------------------------------------------
  
  NotifyItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyItemCPP& from);
  void MergeFrom(const NotifyItemCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required bytes content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.NotifyItemCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ts_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static NotifyItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class RandomUserItemCPP : public ::google::protobuf::Message {
 public:
  RandomUserItemCPP();
  virtual ~RandomUserItemCPP();
  
  RandomUserItemCPP(const RandomUserItemCPP& from);
  
  inline RandomUserItemCPP& operator=(const RandomUserItemCPP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomUserItemCPP& default_instance();
  
  void Swap(RandomUserItemCPP* other);
  
  // implements Message ----------------------------------------------
  
  RandomUserItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomUserItemCPP& from);
  void MergeFrom(const RandomUserItemCPP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 ts = 4;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 4;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required bytes content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.RandomUserItemCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 ts_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static RandomUserItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class PropsItemCpp : public ::google::protobuf::Message {
 public:
  PropsItemCpp();
  virtual ~PropsItemCpp();
  
  PropsItemCpp(const PropsItemCpp& from);
  
  inline PropsItemCpp& operator=(const PropsItemCpp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropsItemCpp& default_instance();
  
  void Swap(PropsItemCpp* other);
  
  // implements Message ----------------------------------------------
  
  PropsItemCpp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropsItemCpp& from);
  void MergeFrom(const PropsItemCpp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 propId = 1;
  inline bool has_propid() const;
  inline void clear_propid();
  static const int kPropIdFieldNumber = 1;
  inline ::google::protobuf::uint32 propid() const;
  inline void set_propid(::google::protobuf::uint32 value);
  
  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PropsItemCpp)
 private:
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 propid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PropsItemCpp* default_instance_;
};
// -------------------------------------------------------------------

class MartialClubItemCpp : public ::google::protobuf::Message {
 public:
  MartialClubItemCpp();
  virtual ~MartialClubItemCpp();
  
  MartialClubItemCpp(const MartialClubItemCpp& from);
  
  inline MartialClubItemCpp& operator=(const MartialClubItemCpp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MartialClubItemCpp& default_instance();
  
  void Swap(MartialClubItemCpp* other);
  
  // implements Message ----------------------------------------------
  
  MartialClubItemCpp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MartialClubItemCpp& from);
  void MergeFrom(const MartialClubItemCpp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);
  
  // required uint32 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required string fig = 7;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 7;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  
  // required uint32 grade = 8;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 8;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // optional uint32 slot = 9;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 9;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);
  
  // optional uint32 win = 10;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 10;
  inline ::google::protobuf::uint32 win() const;
  inline void set_win(::google::protobuf::uint32 value);
  
  // optional uint32 coin = 11;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 11;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // repeated .ProtoNotify.PropsItemCpp props = 12;
  inline int props_size() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 12;
  inline const ::ProtoNotify::PropsItemCpp& props(int index) const;
  inline ::ProtoNotify::PropsItemCpp* mutable_props(int index);
  inline ::ProtoNotify::PropsItemCpp* add_props();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::PropsItemCpp >&
      props() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::PropsItemCpp >*
      mutable_props();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.MartialClubItemCpp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_win();
  inline void clear_has_win();
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 uid_;
  ::std::string* name_;
  ::std::string* fig_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNotify::PropsItemCpp > props_;
  ::google::protobuf::uint32 coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static MartialClubItemCpp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyItemCPPAll : public ::google::protobuf::Message {
 public:
  NotifyItemCPPAll();
  virtual ~NotifyItemCPPAll();
  
  NotifyItemCPPAll(const NotifyItemCPPAll& from);
  
  inline NotifyItemCPPAll& operator=(const NotifyItemCPPAll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyItemCPPAll& default_instance();
  
  void Swap(NotifyItemCPPAll* other);
  
  // implements Message ----------------------------------------------
  
  NotifyItemCPPAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyItemCPPAll& from);
  void MergeFrom(const NotifyItemCPPAll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoNotify.NotifyItemCPP notify = 1;
  inline int notify_size() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 1;
  inline const ::ProtoNotify::NotifyItemCPP& notify(int index) const;
  inline ::ProtoNotify::NotifyItemCPP* mutable_notify(int index);
  inline ::ProtoNotify::NotifyItemCPP* add_notify();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::NotifyItemCPP >&
      notify() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::NotifyItemCPP >*
      mutable_notify();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.NotifyItemCPPAll)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoNotify::NotifyItemCPP > notify_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static NotifyItemCPPAll* default_instance_;
};
// -------------------------------------------------------------------

class GetNotifyReq : public ::google::protobuf::Message {
 public:
  GetNotifyReq();
  virtual ~GetNotifyReq();
  
  GetNotifyReq(const GetNotifyReq& from);
  
  inline GetNotifyReq& operator=(const GetNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNotifyReq& default_instance();
  
  void Swap(GetNotifyReq* other);
  
  // implements Message ----------------------------------------------
  
  GetNotifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNotifyReq& from);
  void MergeFrom(const GetNotifyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.GetNotifyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static GetNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNotifyResp : public ::google::protobuf::Message {
 public:
  GetNotifyResp();
  virtual ~GetNotifyResp();
  
  GetNotifyResp(const GetNotifyResp& from);
  
  inline GetNotifyResp& operator=(const GetNotifyResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNotifyResp& default_instance();
  
  void Swap(GetNotifyResp* other);
  
  // implements Message ----------------------------------------------
  
  GetNotifyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNotifyResp& from);
  void MergeFrom(const GetNotifyResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoNotify.NotifyItemCPP notify = 1;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 1;
  inline const ::ProtoNotify::NotifyItemCPP& notify() const;
  inline ::ProtoNotify::NotifyItemCPP* mutable_notify();
  inline ::ProtoNotify::NotifyItemCPP* release_notify();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.GetNotifyResp)
 private:
  inline void set_has_notify();
  inline void clear_has_notify();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoNotify::NotifyItemCPP* notify_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static GetNotifyResp* default_instance_;
};
// -------------------------------------------------------------------

class PushNotifyReq : public ::google::protobuf::Message {
 public:
  PushNotifyReq();
  virtual ~PushNotifyReq();
  
  PushNotifyReq(const PushNotifyReq& from);
  
  inline PushNotifyReq& operator=(const PushNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushNotifyReq& default_instance();
  
  void Swap(PushNotifyReq* other);
  
  // implements Message ----------------------------------------------
  
  PushNotifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushNotifyReq& from);
  void MergeFrom(const PushNotifyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoNotify.NotifyItemCPP notify = 1;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 1;
  inline const ::ProtoNotify::NotifyItemCPP& notify() const;
  inline ::ProtoNotify::NotifyItemCPP* mutable_notify();
  inline ::ProtoNotify::NotifyItemCPP* release_notify();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PushNotifyReq)
 private:
  inline void set_has_notify();
  inline void clear_has_notify();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoNotify::NotifyItemCPP* notify_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PushNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class PushInvitePost : public ::google::protobuf::Message {
 public:
  PushInvitePost();
  virtual ~PushInvitePost();
  
  PushInvitePost(const PushInvitePost& from);
  
  inline PushInvitePost& operator=(const PushInvitePost& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushInvitePost& default_instance();
  
  void Swap(PushInvitePost* other);
  
  // implements Message ----------------------------------------------
  
  PushInvitePost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushInvitePost& from);
  void MergeFrom(const PushInvitePost& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoNotify.MartialClubItemCpp post = 1;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 1;
  inline const ::ProtoNotify::MartialClubItemCpp& post() const;
  inline ::ProtoNotify::MartialClubItemCpp* mutable_post();
  inline ::ProtoNotify::MartialClubItemCpp* release_post();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PushInvitePost)
 private:
  inline void set_has_post();
  inline void clear_has_post();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoNotify::MartialClubItemCpp* post_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PushInvitePost* default_instance_;
};
// -------------------------------------------------------------------

class PushMartialBattlePost : public ::google::protobuf::Message {
 public:
  PushMartialBattlePost();
  virtual ~PushMartialBattlePost();
  
  PushMartialBattlePost(const PushMartialBattlePost& from);
  
  inline PushMartialBattlePost& operator=(const PushMartialBattlePost& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMartialBattlePost& default_instance();
  
  void Swap(PushMartialBattlePost* other);
  
  // implements Message ----------------------------------------------
  
  PushMartialBattlePost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMartialBattlePost& from);
  void MergeFrom(const PushMartialBattlePost& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoNotify.MartialClubItemCpp post = 1;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 1;
  inline const ::ProtoNotify::MartialClubItemCpp& post() const;
  inline ::ProtoNotify::MartialClubItemCpp* mutable_post();
  inline ::ProtoNotify::MartialClubItemCpp* release_post();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PushMartialBattlePost)
 private:
  inline void set_has_post();
  inline void clear_has_post();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoNotify::MartialClubItemCpp* post_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PushMartialBattlePost* default_instance_;
};
// -------------------------------------------------------------------

class PostItemCPPAll : public ::google::protobuf::Message {
 public:
  PostItemCPPAll();
  virtual ~PostItemCPPAll();
  
  PostItemCPPAll(const PostItemCPPAll& from);
  
  inline PostItemCPPAll& operator=(const PostItemCPPAll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostItemCPPAll& default_instance();
  
  void Swap(PostItemCPPAll* other);
  
  // implements Message ----------------------------------------------
  
  PostItemCPPAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostItemCPPAll& from);
  void MergeFrom(const PostItemCPPAll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoNotify.MartialClubItemCpp invite = 1;
  inline int invite_size() const;
  inline void clear_invite();
  static const int kInviteFieldNumber = 1;
  inline const ::ProtoNotify::MartialClubItemCpp& invite(int index) const;
  inline ::ProtoNotify::MartialClubItemCpp* mutable_invite(int index);
  inline ::ProtoNotify::MartialClubItemCpp* add_invite();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >&
      invite() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >*
      mutable_invite();
  
  // repeated .ProtoNotify.MartialClubItemCpp battle = 2;
  inline int battle_size() const;
  inline void clear_battle();
  static const int kBattleFieldNumber = 2;
  inline const ::ProtoNotify::MartialClubItemCpp& battle(int index) const;
  inline ::ProtoNotify::MartialClubItemCpp* mutable_battle(int index);
  inline ::ProtoNotify::MartialClubItemCpp* add_battle();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >&
      battle() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >*
      mutable_battle();
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PostItemCPPAll)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp > invite_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp > battle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PostItemCPPAll* default_instance_;
};
// -------------------------------------------------------------------

class PostRemove : public ::google::protobuf::Message {
 public:
  PostRemove();
  virtual ~PostRemove();
  
  PostRemove(const PostRemove& from);
  
  inline PostRemove& operator=(const PostRemove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostRemove& default_instance();
  
  void Swap(PostRemove* other);
  
  // implements Message ----------------------------------------------
  
  PostRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostRemove& from);
  void MergeFrom(const PostRemove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoNotify.PostRemove)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoNotify_2eproto();
  friend void protobuf_AssignDesc_ProtoNotify_2eproto();
  friend void protobuf_ShutdownFile_ProtoNotify_2eproto();
  
  void InitAsDefaultInstance();
  static PostRemove* default_instance_;
};
// ===================================================================


// ===================================================================

// NotifyItemCPP

// required uint32 id = 1;
inline bool NotifyItemCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyItemCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyItemCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyItemCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NotifyItemCPP::id() const {
  return id_;
}
inline void NotifyItemCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 ts = 2;
inline bool NotifyItemCPP::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyItemCPP::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyItemCPP::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyItemCPP::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 NotifyItemCPP::ts() const {
  return ts_;
}
inline void NotifyItemCPP::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required bytes content = 3;
inline bool NotifyItemCPP::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyItemCPP::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyItemCPP::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyItemCPP::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& NotifyItemCPP::content() const {
  return *content_;
}
inline void NotifyItemCPP::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void NotifyItemCPP::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void NotifyItemCPP::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyItemCPP::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* NotifyItemCPP::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RandomUserItemCPP

// required uint32 id = 1;
inline bool RandomUserItemCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomUserItemCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomUserItemCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomUserItemCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RandomUserItemCPP::id() const {
  return id_;
}
inline void RandomUserItemCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 type = 2;
inline bool RandomUserItemCPP::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomUserItemCPP::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RandomUserItemCPP::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RandomUserItemCPP::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RandomUserItemCPP::type() const {
  return type_;
}
inline void RandomUserItemCPP::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 uid = 3;
inline bool RandomUserItemCPP::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RandomUserItemCPP::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RandomUserItemCPP::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RandomUserItemCPP::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RandomUserItemCPP::uid() const {
  return uid_;
}
inline void RandomUserItemCPP::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 ts = 4;
inline bool RandomUserItemCPP::has_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RandomUserItemCPP::set_has_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RandomUserItemCPP::clear_has_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RandomUserItemCPP::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RandomUserItemCPP::ts() const {
  return ts_;
}
inline void RandomUserItemCPP::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required bytes content = 5;
inline bool RandomUserItemCPP::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RandomUserItemCPP::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RandomUserItemCPP::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RandomUserItemCPP::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RandomUserItemCPP::content() const {
  return *content_;
}
inline void RandomUserItemCPP::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void RandomUserItemCPP::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void RandomUserItemCPP::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RandomUserItemCPP::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* RandomUserItemCPP::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PropsItemCpp

// required uint32 propId = 1;
inline bool PropsItemCpp::has_propid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropsItemCpp::set_has_propid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropsItemCpp::clear_has_propid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropsItemCpp::clear_propid() {
  propid_ = 0u;
  clear_has_propid();
}
inline ::google::protobuf::uint32 PropsItemCpp::propid() const {
  return propid_;
}
inline void PropsItemCpp::set_propid(::google::protobuf::uint32 value) {
  set_has_propid();
  propid_ = value;
}

// required uint32 count = 2;
inline bool PropsItemCpp::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropsItemCpp::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropsItemCpp::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropsItemCpp::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PropsItemCpp::count() const {
  return count_;
}
inline void PropsItemCpp::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// MartialClubItemCpp

// required uint32 id = 1;
inline bool MartialClubItemCpp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MartialClubItemCpp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MartialClubItemCpp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MartialClubItemCpp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::id() const {
  return id_;
}
inline void MartialClubItemCpp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 type = 2;
inline bool MartialClubItemCpp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MartialClubItemCpp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MartialClubItemCpp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MartialClubItemCpp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::type() const {
  return type_;
}
inline void MartialClubItemCpp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 ts = 3;
inline bool MartialClubItemCpp::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MartialClubItemCpp::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MartialClubItemCpp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MartialClubItemCpp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::ts() const {
  return ts_;
}
inline void MartialClubItemCpp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
}

// required uint32 uid = 4;
inline bool MartialClubItemCpp::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MartialClubItemCpp::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MartialClubItemCpp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MartialClubItemCpp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::uid() const {
  return uid_;
}
inline void MartialClubItemCpp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string name = 5;
inline bool MartialClubItemCpp::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MartialClubItemCpp::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MartialClubItemCpp::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MartialClubItemCpp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MartialClubItemCpp::name() const {
  return *name_;
}
inline void MartialClubItemCpp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MartialClubItemCpp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MartialClubItemCpp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MartialClubItemCpp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MartialClubItemCpp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 6;
inline bool MartialClubItemCpp::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MartialClubItemCpp::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MartialClubItemCpp::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MartialClubItemCpp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::level() const {
  return level_;
}
inline void MartialClubItemCpp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required string fig = 7;
inline bool MartialClubItemCpp::has_fig() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MartialClubItemCpp::set_has_fig() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MartialClubItemCpp::clear_has_fig() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MartialClubItemCpp::clear_fig() {
  if (fig_ != &::google::protobuf::internal::kEmptyString) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& MartialClubItemCpp::fig() const {
  return *fig_;
}
inline void MartialClubItemCpp::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void MartialClubItemCpp::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
}
inline void MartialClubItemCpp::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MartialClubItemCpp::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    fig_ = new ::std::string;
  }
  return fig_;
}
inline ::std::string* MartialClubItemCpp::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 grade = 8;
inline bool MartialClubItemCpp::has_grade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MartialClubItemCpp::set_has_grade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MartialClubItemCpp::clear_has_grade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MartialClubItemCpp::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::grade() const {
  return grade_;
}
inline void MartialClubItemCpp::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// optional uint32 slot = 9;
inline bool MartialClubItemCpp::has_slot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MartialClubItemCpp::set_has_slot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MartialClubItemCpp::clear_has_slot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MartialClubItemCpp::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::slot() const {
  return slot_;
}
inline void MartialClubItemCpp::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
}

// optional uint32 win = 10;
inline bool MartialClubItemCpp::has_win() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MartialClubItemCpp::set_has_win() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MartialClubItemCpp::clear_has_win() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MartialClubItemCpp::clear_win() {
  win_ = 0u;
  clear_has_win();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::win() const {
  return win_;
}
inline void MartialClubItemCpp::set_win(::google::protobuf::uint32 value) {
  set_has_win();
  win_ = value;
}

// optional uint32 coin = 11;
inline bool MartialClubItemCpp::has_coin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MartialClubItemCpp::set_has_coin() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MartialClubItemCpp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MartialClubItemCpp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 MartialClubItemCpp::coin() const {
  return coin_;
}
inline void MartialClubItemCpp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// repeated .ProtoNotify.PropsItemCpp props = 12;
inline int MartialClubItemCpp::props_size() const {
  return props_.size();
}
inline void MartialClubItemCpp::clear_props() {
  props_.Clear();
}
inline const ::ProtoNotify::PropsItemCpp& MartialClubItemCpp::props(int index) const {
  return props_.Get(index);
}
inline ::ProtoNotify::PropsItemCpp* MartialClubItemCpp::mutable_props(int index) {
  return props_.Mutable(index);
}
inline ::ProtoNotify::PropsItemCpp* MartialClubItemCpp::add_props() {
  return props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::PropsItemCpp >&
MartialClubItemCpp::props() const {
  return props_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::PropsItemCpp >*
MartialClubItemCpp::mutable_props() {
  return &props_;
}

// -------------------------------------------------------------------

// NotifyItemCPPAll

// repeated .ProtoNotify.NotifyItemCPP notify = 1;
inline int NotifyItemCPPAll::notify_size() const {
  return notify_.size();
}
inline void NotifyItemCPPAll::clear_notify() {
  notify_.Clear();
}
inline const ::ProtoNotify::NotifyItemCPP& NotifyItemCPPAll::notify(int index) const {
  return notify_.Get(index);
}
inline ::ProtoNotify::NotifyItemCPP* NotifyItemCPPAll::mutable_notify(int index) {
  return notify_.Mutable(index);
}
inline ::ProtoNotify::NotifyItemCPP* NotifyItemCPPAll::add_notify() {
  return notify_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::NotifyItemCPP >&
NotifyItemCPPAll::notify() const {
  return notify_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::NotifyItemCPP >*
NotifyItemCPPAll::mutable_notify() {
  return &notify_;
}

// -------------------------------------------------------------------

// GetNotifyReq

// required uint32 id = 1;
inline bool GetNotifyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNotifyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNotifyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNotifyReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetNotifyReq::id() const {
  return id_;
}
inline void GetNotifyReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GetNotifyResp

// required .ProtoNotify.NotifyItemCPP notify = 1;
inline bool GetNotifyResp::has_notify() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNotifyResp::set_has_notify() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNotifyResp::clear_has_notify() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNotifyResp::clear_notify() {
  if (notify_ != NULL) notify_->::ProtoNotify::NotifyItemCPP::Clear();
  clear_has_notify();
}
inline const ::ProtoNotify::NotifyItemCPP& GetNotifyResp::notify() const {
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::ProtoNotify::NotifyItemCPP* GetNotifyResp::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) notify_ = new ::ProtoNotify::NotifyItemCPP;
  return notify_;
}
inline ::ProtoNotify::NotifyItemCPP* GetNotifyResp::release_notify() {
  clear_has_notify();
  ::ProtoNotify::NotifyItemCPP* temp = notify_;
  notify_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushNotifyReq

// required .ProtoNotify.NotifyItemCPP notify = 1;
inline bool PushNotifyReq::has_notify() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushNotifyReq::set_has_notify() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushNotifyReq::clear_has_notify() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushNotifyReq::clear_notify() {
  if (notify_ != NULL) notify_->::ProtoNotify::NotifyItemCPP::Clear();
  clear_has_notify();
}
inline const ::ProtoNotify::NotifyItemCPP& PushNotifyReq::notify() const {
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::ProtoNotify::NotifyItemCPP* PushNotifyReq::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) notify_ = new ::ProtoNotify::NotifyItemCPP;
  return notify_;
}
inline ::ProtoNotify::NotifyItemCPP* PushNotifyReq::release_notify() {
  clear_has_notify();
  ::ProtoNotify::NotifyItemCPP* temp = notify_;
  notify_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushInvitePost

// required .ProtoNotify.MartialClubItemCpp post = 1;
inline bool PushInvitePost::has_post() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushInvitePost::set_has_post() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushInvitePost::clear_has_post() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushInvitePost::clear_post() {
  if (post_ != NULL) post_->::ProtoNotify::MartialClubItemCpp::Clear();
  clear_has_post();
}
inline const ::ProtoNotify::MartialClubItemCpp& PushInvitePost::post() const {
  return post_ != NULL ? *post_ : *default_instance_->post_;
}
inline ::ProtoNotify::MartialClubItemCpp* PushInvitePost::mutable_post() {
  set_has_post();
  if (post_ == NULL) post_ = new ::ProtoNotify::MartialClubItemCpp;
  return post_;
}
inline ::ProtoNotify::MartialClubItemCpp* PushInvitePost::release_post() {
  clear_has_post();
  ::ProtoNotify::MartialClubItemCpp* temp = post_;
  post_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushMartialBattlePost

// required .ProtoNotify.MartialClubItemCpp post = 1;
inline bool PushMartialBattlePost::has_post() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushMartialBattlePost::set_has_post() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushMartialBattlePost::clear_has_post() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushMartialBattlePost::clear_post() {
  if (post_ != NULL) post_->::ProtoNotify::MartialClubItemCpp::Clear();
  clear_has_post();
}
inline const ::ProtoNotify::MartialClubItemCpp& PushMartialBattlePost::post() const {
  return post_ != NULL ? *post_ : *default_instance_->post_;
}
inline ::ProtoNotify::MartialClubItemCpp* PushMartialBattlePost::mutable_post() {
  set_has_post();
  if (post_ == NULL) post_ = new ::ProtoNotify::MartialClubItemCpp;
  return post_;
}
inline ::ProtoNotify::MartialClubItemCpp* PushMartialBattlePost::release_post() {
  clear_has_post();
  ::ProtoNotify::MartialClubItemCpp* temp = post_;
  post_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PostItemCPPAll

// repeated .ProtoNotify.MartialClubItemCpp invite = 1;
inline int PostItemCPPAll::invite_size() const {
  return invite_.size();
}
inline void PostItemCPPAll::clear_invite() {
  invite_.Clear();
}
inline const ::ProtoNotify::MartialClubItemCpp& PostItemCPPAll::invite(int index) const {
  return invite_.Get(index);
}
inline ::ProtoNotify::MartialClubItemCpp* PostItemCPPAll::mutable_invite(int index) {
  return invite_.Mutable(index);
}
inline ::ProtoNotify::MartialClubItemCpp* PostItemCPPAll::add_invite() {
  return invite_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >&
PostItemCPPAll::invite() const {
  return invite_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >*
PostItemCPPAll::mutable_invite() {
  return &invite_;
}

// repeated .ProtoNotify.MartialClubItemCpp battle = 2;
inline int PostItemCPPAll::battle_size() const {
  return battle_.size();
}
inline void PostItemCPPAll::clear_battle() {
  battle_.Clear();
}
inline const ::ProtoNotify::MartialClubItemCpp& PostItemCPPAll::battle(int index) const {
  return battle_.Get(index);
}
inline ::ProtoNotify::MartialClubItemCpp* PostItemCPPAll::mutable_battle(int index) {
  return battle_.Mutable(index);
}
inline ::ProtoNotify::MartialClubItemCpp* PostItemCPPAll::add_battle() {
  return battle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >&
PostItemCPPAll::battle() const {
  return battle_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNotify::MartialClubItemCpp >*
PostItemCPPAll::mutable_battle() {
  return &battle_;
}

// -------------------------------------------------------------------

// PostRemove

// required uint32 type = 1;
inline bool PostRemove::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostRemove::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostRemove::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostRemove::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PostRemove::type() const {
  return type_;
}
inline void PostRemove::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 id = 2;
inline bool PostRemove::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostRemove::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PostRemove::id() const {
  return id_;
}
inline void PostRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNotify

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoNotify_2eproto__INCLUDED
