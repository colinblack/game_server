// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPush.proto

#ifndef PROTOBUF_ProtoPush_2eproto__INCLUDED
#define PROTOBUF_ProtoPush_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "DataCommon.pb.h"
#include "ProtoHero.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoPush {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoPush_2eproto();
void protobuf_AssignDesc_ProtoPush_2eproto();
void protobuf_ShutdownFile_ProtoPush_2eproto();

class PushUserUpLevel;
class PushHeroUpLevel;
class PushGradeUp;
class PushArchiveUp;
class PushWinstreak;
class PushOnceEveryDayReward;
class PushDonationPower;
class PushMartialIncomeUpdate;

// ===================================================================

class PushUserUpLevel : public ::google::protobuf::Message {
 public:
  PushUserUpLevel();
  virtual ~PushUserUpLevel();
  
  PushUserUpLevel(const PushUserUpLevel& from);
  
  inline PushUserUpLevel& operator=(const PushUserUpLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushUserUpLevel& default_instance();
  
  void Swap(PushUserUpLevel* other);
  
  // implements Message ----------------------------------------------
  
  PushUserUpLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushUserUpLevel& from);
  void MergeFrom(const PushUserUpLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushUserUpLevel)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushUserUpLevel* default_instance_;
};
// -------------------------------------------------------------------

class PushHeroUpLevel : public ::google::protobuf::Message {
 public:
  PushHeroUpLevel();
  virtual ~PushHeroUpLevel();
  
  PushHeroUpLevel(const PushHeroUpLevel& from);
  
  inline PushHeroUpLevel& operator=(const PushHeroUpLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushHeroUpLevel& default_instance();
  
  void Swap(PushHeroUpLevel* other);
  
  // implements Message ----------------------------------------------
  
  PushHeroUpLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushHeroUpLevel& from);
  void MergeFrom(const PushHeroUpLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushHeroUpLevel)
 private:
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushHeroUpLevel* default_instance_;
};
// -------------------------------------------------------------------

class PushGradeUp : public ::google::protobuf::Message {
 public:
  PushGradeUp();
  virtual ~PushGradeUp();
  
  PushGradeUp(const PushGradeUp& from);
  
  inline PushGradeUp& operator=(const PushGradeUp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushGradeUp& default_instance();
  
  void Swap(PushGradeUp* other);
  
  // implements Message ----------------------------------------------
  
  PushGradeUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushGradeUp& from);
  void MergeFrom(const PushGradeUp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushGradeUp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushGradeUp* default_instance_;
};
// -------------------------------------------------------------------

class PushArchiveUp : public ::google::protobuf::Message {
 public:
  PushArchiveUp();
  virtual ~PushArchiveUp();
  
  PushArchiveUp(const PushArchiveUp& from);
  
  inline PushArchiveUp& operator=(const PushArchiveUp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushArchiveUp& default_instance();
  
  void Swap(PushArchiveUp* other);
  
  // implements Message ----------------------------------------------
  
  PushArchiveUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushArchiveUp& from);
  void MergeFrom(const PushArchiveUp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoHero::HeroBaseInfoCPP& hero() const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_hero();
  inline ::ProtoHero::HeroBaseInfoCPP* release_hero();
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushArchiveUp)
 private:
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ProtoHero::HeroBaseInfoCPP* hero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushArchiveUp* default_instance_;
};
// -------------------------------------------------------------------

class PushWinstreak : public ::google::protobuf::Message {
 public:
  PushWinstreak();
  virtual ~PushWinstreak();
  
  PushWinstreak(const PushWinstreak& from);
  
  inline PushWinstreak& operator=(const PushWinstreak& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushWinstreak& default_instance();
  
  void Swap(PushWinstreak* other);
  
  // implements Message ----------------------------------------------
  
  PushWinstreak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushWinstreak& from);
  void MergeFrom(const PushWinstreak& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushWinstreak)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushWinstreak* default_instance_;
};
// -------------------------------------------------------------------

class PushOnceEveryDayReward : public ::google::protobuf::Message {
 public:
  PushOnceEveryDayReward();
  virtual ~PushOnceEveryDayReward();
  
  PushOnceEveryDayReward(const PushOnceEveryDayReward& from);
  
  inline PushOnceEveryDayReward& operator=(const PushOnceEveryDayReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushOnceEveryDayReward& default_instance();
  
  void Swap(PushOnceEveryDayReward* other);
  
  // implements Message ----------------------------------------------
  
  PushOnceEveryDayReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushOnceEveryDayReward& from);
  void MergeFrom(const PushOnceEveryDayReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushOnceEveryDayReward)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushOnceEveryDayReward* default_instance_;
};
// -------------------------------------------------------------------

class PushDonationPower : public ::google::protobuf::Message {
 public:
  PushDonationPower();
  virtual ~PushDonationPower();
  
  PushDonationPower(const PushDonationPower& from);
  
  inline PushDonationPower& operator=(const PushDonationPower& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushDonationPower& default_instance();
  
  void Swap(PushDonationPower* other);
  
  // implements Message ----------------------------------------------
  
  PushDonationPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushDonationPower& from);
  void MergeFrom(const PushDonationPower& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushDonationPower)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::DataCommon::CommonItemsCPP* commons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushDonationPower* default_instance_;
};
// -------------------------------------------------------------------

class PushMartialIncomeUpdate : public ::google::protobuf::Message {
 public:
  PushMartialIncomeUpdate();
  virtual ~PushMartialIncomeUpdate();
  
  PushMartialIncomeUpdate(const PushMartialIncomeUpdate& from);
  
  inline PushMartialIncomeUpdate& operator=(const PushMartialIncomeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMartialIncomeUpdate& default_instance();
  
  void Swap(PushMartialIncomeUpdate* other);
  
  // implements Message ----------------------------------------------
  
  PushMartialIncomeUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMartialIncomeUpdate& from);
  void MergeFrom(const PushMartialIncomeUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ProtoPush.PushMartialIncomeUpdate)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();
  
  void InitAsDefaultInstance();
  static PushMartialIncomeUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

// PushUserUpLevel

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool PushUserUpLevel::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushUserUpLevel::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushUserUpLevel::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushUserUpLevel::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PushUserUpLevel::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PushUserUpLevel::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PushUserUpLevel::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushHeroUpLevel

// required .ProtoHero.HeroBaseInfoCPP hero = 1;
inline bool PushHeroUpLevel::has_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushHeroUpLevel::set_has_hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushHeroUpLevel::clear_has_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushHeroUpLevel::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& PushHeroUpLevel::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* PushHeroUpLevel::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* PushHeroUpLevel::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushGradeUp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool PushGradeUp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushGradeUp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushGradeUp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushGradeUp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PushGradeUp::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PushGradeUp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PushGradeUp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushArchiveUp

// required .ProtoHero.HeroBaseInfoCPP hero = 1;
inline bool PushArchiveUp::has_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushArchiveUp::set_has_hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushArchiveUp::clear_has_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushArchiveUp::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
  clear_has_hero();
}
inline const ::ProtoHero::HeroBaseInfoCPP& PushArchiveUp::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* PushArchiveUp::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoHero::HeroBaseInfoCPP;
  return hero_;
}
inline ::ProtoHero::HeroBaseInfoCPP* PushArchiveUp::release_hero() {
  clear_has_hero();
  ::ProtoHero::HeroBaseInfoCPP* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushWinstreak

// required uint32 count = 1;
inline bool PushWinstreak::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushWinstreak::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushWinstreak::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushWinstreak::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PushWinstreak::count() const {
  return count_;
}
inline void PushWinstreak::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PushOnceEveryDayReward

// -------------------------------------------------------------------

// PushDonationPower

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool PushDonationPower::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushDonationPower::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushDonationPower::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushDonationPower::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PushDonationPower::commons() const {
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PushDonationPower::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PushDonationPower::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PushMartialIncomeUpdate


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoPush

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoPush_2eproto__INCLUDED
