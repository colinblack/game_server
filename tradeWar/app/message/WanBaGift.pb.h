// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WanBaGift.proto

#ifndef PROTOBUF_WanBaGift_2eproto__INCLUDED
#define PROTOBUF_WanBaGift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace WanBaGift {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WanBaGift_2eproto();
void protobuf_AssignDesc_WanBaGift_2eproto();
void protobuf_ShutdownFile_WanBaGift_2eproto();

class User;
class Daily;

// ===================================================================

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string openid = 1;
  inline bool has_openid() const;
  inline void clear_openid();
  static const int kOpenidFieldNumber = 1;
  inline const ::std::string& openid() const;
  inline void set_openid(const ::std::string& value);
  inline void set_openid(const char* value);
  inline void set_openid(const char* value, size_t size);
  inline ::std::string* mutable_openid();
  inline ::std::string* release_openid();
  inline void set_allocated_openid(::std::string* openid);

  // repeated uint32 gift = 2;
  inline int gift_size() const;
  inline void clear_gift();
  static const int kGiftFieldNumber = 2;
  inline ::google::protobuf::uint32 gift(int index) const;
  inline void set_gift(int index, ::google::protobuf::uint32 value);
  inline void add_gift(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gift() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gift();

  // @@protoc_insertion_point(class_scope:WanBaGift.User)
 private:
  inline void set_has_openid();
  inline void clear_has_openid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* openid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gift_;
  friend void  protobuf_AddDesc_WanBaGift_2eproto();
  friend void protobuf_AssignDesc_WanBaGift_2eproto();
  friend void protobuf_ShutdownFile_WanBaGift_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// -------------------------------------------------------------------

class Daily : public ::google::protobuf::Message {
 public:
  Daily();
  virtual ~Daily();

  Daily(const Daily& from);

  inline Daily& operator=(const Daily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Daily& default_instance();

  void Swap(Daily* other);

  // implements Message ----------------------------------------------

  Daily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Daily& from);
  void MergeFrom(const Daily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // repeated .WanBaGift.User ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline const ::WanBaGift::User& ids(int index) const;
  inline ::WanBaGift::User* mutable_ids(int index);
  inline ::WanBaGift::User* add_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::WanBaGift::User >&
      ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::WanBaGift::User >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:WanBaGift.Daily)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WanBaGift::User > ids_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_WanBaGift_2eproto();
  friend void protobuf_AssignDesc_WanBaGift_2eproto();
  friend void protobuf_ShutdownFile_WanBaGift_2eproto();

  void InitAsDefaultInstance();
  static Daily* default_instance_;
};
// ===================================================================


// ===================================================================

// User

// required string openid = 1;
inline bool User::has_openid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_openid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_openid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_openid() {
  if (openid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_->clear();
  }
  clear_has_openid();
}
inline const ::std::string& User::openid() const {
  // @@protoc_insertion_point(field_get:WanBaGift.User.openid)
  return *openid_;
}
inline void User::set_openid(const ::std::string& value) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
  // @@protoc_insertion_point(field_set:WanBaGift.User.openid)
}
inline void User::set_openid(const char* value) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
  // @@protoc_insertion_point(field_set_char:WanBaGift.User.openid)
}
inline void User::set_openid(const char* value, size_t size) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WanBaGift.User.openid)
}
inline ::std::string* User::mutable_openid() {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WanBaGift.User.openid)
  return openid_;
}
inline ::std::string* User::release_openid() {
  clear_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = openid_;
    openid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void User::set_allocated_openid(::std::string* openid) {
  if (openid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete openid_;
  }
  if (openid) {
    set_has_openid();
    openid_ = openid;
  } else {
    clear_has_openid();
    openid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WanBaGift.User.openid)
}

// repeated uint32 gift = 2;
inline int User::gift_size() const {
  return gift_.size();
}
inline void User::clear_gift() {
  gift_.Clear();
}
inline ::google::protobuf::uint32 User::gift(int index) const {
  // @@protoc_insertion_point(field_get:WanBaGift.User.gift)
  return gift_.Get(index);
}
inline void User::set_gift(int index, ::google::protobuf::uint32 value) {
  gift_.Set(index, value);
  // @@protoc_insertion_point(field_set:WanBaGift.User.gift)
}
inline void User::add_gift(::google::protobuf::uint32 value) {
  gift_.Add(value);
  // @@protoc_insertion_point(field_add:WanBaGift.User.gift)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
User::gift() const {
  // @@protoc_insertion_point(field_list:WanBaGift.User.gift)
  return gift_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
User::mutable_gift() {
  // @@protoc_insertion_point(field_mutable_list:WanBaGift.User.gift)
  return &gift_;
}

// -------------------------------------------------------------------

// Daily

// required uint32 ts = 1;
inline bool Daily::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Daily::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Daily::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Daily::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 Daily::ts() const {
  // @@protoc_insertion_point(field_get:WanBaGift.Daily.ts)
  return ts_;
}
inline void Daily::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:WanBaGift.Daily.ts)
}

// repeated .WanBaGift.User ids = 2;
inline int Daily::ids_size() const {
  return ids_.size();
}
inline void Daily::clear_ids() {
  ids_.Clear();
}
inline const ::WanBaGift::User& Daily::ids(int index) const {
  // @@protoc_insertion_point(field_get:WanBaGift.Daily.ids)
  return ids_.Get(index);
}
inline ::WanBaGift::User* Daily::mutable_ids(int index) {
  // @@protoc_insertion_point(field_mutable:WanBaGift.Daily.ids)
  return ids_.Mutable(index);
}
inline ::WanBaGift::User* Daily::add_ids() {
  // @@protoc_insertion_point(field_add:WanBaGift.Daily.ids)
  return ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WanBaGift::User >&
Daily::ids() const {
  // @@protoc_insertion_point(field_list:WanBaGift.Daily.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::WanBaGift::User >*
Daily::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:WanBaGift.Daily.ids)
  return &ids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace WanBaGift

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WanBaGift_2eproto__INCLUDED
