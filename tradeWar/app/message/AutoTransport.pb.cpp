// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AutoTransport.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AutoTransport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoAutoTransport {

namespace {

const ::google::protobuf::Descriptor* AutoTransportItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AutoTransportItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* AutoTransport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AutoTransport_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AutoTransport_2eproto() {
  protobuf_AddDesc_AutoTransport_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AutoTransport.proto");
  GOOGLE_CHECK(file != NULL);
  AutoTransportItem_descriptor_ = file->message_type(0);
  static const int AutoTransportItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, ets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, lost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, blv_),
  };
  AutoTransportItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AutoTransportItem_descriptor_,
      AutoTransportItem::default_instance_,
      AutoTransportItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransportItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AutoTransportItem));
  AutoTransport_descriptor_ = file->message_type(1);
  static const int AutoTransport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransport, datas_),
  };
  AutoTransport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AutoTransport_descriptor_,
      AutoTransport::default_instance_,
      AutoTransport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoTransport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AutoTransport));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AutoTransport_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AutoTransportItem_descriptor_, &AutoTransportItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AutoTransport_descriptor_, &AutoTransport::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AutoTransport_2eproto() {
  delete AutoTransportItem::default_instance_;
  delete AutoTransportItem_reflection_;
  delete AutoTransport::default_instance_;
  delete AutoTransport_reflection_;
}

void protobuf_AddDesc_AutoTransport_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023AutoTransport.proto\022\022ProtoAutoTranspor"
    "t\"a\n\021AutoTransportItem\022\013\n\003uid\030\001 \002(\r\022\013\n\003e"
    "ts\030\002 \002(\r\022\013\n\003res\030\003 \002(\r\022\014\n\004lost\030\004 \002(\r\022\n\n\002l"
    "v\030\005 \002(\r\022\013\n\003blv\030\006 \002(\r\"E\n\rAutoTransport\0224\n"
    "\005datas\030\001 \003(\0132%.ProtoAutoTransport.AutoTr"
    "ansportItem", 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AutoTransport.proto", &protobuf_RegisterTypes);
  AutoTransportItem::default_instance_ = new AutoTransportItem();
  AutoTransport::default_instance_ = new AutoTransport();
  AutoTransportItem::default_instance_->InitAsDefaultInstance();
  AutoTransport::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AutoTransport_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AutoTransport_2eproto {
  StaticDescriptorInitializer_AutoTransport_2eproto() {
    protobuf_AddDesc_AutoTransport_2eproto();
  }
} static_descriptor_initializer_AutoTransport_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AutoTransportItem::kUidFieldNumber;
const int AutoTransportItem::kEtsFieldNumber;
const int AutoTransportItem::kResFieldNumber;
const int AutoTransportItem::kLostFieldNumber;
const int AutoTransportItem::kLvFieldNumber;
const int AutoTransportItem::kBlvFieldNumber;
#endif  // !_MSC_VER

AutoTransportItem::AutoTransportItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAutoTransport.AutoTransportItem)
}

void AutoTransportItem::InitAsDefaultInstance() {
}

AutoTransportItem::AutoTransportItem(const AutoTransportItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAutoTransport.AutoTransportItem)
}

void AutoTransportItem::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  ets_ = 0u;
  res_ = 0u;
  lost_ = 0u;
  lv_ = 0u;
  blv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AutoTransportItem::~AutoTransportItem() {
  // @@protoc_insertion_point(destructor:ProtoAutoTransport.AutoTransportItem)
  SharedDtor();
}

void AutoTransportItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AutoTransportItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoTransportItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AutoTransportItem_descriptor_;
}

const AutoTransportItem& AutoTransportItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AutoTransport_2eproto();
  return *default_instance_;
}

AutoTransportItem* AutoTransportItem::default_instance_ = NULL;

AutoTransportItem* AutoTransportItem::New() const {
  return new AutoTransportItem;
}

void AutoTransportItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AutoTransportItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(uid_, blv_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AutoTransportItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAutoTransport.AutoTransportItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ets;
        break;
      }

      // required uint32 ets = 2;
      case 2: {
        if (tag == 16) {
         parse_ets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ets_)));
          set_has_ets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // required uint32 res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_)));
          set_has_res();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_lost;
        break;
      }

      // required uint32 lost = 4;
      case 4: {
        if (tag == 32) {
         parse_lost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lost_)));
          set_has_lost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lv;
        break;
      }

      // required uint32 lv = 5;
      case 5: {
        if (tag == 40) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_blv;
        break;
      }

      // required uint32 blv = 6;
      case 6: {
        if (tag == 48) {
         parse_blv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blv_)));
          set_has_blv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAutoTransport.AutoTransportItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAutoTransport.AutoTransportItem)
  return false;
#undef DO_
}

void AutoTransportItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAutoTransport.AutoTransportItem)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 ets = 2;
  if (has_ets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ets(), output);
  }

  // required uint32 res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->res(), output);
  }

  // required uint32 lost = 4;
  if (has_lost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lost(), output);
  }

  // required uint32 lv = 5;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lv(), output);
  }

  // required uint32 blv = 6;
  if (has_blv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->blv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAutoTransport.AutoTransportItem)
}

::google::protobuf::uint8* AutoTransportItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAutoTransport.AutoTransportItem)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 ets = 2;
  if (has_ets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ets(), target);
  }

  // required uint32 res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->res(), target);
  }

  // required uint32 lost = 4;
  if (has_lost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lost(), target);
  }

  // required uint32 lv = 5;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lv(), target);
  }

  // required uint32 blv = 6;
  if (has_blv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->blv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAutoTransport.AutoTransportItem)
  return target;
}

int AutoTransportItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 ets = 2;
    if (has_ets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ets());
    }

    // required uint32 res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->res());
    }

    // required uint32 lost = 4;
    if (has_lost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lost());
    }

    // required uint32 lv = 5;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

    // required uint32 blv = 6;
    if (has_blv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoTransportItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AutoTransportItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AutoTransportItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AutoTransportItem::MergeFrom(const AutoTransportItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_ets()) {
      set_ets(from.ets());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_lost()) {
      set_lost(from.lost());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_blv()) {
      set_blv(from.blv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AutoTransportItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoTransportItem::CopyFrom(const AutoTransportItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoTransportItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void AutoTransportItem::Swap(AutoTransportItem* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(ets_, other->ets_);
    std::swap(res_, other->res_);
    std::swap(lost_, other->lost_);
    std::swap(lv_, other->lv_);
    std::swap(blv_, other->blv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AutoTransportItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AutoTransportItem_descriptor_;
  metadata.reflection = AutoTransportItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AutoTransport::kDatasFieldNumber;
#endif  // !_MSC_VER

AutoTransport::AutoTransport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAutoTransport.AutoTransport)
}

void AutoTransport::InitAsDefaultInstance() {
}

AutoTransport::AutoTransport(const AutoTransport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAutoTransport.AutoTransport)
}

void AutoTransport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AutoTransport::~AutoTransport() {
  // @@protoc_insertion_point(destructor:ProtoAutoTransport.AutoTransport)
  SharedDtor();
}

void AutoTransport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AutoTransport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoTransport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AutoTransport_descriptor_;
}

const AutoTransport& AutoTransport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AutoTransport_2eproto();
  return *default_instance_;
}

AutoTransport* AutoTransport::default_instance_ = NULL;

AutoTransport* AutoTransport::New() const {
  return new AutoTransport;
}

void AutoTransport::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AutoTransport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAutoTransport.AutoTransport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAutoTransport.AutoTransportItem datas = 1;
      case 1: {
        if (tag == 10) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAutoTransport.AutoTransport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAutoTransport.AutoTransport)
  return false;
#undef DO_
}

void AutoTransport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAutoTransport.AutoTransport)
  // repeated .ProtoAutoTransport.AutoTransportItem datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAutoTransport.AutoTransport)
}

::google::protobuf::uint8* AutoTransport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAutoTransport.AutoTransport)
  // repeated .ProtoAutoTransport.AutoTransportItem datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAutoTransport.AutoTransport)
  return target;
}

int AutoTransport::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoAutoTransport.AutoTransportItem datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoTransport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AutoTransport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AutoTransport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AutoTransport::MergeFrom(const AutoTransport& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AutoTransport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoTransport::CopyFrom(const AutoTransport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoTransport::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->datas())) return false;
  return true;
}

void AutoTransport::Swap(AutoTransport* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AutoTransport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AutoTransport_descriptor_;
  metadata.reflection = AutoTransport_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAutoTransport

// @@protoc_insertion_point(global_scope)
