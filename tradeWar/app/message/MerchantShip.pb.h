// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MerchantShip.proto

#ifndef PROTOBUF_MerchantShip_2eproto__INCLUDED
#define PROTOBUF_MerchantShip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MerchantShip {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MerchantShip_2eproto();
void protobuf_AssignDesc_MerchantShip_2eproto();
void protobuf_ShutdownFile_MerchantShip_2eproto();

class MerchantShipItem;
class MerchantShipWait;
class MerchantShip;

// ===================================================================

class MerchantShipItem : public ::google::protobuf::Message {
 public:
  MerchantShipItem();
  virtual ~MerchantShipItem();

  MerchantShipItem(const MerchantShipItem& from);

  inline MerchantShipItem& operator=(const MerchantShipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MerchantShipItem& default_instance();

  void Swap(MerchantShipItem* other);

  // implements Message ----------------------------------------------

  MerchantShipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MerchantShipItem& from);
  void MergeFrom(const MerchantShipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 endTs = 3;
  inline bool has_endts() const;
  inline void clear_endts();
  static const int kEndTsFieldNumber = 3;
  inline ::google::protobuf::uint32 endts() const;
  inline void set_endts(::google::protobuf::uint32 value);

  // required uint32 waitTs = 4;
  inline bool has_waitts() const;
  inline void clear_waitts();
  static const int kWaitTsFieldNumber = 4;
  inline ::google::protobuf::uint32 waitts() const;
  inline void set_waitts(::google::protobuf::uint32 value);

  // required uint32 totalRes = 5;
  inline bool has_totalres() const;
  inline void clear_totalres();
  static const int kTotalResFieldNumber = 5;
  inline ::google::protobuf::uint32 totalres() const;
  inline void set_totalres(::google::protobuf::uint32 value);

  // required uint32 lostRes = 6;
  inline bool has_lostres() const;
  inline void clear_lostres();
  static const int kLostResFieldNumber = 6;
  inline ::google::protobuf::uint32 lostres() const;
  inline void set_lostres(::google::protobuf::uint32 value);

  // required uint32 lv = 7;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // repeated uint32 challenge = 8;
  inline int challenge_size() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 8;
  inline ::google::protobuf::uint32 challenge(int index) const;
  inline void set_challenge(int index, ::google::protobuf::uint32 value);
  inline void add_challenge(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      challenge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_challenge();

  // @@protoc_insertion_point(class_scope:MerchantShip.MerchantShipItem)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_endts();
  inline void clear_has_endts();
  inline void set_has_waitts();
  inline void clear_has_waitts();
  inline void set_has_totalres();
  inline void clear_has_totalres();
  inline void set_has_lostres();
  inline void clear_has_lostres();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 endts_;
  ::google::protobuf::uint32 waitts_;
  ::google::protobuf::uint32 totalres_;
  ::google::protobuf::uint32 lostres_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > challenge_;
  ::google::protobuf::uint32 lv_;
  friend void  protobuf_AddDesc_MerchantShip_2eproto();
  friend void protobuf_AssignDesc_MerchantShip_2eproto();
  friend void protobuf_ShutdownFile_MerchantShip_2eproto();

  void InitAsDefaultInstance();
  static MerchantShipItem* default_instance_;
};
// -------------------------------------------------------------------

class MerchantShipWait : public ::google::protobuf::Message {
 public:
  MerchantShipWait();
  virtual ~MerchantShipWait();

  MerchantShipWait(const MerchantShipWait& from);

  inline MerchantShipWait& operator=(const MerchantShipWait& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MerchantShipWait& default_instance();

  void Swap(MerchantShipWait* other);

  // implements Message ----------------------------------------------

  MerchantShipWait* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MerchantShipWait& from);
  void MergeFrom(const MerchantShipWait& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint64 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MerchantShip.MerchantShipWait)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_MerchantShip_2eproto();
  friend void protobuf_AssignDesc_MerchantShip_2eproto();
  friend void protobuf_ShutdownFile_MerchantShip_2eproto();

  void InitAsDefaultInstance();
  static MerchantShipWait* default_instance_;
};
// -------------------------------------------------------------------

class MerchantShip : public ::google::protobuf::Message {
 public:
  MerchantShip();
  virtual ~MerchantShip();

  MerchantShip(const MerchantShip& from);

  inline MerchantShip& operator=(const MerchantShip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MerchantShip& default_instance();

  void Swap(MerchantShip* other);

  // implements Message ----------------------------------------------

  MerchantShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MerchantShip& from);
  void MergeFrom(const MerchantShip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MerchantShip.MerchantShipItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::MerchantShip::MerchantShipItem& items(int index) const;
  inline ::MerchantShip::MerchantShipItem* mutable_items(int index);
  inline ::MerchantShip::MerchantShipItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipItem >*
      mutable_items();

  // repeated .MerchantShip.MerchantShipWait wait = 2;
  inline int wait_size() const;
  inline void clear_wait();
  static const int kWaitFieldNumber = 2;
  inline const ::MerchantShip::MerchantShipWait& wait(int index) const;
  inline ::MerchantShip::MerchantShipWait* mutable_wait(int index);
  inline ::MerchantShip::MerchantShipWait* add_wait();
  inline const ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipWait >&
      wait() const;
  inline ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipWait >*
      mutable_wait();

  // @@protoc_insertion_point(class_scope:MerchantShip.MerchantShip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipItem > items_;
  ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipWait > wait_;
  friend void  protobuf_AddDesc_MerchantShip_2eproto();
  friend void protobuf_AssignDesc_MerchantShip_2eproto();
  friend void protobuf_ShutdownFile_MerchantShip_2eproto();

  void InitAsDefaultInstance();
  static MerchantShip* default_instance_;
};
// ===================================================================


// ===================================================================

// MerchantShipItem

// required uint32 uid = 1;
inline bool MerchantShipItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MerchantShipItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MerchantShipItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MerchantShipItem::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 MerchantShipItem::uid() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.uid)
  return uid_;
}
inline void MerchantShipItem::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.uid)
}

// required uint32 id = 2;
inline bool MerchantShipItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MerchantShipItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MerchantShipItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MerchantShipItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MerchantShipItem::id() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.id)
  return id_;
}
inline void MerchantShipItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.id)
}

// required uint32 endTs = 3;
inline bool MerchantShipItem::has_endts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MerchantShipItem::set_has_endts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MerchantShipItem::clear_has_endts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MerchantShipItem::clear_endts() {
  endts_ = 0u;
  clear_has_endts();
}
inline ::google::protobuf::uint32 MerchantShipItem::endts() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.endTs)
  return endts_;
}
inline void MerchantShipItem::set_endts(::google::protobuf::uint32 value) {
  set_has_endts();
  endts_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.endTs)
}

// required uint32 waitTs = 4;
inline bool MerchantShipItem::has_waitts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MerchantShipItem::set_has_waitts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MerchantShipItem::clear_has_waitts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MerchantShipItem::clear_waitts() {
  waitts_ = 0u;
  clear_has_waitts();
}
inline ::google::protobuf::uint32 MerchantShipItem::waitts() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.waitTs)
  return waitts_;
}
inline void MerchantShipItem::set_waitts(::google::protobuf::uint32 value) {
  set_has_waitts();
  waitts_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.waitTs)
}

// required uint32 totalRes = 5;
inline bool MerchantShipItem::has_totalres() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MerchantShipItem::set_has_totalres() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MerchantShipItem::clear_has_totalres() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MerchantShipItem::clear_totalres() {
  totalres_ = 0u;
  clear_has_totalres();
}
inline ::google::protobuf::uint32 MerchantShipItem::totalres() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.totalRes)
  return totalres_;
}
inline void MerchantShipItem::set_totalres(::google::protobuf::uint32 value) {
  set_has_totalres();
  totalres_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.totalRes)
}

// required uint32 lostRes = 6;
inline bool MerchantShipItem::has_lostres() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MerchantShipItem::set_has_lostres() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MerchantShipItem::clear_has_lostres() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MerchantShipItem::clear_lostres() {
  lostres_ = 0u;
  clear_has_lostres();
}
inline ::google::protobuf::uint32 MerchantShipItem::lostres() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.lostRes)
  return lostres_;
}
inline void MerchantShipItem::set_lostres(::google::protobuf::uint32 value) {
  set_has_lostres();
  lostres_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.lostRes)
}

// required uint32 lv = 7;
inline bool MerchantShipItem::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MerchantShipItem::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MerchantShipItem::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MerchantShipItem::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 MerchantShipItem::lv() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.lv)
  return lv_;
}
inline void MerchantShipItem::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.lv)
}

// repeated uint32 challenge = 8;
inline int MerchantShipItem::challenge_size() const {
  return challenge_.size();
}
inline void MerchantShipItem::clear_challenge() {
  challenge_.Clear();
}
inline ::google::protobuf::uint32 MerchantShipItem::challenge(int index) const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipItem.challenge)
  return challenge_.Get(index);
}
inline void MerchantShipItem::set_challenge(int index, ::google::protobuf::uint32 value) {
  challenge_.Set(index, value);
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipItem.challenge)
}
inline void MerchantShipItem::add_challenge(::google::protobuf::uint32 value) {
  challenge_.Add(value);
  // @@protoc_insertion_point(field_add:MerchantShip.MerchantShipItem.challenge)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MerchantShipItem::challenge() const {
  // @@protoc_insertion_point(field_list:MerchantShip.MerchantShipItem.challenge)
  return challenge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MerchantShipItem::mutable_challenge() {
  // @@protoc_insertion_point(field_mutable_list:MerchantShip.MerchantShipItem.challenge)
  return &challenge_;
}

// -------------------------------------------------------------------

// MerchantShipWait

// required uint32 uid = 1;
inline bool MerchantShipWait::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MerchantShipWait::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MerchantShipWait::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MerchantShipWait::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 MerchantShipWait::uid() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipWait.uid)
  return uid_;
}
inline void MerchantShipWait::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipWait.uid)
}

// required uint64 key = 2;
inline bool MerchantShipWait::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MerchantShipWait::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MerchantShipWait::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MerchantShipWait::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 MerchantShipWait::key() const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShipWait.key)
  return key_;
}
inline void MerchantShipWait::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:MerchantShip.MerchantShipWait.key)
}

// -------------------------------------------------------------------

// MerchantShip

// repeated .MerchantShip.MerchantShipItem items = 1;
inline int MerchantShip::items_size() const {
  return items_.size();
}
inline void MerchantShip::clear_items() {
  items_.Clear();
}
inline const ::MerchantShip::MerchantShipItem& MerchantShip::items(int index) const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShip.items)
  return items_.Get(index);
}
inline ::MerchantShip::MerchantShipItem* MerchantShip::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:MerchantShip.MerchantShip.items)
  return items_.Mutable(index);
}
inline ::MerchantShip::MerchantShipItem* MerchantShip::add_items() {
  // @@protoc_insertion_point(field_add:MerchantShip.MerchantShip.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipItem >&
MerchantShip::items() const {
  // @@protoc_insertion_point(field_list:MerchantShip.MerchantShip.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipItem >*
MerchantShip::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:MerchantShip.MerchantShip.items)
  return &items_;
}

// repeated .MerchantShip.MerchantShipWait wait = 2;
inline int MerchantShip::wait_size() const {
  return wait_.size();
}
inline void MerchantShip::clear_wait() {
  wait_.Clear();
}
inline const ::MerchantShip::MerchantShipWait& MerchantShip::wait(int index) const {
  // @@protoc_insertion_point(field_get:MerchantShip.MerchantShip.wait)
  return wait_.Get(index);
}
inline ::MerchantShip::MerchantShipWait* MerchantShip::mutable_wait(int index) {
  // @@protoc_insertion_point(field_mutable:MerchantShip.MerchantShip.wait)
  return wait_.Mutable(index);
}
inline ::MerchantShip::MerchantShipWait* MerchantShip::add_wait() {
  // @@protoc_insertion_point(field_add:MerchantShip.MerchantShip.wait)
  return wait_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipWait >&
MerchantShip::wait() const {
  // @@protoc_insertion_point(field_list:MerchantShip.MerchantShip.wait)
  return wait_;
}
inline ::google::protobuf::RepeatedPtrField< ::MerchantShip::MerchantShipWait >*
MerchantShip::mutable_wait() {
  // @@protoc_insertion_point(field_mutable_list:MerchantShip.MerchantShip.wait)
  return &wait_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MerchantShip

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MerchantShip_2eproto__INCLUDED
