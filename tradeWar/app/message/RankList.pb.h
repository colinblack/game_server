// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RankList.proto

#ifndef PROTOBUF_RankList_2eproto__INCLUDED
#define PROTOBUF_RankList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoRankList {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RankList_2eproto();
void protobuf_AssignDesc_RankList_2eproto();
void protobuf_ShutdownFile_RankList_2eproto();

class RankItem;
class RankItemLevel;
class RankExp;
class RankCombat;
class RankTransport;
class NewServerRankItem;
class NewServerRank;
class ActRankItem;
class ActRank;
class BossRankItem;
class BossRank;
class ArenaRank;

// ===================================================================

class RankItem : public ::google::protobuf::Message {
 public:
  RankItem();
  virtual ~RankItem();

  RankItem(const RankItem& from);

  inline RankItem& operator=(const RankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankItem& default_instance();

  void Swap(RankItem* other);

  // implements Message ----------------------------------------------

  RankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankItem& from);
  void MergeFrom(const RankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string pic = 4;
  inline bool has_pic() const;
  inline void clear_pic();
  static const int kPicFieldNumber = 4;
  inline const ::std::string& pic() const;
  inline void set_pic(const ::std::string& value);
  inline void set_pic(const char* value);
  inline void set_pic(const char* value, size_t size);
  inline ::std::string* mutable_pic();
  inline ::std::string* release_pic();
  inline void set_allocated_pic(::std::string* pic);

  // @@protoc_insertion_point(class_scope:ProtoRankList.RankItem)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pic();
  inline void clear_has_pic();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 value_;
  ::std::string* name_;
  ::std::string* pic_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static RankItem* default_instance_;
};
// -------------------------------------------------------------------

class RankItemLevel : public ::google::protobuf::Message {
 public:
  RankItemLevel();
  virtual ~RankItemLevel();

  RankItemLevel(const RankItemLevel& from);

  inline RankItemLevel& operator=(const RankItemLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankItemLevel& default_instance();

  void Swap(RankItemLevel* other);

  // implements Message ----------------------------------------------

  RankItemLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankItemLevel& from);
  void MergeFrom(const RankItemLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // repeated .ProtoRankList.RankItem data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::ProtoRankList::RankItem& data(int index) const;
  inline ::ProtoRankList::RankItem* mutable_data(int index);
  inline ::ProtoRankList::RankItem* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoRankList.RankItemLevel)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem > data_;
  ::google::protobuf::uint32 lv_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static RankItemLevel* default_instance_;
};
// -------------------------------------------------------------------

class RankExp : public ::google::protobuf::Message {
 public:
  RankExp();
  virtual ~RankExp();

  RankExp(const RankExp& from);

  inline RankExp& operator=(const RankExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankExp& default_instance();

  void Swap(RankExp* other);

  // implements Message ----------------------------------------------

  RankExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankExp& from);
  void MergeFrom(const RankExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoRankList.RankItemLevel data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ProtoRankList::RankItemLevel& data(int index) const;
  inline ::ProtoRankList::RankItemLevel* mutable_data(int index);
  inline ::ProtoRankList::RankItemLevel* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoRankList.RankExp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel > data_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static RankExp* default_instance_;
};
// -------------------------------------------------------------------

class RankCombat : public ::google::protobuf::Message {
 public:
  RankCombat();
  virtual ~RankCombat();

  RankCombat(const RankCombat& from);

  inline RankCombat& operator=(const RankCombat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankCombat& default_instance();

  void Swap(RankCombat* other);

  // implements Message ----------------------------------------------

  RankCombat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankCombat& from);
  void MergeFrom(const RankCombat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoRankList.RankItemLevel data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ProtoRankList::RankItemLevel& data(int index) const;
  inline ::ProtoRankList::RankItemLevel* mutable_data(int index);
  inline ::ProtoRankList::RankItemLevel* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoRankList.RankCombat)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel > data_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static RankCombat* default_instance_;
};
// -------------------------------------------------------------------

class RankTransport : public ::google::protobuf::Message {
 public:
  RankTransport();
  virtual ~RankTransport();

  RankTransport(const RankTransport& from);

  inline RankTransport& operator=(const RankTransport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankTransport& default_instance();

  void Swap(RankTransport* other);

  // implements Message ----------------------------------------------

  RankTransport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankTransport& from);
  void MergeFrom(const RankTransport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoRankList.RankItemLevel data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ProtoRankList::RankItemLevel& data(int index) const;
  inline ::ProtoRankList::RankItemLevel* mutable_data(int index);
  inline ::ProtoRankList::RankItemLevel* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
      mutable_data();

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoRankList.RankTransport)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel > data_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static RankTransport* default_instance_;
};
// -------------------------------------------------------------------

class NewServerRankItem : public ::google::protobuf::Message {
 public:
  NewServerRankItem();
  virtual ~NewServerRankItem();

  NewServerRankItem(const NewServerRankItem& from);

  inline NewServerRankItem& operator=(const NewServerRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewServerRankItem& default_instance();

  void Swap(NewServerRankItem* other);

  // implements Message ----------------------------------------------

  NewServerRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewServerRankItem& from);
  void MergeFrom(const NewServerRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ver = 2;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 2;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required bool reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline bool reward() const;
  inline void set_reward(bool value);

  // repeated .ProtoRankList.RankItem data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::ProtoRankList::RankItem& data(int index) const;
  inline ::ProtoRankList::RankItem* mutable_data(int index);
  inline ::ProtoRankList::RankItem* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoRankList.NewServerRankItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 ts_;
  bool reward_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem > data_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static NewServerRankItem* default_instance_;
};
// -------------------------------------------------------------------

class NewServerRank : public ::google::protobuf::Message {
 public:
  NewServerRank();
  virtual ~NewServerRank();

  NewServerRank(const NewServerRank& from);

  inline NewServerRank& operator=(const NewServerRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewServerRank& default_instance();

  void Swap(NewServerRank* other);

  // implements Message ----------------------------------------------

  NewServerRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewServerRank& from);
  void MergeFrom(const NewServerRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoRankList.NewServerRankItem ranks = 1;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 1;
  inline const ::ProtoRankList::NewServerRankItem& ranks(int index) const;
  inline ::ProtoRankList::NewServerRankItem* mutable_ranks(int index);
  inline ::ProtoRankList::NewServerRankItem* add_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::NewServerRankItem >&
      ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::NewServerRankItem >*
      mutable_ranks();

  // @@protoc_insertion_point(class_scope:ProtoRankList.NewServerRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::NewServerRankItem > ranks_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static NewServerRank* default_instance_;
};
// -------------------------------------------------------------------

class ActRankItem : public ::google::protobuf::Message {
 public:
  ActRankItem();
  virtual ~ActRankItem();

  ActRankItem(const ActRankItem& from);

  inline ActRankItem& operator=(const ActRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActRankItem& default_instance();

  void Swap(ActRankItem* other);

  // implements Message ----------------------------------------------

  ActRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActRankItem& from);
  void MergeFrom(const ActRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ver = 2;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 2;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required bool reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline bool reward() const;
  inline void set_reward(bool value);

  // repeated .ProtoRankList.RankItem data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::ProtoRankList::RankItem& data(int index) const;
  inline ::ProtoRankList::RankItem* mutable_data(int index);
  inline ::ProtoRankList::RankItem* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoRankList.ActRankItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 ts_;
  bool reward_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem > data_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static ActRankItem* default_instance_;
};
// -------------------------------------------------------------------

class ActRank : public ::google::protobuf::Message {
 public:
  ActRank();
  virtual ~ActRank();

  ActRank(const ActRank& from);

  inline ActRank& operator=(const ActRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActRank& default_instance();

  void Swap(ActRank* other);

  // implements Message ----------------------------------------------

  ActRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActRank& from);
  void MergeFrom(const ActRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoRankList.ActRankItem ranks = 1;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 1;
  inline const ::ProtoRankList::ActRankItem& ranks(int index) const;
  inline ::ProtoRankList::ActRankItem* mutable_ranks(int index);
  inline ::ProtoRankList::ActRankItem* add_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::ActRankItem >&
      ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::ActRankItem >*
      mutable_ranks();

  // @@protoc_insertion_point(class_scope:ProtoRankList.ActRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::ActRankItem > ranks_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static ActRank* default_instance_;
};
// -------------------------------------------------------------------

class BossRankItem : public ::google::protobuf::Message {
 public:
  BossRankItem();
  virtual ~BossRankItem();

  BossRankItem(const BossRankItem& from);

  inline BossRankItem& operator=(const BossRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossRankItem& default_instance();

  void Swap(BossRankItem* other);

  // implements Message ----------------------------------------------

  BossRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossRankItem& from);
  void MergeFrom(const BossRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint64 hurt = 2;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 2;
  inline ::google::protobuf::uint64 hurt() const;
  inline void set_hurt(::google::protobuf::uint64 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoRankList.BossRankItem)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 hurt_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static BossRankItem* default_instance_;
};
// -------------------------------------------------------------------

class BossRank : public ::google::protobuf::Message {
 public:
  BossRank();
  virtual ~BossRank();

  BossRank(const BossRank& from);

  inline BossRank& operator=(const BossRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossRank& default_instance();

  void Swap(BossRank* other);

  // implements Message ----------------------------------------------

  BossRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossRank& from);
  void MergeFrom(const BossRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required bool flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline bool flag() const;
  inline void set_flag(bool value);

  // repeated .ProtoRankList.BossRankItem ranks = 3;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 3;
  inline const ::ProtoRankList::BossRankItem& ranks(int index) const;
  inline ::ProtoRankList::BossRankItem* mutable_ranks(int index);
  inline ::ProtoRankList::BossRankItem* add_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::BossRankItem >&
      ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::BossRankItem >*
      mutable_ranks();

  // @@protoc_insertion_point(class_scope:ProtoRankList.BossRank)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  bool flag_;
  ::google::protobuf::RepeatedPtrField< ::ProtoRankList::BossRankItem > ranks_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static BossRank* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRank : public ::google::protobuf::Message {
 public:
  ArenaRank();
  virtual ~ArenaRank();

  ArenaRank(const ArenaRank& from);

  inline ArenaRank& operator=(const ArenaRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaRank& default_instance();

  void Swap(ArenaRank* other);

  // implements Message ----------------------------------------------

  ArenaRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaRank& from);
  void MergeFrom(const ArenaRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline bool flag() const;
  inline void set_flag(bool value);

  // repeated uint32 ranks = 2;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 2;
  inline ::google::protobuf::uint32 ranks(int index) const;
  inline void set_ranks(int index, ::google::protobuf::uint32 value);
  inline void add_ranks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ranks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ranks();

  // @@protoc_insertion_point(class_scope:ProtoRankList.ArenaRank)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ranks_;
  bool flag_;
  friend void  protobuf_AddDesc_RankList_2eproto();
  friend void protobuf_AssignDesc_RankList_2eproto();
  friend void protobuf_ShutdownFile_RankList_2eproto();

  void InitAsDefaultInstance();
  static ArenaRank* default_instance_;
};
// ===================================================================


// ===================================================================

// RankItem

// required uint32 uid = 1;
inline bool RankItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankItem::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RankItem::uid() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItem.uid)
  return uid_;
}
inline void RankItem::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.RankItem.uid)
}

// required uint32 value = 2;
inline bool RankItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankItem::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 RankItem::value() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItem.value)
  return value_;
}
inline void RankItem::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.RankItem.value)
}

// required string name = 3;
inline bool RankItem::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankItem::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankItem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RankItem::name() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItem.name)
  return *name_;
}
inline void RankItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoRankList.RankItem.name)
}
inline void RankItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoRankList.RankItem.name)
}
inline void RankItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoRankList.RankItem.name)
}
inline ::std::string* RankItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankItem.name)
  return name_;
}
inline ::std::string* RankItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoRankList.RankItem.name)
}

// required string pic = 4;
inline bool RankItem::has_pic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankItem::set_has_pic() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankItem::clear_has_pic() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankItem::clear_pic() {
  if (pic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_->clear();
  }
  clear_has_pic();
}
inline const ::std::string& RankItem::pic() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItem.pic)
  return *pic_;
}
inline void RankItem::set_pic(const ::std::string& value) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoRankList.RankItem.pic)
}
inline void RankItem::set_pic(const char* value) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoRankList.RankItem.pic)
}
inline void RankItem::set_pic(const char* value, size_t size) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_ = new ::std::string;
  }
  pic_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoRankList.RankItem.pic)
}
inline ::std::string* RankItem::mutable_pic() {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankItem.pic)
  return pic_;
}
inline ::std::string* RankItem::release_pic() {
  clear_has_pic();
  if (pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pic_;
    pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankItem::set_allocated_pic(::std::string* pic) {
  if (pic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pic_;
  }
  if (pic) {
    set_has_pic();
    pic_ = pic;
  } else {
    clear_has_pic();
    pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoRankList.RankItem.pic)
}

// -------------------------------------------------------------------

// RankItemLevel

// required uint32 lv = 1;
inline bool RankItemLevel::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankItemLevel::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankItemLevel::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankItemLevel::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 RankItemLevel::lv() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItemLevel.lv)
  return lv_;
}
inline void RankItemLevel::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.RankItemLevel.lv)
}

// repeated .ProtoRankList.RankItem data = 2;
inline int RankItemLevel::data_size() const {
  return data_.size();
}
inline void RankItemLevel::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItem& RankItemLevel::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankItemLevel.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItem* RankItemLevel::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankItemLevel.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItem* RankItemLevel::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.RankItemLevel.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
RankItemLevel::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.RankItemLevel.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
RankItemLevel::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.RankItemLevel.data)
  return &data_;
}

// -------------------------------------------------------------------

// RankExp

// repeated .ProtoRankList.RankItemLevel data = 1;
inline int RankExp::data_size() const {
  return data_.size();
}
inline void RankExp::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItemLevel& RankExp::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankExp.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItemLevel* RankExp::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankExp.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItemLevel* RankExp::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.RankExp.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
RankExp::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.RankExp.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
RankExp::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.RankExp.data)
  return &data_;
}

// -------------------------------------------------------------------

// RankCombat

// repeated .ProtoRankList.RankItemLevel data = 1;
inline int RankCombat::data_size() const {
  return data_.size();
}
inline void RankCombat::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItemLevel& RankCombat::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankCombat.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItemLevel* RankCombat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankCombat.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItemLevel* RankCombat::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.RankCombat.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
RankCombat::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.RankCombat.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
RankCombat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.RankCombat.data)
  return &data_;
}

// -------------------------------------------------------------------

// RankTransport

// repeated .ProtoRankList.RankItemLevel data = 1;
inline int RankTransport::data_size() const {
  return data_.size();
}
inline void RankTransport::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItemLevel& RankTransport::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankTransport.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItemLevel* RankTransport::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.RankTransport.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItemLevel* RankTransport::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.RankTransport.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >&
RankTransport::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.RankTransport.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItemLevel >*
RankTransport::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.RankTransport.data)
  return &data_;
}

// required uint32 ts = 2;
inline bool RankTransport::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankTransport::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankTransport::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankTransport::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RankTransport::ts() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.RankTransport.ts)
  return ts_;
}
inline void RankTransport::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.RankTransport.ts)
}

// -------------------------------------------------------------------

// NewServerRankItem

// required uint32 id = 1;
inline bool NewServerRankItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewServerRankItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewServerRankItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewServerRankItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NewServerRankItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRankItem.id)
  return id_;
}
inline void NewServerRankItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.NewServerRankItem.id)
}

// required uint32 ver = 2;
inline bool NewServerRankItem::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewServerRankItem::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewServerRankItem::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewServerRankItem::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 NewServerRankItem::ver() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRankItem.ver)
  return ver_;
}
inline void NewServerRankItem::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.NewServerRankItem.ver)
}

// required uint32 ts = 3;
inline bool NewServerRankItem::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewServerRankItem::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewServerRankItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewServerRankItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 NewServerRankItem::ts() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRankItem.ts)
  return ts_;
}
inline void NewServerRankItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.NewServerRankItem.ts)
}

// required bool reward = 4;
inline bool NewServerRankItem::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewServerRankItem::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewServerRankItem::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewServerRankItem::clear_reward() {
  reward_ = false;
  clear_has_reward();
}
inline bool NewServerRankItem::reward() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRankItem.reward)
  return reward_;
}
inline void NewServerRankItem::set_reward(bool value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.NewServerRankItem.reward)
}

// repeated .ProtoRankList.RankItem data = 5;
inline int NewServerRankItem::data_size() const {
  return data_.size();
}
inline void NewServerRankItem::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItem& NewServerRankItem::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRankItem.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItem* NewServerRankItem::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.NewServerRankItem.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItem* NewServerRankItem::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.NewServerRankItem.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
NewServerRankItem::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.NewServerRankItem.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
NewServerRankItem::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.NewServerRankItem.data)
  return &data_;
}

// -------------------------------------------------------------------

// NewServerRank

// repeated .ProtoRankList.NewServerRankItem ranks = 1;
inline int NewServerRank::ranks_size() const {
  return ranks_.size();
}
inline void NewServerRank::clear_ranks() {
  ranks_.Clear();
}
inline const ::ProtoRankList::NewServerRankItem& NewServerRank::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.NewServerRank.ranks)
  return ranks_.Get(index);
}
inline ::ProtoRankList::NewServerRankItem* NewServerRank::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.NewServerRank.ranks)
  return ranks_.Mutable(index);
}
inline ::ProtoRankList::NewServerRankItem* NewServerRank::add_ranks() {
  // @@protoc_insertion_point(field_add:ProtoRankList.NewServerRank.ranks)
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::NewServerRankItem >&
NewServerRank::ranks() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.NewServerRank.ranks)
  return ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::NewServerRankItem >*
NewServerRank::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.NewServerRank.ranks)
  return &ranks_;
}

// -------------------------------------------------------------------

// ActRankItem

// required uint32 id = 1;
inline bool ActRankItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActRankItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActRankItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActRankItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActRankItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRankItem.id)
  return id_;
}
inline void ActRankItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.ActRankItem.id)
}

// required uint32 ver = 2;
inline bool ActRankItem::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActRankItem::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActRankItem::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActRankItem::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 ActRankItem::ver() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRankItem.ver)
  return ver_;
}
inline void ActRankItem::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.ActRankItem.ver)
}

// required uint32 ts = 3;
inline bool ActRankItem::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActRankItem::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActRankItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActRankItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ActRankItem::ts() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRankItem.ts)
  return ts_;
}
inline void ActRankItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.ActRankItem.ts)
}

// required bool reward = 4;
inline bool ActRankItem::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActRankItem::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActRankItem::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActRankItem::clear_reward() {
  reward_ = false;
  clear_has_reward();
}
inline bool ActRankItem::reward() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRankItem.reward)
  return reward_;
}
inline void ActRankItem::set_reward(bool value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.ActRankItem.reward)
}

// repeated .ProtoRankList.RankItem data = 5;
inline int ActRankItem::data_size() const {
  return data_.size();
}
inline void ActRankItem::clear_data() {
  data_.Clear();
}
inline const ::ProtoRankList::RankItem& ActRankItem::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRankItem.data)
  return data_.Get(index);
}
inline ::ProtoRankList::RankItem* ActRankItem::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.ActRankItem.data)
  return data_.Mutable(index);
}
inline ::ProtoRankList::RankItem* ActRankItem::add_data() {
  // @@protoc_insertion_point(field_add:ProtoRankList.ActRankItem.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >&
ActRankItem::data() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.ActRankItem.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::RankItem >*
ActRankItem::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.ActRankItem.data)
  return &data_;
}

// -------------------------------------------------------------------

// ActRank

// repeated .ProtoRankList.ActRankItem ranks = 1;
inline int ActRank::ranks_size() const {
  return ranks_.size();
}
inline void ActRank::clear_ranks() {
  ranks_.Clear();
}
inline const ::ProtoRankList::ActRankItem& ActRank::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ActRank.ranks)
  return ranks_.Get(index);
}
inline ::ProtoRankList::ActRankItem* ActRank::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.ActRank.ranks)
  return ranks_.Mutable(index);
}
inline ::ProtoRankList::ActRankItem* ActRank::add_ranks() {
  // @@protoc_insertion_point(field_add:ProtoRankList.ActRank.ranks)
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::ActRankItem >&
ActRank::ranks() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.ActRank.ranks)
  return ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::ActRankItem >*
ActRank::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.ActRank.ranks)
  return &ranks_;
}

// -------------------------------------------------------------------

// BossRankItem

// required uint32 uid = 1;
inline bool BossRankItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossRankItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossRankItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossRankItem::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BossRankItem::uid() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRankItem.uid)
  return uid_;
}
inline void BossRankItem::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.BossRankItem.uid)
}

// required uint64 hurt = 2;
inline bool BossRankItem::has_hurt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossRankItem::set_has_hurt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossRankItem::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossRankItem::clear_hurt() {
  hurt_ = GOOGLE_ULONGLONG(0);
  clear_has_hurt();
}
inline ::google::protobuf::uint64 BossRankItem::hurt() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRankItem.hurt)
  return hurt_;
}
inline void BossRankItem::set_hurt(::google::protobuf::uint64 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.BossRankItem.hurt)
}

// required string name = 3;
inline bool BossRankItem::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossRankItem::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossRankItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossRankItem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BossRankItem::name() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRankItem.name)
  return *name_;
}
inline void BossRankItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoRankList.BossRankItem.name)
}
inline void BossRankItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoRankList.BossRankItem.name)
}
inline void BossRankItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoRankList.BossRankItem.name)
}
inline ::std::string* BossRankItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoRankList.BossRankItem.name)
  return name_;
}
inline ::std::string* BossRankItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossRankItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoRankList.BossRankItem.name)
}

// -------------------------------------------------------------------

// BossRank

// required uint32 ts = 1;
inline bool BossRank::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossRank::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossRank::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossRank::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 BossRank::ts() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRank.ts)
  return ts_;
}
inline void BossRank::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.BossRank.ts)
}

// required bool flag = 2;
inline bool BossRank::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossRank::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossRank::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossRank::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool BossRank::flag() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRank.flag)
  return flag_;
}
inline void BossRank::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.BossRank.flag)
}

// repeated .ProtoRankList.BossRankItem ranks = 3;
inline int BossRank::ranks_size() const {
  return ranks_.size();
}
inline void BossRank::clear_ranks() {
  ranks_.Clear();
}
inline const ::ProtoRankList::BossRankItem& BossRank::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.BossRank.ranks)
  return ranks_.Get(index);
}
inline ::ProtoRankList::BossRankItem* BossRank::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoRankList.BossRank.ranks)
  return ranks_.Mutable(index);
}
inline ::ProtoRankList::BossRankItem* BossRank::add_ranks() {
  // @@protoc_insertion_point(field_add:ProtoRankList.BossRank.ranks)
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoRankList::BossRankItem >&
BossRank::ranks() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.BossRank.ranks)
  return ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoRankList::BossRankItem >*
BossRank::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.BossRank.ranks)
  return &ranks_;
}

// -------------------------------------------------------------------

// ArenaRank

// required bool flag = 1;
inline bool ArenaRank::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaRank::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaRank::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaRank::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool ArenaRank::flag() const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ArenaRank.flag)
  return flag_;
}
inline void ArenaRank::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoRankList.ArenaRank.flag)
}

// repeated uint32 ranks = 2;
inline int ArenaRank::ranks_size() const {
  return ranks_.size();
}
inline void ArenaRank::clear_ranks() {
  ranks_.Clear();
}
inline ::google::protobuf::uint32 ArenaRank::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ProtoRankList.ArenaRank.ranks)
  return ranks_.Get(index);
}
inline void ArenaRank::set_ranks(int index, ::google::protobuf::uint32 value) {
  ranks_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoRankList.ArenaRank.ranks)
}
inline void ArenaRank::add_ranks(::google::protobuf::uint32 value) {
  ranks_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoRankList.ArenaRank.ranks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ArenaRank::ranks() const {
  // @@protoc_insertion_point(field_list:ProtoRankList.ArenaRank.ranks)
  return ranks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ArenaRank::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ProtoRankList.ArenaRank.ranks)
  return &ranks_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoRankList

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RankList_2eproto__INCLUDED
