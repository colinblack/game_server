/*
 * AddUser.cpp
 *
 *  Created on: 2016-7-1
 *      Author: Ralf
 */

#include "LogicInc.h"
#include <iostream>
#include <fstream>















































#define F_NUM 496
#define S_NUM 2012
const char* F_NAME[F_NUM] = {"赵","钱","孙","李","周","吴","郑","王","冯","陈","褚","卫","蒋","沈","韩","杨","朱","秦","尤","许","何","吕","施","张","孔","曹","严","华","金","魏","陶","姜","戚","谢","邹","喻","柏","水","窦","章","云","苏","潘","葛","奚","范","彭","郎","鲁","韦","昌","马","苗","凤","花","方","俞","任","袁","柳","邓","鲍","史","唐","费","廉","岑","薛","雷","贺","倪","汤","藤","殷","罗","毕","郝","邬","安","常","乐","于","时","付","皮","卞","齐","康","伍","余","元","卜","顾","孟","平","黄","和","穆","肖","尹","姚","邵","湛","汪","祁","毛","禹","狄","米","贝","明","藏","计","伏","成","戴","谈","宋","茅","庞","熊","纪","舒","屈","项","祝","董","梁","杜","阮","蓝","闵","席","季","麻","强","贾","路","娄","危","江","童","颜","郭","梅","盛","林","刁","钟","徐","邱","骆","高","夏","蔡","田","樊","胡","凌","霍","虞","万","支","柯","昝","管","卢","莫","经","房","裘","缪","干","解","应","宗","丁","宣","贲","郁","单","杭","洪","包","诸","左","石","崔","吉","钮","龚","程","嵇","邢","滑","裴","陆","荣","翁","荀","羊","惠","甄","曲","家","封","芮","羿","储","靳","汲","邴","糜","松","井","段","富","巫","乌","焦","巴","弓","牧","隗","山","谷","车","侯","宓","蓬","全","郗","班","仰","秋","仲","伊","宫","宁","仇","栾","暴","甘","钭","厉","戎","祖","武","符","刘","景","詹","束","龙","叶","幸","司","韶","郜","黎","蓟","薄","印","宿","白","怀","蒲","邰","从","鄂","索","咸","籍","赖","卓","蔺","屠","蒙","池","乔","阴","胥","能","苍","双","闻","莘","党","翟","谭","贡","劳","逄","姬","申","扶","堵","冉","宰","郦","雍","隙","璩","桑","桂","濮","牛","寿","通","边","扈","燕","冀","郏","浦","尚","农","温","别","庄","晏","柴","瞿","阎","充","慕","连","茹","习","宦","艾","鱼","容","向","古","易","慎","戈","廖","庾","终","暨","居","衡","步","都","耿","满","弘","匡","文","国","寇","广","禄","阙","东","欧","殳","沃","利","蔚","越","夔","隆","师","巩","厍","聂","晁","勾","敖","融","冷","訾","辛","阚","那","简","饶","空","曾","毋","沙","乜","养","鞠","须","丰","巢","关","蒯","相","查","后","荆","红","游","竺","权","逯","盖","益","桓","公","俟","上官","欧阳","夏候","诸葛","闻人","东方","赫连","皇甫","尉迟","公羊","澹台","公冶","宗政","濮阳","淳于","单于","太叔","申屠","公孙","仲孙","轩辕","令狐","钟离","宇文","长孙","慕容","鲜于","闾丘","司徒","司空","亓官","司寇","仉督","子车","颛孙","端木","巫马","公西","漆雕","乐正","壤驷","公良","拓拔","夹谷","宰父","谷梁","楚","晋","闫","法","汝","鄢","涂","钦","段干","百里","东郭","南门","呼延","归海","羊舌","微生","岳","帅","缑","亢","况","有","琴","梁丘","左丘","东门","西门","商","牟","佘","耳","伯","赏","南宫","墨","哈","谯笪","年","爱","阳","佟","第五","言","福"};
const char* S_NAME[S_NUM] = {"之玉","越泽","锦程","修杰","烨伟","尔曼","立辉","致远","天思","友绿","聪健","修洁","访琴","初彤","谷雪","平灵","源智","烨华","振家","越彬","子轩","伟宸","晋鹏","觅松","海亦","雨珍","浩宇","嘉熙","志泽","苑博","念波","峻熙","俊驰","聪展","南松","问旋","黎昕","谷波","凝海","靖易","芷烟","渊思","煜祺","乐驹","风华","睿渊","博超","天磊","夜白","初晴","瑾瑜","鹏飞","弘文","伟泽","迎松","雨泽","鹏笑","诗云","白易","远航","笑白","映波","代桃","晓啸","智宸","晓博","靖琪","十八","君浩","绍辉","冷安","盼旋","秋白","天德","铁身","老黑","半邪","半山","一江","冰安","皓轩","子默","熠彤","青寒","烨磊","愚志","飞风","问筠","旭尧","妙海","平文","冷之","尔阳","天宇","正豪","文博","明辉","行恶","哲瀚","子骞","泽洋","灵竹","幼旋","百招","不斜","擎汉","千万","高烽","大开","不正","伟帮","如豹","三德","三毒","连虎","十三","酬海","天川","一德","复天","牛青","羊青","大楚","傀斗","老五","老九","定帮","自中","开山","似狮","无声","一手","严青","老四","不可","随阴","大有","中恶","延恶","百川","世倌","连碧","岱周","擎苍","思远","嘉懿","鸿煊","笑天","晟睿","强炫","寄灵","听白","鸿涛","孤风","青文","盼秋","怜烟","浩然","明杰","昊焱","伟诚","剑通","鹏涛","鑫磊","醉薇","尔蓝","靖仇","成风","豪英","若风","难破","德地","无施","追命","成协","人达","亿先","不评","成威","成败","难胜","人英","忘幽","世德","世平","广山","德天","人雄","人杰","不言","难摧","世立","老三","若之","成危","元龙","成仁","若剑","难敌","浩阑","士晋","铸海","人龙","伯云","老头","南风","擎宇","浩轩","煜城","博涛","问安","烨霖","天佑","明雪","书芹","半雪","伟祺","从安","寻菡","秋寒","谷槐","文轩","立诚","立果","明轩","楷瑞","炎彬","鹏煊","幼南","沛山","不尤","道天","剑愁","千筹","广缘","天奇","道罡","远望","乘风","剑心","道之","乘云","绝施","冥幽","天抒","剑成","士萧","文龙","一鸣","剑鬼","半仙","万言","剑封","远锋","天与","元正","世开","不凡","断缘","中道","绝悟","道消","断秋","远山","蓝血","无招","无极","鬼神","满天","飞扬","醉山","语堂","懿轩","雅阳","鑫鹏","文昊","松思","水云","山柳","荣轩","绮彤","沛白","慕蕊","觅云","鹭洋","立轩","金鑫","健柏","建辉","鹤轩","昊强","凡梦","代丝","远侵","一斩","一笑","一刀","行天","无血","无剑","无敌","万怨","万天","万声","万恶","万仇","天问","天寿","送终","山河","三问","如花","灭龙","聋五","绝义","绝山","剑身","浩天","非笑","恶天","断天","仇血","仇天","沧海","不二","碧空","半鬼","文涛","晓刚","洪纲","砖家","叫兽","傀儡","安邦","安福","安歌","安国","安和","安康","安澜","安民","安宁","安平","安然","安顺","安翔","安晏","安宜","安怡","安易","安志","昂然","昂雄","宾白","宾鸿","宾实","彬彬","彬炳","彬郁","斌斌","斌蔚","滨海","波光","波鸿","波峻","波涛","博瀚","博达","博厚","博简","博明","博容","博赡","博涉","博实","博文","博学","博雅","博延","博艺","博易","博裕","博远","才捷","才良","才艺","才英","才哲","才俊","成和","成弘","成化","成济","成礼","成龙","成双","成天","成文","成业","成益","成荫","成周","承安","承弼","承德","承恩","承福","承基","承教","承平","承嗣","承天","承望","承宣","承颜","承业","承悦","承允","承运","承载","承泽","承志","德本","德海","德厚","德华","德辉","德惠","德容","德润","德寿","德水","德馨","德曜","德业","德义","德庸","德佑","德宇","德元","德运","德泽","德明","飞昂","飞白","飞飙","飞掣","飞尘","飞沉","飞驰","飞光","飞翰","飞航","飞翮","飞鸿","飞虎","飞捷","飞龙","飞鸾","飞鸣","飞鹏","飞文","飞翔","飞星","飞翼","飞英","飞宇","飞羽","飞雨","飞语","飞跃","飞章","飞舟","丰茂","丰羽","刚豪","刚洁","刚捷","刚毅","高昂","高岑","高畅","高超","高驰","高达","高澹","高飞","高芬","高峯","高峰","高歌","高格","高寒","高翰","高杰","高洁","高峻","高朗","高丽","高邈","高旻","高明","高爽","高兴","高轩","高雅","高扬","高阳","高义","高谊","高逸","高懿","高原","高远","高韵","高卓","光赫","光华","光辉","光济","光霁","光亮","光临","光明","光启","光熙","光耀","光誉","光远","国安","国兴","国源","冠宇","冠玉","晗昱","晗日","涵畅","涵涤","涵亮","涵忍","涵容","涵润","涵涵","涵煦","涵蓄","涵衍","涵意","涵映","涵育","翰采","翰池","翰飞","翰海","翰翮","翰林","翰墨","翰学","翰音","瀚玥","翰藻","瀚海","瀚漠","昊苍","昊昊","昊空","昊乾","昊穹","昊然","昊天","昊英","浩波","浩博","浩初","浩大","浩宕","浩荡","浩歌","浩广","浩涆","浩瀚","浩浩","浩慨","浩旷","浩阔","浩漫","浩淼","浩渺","浩邈","浩气","浩穰","浩壤","浩思","浩言","和蔼","和安","和璧","和昶","和畅","和风","和歌","和光","和平","和洽","和惬","和顺","和硕","和颂","和泰","和悌","和通","和同","和煦","和雅","和宜","和怡","和玉","和裕","和豫","和悦","和韵","和泽","和正","和志","弘博","弘大","弘方","弘光","弘和","弘厚","弘化","弘济","弘阔","弘亮","弘量","弘深","弘盛","弘图","弘伟","弘新","弘雅","弘扬","弘业","弘义","弘益","弘毅","弘懿","弘致","弘壮","宏伯","宏博","宏才","宏畅","宏达","宏大","宏放","宏富","宏峻","宏浚","宏恺","宏旷","宏阔","宏朗","宏茂","宏邈","宏儒","宏深","宏胜","宏盛","宏爽","宏硕","宏伟","宏扬","宏义","宏逸","宏毅","宏远","宏壮","鸿宝","鸿波","鸿博","鸿才","鸿彩","鸿畅","鸿畴","鸿达","鸿德","鸿飞","鸿风","鸿福","鸿光","鸿晖","鸿朗","鸿文","鸿熙","鸿羲","鸿禧","鸿信","鸿轩","鸿雪","鸿羽","鸿远","鸿云","鸿运","鸿哲","鸿祯","鸿振","鸿志","鸿卓","华奥","华采","华彩","华灿","华藏","华池","华翰","华皓","华晖","华辉","华茂","华美","华清","华荣","华容","嘉赐","嘉德","嘉福","嘉良","嘉茂","嘉木","嘉慕","嘉纳","嘉年","嘉平","嘉庆","嘉荣","嘉容","嘉瑞","嘉胜","嘉石","嘉实","嘉树","嘉澍","嘉禧","嘉祥","嘉歆","嘉许","嘉勋","嘉言","嘉谊","嘉颖","嘉佑","嘉玉","嘉誉","嘉悦","嘉运","嘉泽","嘉珍","嘉祯","嘉志","嘉致","坚白","坚壁","坚秉","坚成","坚诚","建安","建白","建柏","建本","建弼","建德","建华","建明","建茗","建木","建树","建同","建修","建业","建义","建元","建章","建中","经赋","经亘","经国","经略","经纶","经纬","经武","经业","经义","经艺","景澄","景福","景焕","景辉","景龙","景明","景山","景胜","景铄","景天","景同","景曜","君昊","俊艾","俊拔","俊弼","俊才","俊材","俊楚","俊达","俊德","俊发","俊风","俊豪","俊健","俊杰","俊捷","俊郎","俊力","俊良","俊迈","俊茂","俊美","俊民","俊名","俊明","俊楠","俊能","俊人","俊爽","俊悟","俊晤","俊侠","俊贤","俊雄","俊雅","俊彦","俊逸","俊英","俊友","俊语","俊誉","俊远","俊哲","俊喆","俊智","季萌","季同","开畅","开诚","开宇","开济","开霁","开朗","凯安","凯唱","凯定","凯风","凯复","凯歌","凯捷","凯凯","凯康","凯乐","凯旋","凯泽","恺歌","恺乐","康安","康伯","康成","康德","康复","康健","康乐","康宁","康平","康胜","康盛","康时","康适","康顺","康泰","康裕","乐安","乐邦","乐成","乐池","乐和","乐家","乐康","乐人","乐容","乐山","乐生","乐圣","乐水","醉易","紫萱","紫霜","紫南","紫菱","紫蓝","紫翠","紫安","芷天","芷容","芷巧","芷卉","芷荷","之桃","元霜","元绿","元槐","元枫","语雪","语山","语蓉","语琴","语海","语芙","语儿","语蝶","雨雪","雨文","雨梅","雨莲","雨兰","幼丝","幼枫","又菡","友梅","友儿","映萱","映安","迎梦","迎波","易巧","亦丝","亦巧","忆雪","忆文","忆梅","忆枫","以丹","依丝","夜玉","夜梦","夜春","雁荷","雁风","雅彤","雅琴","寻梅","寻冬","雪珍","雪瑶","雪旋","雪卉","笑旋","笑蓝","笑翠","晓亦","晓夏","向梦","香萱","香岚","夏真","夏山","夏兰","惜雪","惜蕊","惜灵","问夏","问蕊","问梅","听筠","听枫","天曼","思松","思菱","水瑶","水彤","书竹","书易","诗桃","诗双","诗珊","诗蕊","山菡","山蝶","若雁","若菱","如风","如冬","如波","秋柔","青雪","青曼","巧蕊","千亦","千柔","千柳","绮琴","绮梅","平萱","平露","沛儿","盼烟","凝雁","凝安","念之","念柏","妙之","妙梦","妙柏","梦之","梦桃","梦琪","梦露","梦凡","曼容","曼荷","曼寒","曼安","绿真","凌文","凌青","凌波","怜阳","怜珊","冷雪","冷荷","乐萱","乐天","乐松","乐枫","静芙","靖柏","寄真","寄文","寄琴","幻天","幻珊","寒天","寒凝","寒梦","寒荷","涵易","涵菱","含玉","含烟","含灵","含蕾","海云","海冬","谷蕊","谷兰","飞珍","飞槐","访云","访烟","访天","访风","凡阳","凡旋","凡梅","凡灵","凡蕾","尔丝","尔柳","尔芙","尔白","孤菱","沛萍","梦柏","从阳","绿海","白梅","秋烟","访旋","元珊","凌旋","依珊","寻凝","幻柏","雨寒","寒安","怀绿","书琴","水香","向彤","曼冬","怜梦","安珊","映阳","思天","初珍","冷珍","海安","从彤","灵珊","夏彤","映菡","青筠","易真","幼荷","冷霜","凝旋","夜柳","紫文","凡桃","醉蝶","从云","冰萍","小萱","白筠","依云","元柏","丹烟","念云","易蓉","青易","友卉","若山","涵柳","映菱","依凝","怜南","水儿","从筠","千秋","代芙","之卉","幻丝","书瑶","含之","雪珊","海之","寄云","盼海","谷梦","雁兰","晓灵","向珊","宛筠","笑南","梦容","寄柔","静枫","尔容","沛蓝","宛海","迎彤","梦易","惜海","灵阳","念寒","采梦","夜绿","又亦","梦山","醉波","慕晴","安彤","半烟","翠桃","书蝶","寻云","冰绿","山雁","南莲","夜梅","翠阳","芷文","南露","向真","又晴","又蓝","雅旋","千儿","听安","凌蝶","向露","从凝","雨双","依白","以筠","含巧","晓瑶","忆山","以莲","冰海","盼芙","冰珍","半双","以冬","千凝","笑阳","香菱","友蕊","若云","天晴","笑珊","凡霜","南珍","晓霜","芷云","谷芹","芷蝶","雨柏","之云","靖巧","寄翠","涵菡","雁卉","涵山","念薇","绮兰","迎蕾","秋荷","代天","采波","诗兰","谷丝","凝琴","凝芙","尔风","觅双","忆灵","水蓝","书蕾","访枫","涵双","初阳","从梦","凝天","秋灵","笑槐","灵凡","冰夏","听露","翠容","绮晴","静柏","天亦","冷玉","以亦","盼曼","乐蕊","凡柔","曼凝","沛柔","迎蓉","映真","采文","曼文","新筠","碧玉","秋柳","白莲","亦玉","幻波","忆之","孤丝","妙竹","傲柏","元风","易烟","怀蕊","寻桃","映之","小玉","尔槐","听荷","赛君","闭月","不愁","羞花","紫寒","夏之","飞薇","如松","白安","秋翠","夜蓉","傲晴","凝丹","凌瑶","初曼","夜安","安荷","青柏","向松","绿旋","芷珍","凌晴","新儿","亦绿","雁丝","惜霜","紫青","冰双","映冬","代萱","梦旋","毒娘","紫萍","冰真","幻翠","向秋","海蓝","凌兰","如柏","千山","半凡","雁芙","白秋","平松","代梅","香之","梦寒","小蕊","慕卉","映梦","绿蝶","凌翠","夜蕾","含双","慕灵","碧琴","夏旋","冷雁","乐双","念梦","静丹","之柔","新瑶","亦旋","雪巧","中蓝","莹芝","一兰","清涟","盛男","凝莲","雪莲","依琴","绣连","友灵","醉柳","秋双","绮波","寄瑶","冰蝶","孤丹","半梅","友菱","飞双","醉冬","寡妇","沛容","南晴","太兰","紫易","从蓉","友易","尔竹","巧荷","寻双","芷雪","又夏","梦玉","安梦","凝荷","外绣","忆曼","不平","凝蝶","以寒","安南","思山","若翠","曼青","小珍","青荷","代容","孤云","慕青","寄凡","元容","丹琴","寒珊","飞雪","妙芙","碧凡","思柔","雁桃","丹南","雁菡","翠丝","幻梅","海莲","宛秋","问枫","靖雁","蛟凤","大凄","傻姑","金连","梦安","碧曼","代珊","惜珊","元冬","青梦","书南","绮山","白桃","从波","访冬","含卉","平蝶","海秋","沛珊","飞兰","凝云","亦竹","梦岚","寒凡","傲柔","凌丝","觅风","平彤","念露","翠彤","秋玲","安蕾","若蕊","灵萱","含雁","思真","盼山","香薇","碧萱","夏柳","白风","安双","凌萱","盼夏","幻巧","怜寒","傲儿","冰枫","如萱","妖丽","元芹","涵阳","涵蕾","以旋","高丽","灭男","代玉","可仁","可兰","可愁","可燕","妙彤","易槐","小凝","妙晴","冰薇","涵柏","语兰","小蕾","忆翠","听云","觅海","静竹","初蓝","迎丝","幻香","含芙","夏波","冰香","凌香","妙菱","访彤","凡雁","紫真","书双","问晴","惜萱","白萱","靖柔","凡白","晓曼","曼岚","雁菱","雨安","谷菱","夏烟","问儿","青亦","夏槐","含蕊","迎南","又琴","冷松","安雁","飞荷","踏歌","秋莲","盼波","以蕊","盼兰","之槐","飞柏","孤容","白玉","傲南","山芙","夏青","雁山","曼梅","如霜","沛芹","丹萱","翠霜","玉兰","汝燕","不乐","不悔","可冥","若男","素阴","元彤","从丹","曼彤","惋庭","起眸","香芦","绿竹","雨真","乐巧","亚男","小之","如曼","山槐","谷蓝","笑容","香露","白薇","凝丝","雨筠","秋尽","婷冉","冰凡","亦云","芙蓉","天蓝","沉鱼","东蒽","飞丹","涵瑶","雁开","以松","南烟","傲霜","香旋","觅荷","幼珊","无色","凤灵","新竹","半莲","媚颜","紫雪","寒香","幼晴","宛菡","采珊","凝蕊","无颜","莫言","初兰","冷菱","妙旋","梨愁","友琴","水蓉","尔岚","怜蕾","怀蕾","惜天","谷南","雪兰","语柳","夏菡","巧凡","映雁","之双","梦芝","傲白","觅翠","如凡","傲蕾","傲旋","以柳","从寒","双双","无春","紫烟","飞凤","紫丝","思卉","初雪","向薇","落雁","凡英","海菡","白晴","映天","静白","雨旋","安卉","依柔","半兰","灵雁","雅蕊","初丹","寒云","念烟","代男","笑卉","曼云","飞莲","幻竹","晓绿","寄容","小翠","小霜","语薇","芷蕾","谷冬","血茗","天荷","问丝","沛凝","翠绿","寒松","思烟","雅寒","以南","碧蓉","绮南","白凡","安莲","访卉","元瑶","水风","凡松","友容","访蕊","若南","涵雁","雪一","怀寒","幻莲","碧菡","绿蕊","如雪","珊珊","念珍","莫英","朝雪","茹嫣","老太","曼易","宛亦","映寒","谷秋","诗槐","如之","水桃","又菱","迎夏","幻灵","初夏","晓槐","代柔","忆安","迎梅","夜云","傲安","雨琴","听芹","依玉","冬寒","绿柏","梦秋","千青","念桃","苑睐","夏蓉","诗蕾","友安","寻菱","绮烟","若枫","凝竹","听莲","依波","飞松","依秋","绿柳","元菱","念芹","如彤","香彤","涵梅","映容","平安","赛凤","书桃","梦松","以云","映易","小夏","元灵","天真","晓蕾","问玉","问薇","笑晴","亦瑶","半芹","幼萱","凡双","夜香","阑香","阑悦","溪灵","冥茗","丹妗","妙芹","飞飞","觅山","沛槐","太英","惋清","太清","灵安","觅珍","依风","若颜","觅露","问柳","以晴","山灵","晓兰","梦菡","思萱","半蕾","紫伊","山兰","初翠","岂愈","海雪","向雁","冬亦","柏柳","青枫","宝莹","宝川","若灵","冷梅","艳一","梦槐","依霜","凡之","忆彤","英姑","清炎","绮露","醉卉","念双","小凡","尔琴","冬卉","初柳","天玉","千愁","稚晴","怀曼","雪曼","雪枫","乞","戾","嵩","邑","瑛","鸿","卿","裘","契","涛","疾","驳","凛","逊","鹰","威","紊","阁","康","焱","城","誉","祥","虔","胜","穆","豁","匪","霆","凡","枫","豪","铭","罡","扬","垣","师","翼","秋","傥","箴","雍","达","乾","鑫","萧","鲂","冥","翰","丑","隶","钧","坤","荆","蹇","骁","沅","剑","勒","筮","磬","戎","翎","函","嚣","炳","耷","惮","鞯","擎","烙","靖","遥","斩","颤","孱","续","岩","奄","博","鹤","绯","匕","奎","仰","霸","乌","邴","败","捕","糜","汲","涔","班","悲","臻","厉","栾","井","伊","储","羿","富","稀","松","寇","碧","珩","靳","鞅","弼","焦","海","刚","纲","囧","姿","芷","芝","筝","真","珍","贞","婴","秀","雯","纹","菀","莞","宛","桐","彤","愫","素","涑","姝","弱","若","蓉","清","青","茗","敏","颦","莆","萍","娩","斓","澜","蓝","兰","惠","荟","涫","芙","璎","姒","苠","淇","绮","雁","襄","紫","芯","沂","衣","荠","莺","萤","怡","苡","悒","荧","茈","香","玲","绫","灵","樱","颜","艳","颖","盈","琦","忻","芸","笙","芳","丝","湘","竺","洙","珠","衫","莛","琳","珊","凤","嫣","芫","葶","芮","沁","柔","妍","芾","莹","斌","瑛","卿","翎","芹"};























































#define F_NUM_RUS 1756
#define S_NUM_RUS 2013
const char* F_NAME_RUS[F_NUM_RUS] = {"AAAAA","AAladin","aasd","Abbset","ablo","ABREK","Accept","Acpid","Adaida","adamas","ADELINA","ADIDAS","Admeral","ADOS","adskvolc","Aeen","Afina","AGAFON","Aglo","agresor","agta","Ahill","aidar","aim","aka","ake","Akira","Akseet","al","Alan","albatros","ALbFaR","aldoraka","Alecsand","alekc","alekcic","aleksaan","aleksc","Aleksej","ALEKSGGO","alekskl","aleksss","alekyak","alesadro","Alev","Alexan","AlexBad","AlexCat","alexe","alexej","ALEXFish","Alexhock","AlexKisl","Alexmkr","alexros","AlexSobo","alexves","Alexxx","Alfaviti","Ali","Aliens","Alior","alisor","Alizze","allen","allizya","almarez","Alonzo","altair","altr","alza","amati","amiko","Amnezia","Anarxi","anatol","ANDBBBB","andersen","andrea","andreige","Andrej","Andreu","Andrey","AndreyOl","andreywq","Andron","Andros","ANDRYZZ","Angela","Angelina","angerai","Anime","anna","AnnBonny","anshao","antey","Antinup","antonio","anus","Aoba","apat","APOFIS","apostols","aqw","Arabella","Aragoss","ARatman","Archi","Ares","ARGO","argus","Ari","Ariorg","ARKAN","ARmeDD","ArMoney","Aro","Arrow","Arsus","Artemia","artjom","Arulin","Arya","asaqa","asassin","asd","asdfg","asdgd","asgardu","Asmodei","ASSA","Astarta","Asterixx","Astrex","Asxa","AtheisT","AtomykA","Avanes","avatar","AVika","AVTOLIK","Awrella","AXEL","aylhtq","Azail","azaza","AzeriTar","AZOG","BAAL","Babayka","Bacilus","baha","baier","BAKU","BALBEST","balta","Bandera","Bar","Barat","Barbaros","barbosa","barik","baron","baronVyt","BaSaRa","basil","Batler","bazuka","bbbbb","bdfy","BECK","Beeline","behruz","belekas","bems","benya","beria","Berser","Berzerk","BESLAN","BestMD","BEZumniy","bggji","bibit","Bien","Bigoshka","Bill","Bingo","Bist","Bjaka","bkmz","BlackBro","BlackLex","BLACWOLF","blak","Blefusco","Blizzy","BLOODFRE","blystake","bnbvc","BOBAH","bobikasg","BODERS","bogatyr","boginya","BoLo","Booblik","BoomBoom","boris","BornToKi","borodyn","BORZ","BOSS","Botkill","Bradaiga","Braneg","Braudon","BRAVO","Breghard","Briliana","Brokxi","Bronsy","buch","BUHOSHA","Bulba","Buller","bumer","busla","bvhbcvb","Bylft","cachka","CAHEK","Canaris","canzo","CapNemo","CarlSber","CassuS","Cathy","cawa","cbcvbcvb","cccccccc","cdref","CEAm","ceerfere","cenzor","cerega","Cergeq","cff","cfvfynf","chaos","cheker","cherena","Cherry","Ches","ChikaBum","chiprg","Chudila","chyrli","CipA","CLEAR","Clo","cтася","Cokol","comatoz","Concorde","contr","copers","cortez","Cosoer","Crazy","Cris","croco","Cronus","CrownClo","Crystall","cthkz","cthuf","ctn","cvbn","cvuhgb","cyjhtdyj","Dacan","Daedra","Dafna","Dagor","dakapral","Damballa","Daminik","Danfairy","Danie","daniilas","danilas","DanteS","Dany","Daraus","dark","darkhunt","DARKMAN","DarkSIB","Daron","DAS","Dashulya","Davina","Daymon","dBRF","ddd","dddddd","DDEMON","Deadever","deat","DeathRow","Decim","dedcedou","dedpooli","dedus","Deesak","defir","DeKiT","Delionor","Dem","Demar","demin","Demo","DemonBF","demoness","DEMONN","DemonSc","DemoStas","DenchiK","Denim","Deniska","Deniss","DenNik","denri","DENT","DenyaDik","der","Derevo","derren","desant","Despatr","Destroy","DEV","Devil","Devirsan","dexter","DezzGan","dfdfff","dfgddb","dfghjkl","dfhrec","dfkthf","dfyiop","DGAXA","dghhj","DGON","diablo","diamonds","DiannA","diikydr","DIKII","DikoY","Dimaa","dimabond","dimafill","dimas","Dimax","Dimida","DIMMA","dimondd","dimoniym","Dimos","DINN","DIRK","Diversan","dj","djdf","Djedo","DJEKDJEK","DJEKWAR","djon","djonni","Djonsons","DjPisyn","DjZmei","dlinnii","dmitrius","Dmitryi","dober","Docent","Doel","DoGZ","dok","Dokman","dom","Domra","DonBau","DonPadlo","doo","DorHugar","Dorry","dowa","DRABADED","Dragen","dragon","DragonSi","Drakon","DRAKULA","Drayg","dred","Dreina","DrGe","drink","DRKZRGR","DrogoN","Dronec","DronJIO","drozdik","drth","Drunia","drx","dscв","DSHON","dthne","duda","duk","dunaev","Dusya","dvs","dzeckson","Eagles","Ed","edrftgyh","EEEE","efcss","EGEN","Egoist","egorkarn","ehaha","eirjeoru","eLaiL","Element","Elenben","Elistar","Elkyn","Elradir","em","emiylan","Enadi","Endryu","Enis","EnT","Epicros","ERAJON","EREKLE","erewwe","erikash","Ernst","Erstal","ertu","Esseneya","ett","EVA","evani","evgenger","evgentii","EVI","ewasr","ewtret","Extreme","ExxtanzO","eytgwert","fafan","Fakuaf","fanat","fantom","FARAO","farat","Farzoi","Fate","faust","FAVORIT","FazzaGes","FBRON","fdfd","FDHJGJKK","FEar","fedia","fedot","FELENDER","FENIX","ferrari","fesha","ff","ffffff","ffhyttft","fgdg","FGFFF","fgfhj","fghj","fgjuyjnr","fgujiut","fhg","fhtdg","fidais","FIL","filinwin","Fiona","FIxerr","flash","FLINT","Flomax","fobas","foka","ford","fortoxal","FOX","Foxsu","Framiel","Franky","fred","FREDI","freede","frenk","Freyd","frize","frttggss","fsdghxbd","fsv","Fullooo","Funy","Fwgw","Fyyf","Gaer","galeksss","Galo","GamePlay","GANIBAL","gansisys","Gar","GARI","garlem","garrison","Gastro","Gbhfn","Gdety","Gegher","Gekk","gelo","Gendalf","Genesis","Genri","Georg","geraqw","gerd","Gerk","GEROIHIK","Gersiss","Gevorg","gfdsfg","GFGS","gfuejghi","gggger","gggo","ghdh","ghfh","ghjhjj","ghnbb","GhostTM","gibrid","GiG","gimli","Ginjo","giogiog","giorgitr","giug","gizma","gjhk","Gladiat","Gloomy","gnat","GneC","Goao","God","gogagosh","Goilbear","GoldL","golo","Gonsalez","goog","GORDANA","GORJAN","Gosha","Gotfre","GOWA","graf","GRAFOKL","Grapeus","grd","greg","GREK","Greytor","grghh","grig","Grimskal","gringo","grjunva","Grog","gromAda","gromtoro","Groz","GRUMi","Grypfon","gst","gthdsq","gtyyb","Gudreek","guhij","guny","Gvardeec","GybkaBob","gyg","gyyyuui","HABL","halava","hammerko","HannI","Harald","Harley","Harra","Harxan","HaTaЛи","Haywan","hdhdhdhd","heckfy","HEILAGR","HELGE","henki","Herbie","HEROтень","Hevelia","hf","hfhjfh","hgdgsgb","hghg","hhgggy","hhhhhhh","Hidan","hione","hjkjh","hjnfcd","hjvf","Hocico","hohoho","Holley","HolyWarr","horh","hotcat","hovo","hren","htftft","Hum","HXS","IDeaDI","iehbr","ifroim","ignazz","igopmr","IgorBar","IGOREZzZ","igortan","igrovoy","ihyygtyf","IIcix","iiiiiiii","Ijis","il","iljamic","ILoveYou","ilyagh","IMortel","Infernal","INGWAR","Inside","Io","iona","IREN","irina","IRISKA","Iskatel","Iulian","Ivanchez","ivangroz","IvanLila","ivevgeni","iyuyyht","jaba","Jackson","Jagabuga","Jakka","Jana","Jarlaxle","javir","Jеsus","jeep","jekbegir","Jekki","JENYA","JesPain","jfitd","jgffdduj","jhfkuf","jhkjhk","Jikobas","jimfgo","Jinny","jjaaaaa","jjjk","jkb","jkk","JlaHa","JLuJLuT","joey","JOHNIK","Joke","JOKERs","Jonathan","joniinbo","jonni","JONSON","Jorik","joseph","JTY","Jul","Julo","jyf","kaban","kaco","KAIRAN","kakha","kaligula","Kalmius","kamaz","kamil","kandagar","Kantemir","kapitann","Kaput","Karamba","Kare","karii","Karla","Karnospa","kas","Kasper","Kastiel","KATERINA","katrina","kazu","Kecen","KehaBar","keks","KenjiHaa","Kenth","kep","Kern","keti","khiu","kiberspo","Kijang","KILER","kill","KillerKa","KILLERS","KiLLV","Kimmeris","Kinq","Kirana","Kirillgf","kirito","Kirizenk","Kisa","kissdead","kitkat","Kivland","Kjhf","kjhrr","kjm","kkk","kkkkmmmm","Klariss","Kleisis","Klima","klklklkl","KloNpro","kmnb","Knight","koba","kocgewni","kogk","kok","koks","kolay","Kolibry","kolopita","kolya","kom","konan","Konnn","KonunG","KOPI","Korar","Korsar","Kortez","kosikar","Kostan","kostolom","Kostyan","KOTэ","kotyara","kӧ","kpictalk","krab","KralKing","Krash","Kreige","Kremedes","Krez","Kripta","kroaton","KroNoSss","krot","kruk","kruto","ksco","ksil","ktjrhjdf","Kudesnik","Kukoc","Kunka","kuto","kuzbasss","kvn","kzkz","Lad","laitus","Lala","Lamlee","Lancord","Lansata","lara","lasha","LaVanDoS","lazare","ld","Leanore","Legat","Legionеr","Leiki","Lektor","leliki","Lemm","lenia","leoko","LEONARDO","Leonel","lerir","Lesheei","Lesttade","LEVAN","LEVIK","lexacher","Lexasaaa","lexinn","lexxx","lhb","lider","Lielit","Light","Liksa","lilli","lin","lintyash","LIONKING","LiSaNdRo","Lisitsa","listat","Liva","lizi","ljhjhj","lkughoug","llkk","llll","lLoLl","lobato","lodbrok","LOGIC","Lokker","LOL","lolla","lomik","Lomotosa","Lonis","Loraks","LordDon","LORDO","LordZlo","Lost","LotosTig","lqoft","LtArchi","Luce","Lucifep","Lucius","lucy","luffy","luka","LunaFrey","Luyde","Lvbnhj","Lyka","lziv","macsimus","madara","Madjakhe","MadSnail","Magavnik","Maheshva","Majklbmw","makap","makbatya","makjn","Maksat","makshyd","MAKSIMKA","makslut","Makswerv","Malanec","malish","Maloi","Malutto","mamuka","manax","maniacul","MANVEL","maous","MaraBlak","marat","Marcus","Marfey","Mari","Mariko","MaRioLa","markas","marli","marshal","Marti","MaryLand","masikys","MasterEv","Matroski","Maus","mawr","maximili","MAXLORD","maxon","maxsim","MAXXX","mazai","McKormic","mdm","MED","Mefesto","meks","MELEYKE","MEN","Merchik","MERI","MERW","Messi","mex","Mey","mhgcd","michman","Midnigнт","Mifika","MIGLE","Mihai","mihal","Mika","miki","Mikola","Millerav","Minor","MIQO","Mirage","Mirke","mirotvor","mishat","MisskaM","misteri","Mitsum","Mixa","mixaila","mixas","mixos","mm","mmmmmm","mnbm","Moira","momo","Monika","Monstar","Mooq","Mor","Morf","Morozoff","mort","Most","motti","MrAk","MrGeo","MrLazins","mrnikola","Mrwhite","mtr","Muha","mulat","mut","mylord","Nachal","Nadsed","naglota","Naiton","NakuRoK","namichka","nanika","Naomi","narek","nastay","Nata","nataly","nato","navasard","nazim","NECI","NeitFord","Nelu","Nemeziss","Nemoy","neo","NEOO","Nerv","Netmin","Nevmina","NF","nfyz","nic","Nickry","Night","nikaaaaa","nike","Nikita","nikitos","niknik","nikolai","Nikolay","nikoloza","nikuta","nindza","Ninja","niverka","njf","NJV","NoG","nomik","NoPanik","Nordman","nordy","Norlok","nosiri","NOVOROSS","ntymu","nukon","nupatka","nybik","nyrek","oALEXo","Obri","Odessit","OfMaster","oio","ol","OLD","Oldgrey","OldUncle","olegb","Oleger","olegkp","olegon","OLEGUSIK","Oleh","Olka","OLUMSUZ","omon","onge","Onix","ooiyuio","opъххх","optimus","Orbit","Orinator","Orlova","osho","OSP","Otshelni","Overlord","OxSDyM","PACAN","paganka","PALACH","Palenui","Panda","Pantion","papasa","paramon","Partizan","pasha","pashok","pavel","paxah","PEDROS","Pentotal","Permyak","PERVOI","PETROI","PHARAONб","pihta","pingvin","piratik","Pirs","PitBull","Pivasik","Pixsi","Plamist","pls","Plutor","pnevski","POCKAT","Pogon","Pokoch","Polo","PoMaLLI","popovas","Portmann","Poseydon","poxer","Predator","Priest","privid","pro","ProWOTB","PSHAVI","Psihosis","PU","puh","punisher","puzyrev","pyatigor","QASANN","qerty","Qq","qqqqww","qweqwr","qwerr","qwertsel","qwertyui","qwrwe","RABKO","radiion","RAFO","Ragnarbo","Ragnos","Raizer","ramaska","rammik","ramyluak","Ramzec","RandaL","Rar","Raselix","Rasta","rattwe","rawer","razdabed","RaZoRNM","REA","red","RedDevil","redmond","RedV","region","Rein","reka","reksar","Relok","Rembo","Remnant","Renesna","ReRe","rett","ReVo","ReyDonov","rezidor","rffgf","RFN","rgfjh","rianon","RICK","Rider","riga","RikNord","Rilon","Rin","RINO","Ripper","Rishader","Ritnai","RizZziR","rjytrj","Robin","rockon","Rodgar","Rodniчok","Roh","Rojik","Rollo","Romah","romanLM","romanrus","RomaPRO","romaxavo","Romeo","Romilus","Romka","romun","Roro","rose","rossia","Rox","Rozi","rreter","rrrrvvvv","rtfgyh","rtjqj","rttyy","ru","RUBIO","Runni","RUSDAN","Rusik","rusrus","russs","rvazo","rwewt","rykiy","Ryslan","sa","Sabby","SACRED","Sadorra","SAHA","Saint","saka","Salanta","salkan","salwador","SAMBLR","Samm","san","sancan","SandKing","SandriTA","SANEKkjn","sani","sanishub","SanSan","SANYA","sanyok","Sapper","SAqpOG","Sarimat","saron","Sash","sashak","sashass","sashek","sashok","SASX","sausa","savin","saxa","Scarcros","Sco","Scorpion","SDDSVI","sdfdsf","SDV","SeaGirl","Seba","SEDRIC","Sefon","segun","Selena","sema","sems","senator","Sent","SenyaLut","ser","SeranoS","serdjon","seregaaa","SerenA","serge","sergeibo","Sergeiqw","sergeq","sergeyxx","sergi","SERGIS","sergiy","sergчфкд","Sergos","Serguny","sergys","serhiy","serj","Serjic","SERJO","SEROGAP","serses","servamp","SERZHiK","settt","Sevens","Seyder","sfg","Shade","ShadowLo","shaid","shaman","Shamma","Shard","sharkman","shaxa","ShefBig","Shem","sheri","SHIRUMO","Shkyper","shluha","SHNAPS","shoxrux","shreak","shu","Shumк","Sibarit","sigaa","silavlas","SilverS","Simbad","SimS","SINNER","sir","Sirius","SIVik","skai","Skarabej","SKIF","Skipcha","skon","Skrillex","Skrudz","SkyLand","Sladkaya","slava","slavik","slawik","Slenky","Slivka","slus","Smayl","Smith","Snatten","snop","Soer","sokol","sokolv","Solinet","solovey","SoniC","SooGosoo","sorco","sosnovin","Sotnik","SoulWar","spaider","spasatel","SpAwNя","Spike","Spirt","Spysee","ss","ssLORDss","ssss","ssssss","ssssssss","SSZodiak","Stals","stariy","staryy","STASS","Sten","Stepenwo","Stigmata","stilet","stivxxx","storm","Strady","STRANGE","STRANIX","strellok","Strkp","STUS","Sublezub","Suga","Suleyman","sumrak","Supercel","superuyi","suslik","sved","svetlyok","svk","Svyat","SWATPLAY","Swen","SWSWS","SYAVA","SYRRIUS","T","Tadakuni","taina","TaKCoMaH","talanta","taljan","tanada","Tanis","TAPOR","TarenIII","Tarona","Tartus","Tatanker","Tatarita","tatyana","tdtyudrt","TEC","teikuz","TEMKA","Temperor","Tenchu","TEONEIR","terem","Teroser","TERRIKON","tert","Teya","thanthos","TheSic","Thousand","Thunderc","Tibhar","tigr","TIGRR","tik","timer","Timoniwe","tip","tireel","titikama","tj","tkachov","TOHA","tolikas","tolyan","TOMCOEP","tony","TOPETTO","TOR","tornado","toshly","Toxa","trahinat","traler","Trava","Trevor","TrinitI","Troken","trosha","tryu","tsuotkml","ttr","ttttt","tuf","tujh","Tusika","tuzi","Twikle","tyh","tyku","tyt","uay","udavjuni","ugygy","Uli","uMnep","Unrok","Urode","Usopp","uuu","uyhhjj","uyyfyuft","Vad","VadimG","Vados","vagina","VAJL","VALAR","Valenci","VALERAT","Valeriy","Valhala","Valkyrie","valtor","Vampire","Vanea","vangoc","Vaniusa","Vanopopa","Vardan","varsion","VASABI","vasia","Vasiliy","vasko","Vassago","vasya","Vatt","Vavi","vbfvbnfr","vbif","vbnm","vecshiy","vein","Velton","Velzevyl","Vengaul","Veprik","veres","Verona","Vertigo","vetal","VeterZP","Vfhr","vfuf","vi","Victrix","Vigma","vikaaaaa","Viki","VIKINGSS","vikkkk","Viktiriy","Viktoria","viktorx","VILAR","vinka","vintarez","Vip","Vir","virus","virusss","visna","vitala","vitaliy","VITAN","viteke","vitj","Vitos","vivar","viza","vk","vlaad","vladd","vladik","vladisl","VladVolk","vlass","vnfgvj","voin","volf","VOLK","Volkk","Volkoff","Volksna","voloha","vonjuk","VORD","voronmkj","vosstavs","vovaa","VovaGod","Vovanhik","vovank","vovapetr","vovilio","vovs","vrag","VSANEKV","vtbrthvf","vuqar","vvovan","vvvgggg","vvvvvvv","wad","waleriy","wanderer","warabei","warkraft","warproka","wARTEMw","wasap","Wassa","wawang","weeeeeee","WEHYZ","WellCam","WerBoN","Wergiz","wertug","wertyu","werwulf","wettr","wewу","white","wider","wiktor","WILLI","winsi","Wisse","Witawt","wladik","wolf","wolff","Wolfram","WolkYa","Woolf","woronnn","wowik","wrt","wulf","wwww","WwwwwwWw","wyxer","xADAx","xamson","xantr","XAPBAT","XBOCT","xcvxc","xзm","XEon","XexyBaby","xhhbxk","xitman","xLance","Xolod","Xoz","xrenmyre","xSANCHOx","xsssssss","xvampirx","xXKaidoX","XxTDJxX","xxxoleg","xxXXXxx","xxxz","xzeroo","yanchuk","yarilo","ydgin","yegres","yfnfkb","yi","yjsytar","YOoPi","yrch","YRIYS","ytdyuh","ytyu","YuHu","Yuki","Yume","yuytuyi","yyarikk","yyyyyy","ZABAIKAL","Zack","ZAGRIB","zaki","zanoza","zar","zaryba","zaxar","zbst","Zed","Zelda","ZEQ","ZERGOVA","ZERRO","ZetE","zhanna","zheny","Zhnec","zima","zion","zllo","Zlodey","zlosay","zmei","Zodiakus","Zondr","zor","zorg","ZoroAlen","ZoUS","Zsert","zuefh","zula","zver","zxcvb","zz","zzOПаzz","ZZZWZ","zzzzzz"};
const char* S_NAME_RUS[S_NUM_RUS] = {"А","ААААААФФ","АЗОН","АЛ","АЛЕКС","АЛЕКСИ","АЛЕХАНДР","АЛЬФА","АНВИК","АНДРЄЙ","АНДРЭАС","АНТОН","АПЕЛЬ","АРИК","АРХ","АССА","АФОНЯ","Абармот","Абргод","АбыКак","Аваскейн","Авиатор","Агнесса","Агроном","Аденаид","АзатRB","АйСБэБИ","Айра","Акаша","Аксел","АлЕкСей","Алгри","Алеккен","АлексЛич","Александ","Алексейв","Алексий","Алексkz","Алена","АлиК","Алин","Алиса","Алмаз","Алруна","Алчность","Альрик","Альфард","Алёнка","Амброс","Амфетами","Аналортч","Анаталет","Ангел","Андре","Андрей","Андреййй","Андроид","Андрус","Андрюха","Анирам","Анна","Анса","Антон","Антрацид","Анунах","Анютка","Апогеич","Арабела","Аргентум","Аргус","Арес","Арина","Аркен","Арра","Арслан","Артемия","Артур","АртуP","Арх","Арчер","Асия","Асмодей","Астарот","Астрана","Асура","Атаман","Атланта","Аурела","Ахренер","Аэлирэнн","БАГИНЯ","БАКСБИ","БАРБОС","БАРС","БЕЛЫЙ","БИЗОН","БЛАД","БОЕЦ","БОРОДАЧ","БУГАЙ","БаБуБы","Бабах","Бай","БаксЯ","Бальтоза","Бандит","Барбариа","Барбоса","Барс","Басурман","Бачонок","Безгодов","Белка","Береника","Бес","Бесёнок","Бизон","Бирус","Блад","Блаки","Блек","Блэкхарт","Боб","Богданцу","Боджия","БоммЖара","Борзый","Борода","Борос","Брант","Бриг","Броникон","Брыс","Бугагага","Бугоч","Бука","Бун","Буруз","Буся","Бьерн","Бэнор","ВАДИМ","ВАЛЕРЬЯН","ВАРРКАН","ВДВ","ВЕЛИКАН","ВИКИНГ","ВИТАЛ","ВЛАДИМИР","ВОВАНЫЧ","ВОЛЧАРА","ВРГНЭ","Ваал","Вад","Вадимка","Валарт","Валери","Валерон","Вальдер","Валя","Вано","ВарВара","Вариан","Вархан","ВасЯ","Вастер","Васян","Ватар","Вахмурка","Ввы","Веда","Векамир","Вендетта","Верон","Ветерок","Вздорный","Виг","ВикА","Викинг","Виктор","Викторне","Вино","Вит","Виталий","Виталич","Витаус","Витёк","ВладКняз","Владзгк","ВладыкА","Влас","Вовам","Вовик","Водолей","Волдемар","Володик","Волхв","Вольф","Воробей","Воронмен","Врангель","Всеволод","Вындырпы","Вэнди","ГВАРД","ГЕРДА","ГЛОТ","ГОРРИ","ГРІМЛОК","ГРЭМ","ГЯВРРЯВП","Гагауз","ГалафирО","Ганник","Гарга","Гарм","Гашек","Гектор","Гендальф","Геркулес","Гига","Глазыра","Гномик","Гогоша","Гопник","Горун","Грег","Грешникк","Гриня","Гроган","Грозный","Гром","Громов","Гронг","Грюм","Гуру","ДАВИД","ДАСТЕР","ДЕДУЛ","ДЕМОНЧИК","ДЖИНКС","ДЖОЭ","ДИФИНБЕК","ДОБРЫЙ","ДРАКОН","ДУРЫНДА","Давокин","Дайма","Дандрион","Данилиус","Дантист","Дапоуй","Дариюль","ДартМолл","Движок","Деда","Деля","Демон","Дениро","Дениск","Деня","Детка","Джайна","Джарвис","Джейн","ДжекВаро","Джеквор","Джекkep","Джен","Джесс","Джо","Джон","ДжонЖИВ","Джонни","Дзеванна","ДианнаПР","Дилинг","Димасик","ДимоК","Димоныч","Диполд","ДитяНочи","ДмитрийЯ","Док","Донской","Дорин","Драгма","Драко","Дред","Дрейко","Дрон","Дуболом","Дутык","Дырындыч","Дэзла","Дёня","ЕЛЕНА","Ева","Евген","ЕвгенияЛ","Еврей","Егорий","Ека","Еленаа","Елисей","Енотас","ЕRTG","ЖОПА","Жадность","Жеканя","Женя","Жирний","ЖнецДуш","Жопа","Жордин","Жучка","ЗЕВС","ЗООЛ","Забара","Зазнайка","Зарембо","Заяц","Звягель","Зеро","Зирекс","Злобог","Злюкк","Зубейда","ИГРОК","ИЛАЙ","ИРИНА","ИванРа","Ивано","ИвлНига","Игорян","Изикей","Илии","Илоня","Имилия","Ингара","Инзаэль","ИньЯнь","Ирен","Иришечна","ИстокРА","ЙЙЦУУ","Йох","КАЛЕВАЛА","КАРА","КАРИБОМЕ","КАТОРЫЙ","КЕРК","КИР","КЛЕР","КОНОГ","КОСМОС","КОТ","КОЩеЙКа","КРОМ","КРЮК","КУЛЕБЯКА","КЭП","КаТаРина","Каилина","Кайн","Кактотак","Кали","Калуга","Камаэль","Кана","КапитанЛ","Каппелан","Карабас","Карат","Кари","Карина","Карнелия","Каррмаль","Каси","Катерина","Катринар","Каха","Квазимор","КейСота","Кексомен","Кенлех","Киба","Киллиан","Кип","Кирас","КириллВо","Киса","КлаймоН","Клаус","Клиган","Кло","Клэр","Князъ","Кобден","Ковбой","Колесо","Колос","Комбат","Конопля","Конунг","Корадо","Коринь","Коронет","Кортесс","Космос","Коста","Кот","Котяра","КinG","Крамель","Красный","Крег","Крендель","Кречет","Криптон","Кристина","Крокус","Кронов","Кроха","Крэштон","КсЮ","КсенияКл","КсюФФка","Кубэ","Кузьма","Кулак","Курама","Куся","Кыштымец","Кэрдан","ЛАМАН","ЛЕВ","ЛЕОН","ЛИСИЧКА","ЛОКИ","ЛУНАУ","ЛЮЦИФЕР","Лазавой","Лаки","Лапшов","Латынь","Лев","ЛевыйПит","Лейв","Лелик","Ленок","ЛеонБлек","Леонора","ЛераокА","Лея","Лика","Лилитка","Линестия","Линна","Лис","Лия","Лобзик","Логос","Локер","Локки","ЛордБК","Лорэл","Луара","Лука","Лунатик","Луперуза","Лучшие","ЛюЦиФеР","Люся","Люциан","Ляля","Лёха","МАГИЛЫЧ","МАКСИМ","МАЛЬВИНА","МАРИЯ","МАША","МИНУС","МИШАНЯ","МОРГАН","МОСПО","МШМШМШМ","Магдэй","Магомед","Майитхи","Макар","МаксиМус","Максимус","Малефико","Мангуст","Мао","Марезар","Мариса","Маркиза","Марси","Мастер","Матрена","Мафусаил","Машенька","Медведь","Мелфа","МериКей","Механ","Мик","Милагрес","Милиодас","Мина","Мира","Мираж","Миса","Митяй","Михась","Мишар","МоНаХ","Молли","Монгол","МорПех","Морган","Мордред","Морнинг","Мот","Мрак","МуРмАнСк","Мудрый","Мурен","Муркотик","Муся","Мухаммад","Мэллоди","Мяу","НАРКОМАН","НЕКТОР","НИКО","НИКУСЯ","Нагорн","Назуми","Найт","НапасычЪ","Насосатл","Ната","Нафтис","Наяда","Нейра","Нелюдь","НериэЛ","НетНика","Нея","Ник","Нико","Николас","Никона","Нимфа","Нинрус","Новичок","Норан","НумаЛи","НычиК","Нэст","Няка","ОДЕССИТ","ОЛЕГ","ОНА","ОСКЕН","Овощь","Одиннн","Одін","Окунь","ОлегМ","Олежан","Олмер","Ольгерд","Омен","Ооками","Орин","Орстхо","Оскар","Отродье","Охотник","ПАВЯМ","ПАНЧЕР","ПАС","ПАШША","ПЕРУН","ПОЛОчкА","ПРЫНЦ","ПУТИНХУЙ","ПавелПир","Падший","Панкуша","Парень","Патриот","Пахен","Паша","Перегар","Петро","ПикПик","Пипец","ПиратХ","Пиретасс","Писька","Пламя","Подарок","Портос","Пофигу","ПроСаня","Прораб","Пузанчик","Пупса","Пушкин","Пысик","РАБУЛ","РАЙЗЭ","РЕВИЗОР","РИНАТИК","РОКЕН","РР","РЫДВАН","Рагдай","РагнарOK","Разбойни","Райен","Рамс","Ратибор","Рафлз","Ребека","Рей","Рейши","Рем","РиКа","РикаБлю","Ринат","РитаМей","РоГнаР","Рогнар","Роджер","Розета","Рок","Ролло","Роман","Ромпар","Роскет","Рубин","Руна","Русалка","Русскийй","Рыбак","Рыкун","Рэйзор","РябаСан","САЛОКНИР","САНТЕЙ","САРДЕЛКА","СВАРОГ","СЕКИРА","СЕНЬ","СЕРГЕЙС","СЕРЕГА","СИГУРД","СКА","СМЕРТЬ","СОКОЛ","СОска","СТ","СУМСКАЯ","СУчКА","СаНёК","Садист","Сакура","Салли","Самана","Самсон","Санделло","Сандрюк","Сансет","Сантьяго","Саня","Сапа","Саргис","Саски","Сауле","Сахалин","Сашенька","Светозар","Свобода","Севас","Сега","Секретна","СерГор","Сергейй","Сергос","СерегаХЛ","СержГор","Серик","Серёга","Сибиряк","Сид","Силач","Симпл","Синеус","СиротогА","Сиськи","Скайл","Скартт","Склепус","Скорпион","Слава","Слон","Смит","Снежанна","Сноу","Сокал","Солнце","Сона","Сора","Спайер","Спархок","Стаканыч","Старче","СтасОдес","Стелла","Стесс","Стич","Страх","Судьба","Сума","Сун","Сурда","Сципион","Сэт","СяоЯо","ТАМЕРЛАН","ТАТИАНА","ТВОРЕЦ","ТИГЫР","ТИТАНИУС","ТОМИЛЕН","ТОРНАДО","ТРИМИКС","ТаТьяна","Тайгер","Таладри","Тальо","Танатис","Тарантул","Тата","Татьяна","Творец","Темирлан","ТеньВойн","ТесТ","Тиберий","Тигрик","Тилла","Тимофей","Типочек","Титан","Тишь","Толич","Топтыга","Торик","Тот","Тiмjн","Триборг","Троль","ТуЗИк","Тунг","Турбинер","Тэрька","Тёмная","УАСЯ","УРСУЛА","Удавка","Ульрих","Ульянка","Ункас","Усопп","Ушастик","ФАРГУС","ФЛИБ","ФУНТ","Фаворит","Фантомас","Фардит","Фелисита","Феранит","Фея","Филорет","Флейта","Флинтер","Фокс","Фортуна","Фракиец","Фрея","Фрося","Фуриа","Фэйт","ХАЛКА","ХРО","ХХХХХ","Хагард","Хамло","Хао","Харви","Харука","Хаусе","Хельга","Хикари","Хит","Хитрющий","Хомаххх","Хора","Хохлушка","Хромой","ХсергоХ","Хулиган","Хэльд","Царь","Цербер","ЧБорода","ЧЕРНОМОР","ЧеГевара","Череп","ЧерныйБо","Чешир","Чипи","Чувак","Чёрная","ШЕВ","Шабаш","ШалуН","Шарки","Швед","Шериф","Шиисан","Шкипер","Шмыга","Штак","Штурм","Шум","Шурик","Шухер","Ырлнзук","ЭКСТЕР","ЭМИЛИ","ЭШ","ЭдBAPд","Эдерия","Эка","Элей","Эленис","Элизобет","Элли","Элька","Элёрбек","Эмми","ЭндрюС","Энхл","Эрика","Этилен","ЮРА","Юз","Юли","Юлияt","Юляшка","Юран","ЮрийР","Юрка","ЯМАГУТИ","ЯРЛ","Яблучиха","Яков","Ян","Яныч","Яра","Ярина","Ярра","Ятутытру","ааа","ааааааа","ааабб","аае","абдурахм","ав","аватаран","авенсис","авк","авпу","авуун","агбис","ад","адлет","аек","аеуаегеа","аибар","ай","айн","акелвася","аклпк","акси","аладин","алебастр","алексан","алексей","алексейс","алексис","алекссис","алексфок","ален","алех","алина","алкар","аллекс","алфёр","амалия","амоР","ана","анархист","ангав","анд","андр","андрейд","андрейнн","андрейшо","андро","андрюив","анжеллла","анна","аннамрм","ант","антонина","антро","аня","аораеп","апапа","апвв","апвыпвпв","апииппии","апп","апр","апрои","апрпа","апррл","апчхуй","ар","арагорн","арбуз","арес","ария","ароо","артемий","арттёммм","артём","арчвальд","арэр","асасин","асися","аспид","астрэус","ауаа","афродита","ацнуцау","аывауыав","аяяй","бабайка","багира","байк","балу","барабак","барбосса","бармен","баронин","барсик","басмач","баука","бббббб","бебе","бек","белка","беля","беркуд","бес","бесы","бида","бил","битый","блекджек","блэк","бобгупко","бобр","бобёр","богатырь","богиня","боецмоло","бол","бомбер","бонд","борджа","борм","бородачи","босрсиг","боцман","бранко","брейн","бродяга","броня","бсв","бугай","бумбараш","буратон","бусинка","бычара","бюбтьб","вИТАЛИЙ","ваван","вавпв","вадик","вадос","ваенук","ваку","валдович","валер","валерок","валико","валюта","вандал","ванеку","вансар","вап","вапк","ваппаврт","вапур","варанг","варварен","варкера","варсик","варяг","васиий","васк","васька","васян","васяххх","васёк","вау","вахаа","ввв","вверну","вдв","вейн","великан","веолета","верона","веталь","ветеран","виви","вик","викеньти","викинг","викингсэ","виктор","виктория","викторсв","вилкос","винстон","висп","витакс","виталик","витаха","витир","виттт","витядем","вишап","вкекевук","влад","владик","владон","влодимир","воваа","вован","вованпер","вованыч","вовик","водка","воинг","воландма","волки","волли","волчара","вомакс","вор","ворон","вохан","впкы","вредная","втюха","вумшд","вцйкцйк","вывывывы","высчап","вячес","гаврила","гадзила","гак","галя","ганджуба","гарди","гарик","гаттаров","ггггдд","гдорп","гена","генаівап","генри","гера","геркулес","герой","гефест","гиз","гнат","гнлнгл","гнрр","гога","гогра","голи","голос","гордей","горн","горшот","гоша","град","граф","грек","гренек","гризли","гриффит","гроган","грозный","громила","гронхорм","грум","гугига","гулливер","гуня","гуслер","гуф","гшщ","гьщнитк","дИКИЙ","дадада","дакрон","данди","даниилqq","данилдан","данияр","дапох","дартрева","дгаи","ддддд","деввушка","дедов","деймоз","дельфин","деммар","демонн","демс","денволк","дени","денис","денисрп","денн","денчикк","десарик","джарвис","джейк","джеквор","джекичан","джекулс","дженни","джигурда","джо","джокерша","джоник","джонсин","джулия","диабло","дивик","дикийбил","димавик","диманыч","димастой","димоннн","димоон","димon","диодрод","дкен","дмилдсьи","дмитрий","добрая","додик","докк","доминик","донбасс","дорминто","досбезге","дiма","драйк","дракула","дрейк","дродпрлд","друид","дст","дукул","дуся","дшорп","дьявол","дэмон","дюдюка","дядФёдор","дядяЦЫхц","еаеа","еатя","евгенато","евгениум","евпр","егортппп","еееее","ежик","екорпо","екркер","еленочка","елизар","ен","енгше","енкг","енмргр","еншенш","епапр","епрно","ереп","ескабар","ешкинкот","жана","жвачко","жека","жеки","женек","женя","жжжжж","жилин","жорж","жорян","жук","жэжэ","завгар","замкадыш","зарема","звезда","звеь","зеро","зиг","зигфрид","злойсеря","змей","зомби","зоя","зубило","зхлшгрне","зюзя","иавааав","ибтб","иванка","игара","игор","игореха","игорьв","игорьфро","игорёша","идья","иигорь","ийорк","ил","илизабед","иль","ильич","ильядпр","илюха","императо","имтмт","ингвар","инк","иоси","ира","ирина","ироб","исва","исч","итачи","иуит","ишак","иьм","ййй","йозик","йфкеукпе","йцй","йцуйцу","йцукен","каа","кавбой","казак","каин","кайоши","кали","камил","кант","капач","капрал","карабас","карамель","карачун","карина","каролина","карсар","кас","каташи","катран","катюша","кашалот","квик","кеггшшгщ","келла","кен","кенгуцук","кент","кентл","кеорсар","кепукек","керует","кет","киаи","киврогг","кинг","кир","кирамете","кирилл","кирио","кирпич","кисау","кия","кккккк","клариса","клео","клотик","кнехт","князь","кога","кок","кола","колякули","колянел","комар","конар","консул","корет","король","корсар","корун","костыль","костяв","костяя","котик","коты","кочегар","кошмар","кпнпе","крабик","красавчи","креек","крики","криматор","крисц","кровланд","кролик","кронос","кроу","круп","крушител","крюк","ксен","ксюша","куба","куеапкам","кука","кукловод","кукуляля","кукуся","кулибен","кунис","курган","куцая","кшшшшк","кікос","лаки","лантух","ларсэм","лгепюлоп","лдж","лдьтодло","легенда","лего","лей","лена","лео","леонтий","леха","лехф","лешийй","лзнещг","лиза","лилитт","лилу","лимарь","линса","лиса","лифрин","ллелл","лнмпбслн","лодброк","локин","лоло","лора","лордо","лори","лорп","лоя","луго","лукавый","лунна","луфиктян","луша","лщдна","лщлл","любава","людмила","люска","люцифер","ляпа","лёха","мав","маг","магика","магпират","майк","макарий","макр","макси","максимас","максимко","максимхо","максонн","максупер","максZ","маленька","малышев","мальрекс","мамай","манстер","маракуя","маргана","мари","марихз","мариятбд","маркиз","марта","марфа","масим","мася","матвейка","матрос","мах","махоня","маша","маяороп","медисан","мелиса","мерен","мерти","мех","мид","микасо","микола","милаха","миледи","милорд","мимими","минатавр","миори","мираж","мирин","мирный","мирта","мистик","митра","митяйкен","михаЛМ","михаилнв","михами","михась","михос","мишамщф","мия","ммим","ммммм","ммсс","молдован","молох","монгол","мора","мордок","мороз","мортал","морякин","мотор","мпневв","мрек","мсЕгор","мтпи","мудрость","мурад","муртаза","мухасере","мьгпрми","мэрикей","мія","надар","накг","наоми","настюха","ната","наталья","ная","нгангаег","нгпгнпгн","неважно","незнайом","нейк","некич","нелла","немо","ненежить","нептун","нет","ника","никитаем","никитос","никован","николай","николайп","никроман","никусяя","нимфа","нита","нк","ннн","ннпер","новый","ноль","ночь","нрон","нура","нща","нюша","оКатяо","оболтус","огеве","одесса","одлолро","одуван","окорок","олаф","олегарх","олеггера","олегпппп","олександ","олесия","олля","олрпморп","ольгарик","оляя","онеа","оолрпм","оооо","ооощщщ","опачки","оплдпо","оппрн","ор","орее","орк","ормлр","орпдло","орррол","орывп","осерго","ост","отец","оукэншил","ощ","па","пав","павелл","павк","павло","пакер","паллычь","пантасил","папа","папвап","парапр","патриарх","пахан","пашан","пв","пвтьвчмм","пгпмм","пенгор","первак","персей","перун","петро","петяррр","пивасс","пика","пинии","пиратик","пиратчер","пирса","питбуль","плагия","плут","пнар","пнтон","поке","поланд","попн","порик","потнот","поц","ппа","ппп","пппп","правда","прапор","призрак","принцеса","про","прокоп","прооо","просто","прохожий","прпаркер","прпрпрпр","пррррр","прынц","псих","пугало","пулич","пупс","пурген","путник","пуцу","пчаавяп","пэт","півовари","рагнар","разрушит","рак","рамирод","рапарапр","раптор","расул","рафаил","рвнаекы","ргн","регион","рекардин","рен","реп","реша","риирир","рим","рита","рлрорл","рмьреаьн","ро","рободю","рогнар","родион","роза","рол","ролл","ромааааа","романФ","романщ","ромацой","ромус","рони","роппрорп","росал","росток","рошия","рпй","рпсчпврп","ррпрпрпр","рррррррр","рубль","руни","руслан","русс","руставел","руфат","рысь","рэйс","сааашаа","садист","сайфер","салао","сама","самира","самурай","сандр","санекд","санекпар","сани","санс","санчо","саньок","саняба","саняперв","саняя","санёкк","сапорчса","саски","сау","сашаА","сашак","сашок","св","сварог","светик","свой","сд","сегун","секрет","сексиs","селин","семен","семён","сепеаыв","серг","сергейб","сергейй","сергий","сергоггг","сергун","серебаня","сержант","сержи","сержкрам","сержык","серй","сертук","серыйвол","сет","сибсталь","сила","сильва","симон","сир","сисмиси","сиям","скелетон","скор","скрич","славик","следопыт","слива","смаугал","смертен","сми","смотрила","соболев","сойка","солодок","соня","сота","спам","спартак","спец","спрут","ссн","сссс","сссссссс","ссх","стакл","старзаб","стас","стасян","степа","стерва","стинг","страйкер","стрекоза","стёпа","сумашш","сураж","сухарь","сфирепый","сываы","сыч","сэр","сяупин","тайву","танкпаук","таня","тарантул","тарбар","тася","тварьььь","темп","тео","терем","тзртл","тигр","тим","тимир","тимурром","тираэль","титАН","титб","тлдлод","тмри","толе","толстяк","том","топ","торвик","торин","торты","тосяныч","тпиммтп","травушка","трау","триирр","трольок","трпсрмо","ттии","тттттттт","тумен","ты","тьти","тёма","убийца","ужас","уке","укеуке","укуе","улитка","умом","урзик","уруй","усош","уувуувва","уфыа","фаат","фанат","фантом","фаркрай","фашист","федор","феникц","фериха","фила","философ","фитюлька","флинт","фнгпшщ","француз","френя","фроткот","ффввааав","ффыы","фыва","фыфв","фёдор","хРысьх","хШАФТх","хаван","халк","хан","хантер","харл","хас","хаха","хеллбор","хз","хинатура","хмишах","хоп","хоттабыч","хруст","худой","хули","хх","ххххх","хххь","хэпи","царь","цезарь","цк","цуавмвпм","цукеке","цукеяк","цуцу","цфуыквеа","цывцвсвы","чаус","че","чепіон","черепок","чикатило","читер","чорт","чссит","чудеса","чук","чундух","чфрчко","чёрный","шаиг","шалун","шанара","шатун","шгнеку","шевасик","шеп","шиковний","шкет","шлорпл","шмальной","шок","шоннрша","шпионка","шторм","шурава","шурипан","шхххххш","шщзу","щ","щлхзгхн","щти","щщгг","ыаир","ыауцпеуп","ыввыпкыа","ыврыви","ырыярт","ыщы","ьаен","ьлтл","ьробть","ьфлі","ьььь","эвитана","эдуардик","элаиза","эливия","эллис","эльза","эндр","эродин","эш","юдзиро","юлианна","юля","юраа","юрашарго","юрецперв","юрий","юрик","юрока","ютоотрот","ююю","яМитяй","ява","ядок","якен","якут","янас","яодна","ярлекс","яромир","яс","ясчсчсчс","ятут","ячвку","яшка","яяяяр","ёжик","іван"};
















































#define P_NUM 6
#ifdef SG_16_VER
const char* P_URL[P_NUM] = {
		"http://d16.dawx.net/app/assets/5e375e00e458a5977a5ee0cf9ad5982b.png",
		"http://d16.dawx.net/app/assets/2efd1e89eefed9e7b1b1828e5a6aa240.png",
		"http://d16.dawx.net/app/assets/f95aee9b5d30f4c22241bd9c78695ed6.png",
		"http://d16.dawx.net/app/assets/54fc1c9d08c953870e2019755bd41969.png",
		"http://d16.dawx.net/app/assets/249babfd719cc535e04d0066068e1cb0.png",
		""};
#else
const char* P_URL[P_NUM] = {
		"http://d5.dawx.net/app100688853/sgonline083001/assets/2efd1e89eefed9e7b1b1828e5a6aa240.png",
		"http://d5.dawx.net/app100688853/sgonline083001/assets/f95aee9b5d30f4c22241bd9c78695ed6.png",
		"http://d5.dawx.net/app100688853/sgonline083001/assets/249babfd719cc535e04d0066068e1cb0.png",
		"http://d5.dawx.net/app100688853/sgonline083001/assets/5e375e00e458a5977a5ee0cf9ad5982b.png",
		"http://d5.dawx.net/app100688853/sgonline083001/assets/54fc1c9d08c953870e2019755bd41969.png",
		"http://d5.dawx.net/app100688853/sgonline083001/assets/a0e9587ae80a3a13e66759d5bca505af.png"};
#endif
const char* P_URL_RUS[P_NUM] = {
		"http://island.cdnvideo.ru/app_e/assets/2efd1e89eefed9e7b1b1828e5a6aa240.png",
		"http://island.cdnvideo.ru/app_e/assets/f95aee9b5d30f4c22241bd9c78695ed6.png",
		"http://island.cdnvideo.ru/app_e/assets/a0e9587ae80a3a13e66759d5bca505af.png",
		"http://island.cdnvideo.ru/app_e/assets/54fc1c9d08c953870e2019755bd41969.png",
		"http://island.cdnvideo.ru/app_e/assets/5e375e00e458a5977a5ee0cf9ad5982b.png",
		"http://island.cdnvideo.ru/app_e/assets/249babfd719cc535e04d0066068e1cb0.png"};














































/****************************check name fig*******************************************/
int check()
{
	uint64_t uidEnd;
	int i = 0;
	Config::GetDB(i);
	unsigned userid = Config::GetUIDStart(i);
	CLogicIdCtrl logicIdCtrl;
	int ret = logicIdCtrl.GetCurrentId(KEY_UID_CTRL, uidEnd, i);
	if (ret != 0)
	{
		cout<<"get current user id fail!"<<endl;
		return ret;
	}

	CLogicUserBasic logicUserBasic;
	CDataUserBasic dbUserBasic;
	for (; userid <= (unsigned) uidEnd; ++userid)
	{
		DataUserBasic dataUserBasic;
		ret = logicUserBasic.GetUserBasicLimitWithoutPlatform(userid,dataUserBasic);
		if(ret == 0 && dataUserBasic.name.empty())
		{
			dataUserBasic.name = string(F_NAME[Math::GetRandomInt(F_NUM)]) + string(S_NAME[Math::GetRandomInt(S_NUM)]);
			dataUserBasic.figure_url = string(P_URL[Math::GetRandomInt(P_NUM)]);
			dbUserBasic.SetUserBasicLimit(userid,PT_TEST,dataUserBasic);
		}
	}
	return 0;
}
/*****************************add mapping***************************************/
struct ai{
	string openid;
	unsigned serverid, uid;
	ai(){serverid = uid = 0;}
};
int add(char* file)
{
	ifstream fin(file);
	if (!fin.good())
	{
		cout<<"file error"<<endl;
		return 1;
	}

	vector<ai> t;
	while (!fin.eof() && fin.good())
	{
		ai temp;
		fin >> temp.openid >> temp.serverid >> temp.uid;
		t.push_back(temp);
	}

	CDataUserMapping dbUserMapping;
	string via;
	int ret = 0;
	for(unsigned i=0;i<t.size();++i)
		ret += dbUserMapping.AddMapping(t[i].openid, PT_TX_C9, t[i].uid, via, t[i].serverid, 0, Time::GetGlobalTime() - Math::GetRandomInt(86400*7));

	return ret;
}
/********************************calc level exp by day***************************************/
int allday[8] = {0,7,15,30,60,90,110,130};
int nlevel[8] = {20,40,55,70,81,90,96,100};
int vlevel[8] = {25,45,60,75,90,100,103,105};
int nh=20;
int vh=15;
int gl(int d, bool v)
{
	if(d < 0)
		return 0;
	int *l = v?vlevel:nlevel;
	int h = v?vh:nh;
	int r = 27;
	if(d >= allday[7])
		r = (int)(double(d - allday[7]) / double(h) + double(l[7])) - 1 + Math::GetRandomInt(3);
	else
	{
		for(int i=0;i<7;++i)
		{
			if(d >= allday[i] && d < allday[i+1])
				r = max(24, (int)(double(l[i+1] - l[i]) / double(allday[i+1] - allday[i]) * double(d - allday[i]) + double(l[i])) - 1 + Math::GetRandomInt(3));
		}
	}
	return r;
}
int ge(int l)
{
	if(l <= 0)
		return 0;
	if(l >= 120)
		return user_lvl_exp[119];
	--l;
	return user_lvl_exp[l] +  Math::GetRandomInt(user_lvl_exp[l+1] - user_lvl_exp[l]);
}
/*******************************calc lose by day****************************************/
int nlose[30] = {88,18,12,9,13,13,14,23,11,15,4,7,4,3,9,9,6,12,7,4,4,5,3,3,12,3,3,3,2,1};
int vlose = 4;
bool lose(int d, bool v)
{
	if(d < 0)
		return true;
	if(v)
	{
		if(d >= 7)
			return Math::GetRandomInt(100) < vlose;
		else
			return false;
	}
	else
	{
		if(d >= 30)
			return Math::GetRandomInt(100) < vlose;
		else
			return Math::GetRandomInt(100) < nlose[d];
	}
}
/*************************************************************************************/
void nonvip(string openid, unsigned uid, unsigned reg, unsigned login, unsigned ol, bool daily)
{
	int d = CTime::GetDayInterval(reg, login);
	if(d < 0)
		return;
	if(daily)
	{
		if(lose(d, false))
		{
			if(d == 0)
			{
				int level = Math::GetRandomInt(20);
				int point = ge(level);
				int tutorial_stage = 0;
				if(level > 7)
				{
					login = reg + Math::GetRandomInt(CTime::GetDayBeginTime(reg) + 86400 - reg);
					tutorial_stage = 10000;
					CDataUserMapping().SetLastLogin(openid, Config::GetZoneByUID(uid), login);
				}
				CDataUser().SetAddUser(uid, login, level, point, tutorial_stage);
			}
			return;
		}
		else
		{
			++d;
			login = CTime::GetDayBeginTime(login) + 86400 + Math::GetRandomInt(86400);
			CDataUserMapping().SetLastLogin(openid, Config::GetZoneByUID(uid), login);
			unsigned level = gl(d, false);
			if(ol >= level)
				CDataUser().SetLastLogin(uid, login, login);
			else
			{
				int point = ge(level);
				CDataUser().SetAddUser(uid, login, level, point, 10000);
			}
		}
	}
	else
	{
		CDataUserMapping().SetLastLogin(openid, Config::GetZoneByUID(uid), login);
		int level = gl(d, false);
		int point = ge(level);
		CDataUser().SetAddUser(uid, login, level, point, 10000);
	}
}
/*************************************************************************************/
void vip(string openid, unsigned uid, unsigned reg, unsigned login, unsigned vip, unsigned ol, bool daily)
{
	int d = CTime::GetDayInterval(reg, login);
	if(d < 0)
		return;
	if(daily)
	{
		if(lose(d, true))
			return;
		else
		{
			++d;
			login = CTime::GetDayBeginTime(login) + 86400 + Math::GetRandomInt(86400);
			CDataUserMapping().SetLastLogin(openid, Config::GetZoneByUID(uid), login);
			unsigned level = gl(d, true);
			if(ol >= level)
			{
				CDataUser().SetLastLogin(uid, login, login);
				DataPay pay;
				pay.uid = uid;
				pay.cash = Math::GetRandomInt(256);
				pay.coins = Math::GetRandomInt(256);
				CDataPay().SetPay(uid, pay);
			}
			else
			{
				unsigned exp  = ge(level);
				string v = vip < 6 ? "_0_" : "_1_";
				string f = MainConfig::GetAllServerPath("pi/data/ar/"+CTrans::UTOS(level)+v+CTrans::UTOS(Math::GetRandomInt(10)));
				string ar;
				Json::Value arch;
				if(File::Read(f, ar) == 0 && Json::Reader().parse(ar, arch))
					CLogicAdmin().ImportArchive(uid, arch, true, exp, level, login);
			}
		}
	}
	else
	{
		CDataUserMapping().SetLastLogin(openid, Config::GetZoneByUID(uid), login);
		unsigned level = gl(d, true);
		unsigned exp  = ge(level);
		string v = vip < 6 ? "_0_" : "_1_";
		string f = MainConfig::GetAllServerPath("pi/data/ar/"+CTrans::UTOS(level)+v+CTrans::UTOS(Math::GetRandomInt(10)));
		string ar;
		Json::Value arch;
		if(File::Read(f, ar) == 0 && Json::Reader().parse(ar, arch))
			CLogicAdmin().ImportArchive(uid, arch, true, exp, level, login);
	}
}
/***********check today lose and tomorrow level exp ar / check all level exp ar *************/
int all(char* file, bool daily)
{
	ifstream fin(file);
	if (!fin.good())
	{
		cout<<"file error"<<endl;
		return 1;
	}

	while (!fin.eof() && fin.good())
	{
		string openid;
		unsigned uid = 0, reg = 0, login = 0, acc = 0, plat = 0, ol = 0;
		fin >> openid >> uid >> reg >> login >> acc >> plat >> ol;
		if(IsValidUid(uid))
		{
			int v = 0;
			OpenPlatform::SetPlatform(plat);
			CLogicUser().TransformVipLevel(acc, v);
			if(v)
				vip(openid, uid, reg, login, v, ol, daily);
			else
				nonvip(openid, uid, reg, login, ol, daily);
		}
	}

	return 0;
}
/****************************************add pay**************************************/
int cp(char* file)
{
	ifstream fin(file);
	if (!fin.good())
	{
		cout<<"file error"<<endl;
		return 1;
	}

	CLogicPay logicPay;
	CDataUserMapping dbUserMapping;
	CDataPayHistory dbPayHistory;
	CLogicUser logicUser;
	CDataUser dbUser;
	CLogicIdCtrl logicIdCtrl;
	while (!fin.eof() && fin.good())
	{
		string openid, order_id;
		unsigned cash = 0, money = 0, serverid = 0, ts = 0;
		fin >> cash >> money >> ts >> order_id >> openid >> serverid;

		unsigned uid = 0;
		if(dbUserMapping.GetUID(openid, serverid, uid) || uid == 0)
			continue;

		DataPayHistory payHistory;
		if(dbPayHistory.GetPayHistory(uid, OpenPlatform::GetType(), order_id, payHistory) == 0)
			continue;

		bool bsave = false;
		DataPay pay;
		DataUser user;
		Json::Value user_flag;
		Json::Reader reader;
		if(logicUser.GetUser(uid,user))
			continue;
		reader.parse(user.user_flag, user_flag);

		if(logicPay.ChangePay(uid, cash, 0, pay, "C9TOPUP", user_flag, bsave, PAY_FLAG_CHARGE))
			continue;
		logicPay.DoPay(uid,user,cash);
		if(bsave)
			logicUser.SetUserFlag(uid,user_flag);

		DataPayHistory payhis;
		payhis.channel = user.register_platform;
		payhis.channel_pay_id = order_id;
		payhis.count = cash;
		payhis.credit = money;
		payhis.status = PST_OK;
		payhis.type = 0;
		payhis.uid = uid;
		payhis.open_id = openid;
		payhis.time = ts;

		uint64_t tempid = 0;
		if(logicIdCtrl.GetNextId(KEY_PAY_ID_CTRL, tempid))
			continue;
		payhis.pay_id = tempid;
		dbPayHistory.AddPayHistory(payhis);

		if(ts > user.last_login_time)
		{
			dbUser.SetLastLogin(uid, ts, ts);
			dbUserMapping.SetLastLogin(openid, serverid, ts);
		}
	}

	return 0;
}
/******************************add user*********************************************/
int main(int argc, char *argv[])
{
	if (!Kernel::Init(APP_CONFIG_PATH))
	{
		cout << "init kernel fail" << endl;
		return 1;
	}

	if(argc == 2)
	{
		string cmd(argv[1]);
		if(cmd == "check")
			return check();
		else
		{
			cout<<"need file ts pt"<<endl;
			return 1;
		}
	}
	else if(argc == 3)
	{
		string cmd(argv[1]);
		if(cmd == "add")
			return add(argv[2]);
		else if(cmd == "all")
			return all(argv[2], false);
		else if(cmd == "day")
			return all(argv[2], true);
		else if(cmd == "cp")
			return cp(argv[2]);
		else
		{
			cout<<"need file ts pt"<<endl;
			return 1;
		}
	}
	else if(argc != 4)
	{
		cout<<"need file ts pt"<<endl;
		return 1;
	}

	int ret;
	unsigned ts = atoi(argv[2]);
	ifstream fin(argv[1]);
	if (!fin.good())
	{
		cout<<"file error"<<endl;
		return 1;
	}
	vector<string> openid;
	while (!fin.eof() && fin.good())
	{
		string temp;
		fin >> temp;
		openid.push_back(temp);
	}
	unsigned pt = atoi(argv[3]);
	OPFriendList friendList;
	string via("AU"), iopenid;

	random_shuffle(openid.begin(), openid.end());
	int rt = 2 * (int)ceil(double(86400) / double(min(8640, (int)openid.size())));

	CLogicUserBasic logicUserBasic;
	CDataUserMapping dbMapping;
	CDataUser dbUser;
	for(vector<string>::iterator it=openid.begin();it!=openid.end();++it)
	{
		OPUserInfo userinfo;
		userinfo.OpenId = *it;
		if(pt == PT_RUS)
		{
			switch(Math::GetRandomInt(4))
			{
			case 0:
				userinfo.Name = string(F_NAME_RUS[Math::GetRandomInt(F_NUM_RUS)]);
				break;
			case 1:
				userinfo.Name = string(S_NAME_RUS[Math::GetRandomInt(S_NUM_RUS)]);
				break;
			case 2:
				userinfo.Name = string(S_NAME_RUS[Math::GetRandomInt(S_NUM_RUS)]) + string(F_NAME_RUS[Math::GetRandomInt(F_NUM_RUS)]);
				break;
			case 3:
				userinfo.Name = string(F_NAME_RUS[Math::GetRandomInt(F_NUM_RUS)]) + string(S_NAME_RUS[Math::GetRandomInt(S_NUM_RUS)]);
				break;
			default:
				break;
			}
			userinfo.FigureUrl = string(P_URL_RUS[Math::GetRandomInt(P_NUM)]);}
		else
		{
			userinfo.Name = string(F_NAME[Math::GetRandomInt(F_NUM)]) + string(S_NAME[Math::GetRandomInt(S_NUM)]);
			userinfo.FigureUrl = string(P_URL[Math::GetRandomInt(P_NUM)]);
		}
		unsigned uid = 0;
		bool isNewUser=false;
		ret = logicUserBasic.LoginPlatformUser((PlatformType)pt, userinfo, friendList, iopenid, uid, isNewUser,via,gm_none,1);
		if(ret)
			continue;
		dbMapping.SetTime(userinfo.OpenId, ts);
		dbUser.SetTime(uid, ts);

		ts += Math::GetRandomInt(rt);
	}

	cout << "ok" << endl;
	return 0;
}
