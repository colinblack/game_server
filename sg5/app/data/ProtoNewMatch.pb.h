// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoNewMatch.proto

#ifndef PROTOBUF_ProtoNewMatch_2eproto__INCLUDED
#define PROTOBUF_ProtoNewMatch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoNewMatch {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoNewMatch_2eproto();
void protobuf_AssignDesc_ProtoNewMatch_2eproto();
void protobuf_ShutdownFile_ProtoNewMatch_2eproto();

class ProtoHeroProperty;
class ProtoNewMatchUser;
class ProtoNewMatchGuess;
class ProtoNewMatch;

// ===================================================================

class ProtoHeroProperty : public ::google::protobuf::Message {
 public:
  ProtoHeroProperty();
  virtual ~ProtoHeroProperty();

  ProtoHeroProperty(const ProtoHeroProperty& from);

  inline ProtoHeroProperty& operator=(const ProtoHeroProperty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoHeroProperty& default_instance();

  void Swap(ProtoHeroProperty* other);

  // implements Message ----------------------------------------------

  ProtoHeroProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoHeroProperty& from);
  void MergeFrom(const ProtoHeroProperty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required int32 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // repeated uint32 property = 5;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 5;
  inline ::google::protobuf::uint32 property(int index) const;
  inline void set_property(int index, ::google::protobuf::uint32 value);
  inline void add_property(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      property() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_property();

  // @@protoc_insertion_point(class_scope:ProtoNewMatch.ProtoHeroProperty)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > property_;
  friend void  protobuf_AddDesc_ProtoNewMatch_2eproto();
  friend void protobuf_AssignDesc_ProtoNewMatch_2eproto();
  friend void protobuf_ShutdownFile_ProtoNewMatch_2eproto();

  void InitAsDefaultInstance();
  static ProtoHeroProperty* default_instance_;
};
// -------------------------------------------------------------------

class ProtoNewMatchUser : public ::google::protobuf::Message {
 public:
  ProtoNewMatchUser();
  virtual ~ProtoNewMatchUser();

  ProtoNewMatchUser(const ProtoNewMatchUser& from);

  inline ProtoNewMatchUser& operator=(const ProtoNewMatchUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNewMatchUser& default_instance();

  void Swap(ProtoNewMatchUser* other);

  // implements Message ----------------------------------------------

  ProtoNewMatchUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoNewMatchUser& from);
  void MergeFrom(const ProtoNewMatchUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 turn = 3;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 3;
  inline ::google::protobuf::uint32 turn() const;
  inline void set_turn(::google::protobuf::uint32 value);

  // repeated uint32 index = 4;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index(int index) const;
  inline void set_index(int index, ::google::protobuf::uint32 value);
  inline void add_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_index();

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string aname = 6;
  inline bool has_aname() const;
  inline void clear_aname();
  static const int kAnameFieldNumber = 6;
  inline const ::std::string& aname() const;
  inline void set_aname(const ::std::string& value);
  inline void set_aname(const char* value);
  inline void set_aname(const char* value, size_t size);
  inline ::std::string* mutable_aname();
  inline ::std::string* release_aname();
  inline void set_allocated_aname(::std::string* aname);

  // required string fig = 7;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 7;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 8;
  inline const ::ProtoNewMatch::ProtoHeroProperty& hero(int index) const;
  inline ::ProtoNewMatch::ProtoHeroProperty* mutable_hero(int index);
  inline ::ProtoNewMatch::ProtoHeroProperty* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoHeroProperty >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoHeroProperty >*
      mutable_hero();

  // @@protoc_insertion_point(class_scope:ProtoNewMatch.ProtoNewMatchUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_turn();
  inline void clear_has_turn();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_aname();
  inline void clear_has_aname();
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > index_;
  ::std::string* name_;
  ::std::string* aname_;
  ::std::string* fig_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoHeroProperty > hero_;
  ::google::protobuf::uint32 turn_;
  friend void  protobuf_AddDesc_ProtoNewMatch_2eproto();
  friend void protobuf_AssignDesc_ProtoNewMatch_2eproto();
  friend void protobuf_ShutdownFile_ProtoNewMatch_2eproto();

  void InitAsDefaultInstance();
  static ProtoNewMatchUser* default_instance_;
};
// -------------------------------------------------------------------

class ProtoNewMatchGuess : public ::google::protobuf::Message {
 public:
  ProtoNewMatchGuess();
  virtual ~ProtoNewMatchGuess();

  ProtoNewMatchGuess(const ProtoNewMatchGuess& from);

  inline ProtoNewMatchGuess& operator=(const ProtoNewMatchGuess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNewMatchGuess& default_instance();

  void Swap(ProtoNewMatchGuess* other);

  // implements Message ----------------------------------------------

  ProtoNewMatchGuess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoNewMatchGuess& from);
  void MergeFrom(const ProtoNewMatchGuess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 guess = 2;
  inline bool has_guess() const;
  inline void clear_guess();
  static const int kGuessFieldNumber = 2;
  inline ::google::protobuf::uint32 guess() const;
  inline void set_guess(::google::protobuf::uint32 value);

  // required uint32 bet = 3;
  inline bool has_bet() const;
  inline void clear_bet();
  static const int kBetFieldNumber = 3;
  inline ::google::protobuf::uint32 bet() const;
  inline void set_bet(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNewMatch.ProtoNewMatchGuess)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_guess();
  inline void clear_has_guess();
  inline void set_has_bet();
  inline void clear_has_bet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 guess_;
  ::google::protobuf::uint32 bet_;
  friend void  protobuf_AddDesc_ProtoNewMatch_2eproto();
  friend void protobuf_AssignDesc_ProtoNewMatch_2eproto();
  friend void protobuf_ShutdownFile_ProtoNewMatch_2eproto();

  void InitAsDefaultInstance();
  static ProtoNewMatchGuess* default_instance_;
};
// -------------------------------------------------------------------

class ProtoNewMatch : public ::google::protobuf::Message {
 public:
  ProtoNewMatch();
  virtual ~ProtoNewMatch();

  ProtoNewMatch(const ProtoNewMatch& from);

  inline ProtoNewMatch& operator=(const ProtoNewMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNewMatch& default_instance();

  void Swap(ProtoNewMatch* other);

  // implements Message ----------------------------------------------

  ProtoNewMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoNewMatch& from);
  void MergeFrom(const ProtoNewMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
  inline int rank_size() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline const ::ProtoNewMatch::ProtoNewMatchUser& rank(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchUser* mutable_rank(int index);
  inline ::ProtoNewMatch::ProtoNewMatchUser* add_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
      rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
      mutable_rank();

  // repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
  inline int top8_size() const;
  inline void clear_top8();
  static const int kTop8FieldNumber = 3;
  inline const ::ProtoNewMatch::ProtoNewMatchUser& top8(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchUser* mutable_top8(int index);
  inline ::ProtoNewMatch::ProtoNewMatchUser* add_top8();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
      top8() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
      mutable_top8();

  // repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
  inline int top4_size() const;
  inline void clear_top4();
  static const int kTop4FieldNumber = 4;
  inline const ::ProtoNewMatch::ProtoNewMatchUser& top4(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchUser* mutable_top4(int index);
  inline ::ProtoNewMatch::ProtoNewMatchUser* add_top4();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
      top4() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
      mutable_top4();

  // repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
  inline int top2_size() const;
  inline void clear_top2();
  static const int kTop2FieldNumber = 5;
  inline const ::ProtoNewMatch::ProtoNewMatchUser& top2(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchUser* mutable_top2(int index);
  inline ::ProtoNewMatch::ProtoNewMatchUser* add_top2();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
      top2() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
      mutable_top2();

  // repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
  inline int user_size() const;
  inline void clear_user();
  static const int kUserFieldNumber = 6;
  inline const ::ProtoNewMatch::ProtoNewMatchUser& user(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchUser* mutable_user(int index);
  inline ::ProtoNewMatch::ProtoNewMatchUser* add_user();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
      user() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
      mutable_user();

  // repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
  inline int guess_size() const;
  inline void clear_guess();
  static const int kGuessFieldNumber = 7;
  inline const ::ProtoNewMatch::ProtoNewMatchGuess& guess(int index) const;
  inline ::ProtoNewMatch::ProtoNewMatchGuess* mutable_guess(int index);
  inline ::ProtoNewMatch::ProtoNewMatchGuess* add_guess();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchGuess >&
      guess() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchGuess >*
      mutable_guess();

  // @@protoc_insertion_point(class_scope:ProtoNewMatch.ProtoNewMatch)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser > rank_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser > top8_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser > top4_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser > top2_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser > user_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchGuess > guess_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_ProtoNewMatch_2eproto();
  friend void protobuf_AssignDesc_ProtoNewMatch_2eproto();
  friend void protobuf_ShutdownFile_ProtoNewMatch_2eproto();

  void InitAsDefaultInstance();
  static ProtoNewMatch* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoHeroProperty

// required uint32 hid = 1;
inline bool ProtoHeroProperty::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoHeroProperty::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoHeroProperty::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoHeroProperty::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 ProtoHeroProperty::hid() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoHeroProperty.hid)
  return hid_;
}
inline void ProtoHeroProperty::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoHeroProperty.hid)
}

// required uint32 job = 2;
inline bool ProtoHeroProperty::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoHeroProperty::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoHeroProperty::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoHeroProperty::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 ProtoHeroProperty::job() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoHeroProperty.job)
  return job_;
}
inline void ProtoHeroProperty::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoHeroProperty.job)
}

// required uint32 level = 3;
inline bool ProtoHeroProperty::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoHeroProperty::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoHeroProperty::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoHeroProperty::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ProtoHeroProperty::level() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoHeroProperty.level)
  return level_;
}
inline void ProtoHeroProperty::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoHeroProperty.level)
}

// required int32 hp = 4;
inline bool ProtoHeroProperty::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoHeroProperty::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoHeroProperty::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoHeroProperty::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 ProtoHeroProperty::hp() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoHeroProperty.hp)
  return hp_;
}
inline void ProtoHeroProperty::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoHeroProperty.hp)
}

// repeated uint32 property = 5;
inline int ProtoHeroProperty::property_size() const {
  return property_.size();
}
inline void ProtoHeroProperty::clear_property() {
  property_.Clear();
}
inline ::google::protobuf::uint32 ProtoHeroProperty::property(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoHeroProperty.property)
  return property_.Get(index);
}
inline void ProtoHeroProperty::set_property(int index, ::google::protobuf::uint32 value) {
  property_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoHeroProperty.property)
}
inline void ProtoHeroProperty::add_property(::google::protobuf::uint32 value) {
  property_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoHeroProperty.property)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoHeroProperty::property() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoHeroProperty.property)
  return property_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoHeroProperty::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoHeroProperty.property)
  return &property_;
}

// -------------------------------------------------------------------

// ProtoNewMatchUser

// required uint32 uid = 1;
inline bool ProtoNewMatchUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNewMatchUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNewMatchUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNewMatchUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ProtoNewMatchUser::uid() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.uid)
  return uid_;
}
inline void ProtoNewMatchUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.uid)
}

// required uint32 score = 2;
inline bool ProtoNewMatchUser::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoNewMatchUser::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoNewMatchUser::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoNewMatchUser::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ProtoNewMatchUser::score() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.score)
  return score_;
}
inline void ProtoNewMatchUser::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.score)
}

// required uint32 turn = 3;
inline bool ProtoNewMatchUser::has_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoNewMatchUser::set_has_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoNewMatchUser::clear_has_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoNewMatchUser::clear_turn() {
  turn_ = 0u;
  clear_has_turn();
}
inline ::google::protobuf::uint32 ProtoNewMatchUser::turn() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.turn)
  return turn_;
}
inline void ProtoNewMatchUser::set_turn(::google::protobuf::uint32 value) {
  set_has_turn();
  turn_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.turn)
}

// repeated uint32 index = 4;
inline int ProtoNewMatchUser::index_size() const {
  return index_.size();
}
inline void ProtoNewMatchUser::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::uint32 ProtoNewMatchUser::index(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.index)
  return index_.Get(index);
}
inline void ProtoNewMatchUser::set_index(int index, ::google::protobuf::uint32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.index)
}
inline void ProtoNewMatchUser::add_index(::google::protobuf::uint32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatchUser.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoNewMatchUser::index() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatchUser.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoNewMatchUser::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatchUser.index)
  return &index_;
}

// required string name = 5;
inline bool ProtoNewMatchUser::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoNewMatchUser::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoNewMatchUser::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoNewMatchUser::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoNewMatchUser::name() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.name)
  return *name_;
}
inline void ProtoNewMatchUser::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.name)
}
inline void ProtoNewMatchUser::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoNewMatch.ProtoNewMatchUser.name)
}
inline void ProtoNewMatchUser::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoNewMatch.ProtoNewMatchUser.name)
}
inline ::std::string* ProtoNewMatchUser::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatchUser.name)
  return name_;
}
inline ::std::string* ProtoNewMatchUser::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProtoNewMatchUser::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNewMatch.ProtoNewMatchUser.name)
}

// required string aname = 6;
inline bool ProtoNewMatchUser::has_aname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoNewMatchUser::set_has_aname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoNewMatchUser::clear_has_aname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoNewMatchUser::clear_aname() {
  if (aname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    aname_->clear();
  }
  clear_has_aname();
}
inline const ::std::string& ProtoNewMatchUser::aname() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.aname)
  return *aname_;
}
inline void ProtoNewMatchUser::set_aname(const ::std::string& value) {
  set_has_aname();
  if (aname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    aname_ = new ::std::string;
  }
  aname_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.aname)
}
inline void ProtoNewMatchUser::set_aname(const char* value) {
  set_has_aname();
  if (aname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    aname_ = new ::std::string;
  }
  aname_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoNewMatch.ProtoNewMatchUser.aname)
}
inline void ProtoNewMatchUser::set_aname(const char* value, size_t size) {
  set_has_aname();
  if (aname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    aname_ = new ::std::string;
  }
  aname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoNewMatch.ProtoNewMatchUser.aname)
}
inline ::std::string* ProtoNewMatchUser::mutable_aname() {
  set_has_aname();
  if (aname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    aname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatchUser.aname)
  return aname_;
}
inline ::std::string* ProtoNewMatchUser::release_aname() {
  clear_has_aname();
  if (aname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = aname_;
    aname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProtoNewMatchUser::set_allocated_aname(::std::string* aname) {
  if (aname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete aname_;
  }
  if (aname) {
    set_has_aname();
    aname_ = aname;
  } else {
    clear_has_aname();
    aname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNewMatch.ProtoNewMatchUser.aname)
}

// required string fig = 7;
inline bool ProtoNewMatchUser::has_fig() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoNewMatchUser::set_has_fig() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoNewMatchUser::clear_has_fig() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoNewMatchUser::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ProtoNewMatchUser::fig() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.fig)
  return *fig_;
}
inline void ProtoNewMatchUser::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchUser.fig)
}
inline void ProtoNewMatchUser::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoNewMatch.ProtoNewMatchUser.fig)
}
inline void ProtoNewMatchUser::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoNewMatch.ProtoNewMatchUser.fig)
}
inline ::std::string* ProtoNewMatchUser::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatchUser.fig)
  return fig_;
}
inline ::std::string* ProtoNewMatchUser::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProtoNewMatchUser::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNewMatch.ProtoNewMatchUser.fig)
}

// repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
inline int ProtoNewMatchUser::hero_size() const {
  return hero_.size();
}
inline void ProtoNewMatchUser::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoNewMatch::ProtoHeroProperty& ProtoNewMatchUser::hero(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchUser.hero)
  return hero_.Get(index);
}
inline ::ProtoNewMatch::ProtoHeroProperty* ProtoNewMatchUser::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatchUser.hero)
  return hero_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoHeroProperty* ProtoNewMatchUser::add_hero() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatchUser.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoHeroProperty >&
ProtoNewMatchUser::hero() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatchUser.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoHeroProperty >*
ProtoNewMatchUser::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatchUser.hero)
  return &hero_;
}

// -------------------------------------------------------------------

// ProtoNewMatchGuess

// required uint32 uid = 1;
inline bool ProtoNewMatchGuess::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNewMatchGuess::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNewMatchGuess::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNewMatchGuess::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ProtoNewMatchGuess::uid() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchGuess.uid)
  return uid_;
}
inline void ProtoNewMatchGuess::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchGuess.uid)
}

// required uint32 guess = 2;
inline bool ProtoNewMatchGuess::has_guess() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoNewMatchGuess::set_has_guess() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoNewMatchGuess::clear_has_guess() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoNewMatchGuess::clear_guess() {
  guess_ = 0u;
  clear_has_guess();
}
inline ::google::protobuf::uint32 ProtoNewMatchGuess::guess() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchGuess.guess)
  return guess_;
}
inline void ProtoNewMatchGuess::set_guess(::google::protobuf::uint32 value) {
  set_has_guess();
  guess_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchGuess.guess)
}

// required uint32 bet = 3;
inline bool ProtoNewMatchGuess::has_bet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoNewMatchGuess::set_has_bet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoNewMatchGuess::clear_has_bet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoNewMatchGuess::clear_bet() {
  bet_ = 0u;
  clear_has_bet();
}
inline ::google::protobuf::uint32 ProtoNewMatchGuess::bet() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatchGuess.bet)
  return bet_;
}
inline void ProtoNewMatchGuess::set_bet(::google::protobuf::uint32 value) {
  set_has_bet();
  bet_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatchGuess.bet)
}

// -------------------------------------------------------------------

// ProtoNewMatch

// required uint32 stage = 1;
inline bool ProtoNewMatch::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNewMatch::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNewMatch::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNewMatch::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 ProtoNewMatch::stage() const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.stage)
  return stage_;
}
inline void ProtoNewMatch::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:ProtoNewMatch.ProtoNewMatch.stage)
}

// repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
inline int ProtoNewMatch::rank_size() const {
  return rank_.size();
}
inline void ProtoNewMatch::clear_rank() {
  rank_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchUser& ProtoNewMatch::rank(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.rank)
  return rank_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::mutable_rank(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.rank)
  return rank_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::add_rank() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.rank)
  return rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
ProtoNewMatch::rank() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.rank)
  return rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
ProtoNewMatch::mutable_rank() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.rank)
  return &rank_;
}

// repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
inline int ProtoNewMatch::top8_size() const {
  return top8_.size();
}
inline void ProtoNewMatch::clear_top8() {
  top8_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchUser& ProtoNewMatch::top8(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.top8)
  return top8_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::mutable_top8(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.top8)
  return top8_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::add_top8() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.top8)
  return top8_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
ProtoNewMatch::top8() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.top8)
  return top8_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
ProtoNewMatch::mutable_top8() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.top8)
  return &top8_;
}

// repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
inline int ProtoNewMatch::top4_size() const {
  return top4_.size();
}
inline void ProtoNewMatch::clear_top4() {
  top4_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchUser& ProtoNewMatch::top4(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.top4)
  return top4_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::mutable_top4(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.top4)
  return top4_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::add_top4() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.top4)
  return top4_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
ProtoNewMatch::top4() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.top4)
  return top4_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
ProtoNewMatch::mutable_top4() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.top4)
  return &top4_;
}

// repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
inline int ProtoNewMatch::top2_size() const {
  return top2_.size();
}
inline void ProtoNewMatch::clear_top2() {
  top2_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchUser& ProtoNewMatch::top2(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.top2)
  return top2_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::mutable_top2(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.top2)
  return top2_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::add_top2() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.top2)
  return top2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
ProtoNewMatch::top2() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.top2)
  return top2_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
ProtoNewMatch::mutable_top2() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.top2)
  return &top2_;
}

// repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
inline int ProtoNewMatch::user_size() const {
  return user_.size();
}
inline void ProtoNewMatch::clear_user() {
  user_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchUser& ProtoNewMatch::user(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.user)
  return user_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.user)
  return user_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchUser* ProtoNewMatch::add_user() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.user)
  return user_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >&
ProtoNewMatch::user() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.user)
  return user_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchUser >*
ProtoNewMatch::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.user)
  return &user_;
}

// repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
inline int ProtoNewMatch::guess_size() const {
  return guess_.size();
}
inline void ProtoNewMatch::clear_guess() {
  guess_.Clear();
}
inline const ::ProtoNewMatch::ProtoNewMatchGuess& ProtoNewMatch::guess(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNewMatch.ProtoNewMatch.guess)
  return guess_.Get(index);
}
inline ::ProtoNewMatch::ProtoNewMatchGuess* ProtoNewMatch::mutable_guess(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNewMatch.ProtoNewMatch.guess)
  return guess_.Mutable(index);
}
inline ::ProtoNewMatch::ProtoNewMatchGuess* ProtoNewMatch::add_guess() {
  // @@protoc_insertion_point(field_add:ProtoNewMatch.ProtoNewMatch.guess)
  return guess_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchGuess >&
ProtoNewMatch::guess() const {
  // @@protoc_insertion_point(field_list:ProtoNewMatch.ProtoNewMatch.guess)
  return guess_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNewMatch::ProtoNewMatchGuess >*
ProtoNewMatch::mutable_guess() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNewMatch.ProtoNewMatch.guess)
  return &guess_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNewMatch

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoNewMatch_2eproto__INCLUDED
