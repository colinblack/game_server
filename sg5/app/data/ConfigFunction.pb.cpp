// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigFunction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigFunction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigFunction {

namespace {

const ::google::protobuf::Descriptor* OpenSpecialEquipItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenSpecialEquipItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Functions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Functions_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigFunction_2eproto() {
  protobuf_AddDesc_ConfigFunction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigFunction.proto");
  GOOGLE_CHECK(file != NULL);
  OpenSpecialEquipItem_descriptor_ = file->message_type(0);
  static const int OpenSpecialEquipItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSpecialEquipItem, eqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSpecialEquipItem, replace_equips_),
  };
  OpenSpecialEquipItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenSpecialEquipItem_descriptor_,
      OpenSpecialEquipItem::default_instance_,
      OpenSpecialEquipItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSpecialEquipItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSpecialEquipItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenSpecialEquipItem));
  Functions_descriptor_ = file->message_type(1);
  static const int Functions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Functions, open_special_equip_),
  };
  Functions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Functions_descriptor_,
      Functions::default_instance_,
      Functions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Functions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Functions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Functions));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigFunction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenSpecialEquipItem_descriptor_, &OpenSpecialEquipItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Functions_descriptor_, &Functions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigFunction_2eproto() {
  delete OpenSpecialEquipItem::default_instance_;
  delete OpenSpecialEquipItem_reflection_;
  delete Functions::default_instance_;
  delete Functions_reflection_;
}

void protobuf_AddDesc_ConfigFunction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RewardConfig::protobuf_AddDesc_RewardConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConfigFunction.proto\022\016ConfigFunction\032\022"
    "RewardConfig.proto\"Y\n\024OpenSpecialEquipIt"
    "em\022\014\n\004eqid\030\001 \002(\r\0223\n\016replace_equips\030\002 \003(\013"
    "2\033.RewardConfig.RewardItemCfg\"M\n\tFunctio"
    "ns\022@\n\022open_special_equip\030\001 \003(\0132$.ConfigF"
    "unction.OpenSpecialEquipItem", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigFunction.proto", &protobuf_RegisterTypes);
  OpenSpecialEquipItem::default_instance_ = new OpenSpecialEquipItem();
  Functions::default_instance_ = new Functions();
  OpenSpecialEquipItem::default_instance_->InitAsDefaultInstance();
  Functions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigFunction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigFunction_2eproto {
  StaticDescriptorInitializer_ConfigFunction_2eproto() {
    protobuf_AddDesc_ConfigFunction_2eproto();
  }
} static_descriptor_initializer_ConfigFunction_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int OpenSpecialEquipItem::kEqidFieldNumber;
const int OpenSpecialEquipItem::kReplaceEquipsFieldNumber;
#endif  // !_MSC_VER

OpenSpecialEquipItem::OpenSpecialEquipItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigFunction.OpenSpecialEquipItem)
}

void OpenSpecialEquipItem::InitAsDefaultInstance() {
}

OpenSpecialEquipItem::OpenSpecialEquipItem(const OpenSpecialEquipItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigFunction.OpenSpecialEquipItem)
}

void OpenSpecialEquipItem::SharedCtor() {
  _cached_size_ = 0;
  eqid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenSpecialEquipItem::~OpenSpecialEquipItem() {
  // @@protoc_insertion_point(destructor:ConfigFunction.OpenSpecialEquipItem)
  SharedDtor();
}

void OpenSpecialEquipItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenSpecialEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenSpecialEquipItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenSpecialEquipItem_descriptor_;
}

const OpenSpecialEquipItem& OpenSpecialEquipItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigFunction_2eproto();
  return *default_instance_;
}

OpenSpecialEquipItem* OpenSpecialEquipItem::default_instance_ = NULL;

OpenSpecialEquipItem* OpenSpecialEquipItem::New() const {
  return new OpenSpecialEquipItem;
}

void OpenSpecialEquipItem::Clear() {
  eqid_ = 0u;
  replace_equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenSpecialEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigFunction.OpenSpecialEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 eqid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eqid_)));
          set_has_eqid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_replace_equips;
        break;
      }

      // repeated .RewardConfig.RewardItemCfg replace_equips = 2;
      case 2: {
        if (tag == 18) {
         parse_replace_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replace_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_replace_equips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigFunction.OpenSpecialEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigFunction.OpenSpecialEquipItem)
  return false;
#undef DO_
}

void OpenSpecialEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigFunction.OpenSpecialEquipItem)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eqid(), output);
  }

  // repeated .RewardConfig.RewardItemCfg replace_equips = 2;
  for (int i = 0; i < this->replace_equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->replace_equips(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigFunction.OpenSpecialEquipItem)
}

::google::protobuf::uint8* OpenSpecialEquipItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigFunction.OpenSpecialEquipItem)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eqid(), target);
  }

  // repeated .RewardConfig.RewardItemCfg replace_equips = 2;
  for (int i = 0; i < this->replace_equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->replace_equips(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigFunction.OpenSpecialEquipItem)
  return target;
}

int OpenSpecialEquipItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 eqid = 1;
    if (has_eqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eqid());
    }

  }
  // repeated .RewardConfig.RewardItemCfg replace_equips = 2;
  total_size += 1 * this->replace_equips_size();
  for (int i = 0; i < this->replace_equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->replace_equips(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenSpecialEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenSpecialEquipItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenSpecialEquipItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenSpecialEquipItem::MergeFrom(const OpenSpecialEquipItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  replace_equips_.MergeFrom(from.replace_equips_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eqid()) {
      set_eqid(from.eqid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenSpecialEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenSpecialEquipItem::CopyFrom(const OpenSpecialEquipItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenSpecialEquipItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->replace_equips())) return false;
  return true;
}

void OpenSpecialEquipItem::Swap(OpenSpecialEquipItem* other) {
  if (other != this) {
    std::swap(eqid_, other->eqid_);
    replace_equips_.Swap(&other->replace_equips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenSpecialEquipItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenSpecialEquipItem_descriptor_;
  metadata.reflection = OpenSpecialEquipItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Functions::kOpenSpecialEquipFieldNumber;
#endif  // !_MSC_VER

Functions::Functions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigFunction.Functions)
}

void Functions::InitAsDefaultInstance() {
}

Functions::Functions(const Functions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigFunction.Functions)
}

void Functions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Functions::~Functions() {
  // @@protoc_insertion_point(destructor:ConfigFunction.Functions)
  SharedDtor();
}

void Functions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Functions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Functions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Functions_descriptor_;
}

const Functions& Functions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigFunction_2eproto();
  return *default_instance_;
}

Functions* Functions::default_instance_ = NULL;

Functions* Functions::New() const {
  return new Functions;
}

void Functions::Clear() {
  open_special_equip_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Functions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigFunction.Functions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConfigFunction.OpenSpecialEquipItem open_special_equip = 1;
      case 1: {
        if (tag == 10) {
         parse_open_special_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_open_special_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_open_special_equip;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigFunction.Functions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigFunction.Functions)
  return false;
#undef DO_
}

void Functions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigFunction.Functions)
  // repeated .ConfigFunction.OpenSpecialEquipItem open_special_equip = 1;
  for (int i = 0; i < this->open_special_equip_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->open_special_equip(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigFunction.Functions)
}

::google::protobuf::uint8* Functions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigFunction.Functions)
  // repeated .ConfigFunction.OpenSpecialEquipItem open_special_equip = 1;
  for (int i = 0; i < this->open_special_equip_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->open_special_equip(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigFunction.Functions)
  return target;
}

int Functions::ByteSize() const {
  int total_size = 0;

  // repeated .ConfigFunction.OpenSpecialEquipItem open_special_equip = 1;
  total_size += 1 * this->open_special_equip_size();
  for (int i = 0; i < this->open_special_equip_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_special_equip(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Functions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Functions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Functions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Functions::MergeFrom(const Functions& from) {
  GOOGLE_CHECK_NE(&from, this);
  open_special_equip_.MergeFrom(from.open_special_equip_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Functions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Functions::CopyFrom(const Functions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Functions::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->open_special_equip())) return false;
  return true;
}

void Functions::Swap(Functions* other) {
  if (other != this) {
    open_special_equip_.Swap(&other->open_special_equip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Functions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Functions_descriptor_;
  metadata.reflection = Functions_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigFunction

// @@protoc_insertion_point(global_scope)
