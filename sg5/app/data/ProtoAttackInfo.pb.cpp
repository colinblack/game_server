// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoAttackInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoAttackInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoAttackInfo {

namespace {

const ::google::protobuf::Descriptor* ProtoAttackHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoAttackHero_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoAttackBuilding_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoAttackBuilding_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoAttackRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoAttackRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoAttackInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoAttackInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoAttackInfo_2eproto() {
  protobuf_AddDesc_ProtoAttackInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoAttackInfo.proto");
  GOOGLE_CHECK(file != NULL);
  ProtoAttackHero_descriptor_ = file->message_type(0);
  static const int ProtoAttackHero_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackHero, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackHero, hp_),
  };
  ProtoAttackHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoAttackHero_descriptor_,
      ProtoAttackHero::default_instance_,
      ProtoAttackHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoAttackHero));
  ProtoAttackBuilding_descriptor_ = file->message_type(1);
  static const int ProtoAttackBuilding_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackBuilding, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackBuilding, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackBuilding, res_),
  };
  ProtoAttackBuilding_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoAttackBuilding_descriptor_,
      ProtoAttackBuilding::default_instance_,
      ProtoAttackBuilding_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackBuilding, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackBuilding, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoAttackBuilding));
  ProtoAttackRes_descriptor_ = file->message_type(2);
  static const int ProtoAttackRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackRes, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackRes, count_),
  };
  ProtoAttackRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoAttackRes_descriptor_,
      ProtoAttackRes::default_instance_,
      ProtoAttackRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoAttackRes));
  ProtoAttackInfo_descriptor_ = file->message_type(3);
  static const int ProtoAttackInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, building_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, attackts_),
  };
  ProtoAttackInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoAttackInfo_descriptor_,
      ProtoAttackInfo::default_instance_,
      ProtoAttackInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAttackInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoAttackInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoAttackInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoAttackHero_descriptor_, &ProtoAttackHero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoAttackBuilding_descriptor_, &ProtoAttackBuilding::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoAttackRes_descriptor_, &ProtoAttackRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoAttackInfo_descriptor_, &ProtoAttackInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoAttackInfo_2eproto() {
  delete ProtoAttackHero::default_instance_;
  delete ProtoAttackHero_reflection_;
  delete ProtoAttackBuilding::default_instance_;
  delete ProtoAttackBuilding_reflection_;
  delete ProtoAttackRes::default_instance_;
  delete ProtoAttackRes_reflection_;
  delete ProtoAttackInfo::default_instance_;
  delete ProtoAttackInfo_reflection_;
}

void protobuf_AddDesc_ProtoAttackInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ProtoAttackInfo.proto\022\017ProtoAttackInfo"
    "\")\n\017ProtoAttackHero\022\n\n\002ud\030\001 \002(\r\022\n\n\002hp\030\002 "
    "\002(\r\":\n\023ProtoAttackBuilding\022\n\n\002ud\030\001 \002(\r\022\n"
    "\n\002hp\030\002 \002(\r\022\013\n\003res\030\003 \002(\r\"+\n\016ProtoAttackRe"
    "s\022\n\n\002id\030\001 \002(\r\022\r\n\005count\030\002 \002(\r\"\271\001\n\017ProtoAt"
    "tackInfo\022.\n\004hero\030\001 \003(\0132 .ProtoAttackInfo"
    ".ProtoAttackHero\0226\n\010building\030\002 \003(\0132$.Pro"
    "toAttackInfo.ProtoAttackBuilding\022,\n\003res\030"
    "\003 \003(\0132\037.ProtoAttackInfo.ProtoAttackRes\022\020"
    "\n\010attackts\030\004 \002(\r", 376);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoAttackInfo.proto", &protobuf_RegisterTypes);
  ProtoAttackHero::default_instance_ = new ProtoAttackHero();
  ProtoAttackBuilding::default_instance_ = new ProtoAttackBuilding();
  ProtoAttackRes::default_instance_ = new ProtoAttackRes();
  ProtoAttackInfo::default_instance_ = new ProtoAttackInfo();
  ProtoAttackHero::default_instance_->InitAsDefaultInstance();
  ProtoAttackBuilding::default_instance_->InitAsDefaultInstance();
  ProtoAttackRes::default_instance_->InitAsDefaultInstance();
  ProtoAttackInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoAttackInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoAttackInfo_2eproto {
  StaticDescriptorInitializer_ProtoAttackInfo_2eproto() {
    protobuf_AddDesc_ProtoAttackInfo_2eproto();
  }
} static_descriptor_initializer_ProtoAttackInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProtoAttackHero::kUdFieldNumber;
const int ProtoAttackHero::kHpFieldNumber;
#endif  // !_MSC_VER

ProtoAttackHero::ProtoAttackHero()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAttackInfo.ProtoAttackHero)
}

void ProtoAttackHero::InitAsDefaultInstance() {
}

ProtoAttackHero::ProtoAttackHero(const ProtoAttackHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAttackInfo.ProtoAttackHero)
}

void ProtoAttackHero::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  hp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoAttackHero::~ProtoAttackHero() {
  // @@protoc_insertion_point(destructor:ProtoAttackInfo.ProtoAttackHero)
  SharedDtor();
}

void ProtoAttackHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoAttackHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAttackHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoAttackHero_descriptor_;
}

const ProtoAttackHero& ProtoAttackHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAttackInfo_2eproto();
  return *default_instance_;
}

ProtoAttackHero* ProtoAttackHero::default_instance_ = NULL;

ProtoAttackHero* ProtoAttackHero::New() const {
  return new ProtoAttackHero;
}

void ProtoAttackHero::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoAttackHero*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, hp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoAttackHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAttackInfo.ProtoAttackHero)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hp;
        break;
      }

      // required uint32 hp = 2;
      case 2: {
        if (tag == 16) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAttackInfo.ProtoAttackHero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAttackInfo.ProtoAttackHero)
  return false;
#undef DO_
}

void ProtoAttackHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAttackInfo.ProtoAttackHero)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAttackInfo.ProtoAttackHero)
}

::google::protobuf::uint8* ProtoAttackHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAttackInfo.ProtoAttackHero)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAttackInfo.ProtoAttackHero)
  return target;
}

int ProtoAttackHero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 hp = 2;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAttackHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoAttackHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoAttackHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoAttackHero::MergeFrom(const ProtoAttackHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoAttackHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAttackHero::CopyFrom(const ProtoAttackHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAttackHero::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ProtoAttackHero::Swap(ProtoAttackHero* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(hp_, other->hp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoAttackHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoAttackHero_descriptor_;
  metadata.reflection = ProtoAttackHero_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoAttackBuilding::kUdFieldNumber;
const int ProtoAttackBuilding::kHpFieldNumber;
const int ProtoAttackBuilding::kResFieldNumber;
#endif  // !_MSC_VER

ProtoAttackBuilding::ProtoAttackBuilding()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAttackInfo.ProtoAttackBuilding)
}

void ProtoAttackBuilding::InitAsDefaultInstance() {
}

ProtoAttackBuilding::ProtoAttackBuilding(const ProtoAttackBuilding& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAttackInfo.ProtoAttackBuilding)
}

void ProtoAttackBuilding::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  hp_ = 0u;
  res_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoAttackBuilding::~ProtoAttackBuilding() {
  // @@protoc_insertion_point(destructor:ProtoAttackInfo.ProtoAttackBuilding)
  SharedDtor();
}

void ProtoAttackBuilding::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoAttackBuilding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAttackBuilding::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoAttackBuilding_descriptor_;
}

const ProtoAttackBuilding& ProtoAttackBuilding::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAttackInfo_2eproto();
  return *default_instance_;
}

ProtoAttackBuilding* ProtoAttackBuilding::default_instance_ = NULL;

ProtoAttackBuilding* ProtoAttackBuilding::New() const {
  return new ProtoAttackBuilding;
}

void ProtoAttackBuilding::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoAttackBuilding*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, res_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoAttackBuilding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAttackInfo.ProtoAttackBuilding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hp;
        break;
      }

      // required uint32 hp = 2;
      case 2: {
        if (tag == 16) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // required uint32 res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_)));
          set_has_res();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAttackInfo.ProtoAttackBuilding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAttackInfo.ProtoAttackBuilding)
  return false;
#undef DO_
}

void ProtoAttackBuilding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAttackInfo.ProtoAttackBuilding)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hp(), output);
  }

  // required uint32 res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAttackInfo.ProtoAttackBuilding)
}

::google::protobuf::uint8* ProtoAttackBuilding::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAttackInfo.ProtoAttackBuilding)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 hp = 2;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hp(), target);
  }

  // required uint32 res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAttackInfo.ProtoAttackBuilding)
  return target;
}

int ProtoAttackBuilding::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 hp = 2;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

    // required uint32 res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAttackBuilding::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoAttackBuilding* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoAttackBuilding*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoAttackBuilding::MergeFrom(const ProtoAttackBuilding& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoAttackBuilding::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAttackBuilding::CopyFrom(const ProtoAttackBuilding& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAttackBuilding::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ProtoAttackBuilding::Swap(ProtoAttackBuilding* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(hp_, other->hp_);
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoAttackBuilding::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoAttackBuilding_descriptor_;
  metadata.reflection = ProtoAttackBuilding_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoAttackRes::kIdFieldNumber;
const int ProtoAttackRes::kCountFieldNumber;
#endif  // !_MSC_VER

ProtoAttackRes::ProtoAttackRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAttackInfo.ProtoAttackRes)
}

void ProtoAttackRes::InitAsDefaultInstance() {
}

ProtoAttackRes::ProtoAttackRes(const ProtoAttackRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAttackInfo.ProtoAttackRes)
}

void ProtoAttackRes::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoAttackRes::~ProtoAttackRes() {
  // @@protoc_insertion_point(destructor:ProtoAttackInfo.ProtoAttackRes)
  SharedDtor();
}

void ProtoAttackRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoAttackRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAttackRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoAttackRes_descriptor_;
}

const ProtoAttackRes& ProtoAttackRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAttackInfo_2eproto();
  return *default_instance_;
}

ProtoAttackRes* ProtoAttackRes::default_instance_ = NULL;

ProtoAttackRes* ProtoAttackRes::New() const {
  return new ProtoAttackRes;
}

void ProtoAttackRes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoAttackRes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoAttackRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAttackInfo.ProtoAttackRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAttackInfo.ProtoAttackRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAttackInfo.ProtoAttackRes)
  return false;
#undef DO_
}

void ProtoAttackRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAttackInfo.ProtoAttackRes)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAttackInfo.ProtoAttackRes)
}

::google::protobuf::uint8* ProtoAttackRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAttackInfo.ProtoAttackRes)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAttackInfo.ProtoAttackRes)
  return target;
}

int ProtoAttackRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAttackRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoAttackRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoAttackRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoAttackRes::MergeFrom(const ProtoAttackRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoAttackRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAttackRes::CopyFrom(const ProtoAttackRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAttackRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ProtoAttackRes::Swap(ProtoAttackRes* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoAttackRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoAttackRes_descriptor_;
  metadata.reflection = ProtoAttackRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoAttackInfo::kHeroFieldNumber;
const int ProtoAttackInfo::kBuildingFieldNumber;
const int ProtoAttackInfo::kResFieldNumber;
const int ProtoAttackInfo::kAttacktsFieldNumber;
#endif  // !_MSC_VER

ProtoAttackInfo::ProtoAttackInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAttackInfo.ProtoAttackInfo)
}

void ProtoAttackInfo::InitAsDefaultInstance() {
}

ProtoAttackInfo::ProtoAttackInfo(const ProtoAttackInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAttackInfo.ProtoAttackInfo)
}

void ProtoAttackInfo::SharedCtor() {
  _cached_size_ = 0;
  attackts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoAttackInfo::~ProtoAttackInfo() {
  // @@protoc_insertion_point(destructor:ProtoAttackInfo.ProtoAttackInfo)
  SharedDtor();
}

void ProtoAttackInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoAttackInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAttackInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoAttackInfo_descriptor_;
}

const ProtoAttackInfo& ProtoAttackInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAttackInfo_2eproto();
  return *default_instance_;
}

ProtoAttackInfo* ProtoAttackInfo::default_instance_ = NULL;

ProtoAttackInfo* ProtoAttackInfo::New() const {
  return new ProtoAttackInfo;
}

void ProtoAttackInfo::Clear() {
  attackts_ = 0u;
  hero_.Clear();
  building_.Clear();
  res_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoAttackInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAttackInfo.ProtoAttackInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAttackInfo.ProtoAttackHero hero = 1;
      case 1: {
        if (tag == 10) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_hero;
        if (input->ExpectTag(18)) goto parse_building;
        break;
      }

      // repeated .ProtoAttackInfo.ProtoAttackBuilding building = 2;
      case 2: {
        if (tag == 18) {
         parse_building:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_building()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_building;
        if (input->ExpectTag(26)) goto parse_res;
        break;
      }

      // repeated .ProtoAttackInfo.ProtoAttackRes res = 3;
      case 3: {
        if (tag == 26) {
         parse_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_res()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_res;
        if (input->ExpectTag(32)) goto parse_attackts;
        break;
      }

      // required uint32 attackts = 4;
      case 4: {
        if (tag == 32) {
         parse_attackts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attackts_)));
          set_has_attackts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAttackInfo.ProtoAttackInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAttackInfo.ProtoAttackInfo)
  return false;
#undef DO_
}

void ProtoAttackInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAttackInfo.ProtoAttackInfo)
  // repeated .ProtoAttackInfo.ProtoAttackHero hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(i), output);
  }

  // repeated .ProtoAttackInfo.ProtoAttackBuilding building = 2;
  for (int i = 0; i < this->building_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->building(i), output);
  }

  // repeated .ProtoAttackInfo.ProtoAttackRes res = 3;
  for (int i = 0; i < this->res_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->res(i), output);
  }

  // required uint32 attackts = 4;
  if (has_attackts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->attackts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAttackInfo.ProtoAttackInfo)
}

::google::protobuf::uint8* ProtoAttackInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAttackInfo.ProtoAttackInfo)
  // repeated .ProtoAttackInfo.ProtoAttackHero hero = 1;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(i), target);
  }

  // repeated .ProtoAttackInfo.ProtoAttackBuilding building = 2;
  for (int i = 0; i < this->building_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->building(i), target);
  }

  // repeated .ProtoAttackInfo.ProtoAttackRes res = 3;
  for (int i = 0; i < this->res_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->res(i), target);
  }

  // required uint32 attackts = 4;
  if (has_attackts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->attackts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAttackInfo.ProtoAttackInfo)
  return target;
}

int ProtoAttackInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // required uint32 attackts = 4;
    if (has_attackts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attackts());
    }

  }
  // repeated .ProtoAttackInfo.ProtoAttackHero hero = 1;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }

  // repeated .ProtoAttackInfo.ProtoAttackBuilding building = 2;
  total_size += 1 * this->building_size();
  for (int i = 0; i < this->building_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->building(i));
  }

  // repeated .ProtoAttackInfo.ProtoAttackRes res = 3;
  total_size += 1 * this->res_size();
  for (int i = 0; i < this->res_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->res(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAttackInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoAttackInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoAttackInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoAttackInfo::MergeFrom(const ProtoAttackInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_.MergeFrom(from.hero_);
  building_.MergeFrom(from.building_);
  res_.MergeFrom(from.res_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_attackts()) {
      set_attackts(from.attackts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoAttackInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAttackInfo::CopyFrom(const ProtoAttackInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAttackInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->hero())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->building())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->res())) return false;
  return true;
}

void ProtoAttackInfo::Swap(ProtoAttackInfo* other) {
  if (other != this) {
    hero_.Swap(&other->hero_);
    building_.Swap(&other->building_);
    res_.Swap(&other->res_);
    std::swap(attackts_, other->attackts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoAttackInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoAttackInfo_descriptor_;
  metadata.reflection = ProtoAttackInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAttackInfo

// @@protoc_insertion_point(global_scope)
