// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QingRenJie.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "QingRenJie.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QingRenJie {

namespace {

const ::google::protobuf::Descriptor* QingRenJieUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QingRenJieUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* QingRenJieNvShen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QingRenJieNvShen_reflection_ = NULL;
const ::google::protobuf::Descriptor* QingRenJie_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QingRenJie_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_QingRenJie_2eproto() {
  protobuf_AddDesc_QingRenJie_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "QingRenJie.proto");
  GOOGLE_CHECK(file != NULL);
  QingRenJieUser_descriptor_ = file->message_type(0);
  static const int QingRenJieUser_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieUser, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieUser, num_),
  };
  QingRenJieUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QingRenJieUser_descriptor_,
      QingRenJieUser::default_instance_,
      QingRenJieUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QingRenJieUser));
  QingRenJieNvShen_descriptor_ = file->message_type(1);
  static const int QingRenJieNvShen_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieNvShen, nsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieNvShen, user_),
  };
  QingRenJieNvShen_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QingRenJieNvShen_descriptor_,
      QingRenJieNvShen::default_instance_,
      QingRenJieNvShen_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieNvShen, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJieNvShen, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QingRenJieNvShen));
  QingRenJie_descriptor_ = file->message_type(2);
  static const int QingRenJie_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJie, ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJie, rewarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJie, nvshen_),
  };
  QingRenJie_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QingRenJie_descriptor_,
      QingRenJie::default_instance_,
      QingRenJie_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJie, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QingRenJie, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QingRenJie));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_QingRenJie_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QingRenJieUser_descriptor_, &QingRenJieUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QingRenJieNvShen_descriptor_, &QingRenJieNvShen::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QingRenJie_descriptor_, &QingRenJie::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_QingRenJie_2eproto() {
  delete QingRenJieUser::default_instance_;
  delete QingRenJieUser_reflection_;
  delete QingRenJieNvShen::default_instance_;
  delete QingRenJieNvShen_reflection_;
  delete QingRenJie::default_instance_;
  delete QingRenJie_reflection_;
}

void protobuf_AddDesc_QingRenJie_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020QingRenJie.proto\022\nQingRenJie\"*\n\016QingRe"
    "nJieUser\022\013\n\003uid\030\001 \002(\r\022\013\n\003num\030\002 \002(\r\"J\n\020Qi"
    "ngRenJieNvShen\022\014\n\004nsid\030\001 \002(\r\022(\n\004user\030\002 \003"
    "(\0132\032.QingRenJie.QingRenJieUser\"Y\n\nQingRe"
    "nJie\022\013\n\003ver\030\001 \002(\r\022\020\n\010rewarded\030\002 \002(\r\022,\n\006n"
    "vshen\030\003 \003(\0132\034.QingRenJie.QingRenJieNvShe"
    "n", 241);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "QingRenJie.proto", &protobuf_RegisterTypes);
  QingRenJieUser::default_instance_ = new QingRenJieUser();
  QingRenJieNvShen::default_instance_ = new QingRenJieNvShen();
  QingRenJie::default_instance_ = new QingRenJie();
  QingRenJieUser::default_instance_->InitAsDefaultInstance();
  QingRenJieNvShen::default_instance_->InitAsDefaultInstance();
  QingRenJie::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_QingRenJie_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_QingRenJie_2eproto {
  StaticDescriptorInitializer_QingRenJie_2eproto() {
    protobuf_AddDesc_QingRenJie_2eproto();
  }
} static_descriptor_initializer_QingRenJie_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int QingRenJieUser::kUidFieldNumber;
const int QingRenJieUser::kNumFieldNumber;
#endif  // !_MSC_VER

QingRenJieUser::QingRenJieUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QingRenJie.QingRenJieUser)
}

void QingRenJieUser::InitAsDefaultInstance() {
}

QingRenJieUser::QingRenJieUser(const QingRenJieUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QingRenJie.QingRenJieUser)
}

void QingRenJieUser::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QingRenJieUser::~QingRenJieUser() {
  // @@protoc_insertion_point(destructor:QingRenJie.QingRenJieUser)
  SharedDtor();
}

void QingRenJieUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QingRenJieUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QingRenJieUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QingRenJieUser_descriptor_;
}

const QingRenJieUser& QingRenJieUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_QingRenJie_2eproto();
  return *default_instance_;
}

QingRenJieUser* QingRenJieUser::default_instance_ = NULL;

QingRenJieUser* QingRenJieUser::New() const {
  return new QingRenJieUser;
}

void QingRenJieUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<QingRenJieUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QingRenJieUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QingRenJie.QingRenJieUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // required uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QingRenJie.QingRenJieUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QingRenJie.QingRenJieUser)
  return false;
#undef DO_
}

void QingRenJieUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QingRenJie.QingRenJieUser)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QingRenJie.QingRenJieUser)
}

::google::protobuf::uint8* QingRenJieUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QingRenJie.QingRenJieUser)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QingRenJie.QingRenJieUser)
  return target;
}

int QingRenJieUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QingRenJieUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QingRenJieUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QingRenJieUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QingRenJieUser::MergeFrom(const QingRenJieUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QingRenJieUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QingRenJieUser::CopyFrom(const QingRenJieUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QingRenJieUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QingRenJieUser::Swap(QingRenJieUser* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QingRenJieUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QingRenJieUser_descriptor_;
  metadata.reflection = QingRenJieUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QingRenJieNvShen::kNsidFieldNumber;
const int QingRenJieNvShen::kUserFieldNumber;
#endif  // !_MSC_VER

QingRenJieNvShen::QingRenJieNvShen()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QingRenJie.QingRenJieNvShen)
}

void QingRenJieNvShen::InitAsDefaultInstance() {
}

QingRenJieNvShen::QingRenJieNvShen(const QingRenJieNvShen& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QingRenJie.QingRenJieNvShen)
}

void QingRenJieNvShen::SharedCtor() {
  _cached_size_ = 0;
  nsid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QingRenJieNvShen::~QingRenJieNvShen() {
  // @@protoc_insertion_point(destructor:QingRenJie.QingRenJieNvShen)
  SharedDtor();
}

void QingRenJieNvShen::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QingRenJieNvShen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QingRenJieNvShen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QingRenJieNvShen_descriptor_;
}

const QingRenJieNvShen& QingRenJieNvShen::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_QingRenJie_2eproto();
  return *default_instance_;
}

QingRenJieNvShen* QingRenJieNvShen::default_instance_ = NULL;

QingRenJieNvShen* QingRenJieNvShen::New() const {
  return new QingRenJieNvShen;
}

void QingRenJieNvShen::Clear() {
  nsid_ = 0u;
  user_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QingRenJieNvShen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QingRenJie.QingRenJieNvShen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nsid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nsid_)));
          set_has_nsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        break;
      }

      // repeated .QingRenJie.QingRenJieUser user = 2;
      case 2: {
        if (tag == 18) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QingRenJie.QingRenJieNvShen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QingRenJie.QingRenJieNvShen)
  return false;
#undef DO_
}

void QingRenJieNvShen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QingRenJie.QingRenJieNvShen)
  // required uint32 nsid = 1;
  if (has_nsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nsid(), output);
  }

  // repeated .QingRenJie.QingRenJieUser user = 2;
  for (int i = 0; i < this->user_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QingRenJie.QingRenJieNvShen)
}

::google::protobuf::uint8* QingRenJieNvShen::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QingRenJie.QingRenJieNvShen)
  // required uint32 nsid = 1;
  if (has_nsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nsid(), target);
  }

  // repeated .QingRenJie.QingRenJieUser user = 2;
  for (int i = 0; i < this->user_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->user(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QingRenJie.QingRenJieNvShen)
  return target;
}

int QingRenJieNvShen::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nsid = 1;
    if (has_nsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nsid());
    }

  }
  // repeated .QingRenJie.QingRenJieUser user = 2;
  total_size += 1 * this->user_size();
  for (int i = 0; i < this->user_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QingRenJieNvShen::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QingRenJieNvShen* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QingRenJieNvShen*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QingRenJieNvShen::MergeFrom(const QingRenJieNvShen& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_.MergeFrom(from.user_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nsid()) {
      set_nsid(from.nsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QingRenJieNvShen::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QingRenJieNvShen::CopyFrom(const QingRenJieNvShen& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QingRenJieNvShen::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->user())) return false;
  return true;
}

void QingRenJieNvShen::Swap(QingRenJieNvShen* other) {
  if (other != this) {
    std::swap(nsid_, other->nsid_);
    user_.Swap(&other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QingRenJieNvShen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QingRenJieNvShen_descriptor_;
  metadata.reflection = QingRenJieNvShen_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QingRenJie::kVerFieldNumber;
const int QingRenJie::kRewardedFieldNumber;
const int QingRenJie::kNvshenFieldNumber;
#endif  // !_MSC_VER

QingRenJie::QingRenJie()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QingRenJie.QingRenJie)
}

void QingRenJie::InitAsDefaultInstance() {
}

QingRenJie::QingRenJie(const QingRenJie& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QingRenJie.QingRenJie)
}

void QingRenJie::SharedCtor() {
  _cached_size_ = 0;
  ver_ = 0u;
  rewarded_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QingRenJie::~QingRenJie() {
  // @@protoc_insertion_point(destructor:QingRenJie.QingRenJie)
  SharedDtor();
}

void QingRenJie::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QingRenJie::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QingRenJie::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QingRenJie_descriptor_;
}

const QingRenJie& QingRenJie::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_QingRenJie_2eproto();
  return *default_instance_;
}

QingRenJie* QingRenJie::default_instance_ = NULL;

QingRenJie* QingRenJie::New() const {
  return new QingRenJie;
}

void QingRenJie::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<QingRenJie*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ver_, rewarded_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  nvshen_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QingRenJie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QingRenJie.QingRenJie)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ver = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ver_)));
          set_has_ver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rewarded;
        break;
      }

      // required uint32 rewarded = 2;
      case 2: {
        if (tag == 16) {
         parse_rewarded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewarded_)));
          set_has_rewarded();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_nvshen;
        break;
      }

      // repeated .QingRenJie.QingRenJieNvShen nvshen = 3;
      case 3: {
        if (tag == 26) {
         parse_nvshen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nvshen()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_nvshen;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QingRenJie.QingRenJie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QingRenJie.QingRenJie)
  return false;
#undef DO_
}

void QingRenJie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QingRenJie.QingRenJie)
  // required uint32 ver = 1;
  if (has_ver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ver(), output);
  }

  // required uint32 rewarded = 2;
  if (has_rewarded()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewarded(), output);
  }

  // repeated .QingRenJie.QingRenJieNvShen nvshen = 3;
  for (int i = 0; i < this->nvshen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->nvshen(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QingRenJie.QingRenJie)
}

::google::protobuf::uint8* QingRenJie::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QingRenJie.QingRenJie)
  // required uint32 ver = 1;
  if (has_ver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ver(), target);
  }

  // required uint32 rewarded = 2;
  if (has_rewarded()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewarded(), target);
  }

  // repeated .QingRenJie.QingRenJieNvShen nvshen = 3;
  for (int i = 0; i < this->nvshen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->nvshen(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QingRenJie.QingRenJie)
  return target;
}

int QingRenJie::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ver = 1;
    if (has_ver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ver());
    }

    // required uint32 rewarded = 2;
    if (has_rewarded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewarded());
    }

  }
  // repeated .QingRenJie.QingRenJieNvShen nvshen = 3;
  total_size += 1 * this->nvshen_size();
  for (int i = 0; i < this->nvshen_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nvshen(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QingRenJie::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QingRenJie* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QingRenJie*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QingRenJie::MergeFrom(const QingRenJie& from) {
  GOOGLE_CHECK_NE(&from, this);
  nvshen_.MergeFrom(from.nvshen_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ver()) {
      set_ver(from.ver());
    }
    if (from.has_rewarded()) {
      set_rewarded(from.rewarded());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QingRenJie::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QingRenJie::CopyFrom(const QingRenJie& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QingRenJie::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->nvshen())) return false;
  return true;
}

void QingRenJie::Swap(QingRenJie* other) {
  if (other != this) {
    std::swap(ver_, other->ver_);
    std::swap(rewarded_, other->rewarded_);
    nvshen_.Swap(&other->nvshen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QingRenJie::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QingRenJie_descriptor_;
  metadata.reflection = QingRenJie_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QingRenJie

// @@protoc_insertion_point(global_scope)
