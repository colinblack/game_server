// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TwoHolidayConfig.proto

#ifndef PROTOBUF_TwoHolidayConfig_2eproto__INCLUDED
#define PROTOBUF_TwoHolidayConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace TwoHolidayConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

class EveryDayRechargeItem;
class EveryDayOnlineItem;
class cheapItem;
class BuyItem;
class VipItem;
class TwoHolidayItmCfg;

// ===================================================================

class EveryDayRechargeItem : public ::google::protobuf::Message {
 public:
  EveryDayRechargeItem();
  virtual ~EveryDayRechargeItem();

  EveryDayRechargeItem(const EveryDayRechargeItem& from);

  inline EveryDayRechargeItem& operator=(const EveryDayRechargeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EveryDayRechargeItem& default_instance();

  void Swap(EveryDayRechargeItem* other);

  // implements Message ----------------------------------------------

  EveryDayRechargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EveryDayRechargeItem& from);
  void MergeFrom(const EveryDayRechargeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RewardConfig.RewardItemCfg reward_one = 1;
  inline int reward_one_size() const;
  inline void clear_reward_one();
  static const int kRewardOneFieldNumber = 1;
  inline const ::RewardConfig::RewardItemCfg& reward_one(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_one(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_one();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_one() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_one();

  // repeated .RewardConfig.RewardItemCfg reward_seven = 2;
  inline int reward_seven_size() const;
  inline void clear_reward_seven();
  static const int kRewardSevenFieldNumber = 2;
  inline const ::RewardConfig::RewardItemCfg& reward_seven(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_seven(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_seven();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_seven() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_seven();

  // repeated .RewardConfig.RewardItemCfg reward_twelve = 3;
  inline int reward_twelve_size() const;
  inline void clear_reward_twelve();
  static const int kRewardTwelveFieldNumber = 3;
  inline const ::RewardConfig::RewardItemCfg& reward_twelve(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_twelve(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_twelve();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_twelve() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_twelve();

  // required uint32 charge = 4;
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 4;
  inline ::google::protobuf::uint32 charge() const;
  inline void set_charge(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.EveryDayRechargeItem)
 private:
  inline void set_has_charge();
  inline void clear_has_charge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_one_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_seven_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_twelve_;
  ::google::protobuf::uint32 charge_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static EveryDayRechargeItem* default_instance_;
};
// -------------------------------------------------------------------

class EveryDayOnlineItem : public ::google::protobuf::Message {
 public:
  EveryDayOnlineItem();
  virtual ~EveryDayOnlineItem();

  EveryDayOnlineItem(const EveryDayOnlineItem& from);

  inline EveryDayOnlineItem& operator=(const EveryDayOnlineItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EveryDayOnlineItem& default_instance();

  void Swap(EveryDayOnlineItem* other);

  // implements Message ----------------------------------------------

  EveryDayOnlineItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EveryDayOnlineItem& from);
  void MergeFrom(const EveryDayOnlineItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RewardConfig.RewardItemCfg reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::RewardConfig::RewardItemCfg& reward(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward();

  // required uint32 ts_limit = 2;
  inline bool has_ts_limit() const;
  inline void clear_ts_limit();
  static const int kTsLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 ts_limit() const;
  inline void set_ts_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.EveryDayOnlineItem)
 private:
  inline void set_has_ts_limit();
  inline void clear_has_ts_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_;
  ::google::protobuf::uint32 ts_limit_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static EveryDayOnlineItem* default_instance_;
};
// -------------------------------------------------------------------

class cheapItem : public ::google::protobuf::Message {
 public:
  cheapItem();
  virtual ~cheapItem();

  cheapItem(const cheapItem& from);

  inline cheapItem& operator=(const cheapItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cheapItem& default_instance();

  void Swap(cheapItem* other);

  // implements Message ----------------------------------------------

  cheapItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cheapItem& from);
  void MergeFrom(const cheapItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 price_discount = 1;
  inline bool has_price_discount() const;
  inline void clear_price_discount();
  static const int kPriceDiscountFieldNumber = 1;
  inline ::google::protobuf::uint32 price_discount() const;
  inline void set_price_discount(::google::protobuf::uint32 value);

  // required .RewardConfig.RewardItemCfg reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::RewardConfig::RewardItemCfg& reward() const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward();
  inline ::RewardConfig::RewardItemCfg* release_reward();
  inline void set_allocated_reward(::RewardConfig::RewardItemCfg* reward);

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.cheapItem)
 private:
  inline void set_has_price_discount();
  inline void clear_has_price_discount();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RewardConfig::RewardItemCfg* reward_;
  ::google::protobuf::uint32 price_discount_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static cheapItem* default_instance_;
};
// -------------------------------------------------------------------

class BuyItem : public ::google::protobuf::Message {
 public:
  BuyItem();
  virtual ~BuyItem();

  BuyItem(const BuyItem& from);

  inline BuyItem& operator=(const BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyItem& default_instance();

  void Swap(BuyItem* other);

  // implements Message ----------------------------------------------

  BuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyItem& from);
  void MergeFrom(const BuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 recharge_limit = 1;
  inline bool has_recharge_limit() const;
  inline void clear_recharge_limit();
  static const int kRechargeLimitFieldNumber = 1;
  inline ::google::protobuf::uint32 recharge_limit() const;
  inline void set_recharge_limit(::google::protobuf::uint32 value);

  // repeated .TwoHolidayConfig.cheapItem cheap_buy = 2;
  inline int cheap_buy_size() const;
  inline void clear_cheap_buy();
  static const int kCheapBuyFieldNumber = 2;
  inline const ::TwoHolidayConfig::cheapItem& cheap_buy(int index) const;
  inline ::TwoHolidayConfig::cheapItem* mutable_cheap_buy(int index);
  inline ::TwoHolidayConfig::cheapItem* add_cheap_buy();
  inline const ::google::protobuf::RepeatedPtrField< ::TwoHolidayConfig::cheapItem >&
      cheap_buy() const;
  inline ::google::protobuf::RepeatedPtrField< ::TwoHolidayConfig::cheapItem >*
      mutable_cheap_buy();

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.BuyItem)
 private:
  inline void set_has_recharge_limit();
  inline void clear_has_recharge_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TwoHolidayConfig::cheapItem > cheap_buy_;
  ::google::protobuf::uint32 recharge_limit_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static BuyItem* default_instance_;
};
// -------------------------------------------------------------------

class VipItem : public ::google::protobuf::Message {
 public:
  VipItem();
  virtual ~VipItem();

  VipItem(const VipItem& from);

  inline VipItem& operator=(const VipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipItem& default_instance();

  void Swap(VipItem* other);

  // implements Message ----------------------------------------------

  VipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipItem& from);
  void MergeFrom(const VipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RewardConfig.RewardItemCfg reward_one = 1;
  inline int reward_one_size() const;
  inline void clear_reward_one();
  static const int kRewardOneFieldNumber = 1;
  inline const ::RewardConfig::RewardItemCfg& reward_one(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_one(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_one();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_one() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_one();

  // repeated .RewardConfig.RewardItemCfg reward_two = 2;
  inline int reward_two_size() const;
  inline void clear_reward_two();
  static const int kRewardTwoFieldNumber = 2;
  inline const ::RewardConfig::RewardItemCfg& reward_two(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_two(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_two();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_two() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_two();

  // repeated .RewardConfig.RewardItemCfg reward_three = 3;
  inline int reward_three_size() const;
  inline void clear_reward_three();
  static const int kRewardThreeFieldNumber = 3;
  inline const ::RewardConfig::RewardItemCfg& reward_three(int index) const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward_three(int index);
  inline ::RewardConfig::RewardItemCfg* add_reward_three();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
      reward_three() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
      mutable_reward_three();

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.VipItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_one_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_two_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg > reward_three_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static VipItem* default_instance_;
};
// -------------------------------------------------------------------

class TwoHolidayItmCfg : public ::google::protobuf::Message {
 public:
  TwoHolidayItmCfg();
  virtual ~TwoHolidayItmCfg();

  TwoHolidayItmCfg(const TwoHolidayItmCfg& from);

  inline TwoHolidayItmCfg& operator=(const TwoHolidayItmCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TwoHolidayItmCfg& default_instance();

  void Swap(TwoHolidayItmCfg* other);

  // implements Message ----------------------------------------------

  TwoHolidayItmCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TwoHolidayItmCfg& from);
  void MergeFrom(const TwoHolidayItmCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TwoHolidayConfig.EveryDayRechargeItem everyday_recharge = 1;
  inline bool has_everyday_recharge() const;
  inline void clear_everyday_recharge();
  static const int kEverydayRechargeFieldNumber = 1;
  inline const ::TwoHolidayConfig::EveryDayRechargeItem& everyday_recharge() const;
  inline ::TwoHolidayConfig::EveryDayRechargeItem* mutable_everyday_recharge();
  inline ::TwoHolidayConfig::EveryDayRechargeItem* release_everyday_recharge();
  inline void set_allocated_everyday_recharge(::TwoHolidayConfig::EveryDayRechargeItem* everyday_recharge);

  // required .TwoHolidayConfig.EveryDayOnlineItem eveyday_online = 2;
  inline bool has_eveyday_online() const;
  inline void clear_eveyday_online();
  static const int kEveydayOnlineFieldNumber = 2;
  inline const ::TwoHolidayConfig::EveryDayOnlineItem& eveyday_online() const;
  inline ::TwoHolidayConfig::EveryDayOnlineItem* mutable_eveyday_online();
  inline ::TwoHolidayConfig::EveryDayOnlineItem* release_eveyday_online();
  inline void set_allocated_eveyday_online(::TwoHolidayConfig::EveryDayOnlineItem* eveyday_online);

  // @@protoc_insertion_point(class_scope:TwoHolidayConfig.TwoHolidayItmCfg)
 private:
  inline void set_has_everyday_recharge();
  inline void clear_has_everyday_recharge();
  inline void set_has_eveyday_online();
  inline void clear_has_eveyday_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TwoHolidayConfig::EveryDayRechargeItem* everyday_recharge_;
  ::TwoHolidayConfig::EveryDayOnlineItem* eveyday_online_;
  friend void  protobuf_AddDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_AssignDesc_TwoHolidayConfig_2eproto();
  friend void protobuf_ShutdownFile_TwoHolidayConfig_2eproto();

  void InitAsDefaultInstance();
  static TwoHolidayItmCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// EveryDayRechargeItem

// repeated .RewardConfig.RewardItemCfg reward_one = 1;
inline int EveryDayRechargeItem::reward_one_size() const {
  return reward_one_.size();
}
inline void EveryDayRechargeItem::clear_reward_one() {
  reward_one_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& EveryDayRechargeItem::reward_one(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayRechargeItem.reward_one)
  return reward_one_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::mutable_reward_one(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.EveryDayRechargeItem.reward_one)
  return reward_one_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::add_reward_one() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.EveryDayRechargeItem.reward_one)
  return reward_one_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
EveryDayRechargeItem::reward_one() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.EveryDayRechargeItem.reward_one)
  return reward_one_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
EveryDayRechargeItem::mutable_reward_one() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.EveryDayRechargeItem.reward_one)
  return &reward_one_;
}

// repeated .RewardConfig.RewardItemCfg reward_seven = 2;
inline int EveryDayRechargeItem::reward_seven_size() const {
  return reward_seven_.size();
}
inline void EveryDayRechargeItem::clear_reward_seven() {
  reward_seven_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& EveryDayRechargeItem::reward_seven(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayRechargeItem.reward_seven)
  return reward_seven_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::mutable_reward_seven(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.EveryDayRechargeItem.reward_seven)
  return reward_seven_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::add_reward_seven() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.EveryDayRechargeItem.reward_seven)
  return reward_seven_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
EveryDayRechargeItem::reward_seven() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.EveryDayRechargeItem.reward_seven)
  return reward_seven_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
EveryDayRechargeItem::mutable_reward_seven() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.EveryDayRechargeItem.reward_seven)
  return &reward_seven_;
}

// repeated .RewardConfig.RewardItemCfg reward_twelve = 3;
inline int EveryDayRechargeItem::reward_twelve_size() const {
  return reward_twelve_.size();
}
inline void EveryDayRechargeItem::clear_reward_twelve() {
  reward_twelve_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& EveryDayRechargeItem::reward_twelve(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayRechargeItem.reward_twelve)
  return reward_twelve_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::mutable_reward_twelve(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.EveryDayRechargeItem.reward_twelve)
  return reward_twelve_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayRechargeItem::add_reward_twelve() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.EveryDayRechargeItem.reward_twelve)
  return reward_twelve_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
EveryDayRechargeItem::reward_twelve() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.EveryDayRechargeItem.reward_twelve)
  return reward_twelve_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
EveryDayRechargeItem::mutable_reward_twelve() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.EveryDayRechargeItem.reward_twelve)
  return &reward_twelve_;
}

// required uint32 charge = 4;
inline bool EveryDayRechargeItem::has_charge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EveryDayRechargeItem::set_has_charge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EveryDayRechargeItem::clear_has_charge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EveryDayRechargeItem::clear_charge() {
  charge_ = 0u;
  clear_has_charge();
}
inline ::google::protobuf::uint32 EveryDayRechargeItem::charge() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayRechargeItem.charge)
  return charge_;
}
inline void EveryDayRechargeItem::set_charge(::google::protobuf::uint32 value) {
  set_has_charge();
  charge_ = value;
  // @@protoc_insertion_point(field_set:TwoHolidayConfig.EveryDayRechargeItem.charge)
}

// -------------------------------------------------------------------

// EveryDayOnlineItem

// repeated .RewardConfig.RewardItemCfg reward = 1;
inline int EveryDayOnlineItem::reward_size() const {
  return reward_.size();
}
inline void EveryDayOnlineItem::clear_reward() {
  reward_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& EveryDayOnlineItem::reward(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayOnlineItem.reward)
  return reward_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayOnlineItem::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.EveryDayOnlineItem.reward)
  return reward_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* EveryDayOnlineItem::add_reward() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.EveryDayOnlineItem.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
EveryDayOnlineItem::reward() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.EveryDayOnlineItem.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
EveryDayOnlineItem::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.EveryDayOnlineItem.reward)
  return &reward_;
}

// required uint32 ts_limit = 2;
inline bool EveryDayOnlineItem::has_ts_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EveryDayOnlineItem::set_has_ts_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EveryDayOnlineItem::clear_has_ts_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EveryDayOnlineItem::clear_ts_limit() {
  ts_limit_ = 0u;
  clear_has_ts_limit();
}
inline ::google::protobuf::uint32 EveryDayOnlineItem::ts_limit() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.EveryDayOnlineItem.ts_limit)
  return ts_limit_;
}
inline void EveryDayOnlineItem::set_ts_limit(::google::protobuf::uint32 value) {
  set_has_ts_limit();
  ts_limit_ = value;
  // @@protoc_insertion_point(field_set:TwoHolidayConfig.EveryDayOnlineItem.ts_limit)
}

// -------------------------------------------------------------------

// cheapItem

// required uint32 price_discount = 1;
inline bool cheapItem::has_price_discount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cheapItem::set_has_price_discount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cheapItem::clear_has_price_discount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cheapItem::clear_price_discount() {
  price_discount_ = 0u;
  clear_has_price_discount();
}
inline ::google::protobuf::uint32 cheapItem::price_discount() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.cheapItem.price_discount)
  return price_discount_;
}
inline void cheapItem::set_price_discount(::google::protobuf::uint32 value) {
  set_has_price_discount();
  price_discount_ = value;
  // @@protoc_insertion_point(field_set:TwoHolidayConfig.cheapItem.price_discount)
}

// required .RewardConfig.RewardItemCfg reward = 2;
inline bool cheapItem::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cheapItem::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cheapItem::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cheapItem::clear_reward() {
  if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
  clear_has_reward();
}
inline const ::RewardConfig::RewardItemCfg& cheapItem::reward() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.cheapItem.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::RewardConfig::RewardItemCfg* cheapItem::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::RewardConfig::RewardItemCfg;
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.cheapItem.reward)
  return reward_;
}
inline ::RewardConfig::RewardItemCfg* cheapItem::release_reward() {
  clear_has_reward();
  ::RewardConfig::RewardItemCfg* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void cheapItem::set_allocated_reward(::RewardConfig::RewardItemCfg* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:TwoHolidayConfig.cheapItem.reward)
}

// -------------------------------------------------------------------

// BuyItem

// required uint32 recharge_limit = 1;
inline bool BuyItem::has_recharge_limit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyItem::set_has_recharge_limit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyItem::clear_has_recharge_limit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyItem::clear_recharge_limit() {
  recharge_limit_ = 0u;
  clear_has_recharge_limit();
}
inline ::google::protobuf::uint32 BuyItem::recharge_limit() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.BuyItem.recharge_limit)
  return recharge_limit_;
}
inline void BuyItem::set_recharge_limit(::google::protobuf::uint32 value) {
  set_has_recharge_limit();
  recharge_limit_ = value;
  // @@protoc_insertion_point(field_set:TwoHolidayConfig.BuyItem.recharge_limit)
}

// repeated .TwoHolidayConfig.cheapItem cheap_buy = 2;
inline int BuyItem::cheap_buy_size() const {
  return cheap_buy_.size();
}
inline void BuyItem::clear_cheap_buy() {
  cheap_buy_.Clear();
}
inline const ::TwoHolidayConfig::cheapItem& BuyItem::cheap_buy(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.BuyItem.cheap_buy)
  return cheap_buy_.Get(index);
}
inline ::TwoHolidayConfig::cheapItem* BuyItem::mutable_cheap_buy(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.BuyItem.cheap_buy)
  return cheap_buy_.Mutable(index);
}
inline ::TwoHolidayConfig::cheapItem* BuyItem::add_cheap_buy() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.BuyItem.cheap_buy)
  return cheap_buy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TwoHolidayConfig::cheapItem >&
BuyItem::cheap_buy() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.BuyItem.cheap_buy)
  return cheap_buy_;
}
inline ::google::protobuf::RepeatedPtrField< ::TwoHolidayConfig::cheapItem >*
BuyItem::mutable_cheap_buy() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.BuyItem.cheap_buy)
  return &cheap_buy_;
}

// -------------------------------------------------------------------

// VipItem

// repeated .RewardConfig.RewardItemCfg reward_one = 1;
inline int VipItem::reward_one_size() const {
  return reward_one_.size();
}
inline void VipItem::clear_reward_one() {
  reward_one_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& VipItem::reward_one(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.VipItem.reward_one)
  return reward_one_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::mutable_reward_one(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.VipItem.reward_one)
  return reward_one_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::add_reward_one() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.VipItem.reward_one)
  return reward_one_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
VipItem::reward_one() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.VipItem.reward_one)
  return reward_one_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
VipItem::mutable_reward_one() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.VipItem.reward_one)
  return &reward_one_;
}

// repeated .RewardConfig.RewardItemCfg reward_two = 2;
inline int VipItem::reward_two_size() const {
  return reward_two_.size();
}
inline void VipItem::clear_reward_two() {
  reward_two_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& VipItem::reward_two(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.VipItem.reward_two)
  return reward_two_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::mutable_reward_two(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.VipItem.reward_two)
  return reward_two_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::add_reward_two() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.VipItem.reward_two)
  return reward_two_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
VipItem::reward_two() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.VipItem.reward_two)
  return reward_two_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
VipItem::mutable_reward_two() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.VipItem.reward_two)
  return &reward_two_;
}

// repeated .RewardConfig.RewardItemCfg reward_three = 3;
inline int VipItem::reward_three_size() const {
  return reward_three_.size();
}
inline void VipItem::clear_reward_three() {
  reward_three_.Clear();
}
inline const ::RewardConfig::RewardItemCfg& VipItem::reward_three(int index) const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.VipItem.reward_three)
  return reward_three_.Get(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::mutable_reward_three(int index) {
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.VipItem.reward_three)
  return reward_three_.Mutable(index);
}
inline ::RewardConfig::RewardItemCfg* VipItem::add_reward_three() {
  // @@protoc_insertion_point(field_add:TwoHolidayConfig.VipItem.reward_three)
  return reward_three_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >&
VipItem::reward_three() const {
  // @@protoc_insertion_point(field_list:TwoHolidayConfig.VipItem.reward_three)
  return reward_three_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::RewardItemCfg >*
VipItem::mutable_reward_three() {
  // @@protoc_insertion_point(field_mutable_list:TwoHolidayConfig.VipItem.reward_three)
  return &reward_three_;
}

// -------------------------------------------------------------------

// TwoHolidayItmCfg

// required .TwoHolidayConfig.EveryDayRechargeItem everyday_recharge = 1;
inline bool TwoHolidayItmCfg::has_everyday_recharge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TwoHolidayItmCfg::set_has_everyday_recharge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TwoHolidayItmCfg::clear_has_everyday_recharge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TwoHolidayItmCfg::clear_everyday_recharge() {
  if (everyday_recharge_ != NULL) everyday_recharge_->::TwoHolidayConfig::EveryDayRechargeItem::Clear();
  clear_has_everyday_recharge();
}
inline const ::TwoHolidayConfig::EveryDayRechargeItem& TwoHolidayItmCfg::everyday_recharge() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.TwoHolidayItmCfg.everyday_recharge)
  return everyday_recharge_ != NULL ? *everyday_recharge_ : *default_instance_->everyday_recharge_;
}
inline ::TwoHolidayConfig::EveryDayRechargeItem* TwoHolidayItmCfg::mutable_everyday_recharge() {
  set_has_everyday_recharge();
  if (everyday_recharge_ == NULL) everyday_recharge_ = new ::TwoHolidayConfig::EveryDayRechargeItem;
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.TwoHolidayItmCfg.everyday_recharge)
  return everyday_recharge_;
}
inline ::TwoHolidayConfig::EveryDayRechargeItem* TwoHolidayItmCfg::release_everyday_recharge() {
  clear_has_everyday_recharge();
  ::TwoHolidayConfig::EveryDayRechargeItem* temp = everyday_recharge_;
  everyday_recharge_ = NULL;
  return temp;
}
inline void TwoHolidayItmCfg::set_allocated_everyday_recharge(::TwoHolidayConfig::EveryDayRechargeItem* everyday_recharge) {
  delete everyday_recharge_;
  everyday_recharge_ = everyday_recharge;
  if (everyday_recharge) {
    set_has_everyday_recharge();
  } else {
    clear_has_everyday_recharge();
  }
  // @@protoc_insertion_point(field_set_allocated:TwoHolidayConfig.TwoHolidayItmCfg.everyday_recharge)
}

// required .TwoHolidayConfig.EveryDayOnlineItem eveyday_online = 2;
inline bool TwoHolidayItmCfg::has_eveyday_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TwoHolidayItmCfg::set_has_eveyday_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TwoHolidayItmCfg::clear_has_eveyday_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TwoHolidayItmCfg::clear_eveyday_online() {
  if (eveyday_online_ != NULL) eveyday_online_->::TwoHolidayConfig::EveryDayOnlineItem::Clear();
  clear_has_eveyday_online();
}
inline const ::TwoHolidayConfig::EveryDayOnlineItem& TwoHolidayItmCfg::eveyday_online() const {
  // @@protoc_insertion_point(field_get:TwoHolidayConfig.TwoHolidayItmCfg.eveyday_online)
  return eveyday_online_ != NULL ? *eveyday_online_ : *default_instance_->eveyday_online_;
}
inline ::TwoHolidayConfig::EveryDayOnlineItem* TwoHolidayItmCfg::mutable_eveyday_online() {
  set_has_eveyday_online();
  if (eveyday_online_ == NULL) eveyday_online_ = new ::TwoHolidayConfig::EveryDayOnlineItem;
  // @@protoc_insertion_point(field_mutable:TwoHolidayConfig.TwoHolidayItmCfg.eveyday_online)
  return eveyday_online_;
}
inline ::TwoHolidayConfig::EveryDayOnlineItem* TwoHolidayItmCfg::release_eveyday_online() {
  clear_has_eveyday_online();
  ::TwoHolidayConfig::EveryDayOnlineItem* temp = eveyday_online_;
  eveyday_online_ = NULL;
  return temp;
}
inline void TwoHolidayItmCfg::set_allocated_eveyday_online(::TwoHolidayConfig::EveryDayOnlineItem* eveyday_online) {
  delete eveyday_online_;
  eveyday_online_ = eveyday_online;
  if (eveyday_online) {
    set_has_eveyday_online();
  } else {
    clear_has_eveyday_online();
  }
  // @@protoc_insertion_point(field_set_allocated:TwoHolidayConfig.TwoHolidayItmCfg.eveyday_online)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TwoHolidayConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TwoHolidayConfig_2eproto__INCLUDED
