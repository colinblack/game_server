// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AllServerMap.proto

#ifndef PROTOBUF_AllServerMap_2eproto__INCLUDED
#define PROTOBUF_AllServerMap_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace AllServerMap {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AllServerMap_2eproto();
void protobuf_AssignDesc_AllServerMap_2eproto();
void protobuf_ShutdownFile_AllServerMap_2eproto();

class AllServerMapUser;
class AllServerMap;

// ===================================================================

class AllServerMapUser : public ::google::protobuf::Message {
 public:
  AllServerMapUser();
  virtual ~AllServerMapUser();

  AllServerMapUser(const AllServerMapUser& from);

  inline AllServerMapUser& operator=(const AllServerMapUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllServerMapUser& default_instance();

  void Swap(AllServerMapUser* other);

  // implements Message ----------------------------------------------

  AllServerMapUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllServerMapUser& from);
  void MergeFrom(const AllServerMapUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AllServerMap.AllServerMapUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_AllServerMap_2eproto();
  friend void protobuf_AssignDesc_AllServerMap_2eproto();
  friend void protobuf_ShutdownFile_AllServerMap_2eproto();

  void InitAsDefaultInstance();
  static AllServerMapUser* default_instance_;
};
// -------------------------------------------------------------------

class AllServerMap : public ::google::protobuf::Message {
 public:
  AllServerMap();
  virtual ~AllServerMap();

  AllServerMap(const AllServerMap& from);

  inline AllServerMap& operator=(const AllServerMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllServerMap& default_instance();

  void Swap(AllServerMap* other);

  // implements Message ----------------------------------------------

  AllServerMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllServerMap& from);
  void MergeFrom(const AllServerMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AllServerMap.AllServerMapUser user = 1;
  inline int user_size() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::AllServerMap::AllServerMapUser& user(int index) const;
  inline ::AllServerMap::AllServerMapUser* mutable_user(int index);
  inline ::AllServerMap::AllServerMapUser* add_user();
  inline const ::google::protobuf::RepeatedPtrField< ::AllServerMap::AllServerMapUser >&
      user() const;
  inline ::google::protobuf::RepeatedPtrField< ::AllServerMap::AllServerMapUser >*
      mutable_user();

  // @@protoc_insertion_point(class_scope:AllServerMap.AllServerMap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AllServerMap::AllServerMapUser > user_;
  friend void  protobuf_AddDesc_AllServerMap_2eproto();
  friend void protobuf_AssignDesc_AllServerMap_2eproto();
  friend void protobuf_ShutdownFile_AllServerMap_2eproto();

  void InitAsDefaultInstance();
  static AllServerMap* default_instance_;
};
// ===================================================================


// ===================================================================

// AllServerMapUser

// required uint32 uid = 1;
inline bool AllServerMapUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllServerMapUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllServerMapUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllServerMapUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AllServerMapUser::uid() const {
  // @@protoc_insertion_point(field_get:AllServerMap.AllServerMapUser.uid)
  return uid_;
}
inline void AllServerMapUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:AllServerMap.AllServerMapUser.uid)
}

// required uint32 level = 2;
inline bool AllServerMapUser::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllServerMapUser::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllServerMapUser::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllServerMapUser::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllServerMapUser::level() const {
  // @@protoc_insertion_point(field_get:AllServerMap.AllServerMapUser.level)
  return level_;
}
inline void AllServerMapUser::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:AllServerMap.AllServerMapUser.level)
}

// -------------------------------------------------------------------

// AllServerMap

// repeated .AllServerMap.AllServerMapUser user = 1;
inline int AllServerMap::user_size() const {
  return user_.size();
}
inline void AllServerMap::clear_user() {
  user_.Clear();
}
inline const ::AllServerMap::AllServerMapUser& AllServerMap::user(int index) const {
  // @@protoc_insertion_point(field_get:AllServerMap.AllServerMap.user)
  return user_.Get(index);
}
inline ::AllServerMap::AllServerMapUser* AllServerMap::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:AllServerMap.AllServerMap.user)
  return user_.Mutable(index);
}
inline ::AllServerMap::AllServerMapUser* AllServerMap::add_user() {
  // @@protoc_insertion_point(field_add:AllServerMap.AllServerMap.user)
  return user_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AllServerMap::AllServerMapUser >&
AllServerMap::user() const {
  // @@protoc_insertion_point(field_list:AllServerMap.AllServerMap.user)
  return user_;
}
inline ::google::protobuf::RepeatedPtrField< ::AllServerMap::AllServerMapUser >*
AllServerMap::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:AllServerMap.AllServerMap.user)
  return &user_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AllServerMap

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AllServerMap_2eproto__INCLUDED
