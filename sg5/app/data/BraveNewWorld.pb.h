// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BraveNewWorld.proto

#ifndef PROTOBUF_BraveNewWorld_2eproto__INCLUDED
#define PROTOBUF_BraveNewWorld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace BraveNewWorld {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BraveNewWorld_2eproto();
void protobuf_AssignDesc_BraveNewWorld_2eproto();
void protobuf_ShutdownFile_BraveNewWorld_2eproto();

class BraveNewWorldHistory;
class BraveNewWorldFavourate;
class BraveNewWorldUserMission;
class BraveNewWorldAllianceMission;
class BraveNewWorldAlliance;
class BraveNewWorldUser;
class BraveNewWorldPoint;
class BraveNewWorldZone;
class BraveNewWorld;

// ===================================================================

class BraveNewWorldHistory : public ::google::protobuf::Message {
 public:
  BraveNewWorldHistory();
  virtual ~BraveNewWorldHistory();

  BraveNewWorldHistory(const BraveNewWorldHistory& from);

  inline BraveNewWorldHistory& operator=(const BraveNewWorldHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldHistory& default_instance();

  void Swap(BraveNewWorldHistory* other);

  // implements Message ----------------------------------------------

  BraveNewWorldHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldHistory& from);
  void MergeFrom(const BraveNewWorldHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // required uint32 lm = 5;
  inline bool has_lm() const;
  inline void clear_lm();
  static const int kLmFieldNumber = 5;
  inline ::google::protobuf::uint32 lm() const;
  inline void set_lm(::google::protobuf::uint32 value);

  // required uint32 nm = 6;
  inline bool has_nm() const;
  inline void clear_nm();
  static const int kNmFieldNumber = 6;
  inline ::google::protobuf::uint32 nm() const;
  inline void set_nm(::google::protobuf::uint32 value);

  // required uint32 lh = 7;
  inline bool has_lh() const;
  inline void clear_lh();
  static const int kLhFieldNumber = 7;
  inline ::google::protobuf::uint32 lh() const;
  inline void set_lh(::google::protobuf::uint32 value);

  // required uint32 nh = 8;
  inline bool has_nh() const;
  inline void clear_nh();
  static const int kNhFieldNumber = 8;
  inline ::google::protobuf::uint32 nh() const;
  inline void set_nh(::google::protobuf::uint32 value);

  // required uint32 ts = 9;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 9;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldHistory)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_lm();
  inline void clear_has_lm();
  inline void set_has_nm();
  inline void clear_has_nm();
  inline void set_has_lh();
  inline void clear_has_lh();
  inline void set_has_nh();
  inline void clear_has_nh();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 lm_;
  ::google::protobuf::uint32 nm_;
  ::google::protobuf::uint32 lh_;
  ::google::protobuf::uint32 nh_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldHistory* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldFavourate : public ::google::protobuf::Message {
 public:
  BraveNewWorldFavourate();
  virtual ~BraveNewWorldFavourate();

  BraveNewWorldFavourate(const BraveNewWorldFavourate& from);

  inline BraveNewWorldFavourate& operator=(const BraveNewWorldFavourate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldFavourate& default_instance();

  void Swap(BraveNewWorldFavourate* other);

  // implements Message ----------------------------------------------

  BraveNewWorldFavourate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldFavourate& from);
  void MergeFrom(const BraveNewWorldFavourate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldFavourate)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldFavourate* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldUserMission : public ::google::protobuf::Message {
 public:
  BraveNewWorldUserMission();
  virtual ~BraveNewWorldUserMission();

  BraveNewWorldUserMission(const BraveNewWorldUserMission& from);

  inline BraveNewWorldUserMission& operator=(const BraveNewWorldUserMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldUserMission& default_instance();

  void Swap(BraveNewWorldUserMission* other);

  // implements Message ----------------------------------------------

  BraveNewWorldUserMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldUserMission& from);
  void MergeFrom(const BraveNewWorldUserMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline ::google::protobuf::int32 m1() const;
  inline void set_m1(::google::protobuf::int32 value);

  // required int32 m2 = 2;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 2;
  inline ::google::protobuf::int32 m2() const;
  inline void set_m2(::google::protobuf::int32 value);

  // required uint32 mx = 3;
  inline bool has_mx() const;
  inline void clear_mx();
  static const int kMxFieldNumber = 3;
  inline ::google::protobuf::uint32 mx() const;
  inline void set_mx(::google::protobuf::uint32 value);

  // required uint32 my = 4;
  inline bool has_my() const;
  inline void clear_my();
  static const int kMyFieldNumber = 4;
  inline ::google::protobuf::uint32 my() const;
  inline void set_my(::google::protobuf::uint32 value);

  // required int32 m3 = 5;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 5;
  inline ::google::protobuf::int32 m3() const;
  inline void set_m3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldUserMission)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_mx();
  inline void clear_has_mx();
  inline void set_has_my();
  inline void clear_has_my();
  inline void set_has_m3();
  inline void clear_has_m3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 m1_;
  ::google::protobuf::int32 m2_;
  ::google::protobuf::uint32 mx_;
  ::google::protobuf::uint32 my_;
  ::google::protobuf::int32 m3_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldUserMission* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldAllianceMission : public ::google::protobuf::Message {
 public:
  BraveNewWorldAllianceMission();
  virtual ~BraveNewWorldAllianceMission();

  BraveNewWorldAllianceMission(const BraveNewWorldAllianceMission& from);

  inline BraveNewWorldAllianceMission& operator=(const BraveNewWorldAllianceMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldAllianceMission& default_instance();

  void Swap(BraveNewWorldAllianceMission* other);

  // implements Message ----------------------------------------------

  BraveNewWorldAllianceMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldAllianceMission& from);
  void MergeFrom(const BraveNewWorldAllianceMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required bool m = 2;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 2;
  inline bool m() const;
  inline void set_m(bool value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldAllianceMission)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_m();
  inline void clear_has_m();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  bool m_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldAllianceMission* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldAlliance : public ::google::protobuf::Message {
 public:
  BraveNewWorldAlliance();
  virtual ~BraveNewWorldAlliance();

  BraveNewWorldAlliance(const BraveNewWorldAlliance& from);

  inline BraveNewWorldAlliance& operator=(const BraveNewWorldAlliance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldAlliance& default_instance();

  void Swap(BraveNewWorldAlliance* other);

  // implements Message ----------------------------------------------

  BraveNewWorldAlliance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldAlliance& from);
  void MergeFrom(const BraveNewWorldAlliance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // repeated .BraveNewWorld.BraveNewWorldAllianceMission mission = 2;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 2;
  inline const ::BraveNewWorld::BraveNewWorldAllianceMission& mission(int index) const;
  inline ::BraveNewWorld::BraveNewWorldAllianceMission* mutable_mission(int index);
  inline ::BraveNewWorld::BraveNewWorldAllianceMission* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAllianceMission >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAllianceMission >*
      mutable_mission();

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldAlliance)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAllianceMission > mission_;
  ::google::protobuf::uint32 aid_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldAlliance* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldUser : public ::google::protobuf::Message {
 public:
  BraveNewWorldUser();
  virtual ~BraveNewWorldUser();

  BraveNewWorldUser(const BraveNewWorldUser& from);

  inline BraveNewWorldUser& operator=(const BraveNewWorldUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldUser& default_instance();

  void Swap(BraveNewWorldUser* other);

  // implements Message ----------------------------------------------

  BraveNewWorldUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldUser& from);
  void MergeFrom(const BraveNewWorldUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // required uint32 aid = 3;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 3;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // required uint32 rts = 7;
  inline bool has_rts() const;
  inline void clear_rts();
  static const int kRtsFieldNumber = 7;
  inline ::google::protobuf::uint32 rts() const;
  inline void set_rts(::google::protobuf::uint32 value);

  // required uint32 hts = 8;
  inline bool has_hts() const;
  inline void clear_hts();
  static const int kHtsFieldNumber = 8;
  inline ::google::protobuf::uint32 hts() const;
  inline void set_hts(::google::protobuf::uint32 value);

  // required uint32 pts = 9;
  inline bool has_pts() const;
  inline void clear_pts();
  static const int kPtsFieldNumber = 9;
  inline ::google::protobuf::uint32 pts() const;
  inline void set_pts(::google::protobuf::uint32 value);

  // required uint32 bts = 10;
  inline bool has_bts() const;
  inline void clear_bts();
  static const int kBtsFieldNumber = 10;
  inline ::google::protobuf::uint32 bts() const;
  inline void set_bts(::google::protobuf::uint32 value);

  // required uint32 bt = 11;
  inline bool has_bt() const;
  inline void clear_bt();
  static const int kBtFieldNumber = 11;
  inline ::google::protobuf::uint32 bt() const;
  inline void set_bt(::google::protobuf::uint32 value);

  // required uint32 tts = 12;
  inline bool has_tts() const;
  inline void clear_tts();
  static const int kTtsFieldNumber = 12;
  inline ::google::protobuf::uint32 tts() const;
  inline void set_tts(::google::protobuf::uint32 value);

  // repeated uint32 hp = 13;
  inline int hp_size() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 13;
  inline ::google::protobuf::uint32 hp(int index) const;
  inline void set_hp(int index, ::google::protobuf::uint32 value);
  inline void add_hp(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hp();

  // repeated .BraveNewWorld.BraveNewWorldHistory his = 14;
  inline int his_size() const;
  inline void clear_his();
  static const int kHisFieldNumber = 14;
  inline const ::BraveNewWorld::BraveNewWorldHistory& his(int index) const;
  inline ::BraveNewWorld::BraveNewWorldHistory* mutable_his(int index);
  inline ::BraveNewWorld::BraveNewWorldHistory* add_his();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldHistory >&
      his() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldHistory >*
      mutable_his();

  // repeated .BraveNewWorld.BraveNewWorldFavourate fav = 15;
  inline int fav_size() const;
  inline void clear_fav();
  static const int kFavFieldNumber = 15;
  inline const ::BraveNewWorld::BraveNewWorldFavourate& fav(int index) const;
  inline ::BraveNewWorld::BraveNewWorldFavourate* mutable_fav(int index);
  inline ::BraveNewWorld::BraveNewWorldFavourate* add_fav();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldFavourate >&
      fav() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldFavourate >*
      mutable_fav();

  // optional uint32 rl = 16;
  inline bool has_rl() const;
  inline void clear_rl();
  static const int kRlFieldNumber = 16;
  inline ::google::protobuf::uint32 rl() const;
  inline void set_rl(::google::protobuf::uint32 value);

  // optional .BraveNewWorld.BraveNewWorldUserMission mission = 17;
  inline bool has_mission() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 17;
  inline const ::BraveNewWorld::BraveNewWorldUserMission& mission() const;
  inline ::BraveNewWorld::BraveNewWorldUserMission* mutable_mission();
  inline ::BraveNewWorld::BraveNewWorldUserMission* release_mission();
  inline void set_allocated_mission(::BraveNewWorld::BraveNewWorldUserMission* mission);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_rts();
  inline void clear_has_rts();
  inline void set_has_hts();
  inline void clear_has_hts();
  inline void set_has_pts();
  inline void clear_has_pts();
  inline void set_has_bts();
  inline void clear_has_bts();
  inline void set_has_bt();
  inline void clear_has_bt();
  inline void set_has_tts();
  inline void clear_has_tts();
  inline void set_has_rl();
  inline void clear_has_rl();
  inline void set_has_mission();
  inline void clear_has_mission();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 rts_;
  ::google::protobuf::uint32 hts_;
  ::google::protobuf::uint32 pts_;
  ::google::protobuf::uint32 bts_;
  ::google::protobuf::uint32 bt_;
  ::google::protobuf::uint32 tts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hp_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldHistory > his_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldFavourate > fav_;
  ::BraveNewWorld::BraveNewWorldUserMission* mission_;
  ::google::protobuf::uint32 rl_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldUser* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldPoint : public ::google::protobuf::Message {
 public:
  BraveNewWorldPoint();
  virtual ~BraveNewWorldPoint();

  BraveNewWorldPoint(const BraveNewWorldPoint& from);

  inline BraveNewWorldPoint& operator=(const BraveNewWorldPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldPoint& default_instance();

  void Swap(BraveNewWorldPoint* other);

  // implements Message ----------------------------------------------

  BraveNewWorldPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldPoint& from);
  void MergeFrom(const BraveNewWorldPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bool def = 4;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 4;
  inline bool def() const;
  inline void set_def(bool value);

  // required uint32 hero = 5;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 5;
  inline ::google::protobuf::uint32 hero() const;
  inline void set_hero(::google::protobuf::uint32 value);

  // required uint32 hp = 6;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 6;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 fid = 7;
  inline bool has_fid() const;
  inline void clear_fid();
  static const int kFidFieldNumber = 7;
  inline ::google::protobuf::uint32 fid() const;
  inline void set_fid(::google::protobuf::uint32 value);

  // required uint32 fts = 8;
  inline bool has_fts() const;
  inline void clear_fts();
  static const int kFtsFieldNumber = 8;
  inline ::google::protobuf::uint32 fts() const;
  inline void set_fts(::google::protobuf::uint32 value);

  // required uint32 rts = 9;
  inline bool has_rts() const;
  inline void clear_rts();
  static const int kRtsFieldNumber = 9;
  inline ::google::protobuf::uint32 rts() const;
  inline void set_rts(::google::protobuf::uint32 value);

  // optional uint32 rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline ::google::protobuf::uint32 rc() const;
  inline void set_rc(::google::protobuf::uint32 value);

  // optional uint32 mtype = 11;
  inline bool has_mtype() const;
  inline void clear_mtype();
  static const int kMtypeFieldNumber = 11;
  inline ::google::protobuf::uint32 mtype() const;
  inline void set_mtype(::google::protobuf::uint32 value);

  // optional uint32 mcount = 12;
  inline bool has_mcount() const;
  inline void clear_mcount();
  static const int kMcountFieldNumber = 12;
  inline ::google::protobuf::uint32 mcount() const;
  inline void set_mcount(::google::protobuf::uint32 value);

  // optional uint32 defts = 13;
  inline bool has_defts() const;
  inline void clear_defts();
  static const int kDeftsFieldNumber = 13;
  inline ::google::protobuf::uint32 defts() const;
  inline void set_defts(::google::protobuf::uint32 value);

  // optional uint32 sdef = 14;
  inline bool has_sdef() const;
  inline void clear_sdef();
  static const int kSdefFieldNumber = 14;
  inline ::google::protobuf::uint32 sdef() const;
  inline void set_sdef(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldPoint)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_hero();
  inline void clear_has_hero();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_fid();
  inline void clear_has_fid();
  inline void set_has_fts();
  inline void clear_has_fts();
  inline void set_has_rts();
  inline void clear_has_rts();
  inline void set_has_rc();
  inline void clear_has_rc();
  inline void set_has_mtype();
  inline void clear_has_mtype();
  inline void set_has_mcount();
  inline void clear_has_mcount();
  inline void set_has_defts();
  inline void clear_has_defts();
  inline void set_has_sdef();
  inline void clear_has_sdef();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 uid_;
  bool def_;
  ::google::protobuf::uint32 hero_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 fid_;
  ::google::protobuf::uint32 fts_;
  ::google::protobuf::uint32 rts_;
  ::google::protobuf::uint32 rc_;
  ::google::protobuf::uint32 mtype_;
  ::google::protobuf::uint32 mcount_;
  ::google::protobuf::uint32 defts_;
  ::google::protobuf::uint32 sdef_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldPoint* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldZone : public ::google::protobuf::Message {
 public:
  BraveNewWorldZone();
  virtual ~BraveNewWorldZone();

  BraveNewWorldZone(const BraveNewWorldZone& from);

  inline BraveNewWorldZone& operator=(const BraveNewWorldZone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldZone& default_instance();

  void Swap(BraveNewWorldZone* other);

  // implements Message ----------------------------------------------

  BraveNewWorldZone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldZone& from);
  void MergeFrom(const BraveNewWorldZone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 aid = 2;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 2;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorldZone)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldZone* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorld : public ::google::protobuf::Message {
 public:
  BraveNewWorld();
  virtual ~BraveNewWorld();

  BraveNewWorld(const BraveNewWorld& from);

  inline BraveNewWorld& operator=(const BraveNewWorld& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorld& default_instance();

  void Swap(BraveNewWorld* other);

  // implements Message ----------------------------------------------

  BraveNewWorld* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorld& from);
  void MergeFrom(const BraveNewWorld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BraveNewWorld.BraveNewWorldPoint land = 1;
  inline int land_size() const;
  inline void clear_land();
  static const int kLandFieldNumber = 1;
  inline const ::BraveNewWorld::BraveNewWorldPoint& land(int index) const;
  inline ::BraveNewWorld::BraveNewWorldPoint* mutable_land(int index);
  inline ::BraveNewWorld::BraveNewWorldPoint* add_land();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldPoint >&
      land() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldPoint >*
      mutable_land();

  // repeated .BraveNewWorld.BraveNewWorldUser user = 2;
  inline int user_size() const;
  inline void clear_user();
  static const int kUserFieldNumber = 2;
  inline const ::BraveNewWorld::BraveNewWorldUser& user(int index) const;
  inline ::BraveNewWorld::BraveNewWorldUser* mutable_user(int index);
  inline ::BraveNewWorld::BraveNewWorldUser* add_user();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldUser >&
      user() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldUser >*
      mutable_user();

  // repeated .BraveNewWorld.BraveNewWorldZone zone = 3;
  inline int zone_size() const;
  inline void clear_zone();
  static const int kZoneFieldNumber = 3;
  inline const ::BraveNewWorld::BraveNewWorldZone& zone(int index) const;
  inline ::BraveNewWorld::BraveNewWorldZone* mutable_zone(int index);
  inline ::BraveNewWorld::BraveNewWorldZone* add_zone();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldZone >&
      zone() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldZone >*
      mutable_zone();

  // repeated .BraveNewWorld.BraveNewWorldAlliance alliance = 4;
  inline int alliance_size() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 4;
  inline const ::BraveNewWorld::BraveNewWorldAlliance& alliance(int index) const;
  inline ::BraveNewWorld::BraveNewWorldAlliance* mutable_alliance(int index);
  inline ::BraveNewWorld::BraveNewWorldAlliance* add_alliance();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAlliance >&
      alliance() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAlliance >*
      mutable_alliance();

  // @@protoc_insertion_point(class_scope:BraveNewWorld.BraveNewWorld)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldPoint > land_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldUser > user_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldZone > zone_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAlliance > alliance_;
  friend void  protobuf_AddDesc_BraveNewWorld_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorld_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorld_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorld* default_instance_;
};
// ===================================================================


// ===================================================================

// BraveNewWorldHistory

// required uint32 uid = 1;
inline bool BraveNewWorldHistory::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldHistory::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldHistory::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldHistory::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::uid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.uid)
  return uid_;
}
inline void BraveNewWorldHistory::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.uid)
}

// required uint32 type = 2;
inline bool BraveNewWorldHistory::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldHistory::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldHistory::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldHistory::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::type() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.type)
  return type_;
}
inline void BraveNewWorldHistory::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.type)
}

// required uint32 x = 3;
inline bool BraveNewWorldHistory::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BraveNewWorldHistory::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BraveNewWorldHistory::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BraveNewWorldHistory::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::x() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.x)
  return x_;
}
inline void BraveNewWorldHistory::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.x)
}

// required uint32 y = 4;
inline bool BraveNewWorldHistory::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BraveNewWorldHistory::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BraveNewWorldHistory::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BraveNewWorldHistory::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::y() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.y)
  return y_;
}
inline void BraveNewWorldHistory::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.y)
}

// required uint32 lm = 5;
inline bool BraveNewWorldHistory::has_lm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BraveNewWorldHistory::set_has_lm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BraveNewWorldHistory::clear_has_lm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BraveNewWorldHistory::clear_lm() {
  lm_ = 0u;
  clear_has_lm();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::lm() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.lm)
  return lm_;
}
inline void BraveNewWorldHistory::set_lm(::google::protobuf::uint32 value) {
  set_has_lm();
  lm_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.lm)
}

// required uint32 nm = 6;
inline bool BraveNewWorldHistory::has_nm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BraveNewWorldHistory::set_has_nm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BraveNewWorldHistory::clear_has_nm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BraveNewWorldHistory::clear_nm() {
  nm_ = 0u;
  clear_has_nm();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::nm() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.nm)
  return nm_;
}
inline void BraveNewWorldHistory::set_nm(::google::protobuf::uint32 value) {
  set_has_nm();
  nm_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.nm)
}

// required uint32 lh = 7;
inline bool BraveNewWorldHistory::has_lh() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BraveNewWorldHistory::set_has_lh() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BraveNewWorldHistory::clear_has_lh() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BraveNewWorldHistory::clear_lh() {
  lh_ = 0u;
  clear_has_lh();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::lh() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.lh)
  return lh_;
}
inline void BraveNewWorldHistory::set_lh(::google::protobuf::uint32 value) {
  set_has_lh();
  lh_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.lh)
}

// required uint32 nh = 8;
inline bool BraveNewWorldHistory::has_nh() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BraveNewWorldHistory::set_has_nh() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BraveNewWorldHistory::clear_has_nh() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BraveNewWorldHistory::clear_nh() {
  nh_ = 0u;
  clear_has_nh();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::nh() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.nh)
  return nh_;
}
inline void BraveNewWorldHistory::set_nh(::google::protobuf::uint32 value) {
  set_has_nh();
  nh_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.nh)
}

// required uint32 ts = 9;
inline bool BraveNewWorldHistory::has_ts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BraveNewWorldHistory::set_has_ts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BraveNewWorldHistory::clear_has_ts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BraveNewWorldHistory::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 BraveNewWorldHistory::ts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldHistory.ts)
  return ts_;
}
inline void BraveNewWorldHistory::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldHistory.ts)
}

// -------------------------------------------------------------------

// BraveNewWorldFavourate

// required uint32 x = 1;
inline bool BraveNewWorldFavourate::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldFavourate::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldFavourate::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldFavourate::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 BraveNewWorldFavourate::x() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldFavourate.x)
  return x_;
}
inline void BraveNewWorldFavourate::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldFavourate.x)
}

// required uint32 y = 2;
inline bool BraveNewWorldFavourate::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldFavourate::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldFavourate::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldFavourate::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 BraveNewWorldFavourate::y() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldFavourate.y)
  return y_;
}
inline void BraveNewWorldFavourate::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldFavourate.y)
}

// -------------------------------------------------------------------

// BraveNewWorldUserMission

// required int32 m1 = 1;
inline bool BraveNewWorldUserMission::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldUserMission::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldUserMission::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldUserMission::clear_m1() {
  m1_ = 0;
  clear_has_m1();
}
inline ::google::protobuf::int32 BraveNewWorldUserMission::m1() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUserMission.m1)
  return m1_;
}
inline void BraveNewWorldUserMission::set_m1(::google::protobuf::int32 value) {
  set_has_m1();
  m1_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUserMission.m1)
}

// required int32 m2 = 2;
inline bool BraveNewWorldUserMission::has_m2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldUserMission::set_has_m2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldUserMission::clear_has_m2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldUserMission::clear_m2() {
  m2_ = 0;
  clear_has_m2();
}
inline ::google::protobuf::int32 BraveNewWorldUserMission::m2() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUserMission.m2)
  return m2_;
}
inline void BraveNewWorldUserMission::set_m2(::google::protobuf::int32 value) {
  set_has_m2();
  m2_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUserMission.m2)
}

// required uint32 mx = 3;
inline bool BraveNewWorldUserMission::has_mx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BraveNewWorldUserMission::set_has_mx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BraveNewWorldUserMission::clear_has_mx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BraveNewWorldUserMission::clear_mx() {
  mx_ = 0u;
  clear_has_mx();
}
inline ::google::protobuf::uint32 BraveNewWorldUserMission::mx() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUserMission.mx)
  return mx_;
}
inline void BraveNewWorldUserMission::set_mx(::google::protobuf::uint32 value) {
  set_has_mx();
  mx_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUserMission.mx)
}

// required uint32 my = 4;
inline bool BraveNewWorldUserMission::has_my() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BraveNewWorldUserMission::set_has_my() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BraveNewWorldUserMission::clear_has_my() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BraveNewWorldUserMission::clear_my() {
  my_ = 0u;
  clear_has_my();
}
inline ::google::protobuf::uint32 BraveNewWorldUserMission::my() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUserMission.my)
  return my_;
}
inline void BraveNewWorldUserMission::set_my(::google::protobuf::uint32 value) {
  set_has_my();
  my_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUserMission.my)
}

// required int32 m3 = 5;
inline bool BraveNewWorldUserMission::has_m3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BraveNewWorldUserMission::set_has_m3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BraveNewWorldUserMission::clear_has_m3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BraveNewWorldUserMission::clear_m3() {
  m3_ = 0;
  clear_has_m3();
}
inline ::google::protobuf::int32 BraveNewWorldUserMission::m3() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUserMission.m3)
  return m3_;
}
inline void BraveNewWorldUserMission::set_m3(::google::protobuf::int32 value) {
  set_has_m3();
  m3_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUserMission.m3)
}

// -------------------------------------------------------------------

// BraveNewWorldAllianceMission

// required uint32 id = 1;
inline bool BraveNewWorldAllianceMission::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldAllianceMission::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldAllianceMission::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldAllianceMission::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BraveNewWorldAllianceMission::id() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldAllianceMission.id)
  return id_;
}
inline void BraveNewWorldAllianceMission::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldAllianceMission.id)
}

// required bool m = 2;
inline bool BraveNewWorldAllianceMission::has_m() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldAllianceMission::set_has_m() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldAllianceMission::clear_has_m() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldAllianceMission::clear_m() {
  m_ = false;
  clear_has_m();
}
inline bool BraveNewWorldAllianceMission::m() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldAllianceMission.m)
  return m_;
}
inline void BraveNewWorldAllianceMission::set_m(bool value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldAllianceMission.m)
}

// -------------------------------------------------------------------

// BraveNewWorldAlliance

// required uint32 aid = 1;
inline bool BraveNewWorldAlliance::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldAlliance::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldAlliance::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldAlliance::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 BraveNewWorldAlliance::aid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldAlliance.aid)
  return aid_;
}
inline void BraveNewWorldAlliance::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldAlliance.aid)
}

// repeated .BraveNewWorld.BraveNewWorldAllianceMission mission = 2;
inline int BraveNewWorldAlliance::mission_size() const {
  return mission_.size();
}
inline void BraveNewWorldAlliance::clear_mission() {
  mission_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldAllianceMission& BraveNewWorldAlliance::mission(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldAlliance.mission)
  return mission_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldAllianceMission* BraveNewWorldAlliance::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorldAlliance.mission)
  return mission_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldAllianceMission* BraveNewWorldAlliance::add_mission() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorldAlliance.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAllianceMission >&
BraveNewWorldAlliance::mission() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorldAlliance.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAllianceMission >*
BraveNewWorldAlliance::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorldAlliance.mission)
  return &mission_;
}

// -------------------------------------------------------------------

// BraveNewWorldUser

// required uint32 uid = 1;
inline bool BraveNewWorldUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::uid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.uid)
  return uid_;
}
inline void BraveNewWorldUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.uid)
}

// required uint32 seq = 2;
inline bool BraveNewWorldUser::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldUser::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldUser::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldUser::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::seq() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.seq)
  return seq_;
}
inline void BraveNewWorldUser::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.seq)
}

// required uint32 aid = 3;
inline bool BraveNewWorldUser::has_aid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BraveNewWorldUser::set_has_aid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BraveNewWorldUser::clear_has_aid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BraveNewWorldUser::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::aid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.aid)
  return aid_;
}
inline void BraveNewWorldUser::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.aid)
}

// required uint32 lv = 4;
inline bool BraveNewWorldUser::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BraveNewWorldUser::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BraveNewWorldUser::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BraveNewWorldUser::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::lv() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.lv)
  return lv_;
}
inline void BraveNewWorldUser::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.lv)
}

// required uint32 x = 5;
inline bool BraveNewWorldUser::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BraveNewWorldUser::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BraveNewWorldUser::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BraveNewWorldUser::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::x() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.x)
  return x_;
}
inline void BraveNewWorldUser::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.x)
}

// required uint32 y = 6;
inline bool BraveNewWorldUser::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BraveNewWorldUser::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BraveNewWorldUser::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BraveNewWorldUser::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::y() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.y)
  return y_;
}
inline void BraveNewWorldUser::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.y)
}

// required uint32 rts = 7;
inline bool BraveNewWorldUser::has_rts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BraveNewWorldUser::set_has_rts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BraveNewWorldUser::clear_has_rts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BraveNewWorldUser::clear_rts() {
  rts_ = 0u;
  clear_has_rts();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::rts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.rts)
  return rts_;
}
inline void BraveNewWorldUser::set_rts(::google::protobuf::uint32 value) {
  set_has_rts();
  rts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.rts)
}

// required uint32 hts = 8;
inline bool BraveNewWorldUser::has_hts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BraveNewWorldUser::set_has_hts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BraveNewWorldUser::clear_has_hts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BraveNewWorldUser::clear_hts() {
  hts_ = 0u;
  clear_has_hts();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::hts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.hts)
  return hts_;
}
inline void BraveNewWorldUser::set_hts(::google::protobuf::uint32 value) {
  set_has_hts();
  hts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.hts)
}

// required uint32 pts = 9;
inline bool BraveNewWorldUser::has_pts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BraveNewWorldUser::set_has_pts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BraveNewWorldUser::clear_has_pts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BraveNewWorldUser::clear_pts() {
  pts_ = 0u;
  clear_has_pts();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::pts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.pts)
  return pts_;
}
inline void BraveNewWorldUser::set_pts(::google::protobuf::uint32 value) {
  set_has_pts();
  pts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.pts)
}

// required uint32 bts = 10;
inline bool BraveNewWorldUser::has_bts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BraveNewWorldUser::set_has_bts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BraveNewWorldUser::clear_has_bts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BraveNewWorldUser::clear_bts() {
  bts_ = 0u;
  clear_has_bts();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::bts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.bts)
  return bts_;
}
inline void BraveNewWorldUser::set_bts(::google::protobuf::uint32 value) {
  set_has_bts();
  bts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.bts)
}

// required uint32 bt = 11;
inline bool BraveNewWorldUser::has_bt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BraveNewWorldUser::set_has_bt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BraveNewWorldUser::clear_has_bt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BraveNewWorldUser::clear_bt() {
  bt_ = 0u;
  clear_has_bt();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::bt() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.bt)
  return bt_;
}
inline void BraveNewWorldUser::set_bt(::google::protobuf::uint32 value) {
  set_has_bt();
  bt_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.bt)
}

// required uint32 tts = 12;
inline bool BraveNewWorldUser::has_tts() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BraveNewWorldUser::set_has_tts() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BraveNewWorldUser::clear_has_tts() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BraveNewWorldUser::clear_tts() {
  tts_ = 0u;
  clear_has_tts();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::tts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.tts)
  return tts_;
}
inline void BraveNewWorldUser::set_tts(::google::protobuf::uint32 value) {
  set_has_tts();
  tts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.tts)
}

// repeated uint32 hp = 13;
inline int BraveNewWorldUser::hp_size() const {
  return hp_.size();
}
inline void BraveNewWorldUser::clear_hp() {
  hp_.Clear();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::hp(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.hp)
  return hp_.Get(index);
}
inline void BraveNewWorldUser::set_hp(int index, ::google::protobuf::uint32 value) {
  hp_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.hp)
}
inline void BraveNewWorldUser::add_hp(::google::protobuf::uint32 value) {
  hp_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorldUser.hp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BraveNewWorldUser::hp() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorldUser.hp)
  return hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BraveNewWorldUser::mutable_hp() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorldUser.hp)
  return &hp_;
}

// repeated .BraveNewWorld.BraveNewWorldHistory his = 14;
inline int BraveNewWorldUser::his_size() const {
  return his_.size();
}
inline void BraveNewWorldUser::clear_his() {
  his_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldHistory& BraveNewWorldUser::his(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.his)
  return his_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldHistory* BraveNewWorldUser::mutable_his(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorldUser.his)
  return his_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldHistory* BraveNewWorldUser::add_his() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorldUser.his)
  return his_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldHistory >&
BraveNewWorldUser::his() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorldUser.his)
  return his_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldHistory >*
BraveNewWorldUser::mutable_his() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorldUser.his)
  return &his_;
}

// repeated .BraveNewWorld.BraveNewWorldFavourate fav = 15;
inline int BraveNewWorldUser::fav_size() const {
  return fav_.size();
}
inline void BraveNewWorldUser::clear_fav() {
  fav_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldFavourate& BraveNewWorldUser::fav(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.fav)
  return fav_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldFavourate* BraveNewWorldUser::mutable_fav(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorldUser.fav)
  return fav_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldFavourate* BraveNewWorldUser::add_fav() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorldUser.fav)
  return fav_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldFavourate >&
BraveNewWorldUser::fav() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorldUser.fav)
  return fav_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldFavourate >*
BraveNewWorldUser::mutable_fav() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorldUser.fav)
  return &fav_;
}

// optional uint32 rl = 16;
inline bool BraveNewWorldUser::has_rl() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BraveNewWorldUser::set_has_rl() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BraveNewWorldUser::clear_has_rl() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BraveNewWorldUser::clear_rl() {
  rl_ = 0u;
  clear_has_rl();
}
inline ::google::protobuf::uint32 BraveNewWorldUser::rl() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.rl)
  return rl_;
}
inline void BraveNewWorldUser::set_rl(::google::protobuf::uint32 value) {
  set_has_rl();
  rl_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldUser.rl)
}

// optional .BraveNewWorld.BraveNewWorldUserMission mission = 17;
inline bool BraveNewWorldUser::has_mission() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BraveNewWorldUser::set_has_mission() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BraveNewWorldUser::clear_has_mission() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BraveNewWorldUser::clear_mission() {
  if (mission_ != NULL) mission_->::BraveNewWorld::BraveNewWorldUserMission::Clear();
  clear_has_mission();
}
inline const ::BraveNewWorld::BraveNewWorldUserMission& BraveNewWorldUser::mission() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldUser.mission)
  return mission_ != NULL ? *mission_ : *default_instance_->mission_;
}
inline ::BraveNewWorld::BraveNewWorldUserMission* BraveNewWorldUser::mutable_mission() {
  set_has_mission();
  if (mission_ == NULL) mission_ = new ::BraveNewWorld::BraveNewWorldUserMission;
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorldUser.mission)
  return mission_;
}
inline ::BraveNewWorld::BraveNewWorldUserMission* BraveNewWorldUser::release_mission() {
  clear_has_mission();
  ::BraveNewWorld::BraveNewWorldUserMission* temp = mission_;
  mission_ = NULL;
  return temp;
}
inline void BraveNewWorldUser::set_allocated_mission(::BraveNewWorld::BraveNewWorldUserMission* mission) {
  delete mission_;
  mission_ = mission;
  if (mission) {
    set_has_mission();
  } else {
    clear_has_mission();
  }
  // @@protoc_insertion_point(field_set_allocated:BraveNewWorld.BraveNewWorldUser.mission)
}

// -------------------------------------------------------------------

// BraveNewWorldPoint

// required uint32 x = 1;
inline bool BraveNewWorldPoint::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldPoint::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldPoint::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldPoint::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::x() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.x)
  return x_;
}
inline void BraveNewWorldPoint::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.x)
}

// required uint32 y = 2;
inline bool BraveNewWorldPoint::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldPoint::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldPoint::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldPoint::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::y() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.y)
  return y_;
}
inline void BraveNewWorldPoint::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.y)
}

// required uint32 uid = 3;
inline bool BraveNewWorldPoint::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BraveNewWorldPoint::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BraveNewWorldPoint::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BraveNewWorldPoint::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::uid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.uid)
  return uid_;
}
inline void BraveNewWorldPoint::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.uid)
}

// required bool def = 4;
inline bool BraveNewWorldPoint::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BraveNewWorldPoint::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BraveNewWorldPoint::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BraveNewWorldPoint::clear_def() {
  def_ = false;
  clear_has_def();
}
inline bool BraveNewWorldPoint::def() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.def)
  return def_;
}
inline void BraveNewWorldPoint::set_def(bool value) {
  set_has_def();
  def_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.def)
}

// required uint32 hero = 5;
inline bool BraveNewWorldPoint::has_hero() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BraveNewWorldPoint::set_has_hero() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BraveNewWorldPoint::clear_has_hero() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BraveNewWorldPoint::clear_hero() {
  hero_ = 0u;
  clear_has_hero();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::hero() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.hero)
  return hero_;
}
inline void BraveNewWorldPoint::set_hero(::google::protobuf::uint32 value) {
  set_has_hero();
  hero_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.hero)
}

// required uint32 hp = 6;
inline bool BraveNewWorldPoint::has_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BraveNewWorldPoint::set_has_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BraveNewWorldPoint::clear_has_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BraveNewWorldPoint::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::hp() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.hp)
  return hp_;
}
inline void BraveNewWorldPoint::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.hp)
}

// required uint32 fid = 7;
inline bool BraveNewWorldPoint::has_fid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BraveNewWorldPoint::set_has_fid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BraveNewWorldPoint::clear_has_fid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BraveNewWorldPoint::clear_fid() {
  fid_ = 0u;
  clear_has_fid();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::fid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.fid)
  return fid_;
}
inline void BraveNewWorldPoint::set_fid(::google::protobuf::uint32 value) {
  set_has_fid();
  fid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.fid)
}

// required uint32 fts = 8;
inline bool BraveNewWorldPoint::has_fts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BraveNewWorldPoint::set_has_fts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BraveNewWorldPoint::clear_has_fts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BraveNewWorldPoint::clear_fts() {
  fts_ = 0u;
  clear_has_fts();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::fts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.fts)
  return fts_;
}
inline void BraveNewWorldPoint::set_fts(::google::protobuf::uint32 value) {
  set_has_fts();
  fts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.fts)
}

// required uint32 rts = 9;
inline bool BraveNewWorldPoint::has_rts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BraveNewWorldPoint::set_has_rts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BraveNewWorldPoint::clear_has_rts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BraveNewWorldPoint::clear_rts() {
  rts_ = 0u;
  clear_has_rts();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::rts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.rts)
  return rts_;
}
inline void BraveNewWorldPoint::set_rts(::google::protobuf::uint32 value) {
  set_has_rts();
  rts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.rts)
}

// optional uint32 rc = 10;
inline bool BraveNewWorldPoint::has_rc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BraveNewWorldPoint::set_has_rc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BraveNewWorldPoint::clear_has_rc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BraveNewWorldPoint::clear_rc() {
  rc_ = 0u;
  clear_has_rc();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::rc() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.rc)
  return rc_;
}
inline void BraveNewWorldPoint::set_rc(::google::protobuf::uint32 value) {
  set_has_rc();
  rc_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.rc)
}

// optional uint32 mtype = 11;
inline bool BraveNewWorldPoint::has_mtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BraveNewWorldPoint::set_has_mtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BraveNewWorldPoint::clear_has_mtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BraveNewWorldPoint::clear_mtype() {
  mtype_ = 0u;
  clear_has_mtype();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::mtype() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.mtype)
  return mtype_;
}
inline void BraveNewWorldPoint::set_mtype(::google::protobuf::uint32 value) {
  set_has_mtype();
  mtype_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.mtype)
}

// optional uint32 mcount = 12;
inline bool BraveNewWorldPoint::has_mcount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BraveNewWorldPoint::set_has_mcount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BraveNewWorldPoint::clear_has_mcount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BraveNewWorldPoint::clear_mcount() {
  mcount_ = 0u;
  clear_has_mcount();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::mcount() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.mcount)
  return mcount_;
}
inline void BraveNewWorldPoint::set_mcount(::google::protobuf::uint32 value) {
  set_has_mcount();
  mcount_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.mcount)
}

// optional uint32 defts = 13;
inline bool BraveNewWorldPoint::has_defts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BraveNewWorldPoint::set_has_defts() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BraveNewWorldPoint::clear_has_defts() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BraveNewWorldPoint::clear_defts() {
  defts_ = 0u;
  clear_has_defts();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::defts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.defts)
  return defts_;
}
inline void BraveNewWorldPoint::set_defts(::google::protobuf::uint32 value) {
  set_has_defts();
  defts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.defts)
}

// optional uint32 sdef = 14;
inline bool BraveNewWorldPoint::has_sdef() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BraveNewWorldPoint::set_has_sdef() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BraveNewWorldPoint::clear_has_sdef() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BraveNewWorldPoint::clear_sdef() {
  sdef_ = 0u;
  clear_has_sdef();
}
inline ::google::protobuf::uint32 BraveNewWorldPoint::sdef() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldPoint.sdef)
  return sdef_;
}
inline void BraveNewWorldPoint::set_sdef(::google::protobuf::uint32 value) {
  set_has_sdef();
  sdef_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldPoint.sdef)
}

// -------------------------------------------------------------------

// BraveNewWorldZone

// required uint32 id = 1;
inline bool BraveNewWorldZone::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BraveNewWorldZone::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BraveNewWorldZone::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BraveNewWorldZone::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BraveNewWorldZone::id() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldZone.id)
  return id_;
}
inline void BraveNewWorldZone::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldZone.id)
}

// required uint32 aid = 2;
inline bool BraveNewWorldZone::has_aid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BraveNewWorldZone::set_has_aid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BraveNewWorldZone::clear_has_aid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BraveNewWorldZone::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 BraveNewWorldZone::aid() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldZone.aid)
  return aid_;
}
inline void BraveNewWorldZone::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldZone.aid)
}

// required uint32 ts = 3;
inline bool BraveNewWorldZone::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BraveNewWorldZone::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BraveNewWorldZone::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BraveNewWorldZone::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 BraveNewWorldZone::ts() const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorldZone.ts)
  return ts_;
}
inline void BraveNewWorldZone::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorld.BraveNewWorldZone.ts)
}

// -------------------------------------------------------------------

// BraveNewWorld

// repeated .BraveNewWorld.BraveNewWorldPoint land = 1;
inline int BraveNewWorld::land_size() const {
  return land_.size();
}
inline void BraveNewWorld::clear_land() {
  land_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldPoint& BraveNewWorld::land(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorld.land)
  return land_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldPoint* BraveNewWorld::mutable_land(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorld.land)
  return land_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldPoint* BraveNewWorld::add_land() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorld.land)
  return land_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldPoint >&
BraveNewWorld::land() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorld.land)
  return land_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldPoint >*
BraveNewWorld::mutable_land() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorld.land)
  return &land_;
}

// repeated .BraveNewWorld.BraveNewWorldUser user = 2;
inline int BraveNewWorld::user_size() const {
  return user_.size();
}
inline void BraveNewWorld::clear_user() {
  user_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldUser& BraveNewWorld::user(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorld.user)
  return user_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldUser* BraveNewWorld::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorld.user)
  return user_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldUser* BraveNewWorld::add_user() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorld.user)
  return user_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldUser >&
BraveNewWorld::user() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorld.user)
  return user_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldUser >*
BraveNewWorld::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorld.user)
  return &user_;
}

// repeated .BraveNewWorld.BraveNewWorldZone zone = 3;
inline int BraveNewWorld::zone_size() const {
  return zone_.size();
}
inline void BraveNewWorld::clear_zone() {
  zone_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldZone& BraveNewWorld::zone(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorld.zone)
  return zone_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldZone* BraveNewWorld::mutable_zone(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorld.zone)
  return zone_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldZone* BraveNewWorld::add_zone() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorld.zone)
  return zone_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldZone >&
BraveNewWorld::zone() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorld.zone)
  return zone_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldZone >*
BraveNewWorld::mutable_zone() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorld.zone)
  return &zone_;
}

// repeated .BraveNewWorld.BraveNewWorldAlliance alliance = 4;
inline int BraveNewWorld::alliance_size() const {
  return alliance_.size();
}
inline void BraveNewWorld::clear_alliance() {
  alliance_.Clear();
}
inline const ::BraveNewWorld::BraveNewWorldAlliance& BraveNewWorld::alliance(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorld.BraveNewWorld.alliance)
  return alliance_.Get(index);
}
inline ::BraveNewWorld::BraveNewWorldAlliance* BraveNewWorld::mutable_alliance(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorld.BraveNewWorld.alliance)
  return alliance_.Mutable(index);
}
inline ::BraveNewWorld::BraveNewWorldAlliance* BraveNewWorld::add_alliance() {
  // @@protoc_insertion_point(field_add:BraveNewWorld.BraveNewWorld.alliance)
  return alliance_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAlliance >&
BraveNewWorld::alliance() const {
  // @@protoc_insertion_point(field_list:BraveNewWorld.BraveNewWorld.alliance)
  return alliance_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorld::BraveNewWorldAlliance >*
BraveNewWorld::mutable_alliance() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorld.BraveNewWorld.alliance)
  return &alliance_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BraveNewWorld

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BraveNewWorld_2eproto__INCLUDED
