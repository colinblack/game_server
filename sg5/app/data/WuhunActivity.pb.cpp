// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WuhunActivity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WuhunActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WuhunActivity {

namespace {

const ::google::protobuf::Descriptor* AccChangeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccChangeItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QunXingHuiJuYanHui_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QunXingHuiJuYanHui_reflection_ = NULL;
const ::google::protobuf::Descriptor* QunXingHuiJu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QunXingHuiJu_reflection_ = NULL;
const ::google::protobuf::Descriptor* Activities_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Activities_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MasterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MasterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* HelperMaster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelperMaster_reflection_ = NULL;
const ::google::protobuf::Descriptor* HelperInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelperInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiveHelpActive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiveHelpActive_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_WuhunActivity_2eproto() {
  protobuf_AddDesc_WuhunActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WuhunActivity.proto");
  GOOGLE_CHECK(file != NULL);
  AccChangeItem_descriptor_ = file->message_type(0);
  static const int AccChangeItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, need_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, count_),
  };
  AccChangeItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccChangeItem_descriptor_,
      AccChangeItem::default_instance_,
      AccChangeItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccChangeItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccChangeItem));
  QunXingHuiJuYanHui_descriptor_ = file->message_type(1);
  static const int QunXingHuiJuYanHui_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, need_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, zone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, point_),
  };
  QunXingHuiJuYanHui_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QunXingHuiJuYanHui_descriptor_,
      QunXingHuiJuYanHui::default_instance_,
      QunXingHuiJuYanHui_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJuYanHui, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QunXingHuiJuYanHui));
  QunXingHuiJu_descriptor_ = file->message_type(2);
  static const int QunXingHuiJu_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, daily_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, yanhui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, zhanli_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, jindu_),
  };
  QunXingHuiJu_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QunXingHuiJu_descriptor_,
      QunXingHuiJu::default_instance_,
      QunXingHuiJu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QunXingHuiJu, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QunXingHuiJu));
  Activities_descriptor_ = file->message_type(3);
  static const int Activities_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activities, zhulidaxingdong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activities, qunxinghuiju_),
  };
  Activities_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Activities_descriptor_,
      Activities::default_instance_,
      Activities_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activities, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activities, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Activities));
  UserInfo_descriptor_ = file->message_type(4);
  static const int UserInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, charge_),
  };
  UserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::default_instance_,
      UserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo));
  MasterInfo_descriptor_ = file->message_type(5);
  static const int MasterInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterInfo, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterInfo, helper_),
  };
  MasterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MasterInfo_descriptor_,
      MasterInfo::default_instance_,
      MasterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MasterInfo));
  HelperMaster_descriptor_ = file->message_type(6);
  static const int HelperMaster_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperMaster, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperMaster, refused_),
  };
  HelperMaster_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HelperMaster_descriptor_,
      HelperMaster::default_instance_,
      HelperMaster_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperMaster, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperMaster, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HelperMaster));
  HelperInfo_descriptor_ = file->message_type(7);
  static const int HelperInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperInfo, master_),
  };
  HelperInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HelperInfo_descriptor_,
      HelperInfo::default_instance_,
      HelperInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelperInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HelperInfo));
  RankInfo_descriptor_ = file->message_type(8);
  static const int RankInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, name_),
  };
  RankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankInfo_descriptor_,
      RankInfo::default_instance_,
      RankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankInfo));
  GiveHelpActive_descriptor_ = file->message_type(9);
  static const int GiveHelpActive_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, masters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, helpers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, ranks_),
  };
  GiveHelpActive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiveHelpActive_descriptor_,
      GiveHelpActive::default_instance_,
      GiveHelpActive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiveHelpActive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiveHelpActive));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WuhunActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccChangeItem_descriptor_, &AccChangeItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QunXingHuiJuYanHui_descriptor_, &QunXingHuiJuYanHui::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QunXingHuiJu_descriptor_, &QunXingHuiJu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Activities_descriptor_, &Activities::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_descriptor_, &UserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MasterInfo_descriptor_, &MasterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HelperMaster_descriptor_, &HelperMaster::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HelperInfo_descriptor_, &HelperInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankInfo_descriptor_, &RankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiveHelpActive_descriptor_, &GiveHelpActive::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_WuhunActivity_2eproto() {
  delete AccChangeItem::default_instance_;
  delete AccChangeItem_reflection_;
  delete QunXingHuiJuYanHui::default_instance_;
  delete QunXingHuiJuYanHui_reflection_;
  delete QunXingHuiJu::default_instance_;
  delete QunXingHuiJu_reflection_;
  delete Activities::default_instance_;
  delete Activities_reflection_;
  delete UserInfo::default_instance_;
  delete UserInfo_reflection_;
  delete MasterInfo::default_instance_;
  delete MasterInfo_reflection_;
  delete HelperMaster::default_instance_;
  delete HelperMaster_reflection_;
  delete HelperInfo::default_instance_;
  delete HelperInfo_reflection_;
  delete RankInfo::default_instance_;
  delete RankInfo_reflection_;
  delete GiveHelpActive::default_instance_;
  delete GiveHelpActive_reflection_;
}

void protobuf_AddDesc_WuhunActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023WuhunActivity.proto\022\rWuhunActivity\"G\n\r"
    "AccChangeItem\022\r\n\005index\030\001 \002(\r\022\014\n\004need\030\002 \002"
    "(\r\022\n\n\002id\030\003 \003(\r\022\r\n\005count\030\004 \003(\r\"N\n\022QunXing"
    "HuiJuYanHui\022\r\n\005index\030\001 \002(\r\022\014\n\004need\030\002 \001(\r"
    "\022\014\n\004zone\030\003 \003(\r\022\r\n\005point\030\004 \002(\r\"\373\001\n\014QunXin"
    "gHuiJu\022+\n\005daily\030\001 \003(\0132\034.WuhunActivity.Ac"
    "cChangeItem\022+\n\005total\030\002 \003(\0132\034.WuhunActivi"
    "ty.AccChangeItem\0221\n\006yanhui\030\003 \003(\0132!.Wuhun"
    "Activity.QunXingHuiJuYanHui\0221\n\006zhanli\030\004 "
    "\003(\0132!.WuhunActivity.QunXingHuiJuYanHui\022+"
    "\n\005jindu\030\005 \003(\0132\034.WuhunActivity.AccChangeI"
    "tem\"v\n\nActivities\0225\n\017zhulidaxingdong\030\001 \003"
    "(\0132\034.WuhunActivity.AccChangeItem\0221\n\014qunx"
    "inghuiju\030\002 \002(\0132\033.WuhunActivity.QunXingHu"
    "iJu\"B\n\010UserInfo\022\013\n\003uid\030\001 \002(\r\022\014\n\004name\030\002 \002"
    "(\t\022\013\n\003url\030\003 \002(\t\022\016\n\006charge\030\004 \002(\r\"h\n\nMaste"
    "rInfo\022%\n\004info\030\001 \002(\0132\027.WuhunActivity.User"
    "Info\022\n\n\002ts\030\002 \002(\r\022\'\n\006helper\030\003 \003(\0132\027.Wuhun"
    "Activity.UserInfo\",\n\014HelperMaster\022\013\n\003uid"
    "\030\001 \002(\r\022\017\n\007refused\030\002 \002(\010\"F\n\nHelperInfo\022\013\n"
    "\003uid\030\001 \002(\r\022+\n\006master\030\002 \003(\0132\033.WuhunActivi"
    "ty.HelperMaster\"@\n\010RankInfo\022\013\n\003uid\030\001 \002(\r"
    "\022\r\n\005count\030\002 \002(\r\022\n\n\002ts\030\003 \002(\r\022\014\n\004name\030\004 \002("
    "\t\"\261\001\n\016GiveHelpActive\022\017\n\007version\030\001 \002(\r\022\016\n"
    "\006reward\030\002 \002(\010\022*\n\007masters\030\003 \003(\0132\031.WuhunAc"
    "tivity.MasterInfo\022*\n\007helpers\030\004 \003(\0132\031.Wuh"
    "unActivity.HelperInfo\022&\n\005ranks\030\005 \003(\0132\027.W"
    "uhunActivity.RankInfo", 1101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WuhunActivity.proto", &protobuf_RegisterTypes);
  AccChangeItem::default_instance_ = new AccChangeItem();
  QunXingHuiJuYanHui::default_instance_ = new QunXingHuiJuYanHui();
  QunXingHuiJu::default_instance_ = new QunXingHuiJu();
  Activities::default_instance_ = new Activities();
  UserInfo::default_instance_ = new UserInfo();
  MasterInfo::default_instance_ = new MasterInfo();
  HelperMaster::default_instance_ = new HelperMaster();
  HelperInfo::default_instance_ = new HelperInfo();
  RankInfo::default_instance_ = new RankInfo();
  GiveHelpActive::default_instance_ = new GiveHelpActive();
  AccChangeItem::default_instance_->InitAsDefaultInstance();
  QunXingHuiJuYanHui::default_instance_->InitAsDefaultInstance();
  QunXingHuiJu::default_instance_->InitAsDefaultInstance();
  Activities::default_instance_->InitAsDefaultInstance();
  UserInfo::default_instance_->InitAsDefaultInstance();
  MasterInfo::default_instance_->InitAsDefaultInstance();
  HelperMaster::default_instance_->InitAsDefaultInstance();
  HelperInfo::default_instance_->InitAsDefaultInstance();
  RankInfo::default_instance_->InitAsDefaultInstance();
  GiveHelpActive::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WuhunActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WuhunActivity_2eproto {
  StaticDescriptorInitializer_WuhunActivity_2eproto() {
    protobuf_AddDesc_WuhunActivity_2eproto();
  }
} static_descriptor_initializer_WuhunActivity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AccChangeItem::kIndexFieldNumber;
const int AccChangeItem::kNeedFieldNumber;
const int AccChangeItem::kIdFieldNumber;
const int AccChangeItem::kCountFieldNumber;
#endif  // !_MSC_VER

AccChangeItem::AccChangeItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.AccChangeItem)
}

void AccChangeItem::InitAsDefaultInstance() {
}

AccChangeItem::AccChangeItem(const AccChangeItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.AccChangeItem)
}

void AccChangeItem::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  need_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccChangeItem::~AccChangeItem() {
  // @@protoc_insertion_point(destructor:WuhunActivity.AccChangeItem)
  SharedDtor();
}

void AccChangeItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AccChangeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccChangeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccChangeItem_descriptor_;
}

const AccChangeItem& AccChangeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

AccChangeItem* AccChangeItem::default_instance_ = NULL;

AccChangeItem* AccChangeItem::New() const {
  return new AccChangeItem;
}

void AccChangeItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AccChangeItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(index_, need_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  id_.Clear();
  count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AccChangeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.AccChangeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_need;
        break;
      }

      // required uint32 need = 2;
      case 2: {
        if (tag == 16) {
         parse_need:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_)));
          set_has_need();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // repeated uint32 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // repeated uint32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_count())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.AccChangeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.AccChangeItem)
  return false;
#undef DO_
}

void AccChangeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.AccChangeItem)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // required uint32 need = 2;
  if (has_need()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->need(), output);
  }

  // repeated uint32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->id(i), output);
  }

  // repeated uint32 count = 4;
  for (int i = 0; i < this->count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->count(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.AccChangeItem)
}

::google::protobuf::uint8* AccChangeItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.AccChangeItem)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // required uint32 need = 2;
  if (has_need()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->need(), target);
  }

  // repeated uint32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->id(i), target);
  }

  // repeated uint32 count = 4;
  for (int i = 0; i < this->count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->count(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.AccChangeItem)
  return target;
}

int AccChangeItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // required uint32 need = 2;
    if (has_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need());
    }

  }
  // repeated uint32 id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  // repeated uint32 count = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->count(i));
    }
    total_size += 1 * this->count_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccChangeItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AccChangeItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AccChangeItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccChangeItem::MergeFrom(const AccChangeItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  count_.MergeFrom(from.count_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_need()) {
      set_need(from.need());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AccChangeItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccChangeItem::CopyFrom(const AccChangeItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccChangeItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AccChangeItem::Swap(AccChangeItem* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(need_, other->need_);
    id_.Swap(&other->id_);
    count_.Swap(&other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AccChangeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccChangeItem_descriptor_;
  metadata.reflection = AccChangeItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QunXingHuiJuYanHui::kIndexFieldNumber;
const int QunXingHuiJuYanHui::kNeedFieldNumber;
const int QunXingHuiJuYanHui::kZoneFieldNumber;
const int QunXingHuiJuYanHui::kPointFieldNumber;
#endif  // !_MSC_VER

QunXingHuiJuYanHui::QunXingHuiJuYanHui()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.QunXingHuiJuYanHui)
}

void QunXingHuiJuYanHui::InitAsDefaultInstance() {
}

QunXingHuiJuYanHui::QunXingHuiJuYanHui(const QunXingHuiJuYanHui& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.QunXingHuiJuYanHui)
}

void QunXingHuiJuYanHui::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  need_ = 0u;
  point_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QunXingHuiJuYanHui::~QunXingHuiJuYanHui() {
  // @@protoc_insertion_point(destructor:WuhunActivity.QunXingHuiJuYanHui)
  SharedDtor();
}

void QunXingHuiJuYanHui::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QunXingHuiJuYanHui::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QunXingHuiJuYanHui::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QunXingHuiJuYanHui_descriptor_;
}

const QunXingHuiJuYanHui& QunXingHuiJuYanHui::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

QunXingHuiJuYanHui* QunXingHuiJuYanHui::default_instance_ = NULL;

QunXingHuiJuYanHui* QunXingHuiJuYanHui::New() const {
  return new QunXingHuiJuYanHui;
}

void QunXingHuiJuYanHui::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<QunXingHuiJuYanHui*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(index_, need_);
    point_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  zone_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QunXingHuiJuYanHui::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.QunXingHuiJuYanHui)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_need;
        break;
      }

      // optional uint32 need = 2;
      case 2: {
        if (tag == 16) {
         parse_need:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_)));
          set_has_need();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_zone;
        break;
      }

      // repeated uint32 zone = 3;
      case 3: {
        if (tag == 24) {
         parse_zone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_zone())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_zone())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_zone;
        if (input->ExpectTag(32)) goto parse_point;
        break;
      }

      // required uint32 point = 4;
      case 4: {
        if (tag == 32) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.QunXingHuiJuYanHui)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.QunXingHuiJuYanHui)
  return false;
#undef DO_
}

void QunXingHuiJuYanHui::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.QunXingHuiJuYanHui)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 need = 2;
  if (has_need()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->need(), output);
  }

  // repeated uint32 zone = 3;
  for (int i = 0; i < this->zone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->zone(i), output);
  }

  // required uint32 point = 4;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->point(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.QunXingHuiJuYanHui)
}

::google::protobuf::uint8* QunXingHuiJuYanHui::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.QunXingHuiJuYanHui)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 need = 2;
  if (has_need()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->need(), target);
  }

  // repeated uint32 zone = 3;
  for (int i = 0; i < this->zone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->zone(i), target);
  }

  // required uint32 point = 4;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->point(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.QunXingHuiJuYanHui)
  return target;
}

int QunXingHuiJuYanHui::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // optional uint32 need = 2;
    if (has_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need());
    }

    // required uint32 point = 4;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->point());
    }

  }
  // repeated uint32 zone = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->zone_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->zone(i));
    }
    total_size += 1 * this->zone_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QunXingHuiJuYanHui::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QunXingHuiJuYanHui* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QunXingHuiJuYanHui*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QunXingHuiJuYanHui::MergeFrom(const QunXingHuiJuYanHui& from) {
  GOOGLE_CHECK_NE(&from, this);
  zone_.MergeFrom(from.zone_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_need()) {
      set_need(from.need());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QunXingHuiJuYanHui::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QunXingHuiJuYanHui::CopyFrom(const QunXingHuiJuYanHui& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QunXingHuiJuYanHui::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void QunXingHuiJuYanHui::Swap(QunXingHuiJuYanHui* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(need_, other->need_);
    zone_.Swap(&other->zone_);
    std::swap(point_, other->point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QunXingHuiJuYanHui::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QunXingHuiJuYanHui_descriptor_;
  metadata.reflection = QunXingHuiJuYanHui_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QunXingHuiJu::kDailyFieldNumber;
const int QunXingHuiJu::kTotalFieldNumber;
const int QunXingHuiJu::kYanhuiFieldNumber;
const int QunXingHuiJu::kZhanliFieldNumber;
const int QunXingHuiJu::kJinduFieldNumber;
#endif  // !_MSC_VER

QunXingHuiJu::QunXingHuiJu()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.QunXingHuiJu)
}

void QunXingHuiJu::InitAsDefaultInstance() {
}

QunXingHuiJu::QunXingHuiJu(const QunXingHuiJu& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.QunXingHuiJu)
}

void QunXingHuiJu::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QunXingHuiJu::~QunXingHuiJu() {
  // @@protoc_insertion_point(destructor:WuhunActivity.QunXingHuiJu)
  SharedDtor();
}

void QunXingHuiJu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QunXingHuiJu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QunXingHuiJu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QunXingHuiJu_descriptor_;
}

const QunXingHuiJu& QunXingHuiJu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

QunXingHuiJu* QunXingHuiJu::default_instance_ = NULL;

QunXingHuiJu* QunXingHuiJu::New() const {
  return new QunXingHuiJu;
}

void QunXingHuiJu::Clear() {
  daily_.Clear();
  total_.Clear();
  yanhui_.Clear();
  zhanli_.Clear();
  jindu_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QunXingHuiJu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.QunXingHuiJu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WuhunActivity.AccChangeItem daily = 1;
      case 1: {
        if (tag == 10) {
         parse_daily:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_daily;
        if (input->ExpectTag(18)) goto parse_total;
        break;
      }

      // repeated .WuhunActivity.AccChangeItem total = 2;
      case 2: {
        if (tag == 18) {
         parse_total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_total()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_total;
        if (input->ExpectTag(26)) goto parse_yanhui;
        break;
      }

      // repeated .WuhunActivity.QunXingHuiJuYanHui yanhui = 3;
      case 3: {
        if (tag == 26) {
         parse_yanhui:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yanhui()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_yanhui;
        if (input->ExpectTag(34)) goto parse_zhanli;
        break;
      }

      // repeated .WuhunActivity.QunXingHuiJuYanHui zhanli = 4;
      case 4: {
        if (tag == 34) {
         parse_zhanli:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zhanli()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_zhanli;
        if (input->ExpectTag(42)) goto parse_jindu;
        break;
      }

      // repeated .WuhunActivity.AccChangeItem jindu = 5;
      case 5: {
        if (tag == 42) {
         parse_jindu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_jindu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_jindu;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.QunXingHuiJu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.QunXingHuiJu)
  return false;
#undef DO_
}

void QunXingHuiJu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.QunXingHuiJu)
  // repeated .WuhunActivity.AccChangeItem daily = 1;
  for (int i = 0; i < this->daily_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->daily(i), output);
  }

  // repeated .WuhunActivity.AccChangeItem total = 2;
  for (int i = 0; i < this->total_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->total(i), output);
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui yanhui = 3;
  for (int i = 0; i < this->yanhui_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->yanhui(i), output);
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui zhanli = 4;
  for (int i = 0; i < this->zhanli_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->zhanli(i), output);
  }

  // repeated .WuhunActivity.AccChangeItem jindu = 5;
  for (int i = 0; i < this->jindu_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->jindu(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.QunXingHuiJu)
}

::google::protobuf::uint8* QunXingHuiJu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.QunXingHuiJu)
  // repeated .WuhunActivity.AccChangeItem daily = 1;
  for (int i = 0; i < this->daily_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->daily(i), target);
  }

  // repeated .WuhunActivity.AccChangeItem total = 2;
  for (int i = 0; i < this->total_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->total(i), target);
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui yanhui = 3;
  for (int i = 0; i < this->yanhui_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->yanhui(i), target);
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui zhanli = 4;
  for (int i = 0; i < this->zhanli_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->zhanli(i), target);
  }

  // repeated .WuhunActivity.AccChangeItem jindu = 5;
  for (int i = 0; i < this->jindu_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->jindu(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.QunXingHuiJu)
  return target;
}

int QunXingHuiJu::ByteSize() const {
  int total_size = 0;

  // repeated .WuhunActivity.AccChangeItem daily = 1;
  total_size += 1 * this->daily_size();
  for (int i = 0; i < this->daily_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily(i));
  }

  // repeated .WuhunActivity.AccChangeItem total = 2;
  total_size += 1 * this->total_size();
  for (int i = 0; i < this->total_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->total(i));
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui yanhui = 3;
  total_size += 1 * this->yanhui_size();
  for (int i = 0; i < this->yanhui_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yanhui(i));
  }

  // repeated .WuhunActivity.QunXingHuiJuYanHui zhanli = 4;
  total_size += 1 * this->zhanli_size();
  for (int i = 0; i < this->zhanli_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zhanli(i));
  }

  // repeated .WuhunActivity.AccChangeItem jindu = 5;
  total_size += 1 * this->jindu_size();
  for (int i = 0; i < this->jindu_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jindu(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QunXingHuiJu::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QunXingHuiJu* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QunXingHuiJu*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QunXingHuiJu::MergeFrom(const QunXingHuiJu& from) {
  GOOGLE_CHECK_NE(&from, this);
  daily_.MergeFrom(from.daily_);
  total_.MergeFrom(from.total_);
  yanhui_.MergeFrom(from.yanhui_);
  zhanli_.MergeFrom(from.zhanli_);
  jindu_.MergeFrom(from.jindu_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QunXingHuiJu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QunXingHuiJu::CopyFrom(const QunXingHuiJu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QunXingHuiJu::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->daily())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->total())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->yanhui())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->zhanli())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->jindu())) return false;
  return true;
}

void QunXingHuiJu::Swap(QunXingHuiJu* other) {
  if (other != this) {
    daily_.Swap(&other->daily_);
    total_.Swap(&other->total_);
    yanhui_.Swap(&other->yanhui_);
    zhanli_.Swap(&other->zhanli_);
    jindu_.Swap(&other->jindu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QunXingHuiJu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QunXingHuiJu_descriptor_;
  metadata.reflection = QunXingHuiJu_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Activities::kZhulidaxingdongFieldNumber;
const int Activities::kQunxinghuijuFieldNumber;
#endif  // !_MSC_VER

Activities::Activities()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.Activities)
}

void Activities::InitAsDefaultInstance() {
  qunxinghuiju_ = const_cast< ::WuhunActivity::QunXingHuiJu*>(&::WuhunActivity::QunXingHuiJu::default_instance());
}

Activities::Activities(const Activities& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.Activities)
}

void Activities::SharedCtor() {
  _cached_size_ = 0;
  qunxinghuiju_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Activities::~Activities() {
  // @@protoc_insertion_point(destructor:WuhunActivity.Activities)
  SharedDtor();
}

void Activities::SharedDtor() {
  if (this != default_instance_) {
    delete qunxinghuiju_;
  }
}

void Activities::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activities::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Activities_descriptor_;
}

const Activities& Activities::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

Activities* Activities::default_instance_ = NULL;

Activities* Activities::New() const {
  return new Activities;
}

void Activities::Clear() {
  if (has_qunxinghuiju()) {
    if (qunxinghuiju_ != NULL) qunxinghuiju_->::WuhunActivity::QunXingHuiJu::Clear();
  }
  zhulidaxingdong_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Activities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.Activities)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WuhunActivity.AccChangeItem zhulidaxingdong = 1;
      case 1: {
        if (tag == 10) {
         parse_zhulidaxingdong:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zhulidaxingdong()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_zhulidaxingdong;
        if (input->ExpectTag(18)) goto parse_qunxinghuiju;
        break;
      }

      // required .WuhunActivity.QunXingHuiJu qunxinghuiju = 2;
      case 2: {
        if (tag == 18) {
         parse_qunxinghuiju:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qunxinghuiju()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.Activities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.Activities)
  return false;
#undef DO_
}

void Activities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.Activities)
  // repeated .WuhunActivity.AccChangeItem zhulidaxingdong = 1;
  for (int i = 0; i < this->zhulidaxingdong_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zhulidaxingdong(i), output);
  }

  // required .WuhunActivity.QunXingHuiJu qunxinghuiju = 2;
  if (has_qunxinghuiju()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->qunxinghuiju(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.Activities)
}

::google::protobuf::uint8* Activities::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.Activities)
  // repeated .WuhunActivity.AccChangeItem zhulidaxingdong = 1;
  for (int i = 0; i < this->zhulidaxingdong_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->zhulidaxingdong(i), target);
  }

  // required .WuhunActivity.QunXingHuiJu qunxinghuiju = 2;
  if (has_qunxinghuiju()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->qunxinghuiju(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.Activities)
  return target;
}

int Activities::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .WuhunActivity.QunXingHuiJu qunxinghuiju = 2;
    if (has_qunxinghuiju()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->qunxinghuiju());
    }

  }
  // repeated .WuhunActivity.AccChangeItem zhulidaxingdong = 1;
  total_size += 1 * this->zhulidaxingdong_size();
  for (int i = 0; i < this->zhulidaxingdong_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zhulidaxingdong(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activities::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Activities* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Activities*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Activities::MergeFrom(const Activities& from) {
  GOOGLE_CHECK_NE(&from, this);
  zhulidaxingdong_.MergeFrom(from.zhulidaxingdong_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_qunxinghuiju()) {
      mutable_qunxinghuiju()->::WuhunActivity::QunXingHuiJu::MergeFrom(from.qunxinghuiju());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Activities::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activities::CopyFrom(const Activities& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activities::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->zhulidaxingdong())) return false;
  if (has_qunxinghuiju()) {
    if (!this->qunxinghuiju().IsInitialized()) return false;
  }
  return true;
}

void Activities::Swap(Activities* other) {
  if (other != this) {
    zhulidaxingdong_.Swap(&other->zhulidaxingdong_);
    std::swap(qunxinghuiju_, other->qunxinghuiju_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Activities::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Activities_descriptor_;
  metadata.reflection = Activities_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserInfo::kUidFieldNumber;
const int UserInfo::kNameFieldNumber;
const int UserInfo::kUrlFieldNumber;
const int UserInfo::kChargeFieldNumber;
#endif  // !_MSC_VER

UserInfo::UserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.UserInfo)
}

void UserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charge_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:WuhunActivity.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

UserInfo* UserInfo::default_instance_ = NULL;

UserInfo* UserInfo::New() const {
  return new UserInfo;
}

void UserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uid_, charge_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // required string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_charge;
        break;
      }

      // required uint32 charge = 4;
      case 4: {
        if (tag == 32) {
         parse_charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charge_)));
          set_has_charge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.UserInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // required uint32 charge = 4;
  if (has_charge()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->charge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.UserInfo)
}

::google::protobuf::uint8* UserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.UserInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // required uint32 charge = 4;
  if (has_charge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->charge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.UserInfo)
  return target;
}

int UserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // required uint32 charge = 4;
    if (has_charge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charge());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_charge()) {
      set_charge(from.charge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(url_, other->url_);
    std::swap(charge_, other->charge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MasterInfo::kInfoFieldNumber;
const int MasterInfo::kTsFieldNumber;
const int MasterInfo::kHelperFieldNumber;
#endif  // !_MSC_VER

MasterInfo::MasterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.MasterInfo)
}

void MasterInfo::InitAsDefaultInstance() {
  info_ = const_cast< ::WuhunActivity::UserInfo*>(&::WuhunActivity::UserInfo::default_instance());
}

MasterInfo::MasterInfo(const MasterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.MasterInfo)
}

void MasterInfo::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MasterInfo::~MasterInfo() {
  // @@protoc_insertion_point(destructor:WuhunActivity.MasterInfo)
  SharedDtor();
}

void MasterInfo::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void MasterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MasterInfo_descriptor_;
}

const MasterInfo& MasterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

MasterInfo* MasterInfo::default_instance_ = NULL;

MasterInfo* MasterInfo::New() const {
  return new MasterInfo;
}

void MasterInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_info()) {
      if (info_ != NULL) info_->::WuhunActivity::UserInfo::Clear();
    }
    ts_ = 0u;
  }
  helper_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MasterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.MasterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .WuhunActivity.UserInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_helper;
        break;
      }

      // repeated .WuhunActivity.UserInfo helper = 3;
      case 3: {
        if (tag == 26) {
         parse_helper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_helper()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_helper;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.MasterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.MasterInfo)
  return false;
#undef DO_
}

void MasterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.MasterInfo)
  // required .WuhunActivity.UserInfo info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // repeated .WuhunActivity.UserInfo helper = 3;
  for (int i = 0; i < this->helper_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->helper(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.MasterInfo)
}

::google::protobuf::uint8* MasterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.MasterInfo)
  // required .WuhunActivity.UserInfo info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // repeated .WuhunActivity.UserInfo helper = 3;
  for (int i = 0; i < this->helper_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->helper(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.MasterInfo)
  return target;
}

int MasterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .WuhunActivity.UserInfo info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  // repeated .WuhunActivity.UserInfo helper = 3;
  total_size += 1 * this->helper_size();
  for (int i = 0; i < this->helper_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->helper(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MasterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MasterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MasterInfo::MergeFrom(const MasterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  helper_.MergeFrom(from.helper_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::WuhunActivity::UserInfo::MergeFrom(from.info());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MasterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterInfo::CopyFrom(const MasterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->helper())) return false;
  return true;
}

void MasterInfo::Swap(MasterInfo* other) {
  if (other != this) {
    std::swap(info_, other->info_);
    std::swap(ts_, other->ts_);
    helper_.Swap(&other->helper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MasterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MasterInfo_descriptor_;
  metadata.reflection = MasterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HelperMaster::kUidFieldNumber;
const int HelperMaster::kRefusedFieldNumber;
#endif  // !_MSC_VER

HelperMaster::HelperMaster()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.HelperMaster)
}

void HelperMaster::InitAsDefaultInstance() {
}

HelperMaster::HelperMaster(const HelperMaster& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.HelperMaster)
}

void HelperMaster::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  refused_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HelperMaster::~HelperMaster() {
  // @@protoc_insertion_point(destructor:WuhunActivity.HelperMaster)
  SharedDtor();
}

void HelperMaster::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HelperMaster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelperMaster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelperMaster_descriptor_;
}

const HelperMaster& HelperMaster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

HelperMaster* HelperMaster::default_instance_ = NULL;

HelperMaster* HelperMaster::New() const {
  return new HelperMaster;
}

void HelperMaster::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HelperMaster*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uid_, refused_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HelperMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.HelperMaster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_refused;
        break;
      }

      // required bool refused = 2;
      case 2: {
        if (tag == 16) {
         parse_refused:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refused_)));
          set_has_refused();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.HelperMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.HelperMaster)
  return false;
#undef DO_
}

void HelperMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.HelperMaster)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required bool refused = 2;
  if (has_refused()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->refused(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.HelperMaster)
}

::google::protobuf::uint8* HelperMaster::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.HelperMaster)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required bool refused = 2;
  if (has_refused()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->refused(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.HelperMaster)
  return target;
}

int HelperMaster::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required bool refused = 2;
    if (has_refused()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelperMaster::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HelperMaster* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HelperMaster*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelperMaster::MergeFrom(const HelperMaster& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_refused()) {
      set_refused(from.refused());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HelperMaster::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelperMaster::CopyFrom(const HelperMaster& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelperMaster::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HelperMaster::Swap(HelperMaster* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(refused_, other->refused_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HelperMaster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelperMaster_descriptor_;
  metadata.reflection = HelperMaster_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HelperInfo::kUidFieldNumber;
const int HelperInfo::kMasterFieldNumber;
#endif  // !_MSC_VER

HelperInfo::HelperInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.HelperInfo)
}

void HelperInfo::InitAsDefaultInstance() {
}

HelperInfo::HelperInfo(const HelperInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.HelperInfo)
}

void HelperInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HelperInfo::~HelperInfo() {
  // @@protoc_insertion_point(destructor:WuhunActivity.HelperInfo)
  SharedDtor();
}

void HelperInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HelperInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelperInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelperInfo_descriptor_;
}

const HelperInfo& HelperInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

HelperInfo* HelperInfo::default_instance_ = NULL;

HelperInfo* HelperInfo::New() const {
  return new HelperInfo;
}

void HelperInfo::Clear() {
  uid_ = 0u;
  master_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HelperInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.HelperInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_master;
        break;
      }

      // repeated .WuhunActivity.HelperMaster master = 2;
      case 2: {
        if (tag == 18) {
         parse_master:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_master()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_master;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.HelperInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.HelperInfo)
  return false;
#undef DO_
}

void HelperInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.HelperInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // repeated .WuhunActivity.HelperMaster master = 2;
  for (int i = 0; i < this->master_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->master(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.HelperInfo)
}

::google::protobuf::uint8* HelperInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.HelperInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // repeated .WuhunActivity.HelperMaster master = 2;
  for (int i = 0; i < this->master_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->master(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.HelperInfo)
  return target;
}

int HelperInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  // repeated .WuhunActivity.HelperMaster master = 2;
  total_size += 1 * this->master_size();
  for (int i = 0; i < this->master_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->master(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelperInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HelperInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HelperInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelperInfo::MergeFrom(const HelperInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  master_.MergeFrom(from.master_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HelperInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelperInfo::CopyFrom(const HelperInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelperInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->master())) return false;
  return true;
}

void HelperInfo::Swap(HelperInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    master_.Swap(&other->master_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HelperInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelperInfo_descriptor_;
  metadata.reflection = HelperInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RankInfo::kUidFieldNumber;
const int RankInfo::kCountFieldNumber;
const int RankInfo::kTsFieldNumber;
const int RankInfo::kNameFieldNumber;
#endif  // !_MSC_VER

RankInfo::RankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.RankInfo)
}

void RankInfo::InitAsDefaultInstance() {
}

RankInfo::RankInfo(const RankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.RankInfo)
}

void RankInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  count_ = 0u;
  ts_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankInfo::~RankInfo() {
  // @@protoc_insertion_point(destructor:WuhunActivity.RankInfo)
  SharedDtor();
}

void RankInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankInfo_descriptor_;
}

const RankInfo& RankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

RankInfo* RankInfo::default_instance_ = NULL;

RankInfo* RankInfo::New() const {
  return new RankInfo;
}

void RankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uid_, count_);
    ts_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.RankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ts;
        break;
      }

      // required uint32 ts = 3;
      case 3: {
        if (tag == 24) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.RankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.RankInfo)
  return false;
#undef DO_
}

void RankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.RankInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // required uint32 ts = 3;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ts(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.RankInfo)
}

::google::protobuf::uint8* RankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.RankInfo)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // required uint32 ts = 3;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ts(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.RankInfo)
  return target;
}

int RankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // required uint32 ts = 3;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankInfo::MergeFrom(const RankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankInfo::CopyFrom(const RankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RankInfo::Swap(RankInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(count_, other->count_);
    std::swap(ts_, other->ts_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankInfo_descriptor_;
  metadata.reflection = RankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiveHelpActive::kVersionFieldNumber;
const int GiveHelpActive::kRewardFieldNumber;
const int GiveHelpActive::kMastersFieldNumber;
const int GiveHelpActive::kHelpersFieldNumber;
const int GiveHelpActive::kRanksFieldNumber;
#endif  // !_MSC_VER

GiveHelpActive::GiveHelpActive()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WuhunActivity.GiveHelpActive)
}

void GiveHelpActive::InitAsDefaultInstance() {
}

GiveHelpActive::GiveHelpActive(const GiveHelpActive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WuhunActivity.GiveHelpActive)
}

void GiveHelpActive::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  reward_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiveHelpActive::~GiveHelpActive() {
  // @@protoc_insertion_point(destructor:WuhunActivity.GiveHelpActive)
  SharedDtor();
}

void GiveHelpActive::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiveHelpActive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiveHelpActive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiveHelpActive_descriptor_;
}

const GiveHelpActive& GiveHelpActive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WuhunActivity_2eproto();
  return *default_instance_;
}

GiveHelpActive* GiveHelpActive::default_instance_ = NULL;

GiveHelpActive* GiveHelpActive::New() const {
  return new GiveHelpActive;
}

void GiveHelpActive::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GiveHelpActive*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(version_, reward_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  masters_.Clear();
  helpers_.Clear();
  ranks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiveHelpActive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WuhunActivity.GiveHelpActive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reward;
        break;
      }

      // required bool reward = 2;
      case 2: {
        if (tag == 16) {
         parse_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reward_)));
          set_has_reward();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_masters;
        break;
      }

      // repeated .WuhunActivity.MasterInfo masters = 3;
      case 3: {
        if (tag == 26) {
         parse_masters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_masters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_masters;
        if (input->ExpectTag(34)) goto parse_helpers;
        break;
      }

      // repeated .WuhunActivity.HelperInfo helpers = 4;
      case 4: {
        if (tag == 34) {
         parse_helpers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_helpers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_helpers;
        if (input->ExpectTag(42)) goto parse_ranks;
        break;
      }

      // repeated .WuhunActivity.RankInfo ranks = 5;
      case 5: {
        if (tag == 42) {
         parse_ranks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ranks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ranks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WuhunActivity.GiveHelpActive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WuhunActivity.GiveHelpActive)
  return false;
#undef DO_
}

void GiveHelpActive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WuhunActivity.GiveHelpActive)
  // required uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // required bool reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reward(), output);
  }

  // repeated .WuhunActivity.MasterInfo masters = 3;
  for (int i = 0; i < this->masters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->masters(i), output);
  }

  // repeated .WuhunActivity.HelperInfo helpers = 4;
  for (int i = 0; i < this->helpers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->helpers(i), output);
  }

  // repeated .WuhunActivity.RankInfo ranks = 5;
  for (int i = 0; i < this->ranks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->ranks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WuhunActivity.GiveHelpActive)
}

::google::protobuf::uint8* GiveHelpActive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WuhunActivity.GiveHelpActive)
  // required uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // required bool reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reward(), target);
  }

  // repeated .WuhunActivity.MasterInfo masters = 3;
  for (int i = 0; i < this->masters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->masters(i), target);
  }

  // repeated .WuhunActivity.HelperInfo helpers = 4;
  for (int i = 0; i < this->helpers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->helpers(i), target);
  }

  // repeated .WuhunActivity.RankInfo ranks = 5;
  for (int i = 0; i < this->ranks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->ranks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WuhunActivity.GiveHelpActive)
  return target;
}

int GiveHelpActive::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // required bool reward = 2;
    if (has_reward()) {
      total_size += 1 + 1;
    }

  }
  // repeated .WuhunActivity.MasterInfo masters = 3;
  total_size += 1 * this->masters_size();
  for (int i = 0; i < this->masters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->masters(i));
  }

  // repeated .WuhunActivity.HelperInfo helpers = 4;
  total_size += 1 * this->helpers_size();
  for (int i = 0; i < this->helpers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->helpers(i));
  }

  // repeated .WuhunActivity.RankInfo ranks = 5;
  total_size += 1 * this->ranks_size();
  for (int i = 0; i < this->ranks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranks(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiveHelpActive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiveHelpActive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiveHelpActive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiveHelpActive::MergeFrom(const GiveHelpActive& from) {
  GOOGLE_CHECK_NE(&from, this);
  masters_.MergeFrom(from.masters_);
  helpers_.MergeFrom(from.helpers_);
  ranks_.MergeFrom(from.ranks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiveHelpActive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiveHelpActive::CopyFrom(const GiveHelpActive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiveHelpActive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->masters())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->helpers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ranks())) return false;
  return true;
}

void GiveHelpActive::Swap(GiveHelpActive* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(reward_, other->reward_);
    masters_.Swap(&other->masters_);
    helpers_.Swap(&other->helpers_);
    ranks_.Swap(&other->ranks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiveHelpActive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiveHelpActive_descriptor_;
  metadata.reflection = GiveHelpActive_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace WuhunActivity

// @@protoc_insertion_point(global_scope)
