// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace test {

namespace {

const ::google::protobuf::Descriptor* tm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tm_reflection_ = NULL;
const ::google::protobuf::Descriptor* test_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  test_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  tm_descriptor_ = file->message_type(0);
  static const int tm_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, tm8_),
  };
  tm_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tm_descriptor_,
      tm::default_instance_,
      tm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tm, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tm));
  test_descriptor_ = file->message_type(1);
  static const int test_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, test10_),
  };
  test_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      test_descriptor_,
      test::default_instance_,
      test_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(test));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tm_descriptor_, &tm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    test_descriptor_, &test::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete tm::default_instance_;
  delete tm_reflection_;
  delete test::default_instance_;
  delete test_reflection_;
}

void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\004test\"l\n\002tm\022\013\n\003tm1\030\001 \002(\005\022\013\n"
    "\003tm2\030\002 \002(\r\022\013\n\003tm3\030\003 \002(\003\022\013\n\003tm4\030\004 \002(\004\022\013\n\003"
    "tm5\030\005 \002(\002\022\013\n\003tm6\030\006 \002(\001\022\013\n\003tm7\030\007 \002(\t\022\013\n\003t"
    "m8\030\010 \002(\010\"\261\001\n\004test\022\r\n\005test1\030\001 \003(\005\022\r\n\005test"
    "2\030\002 \003(\r\022\r\n\005test3\030\003 \003(\003\022\r\n\005test4\030\004 \003(\004\022\r\n"
    "\005test5\030\005 \003(\002\022\r\n\005test6\030\006 \003(\001\022\r\n\005test7\030\007 \003"
    "(\t\022\r\n\005test8\030\010 \003(\010\022\027\n\005test9\030\t \002(\0132\010.test."
    "tm\022\030\n\006test10\030\n \003(\0132\010.test.tm", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  tm::default_instance_ = new tm();
  test::default_instance_ = new test();
  tm::default_instance_->InitAsDefaultInstance();
  test::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int tm::kTm1FieldNumber;
const int tm::kTm2FieldNumber;
const int tm::kTm3FieldNumber;
const int tm::kTm4FieldNumber;
const int tm::kTm5FieldNumber;
const int tm::kTm6FieldNumber;
const int tm::kTm7FieldNumber;
const int tm::kTm8FieldNumber;
#endif  // !_MSC_VER

tm::tm()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.tm)
}

void tm::InitAsDefaultInstance() {
}

tm::tm(const tm& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.tm)
}

void tm::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tm1_ = 0;
  tm2_ = 0u;
  tm3_ = GOOGLE_LONGLONG(0);
  tm4_ = GOOGLE_ULONGLONG(0);
  tm5_ = 0;
  tm6_ = 0;
  tm7_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tm8_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tm::~tm() {
  // @@protoc_insertion_point(destructor:test.tm)
  SharedDtor();
}

void tm::SharedDtor() {
  if (tm7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tm7_;
  }
  if (this != default_instance_) {
  }
}

void tm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tm_descriptor_;
}

const tm& tm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

tm* tm::default_instance_ = NULL;

tm* tm::New() const {
  return new tm;
}

void tm::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<tm*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(tm1_, tm8_);
    if (has_tm7()) {
      if (tm7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tm7_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.tm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 tm1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tm1_)));
          set_has_tm1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tm2;
        break;
      }

      // required uint32 tm2 = 2;
      case 2: {
        if (tag == 16) {
         parse_tm2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tm2_)));
          set_has_tm2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tm3;
        break;
      }

      // required int64 tm3 = 3;
      case 3: {
        if (tag == 24) {
         parse_tm3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tm3_)));
          set_has_tm3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tm4;
        break;
      }

      // required uint64 tm4 = 4;
      case 4: {
        if (tag == 32) {
         parse_tm4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tm4_)));
          set_has_tm4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_tm5;
        break;
      }

      // required float tm5 = 5;
      case 5: {
        if (tag == 45) {
         parse_tm5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tm5_)));
          set_has_tm5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_tm6;
        break;
      }

      // required double tm6 = 6;
      case 6: {
        if (tag == 49) {
         parse_tm6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tm6_)));
          set_has_tm6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tm7;
        break;
      }

      // required string tm7 = 7;
      case 7: {
        if (tag == 58) {
         parse_tm7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tm7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tm7().data(), this->tm7().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tm7");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_tm8;
        break;
      }

      // required bool tm8 = 8;
      case 8: {
        if (tag == 64) {
         parse_tm8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tm8_)));
          set_has_tm8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.tm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.tm)
  return false;
#undef DO_
}

void tm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.tm)
  // required int32 tm1 = 1;
  if (has_tm1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tm1(), output);
  }

  // required uint32 tm2 = 2;
  if (has_tm2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tm2(), output);
  }

  // required int64 tm3 = 3;
  if (has_tm3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tm3(), output);
  }

  // required uint64 tm4 = 4;
  if (has_tm4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->tm4(), output);
  }

  // required float tm5 = 5;
  if (has_tm5()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->tm5(), output);
  }

  // required double tm6 = 6;
  if (has_tm6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->tm6(), output);
  }

  // required string tm7 = 7;
  if (has_tm7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tm7().data(), this->tm7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tm7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->tm7(), output);
  }

  // required bool tm8 = 8;
  if (has_tm8()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->tm8(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:test.tm)
}

::google::protobuf::uint8* tm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.tm)
  // required int32 tm1 = 1;
  if (has_tm1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tm1(), target);
  }

  // required uint32 tm2 = 2;
  if (has_tm2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tm2(), target);
  }

  // required int64 tm3 = 3;
  if (has_tm3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tm3(), target);
  }

  // required uint64 tm4 = 4;
  if (has_tm4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->tm4(), target);
  }

  // required float tm5 = 5;
  if (has_tm5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->tm5(), target);
  }

  // required double tm6 = 6;
  if (has_tm6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->tm6(), target);
  }

  // required string tm7 = 7;
  if (has_tm7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tm7().data(), this->tm7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tm7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->tm7(), target);
  }

  // required bool tm8 = 8;
  if (has_tm8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->tm8(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.tm)
  return target;
}

int tm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 tm1 = 1;
    if (has_tm1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tm1());
    }

    // required uint32 tm2 = 2;
    if (has_tm2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tm2());
    }

    // required int64 tm3 = 3;
    if (has_tm3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tm3());
    }

    // required uint64 tm4 = 4;
    if (has_tm4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tm4());
    }

    // required float tm5 = 5;
    if (has_tm5()) {
      total_size += 1 + 4;
    }

    // required double tm6 = 6;
    if (has_tm6()) {
      total_size += 1 + 8;
    }

    // required string tm7 = 7;
    if (has_tm7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tm7());
    }

    // required bool tm8 = 8;
    if (has_tm8()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tm::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tm* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tm*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tm::MergeFrom(const tm& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tm1()) {
      set_tm1(from.tm1());
    }
    if (from.has_tm2()) {
      set_tm2(from.tm2());
    }
    if (from.has_tm3()) {
      set_tm3(from.tm3());
    }
    if (from.has_tm4()) {
      set_tm4(from.tm4());
    }
    if (from.has_tm5()) {
      set_tm5(from.tm5());
    }
    if (from.has_tm6()) {
      set_tm6(from.tm6());
    }
    if (from.has_tm7()) {
      set_tm7(from.tm7());
    }
    if (from.has_tm8()) {
      set_tm8(from.tm8());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tm::CopyFrom(const tm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tm::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void tm::Swap(tm* other) {
  if (other != this) {
    std::swap(tm1_, other->tm1_);
    std::swap(tm2_, other->tm2_);
    std::swap(tm3_, other->tm3_);
    std::swap(tm4_, other->tm4_);
    std::swap(tm5_, other->tm5_);
    std::swap(tm6_, other->tm6_);
    std::swap(tm7_, other->tm7_);
    std::swap(tm8_, other->tm8_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tm_descriptor_;
  metadata.reflection = tm_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int test::kTest1FieldNumber;
const int test::kTest2FieldNumber;
const int test::kTest3FieldNumber;
const int test::kTest4FieldNumber;
const int test::kTest5FieldNumber;
const int test::kTest6FieldNumber;
const int test::kTest7FieldNumber;
const int test::kTest8FieldNumber;
const int test::kTest9FieldNumber;
const int test::kTest10FieldNumber;
#endif  // !_MSC_VER

test::test()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.test)
}

void test::InitAsDefaultInstance() {
  test9_ = const_cast< ::test::tm*>(&::test::tm::default_instance());
}

test::test(const test& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.test)
}

void test::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test9_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

test::~test() {
  // @@protoc_insertion_point(destructor:test.test)
  SharedDtor();
}

void test::SharedDtor() {
  if (this != default_instance_) {
    delete test9_;
  }
}

void test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* test::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return test_descriptor_;
}

const test& test::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

test* test::default_instance_ = NULL;

test* test::New() const {
  return new test;
}

void test::Clear() {
  if (has_test9()) {
    if (test9_ != NULL) test9_->::test::tm::Clear();
  }
  test1_.Clear();
  test2_.Clear();
  test3_.Clear();
  test4_.Clear();
  test5_.Clear();
  test6_.Clear();
  test7_.Clear();
  test8_.Clear();
  test10_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 test1 = 1;
      case 1: {
        if (tag == 8) {
         parse_test1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_test1())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_test1;
        if (input->ExpectTag(16)) goto parse_test2;
        break;
      }

      // repeated uint32 test2 = 2;
      case 2: {
        if (tag == 16) {
         parse_test2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_test2())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_test2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_test2;
        if (input->ExpectTag(24)) goto parse_test3;
        break;
      }

      // repeated int64 test3 = 3;
      case 3: {
        if (tag == 24) {
         parse_test3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_test3())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_test3())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_test3;
        if (input->ExpectTag(32)) goto parse_test4;
        break;
      }

      // repeated uint64 test4 = 4;
      case 4: {
        if (tag == 32) {
         parse_test4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_test4())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_test4())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_test4;
        if (input->ExpectTag(45)) goto parse_test5;
        break;
      }

      // repeated float test5 = 5;
      case 5: {
        if (tag == 45) {
         parse_test5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45, input, this->mutable_test5())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_test5())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_test5;
        if (input->ExpectTag(49)) goto parse_test6;
        break;
      }

      // repeated double test6 = 6;
      case 6: {
        if (tag == 49) {
         parse_test6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_test6())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_test6())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_test6;
        if (input->ExpectTag(58)) goto parse_test7;
        break;
      }

      // repeated string test7 = 7;
      case 7: {
        if (tag == 58) {
         parse_test7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test7(this->test7_size() - 1).data(),
            this->test7(this->test7_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test7");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_test7;
        if (input->ExpectTag(64)) goto parse_test8;
        break;
      }

      // repeated bool test8 = 8;
      case 8: {
        if (tag == 64) {
         parse_test8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 64, input, this->mutable_test8())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_test8())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_test8;
        if (input->ExpectTag(74)) goto parse_test9;
        break;
      }

      // required .test.tm test9 = 9;
      case 9: {
        if (tag == 74) {
         parse_test9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test9()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_test10;
        break;
      }

      // repeated .test.tm test10 = 10;
      case 10: {
        if (tag == 82) {
         parse_test10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_test10()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_test10;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.test)
  return false;
#undef DO_
}

void test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.test)
  // repeated int32 test1 = 1;
  for (int i = 0; i < this->test1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->test1(i), output);
  }

  // repeated uint32 test2 = 2;
  for (int i = 0; i < this->test2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->test2(i), output);
  }

  // repeated int64 test3 = 3;
  for (int i = 0; i < this->test3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->test3(i), output);
  }

  // repeated uint64 test4 = 4;
  for (int i = 0; i < this->test4_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->test4(i), output);
  }

  // repeated float test5 = 5;
  for (int i = 0; i < this->test5_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->test5(i), output);
  }

  // repeated double test6 = 6;
  for (int i = 0; i < this->test6_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->test6(i), output);
  }

  // repeated string test7 = 7;
  for (int i = 0; i < this->test7_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->test7(i).data(), this->test7(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "test7");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->test7(i), output);
  }

  // repeated bool test8 = 8;
  for (int i = 0; i < this->test8_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      8, this->test8(i), output);
  }

  // required .test.tm test9 = 9;
  if (has_test9()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->test9(), output);
  }

  // repeated .test.tm test10 = 10;
  for (int i = 0; i < this->test10_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->test10(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:test.test)
}

::google::protobuf::uint8* test::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.test)
  // repeated int32 test1 = 1;
  for (int i = 0; i < this->test1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->test1(i), target);
  }

  // repeated uint32 test2 = 2;
  for (int i = 0; i < this->test2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->test2(i), target);
  }

  // repeated int64 test3 = 3;
  for (int i = 0; i < this->test3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->test3(i), target);
  }

  // repeated uint64 test4 = 4;
  for (int i = 0; i < this->test4_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->test4(i), target);
  }

  // repeated float test5 = 5;
  for (int i = 0; i < this->test5_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(5, this->test5(i), target);
  }

  // repeated double test6 = 6;
  for (int i = 0; i < this->test6_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->test6(i), target);
  }

  // repeated string test7 = 7;
  for (int i = 0; i < this->test7_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test7(i).data(), this->test7(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test7");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->test7(i), target);
  }

  // repeated bool test8 = 8;
  for (int i = 0; i < this->test8_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(8, this->test8(i), target);
  }

  // required .test.tm test9 = 9;
  if (has_test9()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->test9(), target);
  }

  // repeated .test.tm test10 = 10;
  for (int i = 0; i < this->test10_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->test10(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.test)
  return target;
}

int test::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .test.tm test9 = 9;
    if (has_test9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->test9());
    }

  }
  // repeated int32 test1 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->test1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->test1(i));
    }
    total_size += 1 * this->test1_size() + data_size;
  }

  // repeated uint32 test2 = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->test2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->test2(i));
    }
    total_size += 1 * this->test2_size() + data_size;
  }

  // repeated int64 test3 = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->test3_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->test3(i));
    }
    total_size += 1 * this->test3_size() + data_size;
  }

  // repeated uint64 test4 = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->test4_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->test4(i));
    }
    total_size += 1 * this->test4_size() + data_size;
  }

  // repeated float test5 = 5;
  {
    int data_size = 0;
    data_size = 4 * this->test5_size();
    total_size += 1 * this->test5_size() + data_size;
  }

  // repeated double test6 = 6;
  {
    int data_size = 0;
    data_size = 8 * this->test6_size();
    total_size += 1 * this->test6_size() + data_size;
  }

  // repeated string test7 = 7;
  total_size += 1 * this->test7_size();
  for (int i = 0; i < this->test7_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test7(i));
  }

  // repeated bool test8 = 8;
  {
    int data_size = 0;
    data_size = 1 * this->test8_size();
    total_size += 1 * this->test8_size() + data_size;
  }

  // repeated .test.tm test10 = 10;
  total_size += 1 * this->test10_size();
  for (int i = 0; i < this->test10_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->test10(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void test::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const test* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const test*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void test::MergeFrom(const test& from) {
  GOOGLE_CHECK_NE(&from, this);
  test1_.MergeFrom(from.test1_);
  test2_.MergeFrom(from.test2_);
  test3_.MergeFrom(from.test3_);
  test4_.MergeFrom(from.test4_);
  test5_.MergeFrom(from.test5_);
  test6_.MergeFrom(from.test6_);
  test7_.MergeFrom(from.test7_);
  test8_.MergeFrom(from.test8_);
  test10_.MergeFrom(from.test10_);
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_test9()) {
      mutable_test9()->::test::tm::MergeFrom(from.test9());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void test::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void test::CopyFrom(const test& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool test::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000100) != 0x00000100) return false;

  if (has_test9()) {
    if (!this->test9().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->test10())) return false;
  return true;
}

void test::Swap(test* other) {
  if (other != this) {
    test1_.Swap(&other->test1_);
    test2_.Swap(&other->test2_);
    test3_.Swap(&other->test3_);
    test4_.Swap(&other->test4_);
    test5_.Swap(&other->test5_);
    test6_.Swap(&other->test6_);
    test7_.Swap(&other->test7_);
    test8_.Swap(&other->test8_);
    std::swap(test9_, other->test9_);
    test10_.Swap(&other->test10_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata test::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = test_descriptor_;
  metadata.reflection = test_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)
