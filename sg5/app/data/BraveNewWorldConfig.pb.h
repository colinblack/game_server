// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BraveNewWorldConfig.proto

#ifndef PROTOBUF_BraveNewWorldConfig_2eproto__INCLUDED
#define PROTOBUF_BraveNewWorldConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace BraveNewWorldConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

class Point;
class Property;
class Zone;
class City;
class Tech;
class ZoneArea;
class RewardConfig;
class Mission;
class Task;
class Technology;
class FortTechlonogy;
class BraveNewWorldConfig;

// ===================================================================

class Point : public ::google::protobuf::Message {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  Point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 npc = 5;
  inline bool has_npc() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 5;
  inline ::google::protobuf::uint32 npc() const;
  inline void set_npc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Point)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_npc();
  inline void clear_has_npc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 npc_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Property : public ::google::protobuf::Message {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  void Swap(Property* other);

  // implements Message ----------------------------------------------

  Property* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 occupy = 3;
  inline bool has_occupy() const;
  inline void clear_occupy();
  static const int kOccupyFieldNumber = 3;
  inline ::google::protobuf::uint32 occupy() const;
  inline void set_occupy(::google::protobuf::uint32 value);

  // required uint32 product = 4;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 4;
  inline ::google::protobuf::uint32 product() const;
  inline void set_product(::google::protobuf::uint32 value);

  // repeated uint32 npc = 5;
  inline int npc_size() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 5;
  inline ::google::protobuf::uint32 npc(int index) const;
  inline void set_npc(int index, ::google::protobuf::uint32 value);
  inline void add_npc(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      npc() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_npc();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Property)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_occupy();
  inline void clear_has_occupy();
  inline void set_has_product();
  inline void clear_has_product();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 occupy_;
  ::google::protobuf::uint32 product_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npc_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Property* default_instance_;
};
// -------------------------------------------------------------------

class Zone : public ::google::protobuf::Message {
 public:
  Zone();
  virtual ~Zone();

  Zone(const Zone& from);

  inline Zone& operator=(const Zone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone& default_instance();

  void Swap(Zone* other);

  // implements Message ----------------------------------------------

  Zone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone& from);
  void MergeFrom(const Zone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 product = 2;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 2;
  inline ::google::protobuf::uint32 product() const;
  inline void set_product(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Zone)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_product();
  inline void clear_has_product();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 product_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Zone* default_instance_;
};
// -------------------------------------------------------------------

class City : public ::google::protobuf::Message {
 public:
  City();
  virtual ~City();

  City(const City& from);

  inline City& operator=(const City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const City& default_instance();

  void Swap(City* other);

  // implements Message ----------------------------------------------

  City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const City& from);
  void MergeFrom(const City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 need = 2;
  inline bool has_need() const;
  inline void clear_need();
  static const int kNeedFieldNumber = 2;
  inline ::google::protobuf::uint32 need() const;
  inline void set_need(::google::protobuf::uint32 value);

  // required uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.City)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_need();
  inline void clear_has_need();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 need_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static City* default_instance_;
};
// -------------------------------------------------------------------

class Tech : public ::google::protobuf::Message {
 public:
  Tech();
  virtual ~Tech();

  Tech(const Tech& from);

  inline Tech& operator=(const Tech& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tech& default_instance();

  void Swap(Tech* other);

  // implements Message ----------------------------------------------

  Tech* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tech& from);
  void MergeFrom(const Tech& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cost = 1;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 1;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // required uint32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // repeated uint32 value = 3;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();

  // optional uint32 ecost = 4;
  inline bool has_ecost() const;
  inline void clear_ecost();
  static const int kEcostFieldNumber = 4;
  inline ::google::protobuf::uint32 ecost() const;
  inline void set_ecost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Tech)
 private:
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_ecost();
  inline void clear_has_ecost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::uint32 cd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  ::google::protobuf::uint32 ecost_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Tech* default_instance_;
};
// -------------------------------------------------------------------

class ZoneArea : public ::google::protobuf::Message {
 public:
  ZoneArea();
  virtual ~ZoneArea();

  ZoneArea(const ZoneArea& from);

  inline ZoneArea& operator=(const ZoneArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneArea& default_instance();

  void Swap(ZoneArea* other);

  // implements Message ----------------------------------------------

  ZoneArea* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneArea& from);
  void MergeFrom(const ZoneArea& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 lu = 1;
  inline int lu_size() const;
  inline void clear_lu();
  static const int kLuFieldNumber = 1;
  inline ::google::protobuf::uint32 lu(int index) const;
  inline void set_lu(int index, ::google::protobuf::uint32 value);
  inline void add_lu(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lu() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lu();

  // repeated uint32 rd = 2;
  inline int rd_size() const;
  inline void clear_rd();
  static const int kRdFieldNumber = 2;
  inline ::google::protobuf::uint32 rd(int index) const;
  inline void set_rd(int index, ::google::protobuf::uint32 value);
  inline void add_rd(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rd();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.ZoneArea)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lu_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rd_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static ZoneArea* default_instance_;
};
// -------------------------------------------------------------------

class RewardConfig : public ::google::protobuf::Message {
 public:
  RewardConfig();
  virtual ~RewardConfig();

  RewardConfig(const RewardConfig& from);

  inline RewardConfig& operator=(const RewardConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardConfig& default_instance();

  void Swap(RewardConfig* other);

  // implements Message ----------------------------------------------

  RewardConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardConfig& from);
  void MergeFrom(const RewardConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 all = 1;
  inline int all_size() const;
  inline void clear_all();
  static const int kAllFieldNumber = 1;
  inline ::google::protobuf::uint32 all(int index) const;
  inline void set_all(int index, ::google::protobuf::uint32 value);
  inline void add_all(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      all() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_all();

  // repeated uint32 one = 2;
  inline int one_size() const;
  inline void clear_one();
  static const int kOneFieldNumber = 2;
  inline ::google::protobuf::uint32 one(int index) const;
  inline void set_one(int index, ::google::protobuf::uint32 value);
  inline void add_one(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      one() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_one();

  // required uint32 user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline ::google::protobuf::uint32 user() const;
  inline void set_user(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.RewardConfig)
 private:
  inline void set_has_user();
  inline void clear_has_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > all_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > one_;
  ::google::protobuf::uint32 user_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static RewardConfig* default_instance_;
};
// -------------------------------------------------------------------

class Mission : public ::google::protobuf::Message {
 public:
  Mission();
  virtual ~Mission();

  Mission(const Mission& from);

  inline Mission& operator=(const Mission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mission& default_instance();

  void Swap(Mission* other);

  // implements Message ----------------------------------------------

  Mission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mission& from);
  void MergeFrom(const Mission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 alliance = 1;
  inline int alliance_size() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 1;
  inline ::google::protobuf::uint32 alliance(int index) const;
  inline void set_alliance(int index, ::google::protobuf::uint32 value);
  inline void add_alliance(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      alliance() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_alliance();

  // required uint32 user2 = 2;
  inline bool has_user2() const;
  inline void clear_user2();
  static const int kUser2FieldNumber = 2;
  inline ::google::protobuf::uint32 user2() const;
  inline void set_user2(::google::protobuf::uint32 value);

  // required uint32 m1 = 3;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 3;
  inline ::google::protobuf::uint32 m1() const;
  inline void set_m1(::google::protobuf::uint32 value);

  // required uint32 m2 = 4;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 4;
  inline ::google::protobuf::uint32 m2() const;
  inline void set_m2(::google::protobuf::uint32 value);

  // required uint32 m3 = 5;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 5;
  inline ::google::protobuf::uint32 m3() const;
  inline void set_m3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Mission)
 private:
  inline void set_has_user2();
  inline void clear_has_user2();
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m3();
  inline void clear_has_m3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > alliance_;
  ::google::protobuf::uint32 user2_;
  ::google::protobuf::uint32 m1_;
  ::google::protobuf::uint32 m2_;
  ::google::protobuf::uint32 m3_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Mission* default_instance_;
};
// -------------------------------------------------------------------

class Task : public ::google::protobuf::Message {
 public:
  Task();
  virtual ~Task();

  Task(const Task& from);

  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Task& default_instance();

  void Swap(Task* other);

  // implements Message ----------------------------------------------

  Task* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Task& from);
  void MergeFrom(const Task& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 require = 2;
  inline bool has_require() const;
  inline void clear_require();
  static const int kRequireFieldNumber = 2;
  inline ::google::protobuf::uint32 require() const;
  inline void set_require(::google::protobuf::uint32 value);

  // repeated uint32 eqid = 3;
  inline int eqid_size() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 3;
  inline ::google::protobuf::uint32 eqid(int index) const;
  inline void set_eqid(int index, ::google::protobuf::uint32 value);
  inline void add_eqid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      eqid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_eqid();

  // repeated uint32 count = 4;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count(int index) const;
  inline void set_count(int index, ::google::protobuf::uint32 value);
  inline void add_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_count();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Task)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_require();
  inline void clear_has_require();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 require_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > eqid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > count_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Task* default_instance_;
};
// -------------------------------------------------------------------

class Technology : public ::google::protobuf::Message {
 public:
  Technology();
  virtual ~Technology();

  Technology(const Technology& from);

  inline Technology& operator=(const Technology& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Technology& default_instance();

  void Swap(Technology* other);

  // implements Message ----------------------------------------------

  Technology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Technology& from);
  void MergeFrom(const Technology& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 add = 3;
  inline bool has_add() const;
  inline void clear_add();
  static const int kAddFieldNumber = 3;
  inline ::google::protobuf::uint32 add() const;
  inline void set_add(::google::protobuf::uint32 value);

  // required uint32 cost = 4;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 4;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // repeated uint32 cost1 = 5;
  inline int cost1_size() const;
  inline void clear_cost1();
  static const int kCost1FieldNumber = 5;
  inline ::google::protobuf::uint32 cost1(int index) const;
  inline void set_cost1(int index, ::google::protobuf::uint32 value);
  inline void add_cost1(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cost1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cost1();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.Technology)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_add();
  inline void clear_has_add();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 add_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cost1_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static Technology* default_instance_;
};
// -------------------------------------------------------------------

class FortTechlonogy : public ::google::protobuf::Message {
 public:
  FortTechlonogy();
  virtual ~FortTechlonogy();

  FortTechlonogy(const FortTechlonogy& from);

  inline FortTechlonogy& operator=(const FortTechlonogy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FortTechlonogy& default_instance();

  void Swap(FortTechlonogy* other);

  // implements Message ----------------------------------------------

  FortTechlonogy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FortTechlonogy& from);
  void MergeFrom(const FortTechlonogy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .BraveNewWorldConfig.Technology node = 3;
  inline int node_size() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 3;
  inline const ::BraveNewWorldConfig::Technology& node(int index) const;
  inline ::BraveNewWorldConfig::Technology* mutable_node(int index);
  inline ::BraveNewWorldConfig::Technology* add_node();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Technology >&
      node() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Technology >*
      mutable_node();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.FortTechlonogy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Technology > node_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static FortTechlonogy* default_instance_;
};
// -------------------------------------------------------------------

class BraveNewWorldConfig : public ::google::protobuf::Message {
 public:
  BraveNewWorldConfig();
  virtual ~BraveNewWorldConfig();

  BraveNewWorldConfig(const BraveNewWorldConfig& from);

  inline BraveNewWorldConfig& operator=(const BraveNewWorldConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BraveNewWorldConfig& default_instance();

  void Swap(BraveNewWorldConfig* other);

  // implements Message ----------------------------------------------

  BraveNewWorldConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BraveNewWorldConfig& from);
  void MergeFrom(const BraveNewWorldConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BraveNewWorldConfig.Point land = 1;
  inline int land_size() const;
  inline void clear_land();
  static const int kLandFieldNumber = 1;
  inline const ::BraveNewWorldConfig::Point& land(int index) const;
  inline ::BraveNewWorldConfig::Point* mutable_land(int index);
  inline ::BraveNewWorldConfig::Point* add_land();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Point >&
      land() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Point >*
      mutable_land();

  // repeated .BraveNewWorldConfig.Property config = 2;
  inline int config_size() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 2;
  inline const ::BraveNewWorldConfig::Property& config(int index) const;
  inline ::BraveNewWorldConfig::Property* mutable_config(int index);
  inline ::BraveNewWorldConfig::Property* add_config();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Property >&
      config() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Property >*
      mutable_config();

  // repeated .BraveNewWorldConfig.Zone zone = 3;
  inline int zone_size() const;
  inline void clear_zone();
  static const int kZoneFieldNumber = 3;
  inline const ::BraveNewWorldConfig::Zone& zone(int index) const;
  inline ::BraveNewWorldConfig::Zone* mutable_zone(int index);
  inline ::BraveNewWorldConfig::Zone* add_zone();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Zone >&
      zone() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Zone >*
      mutable_zone();

  // repeated .BraveNewWorldConfig.City city = 4;
  inline int city_size() const;
  inline void clear_city();
  static const int kCityFieldNumber = 4;
  inline const ::BraveNewWorldConfig::City& city(int index) const;
  inline ::BraveNewWorldConfig::City* mutable_city(int index);
  inline ::BraveNewWorldConfig::City* add_city();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::City >&
      city() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::City >*
      mutable_city();

  // repeated uint32 p_limit = 5;
  inline int p_limit_size() const;
  inline void clear_p_limit();
  static const int kPLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 p_limit(int index) const;
  inline void set_p_limit(int index, ::google::protobuf::uint32 value);
  inline void add_p_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      p_limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_p_limit();

  // repeated uint32 m_limit = 6;
  inline int m_limit_size() const;
  inline void clear_m_limit();
  static const int kMLimitFieldNumber = 6;
  inline ::google::protobuf::uint32 m_limit(int index) const;
  inline void set_m_limit(int index, ::google::protobuf::uint32 value);
  inline void add_m_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      m_limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_m_limit();

  // repeated .BraveNewWorldConfig.Tech tech = 7;
  inline int tech_size() const;
  inline void clear_tech();
  static const int kTechFieldNumber = 7;
  inline const ::BraveNewWorldConfig::Tech& tech(int index) const;
  inline ::BraveNewWorldConfig::Tech* mutable_tech(int index);
  inline ::BraveNewWorldConfig::Tech* add_tech();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Tech >&
      tech() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Tech >*
      mutable_tech();

  // repeated .BraveNewWorldConfig.ZoneArea area = 8;
  inline int area_size() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 8;
  inline const ::BraveNewWorldConfig::ZoneArea& area(int index) const;
  inline ::BraveNewWorldConfig::ZoneArea* mutable_area(int index);
  inline ::BraveNewWorldConfig::ZoneArea* add_area();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::ZoneArea >&
      area() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::ZoneArea >*
      mutable_area();

  // required .BraveNewWorldConfig.RewardConfig reward = 9;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 9;
  inline const ::BraveNewWorldConfig::RewardConfig& reward() const;
  inline ::BraveNewWorldConfig::RewardConfig* mutable_reward();
  inline ::BraveNewWorldConfig::RewardConfig* release_reward();
  inline void set_allocated_reward(::BraveNewWorldConfig::RewardConfig* reward);

  // required .BraveNewWorldConfig.Mission mission = 10;
  inline bool has_mission() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 10;
  inline const ::BraveNewWorldConfig::Mission& mission() const;
  inline ::BraveNewWorldConfig::Mission* mutable_mission();
  inline ::BraveNewWorldConfig::Mission* release_mission();
  inline void set_allocated_mission(::BraveNewWorldConfig::Mission* mission);

  // repeated uint32 huoyue = 11;
  inline int huoyue_size() const;
  inline void clear_huoyue();
  static const int kHuoyueFieldNumber = 11;
  inline ::google::protobuf::uint32 huoyue(int index) const;
  inline void set_huoyue(int index, ::google::protobuf::uint32 value);
  inline void add_huoyue(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      huoyue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_huoyue();

  // repeated .BraveNewWorldConfig.Task task = 12;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 12;
  inline const ::BraveNewWorldConfig::Task& task(int index) const;
  inline ::BraveNewWorldConfig::Task* mutable_task(int index);
  inline ::BraveNewWorldConfig::Task* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Task >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Task >*
      mutable_task();

  // repeated .BraveNewWorldConfig.FortTechlonogy keji = 13;
  inline int keji_size() const;
  inline void clear_keji();
  static const int kKejiFieldNumber = 13;
  inline const ::BraveNewWorldConfig::FortTechlonogy& keji(int index) const;
  inline ::BraveNewWorldConfig::FortTechlonogy* mutable_keji(int index);
  inline ::BraveNewWorldConfig::FortTechlonogy* add_keji();
  inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::FortTechlonogy >&
      keji() const;
  inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::FortTechlonogy >*
      mutable_keji();

  // @@protoc_insertion_point(class_scope:BraveNewWorldConfig.BraveNewWorldConfig)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_mission();
  inline void clear_has_mission();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Point > land_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Property > config_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Zone > zone_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::City > city_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > p_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > m_limit_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Tech > tech_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::ZoneArea > area_;
  ::BraveNewWorldConfig::RewardConfig* reward_;
  ::BraveNewWorldConfig::Mission* mission_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > huoyue_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Task > task_;
  ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::FortTechlonogy > keji_;
  friend void  protobuf_AddDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_AssignDesc_BraveNewWorldConfig_2eproto();
  friend void protobuf_ShutdownFile_BraveNewWorldConfig_2eproto();

  void InitAsDefaultInstance();
  static BraveNewWorldConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// Point

// required uint32 x = 1;
inline bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Point::x() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Point.x)
  return x_;
}
inline void Point::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Point.x)
}

// required uint32 y = 2;
inline bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Point::y() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Point.y)
  return y_;
}
inline void Point::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Point.y)
}

// required uint32 type = 3;
inline bool Point::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Point::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Point::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Point::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Point::type() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Point.type)
  return type_;
}
inline void Point::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Point.type)
}

// required uint32 level = 4;
inline bool Point::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Point::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Point::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Point::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Point::level() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Point.level)
  return level_;
}
inline void Point::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Point.level)
}

// required uint32 npc = 5;
inline bool Point::has_npc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Point::set_has_npc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Point::clear_has_npc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Point::clear_npc() {
  npc_ = 0u;
  clear_has_npc();
}
inline ::google::protobuf::uint32 Point::npc() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Point.npc)
  return npc_;
}
inline void Point::set_npc(::google::protobuf::uint32 value) {
  set_has_npc();
  npc_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Point.npc)
}

// -------------------------------------------------------------------

// Property

// required uint32 type = 1;
inline bool Property::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Property::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Property::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Property::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Property::type() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Property.type)
  return type_;
}
inline void Property::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Property.type)
}

// required uint32 level = 2;
inline bool Property::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Property::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Property::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Property::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Property::level() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Property.level)
  return level_;
}
inline void Property::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Property.level)
}

// required uint32 occupy = 3;
inline bool Property::has_occupy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Property::set_has_occupy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Property::clear_has_occupy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Property::clear_occupy() {
  occupy_ = 0u;
  clear_has_occupy();
}
inline ::google::protobuf::uint32 Property::occupy() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Property.occupy)
  return occupy_;
}
inline void Property::set_occupy(::google::protobuf::uint32 value) {
  set_has_occupy();
  occupy_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Property.occupy)
}

// required uint32 product = 4;
inline bool Property::has_product() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Property::set_has_product() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Property::clear_has_product() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Property::clear_product() {
  product_ = 0u;
  clear_has_product();
}
inline ::google::protobuf::uint32 Property::product() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Property.product)
  return product_;
}
inline void Property::set_product(::google::protobuf::uint32 value) {
  set_has_product();
  product_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Property.product)
}

// repeated uint32 npc = 5;
inline int Property::npc_size() const {
  return npc_.size();
}
inline void Property::clear_npc() {
  npc_.Clear();
}
inline ::google::protobuf::uint32 Property::npc(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Property.npc)
  return npc_.Get(index);
}
inline void Property::set_npc(int index, ::google::protobuf::uint32 value) {
  npc_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Property.npc)
}
inline void Property::add_npc(::google::protobuf::uint32 value) {
  npc_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Property.npc)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Property::npc() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Property.npc)
  return npc_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Property::mutable_npc() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Property.npc)
  return &npc_;
}

// -------------------------------------------------------------------

// Zone

// required uint32 level = 1;
inline bool Zone::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Zone::level() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Zone.level)
  return level_;
}
inline void Zone::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Zone.level)
}

// required uint32 product = 2;
inline bool Zone::has_product() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone::set_has_product() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone::clear_has_product() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone::clear_product() {
  product_ = 0u;
  clear_has_product();
}
inline ::google::protobuf::uint32 Zone::product() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Zone.product)
  return product_;
}
inline void Zone::set_product(::google::protobuf::uint32 value) {
  set_has_product();
  product_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Zone.product)
}

// -------------------------------------------------------------------

// City

// required uint32 level = 1;
inline bool City::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void City::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void City::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void City::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 City::level() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.City.level)
  return level_;
}
inline void City::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.City.level)
}

// required uint32 need = 2;
inline bool City::has_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void City::set_has_need() {
  _has_bits_[0] |= 0x00000002u;
}
inline void City::clear_has_need() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void City::clear_need() {
  need_ = 0u;
  clear_has_need();
}
inline ::google::protobuf::uint32 City::need() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.City.need)
  return need_;
}
inline void City::set_need(::google::protobuf::uint32 value) {
  set_has_need();
  need_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.City.need)
}

// required uint32 time = 3;
inline bool City::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void City::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void City::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void City::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 City::time() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.City.time)
  return time_;
}
inline void City::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.City.time)
}

// -------------------------------------------------------------------

// Tech

// required uint32 cost = 1;
inline bool Tech::has_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tech::set_has_cost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tech::clear_has_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tech::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 Tech::cost() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Tech.cost)
  return cost_;
}
inline void Tech::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Tech.cost)
}

// required uint32 cd = 2;
inline bool Tech::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tech::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tech::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tech::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 Tech::cd() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Tech.cd)
  return cd_;
}
inline void Tech::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Tech.cd)
}

// repeated uint32 value = 3;
inline int Tech::value_size() const {
  return value_.size();
}
inline void Tech::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 Tech::value(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Tech.value)
  return value_.Get(index);
}
inline void Tech::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Tech.value)
}
inline void Tech::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Tech.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Tech::value() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Tech.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Tech::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Tech.value)
  return &value_;
}

// optional uint32 ecost = 4;
inline bool Tech::has_ecost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tech::set_has_ecost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tech::clear_has_ecost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tech::clear_ecost() {
  ecost_ = 0u;
  clear_has_ecost();
}
inline ::google::protobuf::uint32 Tech::ecost() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Tech.ecost)
  return ecost_;
}
inline void Tech::set_ecost(::google::protobuf::uint32 value) {
  set_has_ecost();
  ecost_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Tech.ecost)
}

// -------------------------------------------------------------------

// ZoneArea

// repeated uint32 lu = 1;
inline int ZoneArea::lu_size() const {
  return lu_.size();
}
inline void ZoneArea::clear_lu() {
  lu_.Clear();
}
inline ::google::protobuf::uint32 ZoneArea::lu(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.ZoneArea.lu)
  return lu_.Get(index);
}
inline void ZoneArea::set_lu(int index, ::google::protobuf::uint32 value) {
  lu_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.ZoneArea.lu)
}
inline void ZoneArea::add_lu(::google::protobuf::uint32 value) {
  lu_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.ZoneArea.lu)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ZoneArea::lu() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.ZoneArea.lu)
  return lu_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ZoneArea::mutable_lu() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.ZoneArea.lu)
  return &lu_;
}

// repeated uint32 rd = 2;
inline int ZoneArea::rd_size() const {
  return rd_.size();
}
inline void ZoneArea::clear_rd() {
  rd_.Clear();
}
inline ::google::protobuf::uint32 ZoneArea::rd(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.ZoneArea.rd)
  return rd_.Get(index);
}
inline void ZoneArea::set_rd(int index, ::google::protobuf::uint32 value) {
  rd_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.ZoneArea.rd)
}
inline void ZoneArea::add_rd(::google::protobuf::uint32 value) {
  rd_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.ZoneArea.rd)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ZoneArea::rd() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.ZoneArea.rd)
  return rd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ZoneArea::mutable_rd() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.ZoneArea.rd)
  return &rd_;
}

// -------------------------------------------------------------------

// RewardConfig

// repeated uint32 all = 1;
inline int RewardConfig::all_size() const {
  return all_.size();
}
inline void RewardConfig::clear_all() {
  all_.Clear();
}
inline ::google::protobuf::uint32 RewardConfig::all(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.RewardConfig.all)
  return all_.Get(index);
}
inline void RewardConfig::set_all(int index, ::google::protobuf::uint32 value) {
  all_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.RewardConfig.all)
}
inline void RewardConfig::add_all(::google::protobuf::uint32 value) {
  all_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.RewardConfig.all)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RewardConfig::all() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.RewardConfig.all)
  return all_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RewardConfig::mutable_all() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.RewardConfig.all)
  return &all_;
}

// repeated uint32 one = 2;
inline int RewardConfig::one_size() const {
  return one_.size();
}
inline void RewardConfig::clear_one() {
  one_.Clear();
}
inline ::google::protobuf::uint32 RewardConfig::one(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.RewardConfig.one)
  return one_.Get(index);
}
inline void RewardConfig::set_one(int index, ::google::protobuf::uint32 value) {
  one_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.RewardConfig.one)
}
inline void RewardConfig::add_one(::google::protobuf::uint32 value) {
  one_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.RewardConfig.one)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RewardConfig::one() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.RewardConfig.one)
  return one_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RewardConfig::mutable_one() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.RewardConfig.one)
  return &one_;
}

// required uint32 user = 3;
inline bool RewardConfig::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardConfig::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardConfig::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardConfig::clear_user() {
  user_ = 0u;
  clear_has_user();
}
inline ::google::protobuf::uint32 RewardConfig::user() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.RewardConfig.user)
  return user_;
}
inline void RewardConfig::set_user(::google::protobuf::uint32 value) {
  set_has_user();
  user_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.RewardConfig.user)
}

// -------------------------------------------------------------------

// Mission

// repeated uint32 alliance = 1;
inline int Mission::alliance_size() const {
  return alliance_.size();
}
inline void Mission::clear_alliance() {
  alliance_.Clear();
}
inline ::google::protobuf::uint32 Mission::alliance(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Mission.alliance)
  return alliance_.Get(index);
}
inline void Mission::set_alliance(int index, ::google::protobuf::uint32 value) {
  alliance_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Mission.alliance)
}
inline void Mission::add_alliance(::google::protobuf::uint32 value) {
  alliance_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Mission.alliance)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Mission::alliance() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Mission.alliance)
  return alliance_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Mission::mutable_alliance() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Mission.alliance)
  return &alliance_;
}

// required uint32 user2 = 2;
inline bool Mission::has_user2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mission::set_has_user2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mission::clear_has_user2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mission::clear_user2() {
  user2_ = 0u;
  clear_has_user2();
}
inline ::google::protobuf::uint32 Mission::user2() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Mission.user2)
  return user2_;
}
inline void Mission::set_user2(::google::protobuf::uint32 value) {
  set_has_user2();
  user2_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Mission.user2)
}

// required uint32 m1 = 3;
inline bool Mission::has_m1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mission::set_has_m1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mission::clear_has_m1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mission::clear_m1() {
  m1_ = 0u;
  clear_has_m1();
}
inline ::google::protobuf::uint32 Mission::m1() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Mission.m1)
  return m1_;
}
inline void Mission::set_m1(::google::protobuf::uint32 value) {
  set_has_m1();
  m1_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Mission.m1)
}

// required uint32 m2 = 4;
inline bool Mission::has_m2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Mission::set_has_m2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Mission::clear_has_m2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Mission::clear_m2() {
  m2_ = 0u;
  clear_has_m2();
}
inline ::google::protobuf::uint32 Mission::m2() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Mission.m2)
  return m2_;
}
inline void Mission::set_m2(::google::protobuf::uint32 value) {
  set_has_m2();
  m2_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Mission.m2)
}

// required uint32 m3 = 5;
inline bool Mission::has_m3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Mission::set_has_m3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Mission::clear_has_m3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Mission::clear_m3() {
  m3_ = 0u;
  clear_has_m3();
}
inline ::google::protobuf::uint32 Mission::m3() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Mission.m3)
  return m3_;
}
inline void Mission::set_m3(::google::protobuf::uint32 value) {
  set_has_m3();
  m3_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Mission.m3)
}

// -------------------------------------------------------------------

// Task

// required uint32 id = 1;
inline bool Task::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Task::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Task::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Task::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Task::id() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Task.id)
  return id_;
}
inline void Task::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Task.id)
}

// required uint32 require = 2;
inline bool Task::has_require() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Task::set_has_require() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Task::clear_has_require() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Task::clear_require() {
  require_ = 0u;
  clear_has_require();
}
inline ::google::protobuf::uint32 Task::require() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Task.require)
  return require_;
}
inline void Task::set_require(::google::protobuf::uint32 value) {
  set_has_require();
  require_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Task.require)
}

// repeated uint32 eqid = 3;
inline int Task::eqid_size() const {
  return eqid_.size();
}
inline void Task::clear_eqid() {
  eqid_.Clear();
}
inline ::google::protobuf::uint32 Task::eqid(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Task.eqid)
  return eqid_.Get(index);
}
inline void Task::set_eqid(int index, ::google::protobuf::uint32 value) {
  eqid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Task.eqid)
}
inline void Task::add_eqid(::google::protobuf::uint32 value) {
  eqid_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Task.eqid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Task::eqid() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Task.eqid)
  return eqid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Task::mutable_eqid() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Task.eqid)
  return &eqid_;
}

// repeated uint32 count = 4;
inline int Task::count_size() const {
  return count_.size();
}
inline void Task::clear_count() {
  count_.Clear();
}
inline ::google::protobuf::uint32 Task::count(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Task.count)
  return count_.Get(index);
}
inline void Task::set_count(int index, ::google::protobuf::uint32 value) {
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Task.count)
}
inline void Task::add_count(::google::protobuf::uint32 value) {
  count_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Task.count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Task::count() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Task.count)
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Task::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Task.count)
  return &count_;
}

// -------------------------------------------------------------------

// Technology

// required uint32 id = 1;
inline bool Technology::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Technology::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Technology::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Technology::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Technology::id() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Technology.id)
  return id_;
}
inline void Technology::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Technology.id)
}

// required uint32 value = 2;
inline bool Technology::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Technology::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Technology::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Technology::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 Technology::value() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Technology.value)
  return value_;
}
inline void Technology::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Technology.value)
}

// required uint32 add = 3;
inline bool Technology::has_add() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Technology::set_has_add() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Technology::clear_has_add() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Technology::clear_add() {
  add_ = 0u;
  clear_has_add();
}
inline ::google::protobuf::uint32 Technology::add() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Technology.add)
  return add_;
}
inline void Technology::set_add(::google::protobuf::uint32 value) {
  set_has_add();
  add_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Technology.add)
}

// required uint32 cost = 4;
inline bool Technology::has_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Technology::set_has_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Technology::clear_has_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Technology::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 Technology::cost() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Technology.cost)
  return cost_;
}
inline void Technology::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Technology.cost)
}

// repeated uint32 cost1 = 5;
inline int Technology::cost1_size() const {
  return cost1_.size();
}
inline void Technology::clear_cost1() {
  cost1_.Clear();
}
inline ::google::protobuf::uint32 Technology::cost1(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.Technology.cost1)
  return cost1_.Get(index);
}
inline void Technology::set_cost1(int index, ::google::protobuf::uint32 value) {
  cost1_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.Technology.cost1)
}
inline void Technology::add_cost1(::google::protobuf::uint32 value) {
  cost1_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.Technology.cost1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Technology::cost1() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.Technology.cost1)
  return cost1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Technology::mutable_cost1() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.Technology.cost1)
  return &cost1_;
}

// -------------------------------------------------------------------

// FortTechlonogy

// required uint32 id = 1;
inline bool FortTechlonogy::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FortTechlonogy::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FortTechlonogy::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FortTechlonogy::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FortTechlonogy::id() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.FortTechlonogy.id)
  return id_;
}
inline void FortTechlonogy::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.FortTechlonogy.id)
}

// required uint32 type = 2;
inline bool FortTechlonogy::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FortTechlonogy::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FortTechlonogy::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FortTechlonogy::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 FortTechlonogy::type() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.FortTechlonogy.type)
  return type_;
}
inline void FortTechlonogy::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.FortTechlonogy.type)
}

// repeated .BraveNewWorldConfig.Technology node = 3;
inline int FortTechlonogy::node_size() const {
  return node_.size();
}
inline void FortTechlonogy::clear_node() {
  node_.Clear();
}
inline const ::BraveNewWorldConfig::Technology& FortTechlonogy::node(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.FortTechlonogy.node)
  return node_.Get(index);
}
inline ::BraveNewWorldConfig::Technology* FortTechlonogy::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.FortTechlonogy.node)
  return node_.Mutable(index);
}
inline ::BraveNewWorldConfig::Technology* FortTechlonogy::add_node() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.FortTechlonogy.node)
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Technology >&
FortTechlonogy::node() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.FortTechlonogy.node)
  return node_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Technology >*
FortTechlonogy::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.FortTechlonogy.node)
  return &node_;
}

// -------------------------------------------------------------------

// BraveNewWorldConfig

// repeated .BraveNewWorldConfig.Point land = 1;
inline int BraveNewWorldConfig::land_size() const {
  return land_.size();
}
inline void BraveNewWorldConfig::clear_land() {
  land_.Clear();
}
inline const ::BraveNewWorldConfig::Point& BraveNewWorldConfig::land(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.land)
  return land_.Get(index);
}
inline ::BraveNewWorldConfig::Point* BraveNewWorldConfig::mutable_land(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.land)
  return land_.Mutable(index);
}
inline ::BraveNewWorldConfig::Point* BraveNewWorldConfig::add_land() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.land)
  return land_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Point >&
BraveNewWorldConfig::land() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.land)
  return land_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Point >*
BraveNewWorldConfig::mutable_land() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.land)
  return &land_;
}

// repeated .BraveNewWorldConfig.Property config = 2;
inline int BraveNewWorldConfig::config_size() const {
  return config_.size();
}
inline void BraveNewWorldConfig::clear_config() {
  config_.Clear();
}
inline const ::BraveNewWorldConfig::Property& BraveNewWorldConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.config)
  return config_.Get(index);
}
inline ::BraveNewWorldConfig::Property* BraveNewWorldConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.config)
  return config_.Mutable(index);
}
inline ::BraveNewWorldConfig::Property* BraveNewWorldConfig::add_config() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.config)
  return config_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Property >&
BraveNewWorldConfig::config() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.config)
  return config_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Property >*
BraveNewWorldConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.config)
  return &config_;
}

// repeated .BraveNewWorldConfig.Zone zone = 3;
inline int BraveNewWorldConfig::zone_size() const {
  return zone_.size();
}
inline void BraveNewWorldConfig::clear_zone() {
  zone_.Clear();
}
inline const ::BraveNewWorldConfig::Zone& BraveNewWorldConfig::zone(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.zone)
  return zone_.Get(index);
}
inline ::BraveNewWorldConfig::Zone* BraveNewWorldConfig::mutable_zone(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.zone)
  return zone_.Mutable(index);
}
inline ::BraveNewWorldConfig::Zone* BraveNewWorldConfig::add_zone() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.zone)
  return zone_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Zone >&
BraveNewWorldConfig::zone() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.zone)
  return zone_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Zone >*
BraveNewWorldConfig::mutable_zone() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.zone)
  return &zone_;
}

// repeated .BraveNewWorldConfig.City city = 4;
inline int BraveNewWorldConfig::city_size() const {
  return city_.size();
}
inline void BraveNewWorldConfig::clear_city() {
  city_.Clear();
}
inline const ::BraveNewWorldConfig::City& BraveNewWorldConfig::city(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.city)
  return city_.Get(index);
}
inline ::BraveNewWorldConfig::City* BraveNewWorldConfig::mutable_city(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.city)
  return city_.Mutable(index);
}
inline ::BraveNewWorldConfig::City* BraveNewWorldConfig::add_city() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.city)
  return city_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::City >&
BraveNewWorldConfig::city() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.city)
  return city_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::City >*
BraveNewWorldConfig::mutable_city() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.city)
  return &city_;
}

// repeated uint32 p_limit = 5;
inline int BraveNewWorldConfig::p_limit_size() const {
  return p_limit_.size();
}
inline void BraveNewWorldConfig::clear_p_limit() {
  p_limit_.Clear();
}
inline ::google::protobuf::uint32 BraveNewWorldConfig::p_limit(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.p_limit)
  return p_limit_.Get(index);
}
inline void BraveNewWorldConfig::set_p_limit(int index, ::google::protobuf::uint32 value) {
  p_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.BraveNewWorldConfig.p_limit)
}
inline void BraveNewWorldConfig::add_p_limit(::google::protobuf::uint32 value) {
  p_limit_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.p_limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BraveNewWorldConfig::p_limit() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.p_limit)
  return p_limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BraveNewWorldConfig::mutable_p_limit() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.p_limit)
  return &p_limit_;
}

// repeated uint32 m_limit = 6;
inline int BraveNewWorldConfig::m_limit_size() const {
  return m_limit_.size();
}
inline void BraveNewWorldConfig::clear_m_limit() {
  m_limit_.Clear();
}
inline ::google::protobuf::uint32 BraveNewWorldConfig::m_limit(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.m_limit)
  return m_limit_.Get(index);
}
inline void BraveNewWorldConfig::set_m_limit(int index, ::google::protobuf::uint32 value) {
  m_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.BraveNewWorldConfig.m_limit)
}
inline void BraveNewWorldConfig::add_m_limit(::google::protobuf::uint32 value) {
  m_limit_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.m_limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BraveNewWorldConfig::m_limit() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.m_limit)
  return m_limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BraveNewWorldConfig::mutable_m_limit() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.m_limit)
  return &m_limit_;
}

// repeated .BraveNewWorldConfig.Tech tech = 7;
inline int BraveNewWorldConfig::tech_size() const {
  return tech_.size();
}
inline void BraveNewWorldConfig::clear_tech() {
  tech_.Clear();
}
inline const ::BraveNewWorldConfig::Tech& BraveNewWorldConfig::tech(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.tech)
  return tech_.Get(index);
}
inline ::BraveNewWorldConfig::Tech* BraveNewWorldConfig::mutable_tech(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.tech)
  return tech_.Mutable(index);
}
inline ::BraveNewWorldConfig::Tech* BraveNewWorldConfig::add_tech() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.tech)
  return tech_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Tech >&
BraveNewWorldConfig::tech() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.tech)
  return tech_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Tech >*
BraveNewWorldConfig::mutable_tech() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.tech)
  return &tech_;
}

// repeated .BraveNewWorldConfig.ZoneArea area = 8;
inline int BraveNewWorldConfig::area_size() const {
  return area_.size();
}
inline void BraveNewWorldConfig::clear_area() {
  area_.Clear();
}
inline const ::BraveNewWorldConfig::ZoneArea& BraveNewWorldConfig::area(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.area)
  return area_.Get(index);
}
inline ::BraveNewWorldConfig::ZoneArea* BraveNewWorldConfig::mutable_area(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.area)
  return area_.Mutable(index);
}
inline ::BraveNewWorldConfig::ZoneArea* BraveNewWorldConfig::add_area() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.area)
  return area_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::ZoneArea >&
BraveNewWorldConfig::area() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.area)
  return area_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::ZoneArea >*
BraveNewWorldConfig::mutable_area() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.area)
  return &area_;
}

// required .BraveNewWorldConfig.RewardConfig reward = 9;
inline bool BraveNewWorldConfig::has_reward() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BraveNewWorldConfig::set_has_reward() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BraveNewWorldConfig::clear_has_reward() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BraveNewWorldConfig::clear_reward() {
  if (reward_ != NULL) reward_->::BraveNewWorldConfig::RewardConfig::Clear();
  clear_has_reward();
}
inline const ::BraveNewWorldConfig::RewardConfig& BraveNewWorldConfig::reward() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::BraveNewWorldConfig::RewardConfig* BraveNewWorldConfig::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::BraveNewWorldConfig::RewardConfig;
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.reward)
  return reward_;
}
inline ::BraveNewWorldConfig::RewardConfig* BraveNewWorldConfig::release_reward() {
  clear_has_reward();
  ::BraveNewWorldConfig::RewardConfig* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void BraveNewWorldConfig::set_allocated_reward(::BraveNewWorldConfig::RewardConfig* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:BraveNewWorldConfig.BraveNewWorldConfig.reward)
}

// required .BraveNewWorldConfig.Mission mission = 10;
inline bool BraveNewWorldConfig::has_mission() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BraveNewWorldConfig::set_has_mission() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BraveNewWorldConfig::clear_has_mission() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BraveNewWorldConfig::clear_mission() {
  if (mission_ != NULL) mission_->::BraveNewWorldConfig::Mission::Clear();
  clear_has_mission();
}
inline const ::BraveNewWorldConfig::Mission& BraveNewWorldConfig::mission() const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.mission)
  return mission_ != NULL ? *mission_ : *default_instance_->mission_;
}
inline ::BraveNewWorldConfig::Mission* BraveNewWorldConfig::mutable_mission() {
  set_has_mission();
  if (mission_ == NULL) mission_ = new ::BraveNewWorldConfig::Mission;
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.mission)
  return mission_;
}
inline ::BraveNewWorldConfig::Mission* BraveNewWorldConfig::release_mission() {
  clear_has_mission();
  ::BraveNewWorldConfig::Mission* temp = mission_;
  mission_ = NULL;
  return temp;
}
inline void BraveNewWorldConfig::set_allocated_mission(::BraveNewWorldConfig::Mission* mission) {
  delete mission_;
  mission_ = mission;
  if (mission) {
    set_has_mission();
  } else {
    clear_has_mission();
  }
  // @@protoc_insertion_point(field_set_allocated:BraveNewWorldConfig.BraveNewWorldConfig.mission)
}

// repeated uint32 huoyue = 11;
inline int BraveNewWorldConfig::huoyue_size() const {
  return huoyue_.size();
}
inline void BraveNewWorldConfig::clear_huoyue() {
  huoyue_.Clear();
}
inline ::google::protobuf::uint32 BraveNewWorldConfig::huoyue(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.huoyue)
  return huoyue_.Get(index);
}
inline void BraveNewWorldConfig::set_huoyue(int index, ::google::protobuf::uint32 value) {
  huoyue_.Set(index, value);
  // @@protoc_insertion_point(field_set:BraveNewWorldConfig.BraveNewWorldConfig.huoyue)
}
inline void BraveNewWorldConfig::add_huoyue(::google::protobuf::uint32 value) {
  huoyue_.Add(value);
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.huoyue)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BraveNewWorldConfig::huoyue() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.huoyue)
  return huoyue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BraveNewWorldConfig::mutable_huoyue() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.huoyue)
  return &huoyue_;
}

// repeated .BraveNewWorldConfig.Task task = 12;
inline int BraveNewWorldConfig::task_size() const {
  return task_.size();
}
inline void BraveNewWorldConfig::clear_task() {
  task_.Clear();
}
inline const ::BraveNewWorldConfig::Task& BraveNewWorldConfig::task(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.task)
  return task_.Get(index);
}
inline ::BraveNewWorldConfig::Task* BraveNewWorldConfig::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.task)
  return task_.Mutable(index);
}
inline ::BraveNewWorldConfig::Task* BraveNewWorldConfig::add_task() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.task)
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Task >&
BraveNewWorldConfig::task() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.task)
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::Task >*
BraveNewWorldConfig::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.task)
  return &task_;
}

// repeated .BraveNewWorldConfig.FortTechlonogy keji = 13;
inline int BraveNewWorldConfig::keji_size() const {
  return keji_.size();
}
inline void BraveNewWorldConfig::clear_keji() {
  keji_.Clear();
}
inline const ::BraveNewWorldConfig::FortTechlonogy& BraveNewWorldConfig::keji(int index) const {
  // @@protoc_insertion_point(field_get:BraveNewWorldConfig.BraveNewWorldConfig.keji)
  return keji_.Get(index);
}
inline ::BraveNewWorldConfig::FortTechlonogy* BraveNewWorldConfig::mutable_keji(int index) {
  // @@protoc_insertion_point(field_mutable:BraveNewWorldConfig.BraveNewWorldConfig.keji)
  return keji_.Mutable(index);
}
inline ::BraveNewWorldConfig::FortTechlonogy* BraveNewWorldConfig::add_keji() {
  // @@protoc_insertion_point(field_add:BraveNewWorldConfig.BraveNewWorldConfig.keji)
  return keji_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::FortTechlonogy >&
BraveNewWorldConfig::keji() const {
  // @@protoc_insertion_point(field_list:BraveNewWorldConfig.BraveNewWorldConfig.keji)
  return keji_;
}
inline ::google::protobuf::RepeatedPtrField< ::BraveNewWorldConfig::FortTechlonogy >*
BraveNewWorldConfig::mutable_keji() {
  // @@protoc_insertion_point(field_mutable_list:BraveNewWorldConfig.BraveNewWorldConfig.keji)
  return &keji_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BraveNewWorldConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BraveNewWorldConfig_2eproto__INCLUDED
