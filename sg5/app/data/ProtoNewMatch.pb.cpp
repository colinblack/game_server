// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoNewMatch.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoNewMatch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoNewMatch {

namespace {

const ::google::protobuf::Descriptor* ProtoHeroProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoHeroProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoNewMatchUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoNewMatchUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoNewMatchGuess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoNewMatchGuess_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoNewMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoNewMatch_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoNewMatch_2eproto() {
  protobuf_AddDesc_ProtoNewMatch_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoNewMatch.proto");
  GOOGLE_CHECK(file != NULL);
  ProtoHeroProperty_descriptor_ = file->message_type(0);
  static const int ProtoHeroProperty_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, property_),
  };
  ProtoHeroProperty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoHeroProperty_descriptor_,
      ProtoHeroProperty::default_instance_,
      ProtoHeroProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoHeroProperty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoHeroProperty));
  ProtoNewMatchUser_descriptor_ = file->message_type(1);
  static const int ProtoNewMatchUser_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, turn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, aname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, fig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, hero_),
  };
  ProtoNewMatchUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoNewMatchUser_descriptor_,
      ProtoNewMatchUser::default_instance_,
      ProtoNewMatchUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoNewMatchUser));
  ProtoNewMatchGuess_descriptor_ = file->message_type(2);
  static const int ProtoNewMatchGuess_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchGuess, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchGuess, guess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchGuess, bet_),
  };
  ProtoNewMatchGuess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoNewMatchGuess_descriptor_,
      ProtoNewMatchGuess::default_instance_,
      ProtoNewMatchGuess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchGuess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatchGuess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoNewMatchGuess));
  ProtoNewMatch_descriptor_ = file->message_type(3);
  static const int ProtoNewMatch_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, top8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, top4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, top2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, guess_),
  };
  ProtoNewMatch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoNewMatch_descriptor_,
      ProtoNewMatch::default_instance_,
      ProtoNewMatch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNewMatch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoNewMatch));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoNewMatch_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoHeroProperty_descriptor_, &ProtoHeroProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoNewMatchUser_descriptor_, &ProtoNewMatchUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoNewMatchGuess_descriptor_, &ProtoNewMatchGuess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoNewMatch_descriptor_, &ProtoNewMatch::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoNewMatch_2eproto() {
  delete ProtoHeroProperty::default_instance_;
  delete ProtoHeroProperty_reflection_;
  delete ProtoNewMatchUser::default_instance_;
  delete ProtoNewMatchUser_reflection_;
  delete ProtoNewMatchGuess::default_instance_;
  delete ProtoNewMatchGuess_reflection_;
  delete ProtoNewMatch::default_instance_;
  delete ProtoNewMatch_reflection_;
}

void protobuf_AddDesc_ProtoNewMatch_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoNewMatch.proto\022\rProtoNewMatch\"Z\n\021"
    "ProtoHeroProperty\022\013\n\003hid\030\001 \002(\r\022\013\n\003job\030\002 "
    "\002(\r\022\r\n\005level\030\003 \002(\r\022\n\n\002hp\030\004 \002(\005\022\020\n\010proper"
    "ty\030\005 \003(\r\"\246\001\n\021ProtoNewMatchUser\022\013\n\003uid\030\001 "
    "\002(\r\022\r\n\005score\030\002 \002(\r\022\014\n\004turn\030\003 \002(\r\022\r\n\005inde"
    "x\030\004 \003(\r\022\014\n\004name\030\005 \002(\t\022\r\n\005aname\030\006 \002(\t\022\013\n\003"
    "fig\030\007 \002(\t\022.\n\004hero\030\010 \003(\0132 .ProtoNewMatch."
    "ProtoHeroProperty\"=\n\022ProtoNewMatchGuess\022"
    "\013\n\003uid\030\001 \002(\r\022\r\n\005guess\030\002 \002(\r\022\013\n\003bet\030\003 \002(\r"
    "\"\300\002\n\rProtoNewMatch\022\r\n\005stage\030\001 \002(\r\022.\n\004ran"
    "k\030\002 \003(\0132 .ProtoNewMatch.ProtoNewMatchUse"
    "r\022.\n\004top8\030\003 \003(\0132 .ProtoNewMatch.ProtoNew"
    "MatchUser\022.\n\004top4\030\004 \003(\0132 .ProtoNewMatch."
    "ProtoNewMatchUser\022.\n\004top2\030\005 \003(\0132 .ProtoN"
    "ewMatch.ProtoNewMatchUser\022.\n\004user\030\006 \003(\0132"
    " .ProtoNewMatch.ProtoNewMatchUser\0220\n\005gue"
    "ss\030\007 \003(\0132!.ProtoNewMatch.ProtoNewMatchGu"
    "ess", 683);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoNewMatch.proto", &protobuf_RegisterTypes);
  ProtoHeroProperty::default_instance_ = new ProtoHeroProperty();
  ProtoNewMatchUser::default_instance_ = new ProtoNewMatchUser();
  ProtoNewMatchGuess::default_instance_ = new ProtoNewMatchGuess();
  ProtoNewMatch::default_instance_ = new ProtoNewMatch();
  ProtoHeroProperty::default_instance_->InitAsDefaultInstance();
  ProtoNewMatchUser::default_instance_->InitAsDefaultInstance();
  ProtoNewMatchGuess::default_instance_->InitAsDefaultInstance();
  ProtoNewMatch::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoNewMatch_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoNewMatch_2eproto {
  StaticDescriptorInitializer_ProtoNewMatch_2eproto() {
    protobuf_AddDesc_ProtoNewMatch_2eproto();
  }
} static_descriptor_initializer_ProtoNewMatch_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProtoHeroProperty::kHidFieldNumber;
const int ProtoHeroProperty::kJobFieldNumber;
const int ProtoHeroProperty::kLevelFieldNumber;
const int ProtoHeroProperty::kHpFieldNumber;
const int ProtoHeroProperty::kPropertyFieldNumber;
#endif  // !_MSC_VER

ProtoHeroProperty::ProtoHeroProperty()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoNewMatch.ProtoHeroProperty)
}

void ProtoHeroProperty::InitAsDefaultInstance() {
}

ProtoHeroProperty::ProtoHeroProperty(const ProtoHeroProperty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoNewMatch.ProtoHeroProperty)
}

void ProtoHeroProperty::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  job_ = 0u;
  level_ = 0u;
  hp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoHeroProperty::~ProtoHeroProperty() {
  // @@protoc_insertion_point(destructor:ProtoNewMatch.ProtoHeroProperty)
  SharedDtor();
}

void ProtoHeroProperty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoHeroProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoHeroProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoHeroProperty_descriptor_;
}

const ProtoHeroProperty& ProtoHeroProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoNewMatch_2eproto();
  return *default_instance_;
}

ProtoHeroProperty* ProtoHeroProperty::default_instance_ = NULL;

ProtoHeroProperty* ProtoHeroProperty::New() const {
  return new ProtoHeroProperty;
}

void ProtoHeroProperty::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoHeroProperty*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, hp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoHeroProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoNewMatch.ProtoHeroProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_job;
        break;
      }

      // required uint32 job = 2;
      case 2: {
        if (tag == 16) {
         parse_job:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_)));
          set_has_job();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hp;
        break;
      }

      // required int32 hp = 4;
      case 4: {
        if (tag == 32) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_property;
        break;
      }

      // repeated uint32 property = 5;
      case 5: {
        if (tag == 40) {
         parse_property:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_property())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_property())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_property;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoNewMatch.ProtoHeroProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoNewMatch.ProtoHeroProperty)
  return false;
#undef DO_
}

void ProtoHeroProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoNewMatch.ProtoHeroProperty)
  // required uint32 hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // required uint32 job = 2;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->job(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required int32 hp = 4;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // repeated uint32 property = 5;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->property(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoNewMatch.ProtoHeroProperty)
}

::google::protobuf::uint8* ProtoHeroProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoNewMatch.ProtoHeroProperty)
  // required uint32 hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // required uint32 job = 2;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->job(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required int32 hp = 4;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // repeated uint32 property = 5;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->property(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoNewMatch.ProtoHeroProperty)
  return target;
}

int ProtoHeroProperty::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // required uint32 job = 2;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required int32 hp = 4;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

  }
  // repeated uint32 property = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->property_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->property(i));
    }
    total_size += 1 * this->property_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoHeroProperty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoHeroProperty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoHeroProperty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoHeroProperty::MergeFrom(const ProtoHeroProperty& from) {
  GOOGLE_CHECK_NE(&from, this);
  property_.MergeFrom(from.property_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_job()) {
      set_job(from.job());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoHeroProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoHeroProperty::CopyFrom(const ProtoHeroProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoHeroProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ProtoHeroProperty::Swap(ProtoHeroProperty* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(job_, other->job_);
    std::swap(level_, other->level_);
    std::swap(hp_, other->hp_);
    property_.Swap(&other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoHeroProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoHeroProperty_descriptor_;
  metadata.reflection = ProtoHeroProperty_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoNewMatchUser::kUidFieldNumber;
const int ProtoNewMatchUser::kScoreFieldNumber;
const int ProtoNewMatchUser::kTurnFieldNumber;
const int ProtoNewMatchUser::kIndexFieldNumber;
const int ProtoNewMatchUser::kNameFieldNumber;
const int ProtoNewMatchUser::kAnameFieldNumber;
const int ProtoNewMatchUser::kFigFieldNumber;
const int ProtoNewMatchUser::kHeroFieldNumber;
#endif  // !_MSC_VER

ProtoNewMatchUser::ProtoNewMatchUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoNewMatch.ProtoNewMatchUser)
}

void ProtoNewMatchUser::InitAsDefaultInstance() {
}

ProtoNewMatchUser::ProtoNewMatchUser(const ProtoNewMatchUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoNewMatch.ProtoNewMatchUser)
}

void ProtoNewMatchUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  score_ = 0u;
  turn_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoNewMatchUser::~ProtoNewMatchUser() {
  // @@protoc_insertion_point(destructor:ProtoNewMatch.ProtoNewMatchUser)
  SharedDtor();
}

void ProtoNewMatchUser::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (aname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete aname_;
  }
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (this != default_instance_) {
  }
}

void ProtoNewMatchUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoNewMatchUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoNewMatchUser_descriptor_;
}

const ProtoNewMatchUser& ProtoNewMatchUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoNewMatch_2eproto();
  return *default_instance_;
}

ProtoNewMatchUser* ProtoNewMatchUser::default_instance_ = NULL;

ProtoNewMatchUser* ProtoNewMatchUser::New() const {
  return new ProtoNewMatchUser;
}

void ProtoNewMatchUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoNewMatchUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 119) {
    ZR_(uid_, score_);
    turn_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_aname()) {
      if (aname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        aname_->clear();
      }
    }
    if (has_fig()) {
      if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fig_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  index_.Clear();
  hero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoNewMatchUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoNewMatch.ProtoNewMatchUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_score;
        break;
      }

      // required uint32 score = 2;
      case 2: {
        if (tag == 16) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_turn;
        break;
      }

      // required uint32 turn = 3;
      case 3: {
        if (tag == 24) {
         parse_turn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turn_)));
          set_has_turn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_index;
        break;
      }

      // repeated uint32 index = 4;
      case 4: {
        if (tag == 32) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_index())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_index;
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_aname;
        break;
      }

      // required string aname = 6;
      case 6: {
        if (tag == 50) {
         parse_aname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aname().data(), this->aname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "aname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fig;
        break;
      }

      // required string fig = 7;
      case 7: {
        if (tag == 58) {
         parse_fig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fig()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fig().data(), this->fig().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fig");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_hero;
        break;
      }

      // repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
      case 8: {
        if (tag == 66) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_hero;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoNewMatch.ProtoNewMatchUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoNewMatch.ProtoNewMatchUser)
  return false;
#undef DO_
}

void ProtoNewMatchUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoNewMatch.ProtoNewMatchUser)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  // required uint32 turn = 3;
  if (has_turn()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->turn(), output);
  }

  // repeated uint32 index = 4;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->index(i), output);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // required string aname = 6;
  if (has_aname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aname().data(), this->aname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "aname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->aname(), output);
  }

  // required string fig = 7;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->fig(), output);
  }

  // repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->hero(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoNewMatch.ProtoNewMatchUser)
}

::google::protobuf::uint8* ProtoNewMatchUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoNewMatch.ProtoNewMatchUser)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  // required uint32 turn = 3;
  if (has_turn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->turn(), target);
  }

  // repeated uint32 index = 4;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->index(i), target);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // required string aname = 6;
  if (has_aname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aname().data(), this->aname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "aname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->aname(), target);
  }

  // required string fig = 7;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fig().data(), this->fig().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fig(), target);
  }

  // repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->hero(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoNewMatch.ProtoNewMatchUser)
  return target;
}

int ProtoNewMatchUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // required uint32 turn = 3;
    if (has_turn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->turn());
    }

    // required string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string aname = 6;
    if (has_aname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aname());
    }

    // required string fig = 7;
    if (has_fig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fig());
    }

  }
  // repeated uint32 index = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }

  // repeated .ProtoNewMatch.ProtoHeroProperty hero = 8;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoNewMatchUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoNewMatchUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoNewMatchUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoNewMatchUser::MergeFrom(const ProtoNewMatchUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_.MergeFrom(from.index_);
  hero_.MergeFrom(from.hero_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_turn()) {
      set_turn(from.turn());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_aname()) {
      set_aname(from.aname());
    }
    if (from.has_fig()) {
      set_fig(from.fig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoNewMatchUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoNewMatchUser::CopyFrom(const ProtoNewMatchUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoNewMatchUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000077) != 0x00000077) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->hero())) return false;
  return true;
}

void ProtoNewMatchUser::Swap(ProtoNewMatchUser* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(score_, other->score_);
    std::swap(turn_, other->turn_);
    index_.Swap(&other->index_);
    std::swap(name_, other->name_);
    std::swap(aname_, other->aname_);
    std::swap(fig_, other->fig_);
    hero_.Swap(&other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoNewMatchUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoNewMatchUser_descriptor_;
  metadata.reflection = ProtoNewMatchUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoNewMatchGuess::kUidFieldNumber;
const int ProtoNewMatchGuess::kGuessFieldNumber;
const int ProtoNewMatchGuess::kBetFieldNumber;
#endif  // !_MSC_VER

ProtoNewMatchGuess::ProtoNewMatchGuess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoNewMatch.ProtoNewMatchGuess)
}

void ProtoNewMatchGuess::InitAsDefaultInstance() {
}

ProtoNewMatchGuess::ProtoNewMatchGuess(const ProtoNewMatchGuess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoNewMatch.ProtoNewMatchGuess)
}

void ProtoNewMatchGuess::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  guess_ = 0u;
  bet_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoNewMatchGuess::~ProtoNewMatchGuess() {
  // @@protoc_insertion_point(destructor:ProtoNewMatch.ProtoNewMatchGuess)
  SharedDtor();
}

void ProtoNewMatchGuess::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoNewMatchGuess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoNewMatchGuess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoNewMatchGuess_descriptor_;
}

const ProtoNewMatchGuess& ProtoNewMatchGuess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoNewMatch_2eproto();
  return *default_instance_;
}

ProtoNewMatchGuess* ProtoNewMatchGuess::default_instance_ = NULL;

ProtoNewMatchGuess* ProtoNewMatchGuess::New() const {
  return new ProtoNewMatchGuess;
}

void ProtoNewMatchGuess::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtoNewMatchGuess*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uid_, bet_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoNewMatchGuess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoNewMatch.ProtoNewMatchGuess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guess;
        break;
      }

      // required uint32 guess = 2;
      case 2: {
        if (tag == 16) {
         parse_guess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guess_)));
          set_has_guess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bet;
        break;
      }

      // required uint32 bet = 3;
      case 3: {
        if (tag == 24) {
         parse_bet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_)));
          set_has_bet();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoNewMatch.ProtoNewMatchGuess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoNewMatch.ProtoNewMatchGuess)
  return false;
#undef DO_
}

void ProtoNewMatchGuess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoNewMatch.ProtoNewMatchGuess)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 guess = 2;
  if (has_guess()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guess(), output);
  }

  // required uint32 bet = 3;
  if (has_bet()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bet(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoNewMatch.ProtoNewMatchGuess)
}

::google::protobuf::uint8* ProtoNewMatchGuess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoNewMatch.ProtoNewMatchGuess)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 guess = 2;
  if (has_guess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guess(), target);
  }

  // required uint32 bet = 3;
  if (has_bet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bet(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoNewMatch.ProtoNewMatchGuess)
  return target;
}

int ProtoNewMatchGuess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 guess = 2;
    if (has_guess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guess());
    }

    // required uint32 bet = 3;
    if (has_bet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bet());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoNewMatchGuess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoNewMatchGuess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoNewMatchGuess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoNewMatchGuess::MergeFrom(const ProtoNewMatchGuess& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_guess()) {
      set_guess(from.guess());
    }
    if (from.has_bet()) {
      set_bet(from.bet());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoNewMatchGuess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoNewMatchGuess::CopyFrom(const ProtoNewMatchGuess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoNewMatchGuess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ProtoNewMatchGuess::Swap(ProtoNewMatchGuess* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(guess_, other->guess_);
    std::swap(bet_, other->bet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoNewMatchGuess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoNewMatchGuess_descriptor_;
  metadata.reflection = ProtoNewMatchGuess_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoNewMatch::kStageFieldNumber;
const int ProtoNewMatch::kRankFieldNumber;
const int ProtoNewMatch::kTop8FieldNumber;
const int ProtoNewMatch::kTop4FieldNumber;
const int ProtoNewMatch::kTop2FieldNumber;
const int ProtoNewMatch::kUserFieldNumber;
const int ProtoNewMatch::kGuessFieldNumber;
#endif  // !_MSC_VER

ProtoNewMatch::ProtoNewMatch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoNewMatch.ProtoNewMatch)
}

void ProtoNewMatch::InitAsDefaultInstance() {
}

ProtoNewMatch::ProtoNewMatch(const ProtoNewMatch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoNewMatch.ProtoNewMatch)
}

void ProtoNewMatch::SharedCtor() {
  _cached_size_ = 0;
  stage_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoNewMatch::~ProtoNewMatch() {
  // @@protoc_insertion_point(destructor:ProtoNewMatch.ProtoNewMatch)
  SharedDtor();
}

void ProtoNewMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoNewMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoNewMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoNewMatch_descriptor_;
}

const ProtoNewMatch& ProtoNewMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoNewMatch_2eproto();
  return *default_instance_;
}

ProtoNewMatch* ProtoNewMatch::default_instance_ = NULL;

ProtoNewMatch* ProtoNewMatch::New() const {
  return new ProtoNewMatch;
}

void ProtoNewMatch::Clear() {
  stage_ = 0u;
  rank_.Clear();
  top8_.Clear();
  top4_.Clear();
  top2_.Clear();
  user_.Clear();
  guess_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoNewMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoNewMatch.ProtoNewMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 stage = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rank;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
      case 2: {
        if (tag == 18) {
         parse_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rank;
        if (input->ExpectTag(26)) goto parse_top8;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
      case 3: {
        if (tag == 26) {
         parse_top8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top8()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_top8;
        if (input->ExpectTag(34)) goto parse_top4;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
      case 4: {
        if (tag == 34) {
         parse_top4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_top4;
        if (input->ExpectTag(42)) goto parse_top2;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
      case 5: {
        if (tag == 42) {
         parse_top2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_top2;
        if (input->ExpectTag(50)) goto parse_user;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
      case 6: {
        if (tag == 50) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_user;
        if (input->ExpectTag(58)) goto parse_guess;
        break;
      }

      // repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
      case 7: {
        if (tag == 58) {
         parse_guess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_guess;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoNewMatch.ProtoNewMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoNewMatch.ProtoNewMatch)
  return false;
#undef DO_
}

void ProtoNewMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoNewMatch.ProtoNewMatch)
  // required uint32 stage = 1;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stage(), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
  for (int i = 0; i < this->rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rank(i), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
  for (int i = 0; i < this->top8_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->top8(i), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
  for (int i = 0; i < this->top4_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->top4(i), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
  for (int i = 0; i < this->top2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->top2(i), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
  for (int i = 0; i < this->user_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->user(i), output);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
  for (int i = 0; i < this->guess_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->guess(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoNewMatch.ProtoNewMatch)
}

::google::protobuf::uint8* ProtoNewMatch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoNewMatch.ProtoNewMatch)
  // required uint32 stage = 1;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stage(), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
  for (int i = 0; i < this->rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rank(i), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
  for (int i = 0; i < this->top8_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->top8(i), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
  for (int i = 0; i < this->top4_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->top4(i), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
  for (int i = 0; i < this->top2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->top2(i), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
  for (int i = 0; i < this->user_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->user(i), target);
  }

  // repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
  for (int i = 0; i < this->guess_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->guess(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoNewMatch.ProtoNewMatch)
  return target;
}

int ProtoNewMatch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stage());
    }

  }
  // repeated .ProtoNewMatch.ProtoNewMatchUser rank = 2;
  total_size += 1 * this->rank_size();
  for (int i = 0; i < this->rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank(i));
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top8 = 3;
  total_size += 1 * this->top8_size();
  for (int i = 0; i < this->top8_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->top8(i));
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top4 = 4;
  total_size += 1 * this->top4_size();
  for (int i = 0; i < this->top4_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->top4(i));
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser top2 = 5;
  total_size += 1 * this->top2_size();
  for (int i = 0; i < this->top2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->top2(i));
  }

  // repeated .ProtoNewMatch.ProtoNewMatchUser user = 6;
  total_size += 1 * this->user_size();
  for (int i = 0; i < this->user_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user(i));
  }

  // repeated .ProtoNewMatch.ProtoNewMatchGuess guess = 7;
  total_size += 1 * this->guess_size();
  for (int i = 0; i < this->guess_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->guess(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoNewMatch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoNewMatch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoNewMatch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoNewMatch::MergeFrom(const ProtoNewMatch& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_.MergeFrom(from.rank_);
  top8_.MergeFrom(from.top8_);
  top4_.MergeFrom(from.top4_);
  top2_.MergeFrom(from.top2_);
  user_.MergeFrom(from.user_);
  guess_.MergeFrom(from.guess_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stage()) {
      set_stage(from.stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoNewMatch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoNewMatch::CopyFrom(const ProtoNewMatch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoNewMatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rank())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->top8())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->top4())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->top2())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->user())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->guess())) return false;
  return true;
}

void ProtoNewMatch::Swap(ProtoNewMatch* other) {
  if (other != this) {
    std::swap(stage_, other->stage_);
    rank_.Swap(&other->rank_);
    top8_.Swap(&other->top8_);
    top4_.Swap(&other->top4_);
    top2_.Swap(&other->top2_);
    user_.Swap(&other->user_);
    guess_.Swap(&other->guess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoNewMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoNewMatch_descriptor_;
  metadata.reflection = ProtoNewMatch_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNewMatch

// @@protoc_insertion_point(global_scope)
