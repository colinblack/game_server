// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NewSoulStone.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NewSoulStone.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NewSoulStone {

namespace {

const ::google::protobuf::Descriptor* OldSoulStoneA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OldSoulStoneA_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewSoulStoneP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewSoulStoneP_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewSoulStoneP3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewSoulStoneP3_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewSoulStone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewSoulStone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_NewSoulStone_2eproto() {
  protobuf_AddDesc_NewSoulStone_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NewSoulStone.proto");
  GOOGLE_CHECK(file != NULL);
  OldSoulStoneA_descriptor_ = file->message_type(0);
  static const int OldSoulStoneA_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OldSoulStoneA, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OldSoulStoneA, a_),
  };
  OldSoulStoneA_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OldSoulStoneA_descriptor_,
      OldSoulStoneA::default_instance_,
      OldSoulStoneA_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OldSoulStoneA, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OldSoulStoneA, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OldSoulStoneA));
  NewSoulStoneP_descriptor_ = file->message_type(1);
  static const int NewSoulStoneP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP, p_),
  };
  NewSoulStoneP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewSoulStoneP_descriptor_,
      NewSoulStoneP::default_instance_,
      NewSoulStoneP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewSoulStoneP));
  NewSoulStoneP3_descriptor_ = file->message_type(2);
  static const int NewSoulStoneP3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP3, newstone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP3, a_),
  };
  NewSoulStoneP3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewSoulStoneP3_descriptor_,
      NewSoulStoneP3::default_instance_,
      NewSoulStoneP3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStoneP3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewSoulStoneP3));
  NewSoulStone_descriptor_ = file->message_type(3);
  static const int NewSoulStone_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStone, oldstone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStone, newstone3_),
  };
  NewSoulStone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewSoulStone_descriptor_,
      NewSoulStone::default_instance_,
      NewSoulStone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSoulStone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewSoulStone));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NewSoulStone_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OldSoulStoneA_descriptor_, &OldSoulStoneA::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewSoulStoneP_descriptor_, &NewSoulStoneP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewSoulStoneP3_descriptor_, &NewSoulStoneP3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewSoulStone_descriptor_, &NewSoulStone::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NewSoulStone_2eproto() {
  delete OldSoulStoneA::default_instance_;
  delete OldSoulStoneA_reflection_;
  delete NewSoulStoneP::default_instance_;
  delete NewSoulStoneP_reflection_;
  delete NewSoulStoneP3::default_instance_;
  delete NewSoulStoneP3_reflection_;
  delete NewSoulStone::default_instance_;
  delete NewSoulStone_reflection_;
}

void protobuf_AddDesc_NewSoulStone_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022NewSoulStone.proto\022\014NewSoulStone\"&\n\rOl"
    "dSoulStoneA\022\n\n\002id\030\001 \002(\r\022\t\n\001a\030\002 \003(\r\"&\n\rNe"
    "wSoulStoneP\022\n\n\002id\030\001 \002(\r\022\t\n\001p\030\002 \002(\r\"J\n\016Ne"
    "wSoulStoneP3\022-\n\010newstone\030\001 \003(\0132\033.NewSoul"
    "Stone.NewSoulStoneP\022\t\n\001a\030\002 \002(\r\"n\n\014NewSou"
    "lStone\022-\n\010oldstone\030\001 \003(\0132\033.NewSoulStone."
    "OldSoulStoneA\022/\n\tnewstone3\030\002 \003(\0132\034.NewSo"
    "ulStone.NewSoulStoneP3", 302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NewSoulStone.proto", &protobuf_RegisterTypes);
  OldSoulStoneA::default_instance_ = new OldSoulStoneA();
  NewSoulStoneP::default_instance_ = new NewSoulStoneP();
  NewSoulStoneP3::default_instance_ = new NewSoulStoneP3();
  NewSoulStone::default_instance_ = new NewSoulStone();
  OldSoulStoneA::default_instance_->InitAsDefaultInstance();
  NewSoulStoneP::default_instance_->InitAsDefaultInstance();
  NewSoulStoneP3::default_instance_->InitAsDefaultInstance();
  NewSoulStone::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NewSoulStone_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NewSoulStone_2eproto {
  StaticDescriptorInitializer_NewSoulStone_2eproto() {
    protobuf_AddDesc_NewSoulStone_2eproto();
  }
} static_descriptor_initializer_NewSoulStone_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int OldSoulStoneA::kIdFieldNumber;
const int OldSoulStoneA::kAFieldNumber;
#endif  // !_MSC_VER

OldSoulStoneA::OldSoulStoneA()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewSoulStone.OldSoulStoneA)
}

void OldSoulStoneA::InitAsDefaultInstance() {
}

OldSoulStoneA::OldSoulStoneA(const OldSoulStoneA& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NewSoulStone.OldSoulStoneA)
}

void OldSoulStoneA::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OldSoulStoneA::~OldSoulStoneA() {
  // @@protoc_insertion_point(destructor:NewSoulStone.OldSoulStoneA)
  SharedDtor();
}

void OldSoulStoneA::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OldSoulStoneA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OldSoulStoneA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OldSoulStoneA_descriptor_;
}

const OldSoulStoneA& OldSoulStoneA::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NewSoulStone_2eproto();
  return *default_instance_;
}

OldSoulStoneA* OldSoulStoneA::default_instance_ = NULL;

OldSoulStoneA* OldSoulStoneA::New() const {
  return new OldSoulStoneA;
}

void OldSoulStoneA::Clear() {
  id_ = 0u;
  a_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OldSoulStoneA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewSoulStone.OldSoulStoneA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_a;
        break;
      }

      // repeated uint32 a = 2;
      case 2: {
        if (tag == 16) {
         parse_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_a())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_a())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_a;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewSoulStone.OldSoulStoneA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewSoulStone.OldSoulStoneA)
  return false;
#undef DO_
}

void OldSoulStoneA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewSoulStone.OldSoulStoneA)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 a = 2;
  for (int i = 0; i < this->a_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->a(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NewSoulStone.OldSoulStoneA)
}

::google::protobuf::uint8* OldSoulStoneA::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewSoulStone.OldSoulStoneA)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated uint32 a = 2;
  for (int i = 0; i < this->a_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->a(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewSoulStone.OldSoulStoneA)
  return target;
}

int OldSoulStoneA::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated uint32 a = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->a_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->a(i));
    }
    total_size += 1 * this->a_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OldSoulStoneA::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OldSoulStoneA* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OldSoulStoneA*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OldSoulStoneA::MergeFrom(const OldSoulStoneA& from) {
  GOOGLE_CHECK_NE(&from, this);
  a_.MergeFrom(from.a_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OldSoulStoneA::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OldSoulStoneA::CopyFrom(const OldSoulStoneA& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OldSoulStoneA::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OldSoulStoneA::Swap(OldSoulStoneA* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    a_.Swap(&other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OldSoulStoneA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OldSoulStoneA_descriptor_;
  metadata.reflection = OldSoulStoneA_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewSoulStoneP::kIdFieldNumber;
const int NewSoulStoneP::kPFieldNumber;
#endif  // !_MSC_VER

NewSoulStoneP::NewSoulStoneP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewSoulStone.NewSoulStoneP)
}

void NewSoulStoneP::InitAsDefaultInstance() {
}

NewSoulStoneP::NewSoulStoneP(const NewSoulStoneP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NewSoulStone.NewSoulStoneP)
}

void NewSoulStoneP::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  p_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewSoulStoneP::~NewSoulStoneP() {
  // @@protoc_insertion_point(destructor:NewSoulStone.NewSoulStoneP)
  SharedDtor();
}

void NewSoulStoneP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewSoulStoneP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSoulStoneP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewSoulStoneP_descriptor_;
}

const NewSoulStoneP& NewSoulStoneP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NewSoulStone_2eproto();
  return *default_instance_;
}

NewSoulStoneP* NewSoulStoneP::default_instance_ = NULL;

NewSoulStoneP* NewSoulStoneP::New() const {
  return new NewSoulStoneP;
}

void NewSoulStoneP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NewSoulStoneP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, p_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewSoulStoneP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewSoulStone.NewSoulStoneP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_p;
        break;
      }

      // required uint32 p = 2;
      case 2: {
        if (tag == 16) {
         parse_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &p_)));
          set_has_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewSoulStone.NewSoulStoneP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewSoulStone.NewSoulStoneP)
  return false;
#undef DO_
}

void NewSoulStoneP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewSoulStone.NewSoulStoneP)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 p = 2;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->p(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NewSoulStone.NewSoulStoneP)
}

::google::protobuf::uint8* NewSoulStoneP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewSoulStone.NewSoulStoneP)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 p = 2;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->p(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewSoulStone.NewSoulStoneP)
  return target;
}

int NewSoulStoneP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 p = 2;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->p());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSoulStoneP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewSoulStoneP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewSoulStoneP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewSoulStoneP::MergeFrom(const NewSoulStoneP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_p()) {
      set_p(from.p());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewSoulStoneP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSoulStoneP::CopyFrom(const NewSoulStoneP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSoulStoneP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NewSoulStoneP::Swap(NewSoulStoneP* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(p_, other->p_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewSoulStoneP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewSoulStoneP_descriptor_;
  metadata.reflection = NewSoulStoneP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewSoulStoneP3::kNewstoneFieldNumber;
const int NewSoulStoneP3::kAFieldNumber;
#endif  // !_MSC_VER

NewSoulStoneP3::NewSoulStoneP3()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewSoulStone.NewSoulStoneP3)
}

void NewSoulStoneP3::InitAsDefaultInstance() {
}

NewSoulStoneP3::NewSoulStoneP3(const NewSoulStoneP3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NewSoulStone.NewSoulStoneP3)
}

void NewSoulStoneP3::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewSoulStoneP3::~NewSoulStoneP3() {
  // @@protoc_insertion_point(destructor:NewSoulStone.NewSoulStoneP3)
  SharedDtor();
}

void NewSoulStoneP3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewSoulStoneP3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSoulStoneP3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewSoulStoneP3_descriptor_;
}

const NewSoulStoneP3& NewSoulStoneP3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NewSoulStone_2eproto();
  return *default_instance_;
}

NewSoulStoneP3* NewSoulStoneP3::default_instance_ = NULL;

NewSoulStoneP3* NewSoulStoneP3::New() const {
  return new NewSoulStoneP3;
}

void NewSoulStoneP3::Clear() {
  a_ = 0u;
  newstone_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewSoulStoneP3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewSoulStone.NewSoulStoneP3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NewSoulStone.NewSoulStoneP newstone = 1;
      case 1: {
        if (tag == 10) {
         parse_newstone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_newstone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_newstone;
        if (input->ExpectTag(16)) goto parse_a;
        break;
      }

      // required uint32 a = 2;
      case 2: {
        if (tag == 16) {
         parse_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewSoulStone.NewSoulStoneP3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewSoulStone.NewSoulStoneP3)
  return false;
#undef DO_
}

void NewSoulStoneP3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewSoulStone.NewSoulStoneP3)
  // repeated .NewSoulStone.NewSoulStoneP newstone = 1;
  for (int i = 0; i < this->newstone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->newstone(i), output);
  }

  // required uint32 a = 2;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NewSoulStone.NewSoulStoneP3)
}

::google::protobuf::uint8* NewSoulStoneP3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewSoulStone.NewSoulStoneP3)
  // repeated .NewSoulStone.NewSoulStoneP newstone = 1;
  for (int i = 0; i < this->newstone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->newstone(i), target);
  }

  // required uint32 a = 2;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewSoulStone.NewSoulStoneP3)
  return target;
}

int NewSoulStoneP3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 a = 2;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a());
    }

  }
  // repeated .NewSoulStone.NewSoulStoneP newstone = 1;
  total_size += 1 * this->newstone_size();
  for (int i = 0; i < this->newstone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newstone(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSoulStoneP3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewSoulStoneP3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewSoulStoneP3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewSoulStoneP3::MergeFrom(const NewSoulStoneP3& from) {
  GOOGLE_CHECK_NE(&from, this);
  newstone_.MergeFrom(from.newstone_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewSoulStoneP3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSoulStoneP3::CopyFrom(const NewSoulStoneP3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSoulStoneP3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->newstone())) return false;
  return true;
}

void NewSoulStoneP3::Swap(NewSoulStoneP3* other) {
  if (other != this) {
    newstone_.Swap(&other->newstone_);
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewSoulStoneP3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewSoulStoneP3_descriptor_;
  metadata.reflection = NewSoulStoneP3_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewSoulStone::kOldstoneFieldNumber;
const int NewSoulStone::kNewstone3FieldNumber;
#endif  // !_MSC_VER

NewSoulStone::NewSoulStone()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewSoulStone.NewSoulStone)
}

void NewSoulStone::InitAsDefaultInstance() {
}

NewSoulStone::NewSoulStone(const NewSoulStone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NewSoulStone.NewSoulStone)
}

void NewSoulStone::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewSoulStone::~NewSoulStone() {
  // @@protoc_insertion_point(destructor:NewSoulStone.NewSoulStone)
  SharedDtor();
}

void NewSoulStone::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewSoulStone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSoulStone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewSoulStone_descriptor_;
}

const NewSoulStone& NewSoulStone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NewSoulStone_2eproto();
  return *default_instance_;
}

NewSoulStone* NewSoulStone::default_instance_ = NULL;

NewSoulStone* NewSoulStone::New() const {
  return new NewSoulStone;
}

void NewSoulStone::Clear() {
  oldstone_.Clear();
  newstone3_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewSoulStone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewSoulStone.NewSoulStone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NewSoulStone.OldSoulStoneA oldstone = 1;
      case 1: {
        if (tag == 10) {
         parse_oldstone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_oldstone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_oldstone;
        if (input->ExpectTag(18)) goto parse_newstone3;
        break;
      }

      // repeated .NewSoulStone.NewSoulStoneP3 newstone3 = 2;
      case 2: {
        if (tag == 18) {
         parse_newstone3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_newstone3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_newstone3;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewSoulStone.NewSoulStone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewSoulStone.NewSoulStone)
  return false;
#undef DO_
}

void NewSoulStone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewSoulStone.NewSoulStone)
  // repeated .NewSoulStone.OldSoulStoneA oldstone = 1;
  for (int i = 0; i < this->oldstone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->oldstone(i), output);
  }

  // repeated .NewSoulStone.NewSoulStoneP3 newstone3 = 2;
  for (int i = 0; i < this->newstone3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newstone3(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NewSoulStone.NewSoulStone)
}

::google::protobuf::uint8* NewSoulStone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewSoulStone.NewSoulStone)
  // repeated .NewSoulStone.OldSoulStoneA oldstone = 1;
  for (int i = 0; i < this->oldstone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->oldstone(i), target);
  }

  // repeated .NewSoulStone.NewSoulStoneP3 newstone3 = 2;
  for (int i = 0; i < this->newstone3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->newstone3(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewSoulStone.NewSoulStone)
  return target;
}

int NewSoulStone::ByteSize() const {
  int total_size = 0;

  // repeated .NewSoulStone.OldSoulStoneA oldstone = 1;
  total_size += 1 * this->oldstone_size();
  for (int i = 0; i < this->oldstone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->oldstone(i));
  }

  // repeated .NewSoulStone.NewSoulStoneP3 newstone3 = 2;
  total_size += 1 * this->newstone3_size();
  for (int i = 0; i < this->newstone3_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newstone3(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSoulStone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewSoulStone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewSoulStone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewSoulStone::MergeFrom(const NewSoulStone& from) {
  GOOGLE_CHECK_NE(&from, this);
  oldstone_.MergeFrom(from.oldstone_);
  newstone3_.MergeFrom(from.newstone3_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewSoulStone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSoulStone::CopyFrom(const NewSoulStone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSoulStone::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->oldstone())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->newstone3())) return false;
  return true;
}

void NewSoulStone::Swap(NewSoulStone* other) {
  if (other != this) {
    oldstone_.Swap(&other->oldstone_);
    newstone3_.Swap(&other->newstone3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewSoulStone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewSoulStone_descriptor_;
  metadata.reflection = NewSoulStone_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NewSoulStone

// @@protoc_insertion_point(global_scope)
