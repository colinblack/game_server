// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigScrollActivity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigScrollActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigScrollActivity {

namespace {

const ::google::protobuf::Descriptor* RefreshPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshPolicy_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExchangePolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExchangePolicy_reflection_ = NULL;
const ::google::protobuf::Descriptor* Affair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Affair_reflection_ = NULL;
const ::google::protobuf::Descriptor* DayAffairs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DayAffairs_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveValueReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveValueReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtraReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtraReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScrollActivity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScrollActivity_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigScrollActivity_2eproto() {
  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigScrollActivity.proto");
  GOOGLE_CHECK(file != NULL);
  RefreshPolicy_descriptor_ = file->message_type(0);
  static const int RefreshPolicy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshPolicy, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshPolicy, land_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshPolicy, material_num_),
  };
  RefreshPolicy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshPolicy_descriptor_,
      RefreshPolicy::default_instance_,
      RefreshPolicy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshPolicy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshPolicy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshPolicy));
  ExchangePolicy_descriptor_ = file->message_type(1);
  static const int ExchangePolicy_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, active_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, type_),
  };
  ExchangePolicy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExchangePolicy_descriptor_,
      ExchangePolicy::default_instance_,
      ExchangePolicy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangePolicy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExchangePolicy));
  Affair_descriptor_ = file->message_type(2);
  static const int Affair_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Affair, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Affair, props_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Affair, cash_),
  };
  Affair_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Affair_descriptor_,
      Affair::default_instance_,
      Affair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Affair, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Affair, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Affair));
  DayAffairs_descriptor_ = file->message_type(3);
  static const int DayAffairs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DayAffairs, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DayAffairs, affairs_),
  };
  DayAffairs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DayAffairs_descriptor_,
      DayAffairs::default_instance_,
      DayAffairs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DayAffairs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DayAffairs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DayAffairs));
  ActiveValueReward_descriptor_ = file->message_type(4);
  static const int ActiveValueReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveValueReward, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveValueReward, reward_),
  };
  ActiveValueReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveValueReward_descriptor_,
      ActiveValueReward::default_instance_,
      ActiveValueReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveValueReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveValueReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveValueReward));
  ExtraReward_descriptor_ = file->message_type(5);
  static const int ExtraReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraReward, reward_),
  };
  ExtraReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtraReward_descriptor_,
      ExtraReward::default_instance_,
      ExtraReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtraReward));
  ScrollActivity_descriptor_ = file->message_type(6);
  static const int ScrollActivity_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, activity_affairs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, active_value_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, extra_reward_),
  };
  ScrollActivity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScrollActivity_descriptor_,
      ScrollActivity::default_instance_,
      ScrollActivity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScrollActivity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScrollActivity));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigScrollActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshPolicy_descriptor_, &RefreshPolicy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExchangePolicy_descriptor_, &ExchangePolicy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Affair_descriptor_, &Affair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DayAffairs_descriptor_, &DayAffairs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveValueReward_descriptor_, &ActiveValueReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtraReward_descriptor_, &ExtraReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScrollActivity_descriptor_, &ScrollActivity::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigScrollActivity_2eproto() {
  delete RefreshPolicy::default_instance_;
  delete RefreshPolicy_reflection_;
  delete ExchangePolicy::default_instance_;
  delete ExchangePolicy_reflection_;
  delete Affair::default_instance_;
  delete Affair_reflection_;
  delete DayAffairs::default_instance_;
  delete DayAffairs_reflection_;
  delete ActiveValueReward::default_instance_;
  delete ActiveValueReward_reflection_;
  delete ExtraReward::default_instance_;
  delete ExtraReward_reflection_;
  delete ScrollActivity::default_instance_;
  delete ScrollActivity_reflection_;
}

void protobuf_AddDesc_ConfigScrollActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RewardConfig::protobuf_AddDesc_RewardConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032ConfigScrollActivity.proto\022\024ConfigScro"
    "llActivity\032\022RewardConfig.proto\"E\n\rRefres"
    "hPolicy\022\014\n\004type\030\001 \002(\r\022\020\n\010land_num\030\002 \003(\r\022"
    "\024\n\014material_num\030\003 \003(\r\"p\n\016ExchangePolicy\022"
    "\r\n\005count\030\001 \002(\r\022+\n\006reward\030\002 \002(\0132\033.RewardC"
    "onfig.RewardItemCfg\022\024\n\014active_value\030\003 \002("
    "\r\022\014\n\004type\030\004 \001(\r\"}\n\006Affair\022\n\n\002id\030\001 \002(\r\0223\n"
    "\005props\030\002 \002(\0132$.ConfigScrollActivity.Exch"
    "angePolicy\0222\n\004cash\030\003 \002(\0132$.ConfigScrollA"
    "ctivity.ExchangePolicy\"H\n\nDayAffairs\022\013\n\003"
    "day\030\001 \002(\r\022-\n\007affairs\030\002 \003(\0132\034.ConfigScrol"
    "lActivity.Affair\"O\n\021ActiveValueReward\022\r\n"
    "\005value\030\001 \002(\r\022+\n\006reward\030\002 \002(\0132\033.RewardCon"
    "fig.RewardItemCfg\":\n\013ExtraReward\022+\n\006rewa"
    "rd\030\001 \002(\0132\033.RewardConfig.RewardItemCfg\"\201\002"
    "\n\016ScrollActivity\0224\n\007refresh\030\001 \003(\0132#.Conf"
    "igScrollActivity.RefreshPolicy\022:\n\020activi"
    "ty_affairs\030\002 \003(\0132 .ConfigScrollActivity."
    "DayAffairs\022D\n\023active_value_reward\030\003 \003(\0132"
    "\'.ConfigScrollActivity.ActiveValueReward"
    "\0227\n\014extra_reward\030\004 \003(\0132!.ConfigScrollAct"
    "ivity.ExtraReward", 857);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigScrollActivity.proto", &protobuf_RegisterTypes);
  RefreshPolicy::default_instance_ = new RefreshPolicy();
  ExchangePolicy::default_instance_ = new ExchangePolicy();
  Affair::default_instance_ = new Affair();
  DayAffairs::default_instance_ = new DayAffairs();
  ActiveValueReward::default_instance_ = new ActiveValueReward();
  ExtraReward::default_instance_ = new ExtraReward();
  ScrollActivity::default_instance_ = new ScrollActivity();
  RefreshPolicy::default_instance_->InitAsDefaultInstance();
  ExchangePolicy::default_instance_->InitAsDefaultInstance();
  Affair::default_instance_->InitAsDefaultInstance();
  DayAffairs::default_instance_->InitAsDefaultInstance();
  ActiveValueReward::default_instance_->InitAsDefaultInstance();
  ExtraReward::default_instance_->InitAsDefaultInstance();
  ScrollActivity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigScrollActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigScrollActivity_2eproto {
  StaticDescriptorInitializer_ConfigScrollActivity_2eproto() {
    protobuf_AddDesc_ConfigScrollActivity_2eproto();
  }
} static_descriptor_initializer_ConfigScrollActivity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RefreshPolicy::kTypeFieldNumber;
const int RefreshPolicy::kLandNumFieldNumber;
const int RefreshPolicy::kMaterialNumFieldNumber;
#endif  // !_MSC_VER

RefreshPolicy::RefreshPolicy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.RefreshPolicy)
}

void RefreshPolicy::InitAsDefaultInstance() {
}

RefreshPolicy::RefreshPolicy(const RefreshPolicy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.RefreshPolicy)
}

void RefreshPolicy::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshPolicy::~RefreshPolicy() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.RefreshPolicy)
  SharedDtor();
}

void RefreshPolicy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshPolicy_descriptor_;
}

const RefreshPolicy& RefreshPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

RefreshPolicy* RefreshPolicy::default_instance_ = NULL;

RefreshPolicy* RefreshPolicy::New() const {
  return new RefreshPolicy;
}

void RefreshPolicy::Clear() {
  type_ = 0u;
  land_num_.Clear();
  material_num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.RefreshPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_land_num;
        break;
      }

      // repeated uint32 land_num = 2;
      case 2: {
        if (tag == 16) {
         parse_land_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_land_num())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_land_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_land_num;
        if (input->ExpectTag(24)) goto parse_material_num;
        break;
      }

      // repeated uint32 material_num = 3;
      case 3: {
        if (tag == 24) {
         parse_material_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_material_num())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_material_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_material_num;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.RefreshPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.RefreshPolicy)
  return false;
#undef DO_
}

void RefreshPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.RefreshPolicy)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated uint32 land_num = 2;
  for (int i = 0; i < this->land_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->land_num(i), output);
  }

  // repeated uint32 material_num = 3;
  for (int i = 0; i < this->material_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->material_num(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.RefreshPolicy)
}

::google::protobuf::uint8* RefreshPolicy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.RefreshPolicy)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated uint32 land_num = 2;
  for (int i = 0; i < this->land_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->land_num(i), target);
  }

  // repeated uint32 material_num = 3;
  for (int i = 0; i < this->material_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->material_num(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.RefreshPolicy)
  return target;
}

int RefreshPolicy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  // repeated uint32 land_num = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->land_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->land_num(i));
    }
    total_size += 1 * this->land_num_size() + data_size;
  }

  // repeated uint32 material_num = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->material_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->material_num(i));
    }
    total_size += 1 * this->material_num_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshPolicy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshPolicy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshPolicy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshPolicy::MergeFrom(const RefreshPolicy& from) {
  GOOGLE_CHECK_NE(&from, this);
  land_num_.MergeFrom(from.land_num_);
  material_num_.MergeFrom(from.material_num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshPolicy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshPolicy::CopyFrom(const RefreshPolicy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshPolicy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RefreshPolicy::Swap(RefreshPolicy* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    land_num_.Swap(&other->land_num_);
    material_num_.Swap(&other->material_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshPolicy_descriptor_;
  metadata.reflection = RefreshPolicy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExchangePolicy::kCountFieldNumber;
const int ExchangePolicy::kRewardFieldNumber;
const int ExchangePolicy::kActiveValueFieldNumber;
const int ExchangePolicy::kTypeFieldNumber;
#endif  // !_MSC_VER

ExchangePolicy::ExchangePolicy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.ExchangePolicy)
}

void ExchangePolicy::InitAsDefaultInstance() {
  reward_ = const_cast< ::RewardConfig::RewardItemCfg*>(&::RewardConfig::RewardItemCfg::default_instance());
}

ExchangePolicy::ExchangePolicy(const ExchangePolicy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.ExchangePolicy)
}

void ExchangePolicy::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0u;
  reward_ = NULL;
  active_value_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExchangePolicy::~ExchangePolicy() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.ExchangePolicy)
  SharedDtor();
}

void ExchangePolicy::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void ExchangePolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExchangePolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExchangePolicy_descriptor_;
}

const ExchangePolicy& ExchangePolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

ExchangePolicy* ExchangePolicy::default_instance_ = NULL;

ExchangePolicy* ExchangePolicy::New() const {
  return new ExchangePolicy;
}

void ExchangePolicy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ExchangePolicy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(count_, type_);
    if (has_reward()) {
      if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExchangePolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.ExchangePolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // required .RewardConfig.RewardItemCfg reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_active_value;
        break;
      }

      // required uint32 active_value = 3;
      case 3: {
        if (tag == 24) {
         parse_active_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_value_)));
          set_has_active_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional uint32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.ExchangePolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.ExchangePolicy)
  return false;
#undef DO_
}

void ExchangePolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.ExchangePolicy)
  // required uint32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // required .RewardConfig.RewardItemCfg reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(), output);
  }

  // required uint32 active_value = 3;
  if (has_active_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->active_value(), output);
  }

  // optional uint32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.ExchangePolicy)
}

::google::protobuf::uint8* ExchangePolicy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.ExchangePolicy)
  // required uint32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // required .RewardConfig.RewardItemCfg reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(), target);
  }

  // required uint32 active_value = 3;
  if (has_active_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->active_value(), target);
  }

  // optional uint32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.ExchangePolicy)
  return target;
}

int ExchangePolicy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // required .RewardConfig.RewardItemCfg reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required uint32 active_value = 3;
    if (has_active_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_value());
    }

    // optional uint32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExchangePolicy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExchangePolicy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExchangePolicy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExchangePolicy::MergeFrom(const ExchangePolicy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_reward()) {
      mutable_reward()->::RewardConfig::RewardItemCfg::MergeFrom(from.reward());
    }
    if (from.has_active_value()) {
      set_active_value(from.active_value());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExchangePolicy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangePolicy::CopyFrom(const ExchangePolicy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangePolicy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void ExchangePolicy::Swap(ExchangePolicy* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(reward_, other->reward_);
    std::swap(active_value_, other->active_value_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExchangePolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExchangePolicy_descriptor_;
  metadata.reflection = ExchangePolicy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Affair::kIdFieldNumber;
const int Affair::kPropsFieldNumber;
const int Affair::kCashFieldNumber;
#endif  // !_MSC_VER

Affair::Affair()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.Affair)
}

void Affair::InitAsDefaultInstance() {
  props_ = const_cast< ::ConfigScrollActivity::ExchangePolicy*>(&::ConfigScrollActivity::ExchangePolicy::default_instance());
  cash_ = const_cast< ::ConfigScrollActivity::ExchangePolicy*>(&::ConfigScrollActivity::ExchangePolicy::default_instance());
}

Affair::Affair(const Affair& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.Affair)
}

void Affair::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  props_ = NULL;
  cash_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Affair::~Affair() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.Affair)
  SharedDtor();
}

void Affair::SharedDtor() {
  if (this != default_instance_) {
    delete props_;
    delete cash_;
  }
}

void Affair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Affair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Affair_descriptor_;
}

const Affair& Affair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

Affair* Affair::default_instance_ = NULL;

Affair* Affair::New() const {
  return new Affair;
}

void Affair::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    if (has_props()) {
      if (props_ != NULL) props_->::ConfigScrollActivity::ExchangePolicy::Clear();
    }
    if (has_cash()) {
      if (cash_ != NULL) cash_->::ConfigScrollActivity::ExchangePolicy::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Affair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.Affair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_props;
        break;
      }

      // required .ConfigScrollActivity.ExchangePolicy props = 2;
      case 2: {
        if (tag == 18) {
         parse_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cash;
        break;
      }

      // required .ConfigScrollActivity.ExchangePolicy cash = 3;
      case 3: {
        if (tag == 26) {
         parse_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cash()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.Affair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.Affair)
  return false;
#undef DO_
}

void Affair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.Affair)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .ConfigScrollActivity.ExchangePolicy props = 2;
  if (has_props()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->props(), output);
  }

  // required .ConfigScrollActivity.ExchangePolicy cash = 3;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.Affair)
}

::google::protobuf::uint8* Affair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.Affair)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .ConfigScrollActivity.ExchangePolicy props = 2;
  if (has_props()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->props(), target);
  }

  // required .ConfigScrollActivity.ExchangePolicy cash = 3;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.Affair)
  return target;
}

int Affair::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .ConfigScrollActivity.ExchangePolicy props = 2;
    if (has_props()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->props());
    }

    // required .ConfigScrollActivity.ExchangePolicy cash = 3;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Affair::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Affair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Affair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Affair::MergeFrom(const Affair& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_props()) {
      mutable_props()->::ConfigScrollActivity::ExchangePolicy::MergeFrom(from.props());
    }
    if (from.has_cash()) {
      mutable_cash()->::ConfigScrollActivity::ExchangePolicy::MergeFrom(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Affair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Affair::CopyFrom(const Affair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Affair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_props()) {
    if (!this->props().IsInitialized()) return false;
  }
  if (has_cash()) {
    if (!this->cash().IsInitialized()) return false;
  }
  return true;
}

void Affair::Swap(Affair* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(props_, other->props_);
    std::swap(cash_, other->cash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Affair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Affair_descriptor_;
  metadata.reflection = Affair_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DayAffairs::kDayFieldNumber;
const int DayAffairs::kAffairsFieldNumber;
#endif  // !_MSC_VER

DayAffairs::DayAffairs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.DayAffairs)
}

void DayAffairs::InitAsDefaultInstance() {
}

DayAffairs::DayAffairs(const DayAffairs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.DayAffairs)
}

void DayAffairs::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DayAffairs::~DayAffairs() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.DayAffairs)
  SharedDtor();
}

void DayAffairs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DayAffairs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DayAffairs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DayAffairs_descriptor_;
}

const DayAffairs& DayAffairs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

DayAffairs* DayAffairs::default_instance_ = NULL;

DayAffairs* DayAffairs::New() const {
  return new DayAffairs;
}

void DayAffairs::Clear() {
  day_ = 0u;
  affairs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DayAffairs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.DayAffairs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_affairs;
        break;
      }

      // repeated .ConfigScrollActivity.Affair affairs = 2;
      case 2: {
        if (tag == 18) {
         parse_affairs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_affairs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_affairs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.DayAffairs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.DayAffairs)
  return false;
#undef DO_
}

void DayAffairs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.DayAffairs)
  // required uint32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  // repeated .ConfigScrollActivity.Affair affairs = 2;
  for (int i = 0; i < this->affairs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->affairs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.DayAffairs)
}

::google::protobuf::uint8* DayAffairs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.DayAffairs)
  // required uint32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  // repeated .ConfigScrollActivity.Affair affairs = 2;
  for (int i = 0; i < this->affairs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->affairs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.DayAffairs)
  return target;
}

int DayAffairs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  // repeated .ConfigScrollActivity.Affair affairs = 2;
  total_size += 1 * this->affairs_size();
  for (int i = 0; i < this->affairs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->affairs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DayAffairs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DayAffairs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DayAffairs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DayAffairs::MergeFrom(const DayAffairs& from) {
  GOOGLE_CHECK_NE(&from, this);
  affairs_.MergeFrom(from.affairs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DayAffairs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DayAffairs::CopyFrom(const DayAffairs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DayAffairs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->affairs())) return false;
  return true;
}

void DayAffairs::Swap(DayAffairs* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    affairs_.Swap(&other->affairs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DayAffairs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DayAffairs_descriptor_;
  metadata.reflection = DayAffairs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveValueReward::kValueFieldNumber;
const int ActiveValueReward::kRewardFieldNumber;
#endif  // !_MSC_VER

ActiveValueReward::ActiveValueReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.ActiveValueReward)
}

void ActiveValueReward::InitAsDefaultInstance() {
  reward_ = const_cast< ::RewardConfig::RewardItemCfg*>(&::RewardConfig::RewardItemCfg::default_instance());
}

ActiveValueReward::ActiveValueReward(const ActiveValueReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.ActiveValueReward)
}

void ActiveValueReward::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0u;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveValueReward::~ActiveValueReward() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.ActiveValueReward)
  SharedDtor();
}

void ActiveValueReward::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void ActiveValueReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveValueReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveValueReward_descriptor_;
}

const ActiveValueReward& ActiveValueReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

ActiveValueReward* ActiveValueReward::default_instance_ = NULL;

ActiveValueReward* ActiveValueReward::New() const {
  return new ActiveValueReward;
}

void ActiveValueReward::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    value_ = 0u;
    if (has_reward()) {
      if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveValueReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.ActiveValueReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // required .RewardConfig.RewardItemCfg reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.ActiveValueReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.ActiveValueReward)
  return false;
#undef DO_
}

void ActiveValueReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.ActiveValueReward)
  // required uint32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  // required .RewardConfig.RewardItemCfg reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.ActiveValueReward)
}

::google::protobuf::uint8* ActiveValueReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.ActiveValueReward)
  // required uint32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  // required .RewardConfig.RewardItemCfg reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.ActiveValueReward)
  return target;
}

int ActiveValueReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // required .RewardConfig.RewardItemCfg reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveValueReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveValueReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveValueReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveValueReward::MergeFrom(const ActiveValueReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_reward()) {
      mutable_reward()->::RewardConfig::RewardItemCfg::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveValueReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveValueReward::CopyFrom(const ActiveValueReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveValueReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void ActiveValueReward::Swap(ActiveValueReward* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActiveValueReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveValueReward_descriptor_;
  metadata.reflection = ActiveValueReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExtraReward::kRewardFieldNumber;
#endif  // !_MSC_VER

ExtraReward::ExtraReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.ExtraReward)
}

void ExtraReward::InitAsDefaultInstance() {
  reward_ = const_cast< ::RewardConfig::RewardItemCfg*>(&::RewardConfig::RewardItemCfg::default_instance());
}

ExtraReward::ExtraReward(const ExtraReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.ExtraReward)
}

void ExtraReward::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtraReward::~ExtraReward() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.ExtraReward)
  SharedDtor();
}

void ExtraReward::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void ExtraReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtraReward_descriptor_;
}

const ExtraReward& ExtraReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

ExtraReward* ExtraReward::default_instance_ = NULL;

ExtraReward* ExtraReward::New() const {
  return new ExtraReward;
}

void ExtraReward::Clear() {
  if (has_reward()) {
    if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtraReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.ExtraReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RewardConfig.RewardItemCfg reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.ExtraReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.ExtraReward)
  return false;
#undef DO_
}

void ExtraReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.ExtraReward)
  // required .RewardConfig.RewardItemCfg reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.ExtraReward)
}

::google::protobuf::uint8* ExtraReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.ExtraReward)
  // required .RewardConfig.RewardItemCfg reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.ExtraReward)
  return target;
}

int ExtraReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RewardConfig.RewardItemCfg reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtraReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtraReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtraReward::MergeFrom(const ExtraReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::RewardConfig::RewardItemCfg::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtraReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraReward::CopyFrom(const ExtraReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void ExtraReward::Swap(ExtraReward* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtraReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtraReward_descriptor_;
  metadata.reflection = ExtraReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScrollActivity::kRefreshFieldNumber;
const int ScrollActivity::kActivityAffairsFieldNumber;
const int ScrollActivity::kActiveValueRewardFieldNumber;
const int ScrollActivity::kExtraRewardFieldNumber;
#endif  // !_MSC_VER

ScrollActivity::ScrollActivity()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigScrollActivity.ScrollActivity)
}

void ScrollActivity::InitAsDefaultInstance() {
}

ScrollActivity::ScrollActivity(const ScrollActivity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigScrollActivity.ScrollActivity)
}

void ScrollActivity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScrollActivity::~ScrollActivity() {
  // @@protoc_insertion_point(destructor:ConfigScrollActivity.ScrollActivity)
  SharedDtor();
}

void ScrollActivity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScrollActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScrollActivity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScrollActivity_descriptor_;
}

const ScrollActivity& ScrollActivity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigScrollActivity_2eproto();
  return *default_instance_;
}

ScrollActivity* ScrollActivity::default_instance_ = NULL;

ScrollActivity* ScrollActivity::New() const {
  return new ScrollActivity;
}

void ScrollActivity::Clear() {
  refresh_.Clear();
  activity_affairs_.Clear();
  active_value_reward_.Clear();
  extra_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScrollActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigScrollActivity.ScrollActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
      case 1: {
        if (tag == 10) {
         parse_refresh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_refresh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_refresh;
        if (input->ExpectTag(18)) goto parse_activity_affairs;
        break;
      }

      // repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
      case 2: {
        if (tag == 18) {
         parse_activity_affairs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_affairs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_activity_affairs;
        if (input->ExpectTag(26)) goto parse_active_value_reward;
        break;
      }

      // repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
      case 3: {
        if (tag == 26) {
         parse_active_value_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_active_value_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_active_value_reward;
        if (input->ExpectTag(34)) goto parse_extra_reward;
        break;
      }

      // repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
      case 4: {
        if (tag == 34) {
         parse_extra_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extra_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extra_reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigScrollActivity.ScrollActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigScrollActivity.ScrollActivity)
  return false;
#undef DO_
}

void ScrollActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigScrollActivity.ScrollActivity)
  // repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
  for (int i = 0; i < this->refresh_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->refresh(i), output);
  }

  // repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
  for (int i = 0; i < this->activity_affairs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->activity_affairs(i), output);
  }

  // repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
  for (int i = 0; i < this->active_value_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->active_value_reward(i), output);
  }

  // repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
  for (int i = 0; i < this->extra_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->extra_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigScrollActivity.ScrollActivity)
}

::google::protobuf::uint8* ScrollActivity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigScrollActivity.ScrollActivity)
  // repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
  for (int i = 0; i < this->refresh_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->refresh(i), target);
  }

  // repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
  for (int i = 0; i < this->activity_affairs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->activity_affairs(i), target);
  }

  // repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
  for (int i = 0; i < this->active_value_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->active_value_reward(i), target);
  }

  // repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
  for (int i = 0; i < this->extra_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->extra_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigScrollActivity.ScrollActivity)
  return target;
}

int ScrollActivity::ByteSize() const {
  int total_size = 0;

  // repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
  total_size += 1 * this->refresh_size();
  for (int i = 0; i < this->refresh_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->refresh(i));
  }

  // repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
  total_size += 1 * this->activity_affairs_size();
  for (int i = 0; i < this->activity_affairs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_affairs(i));
  }

  // repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
  total_size += 1 * this->active_value_reward_size();
  for (int i = 0; i < this->active_value_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->active_value_reward(i));
  }

  // repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
  total_size += 1 * this->extra_reward_size();
  for (int i = 0; i < this->extra_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScrollActivity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScrollActivity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScrollActivity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScrollActivity::MergeFrom(const ScrollActivity& from) {
  GOOGLE_CHECK_NE(&from, this);
  refresh_.MergeFrom(from.refresh_);
  activity_affairs_.MergeFrom(from.activity_affairs_);
  active_value_reward_.MergeFrom(from.active_value_reward_);
  extra_reward_.MergeFrom(from.extra_reward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScrollActivity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScrollActivity::CopyFrom(const ScrollActivity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScrollActivity::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->refresh())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->activity_affairs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->active_value_reward())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->extra_reward())) return false;
  return true;
}

void ScrollActivity::Swap(ScrollActivity* other) {
  if (other != this) {
    refresh_.Swap(&other->refresh_);
    activity_affairs_.Swap(&other->activity_affairs_);
    active_value_reward_.Swap(&other->active_value_reward_);
    extra_reward_.Swap(&other->extra_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScrollActivity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScrollActivity_descriptor_;
  metadata.reflection = ScrollActivity_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigScrollActivity

// @@protoc_insertion_point(global_scope)
