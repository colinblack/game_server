// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YingLing.proto

#ifndef PROTOBUF_YingLing_2eproto__INCLUDED
#define PROTOBUF_YingLing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YingLing {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_YingLing_2eproto();
void protobuf_AssignDesc_YingLing_2eproto();
void protobuf_ShutdownFile_YingLing_2eproto();

class YingLingP;
class YingLingExp;
class YingLingStar;
class YingLing;

// ===================================================================

class YingLingP : public ::google::protobuf::Message {
 public:
  YingLingP();
  virtual ~YingLingP();

  YingLingP(const YingLingP& from);

  inline YingLingP& operator=(const YingLingP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YingLingP& default_instance();

  void Swap(YingLingP* other);

  // implements Message ----------------------------------------------

  YingLingP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YingLingP& from);
  void MergeFrom(const YingLingP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 p = 3;
  inline bool has_p() const;
  inline void clear_p();
  static const int kPFieldNumber = 3;
  inline ::google::protobuf::uint32 p() const;
  inline void set_p(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YingLing.YingLingP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_p();
  inline void clear_has_p();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 p_;
  friend void  protobuf_AddDesc_YingLing_2eproto();
  friend void protobuf_AssignDesc_YingLing_2eproto();
  friend void protobuf_ShutdownFile_YingLing_2eproto();

  void InitAsDefaultInstance();
  static YingLingP* default_instance_;
};
// -------------------------------------------------------------------

class YingLingExp : public ::google::protobuf::Message {
 public:
  YingLingExp();
  virtual ~YingLingExp();

  YingLingExp(const YingLingExp& from);

  inline YingLingExp& operator=(const YingLingExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YingLingExp& default_instance();

  void Swap(YingLingExp* other);

  // implements Message ----------------------------------------------

  YingLingExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YingLingExp& from);
  void MergeFrom(const YingLingExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 r1 = 4;
  inline bool has_r1() const;
  inline void clear_r1();
  static const int kR1FieldNumber = 4;
  inline ::google::protobuf::uint32 r1() const;
  inline void set_r1(::google::protobuf::uint32 value);

  // required uint32 r2 = 5;
  inline bool has_r2() const;
  inline void clear_r2();
  static const int kR2FieldNumber = 5;
  inline ::google::protobuf::uint32 r2() const;
  inline void set_r2(::google::protobuf::uint32 value);

  // required uint32 r3 = 6;
  inline bool has_r3() const;
  inline void clear_r3();
  static const int kR3FieldNumber = 6;
  inline ::google::protobuf::uint32 r3() const;
  inline void set_r3(::google::protobuf::uint32 value);

  // required uint32 r4 = 7;
  inline bool has_r4() const;
  inline void clear_r4();
  static const int kR4FieldNumber = 7;
  inline ::google::protobuf::uint32 r4() const;
  inline void set_r4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YingLing.YingLingExp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_r1();
  inline void clear_has_r1();
  inline void set_has_r2();
  inline void clear_has_r2();
  inline void set_has_r3();
  inline void clear_has_r3();
  inline void set_has_r4();
  inline void clear_has_r4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 r1_;
  ::google::protobuf::uint32 r2_;
  ::google::protobuf::uint32 r3_;
  ::google::protobuf::uint32 r4_;
  friend void  protobuf_AddDesc_YingLing_2eproto();
  friend void protobuf_AssignDesc_YingLing_2eproto();
  friend void protobuf_ShutdownFile_YingLing_2eproto();

  void InitAsDefaultInstance();
  static YingLingExp* default_instance_;
};
// -------------------------------------------------------------------

class YingLingStar : public ::google::protobuf::Message {
 public:
  YingLingStar();
  virtual ~YingLingStar();

  YingLingStar(const YingLingStar& from);

  inline YingLingStar& operator=(const YingLingStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YingLingStar& default_instance();

  void Swap(YingLingStar* other);

  // implements Message ----------------------------------------------

  YingLingStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YingLingStar& from);
  void MergeFrom(const YingLingStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::uint32 sid() const;
  inline void set_sid(::google::protobuf::uint32 value);

  // repeated uint32 cost = 3;
  inline int cost_size() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::uint32 cost(int index) const;
  inline void set_cost(int index, ::google::protobuf::uint32 value);
  inline void add_cost(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cost() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cost();

  // @@protoc_insertion_point(class_scope:YingLing.YingLingStar)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sid();
  inline void clear_has_sid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cost_;
  friend void  protobuf_AddDesc_YingLing_2eproto();
  friend void protobuf_AssignDesc_YingLing_2eproto();
  friend void protobuf_ShutdownFile_YingLing_2eproto();

  void InitAsDefaultInstance();
  static YingLingStar* default_instance_;
};
// -------------------------------------------------------------------

class YingLing : public ::google::protobuf::Message {
 public:
  YingLing();
  virtual ~YingLing();

  YingLing(const YingLing& from);

  inline YingLing& operator=(const YingLing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YingLing& default_instance();

  void Swap(YingLing* other);

  // implements Message ----------------------------------------------

  YingLing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YingLing& from);
  void MergeFrom(const YingLing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .YingLing.YingLingP normal = 1;
  inline int normal_size() const;
  inline void clear_normal();
  static const int kNormalFieldNumber = 1;
  inline const ::YingLing::YingLingP& normal(int index) const;
  inline ::YingLing::YingLingP* mutable_normal(int index);
  inline ::YingLing::YingLingP* add_normal();
  inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >&
      normal() const;
  inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >*
      mutable_normal();

  // repeated .YingLing.YingLingP advance = 2;
  inline int advance_size() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 2;
  inline const ::YingLing::YingLingP& advance(int index) const;
  inline ::YingLing::YingLingP* mutable_advance(int index);
  inline ::YingLing::YingLingP* add_advance();
  inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >&
      advance() const;
  inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >*
      mutable_advance();

  // required uint32 normaltime = 3;
  inline bool has_normaltime() const;
  inline void clear_normaltime();
  static const int kNormaltimeFieldNumber = 3;
  inline ::google::protobuf::uint32 normaltime() const;
  inline void set_normaltime(::google::protobuf::uint32 value);

  // required uint32 advancetime = 4;
  inline bool has_advancetime() const;
  inline void clear_advancetime();
  static const int kAdvancetimeFieldNumber = 4;
  inline ::google::protobuf::uint32 advancetime() const;
  inline void set_advancetime(::google::protobuf::uint32 value);

  // required uint32 advancecost = 5;
  inline bool has_advancecost() const;
  inline void clear_advancecost();
  static const int kAdvancecostFieldNumber = 5;
  inline ::google::protobuf::uint32 advancecost() const;
  inline void set_advancecost(::google::protobuf::uint32 value);

  // repeated .YingLing.YingLingExp exp = 6;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline const ::YingLing::YingLingExp& exp(int index) const;
  inline ::YingLing::YingLingExp* mutable_exp(int index);
  inline ::YingLing::YingLingExp* add_exp();
  inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingExp >&
      exp() const;
  inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingExp >*
      mutable_exp();

  // repeated .YingLing.YingLingStar star = 7;
  inline int star_size() const;
  inline void clear_star();
  static const int kStarFieldNumber = 7;
  inline const ::YingLing::YingLingStar& star(int index) const;
  inline ::YingLing::YingLingStar* mutable_star(int index);
  inline ::YingLing::YingLingStar* add_star();
  inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingStar >&
      star() const;
  inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingStar >*
      mutable_star();

  // @@protoc_insertion_point(class_scope:YingLing.YingLing)
 private:
  inline void set_has_normaltime();
  inline void clear_has_normaltime();
  inline void set_has_advancetime();
  inline void clear_has_advancetime();
  inline void set_has_advancecost();
  inline void clear_has_advancecost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP > normal_;
  ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP > advance_;
  ::google::protobuf::uint32 normaltime_;
  ::google::protobuf::uint32 advancetime_;
  ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingExp > exp_;
  ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingStar > star_;
  ::google::protobuf::uint32 advancecost_;
  friend void  protobuf_AddDesc_YingLing_2eproto();
  friend void protobuf_AssignDesc_YingLing_2eproto();
  friend void protobuf_ShutdownFile_YingLing_2eproto();

  void InitAsDefaultInstance();
  static YingLing* default_instance_;
};
// ===================================================================


// ===================================================================

// YingLingP

// required uint32 id = 1;
inline bool YingLingP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YingLingP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YingLingP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YingLingP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 YingLingP::id() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingP.id)
  return id_;
}
inline void YingLingP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingP.id)
}

// required uint32 count = 2;
inline bool YingLingP::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YingLingP::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YingLingP::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YingLingP::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 YingLingP::count() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingP.count)
  return count_;
}
inline void YingLingP::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingP.count)
}

// required uint32 p = 3;
inline bool YingLingP::has_p() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YingLingP::set_has_p() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YingLingP::clear_has_p() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YingLingP::clear_p() {
  p_ = 0u;
  clear_has_p();
}
inline ::google::protobuf::uint32 YingLingP::p() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingP.p)
  return p_;
}
inline void YingLingP::set_p(::google::protobuf::uint32 value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingP.p)
}

// -------------------------------------------------------------------

// YingLingExp

// required uint32 id = 1;
inline bool YingLingExp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YingLingExp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YingLingExp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YingLingExp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 YingLingExp::id() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.id)
  return id_;
}
inline void YingLingExp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.id)
}

// required uint32 time = 2;
inline bool YingLingExp::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YingLingExp::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YingLingExp::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YingLingExp::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 YingLingExp::time() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.time)
  return time_;
}
inline void YingLingExp::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.time)
}

// required uint32 exp = 3;
inline bool YingLingExp::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YingLingExp::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YingLingExp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YingLingExp::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 YingLingExp::exp() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.exp)
  return exp_;
}
inline void YingLingExp::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.exp)
}

// required uint32 r1 = 4;
inline bool YingLingExp::has_r1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YingLingExp::set_has_r1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YingLingExp::clear_has_r1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YingLingExp::clear_r1() {
  r1_ = 0u;
  clear_has_r1();
}
inline ::google::protobuf::uint32 YingLingExp::r1() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.r1)
  return r1_;
}
inline void YingLingExp::set_r1(::google::protobuf::uint32 value) {
  set_has_r1();
  r1_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.r1)
}

// required uint32 r2 = 5;
inline bool YingLingExp::has_r2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YingLingExp::set_has_r2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YingLingExp::clear_has_r2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YingLingExp::clear_r2() {
  r2_ = 0u;
  clear_has_r2();
}
inline ::google::protobuf::uint32 YingLingExp::r2() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.r2)
  return r2_;
}
inline void YingLingExp::set_r2(::google::protobuf::uint32 value) {
  set_has_r2();
  r2_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.r2)
}

// required uint32 r3 = 6;
inline bool YingLingExp::has_r3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YingLingExp::set_has_r3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YingLingExp::clear_has_r3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YingLingExp::clear_r3() {
  r3_ = 0u;
  clear_has_r3();
}
inline ::google::protobuf::uint32 YingLingExp::r3() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.r3)
  return r3_;
}
inline void YingLingExp::set_r3(::google::protobuf::uint32 value) {
  set_has_r3();
  r3_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.r3)
}

// required uint32 r4 = 7;
inline bool YingLingExp::has_r4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YingLingExp::set_has_r4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YingLingExp::clear_has_r4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YingLingExp::clear_r4() {
  r4_ = 0u;
  clear_has_r4();
}
inline ::google::protobuf::uint32 YingLingExp::r4() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingExp.r4)
  return r4_;
}
inline void YingLingExp::set_r4(::google::protobuf::uint32 value) {
  set_has_r4();
  r4_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingExp.r4)
}

// -------------------------------------------------------------------

// YingLingStar

// required uint32 id = 1;
inline bool YingLingStar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YingLingStar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YingLingStar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YingLingStar::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 YingLingStar::id() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingStar.id)
  return id_;
}
inline void YingLingStar::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingStar.id)
}

// required uint32 sid = 2;
inline bool YingLingStar::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YingLingStar::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YingLingStar::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YingLingStar::clear_sid() {
  sid_ = 0u;
  clear_has_sid();
}
inline ::google::protobuf::uint32 YingLingStar::sid() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingStar.sid)
  return sid_;
}
inline void YingLingStar::set_sid(::google::protobuf::uint32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLingStar.sid)
}

// repeated uint32 cost = 3;
inline int YingLingStar::cost_size() const {
  return cost_.size();
}
inline void YingLingStar::clear_cost() {
  cost_.Clear();
}
inline ::google::protobuf::uint32 YingLingStar::cost(int index) const {
  // @@protoc_insertion_point(field_get:YingLing.YingLingStar.cost)
  return cost_.Get(index);
}
inline void YingLingStar::set_cost(int index, ::google::protobuf::uint32 value) {
  cost_.Set(index, value);
  // @@protoc_insertion_point(field_set:YingLing.YingLingStar.cost)
}
inline void YingLingStar::add_cost(::google::protobuf::uint32 value) {
  cost_.Add(value);
  // @@protoc_insertion_point(field_add:YingLing.YingLingStar.cost)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
YingLingStar::cost() const {
  // @@protoc_insertion_point(field_list:YingLing.YingLingStar.cost)
  return cost_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
YingLingStar::mutable_cost() {
  // @@protoc_insertion_point(field_mutable_list:YingLing.YingLingStar.cost)
  return &cost_;
}

// -------------------------------------------------------------------

// YingLing

// repeated .YingLing.YingLingP normal = 1;
inline int YingLing::normal_size() const {
  return normal_.size();
}
inline void YingLing::clear_normal() {
  normal_.Clear();
}
inline const ::YingLing::YingLingP& YingLing::normal(int index) const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.normal)
  return normal_.Get(index);
}
inline ::YingLing::YingLingP* YingLing::mutable_normal(int index) {
  // @@protoc_insertion_point(field_mutable:YingLing.YingLing.normal)
  return normal_.Mutable(index);
}
inline ::YingLing::YingLingP* YingLing::add_normal() {
  // @@protoc_insertion_point(field_add:YingLing.YingLing.normal)
  return normal_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >&
YingLing::normal() const {
  // @@protoc_insertion_point(field_list:YingLing.YingLing.normal)
  return normal_;
}
inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >*
YingLing::mutable_normal() {
  // @@protoc_insertion_point(field_mutable_list:YingLing.YingLing.normal)
  return &normal_;
}

// repeated .YingLing.YingLingP advance = 2;
inline int YingLing::advance_size() const {
  return advance_.size();
}
inline void YingLing::clear_advance() {
  advance_.Clear();
}
inline const ::YingLing::YingLingP& YingLing::advance(int index) const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.advance)
  return advance_.Get(index);
}
inline ::YingLing::YingLingP* YingLing::mutable_advance(int index) {
  // @@protoc_insertion_point(field_mutable:YingLing.YingLing.advance)
  return advance_.Mutable(index);
}
inline ::YingLing::YingLingP* YingLing::add_advance() {
  // @@protoc_insertion_point(field_add:YingLing.YingLing.advance)
  return advance_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >&
YingLing::advance() const {
  // @@protoc_insertion_point(field_list:YingLing.YingLing.advance)
  return advance_;
}
inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingP >*
YingLing::mutable_advance() {
  // @@protoc_insertion_point(field_mutable_list:YingLing.YingLing.advance)
  return &advance_;
}

// required uint32 normaltime = 3;
inline bool YingLing::has_normaltime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YingLing::set_has_normaltime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YingLing::clear_has_normaltime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YingLing::clear_normaltime() {
  normaltime_ = 0u;
  clear_has_normaltime();
}
inline ::google::protobuf::uint32 YingLing::normaltime() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.normaltime)
  return normaltime_;
}
inline void YingLing::set_normaltime(::google::protobuf::uint32 value) {
  set_has_normaltime();
  normaltime_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLing.normaltime)
}

// required uint32 advancetime = 4;
inline bool YingLing::has_advancetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YingLing::set_has_advancetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YingLing::clear_has_advancetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YingLing::clear_advancetime() {
  advancetime_ = 0u;
  clear_has_advancetime();
}
inline ::google::protobuf::uint32 YingLing::advancetime() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.advancetime)
  return advancetime_;
}
inline void YingLing::set_advancetime(::google::protobuf::uint32 value) {
  set_has_advancetime();
  advancetime_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLing.advancetime)
}

// required uint32 advancecost = 5;
inline bool YingLing::has_advancecost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YingLing::set_has_advancecost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YingLing::clear_has_advancecost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YingLing::clear_advancecost() {
  advancecost_ = 0u;
  clear_has_advancecost();
}
inline ::google::protobuf::uint32 YingLing::advancecost() const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.advancecost)
  return advancecost_;
}
inline void YingLing::set_advancecost(::google::protobuf::uint32 value) {
  set_has_advancecost();
  advancecost_ = value;
  // @@protoc_insertion_point(field_set:YingLing.YingLing.advancecost)
}

// repeated .YingLing.YingLingExp exp = 6;
inline int YingLing::exp_size() const {
  return exp_.size();
}
inline void YingLing::clear_exp() {
  exp_.Clear();
}
inline const ::YingLing::YingLingExp& YingLing::exp(int index) const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.exp)
  return exp_.Get(index);
}
inline ::YingLing::YingLingExp* YingLing::mutable_exp(int index) {
  // @@protoc_insertion_point(field_mutable:YingLing.YingLing.exp)
  return exp_.Mutable(index);
}
inline ::YingLing::YingLingExp* YingLing::add_exp() {
  // @@protoc_insertion_point(field_add:YingLing.YingLing.exp)
  return exp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingExp >&
YingLing::exp() const {
  // @@protoc_insertion_point(field_list:YingLing.YingLing.exp)
  return exp_;
}
inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingExp >*
YingLing::mutable_exp() {
  // @@protoc_insertion_point(field_mutable_list:YingLing.YingLing.exp)
  return &exp_;
}

// repeated .YingLing.YingLingStar star = 7;
inline int YingLing::star_size() const {
  return star_.size();
}
inline void YingLing::clear_star() {
  star_.Clear();
}
inline const ::YingLing::YingLingStar& YingLing::star(int index) const {
  // @@protoc_insertion_point(field_get:YingLing.YingLing.star)
  return star_.Get(index);
}
inline ::YingLing::YingLingStar* YingLing::mutable_star(int index) {
  // @@protoc_insertion_point(field_mutable:YingLing.YingLing.star)
  return star_.Mutable(index);
}
inline ::YingLing::YingLingStar* YingLing::add_star() {
  // @@protoc_insertion_point(field_add:YingLing.YingLing.star)
  return star_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingStar >&
YingLing::star() const {
  // @@protoc_insertion_point(field_list:YingLing.YingLing.star)
  return star_;
}
inline ::google::protobuf::RepeatedPtrField< ::YingLing::YingLingStar >*
YingLing::mutable_star() {
  // @@protoc_insertion_point(field_mutable_list:YingLing.YingLing.star)
  return &star_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace YingLing

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_YingLing_2eproto__INCLUDED
