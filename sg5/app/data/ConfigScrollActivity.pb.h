// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigScrollActivity.proto

#ifndef PROTOBUF_ConfigScrollActivity_2eproto__INCLUDED
#define PROTOBUF_ConfigScrollActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigScrollActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

class RefreshPolicy;
class ExchangePolicy;
class Affair;
class DayAffairs;
class ActiveValueReward;
class ExtraReward;
class ScrollActivity;

// ===================================================================

class RefreshPolicy : public ::google::protobuf::Message {
 public:
  RefreshPolicy();
  virtual ~RefreshPolicy();

  RefreshPolicy(const RefreshPolicy& from);

  inline RefreshPolicy& operator=(const RefreshPolicy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshPolicy& default_instance();

  void Swap(RefreshPolicy* other);

  // implements Message ----------------------------------------------

  RefreshPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshPolicy& from);
  void MergeFrom(const RefreshPolicy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated uint32 land_num = 2;
  inline int land_num_size() const;
  inline void clear_land_num();
  static const int kLandNumFieldNumber = 2;
  inline ::google::protobuf::uint32 land_num(int index) const;
  inline void set_land_num(int index, ::google::protobuf::uint32 value);
  inline void add_land_num(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      land_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_land_num();

  // repeated uint32 material_num = 3;
  inline int material_num_size() const;
  inline void clear_material_num();
  static const int kMaterialNumFieldNumber = 3;
  inline ::google::protobuf::uint32 material_num(int index) const;
  inline void set_material_num(int index, ::google::protobuf::uint32 value);
  inline void add_material_num(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      material_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_material_num();

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.RefreshPolicy)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > land_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > material_num_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static RefreshPolicy* default_instance_;
};
// -------------------------------------------------------------------

class ExchangePolicy : public ::google::protobuf::Message {
 public:
  ExchangePolicy();
  virtual ~ExchangePolicy();

  ExchangePolicy(const ExchangePolicy& from);

  inline ExchangePolicy& operator=(const ExchangePolicy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangePolicy& default_instance();

  void Swap(ExchangePolicy* other);

  // implements Message ----------------------------------------------

  ExchangePolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangePolicy& from);
  void MergeFrom(const ExchangePolicy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required .RewardConfig.RewardItemCfg reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::RewardConfig::RewardItemCfg& reward() const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward();
  inline ::RewardConfig::RewardItemCfg* release_reward();
  inline void set_allocated_reward(::RewardConfig::RewardItemCfg* reward);

  // required uint32 active_value = 3;
  inline bool has_active_value() const;
  inline void clear_active_value();
  static const int kActiveValueFieldNumber = 3;
  inline ::google::protobuf::uint32 active_value() const;
  inline void set_active_value(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.ExchangePolicy)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_active_value();
  inline void clear_has_active_value();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RewardConfig::RewardItemCfg* reward_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 active_value_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static ExchangePolicy* default_instance_;
};
// -------------------------------------------------------------------

class Affair : public ::google::protobuf::Message {
 public:
  Affair();
  virtual ~Affair();

  Affair(const Affair& from);

  inline Affair& operator=(const Affair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Affair& default_instance();

  void Swap(Affair* other);

  // implements Message ----------------------------------------------

  Affair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Affair& from);
  void MergeFrom(const Affair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .ConfigScrollActivity.ExchangePolicy props = 2;
  inline bool has_props() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 2;
  inline const ::ConfigScrollActivity::ExchangePolicy& props() const;
  inline ::ConfigScrollActivity::ExchangePolicy* mutable_props();
  inline ::ConfigScrollActivity::ExchangePolicy* release_props();
  inline void set_allocated_props(::ConfigScrollActivity::ExchangePolicy* props);

  // required .ConfigScrollActivity.ExchangePolicy cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline const ::ConfigScrollActivity::ExchangePolicy& cash() const;
  inline ::ConfigScrollActivity::ExchangePolicy* mutable_cash();
  inline ::ConfigScrollActivity::ExchangePolicy* release_cash();
  inline void set_allocated_cash(::ConfigScrollActivity::ExchangePolicy* cash);

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.Affair)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_props();
  inline void clear_has_props();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigScrollActivity::ExchangePolicy* props_;
  ::ConfigScrollActivity::ExchangePolicy* cash_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static Affair* default_instance_;
};
// -------------------------------------------------------------------

class DayAffairs : public ::google::protobuf::Message {
 public:
  DayAffairs();
  virtual ~DayAffairs();

  DayAffairs(const DayAffairs& from);

  inline DayAffairs& operator=(const DayAffairs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayAffairs& default_instance();

  void Swap(DayAffairs* other);

  // implements Message ----------------------------------------------

  DayAffairs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayAffairs& from);
  void MergeFrom(const DayAffairs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated .ConfigScrollActivity.Affair affairs = 2;
  inline int affairs_size() const;
  inline void clear_affairs();
  static const int kAffairsFieldNumber = 2;
  inline const ::ConfigScrollActivity::Affair& affairs(int index) const;
  inline ::ConfigScrollActivity::Affair* mutable_affairs(int index);
  inline ::ConfigScrollActivity::Affair* add_affairs();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::Affair >&
      affairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::Affair >*
      mutable_affairs();

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.DayAffairs)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::Affair > affairs_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static DayAffairs* default_instance_;
};
// -------------------------------------------------------------------

class ActiveValueReward : public ::google::protobuf::Message {
 public:
  ActiveValueReward();
  virtual ~ActiveValueReward();

  ActiveValueReward(const ActiveValueReward& from);

  inline ActiveValueReward& operator=(const ActiveValueReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveValueReward& default_instance();

  void Swap(ActiveValueReward* other);

  // implements Message ----------------------------------------------

  ActiveValueReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveValueReward& from);
  void MergeFrom(const ActiveValueReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required .RewardConfig.RewardItemCfg reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::RewardConfig::RewardItemCfg& reward() const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward();
  inline ::RewardConfig::RewardItemCfg* release_reward();
  inline void set_allocated_reward(::RewardConfig::RewardItemCfg* reward);

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.ActiveValueReward)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RewardConfig::RewardItemCfg* reward_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static ActiveValueReward* default_instance_;
};
// -------------------------------------------------------------------

class ExtraReward : public ::google::protobuf::Message {
 public:
  ExtraReward();
  virtual ~ExtraReward();

  ExtraReward(const ExtraReward& from);

  inline ExtraReward& operator=(const ExtraReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtraReward& default_instance();

  void Swap(ExtraReward* other);

  // implements Message ----------------------------------------------

  ExtraReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtraReward& from);
  void MergeFrom(const ExtraReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .RewardConfig.RewardItemCfg reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::RewardConfig::RewardItemCfg& reward() const;
  inline ::RewardConfig::RewardItemCfg* mutable_reward();
  inline ::RewardConfig::RewardItemCfg* release_reward();
  inline void set_allocated_reward(::RewardConfig::RewardItemCfg* reward);

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.ExtraReward)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RewardConfig::RewardItemCfg* reward_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static ExtraReward* default_instance_;
};
// -------------------------------------------------------------------

class ScrollActivity : public ::google::protobuf::Message {
 public:
  ScrollActivity();
  virtual ~ScrollActivity();

  ScrollActivity(const ScrollActivity& from);

  inline ScrollActivity& operator=(const ScrollActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScrollActivity& default_instance();

  void Swap(ScrollActivity* other);

  // implements Message ----------------------------------------------

  ScrollActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScrollActivity& from);
  void MergeFrom(const ScrollActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
  inline int refresh_size() const;
  inline void clear_refresh();
  static const int kRefreshFieldNumber = 1;
  inline const ::ConfigScrollActivity::RefreshPolicy& refresh(int index) const;
  inline ::ConfigScrollActivity::RefreshPolicy* mutable_refresh(int index);
  inline ::ConfigScrollActivity::RefreshPolicy* add_refresh();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::RefreshPolicy >&
      refresh() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::RefreshPolicy >*
      mutable_refresh();

  // repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
  inline int activity_affairs_size() const;
  inline void clear_activity_affairs();
  static const int kActivityAffairsFieldNumber = 2;
  inline const ::ConfigScrollActivity::DayAffairs& activity_affairs(int index) const;
  inline ::ConfigScrollActivity::DayAffairs* mutable_activity_affairs(int index);
  inline ::ConfigScrollActivity::DayAffairs* add_activity_affairs();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::DayAffairs >&
      activity_affairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::DayAffairs >*
      mutable_activity_affairs();

  // repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
  inline int active_value_reward_size() const;
  inline void clear_active_value_reward();
  static const int kActiveValueRewardFieldNumber = 3;
  inline const ::ConfigScrollActivity::ActiveValueReward& active_value_reward(int index) const;
  inline ::ConfigScrollActivity::ActiveValueReward* mutable_active_value_reward(int index);
  inline ::ConfigScrollActivity::ActiveValueReward* add_active_value_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ActiveValueReward >&
      active_value_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ActiveValueReward >*
      mutable_active_value_reward();

  // repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
  inline int extra_reward_size() const;
  inline void clear_extra_reward();
  static const int kExtraRewardFieldNumber = 4;
  inline const ::ConfigScrollActivity::ExtraReward& extra_reward(int index) const;
  inline ::ConfigScrollActivity::ExtraReward* mutable_extra_reward(int index);
  inline ::ConfigScrollActivity::ExtraReward* add_extra_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ExtraReward >&
      extra_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ExtraReward >*
      mutable_extra_reward();

  // @@protoc_insertion_point(class_scope:ConfigScrollActivity.ScrollActivity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::RefreshPolicy > refresh_;
  ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::DayAffairs > activity_affairs_;
  ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ActiveValueReward > active_value_reward_;
  ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ExtraReward > extra_reward_;
  friend void  protobuf_AddDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigScrollActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigScrollActivity_2eproto();

  void InitAsDefaultInstance();
  static ScrollActivity* default_instance_;
};
// ===================================================================


// ===================================================================

// RefreshPolicy

// required uint32 type = 1;
inline bool RefreshPolicy::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshPolicy::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshPolicy::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshPolicy::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RefreshPolicy::type() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.RefreshPolicy.type)
  return type_;
}
inline void RefreshPolicy::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.RefreshPolicy.type)
}

// repeated uint32 land_num = 2;
inline int RefreshPolicy::land_num_size() const {
  return land_num_.size();
}
inline void RefreshPolicy::clear_land_num() {
  land_num_.Clear();
}
inline ::google::protobuf::uint32 RefreshPolicy::land_num(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.RefreshPolicy.land_num)
  return land_num_.Get(index);
}
inline void RefreshPolicy::set_land_num(int index, ::google::protobuf::uint32 value) {
  land_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.RefreshPolicy.land_num)
}
inline void RefreshPolicy::add_land_num(::google::protobuf::uint32 value) {
  land_num_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.RefreshPolicy.land_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RefreshPolicy::land_num() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.RefreshPolicy.land_num)
  return land_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RefreshPolicy::mutable_land_num() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.RefreshPolicy.land_num)
  return &land_num_;
}

// repeated uint32 material_num = 3;
inline int RefreshPolicy::material_num_size() const {
  return material_num_.size();
}
inline void RefreshPolicy::clear_material_num() {
  material_num_.Clear();
}
inline ::google::protobuf::uint32 RefreshPolicy::material_num(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.RefreshPolicy.material_num)
  return material_num_.Get(index);
}
inline void RefreshPolicy::set_material_num(int index, ::google::protobuf::uint32 value) {
  material_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.RefreshPolicy.material_num)
}
inline void RefreshPolicy::add_material_num(::google::protobuf::uint32 value) {
  material_num_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.RefreshPolicy.material_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RefreshPolicy::material_num() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.RefreshPolicy.material_num)
  return material_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RefreshPolicy::mutable_material_num() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.RefreshPolicy.material_num)
  return &material_num_;
}

// -------------------------------------------------------------------

// ExchangePolicy

// required uint32 count = 1;
inline bool ExchangePolicy::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangePolicy::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangePolicy::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangePolicy::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ExchangePolicy::count() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ExchangePolicy.count)
  return count_;
}
inline void ExchangePolicy::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.ExchangePolicy.count)
}

// required .RewardConfig.RewardItemCfg reward = 2;
inline bool ExchangePolicy::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangePolicy::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangePolicy::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangePolicy::clear_reward() {
  if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
  clear_has_reward();
}
inline const ::RewardConfig::RewardItemCfg& ExchangePolicy::reward() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ExchangePolicy.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::RewardConfig::RewardItemCfg* ExchangePolicy::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::RewardConfig::RewardItemCfg;
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ExchangePolicy.reward)
  return reward_;
}
inline ::RewardConfig::RewardItemCfg* ExchangePolicy::release_reward() {
  clear_has_reward();
  ::RewardConfig::RewardItemCfg* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ExchangePolicy::set_allocated_reward(::RewardConfig::RewardItemCfg* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigScrollActivity.ExchangePolicy.reward)
}

// required uint32 active_value = 3;
inline bool ExchangePolicy::has_active_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangePolicy::set_has_active_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangePolicy::clear_has_active_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangePolicy::clear_active_value() {
  active_value_ = 0u;
  clear_has_active_value();
}
inline ::google::protobuf::uint32 ExchangePolicy::active_value() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ExchangePolicy.active_value)
  return active_value_;
}
inline void ExchangePolicy::set_active_value(::google::protobuf::uint32 value) {
  set_has_active_value();
  active_value_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.ExchangePolicy.active_value)
}

// optional uint32 type = 4;
inline bool ExchangePolicy::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangePolicy::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangePolicy::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangePolicy::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ExchangePolicy::type() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ExchangePolicy.type)
  return type_;
}
inline void ExchangePolicy::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.ExchangePolicy.type)
}

// -------------------------------------------------------------------

// Affair

// required uint32 id = 1;
inline bool Affair::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Affair::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Affair::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Affair::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Affair::id() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.Affair.id)
  return id_;
}
inline void Affair::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.Affair.id)
}

// required .ConfigScrollActivity.ExchangePolicy props = 2;
inline bool Affair::has_props() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Affair::set_has_props() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Affair::clear_has_props() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Affair::clear_props() {
  if (props_ != NULL) props_->::ConfigScrollActivity::ExchangePolicy::Clear();
  clear_has_props();
}
inline const ::ConfigScrollActivity::ExchangePolicy& Affair::props() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.Affair.props)
  return props_ != NULL ? *props_ : *default_instance_->props_;
}
inline ::ConfigScrollActivity::ExchangePolicy* Affair::mutable_props() {
  set_has_props();
  if (props_ == NULL) props_ = new ::ConfigScrollActivity::ExchangePolicy;
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.Affair.props)
  return props_;
}
inline ::ConfigScrollActivity::ExchangePolicy* Affair::release_props() {
  clear_has_props();
  ::ConfigScrollActivity::ExchangePolicy* temp = props_;
  props_ = NULL;
  return temp;
}
inline void Affair::set_allocated_props(::ConfigScrollActivity::ExchangePolicy* props) {
  delete props_;
  props_ = props;
  if (props) {
    set_has_props();
  } else {
    clear_has_props();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigScrollActivity.Affair.props)
}

// required .ConfigScrollActivity.ExchangePolicy cash = 3;
inline bool Affair::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Affair::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Affair::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Affair::clear_cash() {
  if (cash_ != NULL) cash_->::ConfigScrollActivity::ExchangePolicy::Clear();
  clear_has_cash();
}
inline const ::ConfigScrollActivity::ExchangePolicy& Affair::cash() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.Affair.cash)
  return cash_ != NULL ? *cash_ : *default_instance_->cash_;
}
inline ::ConfigScrollActivity::ExchangePolicy* Affair::mutable_cash() {
  set_has_cash();
  if (cash_ == NULL) cash_ = new ::ConfigScrollActivity::ExchangePolicy;
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.Affair.cash)
  return cash_;
}
inline ::ConfigScrollActivity::ExchangePolicy* Affair::release_cash() {
  clear_has_cash();
  ::ConfigScrollActivity::ExchangePolicy* temp = cash_;
  cash_ = NULL;
  return temp;
}
inline void Affair::set_allocated_cash(::ConfigScrollActivity::ExchangePolicy* cash) {
  delete cash_;
  cash_ = cash;
  if (cash) {
    set_has_cash();
  } else {
    clear_has_cash();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigScrollActivity.Affair.cash)
}

// -------------------------------------------------------------------

// DayAffairs

// required uint32 day = 1;
inline bool DayAffairs::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayAffairs::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayAffairs::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayAffairs::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 DayAffairs::day() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.DayAffairs.day)
  return day_;
}
inline void DayAffairs::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.DayAffairs.day)
}

// repeated .ConfigScrollActivity.Affair affairs = 2;
inline int DayAffairs::affairs_size() const {
  return affairs_.size();
}
inline void DayAffairs::clear_affairs() {
  affairs_.Clear();
}
inline const ::ConfigScrollActivity::Affair& DayAffairs::affairs(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.DayAffairs.affairs)
  return affairs_.Get(index);
}
inline ::ConfigScrollActivity::Affair* DayAffairs::mutable_affairs(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.DayAffairs.affairs)
  return affairs_.Mutable(index);
}
inline ::ConfigScrollActivity::Affair* DayAffairs::add_affairs() {
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.DayAffairs.affairs)
  return affairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::Affair >&
DayAffairs::affairs() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.DayAffairs.affairs)
  return affairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::Affair >*
DayAffairs::mutable_affairs() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.DayAffairs.affairs)
  return &affairs_;
}

// -------------------------------------------------------------------

// ActiveValueReward

// required uint32 value = 1;
inline bool ActiveValueReward::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveValueReward::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveValueReward::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveValueReward::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ActiveValueReward::value() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ActiveValueReward.value)
  return value_;
}
inline void ActiveValueReward::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ConfigScrollActivity.ActiveValueReward.value)
}

// required .RewardConfig.RewardItemCfg reward = 2;
inline bool ActiveValueReward::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActiveValueReward::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActiveValueReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActiveValueReward::clear_reward() {
  if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
  clear_has_reward();
}
inline const ::RewardConfig::RewardItemCfg& ActiveValueReward::reward() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ActiveValueReward.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::RewardConfig::RewardItemCfg* ActiveValueReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::RewardConfig::RewardItemCfg;
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ActiveValueReward.reward)
  return reward_;
}
inline ::RewardConfig::RewardItemCfg* ActiveValueReward::release_reward() {
  clear_has_reward();
  ::RewardConfig::RewardItemCfg* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ActiveValueReward::set_allocated_reward(::RewardConfig::RewardItemCfg* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigScrollActivity.ActiveValueReward.reward)
}

// -------------------------------------------------------------------

// ExtraReward

// required .RewardConfig.RewardItemCfg reward = 1;
inline bool ExtraReward::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtraReward::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtraReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtraReward::clear_reward() {
  if (reward_ != NULL) reward_->::RewardConfig::RewardItemCfg::Clear();
  clear_has_reward();
}
inline const ::RewardConfig::RewardItemCfg& ExtraReward::reward() const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ExtraReward.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::RewardConfig::RewardItemCfg* ExtraReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::RewardConfig::RewardItemCfg;
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ExtraReward.reward)
  return reward_;
}
inline ::RewardConfig::RewardItemCfg* ExtraReward::release_reward() {
  clear_has_reward();
  ::RewardConfig::RewardItemCfg* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ExtraReward::set_allocated_reward(::RewardConfig::RewardItemCfg* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigScrollActivity.ExtraReward.reward)
}

// -------------------------------------------------------------------

// ScrollActivity

// repeated .ConfigScrollActivity.RefreshPolicy refresh = 1;
inline int ScrollActivity::refresh_size() const {
  return refresh_.size();
}
inline void ScrollActivity::clear_refresh() {
  refresh_.Clear();
}
inline const ::ConfigScrollActivity::RefreshPolicy& ScrollActivity::refresh(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ScrollActivity.refresh)
  return refresh_.Get(index);
}
inline ::ConfigScrollActivity::RefreshPolicy* ScrollActivity::mutable_refresh(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ScrollActivity.refresh)
  return refresh_.Mutable(index);
}
inline ::ConfigScrollActivity::RefreshPolicy* ScrollActivity::add_refresh() {
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.ScrollActivity.refresh)
  return refresh_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::RefreshPolicy >&
ScrollActivity::refresh() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.ScrollActivity.refresh)
  return refresh_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::RefreshPolicy >*
ScrollActivity::mutable_refresh() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.ScrollActivity.refresh)
  return &refresh_;
}

// repeated .ConfigScrollActivity.DayAffairs activity_affairs = 2;
inline int ScrollActivity::activity_affairs_size() const {
  return activity_affairs_.size();
}
inline void ScrollActivity::clear_activity_affairs() {
  activity_affairs_.Clear();
}
inline const ::ConfigScrollActivity::DayAffairs& ScrollActivity::activity_affairs(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ScrollActivity.activity_affairs)
  return activity_affairs_.Get(index);
}
inline ::ConfigScrollActivity::DayAffairs* ScrollActivity::mutable_activity_affairs(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ScrollActivity.activity_affairs)
  return activity_affairs_.Mutable(index);
}
inline ::ConfigScrollActivity::DayAffairs* ScrollActivity::add_activity_affairs() {
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.ScrollActivity.activity_affairs)
  return activity_affairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::DayAffairs >&
ScrollActivity::activity_affairs() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.ScrollActivity.activity_affairs)
  return activity_affairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::DayAffairs >*
ScrollActivity::mutable_activity_affairs() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.ScrollActivity.activity_affairs)
  return &activity_affairs_;
}

// repeated .ConfigScrollActivity.ActiveValueReward active_value_reward = 3;
inline int ScrollActivity::active_value_reward_size() const {
  return active_value_reward_.size();
}
inline void ScrollActivity::clear_active_value_reward() {
  active_value_reward_.Clear();
}
inline const ::ConfigScrollActivity::ActiveValueReward& ScrollActivity::active_value_reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ScrollActivity.active_value_reward)
  return active_value_reward_.Get(index);
}
inline ::ConfigScrollActivity::ActiveValueReward* ScrollActivity::mutable_active_value_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ScrollActivity.active_value_reward)
  return active_value_reward_.Mutable(index);
}
inline ::ConfigScrollActivity::ActiveValueReward* ScrollActivity::add_active_value_reward() {
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.ScrollActivity.active_value_reward)
  return active_value_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ActiveValueReward >&
ScrollActivity::active_value_reward() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.ScrollActivity.active_value_reward)
  return active_value_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ActiveValueReward >*
ScrollActivity::mutable_active_value_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.ScrollActivity.active_value_reward)
  return &active_value_reward_;
}

// repeated .ConfigScrollActivity.ExtraReward extra_reward = 4;
inline int ScrollActivity::extra_reward_size() const {
  return extra_reward_.size();
}
inline void ScrollActivity::clear_extra_reward() {
  extra_reward_.Clear();
}
inline const ::ConfigScrollActivity::ExtraReward& ScrollActivity::extra_reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigScrollActivity.ScrollActivity.extra_reward)
  return extra_reward_.Get(index);
}
inline ::ConfigScrollActivity::ExtraReward* ScrollActivity::mutable_extra_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigScrollActivity.ScrollActivity.extra_reward)
  return extra_reward_.Mutable(index);
}
inline ::ConfigScrollActivity::ExtraReward* ScrollActivity::add_extra_reward() {
  // @@protoc_insertion_point(field_add:ConfigScrollActivity.ScrollActivity.extra_reward)
  return extra_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ExtraReward >&
ScrollActivity::extra_reward() const {
  // @@protoc_insertion_point(field_list:ConfigScrollActivity.ScrollActivity.extra_reward)
  return extra_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigScrollActivity::ExtraReward >*
ScrollActivity::mutable_extra_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigScrollActivity.ScrollActivity.extra_reward)
  return &extra_reward_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigScrollActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigScrollActivity_2eproto__INCLUDED
