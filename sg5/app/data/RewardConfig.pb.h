// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RewardConfig.proto

#ifndef PROTOBUF_RewardConfig_2eproto__INCLUDED
#define PROTOBUF_RewardConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RewardConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RewardConfig_2eproto();
void protobuf_AssignDesc_RewardConfig_2eproto();
void protobuf_ShutdownFile_RewardConfig_2eproto();

class EquipItem;
class HeroItem;
class RewardItemCfg;

// ===================================================================

class EquipItem : public ::google::protobuf::Message {
 public:
  EquipItem();
  virtual ~EquipItem();

  EquipItem(const EquipItem& from);

  inline EquipItem& operator=(const EquipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipItem& default_instance();

  void Swap(EquipItem* other);

  // implements Message ----------------------------------------------

  EquipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipItem& from);
  void MergeFrom(const EquipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eqid = 1;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 1;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // required uint32 c = 2;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 2;
  inline ::google::protobuf::uint32 c() const;
  inline void set_c(::google::protobuf::uint32 value);

  // optional uint32 ch = 3;
  inline bool has_ch() const;
  inline void clear_ch();
  static const int kChFieldNumber = 3;
  inline ::google::protobuf::uint32 ch() const;
  inline void set_ch(::google::protobuf::uint32 value);

  // optional uint32 q = 4;
  inline bool has_q() const;
  inline void clear_q();
  static const int kQFieldNumber = 4;
  inline ::google::protobuf::uint32 q() const;
  inline void set_q(::google::protobuf::uint32 value);

  // optional uint32 ltime = 5;
  inline bool has_ltime() const;
  inline void clear_ltime();
  static const int kLtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 ltime() const;
  inline void set_ltime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RewardConfig.EquipItem)
 private:
  inline void set_has_eqid();
  inline void clear_has_eqid();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_ch();
  inline void clear_has_ch();
  inline void set_has_q();
  inline void clear_has_q();
  inline void set_has_ltime();
  inline void clear_has_ltime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eqid_;
  ::google::protobuf::uint32 c_;
  ::google::protobuf::uint32 ch_;
  ::google::protobuf::uint32 q_;
  ::google::protobuf::uint32 ltime_;
  friend void  protobuf_AddDesc_RewardConfig_2eproto();
  friend void protobuf_AssignDesc_RewardConfig_2eproto();
  friend void protobuf_ShutdownFile_RewardConfig_2eproto();

  void InitAsDefaultInstance();
  static EquipItem* default_instance_;
};
// -------------------------------------------------------------------

class HeroItem : public ::google::protobuf::Message {
 public:
  HeroItem();
  virtual ~HeroItem();

  HeroItem(const HeroItem& from);

  inline HeroItem& operator=(const HeroItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroItem& default_instance();

  void Swap(HeroItem* other);

  // implements Message ----------------------------------------------

  HeroItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroItem& from);
  void MergeFrom(const HeroItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required uint32 c = 2;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 2;
  inline ::google::protobuf::uint32 c() const;
  inline void set_c(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RewardConfig.HeroItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_c();
  inline void clear_has_c();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::uint32 c_;
  friend void  protobuf_AddDesc_RewardConfig_2eproto();
  friend void protobuf_AssignDesc_RewardConfig_2eproto();
  friend void protobuf_ShutdownFile_RewardConfig_2eproto();

  void InitAsDefaultInstance();
  static HeroItem* default_instance_;
};
// -------------------------------------------------------------------

class RewardItemCfg : public ::google::protobuf::Message {
 public:
  RewardItemCfg();
  virtual ~RewardItemCfg();

  RewardItemCfg(const RewardItemCfg& from);

  inline RewardItemCfg& operator=(const RewardItemCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardItemCfg& default_instance();

  void Swap(RewardItemCfg* other);

  // implements Message ----------------------------------------------

  RewardItemCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardItemCfg& from);
  void MergeFrom(const RewardItemCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RewardConfig.EquipItem equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::RewardConfig::EquipItem& equips(int index) const;
  inline ::RewardConfig::EquipItem* mutable_equips(int index);
  inline ::RewardConfig::EquipItem* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::EquipItem >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::EquipItem >*
      mutable_equips();

  // repeated .RewardConfig.HeroItem heros = 2;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 2;
  inline const ::RewardConfig::HeroItem& heros(int index) const;
  inline ::RewardConfig::HeroItem* mutable_heros(int index);
  inline ::RewardConfig::HeroItem* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::HeroItem >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::HeroItem >*
      mutable_heros();

  // repeated uint32 res = 3;
  inline int res_size() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline ::google::protobuf::uint32 res(int index) const;
  inline void set_res(int index, ::google::protobuf::uint32 value);
  inline void add_res(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      res() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_res();

  // optional uint32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 diamond = 5;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 energy = 6;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 6;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 prosper = 7;
  inline bool has_prosper() const;
  inline void clear_prosper();
  static const int kProsperFieldNumber = 7;
  inline ::google::protobuf::uint32 prosper() const;
  inline void set_prosper(::google::protobuf::uint32 value);

  // optional uint32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RewardConfig.RewardItemCfg)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_prosper();
  inline void clear_has_prosper();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::EquipItem > equips_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::HeroItem > heros_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > res_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 prosper_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_RewardConfig_2eproto();
  friend void protobuf_AssignDesc_RewardConfig_2eproto();
  friend void protobuf_ShutdownFile_RewardConfig_2eproto();

  void InitAsDefaultInstance();
  static RewardItemCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipItem

// required uint32 eqid = 1;
inline bool EquipItem::has_eqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipItem::set_has_eqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipItem::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipItem::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 EquipItem::eqid() const {
  // @@protoc_insertion_point(field_get:RewardConfig.EquipItem.eqid)
  return eqid_;
}
inline void EquipItem::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.EquipItem.eqid)
}

// required uint32 c = 2;
inline bool EquipItem::has_c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipItem::set_has_c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipItem::clear_has_c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipItem::clear_c() {
  c_ = 0u;
  clear_has_c();
}
inline ::google::protobuf::uint32 EquipItem::c() const {
  // @@protoc_insertion_point(field_get:RewardConfig.EquipItem.c)
  return c_;
}
inline void EquipItem::set_c(::google::protobuf::uint32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.EquipItem.c)
}

// optional uint32 ch = 3;
inline bool EquipItem::has_ch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipItem::set_has_ch() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipItem::clear_has_ch() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipItem::clear_ch() {
  ch_ = 0u;
  clear_has_ch();
}
inline ::google::protobuf::uint32 EquipItem::ch() const {
  // @@protoc_insertion_point(field_get:RewardConfig.EquipItem.ch)
  return ch_;
}
inline void EquipItem::set_ch(::google::protobuf::uint32 value) {
  set_has_ch();
  ch_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.EquipItem.ch)
}

// optional uint32 q = 4;
inline bool EquipItem::has_q() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipItem::set_has_q() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipItem::clear_has_q() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipItem::clear_q() {
  q_ = 0u;
  clear_has_q();
}
inline ::google::protobuf::uint32 EquipItem::q() const {
  // @@protoc_insertion_point(field_get:RewardConfig.EquipItem.q)
  return q_;
}
inline void EquipItem::set_q(::google::protobuf::uint32 value) {
  set_has_q();
  q_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.EquipItem.q)
}

// optional uint32 ltime = 5;
inline bool EquipItem::has_ltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipItem::set_has_ltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipItem::clear_has_ltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipItem::clear_ltime() {
  ltime_ = 0u;
  clear_has_ltime();
}
inline ::google::protobuf::uint32 EquipItem::ltime() const {
  // @@protoc_insertion_point(field_get:RewardConfig.EquipItem.ltime)
  return ltime_;
}
inline void EquipItem::set_ltime(::google::protobuf::uint32 value) {
  set_has_ltime();
  ltime_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.EquipItem.ltime)
}

// -------------------------------------------------------------------

// HeroItem

// required bytes id = 1;
inline bool HeroItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroItem::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& HeroItem::id() const {
  // @@protoc_insertion_point(field_get:RewardConfig.HeroItem.id)
  return *id_;
}
inline void HeroItem::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:RewardConfig.HeroItem.id)
}
inline void HeroItem::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:RewardConfig.HeroItem.id)
}
inline void HeroItem::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RewardConfig.HeroItem.id)
}
inline ::std::string* HeroItem::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RewardConfig.HeroItem.id)
  return id_;
}
inline ::std::string* HeroItem::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HeroItem::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RewardConfig.HeroItem.id)
}

// required uint32 c = 2;
inline bool HeroItem::has_c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroItem::set_has_c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroItem::clear_has_c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroItem::clear_c() {
  c_ = 0u;
  clear_has_c();
}
inline ::google::protobuf::uint32 HeroItem::c() const {
  // @@protoc_insertion_point(field_get:RewardConfig.HeroItem.c)
  return c_;
}
inline void HeroItem::set_c(::google::protobuf::uint32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.HeroItem.c)
}

// -------------------------------------------------------------------

// RewardItemCfg

// repeated .RewardConfig.EquipItem equips = 1;
inline int RewardItemCfg::equips_size() const {
  return equips_.size();
}
inline void RewardItemCfg::clear_equips() {
  equips_.Clear();
}
inline const ::RewardConfig::EquipItem& RewardItemCfg::equips(int index) const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.equips)
  return equips_.Get(index);
}
inline ::RewardConfig::EquipItem* RewardItemCfg::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:RewardConfig.RewardItemCfg.equips)
  return equips_.Mutable(index);
}
inline ::RewardConfig::EquipItem* RewardItemCfg::add_equips() {
  // @@protoc_insertion_point(field_add:RewardConfig.RewardItemCfg.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::EquipItem >&
RewardItemCfg::equips() const {
  // @@protoc_insertion_point(field_list:RewardConfig.RewardItemCfg.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::EquipItem >*
RewardItemCfg::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:RewardConfig.RewardItemCfg.equips)
  return &equips_;
}

// repeated .RewardConfig.HeroItem heros = 2;
inline int RewardItemCfg::heros_size() const {
  return heros_.size();
}
inline void RewardItemCfg::clear_heros() {
  heros_.Clear();
}
inline const ::RewardConfig::HeroItem& RewardItemCfg::heros(int index) const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.heros)
  return heros_.Get(index);
}
inline ::RewardConfig::HeroItem* RewardItemCfg::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:RewardConfig.RewardItemCfg.heros)
  return heros_.Mutable(index);
}
inline ::RewardConfig::HeroItem* RewardItemCfg::add_heros() {
  // @@protoc_insertion_point(field_add:RewardConfig.RewardItemCfg.heros)
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::HeroItem >&
RewardItemCfg::heros() const {
  // @@protoc_insertion_point(field_list:RewardConfig.RewardItemCfg.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::HeroItem >*
RewardItemCfg::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:RewardConfig.RewardItemCfg.heros)
  return &heros_;
}

// repeated uint32 res = 3;
inline int RewardItemCfg::res_size() const {
  return res_.size();
}
inline void RewardItemCfg::clear_res() {
  res_.Clear();
}
inline ::google::protobuf::uint32 RewardItemCfg::res(int index) const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.res)
  return res_.Get(index);
}
inline void RewardItemCfg::set_res(int index, ::google::protobuf::uint32 value) {
  res_.Set(index, value);
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.res)
}
inline void RewardItemCfg::add_res(::google::protobuf::uint32 value) {
  res_.Add(value);
  // @@protoc_insertion_point(field_add:RewardConfig.RewardItemCfg.res)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RewardItemCfg::res() const {
  // @@protoc_insertion_point(field_list:RewardConfig.RewardItemCfg.res)
  return res_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RewardItemCfg::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:RewardConfig.RewardItemCfg.res)
  return &res_;
}

// optional uint32 gold = 4;
inline bool RewardItemCfg::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RewardItemCfg::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RewardItemCfg::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RewardItemCfg::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 RewardItemCfg::gold() const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.gold)
  return gold_;
}
inline void RewardItemCfg::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.gold)
}

// optional uint32 diamond = 5;
inline bool RewardItemCfg::has_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RewardItemCfg::set_has_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RewardItemCfg::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RewardItemCfg::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 RewardItemCfg::diamond() const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.diamond)
  return diamond_;
}
inline void RewardItemCfg::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.diamond)
}

// optional uint32 energy = 6;
inline bool RewardItemCfg::has_energy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RewardItemCfg::set_has_energy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RewardItemCfg::clear_has_energy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RewardItemCfg::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 RewardItemCfg::energy() const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.energy)
  return energy_;
}
inline void RewardItemCfg::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.energy)
}

// optional uint32 prosper = 7;
inline bool RewardItemCfg::has_prosper() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RewardItemCfg::set_has_prosper() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RewardItemCfg::clear_has_prosper() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RewardItemCfg::clear_prosper() {
  prosper_ = 0u;
  clear_has_prosper();
}
inline ::google::protobuf::uint32 RewardItemCfg::prosper() const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.prosper)
  return prosper_;
}
inline void RewardItemCfg::set_prosper(::google::protobuf::uint32 value) {
  set_has_prosper();
  prosper_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.prosper)
}

// optional uint32 exp = 8;
inline bool RewardItemCfg::has_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RewardItemCfg::set_has_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RewardItemCfg::clear_has_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RewardItemCfg::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 RewardItemCfg::exp() const {
  // @@protoc_insertion_point(field_get:RewardConfig.RewardItemCfg.exp)
  return exp_;
}
inline void RewardItemCfg::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:RewardConfig.RewardItemCfg.exp)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RewardConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RewardConfig_2eproto__INCLUDED
