// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CompoundShredConfig.proto

#ifndef PROTOBUF_CompoundShredConfig_2eproto__INCLUDED
#define PROTOBUF_CompoundShredConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CompoundShredConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CompoundShredConfig_2eproto();
void protobuf_AssignDesc_CompoundShredConfig_2eproto();
void protobuf_ShutdownFile_CompoundShredConfig_2eproto();

class ShredItem;
class ShredCompounds;

// ===================================================================

class ShredItem : public ::google::protobuf::Message {
 public:
  ShredItem();
  virtual ~ShredItem();

  ShredItem(const ShredItem& from);

  inline ShredItem& operator=(const ShredItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShredItem& default_instance();

  void Swap(ShredItem* other);

  // implements Message ----------------------------------------------

  ShredItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShredItem& from);
  void MergeFrom(const ShredItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shredId = 1;
  inline bool has_shredid() const;
  inline void clear_shredid();
  static const int kShredIdFieldNumber = 1;
  inline ::google::protobuf::uint32 shredid() const;
  inline void set_shredid(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 compoundId = 3;
  inline bool has_compoundid() const;
  inline void clear_compoundid();
  static const int kCompoundIdFieldNumber = 3;
  inline ::google::protobuf::uint32 compoundid() const;
  inline void set_compoundid(::google::protobuf::uint32 value);

  // required uint32 ishero = 4;
  inline bool has_ishero() const;
  inline void clear_ishero();
  static const int kIsheroFieldNumber = 4;
  inline ::google::protobuf::uint32 ishero() const;
  inline void set_ishero(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CompoundShredConfig.ShredItem)
 private:
  inline void set_has_shredid();
  inline void clear_has_shredid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_compoundid();
  inline void clear_has_compoundid();
  inline void set_has_ishero();
  inline void clear_has_ishero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shredid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 compoundid_;
  ::google::protobuf::uint32 ishero_;
  friend void  protobuf_AddDesc_CompoundShredConfig_2eproto();
  friend void protobuf_AssignDesc_CompoundShredConfig_2eproto();
  friend void protobuf_ShutdownFile_CompoundShredConfig_2eproto();

  void InitAsDefaultInstance();
  static ShredItem* default_instance_;
};
// -------------------------------------------------------------------

class ShredCompounds : public ::google::protobuf::Message {
 public:
  ShredCompounds();
  virtual ~ShredCompounds();

  ShredCompounds(const ShredCompounds& from);

  inline ShredCompounds& operator=(const ShredCompounds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShredCompounds& default_instance();

  void Swap(ShredCompounds* other);

  // implements Message ----------------------------------------------

  ShredCompounds* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShredCompounds& from);
  void MergeFrom(const ShredCompounds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CompoundShredConfig.ShredItem shred_compounds = 1;
  inline int shred_compounds_size() const;
  inline void clear_shred_compounds();
  static const int kShredCompoundsFieldNumber = 1;
  inline const ::CompoundShredConfig::ShredItem& shred_compounds(int index) const;
  inline ::CompoundShredConfig::ShredItem* mutable_shred_compounds(int index);
  inline ::CompoundShredConfig::ShredItem* add_shred_compounds();
  inline const ::google::protobuf::RepeatedPtrField< ::CompoundShredConfig::ShredItem >&
      shred_compounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::CompoundShredConfig::ShredItem >*
      mutable_shred_compounds();

  // @@protoc_insertion_point(class_scope:CompoundShredConfig.ShredCompounds)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CompoundShredConfig::ShredItem > shred_compounds_;
  friend void  protobuf_AddDesc_CompoundShredConfig_2eproto();
  friend void protobuf_AssignDesc_CompoundShredConfig_2eproto();
  friend void protobuf_ShutdownFile_CompoundShredConfig_2eproto();

  void InitAsDefaultInstance();
  static ShredCompounds* default_instance_;
};
// ===================================================================


// ===================================================================

// ShredItem

// required uint32 shredId = 1;
inline bool ShredItem::has_shredid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShredItem::set_has_shredid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShredItem::clear_has_shredid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShredItem::clear_shredid() {
  shredid_ = 0u;
  clear_has_shredid();
}
inline ::google::protobuf::uint32 ShredItem::shredid() const {
  // @@protoc_insertion_point(field_get:CompoundShredConfig.ShredItem.shredId)
  return shredid_;
}
inline void ShredItem::set_shredid(::google::protobuf::uint32 value) {
  set_has_shredid();
  shredid_ = value;
  // @@protoc_insertion_point(field_set:CompoundShredConfig.ShredItem.shredId)
}

// required uint32 count = 2;
inline bool ShredItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShredItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShredItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShredItem::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShredItem::count() const {
  // @@protoc_insertion_point(field_get:CompoundShredConfig.ShredItem.count)
  return count_;
}
inline void ShredItem::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CompoundShredConfig.ShredItem.count)
}

// required uint32 compoundId = 3;
inline bool ShredItem::has_compoundid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShredItem::set_has_compoundid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShredItem::clear_has_compoundid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShredItem::clear_compoundid() {
  compoundid_ = 0u;
  clear_has_compoundid();
}
inline ::google::protobuf::uint32 ShredItem::compoundid() const {
  // @@protoc_insertion_point(field_get:CompoundShredConfig.ShredItem.compoundId)
  return compoundid_;
}
inline void ShredItem::set_compoundid(::google::protobuf::uint32 value) {
  set_has_compoundid();
  compoundid_ = value;
  // @@protoc_insertion_point(field_set:CompoundShredConfig.ShredItem.compoundId)
}

// required uint32 ishero = 4;
inline bool ShredItem::has_ishero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShredItem::set_has_ishero() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShredItem::clear_has_ishero() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShredItem::clear_ishero() {
  ishero_ = 0u;
  clear_has_ishero();
}
inline ::google::protobuf::uint32 ShredItem::ishero() const {
  // @@protoc_insertion_point(field_get:CompoundShredConfig.ShredItem.ishero)
  return ishero_;
}
inline void ShredItem::set_ishero(::google::protobuf::uint32 value) {
  set_has_ishero();
  ishero_ = value;
  // @@protoc_insertion_point(field_set:CompoundShredConfig.ShredItem.ishero)
}

// -------------------------------------------------------------------

// ShredCompounds

// repeated .CompoundShredConfig.ShredItem shred_compounds = 1;
inline int ShredCompounds::shred_compounds_size() const {
  return shred_compounds_.size();
}
inline void ShredCompounds::clear_shred_compounds() {
  shred_compounds_.Clear();
}
inline const ::CompoundShredConfig::ShredItem& ShredCompounds::shred_compounds(int index) const {
  // @@protoc_insertion_point(field_get:CompoundShredConfig.ShredCompounds.shred_compounds)
  return shred_compounds_.Get(index);
}
inline ::CompoundShredConfig::ShredItem* ShredCompounds::mutable_shred_compounds(int index) {
  // @@protoc_insertion_point(field_mutable:CompoundShredConfig.ShredCompounds.shred_compounds)
  return shred_compounds_.Mutable(index);
}
inline ::CompoundShredConfig::ShredItem* ShredCompounds::add_shred_compounds() {
  // @@protoc_insertion_point(field_add:CompoundShredConfig.ShredCompounds.shred_compounds)
  return shred_compounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CompoundShredConfig::ShredItem >&
ShredCompounds::shred_compounds() const {
  // @@protoc_insertion_point(field_list:CompoundShredConfig.ShredCompounds.shred_compounds)
  return shred_compounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::CompoundShredConfig::ShredItem >*
ShredCompounds::mutable_shred_compounds() {
  // @@protoc_insertion_point(field_mutable_list:CompoundShredConfig.ShredCompounds.shred_compounds)
  return &shred_compounds_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CompoundShredConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CompoundShredConfig_2eproto__INCLUDED
