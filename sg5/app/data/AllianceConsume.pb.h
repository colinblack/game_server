// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AllianceConsume.proto

#ifndef PROTOBUF_AllianceConsume_2eproto__INCLUDED
#define PROTOBUF_AllianceConsume_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace AllianceConsume {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AllianceConsume_2eproto();
void protobuf_AssignDesc_AllianceConsume_2eproto();
void protobuf_ShutdownFile_AllianceConsume_2eproto();

class AllianceConsumeUser;
class AllianceConsumeAlliance;
class AllianceConsume;

// ===================================================================

class AllianceConsumeUser : public ::google::protobuf::Message {
 public:
  AllianceConsumeUser();
  virtual ~AllianceConsumeUser();

  AllianceConsumeUser(const AllianceConsumeUser& from);

  inline AllianceConsumeUser& operator=(const AllianceConsumeUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceConsumeUser& default_instance();

  void Swap(AllianceConsumeUser* other);

  // implements Message ----------------------------------------------

  AllianceConsumeUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceConsumeUser& from);
  void MergeFrom(const AllianceConsumeUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AllianceConsume.AllianceConsumeUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_consume();
  inline void clear_has_consume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 consume_;
  friend void  protobuf_AddDesc_AllianceConsume_2eproto();
  friend void protobuf_AssignDesc_AllianceConsume_2eproto();
  friend void protobuf_ShutdownFile_AllianceConsume_2eproto();

  void InitAsDefaultInstance();
  static AllianceConsumeUser* default_instance_;
};
// -------------------------------------------------------------------

class AllianceConsumeAlliance : public ::google::protobuf::Message {
 public:
  AllianceConsumeAlliance();
  virtual ~AllianceConsumeAlliance();

  AllianceConsumeAlliance(const AllianceConsumeAlliance& from);

  inline AllianceConsumeAlliance& operator=(const AllianceConsumeAlliance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceConsumeAlliance& default_instance();

  void Swap(AllianceConsumeAlliance* other);

  // implements Message ----------------------------------------------

  AllianceConsumeAlliance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceConsumeAlliance& from);
  void MergeFrom(const AllianceConsumeAlliance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // repeated .AllianceConsume.AllianceConsumeUser user = 2;
  inline int user_size() const;
  inline void clear_user();
  static const int kUserFieldNumber = 2;
  inline const ::AllianceConsume::AllianceConsumeUser& user(int index) const;
  inline ::AllianceConsume::AllianceConsumeUser* mutable_user(int index);
  inline ::AllianceConsume::AllianceConsumeUser* add_user();
  inline const ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeUser >&
      user() const;
  inline ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeUser >*
      mutable_user();

  // @@protoc_insertion_point(class_scope:AllianceConsume.AllianceConsumeAlliance)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeUser > user_;
  ::google::protobuf::uint32 aid_;
  friend void  protobuf_AddDesc_AllianceConsume_2eproto();
  friend void protobuf_AssignDesc_AllianceConsume_2eproto();
  friend void protobuf_ShutdownFile_AllianceConsume_2eproto();

  void InitAsDefaultInstance();
  static AllianceConsumeAlliance* default_instance_;
};
// -------------------------------------------------------------------

class AllianceConsume : public ::google::protobuf::Message {
 public:
  AllianceConsume();
  virtual ~AllianceConsume();

  AllianceConsume(const AllianceConsume& from);

  inline AllianceConsume& operator=(const AllianceConsume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceConsume& default_instance();

  void Swap(AllianceConsume* other);

  // implements Message ----------------------------------------------

  AllianceConsume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceConsume& from);
  void MergeFrom(const AllianceConsume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ver = 1;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 1;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // repeated .AllianceConsume.AllianceConsumeAlliance alliance = 2;
  inline int alliance_size() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::AllianceConsume::AllianceConsumeAlliance& alliance(int index) const;
  inline ::AllianceConsume::AllianceConsumeAlliance* mutable_alliance(int index);
  inline ::AllianceConsume::AllianceConsumeAlliance* add_alliance();
  inline const ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeAlliance >&
      alliance() const;
  inline ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeAlliance >*
      mutable_alliance();

  // @@protoc_insertion_point(class_scope:AllianceConsume.AllianceConsume)
 private:
  inline void set_has_ver();
  inline void clear_has_ver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeAlliance > alliance_;
  ::google::protobuf::uint32 ver_;
  friend void  protobuf_AddDesc_AllianceConsume_2eproto();
  friend void protobuf_AssignDesc_AllianceConsume_2eproto();
  friend void protobuf_ShutdownFile_AllianceConsume_2eproto();

  void InitAsDefaultInstance();
  static AllianceConsume* default_instance_;
};
// ===================================================================


// ===================================================================

// AllianceConsumeUser

// required uint32 uid = 1;
inline bool AllianceConsumeUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceConsumeUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceConsumeUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceConsumeUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AllianceConsumeUser::uid() const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsumeUser.uid)
  return uid_;
}
inline void AllianceConsumeUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:AllianceConsume.AllianceConsumeUser.uid)
}

// required uint32 consume = 2;
inline bool AllianceConsumeUser::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceConsumeUser::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceConsumeUser::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceConsumeUser::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 AllianceConsumeUser::consume() const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsumeUser.consume)
  return consume_;
}
inline void AllianceConsumeUser::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
  // @@protoc_insertion_point(field_set:AllianceConsume.AllianceConsumeUser.consume)
}

// -------------------------------------------------------------------

// AllianceConsumeAlliance

// required uint32 aid = 1;
inline bool AllianceConsumeAlliance::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceConsumeAlliance::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceConsumeAlliance::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceConsumeAlliance::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 AllianceConsumeAlliance::aid() const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsumeAlliance.aid)
  return aid_;
}
inline void AllianceConsumeAlliance::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:AllianceConsume.AllianceConsumeAlliance.aid)
}

// repeated .AllianceConsume.AllianceConsumeUser user = 2;
inline int AllianceConsumeAlliance::user_size() const {
  return user_.size();
}
inline void AllianceConsumeAlliance::clear_user() {
  user_.Clear();
}
inline const ::AllianceConsume::AllianceConsumeUser& AllianceConsumeAlliance::user(int index) const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsumeAlliance.user)
  return user_.Get(index);
}
inline ::AllianceConsume::AllianceConsumeUser* AllianceConsumeAlliance::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:AllianceConsume.AllianceConsumeAlliance.user)
  return user_.Mutable(index);
}
inline ::AllianceConsume::AllianceConsumeUser* AllianceConsumeAlliance::add_user() {
  // @@protoc_insertion_point(field_add:AllianceConsume.AllianceConsumeAlliance.user)
  return user_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeUser >&
AllianceConsumeAlliance::user() const {
  // @@protoc_insertion_point(field_list:AllianceConsume.AllianceConsumeAlliance.user)
  return user_;
}
inline ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeUser >*
AllianceConsumeAlliance::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:AllianceConsume.AllianceConsumeAlliance.user)
  return &user_;
}

// -------------------------------------------------------------------

// AllianceConsume

// required uint32 ver = 1;
inline bool AllianceConsume::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceConsume::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceConsume::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceConsume::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 AllianceConsume::ver() const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsume.ver)
  return ver_;
}
inline void AllianceConsume::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:AllianceConsume.AllianceConsume.ver)
}

// repeated .AllianceConsume.AllianceConsumeAlliance alliance = 2;
inline int AllianceConsume::alliance_size() const {
  return alliance_.size();
}
inline void AllianceConsume::clear_alliance() {
  alliance_.Clear();
}
inline const ::AllianceConsume::AllianceConsumeAlliance& AllianceConsume::alliance(int index) const {
  // @@protoc_insertion_point(field_get:AllianceConsume.AllianceConsume.alliance)
  return alliance_.Get(index);
}
inline ::AllianceConsume::AllianceConsumeAlliance* AllianceConsume::mutable_alliance(int index) {
  // @@protoc_insertion_point(field_mutable:AllianceConsume.AllianceConsume.alliance)
  return alliance_.Mutable(index);
}
inline ::AllianceConsume::AllianceConsumeAlliance* AllianceConsume::add_alliance() {
  // @@protoc_insertion_point(field_add:AllianceConsume.AllianceConsume.alliance)
  return alliance_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeAlliance >&
AllianceConsume::alliance() const {
  // @@protoc_insertion_point(field_list:AllianceConsume.AllianceConsume.alliance)
  return alliance_;
}
inline ::google::protobuf::RepeatedPtrField< ::AllianceConsume::AllianceConsumeAlliance >*
AllianceConsume::mutable_alliance() {
  // @@protoc_insertion_point(field_mutable_list:AllianceConsume.AllianceConsume.alliance)
  return &alliance_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AllianceConsume

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AllianceConsume_2eproto__INCLUDED
