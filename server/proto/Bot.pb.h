// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Bot.proto

#ifndef PROTOBUF_Bot_2eproto__INCLUDED
#define PROTOBUF_Bot_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Bot {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Bot_2eproto();
void protobuf_AssignDesc_Bot_2eproto();
void protobuf_ShutdownFile_Bot_2eproto();

class RequestLogin;
class ReplyLogin;
class RequestLogout;
class RequestCity;
class RequestMove;
class ChatInfo;
class BotChat;
class BotMove;

// ===================================================================

class RequestLogin : public ::google::protobuf::Message {
 public:
  RequestLogin();
  virtual ~RequestLogin();

  RequestLogin(const RequestLogin& from);

  inline RequestLogin& operator=(const RequestLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLogin& default_instance();

  void Swap(RequestLogin* other);

  // implements Message ----------------------------------------------

  RequestLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestLogin& from);
  void MergeFrom(const RequestLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 kingdom = 2;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 2;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required bool reload = 4;
  inline bool has_reload() const;
  inline void clear_reload();
  static const int kReloadFieldNumber = 4;
  inline bool reload() const;
  inline void set_reload(bool value);

  // @@protoc_insertion_point(class_scope:Bot.RequestLogin)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reload();
  inline void clear_has_reload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 kingdom_;
  ::google::protobuf::uint32 id_;
  bool reload_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static RequestLogin* default_instance_;
};
// -------------------------------------------------------------------

class ReplyLogin : public ::google::protobuf::Message {
 public:
  ReplyLogin();
  virtual ~ReplyLogin();

  ReplyLogin(const ReplyLogin& from);

  inline ReplyLogin& operator=(const ReplyLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyLogin& default_instance();

  void Swap(ReplyLogin* other);

  // implements Message ----------------------------------------------

  ReplyLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyLogin& from);
  void MergeFrom(const ReplyLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Bot.ReplyLogin)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static ReplyLogin* default_instance_;
};
// -------------------------------------------------------------------

class RequestLogout : public ::google::protobuf::Message {
 public:
  RequestLogout();
  virtual ~RequestLogout();

  RequestLogout(const RequestLogout& from);

  inline RequestLogout& operator=(const RequestLogout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLogout& default_instance();

  void Swap(RequestLogout* other);

  // implements Message ----------------------------------------------

  RequestLogout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestLogout& from);
  void MergeFrom(const RequestLogout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Bot.RequestLogout)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static RequestLogout* default_instance_;
};
// -------------------------------------------------------------------

class RequestCity : public ::google::protobuf::Message {
 public:
  RequestCity();
  virtual ~RequestCity();

  RequestCity(const RequestCity& from);

  inline RequestCity& operator=(const RequestCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCity& default_instance();

  void Swap(RequestCity* other);

  // implements Message ----------------------------------------------

  RequestCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCity& from);
  void MergeFrom(const RequestCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Bot.RequestCity)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static RequestCity* default_instance_;
};
// -------------------------------------------------------------------

class RequestMove : public ::google::protobuf::Message {
 public:
  RequestMove();
  virtual ~RequestMove();

  RequestMove(const RequestMove& from);

  inline RequestMove& operator=(const RequestMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMove& default_instance();

  void Swap(RequestMove* other);

  // implements Message ----------------------------------------------

  RequestMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMove& from);
  void MergeFrom(const RequestMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Bot.RequestMove)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static RequestMove* default_instance_;
};
// -------------------------------------------------------------------

class ChatInfo : public ::google::protobuf::Message {
 public:
  ChatInfo();
  virtual ~ChatInfo();

  ChatInfo(const ChatInfo& from);

  inline ChatInfo& operator=(const ChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInfo& default_instance();

  void Swap(ChatInfo* other);

  // implements Message ----------------------------------------------

  ChatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatInfo& from);
  void MergeFrom(const ChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 kingdom = 3;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 3;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // required uint32 vip = 4;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 4;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // required uint32 lvl = 5;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 5;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Bot.ChatInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_lvl();
  inline void clear_has_lvl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 kingdom_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 lvl_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static ChatInfo* default_instance_;
};
// -------------------------------------------------------------------

class BotChat : public ::google::protobuf::Message {
 public:
  BotChat();
  virtual ~BotChat();

  BotChat(const BotChat& from);

  inline BotChat& operator=(const BotChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotChat& default_instance();

  void Swap(BotChat* other);

  // implements Message ----------------------------------------------

  BotChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotChat& from);
  void MergeFrom(const BotChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Bot.ChatInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Bot::ChatInfo& info() const;
  inline ::Bot::ChatInfo* mutable_info();
  inline ::Bot::ChatInfo* release_info();
  inline void set_allocated_info(::Bot::ChatInfo* info);

  // required bytes msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const void* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:Bot.BotChat)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Bot::ChatInfo* info_;
  ::std::string* msg_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static BotChat* default_instance_;
};
// -------------------------------------------------------------------

class BotMove : public ::google::protobuf::Message {
 public:
  BotMove();
  virtual ~BotMove();

  BotMove(const BotMove& from);

  inline BotMove& operator=(const BotMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotMove& default_instance();

  void Swap(BotMove* other);

  // implements Message ----------------------------------------------

  BotMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotMove& from);
  void MergeFrom(const BotMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Bot.ChatInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Bot::ChatInfo& info() const;
  inline ::Bot::ChatInfo* mutable_info();
  inline ::Bot::ChatInfo* release_info();
  inline void set_allocated_info(::Bot::ChatInfo* info);

  // repeated uint32 id = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // repeated uint32 cids = 3;
  inline int cids_size() const;
  inline void clear_cids();
  static const int kCidsFieldNumber = 3;
  inline ::google::protobuf::uint32 cids(int index) const;
  inline void set_cids(int index, ::google::protobuf::uint32 value);
  inline void add_cids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cids();

  // @@protoc_insertion_point(class_scope:Bot.BotMove)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Bot::ChatInfo* info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cids_;
  friend void  protobuf_AddDesc_Bot_2eproto();
  friend void protobuf_AssignDesc_Bot_2eproto();
  friend void protobuf_ShutdownFile_Bot_2eproto();

  void InitAsDefaultInstance();
  static BotMove* default_instance_;
};
// ===================================================================


// ===================================================================

// RequestLogin

// required uint32 uid = 1;
inline bool RequestLogin::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestLogin::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestLogin::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestLogin::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestLogin::uid() const {
  // @@protoc_insertion_point(field_get:Bot.RequestLogin.uid)
  return uid_;
}
inline void RequestLogin::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestLogin.uid)
}

// required uint32 kingdom = 2;
inline bool RequestLogin::has_kingdom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestLogin::set_has_kingdom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestLogin::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestLogin::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 RequestLogin::kingdom() const {
  // @@protoc_insertion_point(field_get:Bot.RequestLogin.kingdom)
  return kingdom_;
}
inline void RequestLogin::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestLogin.kingdom)
}

// required uint32 id = 3;
inline bool RequestLogin::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestLogin::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestLogin::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestLogin::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestLogin::id() const {
  // @@protoc_insertion_point(field_get:Bot.RequestLogin.id)
  return id_;
}
inline void RequestLogin::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestLogin.id)
}

// required bool reload = 4;
inline bool RequestLogin::has_reload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestLogin::set_has_reload() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestLogin::clear_has_reload() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestLogin::clear_reload() {
  reload_ = false;
  clear_has_reload();
}
inline bool RequestLogin::reload() const {
  // @@protoc_insertion_point(field_get:Bot.RequestLogin.reload)
  return reload_;
}
inline void RequestLogin::set_reload(bool value) {
  set_has_reload();
  reload_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestLogin.reload)
}

// -------------------------------------------------------------------

// ReplyLogin

// required uint32 ret = 1;
inline bool ReplyLogin::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyLogin::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyLogin::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyLogin::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyLogin::ret() const {
  // @@protoc_insertion_point(field_get:Bot.ReplyLogin.ret)
  return ret_;
}
inline void ReplyLogin::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Bot.ReplyLogin.ret)
}

// -------------------------------------------------------------------

// RequestLogout

// required uint32 uid = 1;
inline bool RequestLogout::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestLogout::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestLogout::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestLogout::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestLogout::uid() const {
  // @@protoc_insertion_point(field_get:Bot.RequestLogout.uid)
  return uid_;
}
inline void RequestLogout::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestLogout.uid)
}

// -------------------------------------------------------------------

// RequestCity

// required uint32 uid = 1;
inline bool RequestCity::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCity::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCity::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCity::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestCity::uid() const {
  // @@protoc_insertion_point(field_get:Bot.RequestCity.uid)
  return uid_;
}
inline void RequestCity::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestCity.uid)
}

// -------------------------------------------------------------------

// RequestMove

// required uint32 uid = 1;
inline bool RequestMove::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMove::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMove::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMove::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestMove::uid() const {
  // @@protoc_insertion_point(field_get:Bot.RequestMove.uid)
  return uid_;
}
inline void RequestMove::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Bot.RequestMove.uid)
}

// -------------------------------------------------------------------

// ChatInfo

// required uint32 uid = 1;
inline bool ChatInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ChatInfo::uid() const {
  // @@protoc_insertion_point(field_get:Bot.ChatInfo.uid)
  return uid_;
}
inline void ChatInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Bot.ChatInfo.uid)
}

// required bytes name = 2;
inline bool ChatInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ChatInfo::name() const {
  // @@protoc_insertion_point(field_get:Bot.ChatInfo.name)
  return *name_;
}
inline void ChatInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Bot.ChatInfo.name)
}
inline void ChatInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Bot.ChatInfo.name)
}
inline void ChatInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Bot.ChatInfo.name)
}
inline ::std::string* ChatInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Bot.ChatInfo.name)
  return name_;
}
inline ::std::string* ChatInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Bot.ChatInfo.name)
}

// required uint32 kingdom = 3;
inline bool ChatInfo::has_kingdom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatInfo::set_has_kingdom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatInfo::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatInfo::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 ChatInfo::kingdom() const {
  // @@protoc_insertion_point(field_get:Bot.ChatInfo.kingdom)
  return kingdom_;
}
inline void ChatInfo::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:Bot.ChatInfo.kingdom)
}

// required uint32 vip = 4;
inline bool ChatInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatInfo::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 ChatInfo::vip() const {
  // @@protoc_insertion_point(field_get:Bot.ChatInfo.vip)
  return vip_;
}
inline void ChatInfo::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:Bot.ChatInfo.vip)
}

// required uint32 lvl = 5;
inline bool ChatInfo::has_lvl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatInfo::set_has_lvl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatInfo::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatInfo::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 ChatInfo::lvl() const {
  // @@protoc_insertion_point(field_get:Bot.ChatInfo.lvl)
  return lvl_;
}
inline void ChatInfo::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
  // @@protoc_insertion_point(field_set:Bot.ChatInfo.lvl)
}

// -------------------------------------------------------------------

// BotChat

// required .Bot.ChatInfo info = 1;
inline bool BotChat::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotChat::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotChat::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotChat::clear_info() {
  if (info_ != NULL) info_->::Bot::ChatInfo::Clear();
  clear_has_info();
}
inline const ::Bot::ChatInfo& BotChat::info() const {
  // @@protoc_insertion_point(field_get:Bot.BotChat.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Bot::ChatInfo* BotChat::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Bot::ChatInfo;
  // @@protoc_insertion_point(field_mutable:Bot.BotChat.info)
  return info_;
}
inline ::Bot::ChatInfo* BotChat::release_info() {
  clear_has_info();
  ::Bot::ChatInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void BotChat::set_allocated_info(::Bot::ChatInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Bot.BotChat.info)
}

// required bytes msg = 2;
inline bool BotChat::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotChat::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotChat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotChat::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& BotChat::msg() const {
  // @@protoc_insertion_point(field_get:Bot.BotChat.msg)
  return *msg_;
}
inline void BotChat::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Bot.BotChat.msg)
}
inline void BotChat::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Bot.BotChat.msg)
}
inline void BotChat::set_msg(const void* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Bot.BotChat.msg)
}
inline ::std::string* BotChat::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Bot.BotChat.msg)
  return msg_;
}
inline ::std::string* BotChat::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BotChat::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Bot.BotChat.msg)
}

// -------------------------------------------------------------------

// BotMove

// required .Bot.ChatInfo info = 1;
inline bool BotMove::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotMove::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotMove::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotMove::clear_info() {
  if (info_ != NULL) info_->::Bot::ChatInfo::Clear();
  clear_has_info();
}
inline const ::Bot::ChatInfo& BotMove::info() const {
  // @@protoc_insertion_point(field_get:Bot.BotMove.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Bot::ChatInfo* BotMove::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Bot::ChatInfo;
  // @@protoc_insertion_point(field_mutable:Bot.BotMove.info)
  return info_;
}
inline ::Bot::ChatInfo* BotMove::release_info() {
  clear_has_info();
  ::Bot::ChatInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void BotMove::set_allocated_info(::Bot::ChatInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Bot.BotMove.info)
}

// repeated uint32 id = 2;
inline int BotMove::id_size() const {
  return id_.size();
}
inline void BotMove::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 BotMove::id(int index) const {
  // @@protoc_insertion_point(field_get:Bot.BotMove.id)
  return id_.Get(index);
}
inline void BotMove::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Bot.BotMove.id)
}
inline void BotMove::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:Bot.BotMove.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BotMove::id() const {
  // @@protoc_insertion_point(field_list:Bot.BotMove.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BotMove::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:Bot.BotMove.id)
  return &id_;
}

// repeated uint32 cids = 3;
inline int BotMove::cids_size() const {
  return cids_.size();
}
inline void BotMove::clear_cids() {
  cids_.Clear();
}
inline ::google::protobuf::uint32 BotMove::cids(int index) const {
  // @@protoc_insertion_point(field_get:Bot.BotMove.cids)
  return cids_.Get(index);
}
inline void BotMove::set_cids(int index, ::google::protobuf::uint32 value) {
  cids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Bot.BotMove.cids)
}
inline void BotMove::add_cids(::google::protobuf::uint32 value) {
  cids_.Add(value);
  // @@protoc_insertion_point(field_add:Bot.BotMove.cids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BotMove::cids() const {
  // @@protoc_insertion_point(field_list:Bot.BotMove.cids)
  return cids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BotMove::mutable_cids() {
  // @@protoc_insertion_point(field_mutable_list:Bot.BotMove.cids)
  return &cids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Bot

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Bot_2eproto__INCLUDED
