// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GovernAffair.proto

#ifndef PROTOBUF_GovernAffair_2eproto__INCLUDED
#define PROTOBUF_GovernAffair_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GovernAffairConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GovernAffair_2eproto();
void protobuf_AssignDesc_GovernAffair_2eproto();
void protobuf_ShutdownFile_GovernAffair_2eproto();

class RewardItem;
class AffairsItem;
class BuildRelationTimes;
class Coefficients;
class LoyalReward;
class GovernAffairs;

// ===================================================================

class RewardItem : public ::google::protobuf::Message {
 public:
  RewardItem();
  virtual ~RewardItem();

  RewardItem(const RewardItem& from);

  inline RewardItem& operator=(const RewardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardItem& default_instance();

  void Swap(RewardItem* other);

  // implements Message ----------------------------------------------

  RewardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardItem& from);
  void MergeFrom(const RewardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional uint32 wood = 2;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 2;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // optional uint32 food = 3;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 3;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // optional uint32 loyal = 4;
  inline bool has_loyal() const;
  inline void clear_loyal();
  static const int kLoyalFieldNumber = 4;
  inline ::google::protobuf::uint32 loyal() const;
  inline void set_loyal(::google::protobuf::uint32 value);

  // optional uint32 paycash = 5;
  inline bool has_paycash() const;
  inline void clear_paycash();
  static const int kPaycashFieldNumber = 5;
  inline ::google::protobuf::uint32 paycash() const;
  inline void set_paycash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.RewardItem)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_loyal();
  inline void clear_has_loyal();
  inline void set_has_paycash();
  inline void clear_has_paycash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 loyal_;
  ::google::protobuf::uint32 paycash_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static RewardItem* default_instance_;
};
// -------------------------------------------------------------------

class AffairsItem : public ::google::protobuf::Message {
 public:
  AffairsItem();
  virtual ~AffairsItem();

  AffairsItem(const AffairsItem& from);

  inline AffairsItem& operator=(const AffairsItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AffairsItem& default_instance();

  void Swap(AffairsItem* other);

  // implements Message ----------------------------------------------

  AffairsItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AffairsItem& from);
  void MergeFrom(const AffairsItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // repeated .GovernAffairConfig.RewardItem reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::GovernAffairConfig::RewardItem& reward(int index) const;
  inline ::GovernAffairConfig::RewardItem* mutable_reward(int index);
  inline ::GovernAffairConfig::RewardItem* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::RewardItem >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::RewardItem >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.AffairsItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::RewardItem > reward_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static AffairsItem* default_instance_;
};
// -------------------------------------------------------------------

class BuildRelationTimes : public ::google::protobuf::Message {
 public:
  BuildRelationTimes();
  virtual ~BuildRelationTimes();

  BuildRelationTimes(const BuildRelationTimes& from);

  inline BuildRelationTimes& operator=(const BuildRelationTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildRelationTimes& default_instance();

  void Swap(BuildRelationTimes* other);

  // implements Message ----------------------------------------------

  BuildRelationTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildRelationTimes& from);
  void MergeFrom(const BuildRelationTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated uint32 sublevelsum = 2;
  inline int sublevelsum_size() const;
  inline void clear_sublevelsum();
  static const int kSublevelsumFieldNumber = 2;
  inline ::google::protobuf::uint32 sublevelsum(int index) const;
  inline void set_sublevelsum(int index, ::google::protobuf::uint32 value);
  inline void add_sublevelsum(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sublevelsum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sublevelsum();

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.BuildRelationTimes)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sublevelsum_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static BuildRelationTimes* default_instance_;
};
// -------------------------------------------------------------------

class Coefficients : public ::google::protobuf::Message {
 public:
  Coefficients();
  virtual ~Coefficients();

  Coefficients(const Coefficients& from);

  inline Coefficients& operator=(const Coefficients& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Coefficients& default_instance();

  void Swap(Coefficients* other);

  // implements Message ----------------------------------------------

  Coefficients* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Coefficients& from);
  void MergeFrom(const Coefficients& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coefficient = 1;
  inline bool has_coefficient() const;
  inline void clear_coefficient();
  static const int kCoefficientFieldNumber = 1;
  inline ::google::protobuf::uint32 coefficient() const;
  inline void set_coefficient(::google::protobuf::uint32 value);

  // repeated uint32 levelrange = 2;
  inline int levelrange_size() const;
  inline void clear_levelrange();
  static const int kLevelrangeFieldNumber = 2;
  inline ::google::protobuf::uint32 levelrange(int index) const;
  inline void set_levelrange(int index, ::google::protobuf::uint32 value);
  inline void add_levelrange(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      levelrange() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_levelrange();

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.Coefficients)
 private:
  inline void set_has_coefficient();
  inline void clear_has_coefficient();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelrange_;
  ::google::protobuf::uint32 coefficient_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static Coefficients* default_instance_;
};
// -------------------------------------------------------------------

class LoyalReward : public ::google::protobuf::Message {
 public:
  LoyalReward();
  virtual ~LoyalReward();

  LoyalReward(const LoyalReward& from);

  inline LoyalReward& operator=(const LoyalReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoyalReward& default_instance();

  void Swap(LoyalReward* other);

  // implements Message ----------------------------------------------

  LoyalReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoyalReward& from);
  void MergeFrom(const LoyalReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 wood = 2;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 2;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // required uint32 food = 3;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 3;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // required uint32 iron = 4;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 4;
  inline ::google::protobuf::uint32 iron() const;
  inline void set_iron(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.LoyalReward)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_iron();
  inline void clear_has_iron();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 iron_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static LoyalReward* default_instance_;
};
// -------------------------------------------------------------------

class GovernAffairs : public ::google::protobuf::Message {
 public:
  GovernAffairs();
  virtual ~GovernAffairs();

  GovernAffairs(const GovernAffairs& from);

  inline GovernAffairs& operator=(const GovernAffairs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GovernAffairs& default_instance();

  void Swap(GovernAffairs* other);

  // implements Message ----------------------------------------------

  GovernAffairs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GovernAffairs& from);
  void MergeFrom(const GovernAffairs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GovernAffairConfig.AffairsItem govern_affairs = 1;
  inline int govern_affairs_size() const;
  inline void clear_govern_affairs();
  static const int kGovernAffairsFieldNumber = 1;
  inline const ::GovernAffairConfig::AffairsItem& govern_affairs(int index) const;
  inline ::GovernAffairConfig::AffairsItem* mutable_govern_affairs(int index);
  inline ::GovernAffairConfig::AffairsItem* add_govern_affairs();
  inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::AffairsItem >&
      govern_affairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::AffairsItem >*
      mutable_govern_affairs();

  // repeated .GovernAffairConfig.BuildRelationTimes build_affairtimes = 2;
  inline int build_affairtimes_size() const;
  inline void clear_build_affairtimes();
  static const int kBuildAffairtimesFieldNumber = 2;
  inline const ::GovernAffairConfig::BuildRelationTimes& build_affairtimes(int index) const;
  inline ::GovernAffairConfig::BuildRelationTimes* mutable_build_affairtimes(int index);
  inline ::GovernAffairConfig::BuildRelationTimes* add_build_affairtimes();
  inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::BuildRelationTimes >&
      build_affairtimes() const;
  inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::BuildRelationTimes >*
      mutable_build_affairtimes();

  // repeated .GovernAffairConfig.Coefficients coefficients = 3;
  inline int coefficients_size() const;
  inline void clear_coefficients();
  static const int kCoefficientsFieldNumber = 3;
  inline const ::GovernAffairConfig::Coefficients& coefficients(int index) const;
  inline ::GovernAffairConfig::Coefficients* mutable_coefficients(int index);
  inline ::GovernAffairConfig::Coefficients* add_coefficients();
  inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::Coefficients >&
      coefficients() const;
  inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::Coefficients >*
      mutable_coefficients();

  // required .GovernAffairConfig.LoyalReward loyal_reward = 4;
  inline bool has_loyal_reward() const;
  inline void clear_loyal_reward();
  static const int kLoyalRewardFieldNumber = 4;
  inline const ::GovernAffairConfig::LoyalReward& loyal_reward() const;
  inline ::GovernAffairConfig::LoyalReward* mutable_loyal_reward();
  inline ::GovernAffairConfig::LoyalReward* release_loyal_reward();
  inline void set_allocated_loyal_reward(::GovernAffairConfig::LoyalReward* loyal_reward);

  // @@protoc_insertion_point(class_scope:GovernAffairConfig.GovernAffairs)
 private:
  inline void set_has_loyal_reward();
  inline void clear_has_loyal_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::AffairsItem > govern_affairs_;
  ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::BuildRelationTimes > build_affairtimes_;
  ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::Coefficients > coefficients_;
  ::GovernAffairConfig::LoyalReward* loyal_reward_;
  friend void  protobuf_AddDesc_GovernAffair_2eproto();
  friend void protobuf_AssignDesc_GovernAffair_2eproto();
  friend void protobuf_ShutdownFile_GovernAffair_2eproto();

  void InitAsDefaultInstance();
  static GovernAffairs* default_instance_;
};
// ===================================================================


// ===================================================================

// RewardItem

// optional uint32 coin = 1;
inline bool RewardItem::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardItem::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardItem::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardItem::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 RewardItem::coin() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.RewardItem.coin)
  return coin_;
}
inline void RewardItem::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.RewardItem.coin)
}

// optional uint32 wood = 2;
inline bool RewardItem::has_wood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardItem::set_has_wood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardItem::clear_has_wood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardItem::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 RewardItem::wood() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.RewardItem.wood)
  return wood_;
}
inline void RewardItem::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.RewardItem.wood)
}

// optional uint32 food = 3;
inline bool RewardItem::has_food() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardItem::set_has_food() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardItem::clear_has_food() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardItem::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 RewardItem::food() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.RewardItem.food)
  return food_;
}
inline void RewardItem::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.RewardItem.food)
}

// optional uint32 loyal = 4;
inline bool RewardItem::has_loyal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RewardItem::set_has_loyal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RewardItem::clear_has_loyal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RewardItem::clear_loyal() {
  loyal_ = 0u;
  clear_has_loyal();
}
inline ::google::protobuf::uint32 RewardItem::loyal() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.RewardItem.loyal)
  return loyal_;
}
inline void RewardItem::set_loyal(::google::protobuf::uint32 value) {
  set_has_loyal();
  loyal_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.RewardItem.loyal)
}

// optional uint32 paycash = 5;
inline bool RewardItem::has_paycash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RewardItem::set_has_paycash() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RewardItem::clear_has_paycash() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RewardItem::clear_paycash() {
  paycash_ = 0u;
  clear_has_paycash();
}
inline ::google::protobuf::uint32 RewardItem::paycash() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.RewardItem.paycash)
  return paycash_;
}
inline void RewardItem::set_paycash(::google::protobuf::uint32 value) {
  set_has_paycash();
  paycash_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.RewardItem.paycash)
}

// -------------------------------------------------------------------

// AffairsItem

// required uint32 id = 1;
inline bool AffairsItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AffairsItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AffairsItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AffairsItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AffairsItem::id() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.AffairsItem.id)
  return id_;
}
inline void AffairsItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.AffairsItem.id)
}

// required uint32 rate = 2;
inline bool AffairsItem::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AffairsItem::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AffairsItem::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AffairsItem::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 AffairsItem::rate() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.AffairsItem.rate)
  return rate_;
}
inline void AffairsItem::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.AffairsItem.rate)
}

// repeated .GovernAffairConfig.RewardItem reward = 3;
inline int AffairsItem::reward_size() const {
  return reward_.size();
}
inline void AffairsItem::clear_reward() {
  reward_.Clear();
}
inline const ::GovernAffairConfig::RewardItem& AffairsItem::reward(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.AffairsItem.reward)
  return reward_.Get(index);
}
inline ::GovernAffairConfig::RewardItem* AffairsItem::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:GovernAffairConfig.AffairsItem.reward)
  return reward_.Mutable(index);
}
inline ::GovernAffairConfig::RewardItem* AffairsItem::add_reward() {
  // @@protoc_insertion_point(field_add:GovernAffairConfig.AffairsItem.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::RewardItem >&
AffairsItem::reward() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.AffairsItem.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::RewardItem >*
AffairsItem::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.AffairsItem.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// BuildRelationTimes

// required uint32 type = 1;
inline bool BuildRelationTimes::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildRelationTimes::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildRelationTimes::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildRelationTimes::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BuildRelationTimes::type() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.BuildRelationTimes.type)
  return type_;
}
inline void BuildRelationTimes::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.BuildRelationTimes.type)
}

// repeated uint32 sublevelsum = 2;
inline int BuildRelationTimes::sublevelsum_size() const {
  return sublevelsum_.size();
}
inline void BuildRelationTimes::clear_sublevelsum() {
  sublevelsum_.Clear();
}
inline ::google::protobuf::uint32 BuildRelationTimes::sublevelsum(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.BuildRelationTimes.sublevelsum)
  return sublevelsum_.Get(index);
}
inline void BuildRelationTimes::set_sublevelsum(int index, ::google::protobuf::uint32 value) {
  sublevelsum_.Set(index, value);
  // @@protoc_insertion_point(field_set:GovernAffairConfig.BuildRelationTimes.sublevelsum)
}
inline void BuildRelationTimes::add_sublevelsum(::google::protobuf::uint32 value) {
  sublevelsum_.Add(value);
  // @@protoc_insertion_point(field_add:GovernAffairConfig.BuildRelationTimes.sublevelsum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BuildRelationTimes::sublevelsum() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.BuildRelationTimes.sublevelsum)
  return sublevelsum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BuildRelationTimes::mutable_sublevelsum() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.BuildRelationTimes.sublevelsum)
  return &sublevelsum_;
}

// -------------------------------------------------------------------

// Coefficients

// required uint32 coefficient = 1;
inline bool Coefficients::has_coefficient() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Coefficients::set_has_coefficient() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Coefficients::clear_has_coefficient() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Coefficients::clear_coefficient() {
  coefficient_ = 0u;
  clear_has_coefficient();
}
inline ::google::protobuf::uint32 Coefficients::coefficient() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.Coefficients.coefficient)
  return coefficient_;
}
inline void Coefficients::set_coefficient(::google::protobuf::uint32 value) {
  set_has_coefficient();
  coefficient_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.Coefficients.coefficient)
}

// repeated uint32 levelrange = 2;
inline int Coefficients::levelrange_size() const {
  return levelrange_.size();
}
inline void Coefficients::clear_levelrange() {
  levelrange_.Clear();
}
inline ::google::protobuf::uint32 Coefficients::levelrange(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.Coefficients.levelrange)
  return levelrange_.Get(index);
}
inline void Coefficients::set_levelrange(int index, ::google::protobuf::uint32 value) {
  levelrange_.Set(index, value);
  // @@protoc_insertion_point(field_set:GovernAffairConfig.Coefficients.levelrange)
}
inline void Coefficients::add_levelrange(::google::protobuf::uint32 value) {
  levelrange_.Add(value);
  // @@protoc_insertion_point(field_add:GovernAffairConfig.Coefficients.levelrange)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Coefficients::levelrange() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.Coefficients.levelrange)
  return levelrange_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Coefficients::mutable_levelrange() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.Coefficients.levelrange)
  return &levelrange_;
}

// -------------------------------------------------------------------

// LoyalReward

// required uint32 coin = 1;
inline bool LoyalReward::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoyalReward::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoyalReward::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoyalReward::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 LoyalReward::coin() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.LoyalReward.coin)
  return coin_;
}
inline void LoyalReward::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.LoyalReward.coin)
}

// required uint32 wood = 2;
inline bool LoyalReward::has_wood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoyalReward::set_has_wood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoyalReward::clear_has_wood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoyalReward::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 LoyalReward::wood() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.LoyalReward.wood)
  return wood_;
}
inline void LoyalReward::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.LoyalReward.wood)
}

// required uint32 food = 3;
inline bool LoyalReward::has_food() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoyalReward::set_has_food() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoyalReward::clear_has_food() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoyalReward::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 LoyalReward::food() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.LoyalReward.food)
  return food_;
}
inline void LoyalReward::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.LoyalReward.food)
}

// required uint32 iron = 4;
inline bool LoyalReward::has_iron() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoyalReward::set_has_iron() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoyalReward::clear_has_iron() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoyalReward::clear_iron() {
  iron_ = 0u;
  clear_has_iron();
}
inline ::google::protobuf::uint32 LoyalReward::iron() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.LoyalReward.iron)
  return iron_;
}
inline void LoyalReward::set_iron(::google::protobuf::uint32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:GovernAffairConfig.LoyalReward.iron)
}

// -------------------------------------------------------------------

// GovernAffairs

// repeated .GovernAffairConfig.AffairsItem govern_affairs = 1;
inline int GovernAffairs::govern_affairs_size() const {
  return govern_affairs_.size();
}
inline void GovernAffairs::clear_govern_affairs() {
  govern_affairs_.Clear();
}
inline const ::GovernAffairConfig::AffairsItem& GovernAffairs::govern_affairs(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.GovernAffairs.govern_affairs)
  return govern_affairs_.Get(index);
}
inline ::GovernAffairConfig::AffairsItem* GovernAffairs::mutable_govern_affairs(int index) {
  // @@protoc_insertion_point(field_mutable:GovernAffairConfig.GovernAffairs.govern_affairs)
  return govern_affairs_.Mutable(index);
}
inline ::GovernAffairConfig::AffairsItem* GovernAffairs::add_govern_affairs() {
  // @@protoc_insertion_point(field_add:GovernAffairConfig.GovernAffairs.govern_affairs)
  return govern_affairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::AffairsItem >&
GovernAffairs::govern_affairs() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.GovernAffairs.govern_affairs)
  return govern_affairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::AffairsItem >*
GovernAffairs::mutable_govern_affairs() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.GovernAffairs.govern_affairs)
  return &govern_affairs_;
}

// repeated .GovernAffairConfig.BuildRelationTimes build_affairtimes = 2;
inline int GovernAffairs::build_affairtimes_size() const {
  return build_affairtimes_.size();
}
inline void GovernAffairs::clear_build_affairtimes() {
  build_affairtimes_.Clear();
}
inline const ::GovernAffairConfig::BuildRelationTimes& GovernAffairs::build_affairtimes(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.GovernAffairs.build_affairtimes)
  return build_affairtimes_.Get(index);
}
inline ::GovernAffairConfig::BuildRelationTimes* GovernAffairs::mutable_build_affairtimes(int index) {
  // @@protoc_insertion_point(field_mutable:GovernAffairConfig.GovernAffairs.build_affairtimes)
  return build_affairtimes_.Mutable(index);
}
inline ::GovernAffairConfig::BuildRelationTimes* GovernAffairs::add_build_affairtimes() {
  // @@protoc_insertion_point(field_add:GovernAffairConfig.GovernAffairs.build_affairtimes)
  return build_affairtimes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::BuildRelationTimes >&
GovernAffairs::build_affairtimes() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.GovernAffairs.build_affairtimes)
  return build_affairtimes_;
}
inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::BuildRelationTimes >*
GovernAffairs::mutable_build_affairtimes() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.GovernAffairs.build_affairtimes)
  return &build_affairtimes_;
}

// repeated .GovernAffairConfig.Coefficients coefficients = 3;
inline int GovernAffairs::coefficients_size() const {
  return coefficients_.size();
}
inline void GovernAffairs::clear_coefficients() {
  coefficients_.Clear();
}
inline const ::GovernAffairConfig::Coefficients& GovernAffairs::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.GovernAffairs.coefficients)
  return coefficients_.Get(index);
}
inline ::GovernAffairConfig::Coefficients* GovernAffairs::mutable_coefficients(int index) {
  // @@protoc_insertion_point(field_mutable:GovernAffairConfig.GovernAffairs.coefficients)
  return coefficients_.Mutable(index);
}
inline ::GovernAffairConfig::Coefficients* GovernAffairs::add_coefficients() {
  // @@protoc_insertion_point(field_add:GovernAffairConfig.GovernAffairs.coefficients)
  return coefficients_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::Coefficients >&
GovernAffairs::coefficients() const {
  // @@protoc_insertion_point(field_list:GovernAffairConfig.GovernAffairs.coefficients)
  return coefficients_;
}
inline ::google::protobuf::RepeatedPtrField< ::GovernAffairConfig::Coefficients >*
GovernAffairs::mutable_coefficients() {
  // @@protoc_insertion_point(field_mutable_list:GovernAffairConfig.GovernAffairs.coefficients)
  return &coefficients_;
}

// required .GovernAffairConfig.LoyalReward loyal_reward = 4;
inline bool GovernAffairs::has_loyal_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GovernAffairs::set_has_loyal_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GovernAffairs::clear_has_loyal_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GovernAffairs::clear_loyal_reward() {
  if (loyal_reward_ != NULL) loyal_reward_->::GovernAffairConfig::LoyalReward::Clear();
  clear_has_loyal_reward();
}
inline const ::GovernAffairConfig::LoyalReward& GovernAffairs::loyal_reward() const {
  // @@protoc_insertion_point(field_get:GovernAffairConfig.GovernAffairs.loyal_reward)
  return loyal_reward_ != NULL ? *loyal_reward_ : *default_instance_->loyal_reward_;
}
inline ::GovernAffairConfig::LoyalReward* GovernAffairs::mutable_loyal_reward() {
  set_has_loyal_reward();
  if (loyal_reward_ == NULL) loyal_reward_ = new ::GovernAffairConfig::LoyalReward;
  // @@protoc_insertion_point(field_mutable:GovernAffairConfig.GovernAffairs.loyal_reward)
  return loyal_reward_;
}
inline ::GovernAffairConfig::LoyalReward* GovernAffairs::release_loyal_reward() {
  clear_has_loyal_reward();
  ::GovernAffairConfig::LoyalReward* temp = loyal_reward_;
  loyal_reward_ = NULL;
  return temp;
}
inline void GovernAffairs::set_allocated_loyal_reward(::GovernAffairConfig::LoyalReward* loyal_reward) {
  delete loyal_reward_;
  loyal_reward_ = loyal_reward;
  if (loyal_reward) {
    set_has_loyal_reward();
  } else {
    clear_has_loyal_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:GovernAffairConfig.GovernAffairs.loyal_reward)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GovernAffairConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GovernAffair_2eproto__INCLUDED
