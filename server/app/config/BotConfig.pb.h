// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BotConfig.proto

#ifndef PROTOBUF_BotConfig_2eproto__INCLUDED
#define PROTOBUF_BotConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace BotConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BotConfig_2eproto();
void protobuf_AssignDesc_BotConfig_2eproto();
void protobuf_ShutdownFile_BotConfig_2eproto();

class BotEquipment;
class BotHero;
class BotWeapon;
class BotPlayer;
class BotAccount;
class BotName;
class BotConfig;

// ===================================================================

class BotEquipment : public ::google::protobuf::Message {
 public:
  BotEquipment();
  virtual ~BotEquipment();

  BotEquipment(const BotEquipment& from);

  inline BotEquipment& operator=(const BotEquipment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotEquipment& default_instance();

  void Swap(BotEquipment* other);

  // implements Message ----------------------------------------------

  BotEquipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotEquipment& from);
  void MergeFrom(const BotEquipment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eqid = 1;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 1;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 born1 = 3;
  inline bool has_born1() const;
  inline void clear_born1();
  static const int kBorn1FieldNumber = 3;
  inline ::google::protobuf::uint32 born1() const;
  inline void set_born1(::google::protobuf::uint32 value);

  // optional uint32 born2 = 4;
  inline bool has_born2() const;
  inline void clear_born2();
  static const int kBorn2FieldNumber = 4;
  inline ::google::protobuf::uint32 born2() const;
  inline void set_born2(::google::protobuf::uint32 value);

  // optional uint32 subt1 = 5;
  inline bool has_subt1() const;
  inline void clear_subt1();
  static const int kSubt1FieldNumber = 5;
  inline ::google::protobuf::uint32 subt1() const;
  inline void set_subt1(::google::protobuf::uint32 value);

  // optional uint32 sublv1 = 6;
  inline bool has_sublv1() const;
  inline void clear_sublv1();
  static const int kSublv1FieldNumber = 6;
  inline ::google::protobuf::uint32 sublv1() const;
  inline void set_sublv1(::google::protobuf::uint32 value);

  // optional uint32 subt2 = 7;
  inline bool has_subt2() const;
  inline void clear_subt2();
  static const int kSubt2FieldNumber = 7;
  inline ::google::protobuf::uint32 subt2() const;
  inline void set_subt2(::google::protobuf::uint32 value);

  // optional uint32 sublv2 = 8;
  inline bool has_sublv2() const;
  inline void clear_sublv2();
  static const int kSublv2FieldNumber = 8;
  inline ::google::protobuf::uint32 sublv2() const;
  inline void set_sublv2(::google::protobuf::uint32 value);

  // optional uint32 subt3 = 9;
  inline bool has_subt3() const;
  inline void clear_subt3();
  static const int kSubt3FieldNumber = 9;
  inline ::google::protobuf::uint32 subt3() const;
  inline void set_subt3(::google::protobuf::uint32 value);

  // optional uint32 sublv3 = 10;
  inline bool has_sublv3() const;
  inline void clear_sublv3();
  static const int kSublv3FieldNumber = 10;
  inline ::google::protobuf::uint32 sublv3() const;
  inline void set_sublv3(::google::protobuf::uint32 value);

  // optional uint32 subt4 = 11;
  inline bool has_subt4() const;
  inline void clear_subt4();
  static const int kSubt4FieldNumber = 11;
  inline ::google::protobuf::uint32 subt4() const;
  inline void set_subt4(::google::protobuf::uint32 value);

  // optional uint32 sublv4 = 12;
  inline bool has_sublv4() const;
  inline void clear_sublv4();
  static const int kSublv4FieldNumber = 12;
  inline ::google::protobuf::uint32 sublv4() const;
  inline void set_sublv4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BotConfig.BotEquipment)
 private:
  inline void set_has_eqid();
  inline void clear_has_eqid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_born1();
  inline void clear_has_born1();
  inline void set_has_born2();
  inline void clear_has_born2();
  inline void set_has_subt1();
  inline void clear_has_subt1();
  inline void set_has_sublv1();
  inline void clear_has_sublv1();
  inline void set_has_subt2();
  inline void clear_has_subt2();
  inline void set_has_sublv2();
  inline void clear_has_sublv2();
  inline void set_has_subt3();
  inline void clear_has_subt3();
  inline void set_has_sublv3();
  inline void clear_has_sublv3();
  inline void set_has_subt4();
  inline void clear_has_subt4();
  inline void set_has_sublv4();
  inline void clear_has_sublv4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eqid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 born1_;
  ::google::protobuf::uint32 born2_;
  ::google::protobuf::uint32 subt1_;
  ::google::protobuf::uint32 sublv1_;
  ::google::protobuf::uint32 subt2_;
  ::google::protobuf::uint32 sublv2_;
  ::google::protobuf::uint32 subt3_;
  ::google::protobuf::uint32 sublv3_;
  ::google::protobuf::uint32 subt4_;
  ::google::protobuf::uint32 sublv4_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotEquipment* default_instance_;
};
// -------------------------------------------------------------------

class BotHero : public ::google::protobuf::Message {
 public:
  BotHero();
  virtual ~BotHero();

  BotHero(const BotHero& from);

  inline BotHero& operator=(const BotHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotHero& default_instance();

  void Swap(BotHero* other);

  // implements Message ----------------------------------------------

  BotHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotHero& from);
  void MergeFrom(const BotHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .BotConfig.BotEquipment equip = 3;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 3;
  inline const ::BotConfig::BotEquipment& equip(int index) const;
  inline ::BotConfig::BotEquipment* mutable_equip(int index);
  inline ::BotConfig::BotEquipment* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotEquipment >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotEquipment >*
      mutable_equip();

  // @@protoc_insertion_point(class_scope:BotConfig.BotHero)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotEquipment > equip_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotHero* default_instance_;
};
// -------------------------------------------------------------------

class BotWeapon : public ::google::protobuf::Message {
 public:
  BotWeapon();
  virtual ~BotWeapon();

  BotWeapon(const BotWeapon& from);

  inline BotWeapon& operator=(const BotWeapon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotWeapon& default_instance();

  void Swap(BotWeapon* other);

  // implements Message ----------------------------------------------

  BotWeapon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotWeapon& from);
  void MergeFrom(const BotWeapon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BotConfig.BotWeapon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotWeapon* default_instance_;
};
// -------------------------------------------------------------------

class BotPlayer : public ::google::protobuf::Message {
 public:
  BotPlayer();
  virtual ~BotPlayer();

  BotPlayer(const BotPlayer& from);

  inline BotPlayer& operator=(const BotPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotPlayer& default_instance();

  void Swap(BotPlayer* other);

  // implements Message ----------------------------------------------

  BotPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotPlayer& from);
  void MergeFrom(const BotPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 viplevel = 3;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 3;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated .BotConfig.BotHero hero = 4;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 4;
  inline const ::BotConfig::BotHero& hero(int index) const;
  inline ::BotConfig::BotHero* mutable_hero(int index);
  inline ::BotConfig::BotHero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotHero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotHero >*
      mutable_hero();

  // repeated uint32 science = 5;
  inline int science_size() const;
  inline void clear_science();
  static const int kScienceFieldNumber = 5;
  inline ::google::protobuf::uint32 science(int index) const;
  inline void set_science(int index, ::google::protobuf::uint32 value);
  inline void add_science(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      science() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_science();

  // repeated .BotConfig.BotWeapon weapon = 6;
  inline int weapon_size() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 6;
  inline const ::BotConfig::BotWeapon& weapon(int index) const;
  inline ::BotConfig::BotWeapon* mutable_weapon(int index);
  inline ::BotConfig::BotWeapon* add_weapon();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotWeapon >&
      weapon() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotWeapon >*
      mutable_weapon();

  // @@protoc_insertion_point(class_scope:BotConfig.BotPlayer)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotHero > hero_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > science_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotWeapon > weapon_;
  ::google::protobuf::uint32 viplevel_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotPlayer* default_instance_;
};
// -------------------------------------------------------------------

class BotAccount : public ::google::protobuf::Message {
 public:
  BotAccount();
  virtual ~BotAccount();

  BotAccount(const BotAccount& from);

  inline BotAccount& operator=(const BotAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotAccount& default_instance();

  void Swap(BotAccount* other);

  // implements Message ----------------------------------------------

  BotAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotAccount& from);
  void MergeFrom(const BotAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .BotConfig.BotPlayer player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::BotConfig::BotPlayer& player(int index) const;
  inline ::BotConfig::BotPlayer* mutable_player(int index);
  inline ::BotConfig::BotPlayer* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotPlayer >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotPlayer >*
      mutable_player();

  // @@protoc_insertion_point(class_scope:BotConfig.BotAccount)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotPlayer > player_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotAccount* default_instance_;
};
// -------------------------------------------------------------------

class BotName : public ::google::protobuf::Message {
 public:
  BotName();
  virtual ~BotName();

  BotName(const BotName& from);

  inline BotName& operator=(const BotName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotName& default_instance();

  void Swap(BotName* other);

  // implements Message ----------------------------------------------

  BotName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotName& from);
  void MergeFrom(const BotName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 kingdom = 2;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 2;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // repeated bytes name = 3;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const void* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // @@protoc_insertion_point(class_scope:BotConfig.BotName)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 kingdom_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotName* default_instance_;
};
// -------------------------------------------------------------------

class BotConfig : public ::google::protobuf::Message {
 public:
  BotConfig();
  virtual ~BotConfig();

  BotConfig(const BotConfig& from);

  inline BotConfig& operator=(const BotConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotConfig& default_instance();

  void Swap(BotConfig* other);

  // implements Message ----------------------------------------------

  BotConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotConfig& from);
  void MergeFrom(const BotConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fig = 1;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 1;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const char* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // repeated .BotConfig.BotName name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::BotConfig::BotName& name(int index) const;
  inline ::BotConfig::BotName* mutable_name(int index);
  inline ::BotConfig::BotName* add_name();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotName >&
      name() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotName >*
      mutable_name();

  // repeated .BotConfig.BotAccount account = 3;
  inline int account_size() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::BotConfig::BotAccount& account(int index) const;
  inline ::BotConfig::BotAccount* mutable_account(int index);
  inline ::BotConfig::BotAccount* add_account();
  inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotAccount >&
      account() const;
  inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotAccount >*
      mutable_account();

  // repeated bytes chat = 4;
  inline int chat_size() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 4;
  inline const ::std::string& chat(int index) const;
  inline ::std::string* mutable_chat(int index);
  inline void set_chat(int index, const ::std::string& value);
  inline void set_chat(int index, const char* value);
  inline void set_chat(int index, const void* value, size_t size);
  inline ::std::string* add_chat();
  inline void add_chat(const ::std::string& value);
  inline void add_chat(const char* value);
  inline void add_chat(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& chat() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_chat();

  // @@protoc_insertion_point(class_scope:BotConfig.BotConfig)
 private:
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fig_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotName > name_;
  ::google::protobuf::RepeatedPtrField< ::BotConfig::BotAccount > account_;
  ::google::protobuf::RepeatedPtrField< ::std::string> chat_;
  friend void  protobuf_AddDesc_BotConfig_2eproto();
  friend void protobuf_AssignDesc_BotConfig_2eproto();
  friend void protobuf_ShutdownFile_BotConfig_2eproto();

  void InitAsDefaultInstance();
  static BotConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// BotEquipment

// required uint32 eqid = 1;
inline bool BotEquipment::has_eqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotEquipment::set_has_eqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotEquipment::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotEquipment::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 BotEquipment::eqid() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.eqid)
  return eqid_;
}
inline void BotEquipment::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.eqid)
}

// optional uint32 star = 2;
inline bool BotEquipment::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotEquipment::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotEquipment::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotEquipment::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 BotEquipment::star() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.star)
  return star_;
}
inline void BotEquipment::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.star)
}

// optional uint32 born1 = 3;
inline bool BotEquipment::has_born1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BotEquipment::set_has_born1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BotEquipment::clear_has_born1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BotEquipment::clear_born1() {
  born1_ = 0u;
  clear_has_born1();
}
inline ::google::protobuf::uint32 BotEquipment::born1() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.born1)
  return born1_;
}
inline void BotEquipment::set_born1(::google::protobuf::uint32 value) {
  set_has_born1();
  born1_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.born1)
}

// optional uint32 born2 = 4;
inline bool BotEquipment::has_born2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BotEquipment::set_has_born2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BotEquipment::clear_has_born2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BotEquipment::clear_born2() {
  born2_ = 0u;
  clear_has_born2();
}
inline ::google::protobuf::uint32 BotEquipment::born2() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.born2)
  return born2_;
}
inline void BotEquipment::set_born2(::google::protobuf::uint32 value) {
  set_has_born2();
  born2_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.born2)
}

// optional uint32 subt1 = 5;
inline bool BotEquipment::has_subt1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BotEquipment::set_has_subt1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BotEquipment::clear_has_subt1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BotEquipment::clear_subt1() {
  subt1_ = 0u;
  clear_has_subt1();
}
inline ::google::protobuf::uint32 BotEquipment::subt1() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.subt1)
  return subt1_;
}
inline void BotEquipment::set_subt1(::google::protobuf::uint32 value) {
  set_has_subt1();
  subt1_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.subt1)
}

// optional uint32 sublv1 = 6;
inline bool BotEquipment::has_sublv1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BotEquipment::set_has_sublv1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BotEquipment::clear_has_sublv1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BotEquipment::clear_sublv1() {
  sublv1_ = 0u;
  clear_has_sublv1();
}
inline ::google::protobuf::uint32 BotEquipment::sublv1() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.sublv1)
  return sublv1_;
}
inline void BotEquipment::set_sublv1(::google::protobuf::uint32 value) {
  set_has_sublv1();
  sublv1_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.sublv1)
}

// optional uint32 subt2 = 7;
inline bool BotEquipment::has_subt2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BotEquipment::set_has_subt2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BotEquipment::clear_has_subt2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BotEquipment::clear_subt2() {
  subt2_ = 0u;
  clear_has_subt2();
}
inline ::google::protobuf::uint32 BotEquipment::subt2() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.subt2)
  return subt2_;
}
inline void BotEquipment::set_subt2(::google::protobuf::uint32 value) {
  set_has_subt2();
  subt2_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.subt2)
}

// optional uint32 sublv2 = 8;
inline bool BotEquipment::has_sublv2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BotEquipment::set_has_sublv2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BotEquipment::clear_has_sublv2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BotEquipment::clear_sublv2() {
  sublv2_ = 0u;
  clear_has_sublv2();
}
inline ::google::protobuf::uint32 BotEquipment::sublv2() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.sublv2)
  return sublv2_;
}
inline void BotEquipment::set_sublv2(::google::protobuf::uint32 value) {
  set_has_sublv2();
  sublv2_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.sublv2)
}

// optional uint32 subt3 = 9;
inline bool BotEquipment::has_subt3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BotEquipment::set_has_subt3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BotEquipment::clear_has_subt3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BotEquipment::clear_subt3() {
  subt3_ = 0u;
  clear_has_subt3();
}
inline ::google::protobuf::uint32 BotEquipment::subt3() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.subt3)
  return subt3_;
}
inline void BotEquipment::set_subt3(::google::protobuf::uint32 value) {
  set_has_subt3();
  subt3_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.subt3)
}

// optional uint32 sublv3 = 10;
inline bool BotEquipment::has_sublv3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BotEquipment::set_has_sublv3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BotEquipment::clear_has_sublv3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BotEquipment::clear_sublv3() {
  sublv3_ = 0u;
  clear_has_sublv3();
}
inline ::google::protobuf::uint32 BotEquipment::sublv3() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.sublv3)
  return sublv3_;
}
inline void BotEquipment::set_sublv3(::google::protobuf::uint32 value) {
  set_has_sublv3();
  sublv3_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.sublv3)
}

// optional uint32 subt4 = 11;
inline bool BotEquipment::has_subt4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BotEquipment::set_has_subt4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BotEquipment::clear_has_subt4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BotEquipment::clear_subt4() {
  subt4_ = 0u;
  clear_has_subt4();
}
inline ::google::protobuf::uint32 BotEquipment::subt4() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.subt4)
  return subt4_;
}
inline void BotEquipment::set_subt4(::google::protobuf::uint32 value) {
  set_has_subt4();
  subt4_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.subt4)
}

// optional uint32 sublv4 = 12;
inline bool BotEquipment::has_sublv4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BotEquipment::set_has_sublv4() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BotEquipment::clear_has_sublv4() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BotEquipment::clear_sublv4() {
  sublv4_ = 0u;
  clear_has_sublv4();
}
inline ::google::protobuf::uint32 BotEquipment::sublv4() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotEquipment.sublv4)
  return sublv4_;
}
inline void BotEquipment::set_sublv4(::google::protobuf::uint32 value) {
  set_has_sublv4();
  sublv4_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotEquipment.sublv4)
}

// -------------------------------------------------------------------

// BotHero

// required uint32 heroid = 1;
inline bool BotHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotHero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 BotHero::heroid() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotHero.heroid)
  return heroid_;
}
inline void BotHero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotHero.heroid)
}

// required uint32 level = 2;
inline bool BotHero::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotHero::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotHero::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotHero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BotHero::level() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotHero.level)
  return level_;
}
inline void BotHero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotHero.level)
}

// repeated .BotConfig.BotEquipment equip = 3;
inline int BotHero::equip_size() const {
  return equip_.size();
}
inline void BotHero::clear_equip() {
  equip_.Clear();
}
inline const ::BotConfig::BotEquipment& BotHero::equip(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotHero.equip)
  return equip_.Get(index);
}
inline ::BotConfig::BotEquipment* BotHero::mutable_equip(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotHero.equip)
  return equip_.Mutable(index);
}
inline ::BotConfig::BotEquipment* BotHero::add_equip() {
  // @@protoc_insertion_point(field_add:BotConfig.BotHero.equip)
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotEquipment >&
BotHero::equip() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotHero.equip)
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotEquipment >*
BotHero::mutable_equip() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotHero.equip)
  return &equip_;
}

// -------------------------------------------------------------------

// BotWeapon

// required uint32 id = 1;
inline bool BotWeapon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotWeapon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotWeapon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotWeapon::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BotWeapon::id() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotWeapon.id)
  return id_;
}
inline void BotWeapon::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotWeapon.id)
}

// required uint32 level = 2;
inline bool BotWeapon::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotWeapon::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotWeapon::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotWeapon::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BotWeapon::level() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotWeapon.level)
  return level_;
}
inline void BotWeapon::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotWeapon.level)
}

// -------------------------------------------------------------------

// BotPlayer

// required uint32 day = 1;
inline bool BotPlayer::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotPlayer::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotPlayer::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotPlayer::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 BotPlayer::day() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.day)
  return day_;
}
inline void BotPlayer::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotPlayer.day)
}

// required uint32 level = 2;
inline bool BotPlayer::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotPlayer::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotPlayer::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotPlayer::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BotPlayer::level() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.level)
  return level_;
}
inline void BotPlayer::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotPlayer.level)
}

// required uint32 viplevel = 3;
inline bool BotPlayer::has_viplevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BotPlayer::set_has_viplevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BotPlayer::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BotPlayer::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 BotPlayer::viplevel() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.viplevel)
  return viplevel_;
}
inline void BotPlayer::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotPlayer.viplevel)
}

// repeated .BotConfig.BotHero hero = 4;
inline int BotPlayer::hero_size() const {
  return hero_.size();
}
inline void BotPlayer::clear_hero() {
  hero_.Clear();
}
inline const ::BotConfig::BotHero& BotPlayer::hero(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.hero)
  return hero_.Get(index);
}
inline ::BotConfig::BotHero* BotPlayer::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotPlayer.hero)
  return hero_.Mutable(index);
}
inline ::BotConfig::BotHero* BotPlayer::add_hero() {
  // @@protoc_insertion_point(field_add:BotConfig.BotPlayer.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotHero >&
BotPlayer::hero() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotPlayer.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotHero >*
BotPlayer::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotPlayer.hero)
  return &hero_;
}

// repeated uint32 science = 5;
inline int BotPlayer::science_size() const {
  return science_.size();
}
inline void BotPlayer::clear_science() {
  science_.Clear();
}
inline ::google::protobuf::uint32 BotPlayer::science(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.science)
  return science_.Get(index);
}
inline void BotPlayer::set_science(int index, ::google::protobuf::uint32 value) {
  science_.Set(index, value);
  // @@protoc_insertion_point(field_set:BotConfig.BotPlayer.science)
}
inline void BotPlayer::add_science(::google::protobuf::uint32 value) {
  science_.Add(value);
  // @@protoc_insertion_point(field_add:BotConfig.BotPlayer.science)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BotPlayer::science() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotPlayer.science)
  return science_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BotPlayer::mutable_science() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotPlayer.science)
  return &science_;
}

// repeated .BotConfig.BotWeapon weapon = 6;
inline int BotPlayer::weapon_size() const {
  return weapon_.size();
}
inline void BotPlayer::clear_weapon() {
  weapon_.Clear();
}
inline const ::BotConfig::BotWeapon& BotPlayer::weapon(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotPlayer.weapon)
  return weapon_.Get(index);
}
inline ::BotConfig::BotWeapon* BotPlayer::mutable_weapon(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotPlayer.weapon)
  return weapon_.Mutable(index);
}
inline ::BotConfig::BotWeapon* BotPlayer::add_weapon() {
  // @@protoc_insertion_point(field_add:BotConfig.BotPlayer.weapon)
  return weapon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotWeapon >&
BotPlayer::weapon() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotPlayer.weapon)
  return weapon_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotWeapon >*
BotPlayer::mutable_weapon() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotPlayer.weapon)
  return &weapon_;
}

// -------------------------------------------------------------------

// BotAccount

// required uint32 id = 1;
inline bool BotAccount::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotAccount::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotAccount::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotAccount::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BotAccount::id() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotAccount.id)
  return id_;
}
inline void BotAccount::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotAccount.id)
}

// repeated .BotConfig.BotPlayer player = 2;
inline int BotAccount::player_size() const {
  return player_.size();
}
inline void BotAccount::clear_player() {
  player_.Clear();
}
inline const ::BotConfig::BotPlayer& BotAccount::player(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotAccount.player)
  return player_.Get(index);
}
inline ::BotConfig::BotPlayer* BotAccount::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotAccount.player)
  return player_.Mutable(index);
}
inline ::BotConfig::BotPlayer* BotAccount::add_player() {
  // @@protoc_insertion_point(field_add:BotConfig.BotAccount.player)
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotPlayer >&
BotAccount::player() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotAccount.player)
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotPlayer >*
BotAccount::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotAccount.player)
  return &player_;
}

// -------------------------------------------------------------------

// BotName

// required uint32 id = 1;
inline bool BotName::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotName::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotName::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotName::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BotName::id() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotName.id)
  return id_;
}
inline void BotName::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotName.id)
}

// required uint32 kingdom = 2;
inline bool BotName::has_kingdom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BotName::set_has_kingdom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BotName::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BotName::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 BotName::kingdom() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotName.kingdom)
  return kingdom_;
}
inline void BotName::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:BotConfig.BotName.kingdom)
}

// repeated bytes name = 3;
inline int BotName::name_size() const {
  return name_.size();
}
inline void BotName::clear_name() {
  name_.Clear();
}
inline const ::std::string& BotName::name(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotName.name)
  return name_.Get(index);
}
inline ::std::string* BotName::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotName.name)
  return name_.Mutable(index);
}
inline void BotName::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BotConfig.BotName.name)
  name_.Mutable(index)->assign(value);
}
inline void BotName::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BotConfig.BotName.name)
}
inline void BotName::set_name(int index, const void* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BotConfig.BotName.name)
}
inline ::std::string* BotName::add_name() {
  return name_.Add();
}
inline void BotName::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BotConfig.BotName.name)
}
inline void BotName::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BotConfig.BotName.name)
}
inline void BotName::add_name(const void* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BotConfig.BotName.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BotName::name() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotName.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BotName::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotName.name)
  return &name_;
}

// -------------------------------------------------------------------

// BotConfig

// required string fig = 1;
inline bool BotConfig::has_fig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BotConfig::set_has_fig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BotConfig::clear_has_fig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BotConfig::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& BotConfig::fig() const {
  // @@protoc_insertion_point(field_get:BotConfig.BotConfig.fig)
  return *fig_;
}
inline void BotConfig::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:BotConfig.BotConfig.fig)
}
inline void BotConfig::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:BotConfig.BotConfig.fig)
}
inline void BotConfig::set_fig(const char* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BotConfig.BotConfig.fig)
}
inline ::std::string* BotConfig::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BotConfig.BotConfig.fig)
  return fig_;
}
inline ::std::string* BotConfig::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BotConfig::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BotConfig.BotConfig.fig)
}

// repeated .BotConfig.BotName name = 2;
inline int BotConfig::name_size() const {
  return name_.size();
}
inline void BotConfig::clear_name() {
  name_.Clear();
}
inline const ::BotConfig::BotName& BotConfig::name(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotConfig.name)
  return name_.Get(index);
}
inline ::BotConfig::BotName* BotConfig::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotConfig.name)
  return name_.Mutable(index);
}
inline ::BotConfig::BotName* BotConfig::add_name() {
  // @@protoc_insertion_point(field_add:BotConfig.BotConfig.name)
  return name_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotName >&
BotConfig::name() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotConfig.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotName >*
BotConfig::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotConfig.name)
  return &name_;
}

// repeated .BotConfig.BotAccount account = 3;
inline int BotConfig::account_size() const {
  return account_.size();
}
inline void BotConfig::clear_account() {
  account_.Clear();
}
inline const ::BotConfig::BotAccount& BotConfig::account(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotConfig.account)
  return account_.Get(index);
}
inline ::BotConfig::BotAccount* BotConfig::mutable_account(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotConfig.account)
  return account_.Mutable(index);
}
inline ::BotConfig::BotAccount* BotConfig::add_account() {
  // @@protoc_insertion_point(field_add:BotConfig.BotConfig.account)
  return account_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BotConfig::BotAccount >&
BotConfig::account() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotConfig.account)
  return account_;
}
inline ::google::protobuf::RepeatedPtrField< ::BotConfig::BotAccount >*
BotConfig::mutable_account() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotConfig.account)
  return &account_;
}

// repeated bytes chat = 4;
inline int BotConfig::chat_size() const {
  return chat_.size();
}
inline void BotConfig::clear_chat() {
  chat_.Clear();
}
inline const ::std::string& BotConfig::chat(int index) const {
  // @@protoc_insertion_point(field_get:BotConfig.BotConfig.chat)
  return chat_.Get(index);
}
inline ::std::string* BotConfig::mutable_chat(int index) {
  // @@protoc_insertion_point(field_mutable:BotConfig.BotConfig.chat)
  return chat_.Mutable(index);
}
inline void BotConfig::set_chat(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BotConfig.BotConfig.chat)
  chat_.Mutable(index)->assign(value);
}
inline void BotConfig::set_chat(int index, const char* value) {
  chat_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BotConfig.BotConfig.chat)
}
inline void BotConfig::set_chat(int index, const void* value, size_t size) {
  chat_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BotConfig.BotConfig.chat)
}
inline ::std::string* BotConfig::add_chat() {
  return chat_.Add();
}
inline void BotConfig::add_chat(const ::std::string& value) {
  chat_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BotConfig.BotConfig.chat)
}
inline void BotConfig::add_chat(const char* value) {
  chat_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BotConfig.BotConfig.chat)
}
inline void BotConfig::add_chat(const void* value, size_t size) {
  chat_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BotConfig.BotConfig.chat)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BotConfig::chat() const {
  // @@protoc_insertion_point(field_list:BotConfig.BotConfig.chat)
  return chat_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BotConfig::mutable_chat() {
  // @@protoc_insertion_point(field_mutable_list:BotConfig.BotConfig.chat)
  return &chat_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BotConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BotConfig_2eproto__INCLUDED
