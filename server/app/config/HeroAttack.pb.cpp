// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HeroAttack.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "HeroAttack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace HeroAttackConfig {

namespace {

const ::google::protobuf::Descriptor* Soldier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Soldier_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttackBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttackBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* Attack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Attack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_HeroAttack_2eproto() {
  protobuf_AddDesc_HeroAttack_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "HeroAttack.proto");
  GOOGLE_CHECK(file != NULL);
  Soldier_descriptor_ = file->message_type(0);
  static const int Soldier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soldier, slevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soldier, property_),
  };
  Soldier_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Soldier_descriptor_,
      Soldier::default_instance_,
      Soldier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soldier, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soldier, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Soldier));
  AttackBase_descriptor_ = file->message_type(1);
  static const int AttackBase_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackBase, hlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackBase, soldiers_),
  };
  AttackBase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttackBase_descriptor_,
      AttackBase::default_instance_,
      AttackBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackBase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackBase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttackBase));
  Attack_descriptor_ = file->message_type(2);
  static const int Attack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attack, attacks_),
  };
  Attack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Attack_descriptor_,
      Attack::default_instance_,
      Attack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Attack));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_HeroAttack_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Soldier_descriptor_, &Soldier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttackBase_descriptor_, &AttackBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Attack_descriptor_, &Attack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_HeroAttack_2eproto() {
  delete Soldier::default_instance_;
  delete Soldier_reflection_;
  delete AttackBase::default_instance_;
  delete AttackBase_reflection_;
  delete Attack::default_instance_;
  delete Attack_reflection_;
}

void protobuf_AddDesc_HeroAttack_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020HeroAttack.proto\022\020HeroAttackConfig\"+\n\007"
    "Soldier\022\016\n\006slevel\030\001 \002(\r\022\020\n\010property\030\002 \003("
    "\r\"I\n\nAttackBase\022\016\n\006hlevel\030\001 \002(\r\022+\n\010soldi"
    "ers\030\002 \003(\0132\031.HeroAttackConfig.Soldier\"7\n\006"
    "Attack\022-\n\007attacks\030\001 \003(\0132\034.HeroAttackConf"
    "ig.AttackBase", 213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "HeroAttack.proto", &protobuf_RegisterTypes);
  Soldier::default_instance_ = new Soldier();
  AttackBase::default_instance_ = new AttackBase();
  Attack::default_instance_ = new Attack();
  Soldier::default_instance_->InitAsDefaultInstance();
  AttackBase::default_instance_->InitAsDefaultInstance();
  Attack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_HeroAttack_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_HeroAttack_2eproto {
  StaticDescriptorInitializer_HeroAttack_2eproto() {
    protobuf_AddDesc_HeroAttack_2eproto();
  }
} static_descriptor_initializer_HeroAttack_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Soldier::kSlevelFieldNumber;
const int Soldier::kPropertyFieldNumber;
#endif  // !_MSC_VER

Soldier::Soldier()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeroAttackConfig.Soldier)
}

void Soldier::InitAsDefaultInstance() {
}

Soldier::Soldier(const Soldier& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeroAttackConfig.Soldier)
}

void Soldier::SharedCtor() {
  _cached_size_ = 0;
  slevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Soldier::~Soldier() {
  // @@protoc_insertion_point(destructor:HeroAttackConfig.Soldier)
  SharedDtor();
}

void Soldier::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Soldier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Soldier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Soldier_descriptor_;
}

const Soldier& Soldier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HeroAttack_2eproto();
  return *default_instance_;
}

Soldier* Soldier::default_instance_ = NULL;

Soldier* Soldier::New() const {
  return new Soldier;
}

void Soldier::Clear() {
  slevel_ = 0u;
  property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Soldier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeroAttackConfig.Soldier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slevel_)));
          set_has_slevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_property;
        break;
      }

      // repeated uint32 property = 2;
      case 2: {
        if (tag == 16) {
         parse_property:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_property())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_property())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_property;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeroAttackConfig.Soldier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeroAttackConfig.Soldier)
  return false;
#undef DO_
}

void Soldier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeroAttackConfig.Soldier)
  // required uint32 slevel = 1;
  if (has_slevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slevel(), output);
  }

  // repeated uint32 property = 2;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->property(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeroAttackConfig.Soldier)
}

::google::protobuf::uint8* Soldier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeroAttackConfig.Soldier)
  // required uint32 slevel = 1;
  if (has_slevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slevel(), target);
  }

  // repeated uint32 property = 2;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->property(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeroAttackConfig.Soldier)
  return target;
}

int Soldier::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 slevel = 1;
    if (has_slevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slevel());
    }

  }
  // repeated uint32 property = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->property_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->property(i));
    }
    total_size += 1 * this->property_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Soldier::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Soldier* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Soldier*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Soldier::MergeFrom(const Soldier& from) {
  GOOGLE_CHECK_NE(&from, this);
  property_.MergeFrom(from.property_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slevel()) {
      set_slevel(from.slevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Soldier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Soldier::CopyFrom(const Soldier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Soldier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Soldier::Swap(Soldier* other) {
  if (other != this) {
    std::swap(slevel_, other->slevel_);
    property_.Swap(&other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Soldier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Soldier_descriptor_;
  metadata.reflection = Soldier_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AttackBase::kHlevelFieldNumber;
const int AttackBase::kSoldiersFieldNumber;
#endif  // !_MSC_VER

AttackBase::AttackBase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeroAttackConfig.AttackBase)
}

void AttackBase::InitAsDefaultInstance() {
}

AttackBase::AttackBase(const AttackBase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeroAttackConfig.AttackBase)
}

void AttackBase::SharedCtor() {
  _cached_size_ = 0;
  hlevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttackBase::~AttackBase() {
  // @@protoc_insertion_point(destructor:HeroAttackConfig.AttackBase)
  SharedDtor();
}

void AttackBase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AttackBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttackBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttackBase_descriptor_;
}

const AttackBase& AttackBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HeroAttack_2eproto();
  return *default_instance_;
}

AttackBase* AttackBase::default_instance_ = NULL;

AttackBase* AttackBase::New() const {
  return new AttackBase;
}

void AttackBase::Clear() {
  hlevel_ = 0u;
  soldiers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttackBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeroAttackConfig.AttackBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hlevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hlevel_)));
          set_has_hlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_soldiers;
        break;
      }

      // repeated .HeroAttackConfig.Soldier soldiers = 2;
      case 2: {
        if (tag == 18) {
         parse_soldiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soldiers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_soldiers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeroAttackConfig.AttackBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeroAttackConfig.AttackBase)
  return false;
#undef DO_
}

void AttackBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeroAttackConfig.AttackBase)
  // required uint32 hlevel = 1;
  if (has_hlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hlevel(), output);
  }

  // repeated .HeroAttackConfig.Soldier soldiers = 2;
  for (int i = 0; i < this->soldiers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldiers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeroAttackConfig.AttackBase)
}

::google::protobuf::uint8* AttackBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeroAttackConfig.AttackBase)
  // required uint32 hlevel = 1;
  if (has_hlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hlevel(), target);
  }

  // repeated .HeroAttackConfig.Soldier soldiers = 2;
  for (int i = 0; i < this->soldiers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldiers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeroAttackConfig.AttackBase)
  return target;
}

int AttackBase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 hlevel = 1;
    if (has_hlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hlevel());
    }

  }
  // repeated .HeroAttackConfig.Soldier soldiers = 2;
  total_size += 1 * this->soldiers_size();
  for (int i = 0; i < this->soldiers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soldiers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttackBase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttackBase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttackBase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttackBase::MergeFrom(const AttackBase& from) {
  GOOGLE_CHECK_NE(&from, this);
  soldiers_.MergeFrom(from.soldiers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hlevel()) {
      set_hlevel(from.hlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttackBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackBase::CopyFrom(const AttackBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->soldiers())) return false;
  return true;
}

void AttackBase::Swap(AttackBase* other) {
  if (other != this) {
    std::swap(hlevel_, other->hlevel_);
    soldiers_.Swap(&other->soldiers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttackBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttackBase_descriptor_;
  metadata.reflection = AttackBase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Attack::kAttacksFieldNumber;
#endif  // !_MSC_VER

Attack::Attack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeroAttackConfig.Attack)
}

void Attack::InitAsDefaultInstance() {
}

Attack::Attack(const Attack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeroAttackConfig.Attack)
}

void Attack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Attack::~Attack() {
  // @@protoc_insertion_point(destructor:HeroAttackConfig.Attack)
  SharedDtor();
}

void Attack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Attack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Attack_descriptor_;
}

const Attack& Attack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HeroAttack_2eproto();
  return *default_instance_;
}

Attack* Attack::default_instance_ = NULL;

Attack* Attack::New() const {
  return new Attack;
}

void Attack::Clear() {
  attacks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeroAttackConfig.Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HeroAttackConfig.AttackBase attacks = 1;
      case 1: {
        if (tag == 10) {
         parse_attacks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attacks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_attacks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeroAttackConfig.Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeroAttackConfig.Attack)
  return false;
#undef DO_
}

void Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeroAttackConfig.Attack)
  // repeated .HeroAttackConfig.AttackBase attacks = 1;
  for (int i = 0; i < this->attacks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attacks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeroAttackConfig.Attack)
}

::google::protobuf::uint8* Attack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeroAttackConfig.Attack)
  // repeated .HeroAttackConfig.AttackBase attacks = 1;
  for (int i = 0; i < this->attacks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attacks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeroAttackConfig.Attack)
  return target;
}

int Attack::ByteSize() const {
  int total_size = 0;

  // repeated .HeroAttackConfig.AttackBase attacks = 1;
  total_size += 1 * this->attacks_size();
  for (int i = 0; i < this->attacks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attacks(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Attack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Attack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Attack::MergeFrom(const Attack& from) {
  GOOGLE_CHECK_NE(&from, this);
  attacks_.MergeFrom(from.attacks_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Attack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attack::CopyFrom(const Attack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attack::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->attacks())) return false;
  return true;
}

void Attack::Swap(Attack* other) {
  if (other != this) {
    attacks_.Swap(&other->attacks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Attack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Attack_descriptor_;
  metadata.reflection = Attack_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HeroAttackConfig

// @@protoc_insertion_point(global_scope)
