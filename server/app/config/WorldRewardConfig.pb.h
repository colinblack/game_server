// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldRewardConfig.proto

#ifndef PROTOBUF_WorldRewardConfig_2eproto__INCLUDED
#define PROTOBUF_WorldRewardConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace WorldRewardConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WorldRewardConfig_2eproto();
void protobuf_AssignDesc_WorldRewardConfig_2eproto();
void protobuf_ShutdownFile_WorldRewardConfig_2eproto();

class TimeMultiple;
class StrongHoldResource;
class WorldReward;

// ===================================================================

class TimeMultiple : public ::google::protobuf::Message {
 public:
  TimeMultiple();
  virtual ~TimeMultiple();

  TimeMultiple(const TimeMultiple& from);

  inline TimeMultiple& operator=(const TimeMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeMultiple& default_instance();

  void Swap(TimeMultiple* other);

  // implements Message ----------------------------------------------

  TimeMultiple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeMultiple& from);
  void MergeFrom(const TimeMultiple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 multiple = 2;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 2;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:WorldRewardConfig.TimeMultiple)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_multiple();
  inline void clear_has_multiple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 multiple_;
  friend void  protobuf_AddDesc_WorldRewardConfig_2eproto();
  friend void protobuf_AssignDesc_WorldRewardConfig_2eproto();
  friend void protobuf_ShutdownFile_WorldRewardConfig_2eproto();

  void InitAsDefaultInstance();
  static TimeMultiple* default_instance_;
};
// -------------------------------------------------------------------

class StrongHoldResource : public ::google::protobuf::Message {
 public:
  StrongHoldResource();
  virtual ~StrongHoldResource();

  StrongHoldResource(const StrongHoldResource& from);

  inline StrongHoldResource& operator=(const StrongHoldResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrongHoldResource& default_instance();

  void Swap(StrongHoldResource* other);

  // implements Message ----------------------------------------------

  StrongHoldResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrongHoldResource& from);
  void MergeFrom(const StrongHoldResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ironbase = 1;
  inline bool has_ironbase() const;
  inline void clear_ironbase();
  static const int kIronbaseFieldNumber = 1;
  inline ::google::protobuf::uint32 ironbase() const;
  inline void set_ironbase(::google::protobuf::uint32 value);

  // required uint32 coinbase = 2;
  inline bool has_coinbase() const;
  inline void clear_coinbase();
  static const int kCoinbaseFieldNumber = 2;
  inline ::google::protobuf::uint32 coinbase() const;
  inline void set_coinbase(::google::protobuf::uint32 value);

  // repeated .WorldRewardConfig.TimeMultiple timemultiple = 3;
  inline int timemultiple_size() const;
  inline void clear_timemultiple();
  static const int kTimemultipleFieldNumber = 3;
  inline const ::WorldRewardConfig::TimeMultiple& timemultiple(int index) const;
  inline ::WorldRewardConfig::TimeMultiple* mutable_timemultiple(int index);
  inline ::WorldRewardConfig::TimeMultiple* add_timemultiple();
  inline const ::google::protobuf::RepeatedPtrField< ::WorldRewardConfig::TimeMultiple >&
      timemultiple() const;
  inline ::google::protobuf::RepeatedPtrField< ::WorldRewardConfig::TimeMultiple >*
      mutable_timemultiple();

  // repeated uint32 tech_coefficient = 4;
  inline int tech_coefficient_size() const;
  inline void clear_tech_coefficient();
  static const int kTechCoefficientFieldNumber = 4;
  inline ::google::protobuf::uint32 tech_coefficient(int index) const;
  inline void set_tech_coefficient(int index, ::google::protobuf::uint32 value);
  inline void add_tech_coefficient(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tech_coefficient() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tech_coefficient();

  // @@protoc_insertion_point(class_scope:WorldRewardConfig.StrongHoldResource)
 private:
  inline void set_has_ironbase();
  inline void clear_has_ironbase();
  inline void set_has_coinbase();
  inline void clear_has_coinbase();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ironbase_;
  ::google::protobuf::uint32 coinbase_;
  ::google::protobuf::RepeatedPtrField< ::WorldRewardConfig::TimeMultiple > timemultiple_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tech_coefficient_;
  friend void  protobuf_AddDesc_WorldRewardConfig_2eproto();
  friend void protobuf_AssignDesc_WorldRewardConfig_2eproto();
  friend void protobuf_ShutdownFile_WorldRewardConfig_2eproto();

  void InitAsDefaultInstance();
  static StrongHoldResource* default_instance_;
};
// -------------------------------------------------------------------

class WorldReward : public ::google::protobuf::Message {
 public:
  WorldReward();
  virtual ~WorldReward();

  WorldReward(const WorldReward& from);

  inline WorldReward& operator=(const WorldReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldReward& default_instance();

  void Swap(WorldReward* other);

  // implements Message ----------------------------------------------

  WorldReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldReward& from);
  void MergeFrom(const WorldReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .WorldRewardConfig.StrongHoldResource stronghold = 1;
  inline bool has_stronghold() const;
  inline void clear_stronghold();
  static const int kStrongholdFieldNumber = 1;
  inline const ::WorldRewardConfig::StrongHoldResource& stronghold() const;
  inline ::WorldRewardConfig::StrongHoldResource* mutable_stronghold();
  inline ::WorldRewardConfig::StrongHoldResource* release_stronghold();
  inline void set_allocated_stronghold(::WorldRewardConfig::StrongHoldResource* stronghold);

  // @@protoc_insertion_point(class_scope:WorldRewardConfig.WorldReward)
 private:
  inline void set_has_stronghold();
  inline void clear_has_stronghold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::WorldRewardConfig::StrongHoldResource* stronghold_;
  friend void  protobuf_AddDesc_WorldRewardConfig_2eproto();
  friend void protobuf_AssignDesc_WorldRewardConfig_2eproto();
  friend void protobuf_ShutdownFile_WorldRewardConfig_2eproto();

  void InitAsDefaultInstance();
  static WorldReward* default_instance_;
};
// ===================================================================


// ===================================================================

// TimeMultiple

// required uint32 time = 1;
inline bool TimeMultiple::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeMultiple::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeMultiple::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeMultiple::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 TimeMultiple::time() const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.TimeMultiple.time)
  return time_;
}
inline void TimeMultiple::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:WorldRewardConfig.TimeMultiple.time)
}

// required uint32 multiple = 2;
inline bool TimeMultiple::has_multiple() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeMultiple::set_has_multiple() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeMultiple::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeMultiple::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 TimeMultiple::multiple() const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.TimeMultiple.multiple)
  return multiple_;
}
inline void TimeMultiple::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:WorldRewardConfig.TimeMultiple.multiple)
}

// -------------------------------------------------------------------

// StrongHoldResource

// required uint32 ironbase = 1;
inline bool StrongHoldResource::has_ironbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrongHoldResource::set_has_ironbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrongHoldResource::clear_has_ironbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrongHoldResource::clear_ironbase() {
  ironbase_ = 0u;
  clear_has_ironbase();
}
inline ::google::protobuf::uint32 StrongHoldResource::ironbase() const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.StrongHoldResource.ironbase)
  return ironbase_;
}
inline void StrongHoldResource::set_ironbase(::google::protobuf::uint32 value) {
  set_has_ironbase();
  ironbase_ = value;
  // @@protoc_insertion_point(field_set:WorldRewardConfig.StrongHoldResource.ironbase)
}

// required uint32 coinbase = 2;
inline bool StrongHoldResource::has_coinbase() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StrongHoldResource::set_has_coinbase() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StrongHoldResource::clear_has_coinbase() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StrongHoldResource::clear_coinbase() {
  coinbase_ = 0u;
  clear_has_coinbase();
}
inline ::google::protobuf::uint32 StrongHoldResource::coinbase() const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.StrongHoldResource.coinbase)
  return coinbase_;
}
inline void StrongHoldResource::set_coinbase(::google::protobuf::uint32 value) {
  set_has_coinbase();
  coinbase_ = value;
  // @@protoc_insertion_point(field_set:WorldRewardConfig.StrongHoldResource.coinbase)
}

// repeated .WorldRewardConfig.TimeMultiple timemultiple = 3;
inline int StrongHoldResource::timemultiple_size() const {
  return timemultiple_.size();
}
inline void StrongHoldResource::clear_timemultiple() {
  timemultiple_.Clear();
}
inline const ::WorldRewardConfig::TimeMultiple& StrongHoldResource::timemultiple(int index) const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.StrongHoldResource.timemultiple)
  return timemultiple_.Get(index);
}
inline ::WorldRewardConfig::TimeMultiple* StrongHoldResource::mutable_timemultiple(int index) {
  // @@protoc_insertion_point(field_mutable:WorldRewardConfig.StrongHoldResource.timemultiple)
  return timemultiple_.Mutable(index);
}
inline ::WorldRewardConfig::TimeMultiple* StrongHoldResource::add_timemultiple() {
  // @@protoc_insertion_point(field_add:WorldRewardConfig.StrongHoldResource.timemultiple)
  return timemultiple_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldRewardConfig::TimeMultiple >&
StrongHoldResource::timemultiple() const {
  // @@protoc_insertion_point(field_list:WorldRewardConfig.StrongHoldResource.timemultiple)
  return timemultiple_;
}
inline ::google::protobuf::RepeatedPtrField< ::WorldRewardConfig::TimeMultiple >*
StrongHoldResource::mutable_timemultiple() {
  // @@protoc_insertion_point(field_mutable_list:WorldRewardConfig.StrongHoldResource.timemultiple)
  return &timemultiple_;
}

// repeated uint32 tech_coefficient = 4;
inline int StrongHoldResource::tech_coefficient_size() const {
  return tech_coefficient_.size();
}
inline void StrongHoldResource::clear_tech_coefficient() {
  tech_coefficient_.Clear();
}
inline ::google::protobuf::uint32 StrongHoldResource::tech_coefficient(int index) const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.StrongHoldResource.tech_coefficient)
  return tech_coefficient_.Get(index);
}
inline void StrongHoldResource::set_tech_coefficient(int index, ::google::protobuf::uint32 value) {
  tech_coefficient_.Set(index, value);
  // @@protoc_insertion_point(field_set:WorldRewardConfig.StrongHoldResource.tech_coefficient)
}
inline void StrongHoldResource::add_tech_coefficient(::google::protobuf::uint32 value) {
  tech_coefficient_.Add(value);
  // @@protoc_insertion_point(field_add:WorldRewardConfig.StrongHoldResource.tech_coefficient)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StrongHoldResource::tech_coefficient() const {
  // @@protoc_insertion_point(field_list:WorldRewardConfig.StrongHoldResource.tech_coefficient)
  return tech_coefficient_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StrongHoldResource::mutable_tech_coefficient() {
  // @@protoc_insertion_point(field_mutable_list:WorldRewardConfig.StrongHoldResource.tech_coefficient)
  return &tech_coefficient_;
}

// -------------------------------------------------------------------

// WorldReward

// required .WorldRewardConfig.StrongHoldResource stronghold = 1;
inline bool WorldReward::has_stronghold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldReward::set_has_stronghold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldReward::clear_has_stronghold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldReward::clear_stronghold() {
  if (stronghold_ != NULL) stronghold_->::WorldRewardConfig::StrongHoldResource::Clear();
  clear_has_stronghold();
}
inline const ::WorldRewardConfig::StrongHoldResource& WorldReward::stronghold() const {
  // @@protoc_insertion_point(field_get:WorldRewardConfig.WorldReward.stronghold)
  return stronghold_ != NULL ? *stronghold_ : *default_instance_->stronghold_;
}
inline ::WorldRewardConfig::StrongHoldResource* WorldReward::mutable_stronghold() {
  set_has_stronghold();
  if (stronghold_ == NULL) stronghold_ = new ::WorldRewardConfig::StrongHoldResource;
  // @@protoc_insertion_point(field_mutable:WorldRewardConfig.WorldReward.stronghold)
  return stronghold_;
}
inline ::WorldRewardConfig::StrongHoldResource* WorldReward::release_stronghold() {
  clear_has_stronghold();
  ::WorldRewardConfig::StrongHoldResource* temp = stronghold_;
  stronghold_ = NULL;
  return temp;
}
inline void WorldReward::set_allocated_stronghold(::WorldRewardConfig::StrongHoldResource* stronghold) {
  delete stronghold_;
  stronghold_ = stronghold;
  if (stronghold) {
    set_has_stronghold();
  } else {
    clear_has_stronghold();
  }
  // @@protoc_insertion_point(field_set_allocated:WorldRewardConfig.WorldReward.stronghold)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace WorldRewardConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorldRewardConfig_2eproto__INCLUDED
