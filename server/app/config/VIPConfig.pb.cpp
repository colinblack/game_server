// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VIPConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "VIPConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace VIPConfig {

namespace {

const ::google::protobuf::Descriptor* UVIPBasePower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UVIPBasePower_reflection_ = NULL;
const ::google::protobuf::Descriptor* UVIPLvlPower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UVIPLvlPower_reflection_ = NULL;
const ::google::protobuf::Descriptor* UVIPItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UVIPItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* UVIP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UVIP_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_VIPConfig_2eproto() {
  protobuf_AddDesc_VIPConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "VIPConfig.proto");
  GOOGLE_CHECK(file != NULL);
  UVIPBasePower_descriptor_ = file->message_type(0);
  static const int UVIPBasePower_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, integral_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, market_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, sacrifice_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, order_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, bmarket_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, refresh_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, market_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, auto_build_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, order_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, iron_add_),
  };
  UVIPBasePower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UVIPBasePower_descriptor_,
      UVIPBasePower::default_instance_,
      UVIPBasePower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPBasePower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UVIPBasePower));
  UVIPLvlPower_descriptor_ = file->message_type(1);
  static const int UVIPLvlPower_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, resource_yield_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, fight_exp_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, polity_task_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, weapon_prob_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, storage_capacity_add_),
  };
  UVIPLvlPower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UVIPLvlPower_descriptor_,
      UVIPLvlPower::default_instance_,
      UVIPLvlPower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPLvlPower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UVIPLvlPower));
  UVIPItem_descriptor_ = file->message_type(2);
  static const int UVIPItem_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, base_power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, lvl_power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, reward_10_),
  };
  UVIPItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UVIPItem_descriptor_,
      UVIPItem::default_instance_,
      UVIPItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIPItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UVIPItem));
  UVIP_descriptor_ = file->message_type(3);
  static const int UVIP_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIP, vip_),
  };
  UVIP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UVIP_descriptor_,
      UVIP::default_instance_,
      UVIP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UVIP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UVIP));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_VIPConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UVIPBasePower_descriptor_, &UVIPBasePower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UVIPLvlPower_descriptor_, &UVIPLvlPower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UVIPItem_descriptor_, &UVIPItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UVIP_descriptor_, &UVIP::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_VIPConfig_2eproto() {
  delete UVIPBasePower::default_instance_;
  delete UVIPBasePower_reflection_;
  delete UVIPLvlPower::default_instance_;
  delete UVIPLvlPower_reflection_;
  delete UVIPItem::default_instance_;
  delete UVIPItem_reflection_;
  delete UVIP::default_instance_;
  delete UVIP_reflection_;
}

void protobuf_AddDesc_VIPConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RewardConfig::protobuf_AddDesc_RewardConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017VIPConfig.proto\022\tVIPConfig\032\022RewardConf"
    "ig.proto\"\340\001\n\rUVIPBasePower\022\024\n\014integral_c"
    "nt\030\001 \003(\r\022\022\n\nmarket_cnt\030\002 \003(\r\022\025\n\rsacrific"
    "e_cnt\030\003 \003(\r\022\021\n\torder_cnt\030\004 \003(\r\022\023\n\013bmarke"
    "t_add\030\005 \003(\r\022\023\n\013refresh_cnt\030\006 \003(\r\022\022\n\nmark"
    "et_add\030\007 \003(\r\022\026\n\016auto_build_cnt\030\010 \003(\r\022\023\n\013"
    "order_limit\030\t \003(\r\022\020\n\010iron_add\030\n \003(\r\"\220\001\n\014"
    "UVIPLvlPower\022\032\n\022resource_yield_add\030\001 \001(\r"
    "\022\025\n\rfight_exp_add\030\002 \001(\r\022\032\n\022polity_task_f"
    "actor\030\003 \001(\002\022\023\n\013weapon_prob\030\004 \003(\r\022\034\n\024stor"
    "age_capacity_add\030\005 \001(\r\"\203\004\n\010UVIPItem\022\014\n\004c"
    "ash\030\001 \003(\r\022,\n\nbase_power\030\002 \002(\0132\030.VIPConfi"
    "g.UVIPBasePower\022*\n\tlvl_power\030\003 \003(\0132\027.VIP"
    "Config.UVIPLvlPower\022&\n\010reward_1\030\004 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_2\030\005 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_3\030\006 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_4\030\007 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_5\030\010 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_6\030\t \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_7\030\n \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_8\030\013 \003(\0132\024."
    "RewardConfig.Reward\022&\n\010reward_9\030\014 \003(\0132\024."
    "RewardConfig.Reward\022\'\n\treward_10\030\r \003(\0132\024"
    ".RewardConfig.Reward\"(\n\004UVIP\022 \n\003vip\030\001 \002("
    "\0132\023.VIPConfig.UVIPItem", 982);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "VIPConfig.proto", &protobuf_RegisterTypes);
  UVIPBasePower::default_instance_ = new UVIPBasePower();
  UVIPLvlPower::default_instance_ = new UVIPLvlPower();
  UVIPItem::default_instance_ = new UVIPItem();
  UVIP::default_instance_ = new UVIP();
  UVIPBasePower::default_instance_->InitAsDefaultInstance();
  UVIPLvlPower::default_instance_->InitAsDefaultInstance();
  UVIPItem::default_instance_->InitAsDefaultInstance();
  UVIP::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_VIPConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_VIPConfig_2eproto {
  StaticDescriptorInitializer_VIPConfig_2eproto() {
    protobuf_AddDesc_VIPConfig_2eproto();
  }
} static_descriptor_initializer_VIPConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UVIPBasePower::kIntegralCntFieldNumber;
const int UVIPBasePower::kMarketCntFieldNumber;
const int UVIPBasePower::kSacrificeCntFieldNumber;
const int UVIPBasePower::kOrderCntFieldNumber;
const int UVIPBasePower::kBmarketAddFieldNumber;
const int UVIPBasePower::kRefreshCntFieldNumber;
const int UVIPBasePower::kMarketAddFieldNumber;
const int UVIPBasePower::kAutoBuildCntFieldNumber;
const int UVIPBasePower::kOrderLimitFieldNumber;
const int UVIPBasePower::kIronAddFieldNumber;
#endif  // !_MSC_VER

UVIPBasePower::UVIPBasePower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VIPConfig.UVIPBasePower)
}

void UVIPBasePower::InitAsDefaultInstance() {
}

UVIPBasePower::UVIPBasePower(const UVIPBasePower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VIPConfig.UVIPBasePower)
}

void UVIPBasePower::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UVIPBasePower::~UVIPBasePower() {
  // @@protoc_insertion_point(destructor:VIPConfig.UVIPBasePower)
  SharedDtor();
}

void UVIPBasePower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UVIPBasePower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UVIPBasePower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UVIPBasePower_descriptor_;
}

const UVIPBasePower& UVIPBasePower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VIPConfig_2eproto();
  return *default_instance_;
}

UVIPBasePower* UVIPBasePower::default_instance_ = NULL;

UVIPBasePower* UVIPBasePower::New() const {
  return new UVIPBasePower;
}

void UVIPBasePower::Clear() {
  integral_cnt_.Clear();
  market_cnt_.Clear();
  sacrifice_cnt_.Clear();
  order_cnt_.Clear();
  bmarket_add_.Clear();
  refresh_cnt_.Clear();
  market_add_.Clear();
  auto_build_cnt_.Clear();
  order_limit_.Clear();
  iron_add_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UVIPBasePower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VIPConfig.UVIPBasePower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 integral_cnt = 1;
      case 1: {
        if (tag == 8) {
         parse_integral_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_integral_cnt())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_integral_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_integral_cnt;
        if (input->ExpectTag(16)) goto parse_market_cnt;
        break;
      }

      // repeated uint32 market_cnt = 2;
      case 2: {
        if (tag == 16) {
         parse_market_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_market_cnt())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_market_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_market_cnt;
        if (input->ExpectTag(24)) goto parse_sacrifice_cnt;
        break;
      }

      // repeated uint32 sacrifice_cnt = 3;
      case 3: {
        if (tag == 24) {
         parse_sacrifice_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_sacrifice_cnt())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_sacrifice_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sacrifice_cnt;
        if (input->ExpectTag(32)) goto parse_order_cnt;
        break;
      }

      // repeated uint32 order_cnt = 4;
      case 4: {
        if (tag == 32) {
         parse_order_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_order_cnt())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_order_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_order_cnt;
        if (input->ExpectTag(40)) goto parse_bmarket_add;
        break;
      }

      // repeated uint32 bmarket_add = 5;
      case 5: {
        if (tag == 40) {
         parse_bmarket_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_bmarket_add())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bmarket_add())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bmarket_add;
        if (input->ExpectTag(48)) goto parse_refresh_cnt;
        break;
      }

      // repeated uint32 refresh_cnt = 6;
      case 6: {
        if (tag == 48) {
         parse_refresh_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_refresh_cnt())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_refresh_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_refresh_cnt;
        if (input->ExpectTag(56)) goto parse_market_add;
        break;
      }

      // repeated uint32 market_add = 7;
      case 7: {
        if (tag == 56) {
         parse_market_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_market_add())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_market_add())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_market_add;
        if (input->ExpectTag(64)) goto parse_auto_build_cnt;
        break;
      }

      // repeated uint32 auto_build_cnt = 8;
      case 8: {
        if (tag == 64) {
         parse_auto_build_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_auto_build_cnt())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_auto_build_cnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_auto_build_cnt;
        if (input->ExpectTag(72)) goto parse_order_limit;
        break;
      }

      // repeated uint32 order_limit = 9;
      case 9: {
        if (tag == 72) {
         parse_order_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_order_limit())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_order_limit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_order_limit;
        if (input->ExpectTag(80)) goto parse_iron_add;
        break;
      }

      // repeated uint32 iron_add = 10;
      case 10: {
        if (tag == 80) {
         parse_iron_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_iron_add())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_iron_add())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_iron_add;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VIPConfig.UVIPBasePower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VIPConfig.UVIPBasePower)
  return false;
#undef DO_
}

void UVIPBasePower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VIPConfig.UVIPBasePower)
  // repeated uint32 integral_cnt = 1;
  for (int i = 0; i < this->integral_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->integral_cnt(i), output);
  }

  // repeated uint32 market_cnt = 2;
  for (int i = 0; i < this->market_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->market_cnt(i), output);
  }

  // repeated uint32 sacrifice_cnt = 3;
  for (int i = 0; i < this->sacrifice_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->sacrifice_cnt(i), output);
  }

  // repeated uint32 order_cnt = 4;
  for (int i = 0; i < this->order_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->order_cnt(i), output);
  }

  // repeated uint32 bmarket_add = 5;
  for (int i = 0; i < this->bmarket_add_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->bmarket_add(i), output);
  }

  // repeated uint32 refresh_cnt = 6;
  for (int i = 0; i < this->refresh_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->refresh_cnt(i), output);
  }

  // repeated uint32 market_add = 7;
  for (int i = 0; i < this->market_add_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->market_add(i), output);
  }

  // repeated uint32 auto_build_cnt = 8;
  for (int i = 0; i < this->auto_build_cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->auto_build_cnt(i), output);
  }

  // repeated uint32 order_limit = 9;
  for (int i = 0; i < this->order_limit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->order_limit(i), output);
  }

  // repeated uint32 iron_add = 10;
  for (int i = 0; i < this->iron_add_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->iron_add(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VIPConfig.UVIPBasePower)
}

::google::protobuf::uint8* UVIPBasePower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VIPConfig.UVIPBasePower)
  // repeated uint32 integral_cnt = 1;
  for (int i = 0; i < this->integral_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->integral_cnt(i), target);
  }

  // repeated uint32 market_cnt = 2;
  for (int i = 0; i < this->market_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->market_cnt(i), target);
  }

  // repeated uint32 sacrifice_cnt = 3;
  for (int i = 0; i < this->sacrifice_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->sacrifice_cnt(i), target);
  }

  // repeated uint32 order_cnt = 4;
  for (int i = 0; i < this->order_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->order_cnt(i), target);
  }

  // repeated uint32 bmarket_add = 5;
  for (int i = 0; i < this->bmarket_add_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->bmarket_add(i), target);
  }

  // repeated uint32 refresh_cnt = 6;
  for (int i = 0; i < this->refresh_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->refresh_cnt(i), target);
  }

  // repeated uint32 market_add = 7;
  for (int i = 0; i < this->market_add_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->market_add(i), target);
  }

  // repeated uint32 auto_build_cnt = 8;
  for (int i = 0; i < this->auto_build_cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->auto_build_cnt(i), target);
  }

  // repeated uint32 order_limit = 9;
  for (int i = 0; i < this->order_limit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->order_limit(i), target);
  }

  // repeated uint32 iron_add = 10;
  for (int i = 0; i < this->iron_add_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->iron_add(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VIPConfig.UVIPBasePower)
  return target;
}

int UVIPBasePower::ByteSize() const {
  int total_size = 0;

  // repeated uint32 integral_cnt = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->integral_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->integral_cnt(i));
    }
    total_size += 1 * this->integral_cnt_size() + data_size;
  }

  // repeated uint32 market_cnt = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->market_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->market_cnt(i));
    }
    total_size += 1 * this->market_cnt_size() + data_size;
  }

  // repeated uint32 sacrifice_cnt = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->sacrifice_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->sacrifice_cnt(i));
    }
    total_size += 1 * this->sacrifice_cnt_size() + data_size;
  }

  // repeated uint32 order_cnt = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->order_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->order_cnt(i));
    }
    total_size += 1 * this->order_cnt_size() + data_size;
  }

  // repeated uint32 bmarket_add = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->bmarket_add_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bmarket_add(i));
    }
    total_size += 1 * this->bmarket_add_size() + data_size;
  }

  // repeated uint32 refresh_cnt = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->refresh_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->refresh_cnt(i));
    }
    total_size += 1 * this->refresh_cnt_size() + data_size;
  }

  // repeated uint32 market_add = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->market_add_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->market_add(i));
    }
    total_size += 1 * this->market_add_size() + data_size;
  }

  // repeated uint32 auto_build_cnt = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->auto_build_cnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->auto_build_cnt(i));
    }
    total_size += 1 * this->auto_build_cnt_size() + data_size;
  }

  // repeated uint32 order_limit = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->order_limit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->order_limit(i));
    }
    total_size += 1 * this->order_limit_size() + data_size;
  }

  // repeated uint32 iron_add = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->iron_add_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->iron_add(i));
    }
    total_size += 1 * this->iron_add_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UVIPBasePower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UVIPBasePower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UVIPBasePower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UVIPBasePower::MergeFrom(const UVIPBasePower& from) {
  GOOGLE_CHECK_NE(&from, this);
  integral_cnt_.MergeFrom(from.integral_cnt_);
  market_cnt_.MergeFrom(from.market_cnt_);
  sacrifice_cnt_.MergeFrom(from.sacrifice_cnt_);
  order_cnt_.MergeFrom(from.order_cnt_);
  bmarket_add_.MergeFrom(from.bmarket_add_);
  refresh_cnt_.MergeFrom(from.refresh_cnt_);
  market_add_.MergeFrom(from.market_add_);
  auto_build_cnt_.MergeFrom(from.auto_build_cnt_);
  order_limit_.MergeFrom(from.order_limit_);
  iron_add_.MergeFrom(from.iron_add_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UVIPBasePower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UVIPBasePower::CopyFrom(const UVIPBasePower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UVIPBasePower::IsInitialized() const {

  return true;
}

void UVIPBasePower::Swap(UVIPBasePower* other) {
  if (other != this) {
    integral_cnt_.Swap(&other->integral_cnt_);
    market_cnt_.Swap(&other->market_cnt_);
    sacrifice_cnt_.Swap(&other->sacrifice_cnt_);
    order_cnt_.Swap(&other->order_cnt_);
    bmarket_add_.Swap(&other->bmarket_add_);
    refresh_cnt_.Swap(&other->refresh_cnt_);
    market_add_.Swap(&other->market_add_);
    auto_build_cnt_.Swap(&other->auto_build_cnt_);
    order_limit_.Swap(&other->order_limit_);
    iron_add_.Swap(&other->iron_add_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UVIPBasePower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UVIPBasePower_descriptor_;
  metadata.reflection = UVIPBasePower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UVIPLvlPower::kResourceYieldAddFieldNumber;
const int UVIPLvlPower::kFightExpAddFieldNumber;
const int UVIPLvlPower::kPolityTaskFactorFieldNumber;
const int UVIPLvlPower::kWeaponProbFieldNumber;
const int UVIPLvlPower::kStorageCapacityAddFieldNumber;
#endif  // !_MSC_VER

UVIPLvlPower::UVIPLvlPower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VIPConfig.UVIPLvlPower)
}

void UVIPLvlPower::InitAsDefaultInstance() {
}

UVIPLvlPower::UVIPLvlPower(const UVIPLvlPower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VIPConfig.UVIPLvlPower)
}

void UVIPLvlPower::SharedCtor() {
  _cached_size_ = 0;
  resource_yield_add_ = 0u;
  fight_exp_add_ = 0u;
  polity_task_factor_ = 0;
  storage_capacity_add_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UVIPLvlPower::~UVIPLvlPower() {
  // @@protoc_insertion_point(destructor:VIPConfig.UVIPLvlPower)
  SharedDtor();
}

void UVIPLvlPower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UVIPLvlPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UVIPLvlPower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UVIPLvlPower_descriptor_;
}

const UVIPLvlPower& UVIPLvlPower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VIPConfig_2eproto();
  return *default_instance_;
}

UVIPLvlPower* UVIPLvlPower::default_instance_ = NULL;

UVIPLvlPower* UVIPLvlPower::New() const {
  return new UVIPLvlPower;
}

void UVIPLvlPower::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UVIPLvlPower*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resource_yield_add_, fight_exp_add_);
  ZR_(polity_task_factor_, storage_capacity_add_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  weapon_prob_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UVIPLvlPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VIPConfig.UVIPLvlPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 resource_yield_add = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resource_yield_add_)));
          set_has_resource_yield_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fight_exp_add;
        break;
      }

      // optional uint32 fight_exp_add = 2;
      case 2: {
        if (tag == 16) {
         parse_fight_exp_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fight_exp_add_)));
          set_has_fight_exp_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_polity_task_factor;
        break;
      }

      // optional float polity_task_factor = 3;
      case 3: {
        if (tag == 29) {
         parse_polity_task_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &polity_task_factor_)));
          set_has_polity_task_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_weapon_prob;
        break;
      }

      // repeated uint32 weapon_prob = 4;
      case 4: {
        if (tag == 32) {
         parse_weapon_prob:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_weapon_prob())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_weapon_prob())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_weapon_prob;
        if (input->ExpectTag(40)) goto parse_storage_capacity_add;
        break;
      }

      // optional uint32 storage_capacity_add = 5;
      case 5: {
        if (tag == 40) {
         parse_storage_capacity_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &storage_capacity_add_)));
          set_has_storage_capacity_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VIPConfig.UVIPLvlPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VIPConfig.UVIPLvlPower)
  return false;
#undef DO_
}

void UVIPLvlPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VIPConfig.UVIPLvlPower)
  // optional uint32 resource_yield_add = 1;
  if (has_resource_yield_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resource_yield_add(), output);
  }

  // optional uint32 fight_exp_add = 2;
  if (has_fight_exp_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fight_exp_add(), output);
  }

  // optional float polity_task_factor = 3;
  if (has_polity_task_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->polity_task_factor(), output);
  }

  // repeated uint32 weapon_prob = 4;
  for (int i = 0; i < this->weapon_prob_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->weapon_prob(i), output);
  }

  // optional uint32 storage_capacity_add = 5;
  if (has_storage_capacity_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->storage_capacity_add(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VIPConfig.UVIPLvlPower)
}

::google::protobuf::uint8* UVIPLvlPower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VIPConfig.UVIPLvlPower)
  // optional uint32 resource_yield_add = 1;
  if (has_resource_yield_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resource_yield_add(), target);
  }

  // optional uint32 fight_exp_add = 2;
  if (has_fight_exp_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fight_exp_add(), target);
  }

  // optional float polity_task_factor = 3;
  if (has_polity_task_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->polity_task_factor(), target);
  }

  // repeated uint32 weapon_prob = 4;
  for (int i = 0; i < this->weapon_prob_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->weapon_prob(i), target);
  }

  // optional uint32 storage_capacity_add = 5;
  if (has_storage_capacity_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->storage_capacity_add(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VIPConfig.UVIPLvlPower)
  return target;
}

int UVIPLvlPower::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 resource_yield_add = 1;
    if (has_resource_yield_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resource_yield_add());
    }

    // optional uint32 fight_exp_add = 2;
    if (has_fight_exp_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fight_exp_add());
    }

    // optional float polity_task_factor = 3;
    if (has_polity_task_factor()) {
      total_size += 1 + 4;
    }

    // optional uint32 storage_capacity_add = 5;
    if (has_storage_capacity_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->storage_capacity_add());
    }

  }
  // repeated uint32 weapon_prob = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->weapon_prob_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->weapon_prob(i));
    }
    total_size += 1 * this->weapon_prob_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UVIPLvlPower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UVIPLvlPower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UVIPLvlPower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UVIPLvlPower::MergeFrom(const UVIPLvlPower& from) {
  GOOGLE_CHECK_NE(&from, this);
  weapon_prob_.MergeFrom(from.weapon_prob_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resource_yield_add()) {
      set_resource_yield_add(from.resource_yield_add());
    }
    if (from.has_fight_exp_add()) {
      set_fight_exp_add(from.fight_exp_add());
    }
    if (from.has_polity_task_factor()) {
      set_polity_task_factor(from.polity_task_factor());
    }
    if (from.has_storage_capacity_add()) {
      set_storage_capacity_add(from.storage_capacity_add());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UVIPLvlPower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UVIPLvlPower::CopyFrom(const UVIPLvlPower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UVIPLvlPower::IsInitialized() const {

  return true;
}

void UVIPLvlPower::Swap(UVIPLvlPower* other) {
  if (other != this) {
    std::swap(resource_yield_add_, other->resource_yield_add_);
    std::swap(fight_exp_add_, other->fight_exp_add_);
    std::swap(polity_task_factor_, other->polity_task_factor_);
    weapon_prob_.Swap(&other->weapon_prob_);
    std::swap(storage_capacity_add_, other->storage_capacity_add_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UVIPLvlPower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UVIPLvlPower_descriptor_;
  metadata.reflection = UVIPLvlPower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UVIPItem::kCashFieldNumber;
const int UVIPItem::kBasePowerFieldNumber;
const int UVIPItem::kLvlPowerFieldNumber;
const int UVIPItem::kReward1FieldNumber;
const int UVIPItem::kReward2FieldNumber;
const int UVIPItem::kReward3FieldNumber;
const int UVIPItem::kReward4FieldNumber;
const int UVIPItem::kReward5FieldNumber;
const int UVIPItem::kReward6FieldNumber;
const int UVIPItem::kReward7FieldNumber;
const int UVIPItem::kReward8FieldNumber;
const int UVIPItem::kReward9FieldNumber;
const int UVIPItem::kReward10FieldNumber;
#endif  // !_MSC_VER

UVIPItem::UVIPItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VIPConfig.UVIPItem)
}

void UVIPItem::InitAsDefaultInstance() {
  base_power_ = const_cast< ::VIPConfig::UVIPBasePower*>(&::VIPConfig::UVIPBasePower::default_instance());
}

UVIPItem::UVIPItem(const UVIPItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VIPConfig.UVIPItem)
}

void UVIPItem::SharedCtor() {
  _cached_size_ = 0;
  base_power_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UVIPItem::~UVIPItem() {
  // @@protoc_insertion_point(destructor:VIPConfig.UVIPItem)
  SharedDtor();
}

void UVIPItem::SharedDtor() {
  if (this != default_instance_) {
    delete base_power_;
  }
}

void UVIPItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UVIPItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UVIPItem_descriptor_;
}

const UVIPItem& UVIPItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VIPConfig_2eproto();
  return *default_instance_;
}

UVIPItem* UVIPItem::default_instance_ = NULL;

UVIPItem* UVIPItem::New() const {
  return new UVIPItem;
}

void UVIPItem::Clear() {
  if (has_base_power()) {
    if (base_power_ != NULL) base_power_->::VIPConfig::UVIPBasePower::Clear();
  }
  cash_.Clear();
  lvl_power_.Clear();
  reward_1_.Clear();
  reward_2_.Clear();
  reward_3_.Clear();
  reward_4_.Clear();
  reward_5_.Clear();
  reward_6_.Clear();
  reward_7_.Clear();
  reward_8_.Clear();
  reward_9_.Clear();
  reward_10_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UVIPItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VIPConfig.UVIPItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 cash = 1;
      case 1: {
        if (tag == 8) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_cash())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cash())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_cash;
        if (input->ExpectTag(18)) goto parse_base_power;
        break;
      }

      // required .VIPConfig.UVIPBasePower base_power = 2;
      case 2: {
        if (tag == 18) {
         parse_base_power:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base_power()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lvl_power;
        break;
      }

      // repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
      case 3: {
        if (tag == 26) {
         parse_lvl_power:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lvl_power()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lvl_power;
        if (input->ExpectTag(34)) goto parse_reward_1;
        break;
      }

      // repeated .RewardConfig.Reward reward_1 = 4;
      case 4: {
        if (tag == 34) {
         parse_reward_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reward_1;
        if (input->ExpectTag(42)) goto parse_reward_2;
        break;
      }

      // repeated .RewardConfig.Reward reward_2 = 5;
      case 5: {
        if (tag == 42) {
         parse_reward_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_reward_2;
        if (input->ExpectTag(50)) goto parse_reward_3;
        break;
      }

      // repeated .RewardConfig.Reward reward_3 = 6;
      case 6: {
        if (tag == 50) {
         parse_reward_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_reward_3;
        if (input->ExpectTag(58)) goto parse_reward_4;
        break;
      }

      // repeated .RewardConfig.Reward reward_4 = 7;
      case 7: {
        if (tag == 58) {
         parse_reward_4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_reward_4;
        if (input->ExpectTag(66)) goto parse_reward_5;
        break;
      }

      // repeated .RewardConfig.Reward reward_5 = 8;
      case 8: {
        if (tag == 66) {
         parse_reward_5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_5()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_reward_5;
        if (input->ExpectTag(74)) goto parse_reward_6;
        break;
      }

      // repeated .RewardConfig.Reward reward_6 = 9;
      case 9: {
        if (tag == 74) {
         parse_reward_6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_6()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_reward_6;
        if (input->ExpectTag(82)) goto parse_reward_7;
        break;
      }

      // repeated .RewardConfig.Reward reward_7 = 10;
      case 10: {
        if (tag == 82) {
         parse_reward_7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_7()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reward_7;
        if (input->ExpectTag(90)) goto parse_reward_8;
        break;
      }

      // repeated .RewardConfig.Reward reward_8 = 11;
      case 11: {
        if (tag == 90) {
         parse_reward_8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_8()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_reward_8;
        if (input->ExpectTag(98)) goto parse_reward_9;
        break;
      }

      // repeated .RewardConfig.Reward reward_9 = 12;
      case 12: {
        if (tag == 98) {
         parse_reward_9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_9()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_reward_9;
        if (input->ExpectTag(106)) goto parse_reward_10;
        break;
      }

      // repeated .RewardConfig.Reward reward_10 = 13;
      case 13: {
        if (tag == 106) {
         parse_reward_10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_10()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_reward_10;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VIPConfig.UVIPItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VIPConfig.UVIPItem)
  return false;
#undef DO_
}

void UVIPItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VIPConfig.UVIPItem)
  // repeated uint32 cash = 1;
  for (int i = 0; i < this->cash_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->cash(i), output);
  }

  // required .VIPConfig.UVIPBasePower base_power = 2;
  if (has_base_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->base_power(), output);
  }

  // repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
  for (int i = 0; i < this->lvl_power_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lvl_power(i), output);
  }

  // repeated .RewardConfig.Reward reward_1 = 4;
  for (int i = 0; i < this->reward_1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->reward_1(i), output);
  }

  // repeated .RewardConfig.Reward reward_2 = 5;
  for (int i = 0; i < this->reward_2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->reward_2(i), output);
  }

  // repeated .RewardConfig.Reward reward_3 = 6;
  for (int i = 0; i < this->reward_3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->reward_3(i), output);
  }

  // repeated .RewardConfig.Reward reward_4 = 7;
  for (int i = 0; i < this->reward_4_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->reward_4(i), output);
  }

  // repeated .RewardConfig.Reward reward_5 = 8;
  for (int i = 0; i < this->reward_5_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->reward_5(i), output);
  }

  // repeated .RewardConfig.Reward reward_6 = 9;
  for (int i = 0; i < this->reward_6_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->reward_6(i), output);
  }

  // repeated .RewardConfig.Reward reward_7 = 10;
  for (int i = 0; i < this->reward_7_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->reward_7(i), output);
  }

  // repeated .RewardConfig.Reward reward_8 = 11;
  for (int i = 0; i < this->reward_8_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->reward_8(i), output);
  }

  // repeated .RewardConfig.Reward reward_9 = 12;
  for (int i = 0; i < this->reward_9_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->reward_9(i), output);
  }

  // repeated .RewardConfig.Reward reward_10 = 13;
  for (int i = 0; i < this->reward_10_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->reward_10(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VIPConfig.UVIPItem)
}

::google::protobuf::uint8* UVIPItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VIPConfig.UVIPItem)
  // repeated uint32 cash = 1;
  for (int i = 0; i < this->cash_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->cash(i), target);
  }

  // required .VIPConfig.UVIPBasePower base_power = 2;
  if (has_base_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->base_power(), target);
  }

  // repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
  for (int i = 0; i < this->lvl_power_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->lvl_power(i), target);
  }

  // repeated .RewardConfig.Reward reward_1 = 4;
  for (int i = 0; i < this->reward_1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->reward_1(i), target);
  }

  // repeated .RewardConfig.Reward reward_2 = 5;
  for (int i = 0; i < this->reward_2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->reward_2(i), target);
  }

  // repeated .RewardConfig.Reward reward_3 = 6;
  for (int i = 0; i < this->reward_3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->reward_3(i), target);
  }

  // repeated .RewardConfig.Reward reward_4 = 7;
  for (int i = 0; i < this->reward_4_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->reward_4(i), target);
  }

  // repeated .RewardConfig.Reward reward_5 = 8;
  for (int i = 0; i < this->reward_5_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->reward_5(i), target);
  }

  // repeated .RewardConfig.Reward reward_6 = 9;
  for (int i = 0; i < this->reward_6_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->reward_6(i), target);
  }

  // repeated .RewardConfig.Reward reward_7 = 10;
  for (int i = 0; i < this->reward_7_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->reward_7(i), target);
  }

  // repeated .RewardConfig.Reward reward_8 = 11;
  for (int i = 0; i < this->reward_8_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->reward_8(i), target);
  }

  // repeated .RewardConfig.Reward reward_9 = 12;
  for (int i = 0; i < this->reward_9_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->reward_9(i), target);
  }

  // repeated .RewardConfig.Reward reward_10 = 13;
  for (int i = 0; i < this->reward_10_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->reward_10(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VIPConfig.UVIPItem)
  return target;
}

int UVIPItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .VIPConfig.UVIPBasePower base_power = 2;
    if (has_base_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base_power());
    }

  }
  // repeated uint32 cash = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->cash_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->cash(i));
    }
    total_size += 1 * this->cash_size() + data_size;
  }

  // repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
  total_size += 1 * this->lvl_power_size();
  for (int i = 0; i < this->lvl_power_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lvl_power(i));
  }

  // repeated .RewardConfig.Reward reward_1 = 4;
  total_size += 1 * this->reward_1_size();
  for (int i = 0; i < this->reward_1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_1(i));
  }

  // repeated .RewardConfig.Reward reward_2 = 5;
  total_size += 1 * this->reward_2_size();
  for (int i = 0; i < this->reward_2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_2(i));
  }

  // repeated .RewardConfig.Reward reward_3 = 6;
  total_size += 1 * this->reward_3_size();
  for (int i = 0; i < this->reward_3_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_3(i));
  }

  // repeated .RewardConfig.Reward reward_4 = 7;
  total_size += 1 * this->reward_4_size();
  for (int i = 0; i < this->reward_4_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_4(i));
  }

  // repeated .RewardConfig.Reward reward_5 = 8;
  total_size += 1 * this->reward_5_size();
  for (int i = 0; i < this->reward_5_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_5(i));
  }

  // repeated .RewardConfig.Reward reward_6 = 9;
  total_size += 1 * this->reward_6_size();
  for (int i = 0; i < this->reward_6_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_6(i));
  }

  // repeated .RewardConfig.Reward reward_7 = 10;
  total_size += 1 * this->reward_7_size();
  for (int i = 0; i < this->reward_7_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_7(i));
  }

  // repeated .RewardConfig.Reward reward_8 = 11;
  total_size += 1 * this->reward_8_size();
  for (int i = 0; i < this->reward_8_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_8(i));
  }

  // repeated .RewardConfig.Reward reward_9 = 12;
  total_size += 1 * this->reward_9_size();
  for (int i = 0; i < this->reward_9_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_9(i));
  }

  // repeated .RewardConfig.Reward reward_10 = 13;
  total_size += 1 * this->reward_10_size();
  for (int i = 0; i < this->reward_10_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_10(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UVIPItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UVIPItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UVIPItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UVIPItem::MergeFrom(const UVIPItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  cash_.MergeFrom(from.cash_);
  lvl_power_.MergeFrom(from.lvl_power_);
  reward_1_.MergeFrom(from.reward_1_);
  reward_2_.MergeFrom(from.reward_2_);
  reward_3_.MergeFrom(from.reward_3_);
  reward_4_.MergeFrom(from.reward_4_);
  reward_5_.MergeFrom(from.reward_5_);
  reward_6_.MergeFrom(from.reward_6_);
  reward_7_.MergeFrom(from.reward_7_);
  reward_8_.MergeFrom(from.reward_8_);
  reward_9_.MergeFrom(from.reward_9_);
  reward_10_.MergeFrom(from.reward_10_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_base_power()) {
      mutable_base_power()->::VIPConfig::UVIPBasePower::MergeFrom(from.base_power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UVIPItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UVIPItem::CopyFrom(const UVIPItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UVIPItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->reward_1())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_2())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_3())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_4())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_5())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_6())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_7())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_8())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_9())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_10())) return false;
  return true;
}

void UVIPItem::Swap(UVIPItem* other) {
  if (other != this) {
    cash_.Swap(&other->cash_);
    std::swap(base_power_, other->base_power_);
    lvl_power_.Swap(&other->lvl_power_);
    reward_1_.Swap(&other->reward_1_);
    reward_2_.Swap(&other->reward_2_);
    reward_3_.Swap(&other->reward_3_);
    reward_4_.Swap(&other->reward_4_);
    reward_5_.Swap(&other->reward_5_);
    reward_6_.Swap(&other->reward_6_);
    reward_7_.Swap(&other->reward_7_);
    reward_8_.Swap(&other->reward_8_);
    reward_9_.Swap(&other->reward_9_);
    reward_10_.Swap(&other->reward_10_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UVIPItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UVIPItem_descriptor_;
  metadata.reflection = UVIPItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UVIP::kVipFieldNumber;
#endif  // !_MSC_VER

UVIP::UVIP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VIPConfig.UVIP)
}

void UVIP::InitAsDefaultInstance() {
  vip_ = const_cast< ::VIPConfig::UVIPItem*>(&::VIPConfig::UVIPItem::default_instance());
}

UVIP::UVIP(const UVIP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VIPConfig.UVIP)
}

void UVIP::SharedCtor() {
  _cached_size_ = 0;
  vip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UVIP::~UVIP() {
  // @@protoc_insertion_point(destructor:VIPConfig.UVIP)
  SharedDtor();
}

void UVIP::SharedDtor() {
  if (this != default_instance_) {
    delete vip_;
  }
}

void UVIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UVIP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UVIP_descriptor_;
}

const UVIP& UVIP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VIPConfig_2eproto();
  return *default_instance_;
}

UVIP* UVIP::default_instance_ = NULL;

UVIP* UVIP::New() const {
  return new UVIP;
}

void UVIP::Clear() {
  if (has_vip()) {
    if (vip_ != NULL) vip_->::VIPConfig::UVIPItem::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UVIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VIPConfig.UVIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .VIPConfig.UVIPItem vip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VIPConfig.UVIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VIPConfig.UVIP)
  return false;
#undef DO_
}

void UVIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VIPConfig.UVIP)
  // required .VIPConfig.UVIPItem vip = 1;
  if (has_vip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VIPConfig.UVIP)
}

::google::protobuf::uint8* UVIP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VIPConfig.UVIP)
  // required .VIPConfig.UVIPItem vip = 1;
  if (has_vip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->vip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VIPConfig.UVIP)
  return target;
}

int UVIP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .VIPConfig.UVIPItem vip = 1;
    if (has_vip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UVIP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UVIP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UVIP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UVIP::MergeFrom(const UVIP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip()) {
      mutable_vip()->::VIPConfig::UVIPItem::MergeFrom(from.vip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UVIP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UVIP::CopyFrom(const UVIP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UVIP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_vip()) {
    if (!this->vip().IsInitialized()) return false;
  }
  return true;
}

void UVIP::Swap(UVIP* other) {
  if (other != this) {
    std::swap(vip_, other->vip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UVIP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UVIP_descriptor_;
  metadata.reflection = UVIP_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace VIPConfig

// @@protoc_insertion_point(global_scope)
