// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KillRankConfig.proto

#ifndef PROTOBUF_KillRankConfig_2eproto__INCLUDED
#define PROTOBUF_KillRankConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace KillRankConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_KillRankConfig_2eproto();
void protobuf_AssignDesc_KillRankConfig_2eproto();
void protobuf_ShutdownFile_KillRankConfig_2eproto();

class KillRankItem;
class KillRank;

// ===================================================================

class KillRankItem : public ::google::protobuf::Message {
 public:
  KillRankItem();
  virtual ~KillRankItem();

  KillRankItem(const KillRankItem& from);

  inline KillRankItem& operator=(const KillRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillRankItem& default_instance();

  void Swap(KillRankItem* other);

  // implements Message ----------------------------------------------

  KillRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillRankItem& from);
  void MergeFrom(const KillRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 exp_killrange = 1;
  inline int exp_killrange_size() const;
  inline void clear_exp_killrange();
  static const int kExpKillrangeFieldNumber = 1;
  inline ::google::protobuf::uint32 exp_killrange(int index) const;
  inline void set_exp_killrange(int index, ::google::protobuf::uint32 value);
  inline void add_exp_killrange(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exp_killrange() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exp_killrange();

  // repeated float exp_coefficient = 2;
  inline int exp_coefficient_size() const;
  inline void clear_exp_coefficient();
  static const int kExpCoefficientFieldNumber = 2;
  inline float exp_coefficient(int index) const;
  inline void set_exp_coefficient(int index, float value);
  inline void add_exp_coefficient(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      exp_coefficient() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_exp_coefficient();

  // repeated .RewardConfig.Reward reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::RewardConfig::Reward& reward(int index) const;
  inline ::RewardConfig::Reward* mutable_reward(int index);
  inline ::RewardConfig::Reward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:KillRankConfig.KillRankItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_killrange_;
  ::google::protobuf::RepeatedField< float > exp_coefficient_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_;
  friend void  protobuf_AddDesc_KillRankConfig_2eproto();
  friend void protobuf_AssignDesc_KillRankConfig_2eproto();
  friend void protobuf_ShutdownFile_KillRankConfig_2eproto();

  void InitAsDefaultInstance();
  static KillRankItem* default_instance_;
};
// -------------------------------------------------------------------

class KillRank : public ::google::protobuf::Message {
 public:
  KillRank();
  virtual ~KillRank();

  KillRank(const KillRank& from);

  inline KillRank& operator=(const KillRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillRank& default_instance();

  void Swap(KillRank* other);

  // implements Message ----------------------------------------------

  KillRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillRank& from);
  void MergeFrom(const KillRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .KillRankConfig.KillRankItem killrank = 1;
  inline bool has_killrank() const;
  inline void clear_killrank();
  static const int kKillrankFieldNumber = 1;
  inline const ::KillRankConfig::KillRankItem& killrank() const;
  inline ::KillRankConfig::KillRankItem* mutable_killrank();
  inline ::KillRankConfig::KillRankItem* release_killrank();
  inline void set_allocated_killrank(::KillRankConfig::KillRankItem* killrank);

  // @@protoc_insertion_point(class_scope:KillRankConfig.KillRank)
 private:
  inline void set_has_killrank();
  inline void clear_has_killrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::KillRankConfig::KillRankItem* killrank_;
  friend void  protobuf_AddDesc_KillRankConfig_2eproto();
  friend void protobuf_AssignDesc_KillRankConfig_2eproto();
  friend void protobuf_ShutdownFile_KillRankConfig_2eproto();

  void InitAsDefaultInstance();
  static KillRank* default_instance_;
};
// ===================================================================


// ===================================================================

// KillRankItem

// repeated uint32 exp_killrange = 1;
inline int KillRankItem::exp_killrange_size() const {
  return exp_killrange_.size();
}
inline void KillRankItem::clear_exp_killrange() {
  exp_killrange_.Clear();
}
inline ::google::protobuf::uint32 KillRankItem::exp_killrange(int index) const {
  // @@protoc_insertion_point(field_get:KillRankConfig.KillRankItem.exp_killrange)
  return exp_killrange_.Get(index);
}
inline void KillRankItem::set_exp_killrange(int index, ::google::protobuf::uint32 value) {
  exp_killrange_.Set(index, value);
  // @@protoc_insertion_point(field_set:KillRankConfig.KillRankItem.exp_killrange)
}
inline void KillRankItem::add_exp_killrange(::google::protobuf::uint32 value) {
  exp_killrange_.Add(value);
  // @@protoc_insertion_point(field_add:KillRankConfig.KillRankItem.exp_killrange)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
KillRankItem::exp_killrange() const {
  // @@protoc_insertion_point(field_list:KillRankConfig.KillRankItem.exp_killrange)
  return exp_killrange_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
KillRankItem::mutable_exp_killrange() {
  // @@protoc_insertion_point(field_mutable_list:KillRankConfig.KillRankItem.exp_killrange)
  return &exp_killrange_;
}

// repeated float exp_coefficient = 2;
inline int KillRankItem::exp_coefficient_size() const {
  return exp_coefficient_.size();
}
inline void KillRankItem::clear_exp_coefficient() {
  exp_coefficient_.Clear();
}
inline float KillRankItem::exp_coefficient(int index) const {
  // @@protoc_insertion_point(field_get:KillRankConfig.KillRankItem.exp_coefficient)
  return exp_coefficient_.Get(index);
}
inline void KillRankItem::set_exp_coefficient(int index, float value) {
  exp_coefficient_.Set(index, value);
  // @@protoc_insertion_point(field_set:KillRankConfig.KillRankItem.exp_coefficient)
}
inline void KillRankItem::add_exp_coefficient(float value) {
  exp_coefficient_.Add(value);
  // @@protoc_insertion_point(field_add:KillRankConfig.KillRankItem.exp_coefficient)
}
inline const ::google::protobuf::RepeatedField< float >&
KillRankItem::exp_coefficient() const {
  // @@protoc_insertion_point(field_list:KillRankConfig.KillRankItem.exp_coefficient)
  return exp_coefficient_;
}
inline ::google::protobuf::RepeatedField< float >*
KillRankItem::mutable_exp_coefficient() {
  // @@protoc_insertion_point(field_mutable_list:KillRankConfig.KillRankItem.exp_coefficient)
  return &exp_coefficient_;
}

// repeated .RewardConfig.Reward reward = 3;
inline int KillRankItem::reward_size() const {
  return reward_.size();
}
inline void KillRankItem::clear_reward() {
  reward_.Clear();
}
inline const ::RewardConfig::Reward& KillRankItem::reward(int index) const {
  // @@protoc_insertion_point(field_get:KillRankConfig.KillRankItem.reward)
  return reward_.Get(index);
}
inline ::RewardConfig::Reward* KillRankItem::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:KillRankConfig.KillRankItem.reward)
  return reward_.Mutable(index);
}
inline ::RewardConfig::Reward* KillRankItem::add_reward() {
  // @@protoc_insertion_point(field_add:KillRankConfig.KillRankItem.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
KillRankItem::reward() const {
  // @@protoc_insertion_point(field_list:KillRankConfig.KillRankItem.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
KillRankItem::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:KillRankConfig.KillRankItem.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// KillRank

// required .KillRankConfig.KillRankItem killrank = 1;
inline bool KillRank::has_killrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillRank::set_has_killrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillRank::clear_has_killrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillRank::clear_killrank() {
  if (killrank_ != NULL) killrank_->::KillRankConfig::KillRankItem::Clear();
  clear_has_killrank();
}
inline const ::KillRankConfig::KillRankItem& KillRank::killrank() const {
  // @@protoc_insertion_point(field_get:KillRankConfig.KillRank.killrank)
  return killrank_ != NULL ? *killrank_ : *default_instance_->killrank_;
}
inline ::KillRankConfig::KillRankItem* KillRank::mutable_killrank() {
  set_has_killrank();
  if (killrank_ == NULL) killrank_ = new ::KillRankConfig::KillRankItem;
  // @@protoc_insertion_point(field_mutable:KillRankConfig.KillRank.killrank)
  return killrank_;
}
inline ::KillRankConfig::KillRankItem* KillRank::release_killrank() {
  clear_has_killrank();
  ::KillRankConfig::KillRankItem* temp = killrank_;
  killrank_ = NULL;
  return temp;
}
inline void KillRank::set_allocated_killrank(::KillRankConfig::KillRankItem* killrank) {
  delete killrank_;
  killrank_ = killrank;
  if (killrank) {
    set_has_killrank();
  } else {
    clear_has_killrank();
  }
  // @@protoc_insertion_point(field_set_allocated:KillRankConfig.KillRank.killrank)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KillRankConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KillRankConfig_2eproto__INCLUDED
