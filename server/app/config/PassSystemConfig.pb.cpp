// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PassSystemConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PassSystemConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PassSystemConfig {

namespace {

const ::google::protobuf::Descriptor* PassItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PassItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* System_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  System_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PassSystemConfig_2eproto() {
  protobuf_AddDesc_PassSystemConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PassSystemConfig.proto");
  GOOGLE_CHECK(file != NULL);
  PassItem_descriptor_ = file->message_type(0);
  static const int PassItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, terrain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, cost_food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, unlock_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, power_switch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, is_record_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, npcs_),
  };
  PassItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PassItem_descriptor_,
      PassItem::default_instance_,
      PassItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PassItem));
  System_descriptor_ = file->message_type(1);
  static const int System_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(System, all_upc_pass_),
  };
  System_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      System_descriptor_,
      System::default_instance_,
      System_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(System, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(System, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(System));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PassSystemConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PassItem_descriptor_, &PassItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    System_descriptor_, &System::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PassSystemConfig_2eproto() {
  delete PassItem::default_instance_;
  delete PassItem_reflection_;
  delete System::default_instance_;
  delete System_reflection_;
}

void protobuf_AddDesc_PassSystemConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026PassSystemConfig.proto\022\020PassSystemConf"
    "ig\"\211\001\n\010PassItem\022\n\n\002id\030\001 \002(\r\022\017\n\007terrain\030\002"
    " \002(\r\022\021\n\tcost_food\030\003 \002(\r\022\022\n\nunlock_lvl\030\004 "
    "\002(\r\022\024\n\014power_switch\030\005 \002(\010\022\025\n\ris_record_c"
    "nt\030\006 \002(\010\022\014\n\004npcs\030\007 \003(\r\":\n\006System\0220\n\014all_"
    "upc_pass\030\001 \003(\0132\032.PassSystemConfig.PassIt"
    "em", 242);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PassSystemConfig.proto", &protobuf_RegisterTypes);
  PassItem::default_instance_ = new PassItem();
  System::default_instance_ = new System();
  PassItem::default_instance_->InitAsDefaultInstance();
  System::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PassSystemConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PassSystemConfig_2eproto {
  StaticDescriptorInitializer_PassSystemConfig_2eproto() {
    protobuf_AddDesc_PassSystemConfig_2eproto();
  }
} static_descriptor_initializer_PassSystemConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PassItem::kIdFieldNumber;
const int PassItem::kTerrainFieldNumber;
const int PassItem::kCostFoodFieldNumber;
const int PassItem::kUnlockLvlFieldNumber;
const int PassItem::kPowerSwitchFieldNumber;
const int PassItem::kIsRecordCntFieldNumber;
const int PassItem::kNpcsFieldNumber;
#endif  // !_MSC_VER

PassItem::PassItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PassSystemConfig.PassItem)
}

void PassItem::InitAsDefaultInstance() {
}

PassItem::PassItem(const PassItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PassSystemConfig.PassItem)
}

void PassItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  terrain_ = 0u;
  cost_food_ = 0u;
  unlock_lvl_ = 0u;
  power_switch_ = false;
  is_record_cnt_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PassItem::~PassItem() {
  // @@protoc_insertion_point(destructor:PassSystemConfig.PassItem)
  SharedDtor();
}

void PassItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PassItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PassItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PassItem_descriptor_;
}

const PassItem& PassItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PassSystemConfig_2eproto();
  return *default_instance_;
}

PassItem* PassItem::default_instance_ = NULL;

PassItem* PassItem::New() const {
  return new PassItem;
}

void PassItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PassItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(id_, unlock_lvl_);
    ZR_(power_switch_, is_record_cnt_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  npcs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PassItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PassSystemConfig.PassItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_terrain;
        break;
      }

      // required uint32 terrain = 2;
      case 2: {
        if (tag == 16) {
         parse_terrain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &terrain_)));
          set_has_terrain();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cost_food;
        break;
      }

      // required uint32 cost_food = 3;
      case 3: {
        if (tag == 24) {
         parse_cost_food:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_food_)));
          set_has_cost_food();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unlock_lvl;
        break;
      }

      // required uint32 unlock_lvl = 4;
      case 4: {
        if (tag == 32) {
         parse_unlock_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_lvl_)));
          set_has_unlock_lvl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_power_switch;
        break;
      }

      // required bool power_switch = 5;
      case 5: {
        if (tag == 40) {
         parse_power_switch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &power_switch_)));
          set_has_power_switch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_is_record_cnt;
        break;
      }

      // required bool is_record_cnt = 6;
      case 6: {
        if (tag == 48) {
         parse_is_record_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_record_cnt_)));
          set_has_is_record_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_npcs;
        break;
      }

      // repeated uint32 npcs = 7;
      case 7: {
        if (tag == 56) {
         parse_npcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_npcs())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_npcs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_npcs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PassSystemConfig.PassItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PassSystemConfig.PassItem)
  return false;
#undef DO_
}

void PassItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PassSystemConfig.PassItem)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 terrain = 2;
  if (has_terrain()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->terrain(), output);
  }

  // required uint32 cost_food = 3;
  if (has_cost_food()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cost_food(), output);
  }

  // required uint32 unlock_lvl = 4;
  if (has_unlock_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->unlock_lvl(), output);
  }

  // required bool power_switch = 5;
  if (has_power_switch()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->power_switch(), output);
  }

  // required bool is_record_cnt = 6;
  if (has_is_record_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_record_cnt(), output);
  }

  // repeated uint32 npcs = 7;
  for (int i = 0; i < this->npcs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->npcs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PassSystemConfig.PassItem)
}

::google::protobuf::uint8* PassItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PassSystemConfig.PassItem)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 terrain = 2;
  if (has_terrain()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->terrain(), target);
  }

  // required uint32 cost_food = 3;
  if (has_cost_food()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cost_food(), target);
  }

  // required uint32 unlock_lvl = 4;
  if (has_unlock_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->unlock_lvl(), target);
  }

  // required bool power_switch = 5;
  if (has_power_switch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->power_switch(), target);
  }

  // required bool is_record_cnt = 6;
  if (has_is_record_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_record_cnt(), target);
  }

  // repeated uint32 npcs = 7;
  for (int i = 0; i < this->npcs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->npcs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PassSystemConfig.PassItem)
  return target;
}

int PassItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 terrain = 2;
    if (has_terrain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->terrain());
    }

    // required uint32 cost_food = 3;
    if (has_cost_food()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cost_food());
    }

    // required uint32 unlock_lvl = 4;
    if (has_unlock_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_lvl());
    }

    // required bool power_switch = 5;
    if (has_power_switch()) {
      total_size += 1 + 1;
    }

    // required bool is_record_cnt = 6;
    if (has_is_record_cnt()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 npcs = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->npcs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->npcs(i));
    }
    total_size += 1 * this->npcs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PassItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PassItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PassItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PassItem::MergeFrom(const PassItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  npcs_.MergeFrom(from.npcs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_terrain()) {
      set_terrain(from.terrain());
    }
    if (from.has_cost_food()) {
      set_cost_food(from.cost_food());
    }
    if (from.has_unlock_lvl()) {
      set_unlock_lvl(from.unlock_lvl());
    }
    if (from.has_power_switch()) {
      set_power_switch(from.power_switch());
    }
    if (from.has_is_record_cnt()) {
      set_is_record_cnt(from.is_record_cnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PassItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassItem::CopyFrom(const PassItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void PassItem::Swap(PassItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(terrain_, other->terrain_);
    std::swap(cost_food_, other->cost_food_);
    std::swap(unlock_lvl_, other->unlock_lvl_);
    std::swap(power_switch_, other->power_switch_);
    std::swap(is_record_cnt_, other->is_record_cnt_);
    npcs_.Swap(&other->npcs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PassItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PassItem_descriptor_;
  metadata.reflection = PassItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int System::kAllUpcPassFieldNumber;
#endif  // !_MSC_VER

System::System()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PassSystemConfig.System)
}

void System::InitAsDefaultInstance() {
}

System::System(const System& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PassSystemConfig.System)
}

void System::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

System::~System() {
  // @@protoc_insertion_point(destructor:PassSystemConfig.System)
  SharedDtor();
}

void System::SharedDtor() {
  if (this != default_instance_) {
  }
}

void System::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* System::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return System_descriptor_;
}

const System& System::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PassSystemConfig_2eproto();
  return *default_instance_;
}

System* System::default_instance_ = NULL;

System* System::New() const {
  return new System;
}

void System::Clear() {
  all_upc_pass_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool System::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PassSystemConfig.System)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PassSystemConfig.PassItem all_upc_pass = 1;
      case 1: {
        if (tag == 10) {
         parse_all_upc_pass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_all_upc_pass()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_all_upc_pass;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PassSystemConfig.System)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PassSystemConfig.System)
  return false;
#undef DO_
}

void System::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PassSystemConfig.System)
  // repeated .PassSystemConfig.PassItem all_upc_pass = 1;
  for (int i = 0; i < this->all_upc_pass_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->all_upc_pass(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PassSystemConfig.System)
}

::google::protobuf::uint8* System::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PassSystemConfig.System)
  // repeated .PassSystemConfig.PassItem all_upc_pass = 1;
  for (int i = 0; i < this->all_upc_pass_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->all_upc_pass(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PassSystemConfig.System)
  return target;
}

int System::ByteSize() const {
  int total_size = 0;

  // repeated .PassSystemConfig.PassItem all_upc_pass = 1;
  total_size += 1 * this->all_upc_pass_size();
  for (int i = 0; i < this->all_upc_pass_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->all_upc_pass(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void System::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const System* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const System*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void System::MergeFrom(const System& from) {
  GOOGLE_CHECK_NE(&from, this);
  all_upc_pass_.MergeFrom(from.all_upc_pass_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void System::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void System::CopyFrom(const System& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool System::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->all_upc_pass())) return false;
  return true;
}

void System::Swap(System* other) {
  if (other != this) {
    all_upc_pass_.Swap(&other->all_upc_pass_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata System::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = System_descriptor_;
  metadata.reflection = System_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PassSystemConfig

// @@protoc_insertion_point(global_scope)
