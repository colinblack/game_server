// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResourceCopyConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ResourceCopyConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ResourceCopyConfig {

namespace {

const ::google::protobuf::Descriptor* ResourceCopy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceCopy_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceCopyAll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceCopyAll_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ResourceCopyConfig_2eproto() {
  protobuf_AddDesc_ResourceCopyConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ResourceCopyConfig.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceCopy_descriptor_ = file->message_type(0);
  static const int ResourceCopy_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, gateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, timeslimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, reward_),
  };
  ResourceCopy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceCopy_descriptor_,
      ResourceCopy::default_instance_,
      ResourceCopy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceCopy));
  ResourceCopyAll_descriptor_ = file->message_type(1);
  static const int ResourceCopyAll_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopyAll, resource_copies_),
  };
  ResourceCopyAll_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceCopyAll_descriptor_,
      ResourceCopyAll::default_instance_,
      ResourceCopyAll_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopyAll, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCopyAll, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceCopyAll));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ResourceCopyConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceCopy_descriptor_, &ResourceCopy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceCopyAll_descriptor_, &ResourceCopyAll::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ResourceCopyConfig_2eproto() {
  delete ResourceCopy::default_instance_;
  delete ResourceCopy_reflection_;
  delete ResourceCopyAll::default_instance_;
  delete ResourceCopyAll_reflection_;
}

void protobuf_AddDesc_ResourceCopyConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RewardConfig::protobuf_AddDesc_RewardConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030ResourceCopyConfig.proto\022\022ResourceCopy"
    "Config\032\022RewardConfig.proto\"\204\001\n\014ResourceC"
    "opy\022\n\n\002id\030\001 \002(\r\022\016\n\006gateid\030\002 \002(\r\022\020\n\010viple"
    "vel\030\003 \002(\r\022\022\n\ntimeslimit\030\004 \002(\r\022\014\n\004cash\030\005 "
    "\003(\r\022$\n\006reward\030\006 \003(\0132\024.RewardConfig.Rewar"
    "d\"L\n\017ResourceCopyAll\0229\n\017resource_copies\030"
    "\001 \003(\0132 .ResourceCopyConfig.ResourceCopy", 279);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ResourceCopyConfig.proto", &protobuf_RegisterTypes);
  ResourceCopy::default_instance_ = new ResourceCopy();
  ResourceCopyAll::default_instance_ = new ResourceCopyAll();
  ResourceCopy::default_instance_->InitAsDefaultInstance();
  ResourceCopyAll::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ResourceCopyConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ResourceCopyConfig_2eproto {
  StaticDescriptorInitializer_ResourceCopyConfig_2eproto() {
    protobuf_AddDesc_ResourceCopyConfig_2eproto();
  }
} static_descriptor_initializer_ResourceCopyConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ResourceCopy::kIdFieldNumber;
const int ResourceCopy::kGateidFieldNumber;
const int ResourceCopy::kViplevelFieldNumber;
const int ResourceCopy::kTimeslimitFieldNumber;
const int ResourceCopy::kCashFieldNumber;
const int ResourceCopy::kRewardFieldNumber;
#endif  // !_MSC_VER

ResourceCopy::ResourceCopy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceCopyConfig.ResourceCopy)
}

void ResourceCopy::InitAsDefaultInstance() {
}

ResourceCopy::ResourceCopy(const ResourceCopy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResourceCopyConfig.ResourceCopy)
}

void ResourceCopy::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  gateid_ = 0u;
  viplevel_ = 0u;
  timeslimit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceCopy::~ResourceCopy() {
  // @@protoc_insertion_point(destructor:ResourceCopyConfig.ResourceCopy)
  SharedDtor();
}

void ResourceCopy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceCopy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceCopy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceCopy_descriptor_;
}

const ResourceCopy& ResourceCopy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ResourceCopyConfig_2eproto();
  return *default_instance_;
}

ResourceCopy* ResourceCopy::default_instance_ = NULL;

ResourceCopy* ResourceCopy::New() const {
  return new ResourceCopy;
}

void ResourceCopy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ResourceCopy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, timeslimit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  cash_.Clear();
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceCopy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceCopyConfig.ResourceCopy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gateid;
        break;
      }

      // required uint32 gateid = 2;
      case 2: {
        if (tag == 16) {
         parse_gateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gateid_)));
          set_has_gateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_viplevel;
        break;
      }

      // required uint32 viplevel = 3;
      case 3: {
        if (tag == 24) {
         parse_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));
          set_has_viplevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_timeslimit;
        break;
      }

      // required uint32 timeslimit = 4;
      case 4: {
        if (tag == 32) {
         parse_timeslimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeslimit_)));
          set_has_timeslimit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash;
        break;
      }

      // repeated uint32 cash = 5;
      case 5: {
        if (tag == 40) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_cash())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cash())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash;
        if (input->ExpectTag(50)) goto parse_reward;
        break;
      }

      // repeated .RewardConfig.Reward reward = 6;
      case 6: {
        if (tag == 50) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceCopyConfig.ResourceCopy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceCopyConfig.ResourceCopy)
  return false;
#undef DO_
}

void ResourceCopy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceCopyConfig.ResourceCopy)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 gateid = 2;
  if (has_gateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gateid(), output);
  }

  // required uint32 viplevel = 3;
  if (has_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->viplevel(), output);
  }

  // required uint32 timeslimit = 4;
  if (has_timeslimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->timeslimit(), output);
  }

  // repeated uint32 cash = 5;
  for (int i = 0; i < this->cash_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->cash(i), output);
  }

  // repeated .RewardConfig.Reward reward = 6;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceCopyConfig.ResourceCopy)
}

::google::protobuf::uint8* ResourceCopy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResourceCopyConfig.ResourceCopy)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 gateid = 2;
  if (has_gateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gateid(), target);
  }

  // required uint32 viplevel = 3;
  if (has_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->viplevel(), target);
  }

  // required uint32 timeslimit = 4;
  if (has_timeslimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->timeslimit(), target);
  }

  // repeated uint32 cash = 5;
  for (int i = 0; i < this->cash_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->cash(i), target);
  }

  // repeated .RewardConfig.Reward reward = 6;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceCopyConfig.ResourceCopy)
  return target;
}

int ResourceCopy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 gateid = 2;
    if (has_gateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gateid());
    }

    // required uint32 viplevel = 3;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viplevel());
    }

    // required uint32 timeslimit = 4;
    if (has_timeslimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeslimit());
    }

  }
  // repeated uint32 cash = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->cash_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->cash(i));
    }
    total_size += 1 * this->cash_size() + data_size;
  }

  // repeated .RewardConfig.Reward reward = 6;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceCopy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceCopy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceCopy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceCopy::MergeFrom(const ResourceCopy& from) {
  GOOGLE_CHECK_NE(&from, this);
  cash_.MergeFrom(from.cash_);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_gateid()) {
      set_gateid(from.gateid());
    }
    if (from.has_viplevel()) {
      set_viplevel(from.viplevel());
    }
    if (from.has_timeslimit()) {
      set_timeslimit(from.timeslimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceCopy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceCopy::CopyFrom(const ResourceCopy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceCopy::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->reward())) return false;
  return true;
}

void ResourceCopy::Swap(ResourceCopy* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(gateid_, other->gateid_);
    std::swap(viplevel_, other->viplevel_);
    std::swap(timeslimit_, other->timeslimit_);
    cash_.Swap(&other->cash_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceCopy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceCopy_descriptor_;
  metadata.reflection = ResourceCopy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceCopyAll::kResourceCopiesFieldNumber;
#endif  // !_MSC_VER

ResourceCopyAll::ResourceCopyAll()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceCopyConfig.ResourceCopyAll)
}

void ResourceCopyAll::InitAsDefaultInstance() {
}

ResourceCopyAll::ResourceCopyAll(const ResourceCopyAll& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResourceCopyConfig.ResourceCopyAll)
}

void ResourceCopyAll::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceCopyAll::~ResourceCopyAll() {
  // @@protoc_insertion_point(destructor:ResourceCopyConfig.ResourceCopyAll)
  SharedDtor();
}

void ResourceCopyAll::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceCopyAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceCopyAll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceCopyAll_descriptor_;
}

const ResourceCopyAll& ResourceCopyAll::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ResourceCopyConfig_2eproto();
  return *default_instance_;
}

ResourceCopyAll* ResourceCopyAll::default_instance_ = NULL;

ResourceCopyAll* ResourceCopyAll::New() const {
  return new ResourceCopyAll;
}

void ResourceCopyAll::Clear() {
  resource_copies_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceCopyAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceCopyConfig.ResourceCopyAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ResourceCopyConfig.ResourceCopy resource_copies = 1;
      case 1: {
        if (tag == 10) {
         parse_resource_copies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resource_copies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_resource_copies;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceCopyConfig.ResourceCopyAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceCopyConfig.ResourceCopyAll)
  return false;
#undef DO_
}

void ResourceCopyAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceCopyConfig.ResourceCopyAll)
  // repeated .ResourceCopyConfig.ResourceCopy resource_copies = 1;
  for (int i = 0; i < this->resource_copies_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resource_copies(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceCopyConfig.ResourceCopyAll)
}

::google::protobuf::uint8* ResourceCopyAll::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResourceCopyConfig.ResourceCopyAll)
  // repeated .ResourceCopyConfig.ResourceCopy resource_copies = 1;
  for (int i = 0; i < this->resource_copies_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resource_copies(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceCopyConfig.ResourceCopyAll)
  return target;
}

int ResourceCopyAll::ByteSize() const {
  int total_size = 0;

  // repeated .ResourceCopyConfig.ResourceCopy resource_copies = 1;
  total_size += 1 * this->resource_copies_size();
  for (int i = 0; i < this->resource_copies_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resource_copies(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceCopyAll::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceCopyAll* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceCopyAll*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceCopyAll::MergeFrom(const ResourceCopyAll& from) {
  GOOGLE_CHECK_NE(&from, this);
  resource_copies_.MergeFrom(from.resource_copies_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceCopyAll::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceCopyAll::CopyFrom(const ResourceCopyAll& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceCopyAll::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->resource_copies())) return false;
  return true;
}

void ResourceCopyAll::Swap(ResourceCopyAll* other) {
  if (other != this) {
    resource_copies_.Swap(&other->resource_copies_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceCopyAll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceCopyAll_descriptor_;
  metadata.reflection = ResourceCopyAll_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ResourceCopyConfig

// @@protoc_insertion_point(global_scope)
