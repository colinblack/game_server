// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tavern.proto

#ifndef PROTOBUF_Tavern_2eproto__INCLUDED
#define PROTOBUF_Tavern_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TavernConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Tavern_2eproto();
void protobuf_AssignDesc_Tavern_2eproto();
void protobuf_ShutdownFile_Tavern_2eproto();

class UnlockCondition;
class SingleHero;
class HeroRecruit;

// ===================================================================

class UnlockCondition : public ::google::protobuf::Message {
 public:
  UnlockCondition();
  virtual ~UnlockCondition();

  UnlockCondition(const UnlockCondition& from);

  inline UnlockCondition& operator=(const UnlockCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockCondition& default_instance();

  void Swap(UnlockCondition* other);

  // implements Message ----------------------------------------------

  UnlockCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockCondition& from);
  void MergeFrom(const UnlockCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gateid = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 1;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // required uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TavernConfig.UnlockCondition)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 times_;
  friend void  protobuf_AddDesc_Tavern_2eproto();
  friend void protobuf_AssignDesc_Tavern_2eproto();
  friend void protobuf_ShutdownFile_Tavern_2eproto();

  void InitAsDefaultInstance();
  static UnlockCondition* default_instance_;
};
// -------------------------------------------------------------------

class SingleHero : public ::google::protobuf::Message {
 public:
  SingleHero();
  virtual ~SingleHero();

  SingleHero(const SingleHero& from);

  inline SingleHero& operator=(const SingleHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleHero& default_instance();

  void Swap(SingleHero* other);

  // implements Message ----------------------------------------------

  SingleHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleHero& from);
  void MergeFrom(const SingleHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 heroid = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // required .TavernConfig.UnlockCondition condition = 3;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 3;
  inline const ::TavernConfig::UnlockCondition& condition() const;
  inline ::TavernConfig::UnlockCondition* mutable_condition();
  inline ::TavernConfig::UnlockCondition* release_condition();
  inline void set_allocated_condition(::TavernConfig::UnlockCondition* condition);

  // required uint32 price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TavernConfig.SingleHero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_condition();
  inline void clear_has_condition();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 heroid_;
  ::TavernConfig::UnlockCondition* condition_;
  ::google::protobuf::uint32 price_;
  friend void  protobuf_AddDesc_Tavern_2eproto();
  friend void protobuf_AssignDesc_Tavern_2eproto();
  friend void protobuf_ShutdownFile_Tavern_2eproto();

  void InitAsDefaultInstance();
  static SingleHero* default_instance_;
};
// -------------------------------------------------------------------

class HeroRecruit : public ::google::protobuf::Message {
 public:
  HeroRecruit();
  virtual ~HeroRecruit();

  HeroRecruit(const HeroRecruit& from);

  inline HeroRecruit& operator=(const HeroRecruit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroRecruit& default_instance();

  void Swap(HeroRecruit* other);

  // implements Message ----------------------------------------------

  HeroRecruit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroRecruit& from);
  void MergeFrom(const HeroRecruit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TavernConfig.SingleHero heroes = 1;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  inline const ::TavernConfig::SingleHero& heroes(int index) const;
  inline ::TavernConfig::SingleHero* mutable_heroes(int index);
  inline ::TavernConfig::SingleHero* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::TavernConfig::SingleHero >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::TavernConfig::SingleHero >*
      mutable_heroes();

  // @@protoc_insertion_point(class_scope:TavernConfig.HeroRecruit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TavernConfig::SingleHero > heroes_;
  friend void  protobuf_AddDesc_Tavern_2eproto();
  friend void protobuf_AssignDesc_Tavern_2eproto();
  friend void protobuf_ShutdownFile_Tavern_2eproto();

  void InitAsDefaultInstance();
  static HeroRecruit* default_instance_;
};
// ===================================================================


// ===================================================================

// UnlockCondition

// required uint32 gateid = 1;
inline bool UnlockCondition::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockCondition::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockCondition::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockCondition::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 UnlockCondition::gateid() const {
  // @@protoc_insertion_point(field_get:TavernConfig.UnlockCondition.gateid)
  return gateid_;
}
inline void UnlockCondition::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
  // @@protoc_insertion_point(field_set:TavernConfig.UnlockCondition.gateid)
}

// required uint32 times = 2;
inline bool UnlockCondition::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockCondition::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockCondition::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockCondition::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 UnlockCondition::times() const {
  // @@protoc_insertion_point(field_get:TavernConfig.UnlockCondition.times)
  return times_;
}
inline void UnlockCondition::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:TavernConfig.UnlockCondition.times)
}

// -------------------------------------------------------------------

// SingleHero

// required uint32 id = 1;
inline bool SingleHero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleHero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleHero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleHero::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SingleHero::id() const {
  // @@protoc_insertion_point(field_get:TavernConfig.SingleHero.id)
  return id_;
}
inline void SingleHero::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TavernConfig.SingleHero.id)
}

// required uint32 heroid = 2;
inline bool SingleHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleHero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 SingleHero::heroid() const {
  // @@protoc_insertion_point(field_get:TavernConfig.SingleHero.heroid)
  return heroid_;
}
inline void SingleHero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:TavernConfig.SingleHero.heroid)
}

// required .TavernConfig.UnlockCondition condition = 3;
inline bool SingleHero::has_condition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleHero::set_has_condition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleHero::clear_has_condition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleHero::clear_condition() {
  if (condition_ != NULL) condition_->::TavernConfig::UnlockCondition::Clear();
  clear_has_condition();
}
inline const ::TavernConfig::UnlockCondition& SingleHero::condition() const {
  // @@protoc_insertion_point(field_get:TavernConfig.SingleHero.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::TavernConfig::UnlockCondition* SingleHero::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::TavernConfig::UnlockCondition;
  // @@protoc_insertion_point(field_mutable:TavernConfig.SingleHero.condition)
  return condition_;
}
inline ::TavernConfig::UnlockCondition* SingleHero::release_condition() {
  clear_has_condition();
  ::TavernConfig::UnlockCondition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void SingleHero::set_allocated_condition(::TavernConfig::UnlockCondition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:TavernConfig.SingleHero.condition)
}

// required uint32 price = 4;
inline bool SingleHero::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SingleHero::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SingleHero::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SingleHero::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 SingleHero::price() const {
  // @@protoc_insertion_point(field_get:TavernConfig.SingleHero.price)
  return price_;
}
inline void SingleHero::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:TavernConfig.SingleHero.price)
}

// -------------------------------------------------------------------

// HeroRecruit

// repeated .TavernConfig.SingleHero heroes = 1;
inline int HeroRecruit::heroes_size() const {
  return heroes_.size();
}
inline void HeroRecruit::clear_heroes() {
  heroes_.Clear();
}
inline const ::TavernConfig::SingleHero& HeroRecruit::heroes(int index) const {
  // @@protoc_insertion_point(field_get:TavernConfig.HeroRecruit.heroes)
  return heroes_.Get(index);
}
inline ::TavernConfig::SingleHero* HeroRecruit::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:TavernConfig.HeroRecruit.heroes)
  return heroes_.Mutable(index);
}
inline ::TavernConfig::SingleHero* HeroRecruit::add_heroes() {
  // @@protoc_insertion_point(field_add:TavernConfig.HeroRecruit.heroes)
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TavernConfig::SingleHero >&
HeroRecruit::heroes() const {
  // @@protoc_insertion_point(field_list:TavernConfig.HeroRecruit.heroes)
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::TavernConfig::SingleHero >*
HeroRecruit::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:TavernConfig.HeroRecruit.heroes)
  return &heroes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TavernConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Tavern_2eproto__INCLUDED
