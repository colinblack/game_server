// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Building.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Building.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Building {

namespace {

const ::google::protobuf::Descriptor* LvLs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LvLs_reflection_ = NULL;
const ::google::protobuf::Descriptor* Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* Buildings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Buildings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Building_2eproto() {
  protobuf_AddDesc_Building_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Building.proto");
  GOOGLE_CHECK(file != NULL);
  LvLs_descriptor_ = file->message_type(0);
  static const int LvLs_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, upgrade_cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, accelerate_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, cost_coins_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, cost_wood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, out_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, out_exploit_),
  };
  LvLs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LvLs_descriptor_,
      LvLs::default_instance_,
      LvLs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LvLs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LvLs));
  Item_descriptor_ = file->message_type(1);
  static const int Item_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, unlock_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, unlock_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, lvls_),
  };
  Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Item_descriptor_,
      Item::default_instance_,
      Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Item));
  Buildings_descriptor_ = file->message_type(2);
  static const int Buildings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, buildings_),
  };
  Buildings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Buildings_descriptor_,
      Buildings::default_instance_,
      Buildings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Buildings));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Building_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LvLs_descriptor_, &LvLs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Item_descriptor_, &Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Buildings_descriptor_, &Buildings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Building_2eproto() {
  delete LvLs::default_instance_;
  delete LvLs_reflection_;
  delete Item::default_instance_;
  delete Item_reflection_;
  delete Buildings::default_instance_;
  delete Buildings_reflection_;
}

void protobuf_AddDesc_Building_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Building.proto\022\010Building\"\234\001\n\004LvLs\022\013\n\003l"
    "vl\030\001 \002(\r\022\022\n\nupgrade_cd\030\002 \002(\r\022\027\n\017accelera"
    "te_time\030\003 \002(\r\022\022\n\ncost_coins\030\004 \002(\r\022\021\n\tcos"
    "t_wood\030\005 \002(\r\022\r\n\005value\030\006 \002(\r\022\017\n\007out_exp\030\007"
    " \002(\r\022\023\n\013out_exploit\030\010 \002(\r\"g\n\004Item\022\n\n\002id\030"
    "\001 \002(\r\022\022\n\nunlock_lvl\030\002 \002(\r\022\023\n\013unlock_time"
    "\030\003 \002(\r\022\014\n\004type\030\004 \002(\r\022\034\n\004lvls\030\005 \003(\0132\016.Bui"
    "lding.LvLs\".\n\tBuildings\022!\n\tbuildings\030\001 \003"
    "(\0132\016.Building.Item", 338);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Building.proto", &protobuf_RegisterTypes);
  LvLs::default_instance_ = new LvLs();
  Item::default_instance_ = new Item();
  Buildings::default_instance_ = new Buildings();
  LvLs::default_instance_->InitAsDefaultInstance();
  Item::default_instance_->InitAsDefaultInstance();
  Buildings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Building_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Building_2eproto {
  StaticDescriptorInitializer_Building_2eproto() {
    protobuf_AddDesc_Building_2eproto();
  }
} static_descriptor_initializer_Building_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LvLs::kLvlFieldNumber;
const int LvLs::kUpgradeCdFieldNumber;
const int LvLs::kAccelerateTimeFieldNumber;
const int LvLs::kCostCoinsFieldNumber;
const int LvLs::kCostWoodFieldNumber;
const int LvLs::kValueFieldNumber;
const int LvLs::kOutExpFieldNumber;
const int LvLs::kOutExploitFieldNumber;
#endif  // !_MSC_VER

LvLs::LvLs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Building.LvLs)
}

void LvLs::InitAsDefaultInstance() {
}

LvLs::LvLs(const LvLs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Building.LvLs)
}

void LvLs::SharedCtor() {
  _cached_size_ = 0;
  lvl_ = 0u;
  upgrade_cd_ = 0u;
  accelerate_time_ = 0u;
  cost_coins_ = 0u;
  cost_wood_ = 0u;
  value_ = 0u;
  out_exp_ = 0u;
  out_exploit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LvLs::~LvLs() {
  // @@protoc_insertion_point(destructor:Building.LvLs)
  SharedDtor();
}

void LvLs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LvLs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LvLs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LvLs_descriptor_;
}

const LvLs& LvLs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

LvLs* LvLs::default_instance_ = NULL;

LvLs* LvLs::New() const {
  return new LvLs;
}

void LvLs::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LvLs*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(lvl_, out_exploit_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LvLs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Building.LvLs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 lvl = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvl_)));
          set_has_lvl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_upgrade_cd;
        break;
      }

      // required uint32 upgrade_cd = 2;
      case 2: {
        if (tag == 16) {
         parse_upgrade_cd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &upgrade_cd_)));
          set_has_upgrade_cd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_accelerate_time;
        break;
      }

      // required uint32 accelerate_time = 3;
      case 3: {
        if (tag == 24) {
         parse_accelerate_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accelerate_time_)));
          set_has_accelerate_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cost_coins;
        break;
      }

      // required uint32 cost_coins = 4;
      case 4: {
        if (tag == 32) {
         parse_cost_coins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_coins_)));
          set_has_cost_coins();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cost_wood;
        break;
      }

      // required uint32 cost_wood = 5;
      case 5: {
        if (tag == 40) {
         parse_cost_wood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_wood_)));
          set_has_cost_wood();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_value;
        break;
      }

      // required uint32 value = 6;
      case 6: {
        if (tag == 48) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_out_exp;
        break;
      }

      // required uint32 out_exp = 7;
      case 7: {
        if (tag == 56) {
         parse_out_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_exp_)));
          set_has_out_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_out_exploit;
        break;
      }

      // required uint32 out_exploit = 8;
      case 8: {
        if (tag == 64) {
         parse_out_exploit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_exploit_)));
          set_has_out_exploit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Building.LvLs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Building.LvLs)
  return false;
#undef DO_
}

void LvLs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Building.LvLs)
  // required uint32 lvl = 1;
  if (has_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lvl(), output);
  }

  // required uint32 upgrade_cd = 2;
  if (has_upgrade_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->upgrade_cd(), output);
  }

  // required uint32 accelerate_time = 3;
  if (has_accelerate_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->accelerate_time(), output);
  }

  // required uint32 cost_coins = 4;
  if (has_cost_coins()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cost_coins(), output);
  }

  // required uint32 cost_wood = 5;
  if (has_cost_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cost_wood(), output);
  }

  // required uint32 value = 6;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->value(), output);
  }

  // required uint32 out_exp = 7;
  if (has_out_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->out_exp(), output);
  }

  // required uint32 out_exploit = 8;
  if (has_out_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->out_exploit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Building.LvLs)
}

::google::protobuf::uint8* LvLs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Building.LvLs)
  // required uint32 lvl = 1;
  if (has_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lvl(), target);
  }

  // required uint32 upgrade_cd = 2;
  if (has_upgrade_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->upgrade_cd(), target);
  }

  // required uint32 accelerate_time = 3;
  if (has_accelerate_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->accelerate_time(), target);
  }

  // required uint32 cost_coins = 4;
  if (has_cost_coins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cost_coins(), target);
  }

  // required uint32 cost_wood = 5;
  if (has_cost_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cost_wood(), target);
  }

  // required uint32 value = 6;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->value(), target);
  }

  // required uint32 out_exp = 7;
  if (has_out_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->out_exp(), target);
  }

  // required uint32 out_exploit = 8;
  if (has_out_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->out_exploit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Building.LvLs)
  return target;
}

int LvLs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 lvl = 1;
    if (has_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lvl());
    }

    // required uint32 upgrade_cd = 2;
    if (has_upgrade_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->upgrade_cd());
    }

    // required uint32 accelerate_time = 3;
    if (has_accelerate_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accelerate_time());
    }

    // required uint32 cost_coins = 4;
    if (has_cost_coins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cost_coins());
    }

    // required uint32 cost_wood = 5;
    if (has_cost_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cost_wood());
    }

    // required uint32 value = 6;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // required uint32 out_exp = 7;
    if (has_out_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->out_exp());
    }

    // required uint32 out_exploit = 8;
    if (has_out_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->out_exploit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LvLs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LvLs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LvLs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LvLs::MergeFrom(const LvLs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lvl()) {
      set_lvl(from.lvl());
    }
    if (from.has_upgrade_cd()) {
      set_upgrade_cd(from.upgrade_cd());
    }
    if (from.has_accelerate_time()) {
      set_accelerate_time(from.accelerate_time());
    }
    if (from.has_cost_coins()) {
      set_cost_coins(from.cost_coins());
    }
    if (from.has_cost_wood()) {
      set_cost_wood(from.cost_wood());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_out_exp()) {
      set_out_exp(from.out_exp());
    }
    if (from.has_out_exploit()) {
      set_out_exploit(from.out_exploit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LvLs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LvLs::CopyFrom(const LvLs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LvLs::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void LvLs::Swap(LvLs* other) {
  if (other != this) {
    std::swap(lvl_, other->lvl_);
    std::swap(upgrade_cd_, other->upgrade_cd_);
    std::swap(accelerate_time_, other->accelerate_time_);
    std::swap(cost_coins_, other->cost_coins_);
    std::swap(cost_wood_, other->cost_wood_);
    std::swap(value_, other->value_);
    std::swap(out_exp_, other->out_exp_);
    std::swap(out_exploit_, other->out_exploit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LvLs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LvLs_descriptor_;
  metadata.reflection = LvLs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Item::kIdFieldNumber;
const int Item::kUnlockLvlFieldNumber;
const int Item::kUnlockTimeFieldNumber;
const int Item::kTypeFieldNumber;
const int Item::kLvlsFieldNumber;
#endif  // !_MSC_VER

Item::Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Building.Item)
}

void Item::InitAsDefaultInstance() {
}

Item::Item(const Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Building.Item)
}

void Item::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  unlock_lvl_ = 0u;
  unlock_time_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:Building.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_descriptor_;
}

const Item& Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

Item* Item::default_instance_ = NULL;

Item* Item::New() const {
  return new Item;
}

void Item::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Item*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  lvls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Building.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unlock_lvl;
        break;
      }

      // required uint32 unlock_lvl = 2;
      case 2: {
        if (tag == 16) {
         parse_unlock_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_lvl_)));
          set_has_unlock_lvl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unlock_time;
        break;
      }

      // required uint32 unlock_time = 3;
      case 3: {
        if (tag == 24) {
         parse_unlock_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_time_)));
          set_has_unlock_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required uint32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_lvls;
        break;
      }

      // repeated .Building.LvLs lvls = 5;
      case 5: {
        if (tag == 42) {
         parse_lvls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lvls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_lvls;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Building.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Building.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Building.Item)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 unlock_lvl = 2;
  if (has_unlock_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unlock_lvl(), output);
  }

  // required uint32 unlock_time = 3;
  if (has_unlock_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unlock_time(), output);
  }

  // required uint32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  // repeated .Building.LvLs lvls = 5;
  for (int i = 0; i < this->lvls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->lvls(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Building.Item)
}

::google::protobuf::uint8* Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Building.Item)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 unlock_lvl = 2;
  if (has_unlock_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unlock_lvl(), target);
  }

  // required uint32 unlock_time = 3;
  if (has_unlock_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unlock_time(), target);
  }

  // required uint32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  // repeated .Building.LvLs lvls = 5;
  for (int i = 0; i < this->lvls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->lvls(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Building.Item)
  return target;
}

int Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 unlock_lvl = 2;
    if (has_unlock_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_lvl());
    }

    // required uint32 unlock_time = 3;
    if (has_unlock_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_time());
    }

    // required uint32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  // repeated .Building.LvLs lvls = 5;
  total_size += 1 * this->lvls_size();
  for (int i = 0; i < this->lvls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lvls(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  lvls_.MergeFrom(from.lvls_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_unlock_lvl()) {
      set_unlock_lvl(from.unlock_lvl());
    }
    if (from.has_unlock_time()) {
      set_unlock_time(from.unlock_time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->lvls())) return false;
  return true;
}

void Item::Swap(Item* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(unlock_lvl_, other->unlock_lvl_);
    std::swap(unlock_time_, other->unlock_time_);
    std::swap(type_, other->type_);
    lvls_.Swap(&other->lvls_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_descriptor_;
  metadata.reflection = Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Buildings::kBuildingsFieldNumber;
#endif  // !_MSC_VER

Buildings::Buildings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Building.Buildings)
}

void Buildings::InitAsDefaultInstance() {
}

Buildings::Buildings(const Buildings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Building.Buildings)
}

void Buildings::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Buildings::~Buildings() {
  // @@protoc_insertion_point(destructor:Building.Buildings)
  SharedDtor();
}

void Buildings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Buildings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Buildings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Buildings_descriptor_;
}

const Buildings& Buildings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

Buildings* Buildings::default_instance_ = NULL;

Buildings* Buildings::New() const {
  return new Buildings;
}

void Buildings::Clear() {
  buildings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Buildings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Building.Buildings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Building.Item buildings = 1;
      case 1: {
        if (tag == 10) {
         parse_buildings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buildings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_buildings;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Building.Buildings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Building.Buildings)
  return false;
#undef DO_
}

void Buildings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Building.Buildings)
  // repeated .Building.Item buildings = 1;
  for (int i = 0; i < this->buildings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buildings(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Building.Buildings)
}

::google::protobuf::uint8* Buildings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Building.Buildings)
  // repeated .Building.Item buildings = 1;
  for (int i = 0; i < this->buildings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buildings(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Building.Buildings)
  return target;
}

int Buildings::ByteSize() const {
  int total_size = 0;

  // repeated .Building.Item buildings = 1;
  total_size += 1 * this->buildings_size();
  for (int i = 0; i < this->buildings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buildings(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Buildings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Buildings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Buildings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Buildings::MergeFrom(const Buildings& from) {
  GOOGLE_CHECK_NE(&from, this);
  buildings_.MergeFrom(from.buildings_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Buildings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Buildings::CopyFrom(const Buildings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Buildings::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->buildings())) return false;
  return true;
}

void Buildings::Swap(Buildings* other) {
  if (other != this) {
    buildings_.Swap(&other->buildings_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Buildings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Buildings_descriptor_;
  metadata.reflection = Buildings_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Building

// @@protoc_insertion_point(global_scope)
