// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CrossBusinessConfig.proto

#ifndef PROTOBUF_CrossBusinessConfig_2eproto__INCLUDED
#define PROTOBUF_CrossBusinessConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace CrossBusinessConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CrossBusinessConfig_2eproto();
void protobuf_AssignDesc_CrossBusinessConfig_2eproto();
void protobuf_ShutdownFile_CrossBusinessConfig_2eproto();

class SlotGoods;
class OpenPlatformSlots;
class CrossBusinessCfg;

// ===================================================================

class SlotGoods : public ::google::protobuf::Message {
 public:
  SlotGoods();
  virtual ~SlotGoods();

  SlotGoods(const SlotGoods& from);

  inline SlotGoods& operator=(const SlotGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SlotGoods& default_instance();

  void Swap(SlotGoods* other);

  // implements Message ----------------------------------------------

  SlotGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlotGoods& from);
  void MergeFrom(const SlotGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // required uint32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // repeated .RewardConfig.Reward goods = 4;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 4;
  inline const ::RewardConfig::Reward& goods(int index) const;
  inline ::RewardConfig::Reward* mutable_goods(int index);
  inline ::RewardConfig::Reward* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_goods();

  // @@protoc_insertion_point(class_scope:CrossBusinessConfig.SlotGoods)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > goods_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_AssignDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_ShutdownFile_CrossBusinessConfig_2eproto();

  void InitAsDefaultInstance();
  static SlotGoods* default_instance_;
};
// -------------------------------------------------------------------

class OpenPlatformSlots : public ::google::protobuf::Message {
 public:
  OpenPlatformSlots();
  virtual ~OpenPlatformSlots();

  OpenPlatformSlots(const OpenPlatformSlots& from);

  inline OpenPlatformSlots& operator=(const OpenPlatformSlots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenPlatformSlots& default_instance();

  void Swap(OpenPlatformSlots* other);

  // implements Message ----------------------------------------------

  OpenPlatformSlots* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenPlatformSlots& from);
  void MergeFrom(const OpenPlatformSlots& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 startday = 1;
  inline bool has_startday() const;
  inline void clear_startday();
  static const int kStartdayFieldNumber = 1;
  inline ::google::protobuf::uint32 startday() const;
  inline void set_startday(::google::protobuf::uint32 value);

  // repeated .CrossBusinessConfig.SlotGoods slots = 2;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 2;
  inline const ::CrossBusinessConfig::SlotGoods& slots(int index) const;
  inline ::CrossBusinessConfig::SlotGoods* mutable_slots(int index);
  inline ::CrossBusinessConfig::SlotGoods* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::SlotGoods >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::SlotGoods >*
      mutable_slots();

  // @@protoc_insertion_point(class_scope:CrossBusinessConfig.OpenPlatformSlots)
 private:
  inline void set_has_startday();
  inline void clear_has_startday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::SlotGoods > slots_;
  ::google::protobuf::uint32 startday_;
  friend void  protobuf_AddDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_AssignDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_ShutdownFile_CrossBusinessConfig_2eproto();

  void InitAsDefaultInstance();
  static OpenPlatformSlots* default_instance_;
};
// -------------------------------------------------------------------

class CrossBusinessCfg : public ::google::protobuf::Message {
 public:
  CrossBusinessCfg();
  virtual ~CrossBusinessCfg();

  CrossBusinessCfg(const CrossBusinessCfg& from);

  inline CrossBusinessCfg& operator=(const CrossBusinessCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrossBusinessCfg& default_instance();

  void Swap(CrossBusinessCfg* other);

  // implements Message ----------------------------------------------

  CrossBusinessCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrossBusinessCfg& from);
  void MergeFrom(const CrossBusinessCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash_refresh = 1;
  inline bool has_cash_refresh() const;
  inline void clear_cash_refresh();
  static const int kCashRefreshFieldNumber = 1;
  inline ::google::protobuf::uint32 cash_refresh() const;
  inline void set_cash_refresh(::google::protobuf::uint32 value);

  // repeated .CrossBusinessConfig.OpenPlatformSlots open_platform_shop = 2;
  inline int open_platform_shop_size() const;
  inline void clear_open_platform_shop();
  static const int kOpenPlatformShopFieldNumber = 2;
  inline const ::CrossBusinessConfig::OpenPlatformSlots& open_platform_shop(int index) const;
  inline ::CrossBusinessConfig::OpenPlatformSlots* mutable_open_platform_shop(int index);
  inline ::CrossBusinessConfig::OpenPlatformSlots* add_open_platform_shop();
  inline const ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::OpenPlatformSlots >&
      open_platform_shop() const;
  inline ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::OpenPlatformSlots >*
      mutable_open_platform_shop();

  // @@protoc_insertion_point(class_scope:CrossBusinessConfig.CrossBusinessCfg)
 private:
  inline void set_has_cash_refresh();
  inline void clear_has_cash_refresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::OpenPlatformSlots > open_platform_shop_;
  ::google::protobuf::uint32 cash_refresh_;
  friend void  protobuf_AddDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_AssignDesc_CrossBusinessConfig_2eproto();
  friend void protobuf_ShutdownFile_CrossBusinessConfig_2eproto();

  void InitAsDefaultInstance();
  static CrossBusinessCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// SlotGoods

// required uint32 id = 1;
inline bool SlotGoods::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SlotGoods::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SlotGoods::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SlotGoods::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SlotGoods::id() const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.SlotGoods.id)
  return id_;
}
inline void SlotGoods::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CrossBusinessConfig.SlotGoods.id)
}

// required uint32 price = 2;
inline bool SlotGoods::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SlotGoods::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SlotGoods::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SlotGoods::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 SlotGoods::price() const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.SlotGoods.price)
  return price_;
}
inline void SlotGoods::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:CrossBusinessConfig.SlotGoods.price)
}

// required uint32 rate = 3;
inline bool SlotGoods::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SlotGoods::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SlotGoods::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SlotGoods::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 SlotGoods::rate() const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.SlotGoods.rate)
  return rate_;
}
inline void SlotGoods::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CrossBusinessConfig.SlotGoods.rate)
}

// repeated .RewardConfig.Reward goods = 4;
inline int SlotGoods::goods_size() const {
  return goods_.size();
}
inline void SlotGoods::clear_goods() {
  goods_.Clear();
}
inline const ::RewardConfig::Reward& SlotGoods::goods(int index) const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.SlotGoods.goods)
  return goods_.Get(index);
}
inline ::RewardConfig::Reward* SlotGoods::mutable_goods(int index) {
  // @@protoc_insertion_point(field_mutable:CrossBusinessConfig.SlotGoods.goods)
  return goods_.Mutable(index);
}
inline ::RewardConfig::Reward* SlotGoods::add_goods() {
  // @@protoc_insertion_point(field_add:CrossBusinessConfig.SlotGoods.goods)
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
SlotGoods::goods() const {
  // @@protoc_insertion_point(field_list:CrossBusinessConfig.SlotGoods.goods)
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
SlotGoods::mutable_goods() {
  // @@protoc_insertion_point(field_mutable_list:CrossBusinessConfig.SlotGoods.goods)
  return &goods_;
}

// -------------------------------------------------------------------

// OpenPlatformSlots

// required uint32 startday = 1;
inline bool OpenPlatformSlots::has_startday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenPlatformSlots::set_has_startday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenPlatformSlots::clear_has_startday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenPlatformSlots::clear_startday() {
  startday_ = 0u;
  clear_has_startday();
}
inline ::google::protobuf::uint32 OpenPlatformSlots::startday() const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.OpenPlatformSlots.startday)
  return startday_;
}
inline void OpenPlatformSlots::set_startday(::google::protobuf::uint32 value) {
  set_has_startday();
  startday_ = value;
  // @@protoc_insertion_point(field_set:CrossBusinessConfig.OpenPlatformSlots.startday)
}

// repeated .CrossBusinessConfig.SlotGoods slots = 2;
inline int OpenPlatformSlots::slots_size() const {
  return slots_.size();
}
inline void OpenPlatformSlots::clear_slots() {
  slots_.Clear();
}
inline const ::CrossBusinessConfig::SlotGoods& OpenPlatformSlots::slots(int index) const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.OpenPlatformSlots.slots)
  return slots_.Get(index);
}
inline ::CrossBusinessConfig::SlotGoods* OpenPlatformSlots::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:CrossBusinessConfig.OpenPlatformSlots.slots)
  return slots_.Mutable(index);
}
inline ::CrossBusinessConfig::SlotGoods* OpenPlatformSlots::add_slots() {
  // @@protoc_insertion_point(field_add:CrossBusinessConfig.OpenPlatformSlots.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::SlotGoods >&
OpenPlatformSlots::slots() const {
  // @@protoc_insertion_point(field_list:CrossBusinessConfig.OpenPlatformSlots.slots)
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::SlotGoods >*
OpenPlatformSlots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:CrossBusinessConfig.OpenPlatformSlots.slots)
  return &slots_;
}

// -------------------------------------------------------------------

// CrossBusinessCfg

// required uint32 cash_refresh = 1;
inline bool CrossBusinessCfg::has_cash_refresh() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrossBusinessCfg::set_has_cash_refresh() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrossBusinessCfg::clear_has_cash_refresh() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrossBusinessCfg::clear_cash_refresh() {
  cash_refresh_ = 0u;
  clear_has_cash_refresh();
}
inline ::google::protobuf::uint32 CrossBusinessCfg::cash_refresh() const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.CrossBusinessCfg.cash_refresh)
  return cash_refresh_;
}
inline void CrossBusinessCfg::set_cash_refresh(::google::protobuf::uint32 value) {
  set_has_cash_refresh();
  cash_refresh_ = value;
  // @@protoc_insertion_point(field_set:CrossBusinessConfig.CrossBusinessCfg.cash_refresh)
}

// repeated .CrossBusinessConfig.OpenPlatformSlots open_platform_shop = 2;
inline int CrossBusinessCfg::open_platform_shop_size() const {
  return open_platform_shop_.size();
}
inline void CrossBusinessCfg::clear_open_platform_shop() {
  open_platform_shop_.Clear();
}
inline const ::CrossBusinessConfig::OpenPlatformSlots& CrossBusinessCfg::open_platform_shop(int index) const {
  // @@protoc_insertion_point(field_get:CrossBusinessConfig.CrossBusinessCfg.open_platform_shop)
  return open_platform_shop_.Get(index);
}
inline ::CrossBusinessConfig::OpenPlatformSlots* CrossBusinessCfg::mutable_open_platform_shop(int index) {
  // @@protoc_insertion_point(field_mutable:CrossBusinessConfig.CrossBusinessCfg.open_platform_shop)
  return open_platform_shop_.Mutable(index);
}
inline ::CrossBusinessConfig::OpenPlatformSlots* CrossBusinessCfg::add_open_platform_shop() {
  // @@protoc_insertion_point(field_add:CrossBusinessConfig.CrossBusinessCfg.open_platform_shop)
  return open_platform_shop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::OpenPlatformSlots >&
CrossBusinessCfg::open_platform_shop() const {
  // @@protoc_insertion_point(field_list:CrossBusinessConfig.CrossBusinessCfg.open_platform_shop)
  return open_platform_shop_;
}
inline ::google::protobuf::RepeatedPtrField< ::CrossBusinessConfig::OpenPlatformSlots >*
CrossBusinessCfg::mutable_open_platform_shop() {
  // @@protoc_insertion_point(field_mutable_list:CrossBusinessConfig.CrossBusinessCfg.open_platform_shop)
  return &open_platform_shop_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CrossBusinessConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CrossBusinessConfig_2eproto__INCLUDED
