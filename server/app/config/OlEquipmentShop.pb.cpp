// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OlEquipmentShop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "OlEquipmentShop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace EquipmentShopConfig {

namespace {

const ::google::protobuf::Descriptor* Equip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Equip_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipPositionPool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipPositionPool_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipLevelPool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipLevelPool_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipNum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipNum_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpecialEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpecialEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipmentShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipmentShop_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_OlEquipmentShop_2eproto() {
  protobuf_AddDesc_OlEquipmentShop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "OlEquipmentShop.proto");
  GOOGLE_CHECK(file != NULL);
  Equip_descriptor_ = file->message_type(0);
  static const int Equip_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, eqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, isjp_),
  };
  Equip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Equip_descriptor_,
      Equip::default_instance_,
      Equip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Equip));
  EquipPositionPool_descriptor_ = file->message_type(1);
  static const int EquipPositionPool_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipPositionPool, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipPositionPool, equips_),
  };
  EquipPositionPool_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipPositionPool_descriptor_,
      EquipPositionPool::default_instance_,
      EquipPositionPool_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipPositionPool, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipPositionPool, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipPositionPool));
  EquipLevelPool_descriptor_ = file->message_type(2);
  static const int EquipLevelPool_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, jpprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, positions_),
  };
  EquipLevelPool_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipLevelPool_descriptor_,
      EquipLevelPool::default_instance_,
      EquipLevelPool_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLevelPool, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipLevelPool));
  EquipNum_descriptor_ = file->message_type(3);
  static const int EquipNum_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipNum, eqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipNum, num_),
  };
  EquipNum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipNum_descriptor_,
      EquipNum::default_instance_,
      EquipNum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipNum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipNum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipNum));
  SpecialEquip_descriptor_ = file->message_type(4);
  static const int SpecialEquip_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialEquip, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialEquip, iron_),
  };
  SpecialEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpecialEquip_descriptor_,
      SpecialEquip::default_instance_,
      SpecialEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpecialEquip));
  EquipmentShop_descriptor_ = file->message_type(5);
  static const int EquipmentShop_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, clearcdprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, levelpool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, eqid_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, special_),
  };
  EquipmentShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipmentShop_descriptor_,
      EquipmentShop::default_instance_,
      EquipmentShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipmentShop));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_OlEquipmentShop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Equip_descriptor_, &Equip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipPositionPool_descriptor_, &EquipPositionPool::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipLevelPool_descriptor_, &EquipLevelPool::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipNum_descriptor_, &EquipNum::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpecialEquip_descriptor_, &SpecialEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipmentShop_descriptor_, &EquipmentShop::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_OlEquipmentShop_2eproto() {
  delete Equip::default_instance_;
  delete Equip_reflection_;
  delete EquipPositionPool::default_instance_;
  delete EquipPositionPool_reflection_;
  delete EquipLevelPool::default_instance_;
  delete EquipLevelPool_reflection_;
  delete EquipNum::default_instance_;
  delete EquipNum_reflection_;
  delete SpecialEquip::default_instance_;
  delete SpecialEquip_reflection_;
  delete EquipmentShop::default_instance_;
  delete EquipmentShop_reflection_;
}

void protobuf_AddDesc_OlEquipmentShop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025OlEquipmentShop.proto\022\023EquipmentShopCo"
    "nfig\"@\n\005Equip\022\014\n\004eqid\030\001 \002(\r\022\014\n\004rate\030\002 \002("
    "\r\022\r\n\005price\030\003 \002(\r\022\014\n\004isjp\030\004 \002(\010\"L\n\021EquipP"
    "ositionPool\022\013\n\003pid\030\001 \002(\r\022*\n\006equips\030\002 \003(\013"
    "2\032.EquipmentShopConfig.Equip\"w\n\016EquipLev"
    "elPool\022\n\n\002id\030\001 \002(\r\022\r\n\005level\030\002 \002(\r\022\017\n\007jpp"
    "rice\030\003 \002(\r\0229\n\tpositions\030\004 \003(\0132&.Equipmen"
    "tShopConfig.EquipPositionPool\"%\n\010EquipNu"
    "m\022\014\n\004eqid\030\001 \002(\r\022\013\n\003num\030\002 \002(\r\"+\n\014SpecialE"
    "quip\022\r\n\005order\030\001 \003(\r\022\014\n\004iron\030\002 \003(\r\"\302\001\n\rEq"
    "uipmentShop\022\024\n\014clearCdPrice\030\001 \002(\r\0226\n\tlev"
    "elpool\030\002 \003(\0132#.EquipmentShopConfig.Equip"
    "LevelPool\022/\n\010eqid_num\030\003 \003(\0132\035.EquipmentS"
    "hopConfig.EquipNum\0222\n\007special\030\004 \002(\0132!.Eq"
    "uipmentShopConfig.SpecialEquip", 590);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OlEquipmentShop.proto", &protobuf_RegisterTypes);
  Equip::default_instance_ = new Equip();
  EquipPositionPool::default_instance_ = new EquipPositionPool();
  EquipLevelPool::default_instance_ = new EquipLevelPool();
  EquipNum::default_instance_ = new EquipNum();
  SpecialEquip::default_instance_ = new SpecialEquip();
  EquipmentShop::default_instance_ = new EquipmentShop();
  Equip::default_instance_->InitAsDefaultInstance();
  EquipPositionPool::default_instance_->InitAsDefaultInstance();
  EquipLevelPool::default_instance_->InitAsDefaultInstance();
  EquipNum::default_instance_->InitAsDefaultInstance();
  SpecialEquip::default_instance_->InitAsDefaultInstance();
  EquipmentShop::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_OlEquipmentShop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_OlEquipmentShop_2eproto {
  StaticDescriptorInitializer_OlEquipmentShop_2eproto() {
    protobuf_AddDesc_OlEquipmentShop_2eproto();
  }
} static_descriptor_initializer_OlEquipmentShop_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Equip::kEqidFieldNumber;
const int Equip::kRateFieldNumber;
const int Equip::kPriceFieldNumber;
const int Equip::kIsjpFieldNumber;
#endif  // !_MSC_VER

Equip::Equip()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.Equip)
}

void Equip::InitAsDefaultInstance() {
}

Equip::Equip(const Equip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.Equip)
}

void Equip::SharedCtor() {
  _cached_size_ = 0;
  eqid_ = 0u;
  rate_ = 0u;
  price_ = 0u;
  isjp_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Equip::~Equip() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.Equip)
  SharedDtor();
}

void Equip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Equip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Equip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Equip_descriptor_;
}

const Equip& Equip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

Equip* Equip::default_instance_ = NULL;

Equip* Equip::New() const {
  return new Equip;
}

void Equip::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Equip*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(eqid_, isjp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.Equip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 eqid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eqid_)));
          set_has_eqid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rate;
        break;
      }

      // required uint32 rate = 2;
      case 2: {
        if (tag == 16) {
         parse_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rate_)));
          set_has_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_price;
        break;
      }

      // required uint32 price = 3;
      case 3: {
        if (tag == 24) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_isjp;
        break;
      }

      // required bool isjp = 4;
      case 4: {
        if (tag == 32) {
         parse_isjp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isjp_)));
          set_has_isjp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.Equip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.Equip)
  return false;
#undef DO_
}

void Equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.Equip)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eqid(), output);
  }

  // required uint32 rate = 2;
  if (has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rate(), output);
  }

  // required uint32 price = 3;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->price(), output);
  }

  // required bool isjp = 4;
  if (has_isjp()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isjp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.Equip)
}

::google::protobuf::uint8* Equip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.Equip)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eqid(), target);
  }

  // required uint32 rate = 2;
  if (has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rate(), target);
  }

  // required uint32 price = 3;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->price(), target);
  }

  // required bool isjp = 4;
  if (has_isjp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isjp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.Equip)
  return target;
}

int Equip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 eqid = 1;
    if (has_eqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eqid());
    }

    // required uint32 rate = 2;
    if (has_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rate());
    }

    // required uint32 price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

    // required bool isjp = 4;
    if (has_isjp()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Equip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Equip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Equip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Equip::MergeFrom(const Equip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eqid()) {
      set_eqid(from.eqid());
    }
    if (from.has_rate()) {
      set_rate(from.rate());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_isjp()) {
      set_isjp(from.isjp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Equip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Equip::CopyFrom(const Equip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Equip::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Equip::Swap(Equip* other) {
  if (other != this) {
    std::swap(eqid_, other->eqid_);
    std::swap(rate_, other->rate_);
    std::swap(price_, other->price_);
    std::swap(isjp_, other->isjp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Equip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Equip_descriptor_;
  metadata.reflection = Equip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipPositionPool::kPidFieldNumber;
const int EquipPositionPool::kEquipsFieldNumber;
#endif  // !_MSC_VER

EquipPositionPool::EquipPositionPool()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.EquipPositionPool)
}

void EquipPositionPool::InitAsDefaultInstance() {
}

EquipPositionPool::EquipPositionPool(const EquipPositionPool& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.EquipPositionPool)
}

void EquipPositionPool::SharedCtor() {
  _cached_size_ = 0;
  pid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipPositionPool::~EquipPositionPool() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.EquipPositionPool)
  SharedDtor();
}

void EquipPositionPool::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipPositionPool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipPositionPool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipPositionPool_descriptor_;
}

const EquipPositionPool& EquipPositionPool::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

EquipPositionPool* EquipPositionPool::default_instance_ = NULL;

EquipPositionPool* EquipPositionPool::New() const {
  return new EquipPositionPool;
}

void EquipPositionPool::Clear() {
  pid_ = 0u;
  equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipPositionPool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.EquipPositionPool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equips;
        break;
      }

      // repeated .EquipmentShopConfig.Equip equips = 2;
      case 2: {
        if (tag == 18) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.EquipPositionPool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.EquipPositionPool)
  return false;
#undef DO_
}

void EquipPositionPool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.EquipPositionPool)
  // required uint32 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // repeated .EquipmentShopConfig.Equip equips = 2;
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equips(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.EquipPositionPool)
}

::google::protobuf::uint8* EquipPositionPool::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.EquipPositionPool)
  // required uint32 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // repeated .EquipmentShopConfig.Equip equips = 2;
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equips(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.EquipPositionPool)
  return target;
}

int EquipPositionPool::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  // repeated .EquipmentShopConfig.Equip equips = 2;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipPositionPool::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipPositionPool* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipPositionPool*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipPositionPool::MergeFrom(const EquipPositionPool& from) {
  GOOGLE_CHECK_NE(&from, this);
  equips_.MergeFrom(from.equips_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipPositionPool::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipPositionPool::CopyFrom(const EquipPositionPool& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipPositionPool::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->equips())) return false;
  return true;
}

void EquipPositionPool::Swap(EquipPositionPool* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    equips_.Swap(&other->equips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipPositionPool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipPositionPool_descriptor_;
  metadata.reflection = EquipPositionPool_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipLevelPool::kIdFieldNumber;
const int EquipLevelPool::kLevelFieldNumber;
const int EquipLevelPool::kJppriceFieldNumber;
const int EquipLevelPool::kPositionsFieldNumber;
#endif  // !_MSC_VER

EquipLevelPool::EquipLevelPool()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.EquipLevelPool)
}

void EquipLevelPool::InitAsDefaultInstance() {
}

EquipLevelPool::EquipLevelPool(const EquipLevelPool& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.EquipLevelPool)
}

void EquipLevelPool::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  jpprice_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipLevelPool::~EquipLevelPool() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.EquipLevelPool)
  SharedDtor();
}

void EquipLevelPool::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipLevelPool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipLevelPool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipLevelPool_descriptor_;
}

const EquipLevelPool& EquipLevelPool::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

EquipLevelPool* EquipLevelPool::default_instance_ = NULL;

EquipLevelPool* EquipLevelPool::New() const {
  return new EquipLevelPool;
}

void EquipLevelPool::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipLevelPool*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, level_);
    jpprice_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  positions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipLevelPool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.EquipLevelPool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_jpprice;
        break;
      }

      // required uint32 jpprice = 3;
      case 3: {
        if (tag == 24) {
         parse_jpprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jpprice_)));
          set_has_jpprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_positions;
        break;
      }

      // repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
      case 4: {
        if (tag == 34) {
         parse_positions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_positions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_positions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.EquipLevelPool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.EquipLevelPool)
  return false;
#undef DO_
}

void EquipLevelPool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.EquipLevelPool)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 jpprice = 3;
  if (has_jpprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->jpprice(), output);
  }

  // repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
  for (int i = 0; i < this->positions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->positions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.EquipLevelPool)
}

::google::protobuf::uint8* EquipLevelPool::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.EquipLevelPool)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 jpprice = 3;
  if (has_jpprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->jpprice(), target);
  }

  // repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
  for (int i = 0; i < this->positions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->positions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.EquipLevelPool)
  return target;
}

int EquipLevelPool::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 jpprice = 3;
    if (has_jpprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jpprice());
    }

  }
  // repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
  total_size += 1 * this->positions_size();
  for (int i = 0; i < this->positions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->positions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipLevelPool::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipLevelPool* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipLevelPool*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipLevelPool::MergeFrom(const EquipLevelPool& from) {
  GOOGLE_CHECK_NE(&from, this);
  positions_.MergeFrom(from.positions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_jpprice()) {
      set_jpprice(from.jpprice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipLevelPool::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipLevelPool::CopyFrom(const EquipLevelPool& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipLevelPool::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->positions())) return false;
  return true;
}

void EquipLevelPool::Swap(EquipLevelPool* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(jpprice_, other->jpprice_);
    positions_.Swap(&other->positions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipLevelPool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipLevelPool_descriptor_;
  metadata.reflection = EquipLevelPool_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipNum::kEqidFieldNumber;
const int EquipNum::kNumFieldNumber;
#endif  // !_MSC_VER

EquipNum::EquipNum()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.EquipNum)
}

void EquipNum::InitAsDefaultInstance() {
}

EquipNum::EquipNum(const EquipNum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.EquipNum)
}

void EquipNum::SharedCtor() {
  _cached_size_ = 0;
  eqid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipNum::~EquipNum() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.EquipNum)
  SharedDtor();
}

void EquipNum::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipNum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipNum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipNum_descriptor_;
}

const EquipNum& EquipNum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

EquipNum* EquipNum::default_instance_ = NULL;

EquipNum* EquipNum::New() const {
  return new EquipNum;
}

void EquipNum::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipNum*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(eqid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipNum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.EquipNum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 eqid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eqid_)));
          set_has_eqid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // required uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.EquipNum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.EquipNum)
  return false;
#undef DO_
}

void EquipNum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.EquipNum)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eqid(), output);
  }

  // required uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.EquipNum)
}

::google::protobuf::uint8* EquipNum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.EquipNum)
  // required uint32 eqid = 1;
  if (has_eqid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eqid(), target);
  }

  // required uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.EquipNum)
  return target;
}

int EquipNum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 eqid = 1;
    if (has_eqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eqid());
    }

    // required uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipNum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipNum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipNum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipNum::MergeFrom(const EquipNum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eqid()) {
      set_eqid(from.eqid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipNum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipNum::CopyFrom(const EquipNum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipNum::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EquipNum::Swap(EquipNum* other) {
  if (other != this) {
    std::swap(eqid_, other->eqid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipNum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipNum_descriptor_;
  metadata.reflection = EquipNum_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SpecialEquip::kOrderFieldNumber;
const int SpecialEquip::kIronFieldNumber;
#endif  // !_MSC_VER

SpecialEquip::SpecialEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.SpecialEquip)
}

void SpecialEquip::InitAsDefaultInstance() {
}

SpecialEquip::SpecialEquip(const SpecialEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.SpecialEquip)
}

void SpecialEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpecialEquip::~SpecialEquip() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.SpecialEquip)
  SharedDtor();
}

void SpecialEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SpecialEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecialEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpecialEquip_descriptor_;
}

const SpecialEquip& SpecialEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

SpecialEquip* SpecialEquip::default_instance_ = NULL;

SpecialEquip* SpecialEquip::New() const {
  return new SpecialEquip;
}

void SpecialEquip::Clear() {
  order_.Clear();
  iron_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpecialEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.SpecialEquip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 order = 1;
      case 1: {
        if (tag == 8) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_order())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_order())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_order;
        if (input->ExpectTag(16)) goto parse_iron;
        break;
      }

      // repeated uint32 iron = 2;
      case 2: {
        if (tag == 16) {
         parse_iron:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_iron())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_iron())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iron;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.SpecialEquip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.SpecialEquip)
  return false;
#undef DO_
}

void SpecialEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.SpecialEquip)
  // repeated uint32 order = 1;
  for (int i = 0; i < this->order_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->order(i), output);
  }

  // repeated uint32 iron = 2;
  for (int i = 0; i < this->iron_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->iron(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.SpecialEquip)
}

::google::protobuf::uint8* SpecialEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.SpecialEquip)
  // repeated uint32 order = 1;
  for (int i = 0; i < this->order_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->order(i), target);
  }

  // repeated uint32 iron = 2;
  for (int i = 0; i < this->iron_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->iron(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.SpecialEquip)
  return target;
}

int SpecialEquip::ByteSize() const {
  int total_size = 0;

  // repeated uint32 order = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->order_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->order(i));
    }
    total_size += 1 * this->order_size() + data_size;
  }

  // repeated uint32 iron = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->iron_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->iron(i));
    }
    total_size += 1 * this->iron_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecialEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpecialEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpecialEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpecialEquip::MergeFrom(const SpecialEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  order_.MergeFrom(from.order_);
  iron_.MergeFrom(from.iron_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpecialEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecialEquip::CopyFrom(const SpecialEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecialEquip::IsInitialized() const {

  return true;
}

void SpecialEquip::Swap(SpecialEquip* other) {
  if (other != this) {
    order_.Swap(&other->order_);
    iron_.Swap(&other->iron_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpecialEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpecialEquip_descriptor_;
  metadata.reflection = SpecialEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipmentShop::kClearCdPriceFieldNumber;
const int EquipmentShop::kLevelpoolFieldNumber;
const int EquipmentShop::kEqidNumFieldNumber;
const int EquipmentShop::kSpecialFieldNumber;
#endif  // !_MSC_VER

EquipmentShop::EquipmentShop()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipmentShopConfig.EquipmentShop)
}

void EquipmentShop::InitAsDefaultInstance() {
  special_ = const_cast< ::EquipmentShopConfig::SpecialEquip*>(&::EquipmentShopConfig::SpecialEquip::default_instance());
}

EquipmentShop::EquipmentShop(const EquipmentShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EquipmentShopConfig.EquipmentShop)
}

void EquipmentShop::SharedCtor() {
  _cached_size_ = 0;
  clearcdprice_ = 0u;
  special_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipmentShop::~EquipmentShop() {
  // @@protoc_insertion_point(destructor:EquipmentShopConfig.EquipmentShop)
  SharedDtor();
}

void EquipmentShop::SharedDtor() {
  if (this != default_instance_) {
    delete special_;
  }
}

void EquipmentShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipmentShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipmentShop_descriptor_;
}

const EquipmentShop& EquipmentShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OlEquipmentShop_2eproto();
  return *default_instance_;
}

EquipmentShop* EquipmentShop::default_instance_ = NULL;

EquipmentShop* EquipmentShop::New() const {
  return new EquipmentShop;
}

void EquipmentShop::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    clearcdprice_ = 0u;
    if (has_special()) {
      if (special_ != NULL) special_->::EquipmentShopConfig::SpecialEquip::Clear();
    }
  }
  levelpool_.Clear();
  eqid_num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipmentShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipmentShopConfig.EquipmentShop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 clearCdPrice = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clearcdprice_)));
          set_has_clearcdprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_levelpool;
        break;
      }

      // repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
      case 2: {
        if (tag == 18) {
         parse_levelpool:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_levelpool()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_levelpool;
        if (input->ExpectTag(26)) goto parse_eqid_num;
        break;
      }

      // repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
      case 3: {
        if (tag == 26) {
         parse_eqid_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_eqid_num()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_eqid_num;
        if (input->ExpectTag(34)) goto parse_special;
        break;
      }

      // required .EquipmentShopConfig.SpecialEquip special = 4;
      case 4: {
        if (tag == 34) {
         parse_special:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_special()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipmentShopConfig.EquipmentShop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipmentShopConfig.EquipmentShop)
  return false;
#undef DO_
}

void EquipmentShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipmentShopConfig.EquipmentShop)
  // required uint32 clearCdPrice = 1;
  if (has_clearcdprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->clearcdprice(), output);
  }

  // repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
  for (int i = 0; i < this->levelpool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->levelpool(i), output);
  }

  // repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
  for (int i = 0; i < this->eqid_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->eqid_num(i), output);
  }

  // required .EquipmentShopConfig.SpecialEquip special = 4;
  if (has_special()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->special(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipmentShopConfig.EquipmentShop)
}

::google::protobuf::uint8* EquipmentShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipmentShopConfig.EquipmentShop)
  // required uint32 clearCdPrice = 1;
  if (has_clearcdprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->clearcdprice(), target);
  }

  // repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
  for (int i = 0; i < this->levelpool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->levelpool(i), target);
  }

  // repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
  for (int i = 0; i < this->eqid_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->eqid_num(i), target);
  }

  // required .EquipmentShopConfig.SpecialEquip special = 4;
  if (has_special()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->special(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipmentShopConfig.EquipmentShop)
  return target;
}

int EquipmentShop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 clearCdPrice = 1;
    if (has_clearcdprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clearcdprice());
    }

    // required .EquipmentShopConfig.SpecialEquip special = 4;
    if (has_special()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->special());
    }

  }
  // repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
  total_size += 1 * this->levelpool_size();
  for (int i = 0; i < this->levelpool_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levelpool(i));
  }

  // repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
  total_size += 1 * this->eqid_num_size();
  for (int i = 0; i < this->eqid_num_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->eqid_num(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipmentShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipmentShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipmentShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipmentShop::MergeFrom(const EquipmentShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  levelpool_.MergeFrom(from.levelpool_);
  eqid_num_.MergeFrom(from.eqid_num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clearcdprice()) {
      set_clearcdprice(from.clearcdprice());
    }
    if (from.has_special()) {
      mutable_special()->::EquipmentShopConfig::SpecialEquip::MergeFrom(from.special());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipmentShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipmentShop::CopyFrom(const EquipmentShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentShop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->levelpool())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->eqid_num())) return false;
  return true;
}

void EquipmentShop::Swap(EquipmentShop* other) {
  if (other != this) {
    std::swap(clearcdprice_, other->clearcdprice_);
    levelpool_.Swap(&other->levelpool_);
    eqid_num_.Swap(&other->eqid_num_);
    std::swap(special_, other->special_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipmentShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipmentShop_descriptor_;
  metadata.reflection = EquipmentShop_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EquipmentShopConfig

// @@protoc_insertion_point(global_scope)
