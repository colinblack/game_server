// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VIPConfig.proto

#ifndef PROTOBUF_VIPConfig_2eproto__INCLUDED
#define PROTOBUF_VIPConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace VIPConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_VIPConfig_2eproto();
void protobuf_AssignDesc_VIPConfig_2eproto();
void protobuf_ShutdownFile_VIPConfig_2eproto();

class UVIPBasePower;
class UVIPLvlPower;
class UVIPItem;
class UVIP;

// ===================================================================

class UVIPBasePower : public ::google::protobuf::Message {
 public:
  UVIPBasePower();
  virtual ~UVIPBasePower();

  UVIPBasePower(const UVIPBasePower& from);

  inline UVIPBasePower& operator=(const UVIPBasePower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UVIPBasePower& default_instance();

  void Swap(UVIPBasePower* other);

  // implements Message ----------------------------------------------

  UVIPBasePower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UVIPBasePower& from);
  void MergeFrom(const UVIPBasePower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 integral_cnt = 1;
  inline int integral_cnt_size() const;
  inline void clear_integral_cnt();
  static const int kIntegralCntFieldNumber = 1;
  inline ::google::protobuf::uint32 integral_cnt(int index) const;
  inline void set_integral_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_integral_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      integral_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_integral_cnt();

  // repeated uint32 market_cnt = 2;
  inline int market_cnt_size() const;
  inline void clear_market_cnt();
  static const int kMarketCntFieldNumber = 2;
  inline ::google::protobuf::uint32 market_cnt(int index) const;
  inline void set_market_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_market_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      market_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_market_cnt();

  // repeated uint32 sacrifice_cnt = 3;
  inline int sacrifice_cnt_size() const;
  inline void clear_sacrifice_cnt();
  static const int kSacrificeCntFieldNumber = 3;
  inline ::google::protobuf::uint32 sacrifice_cnt(int index) const;
  inline void set_sacrifice_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_sacrifice_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sacrifice_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sacrifice_cnt();

  // repeated uint32 order_cnt = 4;
  inline int order_cnt_size() const;
  inline void clear_order_cnt();
  static const int kOrderCntFieldNumber = 4;
  inline ::google::protobuf::uint32 order_cnt(int index) const;
  inline void set_order_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_order_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      order_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_order_cnt();

  // repeated uint32 bmarket_add = 5;
  inline int bmarket_add_size() const;
  inline void clear_bmarket_add();
  static const int kBmarketAddFieldNumber = 5;
  inline ::google::protobuf::uint32 bmarket_add(int index) const;
  inline void set_bmarket_add(int index, ::google::protobuf::uint32 value);
  inline void add_bmarket_add(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bmarket_add() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bmarket_add();

  // repeated uint32 refresh_cnt = 6;
  inline int refresh_cnt_size() const;
  inline void clear_refresh_cnt();
  static const int kRefreshCntFieldNumber = 6;
  inline ::google::protobuf::uint32 refresh_cnt(int index) const;
  inline void set_refresh_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_refresh_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refresh_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refresh_cnt();

  // repeated uint32 market_add = 7;
  inline int market_add_size() const;
  inline void clear_market_add();
  static const int kMarketAddFieldNumber = 7;
  inline ::google::protobuf::uint32 market_add(int index) const;
  inline void set_market_add(int index, ::google::protobuf::uint32 value);
  inline void add_market_add(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      market_add() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_market_add();

  // repeated uint32 auto_build_cnt = 8;
  inline int auto_build_cnt_size() const;
  inline void clear_auto_build_cnt();
  static const int kAutoBuildCntFieldNumber = 8;
  inline ::google::protobuf::uint32 auto_build_cnt(int index) const;
  inline void set_auto_build_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_auto_build_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      auto_build_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_auto_build_cnt();

  // repeated uint32 order_limit = 9;
  inline int order_limit_size() const;
  inline void clear_order_limit();
  static const int kOrderLimitFieldNumber = 9;
  inline ::google::protobuf::uint32 order_limit(int index) const;
  inline void set_order_limit(int index, ::google::protobuf::uint32 value);
  inline void add_order_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      order_limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_order_limit();

  // repeated uint32 iron_add = 10;
  inline int iron_add_size() const;
  inline void clear_iron_add();
  static const int kIronAddFieldNumber = 10;
  inline ::google::protobuf::uint32 iron_add(int index) const;
  inline void set_iron_add(int index, ::google::protobuf::uint32 value);
  inline void add_iron_add(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      iron_add() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_iron_add();

  // @@protoc_insertion_point(class_scope:VIPConfig.UVIPBasePower)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > integral_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > market_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sacrifice_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > order_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bmarket_add_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refresh_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > market_add_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > auto_build_cnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > order_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > iron_add_;
  friend void  protobuf_AddDesc_VIPConfig_2eproto();
  friend void protobuf_AssignDesc_VIPConfig_2eproto();
  friend void protobuf_ShutdownFile_VIPConfig_2eproto();

  void InitAsDefaultInstance();
  static UVIPBasePower* default_instance_;
};
// -------------------------------------------------------------------

class UVIPLvlPower : public ::google::protobuf::Message {
 public:
  UVIPLvlPower();
  virtual ~UVIPLvlPower();

  UVIPLvlPower(const UVIPLvlPower& from);

  inline UVIPLvlPower& operator=(const UVIPLvlPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UVIPLvlPower& default_instance();

  void Swap(UVIPLvlPower* other);

  // implements Message ----------------------------------------------

  UVIPLvlPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UVIPLvlPower& from);
  void MergeFrom(const UVIPLvlPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 resource_yield_add = 1;
  inline bool has_resource_yield_add() const;
  inline void clear_resource_yield_add();
  static const int kResourceYieldAddFieldNumber = 1;
  inline ::google::protobuf::uint32 resource_yield_add() const;
  inline void set_resource_yield_add(::google::protobuf::uint32 value);

  // optional uint32 fight_exp_add = 2;
  inline bool has_fight_exp_add() const;
  inline void clear_fight_exp_add();
  static const int kFightExpAddFieldNumber = 2;
  inline ::google::protobuf::uint32 fight_exp_add() const;
  inline void set_fight_exp_add(::google::protobuf::uint32 value);

  // optional float polity_task_factor = 3;
  inline bool has_polity_task_factor() const;
  inline void clear_polity_task_factor();
  static const int kPolityTaskFactorFieldNumber = 3;
  inline float polity_task_factor() const;
  inline void set_polity_task_factor(float value);

  // repeated uint32 weapon_prob = 4;
  inline int weapon_prob_size() const;
  inline void clear_weapon_prob();
  static const int kWeaponProbFieldNumber = 4;
  inline ::google::protobuf::uint32 weapon_prob(int index) const;
  inline void set_weapon_prob(int index, ::google::protobuf::uint32 value);
  inline void add_weapon_prob(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      weapon_prob() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_weapon_prob();

  // optional uint32 storage_capacity_add = 5;
  inline bool has_storage_capacity_add() const;
  inline void clear_storage_capacity_add();
  static const int kStorageCapacityAddFieldNumber = 5;
  inline ::google::protobuf::uint32 storage_capacity_add() const;
  inline void set_storage_capacity_add(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VIPConfig.UVIPLvlPower)
 private:
  inline void set_has_resource_yield_add();
  inline void clear_has_resource_yield_add();
  inline void set_has_fight_exp_add();
  inline void clear_has_fight_exp_add();
  inline void set_has_polity_task_factor();
  inline void clear_has_polity_task_factor();
  inline void set_has_storage_capacity_add();
  inline void clear_has_storage_capacity_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 resource_yield_add_;
  ::google::protobuf::uint32 fight_exp_add_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > weapon_prob_;
  float polity_task_factor_;
  ::google::protobuf::uint32 storage_capacity_add_;
  friend void  protobuf_AddDesc_VIPConfig_2eproto();
  friend void protobuf_AssignDesc_VIPConfig_2eproto();
  friend void protobuf_ShutdownFile_VIPConfig_2eproto();

  void InitAsDefaultInstance();
  static UVIPLvlPower* default_instance_;
};
// -------------------------------------------------------------------

class UVIPItem : public ::google::protobuf::Message {
 public:
  UVIPItem();
  virtual ~UVIPItem();

  UVIPItem(const UVIPItem& from);

  inline UVIPItem& operator=(const UVIPItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UVIPItem& default_instance();

  void Swap(UVIPItem* other);

  // implements Message ----------------------------------------------

  UVIPItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UVIPItem& from);
  void MergeFrom(const UVIPItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cash = 1;
  inline int cash_size() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash(int index) const;
  inline void set_cash(int index, ::google::protobuf::uint32 value);
  inline void add_cash(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cash() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cash();

  // required .VIPConfig.UVIPBasePower base_power = 2;
  inline bool has_base_power() const;
  inline void clear_base_power();
  static const int kBasePowerFieldNumber = 2;
  inline const ::VIPConfig::UVIPBasePower& base_power() const;
  inline ::VIPConfig::UVIPBasePower* mutable_base_power();
  inline ::VIPConfig::UVIPBasePower* release_base_power();
  inline void set_allocated_base_power(::VIPConfig::UVIPBasePower* base_power);

  // repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
  inline int lvl_power_size() const;
  inline void clear_lvl_power();
  static const int kLvlPowerFieldNumber = 3;
  inline const ::VIPConfig::UVIPLvlPower& lvl_power(int index) const;
  inline ::VIPConfig::UVIPLvlPower* mutable_lvl_power(int index);
  inline ::VIPConfig::UVIPLvlPower* add_lvl_power();
  inline const ::google::protobuf::RepeatedPtrField< ::VIPConfig::UVIPLvlPower >&
      lvl_power() const;
  inline ::google::protobuf::RepeatedPtrField< ::VIPConfig::UVIPLvlPower >*
      mutable_lvl_power();

  // repeated .RewardConfig.Reward reward_1 = 4;
  inline int reward_1_size() const;
  inline void clear_reward_1();
  static const int kReward1FieldNumber = 4;
  inline const ::RewardConfig::Reward& reward_1(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_1(int index);
  inline ::RewardConfig::Reward* add_reward_1();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_1() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_1();

  // repeated .RewardConfig.Reward reward_2 = 5;
  inline int reward_2_size() const;
  inline void clear_reward_2();
  static const int kReward2FieldNumber = 5;
  inline const ::RewardConfig::Reward& reward_2(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_2(int index);
  inline ::RewardConfig::Reward* add_reward_2();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_2() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_2();

  // repeated .RewardConfig.Reward reward_3 = 6;
  inline int reward_3_size() const;
  inline void clear_reward_3();
  static const int kReward3FieldNumber = 6;
  inline const ::RewardConfig::Reward& reward_3(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_3(int index);
  inline ::RewardConfig::Reward* add_reward_3();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_3() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_3();

  // repeated .RewardConfig.Reward reward_4 = 7;
  inline int reward_4_size() const;
  inline void clear_reward_4();
  static const int kReward4FieldNumber = 7;
  inline const ::RewardConfig::Reward& reward_4(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_4(int index);
  inline ::RewardConfig::Reward* add_reward_4();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_4() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_4();

  // repeated .RewardConfig.Reward reward_5 = 8;
  inline int reward_5_size() const;
  inline void clear_reward_5();
  static const int kReward5FieldNumber = 8;
  inline const ::RewardConfig::Reward& reward_5(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_5(int index);
  inline ::RewardConfig::Reward* add_reward_5();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_5() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_5();

  // repeated .RewardConfig.Reward reward_6 = 9;
  inline int reward_6_size() const;
  inline void clear_reward_6();
  static const int kReward6FieldNumber = 9;
  inline const ::RewardConfig::Reward& reward_6(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_6(int index);
  inline ::RewardConfig::Reward* add_reward_6();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_6() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_6();

  // repeated .RewardConfig.Reward reward_7 = 10;
  inline int reward_7_size() const;
  inline void clear_reward_7();
  static const int kReward7FieldNumber = 10;
  inline const ::RewardConfig::Reward& reward_7(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_7(int index);
  inline ::RewardConfig::Reward* add_reward_7();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_7() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_7();

  // repeated .RewardConfig.Reward reward_8 = 11;
  inline int reward_8_size() const;
  inline void clear_reward_8();
  static const int kReward8FieldNumber = 11;
  inline const ::RewardConfig::Reward& reward_8(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_8(int index);
  inline ::RewardConfig::Reward* add_reward_8();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_8() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_8();

  // repeated .RewardConfig.Reward reward_9 = 12;
  inline int reward_9_size() const;
  inline void clear_reward_9();
  static const int kReward9FieldNumber = 12;
  inline const ::RewardConfig::Reward& reward_9(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_9(int index);
  inline ::RewardConfig::Reward* add_reward_9();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_9() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_9();

  // repeated .RewardConfig.Reward reward_10 = 13;
  inline int reward_10_size() const;
  inline void clear_reward_10();
  static const int kReward10FieldNumber = 13;
  inline const ::RewardConfig::Reward& reward_10(int index) const;
  inline ::RewardConfig::Reward* mutable_reward_10(int index);
  inline ::RewardConfig::Reward* add_reward_10();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      reward_10() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_reward_10();

  // @@protoc_insertion_point(class_scope:VIPConfig.UVIPItem)
 private:
  inline void set_has_base_power();
  inline void clear_has_base_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cash_;
  ::VIPConfig::UVIPBasePower* base_power_;
  ::google::protobuf::RepeatedPtrField< ::VIPConfig::UVIPLvlPower > lvl_power_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_1_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_2_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_3_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_4_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_5_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_6_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_7_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_8_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_9_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > reward_10_;
  friend void  protobuf_AddDesc_VIPConfig_2eproto();
  friend void protobuf_AssignDesc_VIPConfig_2eproto();
  friend void protobuf_ShutdownFile_VIPConfig_2eproto();

  void InitAsDefaultInstance();
  static UVIPItem* default_instance_;
};
// -------------------------------------------------------------------

class UVIP : public ::google::protobuf::Message {
 public:
  UVIP();
  virtual ~UVIP();

  UVIP(const UVIP& from);

  inline UVIP& operator=(const UVIP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UVIP& default_instance();

  void Swap(UVIP* other);

  // implements Message ----------------------------------------------

  UVIP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UVIP& from);
  void MergeFrom(const UVIP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .VIPConfig.UVIPItem vip = 1;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 1;
  inline const ::VIPConfig::UVIPItem& vip() const;
  inline ::VIPConfig::UVIPItem* mutable_vip();
  inline ::VIPConfig::UVIPItem* release_vip();
  inline void set_allocated_vip(::VIPConfig::UVIPItem* vip);

  // @@protoc_insertion_point(class_scope:VIPConfig.UVIP)
 private:
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::VIPConfig::UVIPItem* vip_;
  friend void  protobuf_AddDesc_VIPConfig_2eproto();
  friend void protobuf_AssignDesc_VIPConfig_2eproto();
  friend void protobuf_ShutdownFile_VIPConfig_2eproto();

  void InitAsDefaultInstance();
  static UVIP* default_instance_;
};
// ===================================================================


// ===================================================================

// UVIPBasePower

// repeated uint32 integral_cnt = 1;
inline int UVIPBasePower::integral_cnt_size() const {
  return integral_cnt_.size();
}
inline void UVIPBasePower::clear_integral_cnt() {
  integral_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::integral_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.integral_cnt)
  return integral_cnt_.Get(index);
}
inline void UVIPBasePower::set_integral_cnt(int index, ::google::protobuf::uint32 value) {
  integral_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.integral_cnt)
}
inline void UVIPBasePower::add_integral_cnt(::google::protobuf::uint32 value) {
  integral_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.integral_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::integral_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.integral_cnt)
  return integral_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_integral_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.integral_cnt)
  return &integral_cnt_;
}

// repeated uint32 market_cnt = 2;
inline int UVIPBasePower::market_cnt_size() const {
  return market_cnt_.size();
}
inline void UVIPBasePower::clear_market_cnt() {
  market_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::market_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.market_cnt)
  return market_cnt_.Get(index);
}
inline void UVIPBasePower::set_market_cnt(int index, ::google::protobuf::uint32 value) {
  market_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.market_cnt)
}
inline void UVIPBasePower::add_market_cnt(::google::protobuf::uint32 value) {
  market_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.market_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::market_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.market_cnt)
  return market_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_market_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.market_cnt)
  return &market_cnt_;
}

// repeated uint32 sacrifice_cnt = 3;
inline int UVIPBasePower::sacrifice_cnt_size() const {
  return sacrifice_cnt_.size();
}
inline void UVIPBasePower::clear_sacrifice_cnt() {
  sacrifice_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::sacrifice_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.sacrifice_cnt)
  return sacrifice_cnt_.Get(index);
}
inline void UVIPBasePower::set_sacrifice_cnt(int index, ::google::protobuf::uint32 value) {
  sacrifice_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.sacrifice_cnt)
}
inline void UVIPBasePower::add_sacrifice_cnt(::google::protobuf::uint32 value) {
  sacrifice_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.sacrifice_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::sacrifice_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.sacrifice_cnt)
  return sacrifice_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_sacrifice_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.sacrifice_cnt)
  return &sacrifice_cnt_;
}

// repeated uint32 order_cnt = 4;
inline int UVIPBasePower::order_cnt_size() const {
  return order_cnt_.size();
}
inline void UVIPBasePower::clear_order_cnt() {
  order_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::order_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.order_cnt)
  return order_cnt_.Get(index);
}
inline void UVIPBasePower::set_order_cnt(int index, ::google::protobuf::uint32 value) {
  order_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.order_cnt)
}
inline void UVIPBasePower::add_order_cnt(::google::protobuf::uint32 value) {
  order_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.order_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::order_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.order_cnt)
  return order_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_order_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.order_cnt)
  return &order_cnt_;
}

// repeated uint32 bmarket_add = 5;
inline int UVIPBasePower::bmarket_add_size() const {
  return bmarket_add_.size();
}
inline void UVIPBasePower::clear_bmarket_add() {
  bmarket_add_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::bmarket_add(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.bmarket_add)
  return bmarket_add_.Get(index);
}
inline void UVIPBasePower::set_bmarket_add(int index, ::google::protobuf::uint32 value) {
  bmarket_add_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.bmarket_add)
}
inline void UVIPBasePower::add_bmarket_add(::google::protobuf::uint32 value) {
  bmarket_add_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.bmarket_add)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::bmarket_add() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.bmarket_add)
  return bmarket_add_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_bmarket_add() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.bmarket_add)
  return &bmarket_add_;
}

// repeated uint32 refresh_cnt = 6;
inline int UVIPBasePower::refresh_cnt_size() const {
  return refresh_cnt_.size();
}
inline void UVIPBasePower::clear_refresh_cnt() {
  refresh_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::refresh_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.refresh_cnt)
  return refresh_cnt_.Get(index);
}
inline void UVIPBasePower::set_refresh_cnt(int index, ::google::protobuf::uint32 value) {
  refresh_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.refresh_cnt)
}
inline void UVIPBasePower::add_refresh_cnt(::google::protobuf::uint32 value) {
  refresh_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.refresh_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::refresh_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.refresh_cnt)
  return refresh_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_refresh_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.refresh_cnt)
  return &refresh_cnt_;
}

// repeated uint32 market_add = 7;
inline int UVIPBasePower::market_add_size() const {
  return market_add_.size();
}
inline void UVIPBasePower::clear_market_add() {
  market_add_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::market_add(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.market_add)
  return market_add_.Get(index);
}
inline void UVIPBasePower::set_market_add(int index, ::google::protobuf::uint32 value) {
  market_add_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.market_add)
}
inline void UVIPBasePower::add_market_add(::google::protobuf::uint32 value) {
  market_add_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.market_add)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::market_add() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.market_add)
  return market_add_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_market_add() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.market_add)
  return &market_add_;
}

// repeated uint32 auto_build_cnt = 8;
inline int UVIPBasePower::auto_build_cnt_size() const {
  return auto_build_cnt_.size();
}
inline void UVIPBasePower::clear_auto_build_cnt() {
  auto_build_cnt_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::auto_build_cnt(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.auto_build_cnt)
  return auto_build_cnt_.Get(index);
}
inline void UVIPBasePower::set_auto_build_cnt(int index, ::google::protobuf::uint32 value) {
  auto_build_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.auto_build_cnt)
}
inline void UVIPBasePower::add_auto_build_cnt(::google::protobuf::uint32 value) {
  auto_build_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.auto_build_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::auto_build_cnt() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.auto_build_cnt)
  return auto_build_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_auto_build_cnt() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.auto_build_cnt)
  return &auto_build_cnt_;
}

// repeated uint32 order_limit = 9;
inline int UVIPBasePower::order_limit_size() const {
  return order_limit_.size();
}
inline void UVIPBasePower::clear_order_limit() {
  order_limit_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::order_limit(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.order_limit)
  return order_limit_.Get(index);
}
inline void UVIPBasePower::set_order_limit(int index, ::google::protobuf::uint32 value) {
  order_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.order_limit)
}
inline void UVIPBasePower::add_order_limit(::google::protobuf::uint32 value) {
  order_limit_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.order_limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::order_limit() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.order_limit)
  return order_limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_order_limit() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.order_limit)
  return &order_limit_;
}

// repeated uint32 iron_add = 10;
inline int UVIPBasePower::iron_add_size() const {
  return iron_add_.size();
}
inline void UVIPBasePower::clear_iron_add() {
  iron_add_.Clear();
}
inline ::google::protobuf::uint32 UVIPBasePower::iron_add(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPBasePower.iron_add)
  return iron_add_.Get(index);
}
inline void UVIPBasePower::set_iron_add(int index, ::google::protobuf::uint32 value) {
  iron_add_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPBasePower.iron_add)
}
inline void UVIPBasePower::add_iron_add(::google::protobuf::uint32 value) {
  iron_add_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPBasePower.iron_add)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPBasePower::iron_add() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPBasePower.iron_add)
  return iron_add_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPBasePower::mutable_iron_add() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPBasePower.iron_add)
  return &iron_add_;
}

// -------------------------------------------------------------------

// UVIPLvlPower

// optional uint32 resource_yield_add = 1;
inline bool UVIPLvlPower::has_resource_yield_add() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UVIPLvlPower::set_has_resource_yield_add() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UVIPLvlPower::clear_has_resource_yield_add() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UVIPLvlPower::clear_resource_yield_add() {
  resource_yield_add_ = 0u;
  clear_has_resource_yield_add();
}
inline ::google::protobuf::uint32 UVIPLvlPower::resource_yield_add() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPLvlPower.resource_yield_add)
  return resource_yield_add_;
}
inline void UVIPLvlPower::set_resource_yield_add(::google::protobuf::uint32 value) {
  set_has_resource_yield_add();
  resource_yield_add_ = value;
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPLvlPower.resource_yield_add)
}

// optional uint32 fight_exp_add = 2;
inline bool UVIPLvlPower::has_fight_exp_add() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UVIPLvlPower::set_has_fight_exp_add() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UVIPLvlPower::clear_has_fight_exp_add() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UVIPLvlPower::clear_fight_exp_add() {
  fight_exp_add_ = 0u;
  clear_has_fight_exp_add();
}
inline ::google::protobuf::uint32 UVIPLvlPower::fight_exp_add() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPLvlPower.fight_exp_add)
  return fight_exp_add_;
}
inline void UVIPLvlPower::set_fight_exp_add(::google::protobuf::uint32 value) {
  set_has_fight_exp_add();
  fight_exp_add_ = value;
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPLvlPower.fight_exp_add)
}

// optional float polity_task_factor = 3;
inline bool UVIPLvlPower::has_polity_task_factor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UVIPLvlPower::set_has_polity_task_factor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UVIPLvlPower::clear_has_polity_task_factor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UVIPLvlPower::clear_polity_task_factor() {
  polity_task_factor_ = 0;
  clear_has_polity_task_factor();
}
inline float UVIPLvlPower::polity_task_factor() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPLvlPower.polity_task_factor)
  return polity_task_factor_;
}
inline void UVIPLvlPower::set_polity_task_factor(float value) {
  set_has_polity_task_factor();
  polity_task_factor_ = value;
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPLvlPower.polity_task_factor)
}

// repeated uint32 weapon_prob = 4;
inline int UVIPLvlPower::weapon_prob_size() const {
  return weapon_prob_.size();
}
inline void UVIPLvlPower::clear_weapon_prob() {
  weapon_prob_.Clear();
}
inline ::google::protobuf::uint32 UVIPLvlPower::weapon_prob(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPLvlPower.weapon_prob)
  return weapon_prob_.Get(index);
}
inline void UVIPLvlPower::set_weapon_prob(int index, ::google::protobuf::uint32 value) {
  weapon_prob_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPLvlPower.weapon_prob)
}
inline void UVIPLvlPower::add_weapon_prob(::google::protobuf::uint32 value) {
  weapon_prob_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPLvlPower.weapon_prob)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPLvlPower::weapon_prob() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPLvlPower.weapon_prob)
  return weapon_prob_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPLvlPower::mutable_weapon_prob() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPLvlPower.weapon_prob)
  return &weapon_prob_;
}

// optional uint32 storage_capacity_add = 5;
inline bool UVIPLvlPower::has_storage_capacity_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UVIPLvlPower::set_has_storage_capacity_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UVIPLvlPower::clear_has_storage_capacity_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UVIPLvlPower::clear_storage_capacity_add() {
  storage_capacity_add_ = 0u;
  clear_has_storage_capacity_add();
}
inline ::google::protobuf::uint32 UVIPLvlPower::storage_capacity_add() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPLvlPower.storage_capacity_add)
  return storage_capacity_add_;
}
inline void UVIPLvlPower::set_storage_capacity_add(::google::protobuf::uint32 value) {
  set_has_storage_capacity_add();
  storage_capacity_add_ = value;
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPLvlPower.storage_capacity_add)
}

// -------------------------------------------------------------------

// UVIPItem

// repeated uint32 cash = 1;
inline int UVIPItem::cash_size() const {
  return cash_.size();
}
inline void UVIPItem::clear_cash() {
  cash_.Clear();
}
inline ::google::protobuf::uint32 UVIPItem::cash(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.cash)
  return cash_.Get(index);
}
inline void UVIPItem::set_cash(int index, ::google::protobuf::uint32 value) {
  cash_.Set(index, value);
  // @@protoc_insertion_point(field_set:VIPConfig.UVIPItem.cash)
}
inline void UVIPItem::add_cash(::google::protobuf::uint32 value) {
  cash_.Add(value);
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.cash)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UVIPItem::cash() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.cash)
  return cash_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UVIPItem::mutable_cash() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.cash)
  return &cash_;
}

// required .VIPConfig.UVIPBasePower base_power = 2;
inline bool UVIPItem::has_base_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UVIPItem::set_has_base_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UVIPItem::clear_has_base_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UVIPItem::clear_base_power() {
  if (base_power_ != NULL) base_power_->::VIPConfig::UVIPBasePower::Clear();
  clear_has_base_power();
}
inline const ::VIPConfig::UVIPBasePower& UVIPItem::base_power() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.base_power)
  return base_power_ != NULL ? *base_power_ : *default_instance_->base_power_;
}
inline ::VIPConfig::UVIPBasePower* UVIPItem::mutable_base_power() {
  set_has_base_power();
  if (base_power_ == NULL) base_power_ = new ::VIPConfig::UVIPBasePower;
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.base_power)
  return base_power_;
}
inline ::VIPConfig::UVIPBasePower* UVIPItem::release_base_power() {
  clear_has_base_power();
  ::VIPConfig::UVIPBasePower* temp = base_power_;
  base_power_ = NULL;
  return temp;
}
inline void UVIPItem::set_allocated_base_power(::VIPConfig::UVIPBasePower* base_power) {
  delete base_power_;
  base_power_ = base_power;
  if (base_power) {
    set_has_base_power();
  } else {
    clear_has_base_power();
  }
  // @@protoc_insertion_point(field_set_allocated:VIPConfig.UVIPItem.base_power)
}

// repeated .VIPConfig.UVIPLvlPower lvl_power = 3;
inline int UVIPItem::lvl_power_size() const {
  return lvl_power_.size();
}
inline void UVIPItem::clear_lvl_power() {
  lvl_power_.Clear();
}
inline const ::VIPConfig::UVIPLvlPower& UVIPItem::lvl_power(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.lvl_power)
  return lvl_power_.Get(index);
}
inline ::VIPConfig::UVIPLvlPower* UVIPItem::mutable_lvl_power(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.lvl_power)
  return lvl_power_.Mutable(index);
}
inline ::VIPConfig::UVIPLvlPower* UVIPItem::add_lvl_power() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.lvl_power)
  return lvl_power_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VIPConfig::UVIPLvlPower >&
UVIPItem::lvl_power() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.lvl_power)
  return lvl_power_;
}
inline ::google::protobuf::RepeatedPtrField< ::VIPConfig::UVIPLvlPower >*
UVIPItem::mutable_lvl_power() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.lvl_power)
  return &lvl_power_;
}

// repeated .RewardConfig.Reward reward_1 = 4;
inline int UVIPItem::reward_1_size() const {
  return reward_1_.size();
}
inline void UVIPItem::clear_reward_1() {
  reward_1_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_1(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_1)
  return reward_1_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_1(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_1)
  return reward_1_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_1() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_1)
  return reward_1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_1() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_1)
  return reward_1_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_1() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_1)
  return &reward_1_;
}

// repeated .RewardConfig.Reward reward_2 = 5;
inline int UVIPItem::reward_2_size() const {
  return reward_2_.size();
}
inline void UVIPItem::clear_reward_2() {
  reward_2_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_2(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_2)
  return reward_2_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_2(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_2)
  return reward_2_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_2() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_2)
  return reward_2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_2() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_2)
  return reward_2_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_2() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_2)
  return &reward_2_;
}

// repeated .RewardConfig.Reward reward_3 = 6;
inline int UVIPItem::reward_3_size() const {
  return reward_3_.size();
}
inline void UVIPItem::clear_reward_3() {
  reward_3_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_3(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_3)
  return reward_3_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_3(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_3)
  return reward_3_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_3() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_3)
  return reward_3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_3() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_3)
  return reward_3_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_3() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_3)
  return &reward_3_;
}

// repeated .RewardConfig.Reward reward_4 = 7;
inline int UVIPItem::reward_4_size() const {
  return reward_4_.size();
}
inline void UVIPItem::clear_reward_4() {
  reward_4_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_4(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_4)
  return reward_4_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_4(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_4)
  return reward_4_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_4() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_4)
  return reward_4_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_4() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_4)
  return reward_4_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_4() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_4)
  return &reward_4_;
}

// repeated .RewardConfig.Reward reward_5 = 8;
inline int UVIPItem::reward_5_size() const {
  return reward_5_.size();
}
inline void UVIPItem::clear_reward_5() {
  reward_5_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_5(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_5)
  return reward_5_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_5(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_5)
  return reward_5_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_5() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_5)
  return reward_5_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_5() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_5)
  return reward_5_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_5() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_5)
  return &reward_5_;
}

// repeated .RewardConfig.Reward reward_6 = 9;
inline int UVIPItem::reward_6_size() const {
  return reward_6_.size();
}
inline void UVIPItem::clear_reward_6() {
  reward_6_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_6(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_6)
  return reward_6_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_6(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_6)
  return reward_6_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_6() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_6)
  return reward_6_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_6() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_6)
  return reward_6_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_6() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_6)
  return &reward_6_;
}

// repeated .RewardConfig.Reward reward_7 = 10;
inline int UVIPItem::reward_7_size() const {
  return reward_7_.size();
}
inline void UVIPItem::clear_reward_7() {
  reward_7_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_7(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_7)
  return reward_7_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_7(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_7)
  return reward_7_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_7() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_7)
  return reward_7_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_7() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_7)
  return reward_7_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_7() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_7)
  return &reward_7_;
}

// repeated .RewardConfig.Reward reward_8 = 11;
inline int UVIPItem::reward_8_size() const {
  return reward_8_.size();
}
inline void UVIPItem::clear_reward_8() {
  reward_8_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_8(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_8)
  return reward_8_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_8(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_8)
  return reward_8_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_8() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_8)
  return reward_8_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_8() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_8)
  return reward_8_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_8() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_8)
  return &reward_8_;
}

// repeated .RewardConfig.Reward reward_9 = 12;
inline int UVIPItem::reward_9_size() const {
  return reward_9_.size();
}
inline void UVIPItem::clear_reward_9() {
  reward_9_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_9(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_9)
  return reward_9_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_9(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_9)
  return reward_9_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_9() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_9)
  return reward_9_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_9() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_9)
  return reward_9_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_9() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_9)
  return &reward_9_;
}

// repeated .RewardConfig.Reward reward_10 = 13;
inline int UVIPItem::reward_10_size() const {
  return reward_10_.size();
}
inline void UVIPItem::clear_reward_10() {
  reward_10_.Clear();
}
inline const ::RewardConfig::Reward& UVIPItem::reward_10(int index) const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIPItem.reward_10)
  return reward_10_.Get(index);
}
inline ::RewardConfig::Reward* UVIPItem::mutable_reward_10(int index) {
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIPItem.reward_10)
  return reward_10_.Mutable(index);
}
inline ::RewardConfig::Reward* UVIPItem::add_reward_10() {
  // @@protoc_insertion_point(field_add:VIPConfig.UVIPItem.reward_10)
  return reward_10_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
UVIPItem::reward_10() const {
  // @@protoc_insertion_point(field_list:VIPConfig.UVIPItem.reward_10)
  return reward_10_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
UVIPItem::mutable_reward_10() {
  // @@protoc_insertion_point(field_mutable_list:VIPConfig.UVIPItem.reward_10)
  return &reward_10_;
}

// -------------------------------------------------------------------

// UVIP

// required .VIPConfig.UVIPItem vip = 1;
inline bool UVIP::has_vip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UVIP::set_has_vip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UVIP::clear_has_vip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UVIP::clear_vip() {
  if (vip_ != NULL) vip_->::VIPConfig::UVIPItem::Clear();
  clear_has_vip();
}
inline const ::VIPConfig::UVIPItem& UVIP::vip() const {
  // @@protoc_insertion_point(field_get:VIPConfig.UVIP.vip)
  return vip_ != NULL ? *vip_ : *default_instance_->vip_;
}
inline ::VIPConfig::UVIPItem* UVIP::mutable_vip() {
  set_has_vip();
  if (vip_ == NULL) vip_ = new ::VIPConfig::UVIPItem;
  // @@protoc_insertion_point(field_mutable:VIPConfig.UVIP.vip)
  return vip_;
}
inline ::VIPConfig::UVIPItem* UVIP::release_vip() {
  clear_has_vip();
  ::VIPConfig::UVIPItem* temp = vip_;
  vip_ = NULL;
  return temp;
}
inline void UVIP::set_allocated_vip(::VIPConfig::UVIPItem* vip) {
  delete vip_;
  vip_ = vip;
  if (vip) {
    set_has_vip();
  } else {
    clear_has_vip();
  }
  // @@protoc_insertion_point(field_set_allocated:VIPConfig.UVIP.vip)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace VIPConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VIPConfig_2eproto__INCLUDED
