// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ComponentConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ComponentConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ComponentConfig {

namespace {

const ::google::protobuf::Descriptor* Product_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Product_reflection_ = NULL;
const ::google::protobuf::Descriptor* Produce_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Produce_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentProduce_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentProduce_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelCost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelCost_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentUpgrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentUpgrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharacterObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharacterObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentProps_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentProps_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Component_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Component_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ComponentConfig_2eproto() {
  protobuf_AddDesc_ComponentConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ComponentConfig.proto");
  GOOGLE_CHECK(file != NULL);
  Product_descriptor_ = file->message_type(0);
  static const int Product_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, compid_),
  };
  Product_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Product_descriptor_,
      Product::default_instance_,
      Product_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Product));
  Produce_descriptor_ = file->message_type(1);
  static const int Produce_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, nextrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, product_),
  };
  Produce_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Produce_descriptor_,
      Produce::default_instance_,
      Produce_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Produce, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Produce));
  ComponentProduce_descriptor_ = file->message_type(2);
  static const int ComponentProduce_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProduce, cash_produce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProduce, common_),
  };
  ComponentProduce_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentProduce_descriptor_,
      ComponentProduce::default_instance_,
      ComponentProduce_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProduce, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProduce, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentProduce));
  ComponentBase_descriptor_ = file->message_type(3);
  static const int ComponentBase_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, compid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, character_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, master_),
  };
  ComponentBase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentBase_descriptor_,
      ComponentBase::default_instance_,
      ComponentBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentBase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentBase));
  ComponentExp_descriptor_ = file->message_type(4);
  static const int ComponentExp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExp, base_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExp, exp_level_),
  };
  ComponentExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentExp_descriptor_,
      ComponentExp::default_instance_,
      ComponentExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentExp));
  LevelCost_descriptor_ = file->message_type(5);
  static const int LevelCost_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelCost, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelCost, wood_),
  };
  LevelCost_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LevelCost_descriptor_,
      LevelCost::default_instance_,
      LevelCost_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelCost, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelCost, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LevelCost));
  ComponentUpgrade_descriptor_ = file->message_type(6);
  static const int ComponentUpgrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentUpgrade, level_cost_),
  };
  ComponentUpgrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentUpgrade_descriptor_,
      ComponentUpgrade::default_instance_,
      ComponentUpgrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentUpgrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentUpgrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentUpgrade));
  LevelValue_descriptor_ = file->message_type(7);
  static const int LevelValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelValue, value_),
  };
  LevelValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LevelValue_descriptor_,
      LevelValue::default_instance_,
      LevelValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LevelValue));
  ComponentProperty_descriptor_ = file->message_type(8);
  static const int ComponentProperty_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProperty, master_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProperty, slave_),
  };
  ComponentProperty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentProperty_descriptor_,
      ComponentProperty::default_instance_,
      ComponentProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProperty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProperty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentProperty));
  CharacterObject_descriptor_ = file->message_type(9);
  static const int CharacterObject_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, character_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, component_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, component_upgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, component_property_),
  };
  CharacterObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CharacterObject_descriptor_,
      CharacterObject::default_instance_,
      CharacterObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CharacterObject));
  ComponentProps_descriptor_ = file->message_type(10);
  static const int ComponentProps_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, compid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, wood_),
  };
  ComponentProps_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentProps_descriptor_,
      ComponentProps::default_instance_,
      ComponentProps_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentProps, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentProps));
  ComponentItem_descriptor_ = file->message_type(11);
  static const int ComponentItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, compont_produce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, component_base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, max_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, component_unlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, character_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, component_props_),
  };
  ComponentItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentItem_descriptor_,
      ComponentItem::default_instance_,
      ComponentItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentItem));
  Component_descriptor_ = file->message_type(12);
  static const int Component_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, component_),
  };
  Component_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Component_descriptor_,
      Component::default_instance_,
      Component_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Component));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ComponentConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Product_descriptor_, &Product::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Produce_descriptor_, &Produce::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentProduce_descriptor_, &ComponentProduce::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentBase_descriptor_, &ComponentBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentExp_descriptor_, &ComponentExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LevelCost_descriptor_, &LevelCost::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentUpgrade_descriptor_, &ComponentUpgrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LevelValue_descriptor_, &LevelValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentProperty_descriptor_, &ComponentProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CharacterObject_descriptor_, &CharacterObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentProps_descriptor_, &ComponentProps::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentItem_descriptor_, &ComponentItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Component_descriptor_, &Component::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ComponentConfig_2eproto() {
  delete Product::default_instance_;
  delete Product_reflection_;
  delete Produce::default_instance_;
  delete Produce_reflection_;
  delete ComponentProduce::default_instance_;
  delete ComponentProduce_reflection_;
  delete ComponentBase::default_instance_;
  delete ComponentBase_reflection_;
  delete ComponentExp::default_instance_;
  delete ComponentExp_reflection_;
  delete LevelCost::default_instance_;
  delete LevelCost_reflection_;
  delete ComponentUpgrade::default_instance_;
  delete ComponentUpgrade_reflection_;
  delete LevelValue::default_instance_;
  delete LevelValue_reflection_;
  delete ComponentProperty::default_instance_;
  delete ComponentProperty_reflection_;
  delete CharacterObject::default_instance_;
  delete CharacterObject_reflection_;
  delete ComponentProps::default_instance_;
  delete ComponentProps_reflection_;
  delete ComponentItem::default_instance_;
  delete ComponentItem_reflection_;
  delete Component::default_instance_;
  delete Component_reflection_;
}

void protobuf_AddDesc_ComponentConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ComponentConfig.proto\022\017ComponentConfig"
    "\"9\n\007Product\022\014\n\004rate\030\001 \002(\r\022\020\n\010material\030\002 "
    "\001(\r\022\016\n\006compid\030\003 \001(\r\"c\n\007Produce\022\r\n\005level\030"
    "\001 \002(\r\022\014\n\004cost\030\002 \002(\r\022\020\n\010nextrate\030\003 \002(\r\022)\n"
    "\007product\030\004 \003(\0132\030.ComponentConfig.Product"
    "\"l\n\020ComponentProduce\022.\n\014cash_produce\030\001 \003"
    "(\0132\030.ComponentConfig.Produce\022(\n\006common\030\002"
    " \003(\0132\030.ComponentConfig.Produce\"P\n\rCompon"
    "entBase\022\016\n\006compid\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\021\n"
    "\tcharacter\030\003 \002(\r\022\016\n\006master\030\004 \001(\r\"3\n\014Comp"
    "onentExp\022\020\n\010base_exp\030\001 \002(\r\022\021\n\texp_level\030"
    "\002 \003(\r\"\'\n\tLevelCost\022\014\n\004coin\030\001 \002(\r\022\014\n\004wood"
    "\030\002 \002(\r\"B\n\020ComponentUpgrade\022.\n\nlevel_cost"
    "\030\001 \003(\0132\032.ComponentConfig.LevelCost\"\033\n\nLe"
    "velValue\022\r\n\005value\030\001 \003(\001\"l\n\021ComponentProp"
    "erty\022+\n\006master\030\001 \003(\0132\033.ComponentConfig.L"
    "evelValue\022*\n\005slave\030\002 \003(\0132\033.ComponentConf"
    "ig.LevelValue\"\330\001\n\017CharacterObject\022\021\n\tcha"
    "racter\030\001 \002(\r\0224\n\rcomponent_exp\030\002 \002(\0132\035.Co"
    "mponentConfig.ComponentExp\022<\n\021component_"
    "upgrade\030\003 \002(\0132!.ComponentConfig.Componen"
    "tUpgrade\022>\n\022component_property\030\004 \002(\0132\".C"
    "omponentConfig.ComponentProperty\"I\n\016Comp"
    "onentProps\022\016\n\006compid\030\001 \002(\r\022\013\n\003exp\030\002 \002(\r\022"
    "\014\n\004coin\030\003 \002(\r\022\014\n\004wood\030\004 \002(\r\"\247\002\n\rComponen"
    "tItem\022:\n\017compont_produce\030\001 \002(\0132!.Compone"
    "ntConfig.ComponentProduce\0226\n\016component_b"
    "ase\030\002 \003(\0132\036.ComponentConfig.ComponentBas"
    "e\022\021\n\tmax_level\030\003 \002(\r\022\030\n\020component_unlock"
    "\030\004 \003(\r\022;\n\021character_objects\030\005 \003(\0132 .Comp"
    "onentConfig.CharacterObject\0228\n\017component"
    "_props\030\006 \003(\0132\037.ComponentConfig.Component"
    "Props\">\n\tComponent\0221\n\tcomponent\030\001 \002(\0132\036."
    "ComponentConfig.ComponentItem", 1349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ComponentConfig.proto", &protobuf_RegisterTypes);
  Product::default_instance_ = new Product();
  Produce::default_instance_ = new Produce();
  ComponentProduce::default_instance_ = new ComponentProduce();
  ComponentBase::default_instance_ = new ComponentBase();
  ComponentExp::default_instance_ = new ComponentExp();
  LevelCost::default_instance_ = new LevelCost();
  ComponentUpgrade::default_instance_ = new ComponentUpgrade();
  LevelValue::default_instance_ = new LevelValue();
  ComponentProperty::default_instance_ = new ComponentProperty();
  CharacterObject::default_instance_ = new CharacterObject();
  ComponentProps::default_instance_ = new ComponentProps();
  ComponentItem::default_instance_ = new ComponentItem();
  Component::default_instance_ = new Component();
  Product::default_instance_->InitAsDefaultInstance();
  Produce::default_instance_->InitAsDefaultInstance();
  ComponentProduce::default_instance_->InitAsDefaultInstance();
  ComponentBase::default_instance_->InitAsDefaultInstance();
  ComponentExp::default_instance_->InitAsDefaultInstance();
  LevelCost::default_instance_->InitAsDefaultInstance();
  ComponentUpgrade::default_instance_->InitAsDefaultInstance();
  LevelValue::default_instance_->InitAsDefaultInstance();
  ComponentProperty::default_instance_->InitAsDefaultInstance();
  CharacterObject::default_instance_->InitAsDefaultInstance();
  ComponentProps::default_instance_->InitAsDefaultInstance();
  ComponentItem::default_instance_->InitAsDefaultInstance();
  Component::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ComponentConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ComponentConfig_2eproto {
  StaticDescriptorInitializer_ComponentConfig_2eproto() {
    protobuf_AddDesc_ComponentConfig_2eproto();
  }
} static_descriptor_initializer_ComponentConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Product::kRateFieldNumber;
const int Product::kMaterialFieldNumber;
const int Product::kCompidFieldNumber;
#endif  // !_MSC_VER

Product::Product()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.Product)
}

void Product::InitAsDefaultInstance() {
}

Product::Product(const Product& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.Product)
}

void Product::SharedCtor() {
  _cached_size_ = 0;
  rate_ = 0u;
  material_ = 0u;
  compid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:ComponentConfig.Product)
  SharedDtor();
}

void Product::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Product_descriptor_;
}

const Product& Product::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

Product* Product::default_instance_ = NULL;

Product* Product::New() const {
  return new Product;
}

void Product::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Product*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rate_, compid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.Product)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 rate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rate_)));
          set_has_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_material;
        break;
      }

      // optional uint32 material = 2;
      case 2: {
        if (tag == 16) {
         parse_material:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_)));
          set_has_material();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_compid;
        break;
      }

      // optional uint32 compid = 3;
      case 3: {
        if (tag == 24) {
         parse_compid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compid_)));
          set_has_compid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.Product)
  // required uint32 rate = 1;
  if (has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rate(), output);
  }

  // optional uint32 material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->material(), output);
  }

  // optional uint32 compid = 3;
  if (has_compid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->compid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.Product)
}

::google::protobuf::uint8* Product::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.Product)
  // required uint32 rate = 1;
  if (has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rate(), target);
  }

  // optional uint32 material = 2;
  if (has_material()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->material(), target);
  }

  // optional uint32 compid = 3;
  if (has_compid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->compid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.Product)
  return target;
}

int Product::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 rate = 1;
    if (has_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rate());
    }

    // optional uint32 material = 2;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->material());
    }

    // optional uint32 compid = 3;
    if (has_compid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Product* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Product*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rate()) {
      set_rate(from.rate());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_compid()) {
      set_compid(from.compid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Product::Swap(Product* other) {
  if (other != this) {
    std::swap(rate_, other->rate_);
    std::swap(material_, other->material_);
    std::swap(compid_, other->compid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Product_descriptor_;
  metadata.reflection = Product_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Produce::kLevelFieldNumber;
const int Produce::kCostFieldNumber;
const int Produce::kNextrateFieldNumber;
const int Produce::kProductFieldNumber;
#endif  // !_MSC_VER

Produce::Produce()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.Produce)
}

void Produce::InitAsDefaultInstance() {
}

Produce::Produce(const Produce& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.Produce)
}

void Produce::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  cost_ = 0u;
  nextrate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Produce::~Produce() {
  // @@protoc_insertion_point(destructor:ComponentConfig.Produce)
  SharedDtor();
}

void Produce::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Produce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Produce::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Produce_descriptor_;
}

const Produce& Produce::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

Produce* Produce::default_instance_ = NULL;

Produce* Produce::New() const {
  return new Produce;
}

void Produce::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Produce*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(level_, cost_);
    nextrate_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  product_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Produce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.Produce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cost;
        break;
      }

      // required uint32 cost = 2;
      case 2: {
        if (tag == 16) {
         parse_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_)));
          set_has_cost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nextrate;
        break;
      }

      // required uint32 nextrate = 3;
      case 3: {
        if (tag == 24) {
         parse_nextrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextrate_)));
          set_has_nextrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_product;
        break;
      }

      // repeated .ComponentConfig.Product product = 4;
      case 4: {
        if (tag == 34) {
         parse_product:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_product;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.Produce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.Produce)
  return false;
#undef DO_
}

void Produce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.Produce)
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // required uint32 cost = 2;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cost(), output);
  }

  // required uint32 nextrate = 3;
  if (has_nextrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nextrate(), output);
  }

  // repeated .ComponentConfig.Product product = 4;
  for (int i = 0; i < this->product_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->product(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.Produce)
}

::google::protobuf::uint8* Produce::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.Produce)
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // required uint32 cost = 2;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cost(), target);
  }

  // required uint32 nextrate = 3;
  if (has_nextrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nextrate(), target);
  }

  // repeated .ComponentConfig.Product product = 4;
  for (int i = 0; i < this->product_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->product(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.Produce)
  return target;
}

int Produce::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 cost = 2;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cost());
    }

    // required uint32 nextrate = 3;
    if (has_nextrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextrate());
    }

  }
  // repeated .ComponentConfig.Product product = 4;
  total_size += 1 * this->product_size();
  for (int i = 0; i < this->product_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Produce::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Produce* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Produce*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Produce::MergeFrom(const Produce& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_.MergeFrom(from.product_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_cost()) {
      set_cost(from.cost());
    }
    if (from.has_nextrate()) {
      set_nextrate(from.nextrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Produce::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Produce::CopyFrom(const Produce& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Produce::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->product())) return false;
  return true;
}

void Produce::Swap(Produce* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(cost_, other->cost_);
    std::swap(nextrate_, other->nextrate_);
    product_.Swap(&other->product_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Produce::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Produce_descriptor_;
  metadata.reflection = Produce_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentProduce::kCashProduceFieldNumber;
const int ComponentProduce::kCommonFieldNumber;
#endif  // !_MSC_VER

ComponentProduce::ComponentProduce()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentProduce)
}

void ComponentProduce::InitAsDefaultInstance() {
}

ComponentProduce::ComponentProduce(const ComponentProduce& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentProduce)
}

void ComponentProduce::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentProduce::~ComponentProduce() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentProduce)
  SharedDtor();
}

void ComponentProduce::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentProduce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentProduce::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentProduce_descriptor_;
}

const ComponentProduce& ComponentProduce::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentProduce* ComponentProduce::default_instance_ = NULL;

ComponentProduce* ComponentProduce::New() const {
  return new ComponentProduce;
}

void ComponentProduce::Clear() {
  cash_produce_.Clear();
  common_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentProduce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentProduce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ComponentConfig.Produce cash_produce = 1;
      case 1: {
        if (tag == 10) {
         parse_cash_produce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cash_produce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cash_produce;
        if (input->ExpectTag(18)) goto parse_common;
        break;
      }

      // repeated .ComponentConfig.Produce common = 2;
      case 2: {
        if (tag == 18) {
         parse_common:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_common;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentProduce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentProduce)
  return false;
#undef DO_
}

void ComponentProduce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentProduce)
  // repeated .ComponentConfig.Produce cash_produce = 1;
  for (int i = 0; i < this->cash_produce_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cash_produce(i), output);
  }

  // repeated .ComponentConfig.Produce common = 2;
  for (int i = 0; i < this->common_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->common(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentProduce)
}

::google::protobuf::uint8* ComponentProduce::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentProduce)
  // repeated .ComponentConfig.Produce cash_produce = 1;
  for (int i = 0; i < this->cash_produce_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cash_produce(i), target);
  }

  // repeated .ComponentConfig.Produce common = 2;
  for (int i = 0; i < this->common_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->common(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentProduce)
  return target;
}

int ComponentProduce::ByteSize() const {
  int total_size = 0;

  // repeated .ComponentConfig.Produce cash_produce = 1;
  total_size += 1 * this->cash_produce_size();
  for (int i = 0; i < this->cash_produce_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cash_produce(i));
  }

  // repeated .ComponentConfig.Produce common = 2;
  total_size += 1 * this->common_size();
  for (int i = 0; i < this->common_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->common(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentProduce::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentProduce* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentProduce*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentProduce::MergeFrom(const ComponentProduce& from) {
  GOOGLE_CHECK_NE(&from, this);
  cash_produce_.MergeFrom(from.cash_produce_);
  common_.MergeFrom(from.common_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentProduce::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentProduce::CopyFrom(const ComponentProduce& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentProduce::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cash_produce())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->common())) return false;
  return true;
}

void ComponentProduce::Swap(ComponentProduce* other) {
  if (other != this) {
    cash_produce_.Swap(&other->cash_produce_);
    common_.Swap(&other->common_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentProduce::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentProduce_descriptor_;
  metadata.reflection = ComponentProduce_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentBase::kCompidFieldNumber;
const int ComponentBase::kTypeFieldNumber;
const int ComponentBase::kCharacterFieldNumber;
const int ComponentBase::kMasterFieldNumber;
#endif  // !_MSC_VER

ComponentBase::ComponentBase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentBase)
}

void ComponentBase::InitAsDefaultInstance() {
}

ComponentBase::ComponentBase(const ComponentBase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentBase)
}

void ComponentBase::SharedCtor() {
  _cached_size_ = 0;
  compid_ = 0u;
  type_ = 0u;
  character_ = 0u;
  master_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentBase::~ComponentBase() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentBase)
  SharedDtor();
}

void ComponentBase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentBase_descriptor_;
}

const ComponentBase& ComponentBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentBase* ComponentBase::default_instance_ = NULL;

ComponentBase* ComponentBase::New() const {
  return new ComponentBase;
}

void ComponentBase::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ComponentBase*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(compid_, master_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 compid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compid_)));
          set_has_compid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_character;
        break;
      }

      // required uint32 character = 3;
      case 3: {
        if (tag == 24) {
         parse_character:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &character_)));
          set_has_character();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_master;
        break;
      }

      // optional uint32 master = 4;
      case 4: {
        if (tag == 32) {
         parse_master:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_)));
          set_has_master();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentBase)
  return false;
#undef DO_
}

void ComponentBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentBase)
  // required uint32 compid = 1;
  if (has_compid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compid(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required uint32 character = 3;
  if (has_character()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->character(), output);
  }

  // optional uint32 master = 4;
  if (has_master()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->master(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentBase)
}

::google::protobuf::uint8* ComponentBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentBase)
  // required uint32 compid = 1;
  if (has_compid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compid(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required uint32 character = 3;
  if (has_character()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->character(), target);
  }

  // optional uint32 master = 4;
  if (has_master()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->master(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentBase)
  return target;
}

int ComponentBase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 compid = 1;
    if (has_compid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compid());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 character = 3;
    if (has_character()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->character());
    }

    // optional uint32 master = 4;
    if (has_master()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->master());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentBase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentBase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentBase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentBase::MergeFrom(const ComponentBase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compid()) {
      set_compid(from.compid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_character()) {
      set_character(from.character());
    }
    if (from.has_master()) {
      set_master(from.master());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentBase::CopyFrom(const ComponentBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ComponentBase::Swap(ComponentBase* other) {
  if (other != this) {
    std::swap(compid_, other->compid_);
    std::swap(type_, other->type_);
    std::swap(character_, other->character_);
    std::swap(master_, other->master_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentBase_descriptor_;
  metadata.reflection = ComponentBase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentExp::kBaseExpFieldNumber;
const int ComponentExp::kExpLevelFieldNumber;
#endif  // !_MSC_VER

ComponentExp::ComponentExp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentExp)
}

void ComponentExp::InitAsDefaultInstance() {
}

ComponentExp::ComponentExp(const ComponentExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentExp)
}

void ComponentExp::SharedCtor() {
  _cached_size_ = 0;
  base_exp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentExp::~ComponentExp() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentExp)
  SharedDtor();
}

void ComponentExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentExp_descriptor_;
}

const ComponentExp& ComponentExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentExp* ComponentExp::default_instance_ = NULL;

ComponentExp* ComponentExp::New() const {
  return new ComponentExp;
}

void ComponentExp::Clear() {
  base_exp_ = 0u;
  exp_level_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentExp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 base_exp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_exp_)));
          set_has_base_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exp_level;
        break;
      }

      // repeated uint32 exp_level = 2;
      case 2: {
        if (tag == 16) {
         parse_exp_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_exp_level())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_exp_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exp_level;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentExp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentExp)
  return false;
#undef DO_
}

void ComponentExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentExp)
  // required uint32 base_exp = 1;
  if (has_base_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->base_exp(), output);
  }

  // repeated uint32 exp_level = 2;
  for (int i = 0; i < this->exp_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->exp_level(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentExp)
}

::google::protobuf::uint8* ComponentExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentExp)
  // required uint32 base_exp = 1;
  if (has_base_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->base_exp(), target);
  }

  // repeated uint32 exp_level = 2;
  for (int i = 0; i < this->exp_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->exp_level(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentExp)
  return target;
}

int ComponentExp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 base_exp = 1;
    if (has_base_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_exp());
    }

  }
  // repeated uint32 exp_level = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->exp_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->exp_level(i));
    }
    total_size += 1 * this->exp_level_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentExp::MergeFrom(const ComponentExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  exp_level_.MergeFrom(from.exp_level_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base_exp()) {
      set_base_exp(from.base_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentExp::CopyFrom(const ComponentExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentExp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComponentExp::Swap(ComponentExp* other) {
  if (other != this) {
    std::swap(base_exp_, other->base_exp_);
    exp_level_.Swap(&other->exp_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentExp_descriptor_;
  metadata.reflection = ComponentExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LevelCost::kCoinFieldNumber;
const int LevelCost::kWoodFieldNumber;
#endif  // !_MSC_VER

LevelCost::LevelCost()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.LevelCost)
}

void LevelCost::InitAsDefaultInstance() {
}

LevelCost::LevelCost(const LevelCost& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.LevelCost)
}

void LevelCost::SharedCtor() {
  _cached_size_ = 0;
  coin_ = 0u;
  wood_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelCost::~LevelCost() {
  // @@protoc_insertion_point(destructor:ComponentConfig.LevelCost)
  SharedDtor();
}

void LevelCost::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LevelCost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelCost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelCost_descriptor_;
}

const LevelCost& LevelCost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

LevelCost* LevelCost::default_instance_ = NULL;

LevelCost* LevelCost::New() const {
  return new LevelCost;
}

void LevelCost::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LevelCost*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(coin_, wood_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LevelCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.LevelCost)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 coin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wood;
        break;
      }

      // required uint32 wood = 2;
      case 2: {
        if (tag == 16) {
         parse_wood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wood_)));
          set_has_wood();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.LevelCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.LevelCost)
  return false;
#undef DO_
}

void LevelCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.LevelCost)
  // required uint32 coin = 1;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->coin(), output);
  }

  // required uint32 wood = 2;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wood(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.LevelCost)
}

::google::protobuf::uint8* LevelCost::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.LevelCost)
  // required uint32 coin = 1;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->coin(), target);
  }

  // required uint32 wood = 2;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wood(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.LevelCost)
  return target;
}

int LevelCost::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 coin = 1;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required uint32 wood = 2;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wood());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelCost::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LevelCost* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LevelCost*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LevelCost::MergeFrom(const LevelCost& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_wood()) {
      set_wood(from.wood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LevelCost::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelCost::CopyFrom(const LevelCost& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelCost::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LevelCost::Swap(LevelCost* other) {
  if (other != this) {
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LevelCost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelCost_descriptor_;
  metadata.reflection = LevelCost_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentUpgrade::kLevelCostFieldNumber;
#endif  // !_MSC_VER

ComponentUpgrade::ComponentUpgrade()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentUpgrade)
}

void ComponentUpgrade::InitAsDefaultInstance() {
}

ComponentUpgrade::ComponentUpgrade(const ComponentUpgrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentUpgrade)
}

void ComponentUpgrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentUpgrade::~ComponentUpgrade() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentUpgrade)
  SharedDtor();
}

void ComponentUpgrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentUpgrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentUpgrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentUpgrade_descriptor_;
}

const ComponentUpgrade& ComponentUpgrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentUpgrade* ComponentUpgrade::default_instance_ = NULL;

ComponentUpgrade* ComponentUpgrade::New() const {
  return new ComponentUpgrade;
}

void ComponentUpgrade::Clear() {
  level_cost_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentUpgrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentUpgrade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ComponentConfig.LevelCost level_cost = 1;
      case 1: {
        if (tag == 10) {
         parse_level_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_level_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_level_cost;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentUpgrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentUpgrade)
  return false;
#undef DO_
}

void ComponentUpgrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentUpgrade)
  // repeated .ComponentConfig.LevelCost level_cost = 1;
  for (int i = 0; i < this->level_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->level_cost(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentUpgrade)
}

::google::protobuf::uint8* ComponentUpgrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentUpgrade)
  // repeated .ComponentConfig.LevelCost level_cost = 1;
  for (int i = 0; i < this->level_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->level_cost(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentUpgrade)
  return target;
}

int ComponentUpgrade::ByteSize() const {
  int total_size = 0;

  // repeated .ComponentConfig.LevelCost level_cost = 1;
  total_size += 1 * this->level_cost_size();
  for (int i = 0; i < this->level_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->level_cost(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentUpgrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentUpgrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentUpgrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentUpgrade::MergeFrom(const ComponentUpgrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  level_cost_.MergeFrom(from.level_cost_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentUpgrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentUpgrade::CopyFrom(const ComponentUpgrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentUpgrade::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->level_cost())) return false;
  return true;
}

void ComponentUpgrade::Swap(ComponentUpgrade* other) {
  if (other != this) {
    level_cost_.Swap(&other->level_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentUpgrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentUpgrade_descriptor_;
  metadata.reflection = ComponentUpgrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LevelValue::kValueFieldNumber;
#endif  // !_MSC_VER

LevelValue::LevelValue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.LevelValue)
}

void LevelValue::InitAsDefaultInstance() {
}

LevelValue::LevelValue(const LevelValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.LevelValue)
}

void LevelValue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelValue::~LevelValue() {
  // @@protoc_insertion_point(destructor:ComponentConfig.LevelValue)
  SharedDtor();
}

void LevelValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LevelValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelValue_descriptor_;
}

const LevelValue& LevelValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

LevelValue* LevelValue::default_instance_ = NULL;

LevelValue* LevelValue::New() const {
  return new LevelValue;
}

void LevelValue::Clear() {
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LevelValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.LevelValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double value = 1;
      case 1: {
        if (tag == 9) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_value())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.LevelValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.LevelValue)
  return false;
#undef DO_
}

void LevelValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.LevelValue)
  // repeated double value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.LevelValue)
}

::google::protobuf::uint8* LevelValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.LevelValue)
  // repeated double value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.LevelValue)
  return target;
}

int LevelValue::ByteSize() const {
  int total_size = 0;

  // repeated double value = 1;
  {
    int data_size = 0;
    data_size = 8 * this->value_size();
    total_size += 1 * this->value_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LevelValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LevelValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LevelValue::MergeFrom(const LevelValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  value_.MergeFrom(from.value_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LevelValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelValue::CopyFrom(const LevelValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelValue::IsInitialized() const {

  return true;
}

void LevelValue::Swap(LevelValue* other) {
  if (other != this) {
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LevelValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelValue_descriptor_;
  metadata.reflection = LevelValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentProperty::kMasterFieldNumber;
const int ComponentProperty::kSlaveFieldNumber;
#endif  // !_MSC_VER

ComponentProperty::ComponentProperty()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentProperty)
}

void ComponentProperty::InitAsDefaultInstance() {
}

ComponentProperty::ComponentProperty(const ComponentProperty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentProperty)
}

void ComponentProperty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentProperty::~ComponentProperty() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentProperty)
  SharedDtor();
}

void ComponentProperty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentProperty_descriptor_;
}

const ComponentProperty& ComponentProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentProperty* ComponentProperty::default_instance_ = NULL;

ComponentProperty* ComponentProperty::New() const {
  return new ComponentProperty;
}

void ComponentProperty::Clear() {
  master_.Clear();
  slave_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ComponentConfig.LevelValue master = 1;
      case 1: {
        if (tag == 10) {
         parse_master:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_master()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_master;
        if (input->ExpectTag(18)) goto parse_slave;
        break;
      }

      // repeated .ComponentConfig.LevelValue slave = 2;
      case 2: {
        if (tag == 18) {
         parse_slave:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slave()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_slave;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentProperty)
  return false;
#undef DO_
}

void ComponentProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentProperty)
  // repeated .ComponentConfig.LevelValue master = 1;
  for (int i = 0; i < this->master_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->master(i), output);
  }

  // repeated .ComponentConfig.LevelValue slave = 2;
  for (int i = 0; i < this->slave_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->slave(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentProperty)
}

::google::protobuf::uint8* ComponentProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentProperty)
  // repeated .ComponentConfig.LevelValue master = 1;
  for (int i = 0; i < this->master_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->master(i), target);
  }

  // repeated .ComponentConfig.LevelValue slave = 2;
  for (int i = 0; i < this->slave_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->slave(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentProperty)
  return target;
}

int ComponentProperty::ByteSize() const {
  int total_size = 0;

  // repeated .ComponentConfig.LevelValue master = 1;
  total_size += 1 * this->master_size();
  for (int i = 0; i < this->master_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->master(i));
  }

  // repeated .ComponentConfig.LevelValue slave = 2;
  total_size += 1 * this->slave_size();
  for (int i = 0; i < this->slave_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slave(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentProperty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentProperty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentProperty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentProperty::MergeFrom(const ComponentProperty& from) {
  GOOGLE_CHECK_NE(&from, this);
  master_.MergeFrom(from.master_);
  slave_.MergeFrom(from.slave_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentProperty::CopyFrom(const ComponentProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentProperty::IsInitialized() const {

  return true;
}

void ComponentProperty::Swap(ComponentProperty* other) {
  if (other != this) {
    master_.Swap(&other->master_);
    slave_.Swap(&other->slave_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentProperty_descriptor_;
  metadata.reflection = ComponentProperty_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CharacterObject::kCharacterFieldNumber;
const int CharacterObject::kComponentExpFieldNumber;
const int CharacterObject::kComponentUpgradeFieldNumber;
const int CharacterObject::kComponentPropertyFieldNumber;
#endif  // !_MSC_VER

CharacterObject::CharacterObject()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.CharacterObject)
}

void CharacterObject::InitAsDefaultInstance() {
  component_exp_ = const_cast< ::ComponentConfig::ComponentExp*>(&::ComponentConfig::ComponentExp::default_instance());
  component_upgrade_ = const_cast< ::ComponentConfig::ComponentUpgrade*>(&::ComponentConfig::ComponentUpgrade::default_instance());
  component_property_ = const_cast< ::ComponentConfig::ComponentProperty*>(&::ComponentConfig::ComponentProperty::default_instance());
}

CharacterObject::CharacterObject(const CharacterObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.CharacterObject)
}

void CharacterObject::SharedCtor() {
  _cached_size_ = 0;
  character_ = 0u;
  component_exp_ = NULL;
  component_upgrade_ = NULL;
  component_property_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharacterObject::~CharacterObject() {
  // @@protoc_insertion_point(destructor:ComponentConfig.CharacterObject)
  SharedDtor();
}

void CharacterObject::SharedDtor() {
  if (this != default_instance_) {
    delete component_exp_;
    delete component_upgrade_;
    delete component_property_;
  }
}

void CharacterObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharacterObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharacterObject_descriptor_;
}

const CharacterObject& CharacterObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

CharacterObject* CharacterObject::default_instance_ = NULL;

CharacterObject* CharacterObject::New() const {
  return new CharacterObject;
}

void CharacterObject::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    character_ = 0u;
    if (has_component_exp()) {
      if (component_exp_ != NULL) component_exp_->::ComponentConfig::ComponentExp::Clear();
    }
    if (has_component_upgrade()) {
      if (component_upgrade_ != NULL) component_upgrade_->::ComponentConfig::ComponentUpgrade::Clear();
    }
    if (has_component_property()) {
      if (component_property_ != NULL) component_property_->::ComponentConfig::ComponentProperty::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CharacterObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.CharacterObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 character = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &character_)));
          set_has_character();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_component_exp;
        break;
      }

      // required .ComponentConfig.ComponentExp component_exp = 2;
      case 2: {
        if (tag == 18) {
         parse_component_exp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_component_exp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_component_upgrade;
        break;
      }

      // required .ComponentConfig.ComponentUpgrade component_upgrade = 3;
      case 3: {
        if (tag == 26) {
         parse_component_upgrade:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_component_upgrade()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_component_property;
        break;
      }

      // required .ComponentConfig.ComponentProperty component_property = 4;
      case 4: {
        if (tag == 34) {
         parse_component_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_component_property()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.CharacterObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.CharacterObject)
  return false;
#undef DO_
}

void CharacterObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.CharacterObject)
  // required uint32 character = 1;
  if (has_character()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->character(), output);
  }

  // required .ComponentConfig.ComponentExp component_exp = 2;
  if (has_component_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->component_exp(), output);
  }

  // required .ComponentConfig.ComponentUpgrade component_upgrade = 3;
  if (has_component_upgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->component_upgrade(), output);
  }

  // required .ComponentConfig.ComponentProperty component_property = 4;
  if (has_component_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->component_property(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.CharacterObject)
}

::google::protobuf::uint8* CharacterObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.CharacterObject)
  // required uint32 character = 1;
  if (has_character()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->character(), target);
  }

  // required .ComponentConfig.ComponentExp component_exp = 2;
  if (has_component_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->component_exp(), target);
  }

  // required .ComponentConfig.ComponentUpgrade component_upgrade = 3;
  if (has_component_upgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->component_upgrade(), target);
  }

  // required .ComponentConfig.ComponentProperty component_property = 4;
  if (has_component_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->component_property(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.CharacterObject)
  return target;
}

int CharacterObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 character = 1;
    if (has_character()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->character());
    }

    // required .ComponentConfig.ComponentExp component_exp = 2;
    if (has_component_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component_exp());
    }

    // required .ComponentConfig.ComponentUpgrade component_upgrade = 3;
    if (has_component_upgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component_upgrade());
    }

    // required .ComponentConfig.ComponentProperty component_property = 4;
    if (has_component_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component_property());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharacterObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CharacterObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CharacterObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CharacterObject::MergeFrom(const CharacterObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_character()) {
      set_character(from.character());
    }
    if (from.has_component_exp()) {
      mutable_component_exp()->::ComponentConfig::ComponentExp::MergeFrom(from.component_exp());
    }
    if (from.has_component_upgrade()) {
      mutable_component_upgrade()->::ComponentConfig::ComponentUpgrade::MergeFrom(from.component_upgrade());
    }
    if (from.has_component_property()) {
      mutable_component_property()->::ComponentConfig::ComponentProperty::MergeFrom(from.component_property());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CharacterObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterObject::CopyFrom(const CharacterObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_component_exp()) {
    if (!this->component_exp().IsInitialized()) return false;
  }
  if (has_component_upgrade()) {
    if (!this->component_upgrade().IsInitialized()) return false;
  }
  return true;
}

void CharacterObject::Swap(CharacterObject* other) {
  if (other != this) {
    std::swap(character_, other->character_);
    std::swap(component_exp_, other->component_exp_);
    std::swap(component_upgrade_, other->component_upgrade_);
    std::swap(component_property_, other->component_property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CharacterObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharacterObject_descriptor_;
  metadata.reflection = CharacterObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentProps::kCompidFieldNumber;
const int ComponentProps::kExpFieldNumber;
const int ComponentProps::kCoinFieldNumber;
const int ComponentProps::kWoodFieldNumber;
#endif  // !_MSC_VER

ComponentProps::ComponentProps()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentProps)
}

void ComponentProps::InitAsDefaultInstance() {
}

ComponentProps::ComponentProps(const ComponentProps& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentProps)
}

void ComponentProps::SharedCtor() {
  _cached_size_ = 0;
  compid_ = 0u;
  exp_ = 0u;
  coin_ = 0u;
  wood_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentProps::~ComponentProps() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentProps)
  SharedDtor();
}

void ComponentProps::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentProps::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentProps::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentProps_descriptor_;
}

const ComponentProps& ComponentProps::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentProps* ComponentProps::default_instance_ = NULL;

ComponentProps* ComponentProps::New() const {
  return new ComponentProps;
}

void ComponentProps::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ComponentProps*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(compid_, wood_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentProps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentProps)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 compid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compid_)));
          set_has_compid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }

      // required uint32 exp = 2;
      case 2: {
        if (tag == 16) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }

      // required uint32 coin = 3;
      case 3: {
        if (tag == 24) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_wood;
        break;
      }

      // required uint32 wood = 4;
      case 4: {
        if (tag == 32) {
         parse_wood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wood_)));
          set_has_wood();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentProps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentProps)
  return false;
#undef DO_
}

void ComponentProps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentProps)
  // required uint32 compid = 1;
  if (has_compid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compid(), output);
  }

  // required uint32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // required uint32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->coin(), output);
  }

  // required uint32 wood = 4;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wood(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentProps)
}

::google::protobuf::uint8* ComponentProps::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentProps)
  // required uint32 compid = 1;
  if (has_compid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compid(), target);
  }

  // required uint32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // required uint32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->coin(), target);
  }

  // required uint32 wood = 4;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wood(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentProps)
  return target;
}

int ComponentProps::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 compid = 1;
    if (has_compid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compid());
    }

    // required uint32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exp());
    }

    // required uint32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required uint32 wood = 4;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wood());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentProps::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentProps* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentProps*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentProps::MergeFrom(const ComponentProps& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compid()) {
      set_compid(from.compid());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_wood()) {
      set_wood(from.wood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentProps::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentProps::CopyFrom(const ComponentProps& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentProps::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ComponentProps::Swap(ComponentProps* other) {
  if (other != this) {
    std::swap(compid_, other->compid_);
    std::swap(exp_, other->exp_);
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentProps::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentProps_descriptor_;
  metadata.reflection = ComponentProps_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentItem::kCompontProduceFieldNumber;
const int ComponentItem::kComponentBaseFieldNumber;
const int ComponentItem::kMaxLevelFieldNumber;
const int ComponentItem::kComponentUnlockFieldNumber;
const int ComponentItem::kCharacterObjectsFieldNumber;
const int ComponentItem::kComponentPropsFieldNumber;
#endif  // !_MSC_VER

ComponentItem::ComponentItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.ComponentItem)
}

void ComponentItem::InitAsDefaultInstance() {
  compont_produce_ = const_cast< ::ComponentConfig::ComponentProduce*>(&::ComponentConfig::ComponentProduce::default_instance());
}

ComponentItem::ComponentItem(const ComponentItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.ComponentItem)
}

void ComponentItem::SharedCtor() {
  _cached_size_ = 0;
  compont_produce_ = NULL;
  max_level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentItem::~ComponentItem() {
  // @@protoc_insertion_point(destructor:ComponentConfig.ComponentItem)
  SharedDtor();
}

void ComponentItem::SharedDtor() {
  if (this != default_instance_) {
    delete compont_produce_;
  }
}

void ComponentItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentItem_descriptor_;
}

const ComponentItem& ComponentItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

ComponentItem* ComponentItem::default_instance_ = NULL;

ComponentItem* ComponentItem::New() const {
  return new ComponentItem;
}

void ComponentItem::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_compont_produce()) {
      if (compont_produce_ != NULL) compont_produce_->::ComponentConfig::ComponentProduce::Clear();
    }
    max_level_ = 0u;
  }
  component_base_.Clear();
  component_unlock_.Clear();
  character_objects_.Clear();
  component_props_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.ComponentItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ComponentConfig.ComponentProduce compont_produce = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compont_produce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_component_base;
        break;
      }

      // repeated .ComponentConfig.ComponentBase component_base = 2;
      case 2: {
        if (tag == 18) {
         parse_component_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_component_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_component_base;
        if (input->ExpectTag(24)) goto parse_max_level;
        break;
      }

      // required uint32 max_level = 3;
      case 3: {
        if (tag == 24) {
         parse_max_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_level_)));
          set_has_max_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_component_unlock;
        break;
      }

      // repeated uint32 component_unlock = 4;
      case 4: {
        if (tag == 32) {
         parse_component_unlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_component_unlock())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_component_unlock())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_component_unlock;
        if (input->ExpectTag(42)) goto parse_character_objects;
        break;
      }

      // repeated .ComponentConfig.CharacterObject character_objects = 5;
      case 5: {
        if (tag == 42) {
         parse_character_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_character_objects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_character_objects;
        if (input->ExpectTag(50)) goto parse_component_props;
        break;
      }

      // repeated .ComponentConfig.ComponentProps component_props = 6;
      case 6: {
        if (tag == 50) {
         parse_component_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_component_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_component_props;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.ComponentItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.ComponentItem)
  return false;
#undef DO_
}

void ComponentItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.ComponentItem)
  // required .ComponentConfig.ComponentProduce compont_produce = 1;
  if (has_compont_produce()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compont_produce(), output);
  }

  // repeated .ComponentConfig.ComponentBase component_base = 2;
  for (int i = 0; i < this->component_base_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->component_base(i), output);
  }

  // required uint32 max_level = 3;
  if (has_max_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_level(), output);
  }

  // repeated uint32 component_unlock = 4;
  for (int i = 0; i < this->component_unlock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->component_unlock(i), output);
  }

  // repeated .ComponentConfig.CharacterObject character_objects = 5;
  for (int i = 0; i < this->character_objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->character_objects(i), output);
  }

  // repeated .ComponentConfig.ComponentProps component_props = 6;
  for (int i = 0; i < this->component_props_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->component_props(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.ComponentItem)
}

::google::protobuf::uint8* ComponentItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.ComponentItem)
  // required .ComponentConfig.ComponentProduce compont_produce = 1;
  if (has_compont_produce()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->compont_produce(), target);
  }

  // repeated .ComponentConfig.ComponentBase component_base = 2;
  for (int i = 0; i < this->component_base_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->component_base(i), target);
  }

  // required uint32 max_level = 3;
  if (has_max_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_level(), target);
  }

  // repeated uint32 component_unlock = 4;
  for (int i = 0; i < this->component_unlock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->component_unlock(i), target);
  }

  // repeated .ComponentConfig.CharacterObject character_objects = 5;
  for (int i = 0; i < this->character_objects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->character_objects(i), target);
  }

  // repeated .ComponentConfig.ComponentProps component_props = 6;
  for (int i = 0; i < this->component_props_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->component_props(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.ComponentItem)
  return target;
}

int ComponentItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ComponentConfig.ComponentProduce compont_produce = 1;
    if (has_compont_produce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compont_produce());
    }

    // required uint32 max_level = 3;
    if (has_max_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_level());
    }

  }
  // repeated .ComponentConfig.ComponentBase component_base = 2;
  total_size += 1 * this->component_base_size();
  for (int i = 0; i < this->component_base_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->component_base(i));
  }

  // repeated uint32 component_unlock = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->component_unlock_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->component_unlock(i));
    }
    total_size += 1 * this->component_unlock_size() + data_size;
  }

  // repeated .ComponentConfig.CharacterObject character_objects = 5;
  total_size += 1 * this->character_objects_size();
  for (int i = 0; i < this->character_objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->character_objects(i));
  }

  // repeated .ComponentConfig.ComponentProps component_props = 6;
  total_size += 1 * this->component_props_size();
  for (int i = 0; i < this->component_props_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->component_props(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentItem::MergeFrom(const ComponentItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  component_base_.MergeFrom(from.component_base_);
  component_unlock_.MergeFrom(from.component_unlock_);
  character_objects_.MergeFrom(from.character_objects_);
  component_props_.MergeFrom(from.component_props_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compont_produce()) {
      mutable_compont_produce()->::ComponentConfig::ComponentProduce::MergeFrom(from.compont_produce());
    }
    if (from.has_max_level()) {
      set_max_level(from.max_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentItem::CopyFrom(const ComponentItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (has_compont_produce()) {
    if (!this->compont_produce().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->component_base())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->character_objects())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->component_props())) return false;
  return true;
}

void ComponentItem::Swap(ComponentItem* other) {
  if (other != this) {
    std::swap(compont_produce_, other->compont_produce_);
    component_base_.Swap(&other->component_base_);
    std::swap(max_level_, other->max_level_);
    component_unlock_.Swap(&other->component_unlock_);
    character_objects_.Swap(&other->character_objects_);
    component_props_.Swap(&other->component_props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentItem_descriptor_;
  metadata.reflection = ComponentItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Component::kComponentFieldNumber;
#endif  // !_MSC_VER

Component::Component()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ComponentConfig.Component)
}

void Component::InitAsDefaultInstance() {
  component_ = const_cast< ::ComponentConfig::ComponentItem*>(&::ComponentConfig::ComponentItem::default_instance());
}

Component::Component(const Component& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ComponentConfig.Component)
}

void Component::SharedCtor() {
  _cached_size_ = 0;
  component_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:ComponentConfig.Component)
  SharedDtor();
}

void Component::SharedDtor() {
  if (this != default_instance_) {
    delete component_;
  }
}

void Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Component::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Component_descriptor_;
}

const Component& Component::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ComponentConfig_2eproto();
  return *default_instance_;
}

Component* Component::default_instance_ = NULL;

Component* Component::New() const {
  return new Component;
}

void Component::Clear() {
  if (has_component()) {
    if (component_ != NULL) component_->::ComponentConfig::ComponentItem::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ComponentConfig.Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ComponentConfig.ComponentItem component = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ComponentConfig.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ComponentConfig.Component)
  return false;
#undef DO_
}

void Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ComponentConfig.Component)
  // required .ComponentConfig.ComponentItem component = 1;
  if (has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->component(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ComponentConfig.Component)
}

::google::protobuf::uint8* Component::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComponentConfig.Component)
  // required .ComponentConfig.ComponentItem component = 1;
  if (has_component()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->component(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComponentConfig.Component)
  return target;
}

int Component::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ComponentConfig.ComponentItem component = 1;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Component::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Component* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Component*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Component::MergeFrom(const Component& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_component()) {
      mutable_component()->::ComponentConfig::ComponentItem::MergeFrom(from.component());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Component::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Component::CopyFrom(const Component& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_component()) {
    if (!this->component().IsInitialized()) return false;
  }
  return true;
}

void Component::Swap(Component* other) {
  if (other != this) {
    std::swap(component_, other->component_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Component::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Component_descriptor_;
  metadata.reflection = Component_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ComponentConfig

// @@protoc_insertion_point(global_scope)
