// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SellComponentConfig.proto

#ifndef PROTOBUF_SellComponentConfig_2eproto__INCLUDED
#define PROTOBUF_SellComponentConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "RewardConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace SellComponentConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SellComponentConfig_2eproto();
void protobuf_AssignDesc_SellComponentConfig_2eproto();
void protobuf_ShutdownFile_SellComponentConfig_2eproto();

class GoodInfo;
class SellComponent;

// ===================================================================

class GoodInfo : public ::google::protobuf::Message {
 public:
  GoodInfo();
  virtual ~GoodInfo();

  GoodInfo(const GoodInfo& from);

  inline GoodInfo& operator=(const GoodInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodInfo& default_instance();

  void Swap(GoodInfo* other);

  // implements Message ----------------------------------------------

  GoodInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodInfo& from);
  void MergeFrom(const GoodInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // required uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // repeated .RewardConfig.Reward goods = 3;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 3;
  inline const ::RewardConfig::Reward& goods(int index) const;
  inline ::RewardConfig::Reward* mutable_goods(int index);
  inline ::RewardConfig::Reward* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
      mutable_goods();

  // @@protoc_insertion_point(class_scope:SellComponentConfig.GoodInfo)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward > goods_;
  friend void  protobuf_AddDesc_SellComponentConfig_2eproto();
  friend void protobuf_AssignDesc_SellComponentConfig_2eproto();
  friend void protobuf_ShutdownFile_SellComponentConfig_2eproto();

  void InitAsDefaultInstance();
  static GoodInfo* default_instance_;
};
// -------------------------------------------------------------------

class SellComponent : public ::google::protobuf::Message {
 public:
  SellComponent();
  virtual ~SellComponent();

  SellComponent(const SellComponent& from);

  inline SellComponent& operator=(const SellComponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellComponent& default_instance();

  void Swap(SellComponent* other);

  // implements Message ----------------------------------------------

  SellComponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellComponent& from);
  void MergeFrom(const SellComponent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SellComponentConfig.GoodInfo goodsall = 1;
  inline int goodsall_size() const;
  inline void clear_goodsall();
  static const int kGoodsallFieldNumber = 1;
  inline const ::SellComponentConfig::GoodInfo& goodsall(int index) const;
  inline ::SellComponentConfig::GoodInfo* mutable_goodsall(int index);
  inline ::SellComponentConfig::GoodInfo* add_goodsall();
  inline const ::google::protobuf::RepeatedPtrField< ::SellComponentConfig::GoodInfo >&
      goodsall() const;
  inline ::google::protobuf::RepeatedPtrField< ::SellComponentConfig::GoodInfo >*
      mutable_goodsall();

  // @@protoc_insertion_point(class_scope:SellComponentConfig.SellComponent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SellComponentConfig::GoodInfo > goodsall_;
  friend void  protobuf_AddDesc_SellComponentConfig_2eproto();
  friend void protobuf_AssignDesc_SellComponentConfig_2eproto();
  friend void protobuf_ShutdownFile_SellComponentConfig_2eproto();

  void InitAsDefaultInstance();
  static SellComponent* default_instance_;
};
// ===================================================================


// ===================================================================

// GoodInfo

// required uint32 price = 1;
inline bool GoodInfo::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodInfo::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodInfo::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 GoodInfo::price() const {
  // @@protoc_insertion_point(field_get:SellComponentConfig.GoodInfo.price)
  return price_;
}
inline void GoodInfo::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:SellComponentConfig.GoodInfo.price)
}

// required uint32 times = 2;
inline bool GoodInfo::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodInfo::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodInfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodInfo::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GoodInfo::times() const {
  // @@protoc_insertion_point(field_get:SellComponentConfig.GoodInfo.times)
  return times_;
}
inline void GoodInfo::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:SellComponentConfig.GoodInfo.times)
}

// repeated .RewardConfig.Reward goods = 3;
inline int GoodInfo::goods_size() const {
  return goods_.size();
}
inline void GoodInfo::clear_goods() {
  goods_.Clear();
}
inline const ::RewardConfig::Reward& GoodInfo::goods(int index) const {
  // @@protoc_insertion_point(field_get:SellComponentConfig.GoodInfo.goods)
  return goods_.Get(index);
}
inline ::RewardConfig::Reward* GoodInfo::mutable_goods(int index) {
  // @@protoc_insertion_point(field_mutable:SellComponentConfig.GoodInfo.goods)
  return goods_.Mutable(index);
}
inline ::RewardConfig::Reward* GoodInfo::add_goods() {
  // @@protoc_insertion_point(field_add:SellComponentConfig.GoodInfo.goods)
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >&
GoodInfo::goods() const {
  // @@protoc_insertion_point(field_list:SellComponentConfig.GoodInfo.goods)
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardConfig::Reward >*
GoodInfo::mutable_goods() {
  // @@protoc_insertion_point(field_mutable_list:SellComponentConfig.GoodInfo.goods)
  return &goods_;
}

// -------------------------------------------------------------------

// SellComponent

// repeated .SellComponentConfig.GoodInfo goodsall = 1;
inline int SellComponent::goodsall_size() const {
  return goodsall_.size();
}
inline void SellComponent::clear_goodsall() {
  goodsall_.Clear();
}
inline const ::SellComponentConfig::GoodInfo& SellComponent::goodsall(int index) const {
  // @@protoc_insertion_point(field_get:SellComponentConfig.SellComponent.goodsall)
  return goodsall_.Get(index);
}
inline ::SellComponentConfig::GoodInfo* SellComponent::mutable_goodsall(int index) {
  // @@protoc_insertion_point(field_mutable:SellComponentConfig.SellComponent.goodsall)
  return goodsall_.Mutable(index);
}
inline ::SellComponentConfig::GoodInfo* SellComponent::add_goodsall() {
  // @@protoc_insertion_point(field_add:SellComponentConfig.SellComponent.goodsall)
  return goodsall_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SellComponentConfig::GoodInfo >&
SellComponent::goodsall() const {
  // @@protoc_insertion_point(field_list:SellComponentConfig.SellComponent.goodsall)
  return goodsall_;
}
inline ::google::protobuf::RepeatedPtrField< ::SellComponentConfig::GoodInfo >*
SellComponent::mutable_goodsall() {
  // @@protoc_insertion_point(field_mutable_list:SellComponentConfig.SellComponent.goodsall)
  return &goodsall_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SellComponentConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SellComponentConfig_2eproto__INCLUDED
