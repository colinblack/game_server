// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Demo.proto

#ifndef PROTOBUF_Demo_2eproto__INCLUDED
#define PROTOBUF_Demo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Demo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Demo_2eproto();
void protobuf_AssignDesc_Demo_2eproto();
void protobuf_ShutdownFile_Demo_2eproto();

class DemoTimeConfig;
class DemoConstConfig;
class DemoNPCTime;
class DemoCityG;
class DemoReward;
class DemoNPC;
class BattleRewardDay;
class BattleReward;
class CityNPCDay;
class CityReward;
class Demo;

// ===================================================================

class DemoTimeConfig : public ::google::protobuf::Message {
 public:
  DemoTimeConfig();
  virtual ~DemoTimeConfig();

  DemoTimeConfig(const DemoTimeConfig& from);

  inline DemoTimeConfig& operator=(const DemoTimeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoTimeConfig& default_instance();

  void Swap(DemoTimeConfig* other);

  // implements Message ----------------------------------------------

  DemoTimeConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoTimeConfig& from);
  void MergeFrom(const DemoTimeConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 npcwait = 1;
  inline bool has_npcwait() const;
  inline void clear_npcwait();
  static const int kNpcwaitFieldNumber = 1;
  inline ::google::protobuf::uint32 npcwait() const;
  inline void set_npcwait(::google::protobuf::uint32 value);

  // required uint32 userwait = 2;
  inline bool has_userwait() const;
  inline void clear_userwait();
  static const int kUserwaitFieldNumber = 2;
  inline ::google::protobuf::uint32 userwait() const;
  inline void set_userwait(::google::protobuf::uint32 value);

  // required uint32 move = 3;
  inline bool has_move() const;
  inline void clear_move();
  static const int kMoveFieldNumber = 3;
  inline ::google::protobuf::uint32 move() const;
  inline void set_move(::google::protobuf::uint32 value);

  // required uint32 skill = 4;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 4;
  inline ::google::protobuf::uint32 skill() const;
  inline void set_skill(::google::protobuf::uint32 value);

  // required uint32 skilldodge = 5;
  inline bool has_skilldodge() const;
  inline void clear_skilldodge();
  static const int kSkilldodgeFieldNumber = 5;
  inline ::google::protobuf::uint32 skilldodge() const;
  inline void set_skilldodge(::google::protobuf::uint32 value);

  // required uint32 skillattack = 6;
  inline bool has_skillattack() const;
  inline void clear_skillattack();
  static const int kSkillattackFieldNumber = 6;
  inline ::google::protobuf::uint32 skillattack() const;
  inline void set_skillattack(::google::protobuf::uint32 value);

  // required uint32 form = 7;
  inline bool has_form() const;
  inline void clear_form();
  static const int kFormFieldNumber = 7;
  inline ::google::protobuf::uint32 form() const;
  inline void set_form(::google::protobuf::uint32 value);

  // required uint32 attack = 8;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 8;
  inline ::google::protobuf::uint32 attack() const;
  inline void set_attack(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Demo.DemoTimeConfig)
 private:
  inline void set_has_npcwait();
  inline void clear_has_npcwait();
  inline void set_has_userwait();
  inline void clear_has_userwait();
  inline void set_has_move();
  inline void clear_has_move();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_skilldodge();
  inline void clear_has_skilldodge();
  inline void set_has_skillattack();
  inline void clear_has_skillattack();
  inline void set_has_form();
  inline void clear_has_form();
  inline void set_has_attack();
  inline void clear_has_attack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 npcwait_;
  ::google::protobuf::uint32 userwait_;
  ::google::protobuf::uint32 move_;
  ::google::protobuf::uint32 skill_;
  ::google::protobuf::uint32 skilldodge_;
  ::google::protobuf::uint32 skillattack_;
  ::google::protobuf::uint32 form_;
  ::google::protobuf::uint32 attack_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoTimeConfig* default_instance_;
};
// -------------------------------------------------------------------

class DemoConstConfig : public ::google::protobuf::Message {
 public:
  DemoConstConfig();
  virtual ~DemoConstConfig();

  DemoConstConfig(const DemoConstConfig& from);

  inline DemoConstConfig& operator=(const DemoConstConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoConstConfig& default_instance();

  void Swap(DemoConstConfig* other);

  // implements Message ----------------------------------------------

  DemoConstConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoConstConfig& from);
  void MergeFrom(const DemoConstConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 npcskill = 1;
  inline bool has_npcskill() const;
  inline void clear_npcskill();
  static const int kNpcskillFieldNumber = 1;
  inline ::google::protobuf::int32 npcskill() const;
  inline void set_npcskill(::google::protobuf::int32 value);

  // required int32 userskill = 2;
  inline bool has_userskill() const;
  inline void clear_userskill();
  static const int kUserskillFieldNumber = 2;
  inline ::google::protobuf::int32 userskill() const;
  inline void set_userskill(::google::protobuf::int32 value);

  // required int32 skillmax = 3;
  inline bool has_skillmax() const;
  inline void clear_skillmax();
  static const int kSkillmaxFieldNumber = 3;
  inline ::google::protobuf::int32 skillmax() const;
  inline void set_skillmax(::google::protobuf::int32 value);

  // required int32 skillmin = 4;
  inline bool has_skillmin() const;
  inline void clear_skillmin();
  static const int kSkillminFieldNumber = 4;
  inline ::google::protobuf::int32 skillmin() const;
  inline void set_skillmin(::google::protobuf::int32 value);

  // required int32 skill_p_a = 5;
  inline bool has_skill_p_a() const;
  inline void clear_skill_p_a();
  static const int kSkillPAFieldNumber = 5;
  inline ::google::protobuf::int32 skill_p_a() const;
  inline void set_skill_p_a(::google::protobuf::int32 value);

  // required int32 skill_p_b = 6;
  inline bool has_skill_p_b() const;
  inline void clear_skill_p_b();
  static const int kSkillPBFieldNumber = 6;
  inline ::google::protobuf::int32 skill_p_b() const;
  inline void set_skill_p_b(::google::protobuf::int32 value);

  // required double skillrange = 7;
  inline bool has_skillrange() const;
  inline void clear_skillrange();
  static const int kSkillrangeFieldNumber = 7;
  inline double skillrange() const;
  inline void set_skillrange(double value);

  // required int32 skill_a = 8;
  inline bool has_skill_a() const;
  inline void clear_skill_a();
  static const int kSkillAFieldNumber = 8;
  inline ::google::protobuf::int32 skill_a() const;
  inline void set_skill_a(::google::protobuf::int32 value);

  // required int32 skill_b = 9;
  inline bool has_skill_b() const;
  inline void clear_skill_b();
  static const int kSkillBFieldNumber = 9;
  inline ::google::protobuf::int32 skill_b() const;
  inline void set_skill_b(::google::protobuf::int32 value);

  // required double skill_a_c = 10;
  inline bool has_skill_a_c() const;
  inline void clear_skill_a_c();
  static const int kSkillACFieldNumber = 10;
  inline double skill_a_c() const;
  inline void set_skill_a_c(double value);

  // required double skill_b_c = 11;
  inline bool has_skill_b_c() const;
  inline void clear_skill_b_c();
  static const int kSkillBCFieldNumber = 11;
  inline double skill_b_c() const;
  inline void set_skill_b_c(double value);

  // required double skill_c_c = 12;
  inline bool has_skill_c_c() const;
  inline void clear_skill_c_c();
  static const int kSkillCCFieldNumber = 12;
  inline double skill_c_c() const;
  inline void set_skill_c_c(double value);

  // required int32 skill_l = 13;
  inline bool has_skill_l() const;
  inline void clear_skill_l();
  static const int kSkillLFieldNumber = 13;
  inline ::google::protobuf::int32 skill_l() const;
  inline void set_skill_l(::google::protobuf::int32 value);

  // required int32 skill_h = 14;
  inline bool has_skill_h() const;
  inline void clear_skill_h();
  static const int kSkillHFieldNumber = 14;
  inline ::google::protobuf::int32 skill_h() const;
  inline void set_skill_h(::google::protobuf::int32 value);

  // required double form_s_w = 15;
  inline bool has_form_s_w() const;
  inline void clear_form_s_w();
  static const int kFormSWFieldNumber = 15;
  inline double form_s_w() const;
  inline void set_form_s_w(double value);

  // required double form_s_e = 16;
  inline bool has_form_s_e() const;
  inline void clear_form_s_e();
  static const int kFormSEFieldNumber = 16;
  inline double form_s_e() const;
  inline void set_form_s_e(double value);

  // required double form_s_l = 17;
  inline bool has_form_s_l() const;
  inline void clear_form_s_l();
  static const int kFormSLFieldNumber = 17;
  inline double form_s_l() const;
  inline void set_form_s_l(double value);

  // required double form_w = 18;
  inline bool has_form_w() const;
  inline void clear_form_w();
  static const int kFormWFieldNumber = 18;
  inline double form_w() const;
  inline void set_form_w(double value);

  // required double form_e = 19;
  inline bool has_form_e() const;
  inline void clear_form_e();
  static const int kFormEFieldNumber = 19;
  inline double form_e() const;
  inline void set_form_e(double value);

  // required double form_l = 20;
  inline bool has_form_l() const;
  inline void clear_form_l();
  static const int kFormLFieldNumber = 20;
  inline double form_l() const;
  inline void set_form_l(double value);

  // required double npcattack = 21;
  inline bool has_npcattack() const;
  inline void clear_npcattack();
  static const int kNpcattackFieldNumber = 21;
  inline double npcattack() const;
  inline void set_npcattack(double value);

  // required double userattack = 22;
  inline bool has_userattack() const;
  inline void clear_userattack();
  static const int kUserattackFieldNumber = 22;
  inline double userattack() const;
  inline void set_userattack(double value);

  // required double hp_c = 23;
  inline bool has_hp_c() const;
  inline void clear_hp_c();
  static const int kHpCFieldNumber = 23;
  inline double hp_c() const;
  inline void set_hp_c(double value);

  // required double f_s_w = 24;
  inline bool has_f_s_w() const;
  inline void clear_f_s_w();
  static const int kFSWFieldNumber = 24;
  inline double f_s_w() const;
  inline void set_f_s_w(double value);

  // required double f_s_e = 25;
  inline bool has_f_s_e() const;
  inline void clear_f_s_e();
  static const int kFSEFieldNumber = 25;
  inline double f_s_e() const;
  inline void set_f_s_e(double value);

  // required double f_w = 26;
  inline bool has_f_w() const;
  inline void clear_f_w();
  static const int kFWFieldNumber = 26;
  inline double f_w() const;
  inline void set_f_w(double value);

  // required double f_e = 27;
  inline bool has_f_e() const;
  inline void clear_f_e();
  static const int kFEFieldNumber = 27;
  inline double f_e() const;
  inline void set_f_e(double value);

  // required double r_a = 28;
  inline bool has_r_a() const;
  inline void clear_r_a();
  static const int kRAFieldNumber = 28;
  inline double r_a() const;
  inline void set_r_a(double value);

  // required double r_b = 29;
  inline bool has_r_b() const;
  inline void clear_r_b();
  static const int kRBFieldNumber = 29;
  inline double r_b() const;
  inline void set_r_b(double value);

  // required double r_c = 30;
  inline bool has_r_c() const;
  inline void clear_r_c();
  static const int kRCFieldNumber = 30;
  inline double r_c() const;
  inline void set_r_c(double value);

  // required int32 randmin = 31;
  inline bool has_randmin() const;
  inline void clear_randmin();
  static const int kRandminFieldNumber = 31;
  inline ::google::protobuf::int32 randmin() const;
  inline void set_randmin(::google::protobuf::int32 value);

  // required int32 randmax = 32;
  inline bool has_randmax() const;
  inline void clear_randmax();
  static const int kRandmaxFieldNumber = 32;
  inline ::google::protobuf::int32 randmax() const;
  inline void set_randmax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Demo.DemoConstConfig)
 private:
  inline void set_has_npcskill();
  inline void clear_has_npcskill();
  inline void set_has_userskill();
  inline void clear_has_userskill();
  inline void set_has_skillmax();
  inline void clear_has_skillmax();
  inline void set_has_skillmin();
  inline void clear_has_skillmin();
  inline void set_has_skill_p_a();
  inline void clear_has_skill_p_a();
  inline void set_has_skill_p_b();
  inline void clear_has_skill_p_b();
  inline void set_has_skillrange();
  inline void clear_has_skillrange();
  inline void set_has_skill_a();
  inline void clear_has_skill_a();
  inline void set_has_skill_b();
  inline void clear_has_skill_b();
  inline void set_has_skill_a_c();
  inline void clear_has_skill_a_c();
  inline void set_has_skill_b_c();
  inline void clear_has_skill_b_c();
  inline void set_has_skill_c_c();
  inline void clear_has_skill_c_c();
  inline void set_has_skill_l();
  inline void clear_has_skill_l();
  inline void set_has_skill_h();
  inline void clear_has_skill_h();
  inline void set_has_form_s_w();
  inline void clear_has_form_s_w();
  inline void set_has_form_s_e();
  inline void clear_has_form_s_e();
  inline void set_has_form_s_l();
  inline void clear_has_form_s_l();
  inline void set_has_form_w();
  inline void clear_has_form_w();
  inline void set_has_form_e();
  inline void clear_has_form_e();
  inline void set_has_form_l();
  inline void clear_has_form_l();
  inline void set_has_npcattack();
  inline void clear_has_npcattack();
  inline void set_has_userattack();
  inline void clear_has_userattack();
  inline void set_has_hp_c();
  inline void clear_has_hp_c();
  inline void set_has_f_s_w();
  inline void clear_has_f_s_w();
  inline void set_has_f_s_e();
  inline void clear_has_f_s_e();
  inline void set_has_f_w();
  inline void clear_has_f_w();
  inline void set_has_f_e();
  inline void clear_has_f_e();
  inline void set_has_r_a();
  inline void clear_has_r_a();
  inline void set_has_r_b();
  inline void clear_has_r_b();
  inline void set_has_r_c();
  inline void clear_has_r_c();
  inline void set_has_randmin();
  inline void clear_has_randmin();
  inline void set_has_randmax();
  inline void clear_has_randmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 npcskill_;
  ::google::protobuf::int32 userskill_;
  ::google::protobuf::int32 skillmax_;
  ::google::protobuf::int32 skillmin_;
  ::google::protobuf::int32 skill_p_a_;
  ::google::protobuf::int32 skill_p_b_;
  double skillrange_;
  ::google::protobuf::int32 skill_a_;
  ::google::protobuf::int32 skill_b_;
  double skill_a_c_;
  double skill_b_c_;
  double skill_c_c_;
  ::google::protobuf::int32 skill_l_;
  ::google::protobuf::int32 skill_h_;
  double form_s_w_;
  double form_s_e_;
  double form_s_l_;
  double form_w_;
  double form_e_;
  double form_l_;
  double npcattack_;
  double userattack_;
  double hp_c_;
  double f_s_w_;
  double f_s_e_;
  double f_w_;
  double f_e_;
  double r_a_;
  double r_b_;
  double r_c_;
  ::google::protobuf::int32 randmin_;
  ::google::protobuf::int32 randmax_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoConstConfig* default_instance_;
};
// -------------------------------------------------------------------

class DemoNPCTime : public ::google::protobuf::Message {
 public:
  DemoNPCTime();
  virtual ~DemoNPCTime();

  DemoNPCTime(const DemoNPCTime& from);

  inline DemoNPCTime& operator=(const DemoNPCTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoNPCTime& default_instance();

  void Swap(DemoNPCTime* other);

  // implements Message ----------------------------------------------

  DemoNPCTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoNPCTime& from);
  void MergeFrom(const DemoNPCTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 npcid = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Demo.DemoNPCTime)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoNPCTime* default_instance_;
};
// -------------------------------------------------------------------

class DemoCityG : public ::google::protobuf::Message {
 public:
  DemoCityG();
  virtual ~DemoCityG();

  DemoCityG(const DemoCityG& from);

  inline DemoCityG& operator=(const DemoCityG& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoCityG& default_instance();

  void Swap(DemoCityG* other);

  // implements Message ----------------------------------------------

  DemoCityG* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoCityG& from);
  void MergeFrom(const DemoCityG& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required uint32 gid = 2;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 2;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // required uint32 scale = 3;
  inline bool has_scale() const;
  inline void clear_scale();
  static const int kScaleFieldNumber = 3;
  inline ::google::protobuf::uint32 scale() const;
  inline void set_scale(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Demo.DemoCityG)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_scale();
  inline void clear_has_scale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 scale_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoCityG* default_instance_;
};
// -------------------------------------------------------------------

class DemoReward : public ::google::protobuf::Message {
 public:
  DemoReward();
  virtual ~DemoReward();

  DemoReward(const DemoReward& from);

  inline DemoReward& operator=(const DemoReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoReward& default_instance();

  void Swap(DemoReward* other);

  // implements Message ----------------------------------------------

  DemoReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoReward& from);
  void MergeFrom(const DemoReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double v_c = 1;
  inline int v_c_size() const;
  inline void clear_v_c();
  static const int kVCFieldNumber = 1;
  inline double v_c(int index) const;
  inline void set_v_c(int index, double value);
  inline void add_v_c(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      v_c() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_v_c();

  // required double b_c_w = 2;
  inline bool has_b_c_w() const;
  inline void clear_b_c_w();
  static const int kBCWFieldNumber = 2;
  inline double b_c_w() const;
  inline void set_b_c_w(double value);

  // required double b_c_o = 3;
  inline bool has_b_c_o() const;
  inline void clear_b_c_o();
  static const int kBCOFieldNumber = 3;
  inline double b_c_o() const;
  inline void set_b_c_o(double value);

  // required double c_1 = 4;
  inline bool has_c_1() const;
  inline void clear_c_1();
  static const int kC1FieldNumber = 4;
  inline double c_1() const;
  inline void set_c_1(double value);

  // required double c_2 = 5;
  inline bool has_c_2() const;
  inline void clear_c_2();
  static const int kC2FieldNumber = 5;
  inline double c_2() const;
  inline void set_c_2(double value);

  // required double c_1_c = 6;
  inline bool has_c_1_c() const;
  inline void clear_c_1_c();
  static const int kC1CFieldNumber = 6;
  inline double c_1_c() const;
  inline void set_c_1_c(double value);

  // required double c_2_c = 7;
  inline bool has_c_2_c() const;
  inline void clear_c_2_c();
  static const int kC2CFieldNumber = 7;
  inline double c_2_c() const;
  inline void set_c_2_c(double value);

  // required double c_3_c = 8;
  inline bool has_c_3_c() const;
  inline void clear_c_3_c();
  static const int kC3CFieldNumber = 8;
  inline double c_3_c() const;
  inline void set_c_3_c(double value);

  // required uint32 i = 9;
  inline bool has_i() const;
  inline void clear_i();
  static const int kIFieldNumber = 9;
  inline ::google::protobuf::uint32 i() const;
  inline void set_i(::google::protobuf::uint32 value);

  // required double i_c = 10;
  inline bool has_i_c() const;
  inline void clear_i_c();
  static const int kICFieldNumber = 10;
  inline double i_c() const;
  inline void set_i_c(double value);

  // required double f_1 = 11;
  inline bool has_f_1() const;
  inline void clear_f_1();
  static const int kF1FieldNumber = 11;
  inline double f_1() const;
  inline void set_f_1(double value);

  // required double f_2 = 12;
  inline bool has_f_2() const;
  inline void clear_f_2();
  static const int kF2FieldNumber = 12;
  inline double f_2() const;
  inline void set_f_2(double value);

  // required double f_3 = 13;
  inline bool has_f_3() const;
  inline void clear_f_3();
  static const int kF3FieldNumber = 13;
  inline double f_3() const;
  inline void set_f_3(double value);

  // required double fb = 14;
  inline bool has_fb() const;
  inline void clear_fb();
  static const int kFbFieldNumber = 14;
  inline double fb() const;
  inline void set_fb(double value);

  // required double hexp = 15;
  inline bool has_hexp() const;
  inline void clear_hexp();
  static const int kHexpFieldNumber = 15;
  inline double hexp() const;
  inline void set_hexp(double value);

  // required double coin = 16;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 16;
  inline double coin() const;
  inline void set_coin(double value);

  // @@protoc_insertion_point(class_scope:Demo.DemoReward)
 private:
  inline void set_has_b_c_w();
  inline void clear_has_b_c_w();
  inline void set_has_b_c_o();
  inline void clear_has_b_c_o();
  inline void set_has_c_1();
  inline void clear_has_c_1();
  inline void set_has_c_2();
  inline void clear_has_c_2();
  inline void set_has_c_1_c();
  inline void clear_has_c_1_c();
  inline void set_has_c_2_c();
  inline void clear_has_c_2_c();
  inline void set_has_c_3_c();
  inline void clear_has_c_3_c();
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_i_c();
  inline void clear_has_i_c();
  inline void set_has_f_1();
  inline void clear_has_f_1();
  inline void set_has_f_2();
  inline void clear_has_f_2();
  inline void set_has_f_3();
  inline void clear_has_f_3();
  inline void set_has_fb();
  inline void clear_has_fb();
  inline void set_has_hexp();
  inline void clear_has_hexp();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > v_c_;
  double b_c_w_;
  double b_c_o_;
  double c_1_;
  double c_2_;
  double c_1_c_;
  double c_2_c_;
  double c_3_c_;
  double i_c_;
  double f_1_;
  double f_2_;
  double f_3_;
  double fb_;
  double hexp_;
  double coin_;
  ::google::protobuf::uint32 i_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoReward* default_instance_;
};
// -------------------------------------------------------------------

class DemoNPC : public ::google::protobuf::Message {
 public:
  DemoNPC();
  virtual ~DemoNPC();

  DemoNPC(const DemoNPC& from);

  inline DemoNPC& operator=(const DemoNPC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DemoNPC& default_instance();

  void Swap(DemoNPC* other);

  // implements Message ----------------------------------------------

  DemoNPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DemoNPC& from);
  void MergeFrom(const DemoNPC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 npc_change = 1;
  inline bool has_npc_change() const;
  inline void clear_npc_change();
  static const int kNpcChangeFieldNumber = 1;
  inline ::google::protobuf::uint32 npc_change() const;
  inline void set_npc_change(::google::protobuf::uint32 value);

  // required uint32 npc_max = 2;
  inline bool has_npc_max() const;
  inline void clear_npc_max();
  static const int kNpcMaxFieldNumber = 2;
  inline ::google::protobuf::uint32 npc_max() const;
  inline void set_npc_max(::google::protobuf::uint32 value);

  // required uint32 npc_m = 3;
  inline bool has_npc_m() const;
  inline void clear_npc_m();
  static const int kNpcMFieldNumber = 3;
  inline ::google::protobuf::uint32 npc_m() const;
  inline void set_npc_m(::google::protobuf::uint32 value);

  // required uint32 npc_extra = 4;
  inline bool has_npc_extra() const;
  inline void clear_npc_extra();
  static const int kNpcExtraFieldNumber = 4;
  inline ::google::protobuf::uint32 npc_extra() const;
  inline void set_npc_extra(::google::protobuf::uint32 value);

  // required uint32 npc_extra_s = 5;
  inline bool has_npc_extra_s() const;
  inline void clear_npc_extra_s();
  static const int kNpcExtraSFieldNumber = 5;
  inline ::google::protobuf::uint32 npc_extra_s() const;
  inline void set_npc_extra_s(::google::protobuf::uint32 value);

  // required uint32 npc_extra_m = 6;
  inline bool has_npc_extra_m() const;
  inline void clear_npc_extra_m();
  static const int kNpcExtraMFieldNumber = 6;
  inline ::google::protobuf::uint32 npc_extra_m() const;
  inline void set_npc_extra_m(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Demo.DemoNPC)
 private:
  inline void set_has_npc_change();
  inline void clear_has_npc_change();
  inline void set_has_npc_max();
  inline void clear_has_npc_max();
  inline void set_has_npc_m();
  inline void clear_has_npc_m();
  inline void set_has_npc_extra();
  inline void clear_has_npc_extra();
  inline void set_has_npc_extra_s();
  inline void clear_has_npc_extra_s();
  inline void set_has_npc_extra_m();
  inline void clear_has_npc_extra_m();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 npc_change_;
  ::google::protobuf::uint32 npc_max_;
  ::google::protobuf::uint32 npc_m_;
  ::google::protobuf::uint32 npc_extra_;
  ::google::protobuf::uint32 npc_extra_s_;
  ::google::protobuf::uint32 npc_extra_m_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static DemoNPC* default_instance_;
};
// -------------------------------------------------------------------

class BattleRewardDay : public ::google::protobuf::Message {
 public:
  BattleRewardDay();
  virtual ~BattleRewardDay();

  BattleRewardDay(const BattleRewardDay& from);

  inline BattleRewardDay& operator=(const BattleRewardDay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleRewardDay& default_instance();

  void Swap(BattleRewardDay* other);

  // implements Message ----------------------------------------------

  BattleRewardDay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleRewardDay& from);
  void MergeFrom(const BattleRewardDay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 c = 2;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 2;
  inline ::google::protobuf::uint32 c() const;
  inline void set_c(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Demo.BattleRewardDay)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_c();
  inline void clear_has_c();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 c_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static BattleRewardDay* default_instance_;
};
// -------------------------------------------------------------------

class BattleReward : public ::google::protobuf::Message {
 public:
  BattleReward();
  virtual ~BattleReward();

  BattleReward(const BattleReward& from);

  inline BattleReward& operator=(const BattleReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleReward& default_instance();

  void Swap(BattleReward* other);

  // implements Message ----------------------------------------------

  BattleReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleReward& from);
  void MergeFrom(const BattleReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 r = 2;
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 2;
  inline ::google::protobuf::uint32 r() const;
  inline void set_r(::google::protobuf::uint32 value);

  // required uint32 c = 3;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 3;
  inline ::google::protobuf::uint32 c() const;
  inline void set_c(::google::protobuf::uint32 value);

  // required uint32 cu = 4;
  inline bool has_cu() const;
  inline void clear_cu();
  static const int kCuFieldNumber = 4;
  inline ::google::protobuf::uint32 cu() const;
  inline void set_cu(::google::protobuf::uint32 value);

  // repeated .Demo.BattleRewardDay count = 5;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline const ::Demo::BattleRewardDay& count(int index) const;
  inline ::Demo::BattleRewardDay* mutable_count(int index);
  inline ::Demo::BattleRewardDay* add_count();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::BattleRewardDay >&
      count() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::BattleRewardDay >*
      mutable_count();

  // @@protoc_insertion_point(class_scope:Demo.BattleReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_cu();
  inline void clear_has_cu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 r_;
  ::google::protobuf::uint32 c_;
  ::google::protobuf::uint32 cu_;
  ::google::protobuf::RepeatedPtrField< ::Demo::BattleRewardDay > count_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static BattleReward* default_instance_;
};
// -------------------------------------------------------------------

class CityNPCDay : public ::google::protobuf::Message {
 public:
  CityNPCDay();
  virtual ~CityNPCDay();

  CityNPCDay(const CityNPCDay& from);

  inline CityNPCDay& operator=(const CityNPCDay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityNPCDay& default_instance();

  void Swap(CityNPCDay* other);

  // implements Message ----------------------------------------------

  CityNPCDay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityNPCDay& from);
  void MergeFrom(const CityNPCDay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated uint32 npc = 2;
  inline int npc_size() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 2;
  inline ::google::protobuf::uint32 npc(int index) const;
  inline void set_npc(int index, ::google::protobuf::uint32 value);
  inline void add_npc(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      npc() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_npc();

  // @@protoc_insertion_point(class_scope:Demo.CityNPCDay)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npc_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static CityNPCDay* default_instance_;
};
// -------------------------------------------------------------------

class CityReward : public ::google::protobuf::Message {
 public:
  CityReward();
  virtual ~CityReward();

  CityReward(const CityReward& from);

  inline CityReward& operator=(const CityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityReward& default_instance();

  void Swap(CityReward* other);

  // implements Message ----------------------------------------------

  CityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityReward& from);
  void MergeFrom(const CityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 r = 2;
  inline int r_size() const;
  inline void clear_r();
  static const int kRFieldNumber = 2;
  inline ::google::protobuf::uint32 r(int index) const;
  inline void set_r(int index, ::google::protobuf::uint32 value);
  inline void add_r(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      r() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_r();

  // repeated uint32 c = 3;
  inline int c_size() const;
  inline void clear_c();
  static const int kCFieldNumber = 3;
  inline ::google::protobuf::uint32 c(int index) const;
  inline void set_c(int index, ::google::protobuf::uint32 value);
  inline void add_c(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      c() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_c();

  // repeated .Demo.CityNPCDay npc = 4;
  inline int npc_size() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 4;
  inline const ::Demo::CityNPCDay& npc(int index) const;
  inline ::Demo::CityNPCDay* mutable_npc(int index);
  inline ::Demo::CityNPCDay* add_npc();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::CityNPCDay >&
      npc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::CityNPCDay >*
      mutable_npc();

  // @@protoc_insertion_point(class_scope:Demo.CityReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > r_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > c_;
  ::google::protobuf::RepeatedPtrField< ::Demo::CityNPCDay > npc_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static CityReward* default_instance_;
};
// -------------------------------------------------------------------

class Demo : public ::google::protobuf::Message {
 public:
  Demo();
  virtual ~Demo();

  Demo(const Demo& from);

  inline Demo& operator=(const Demo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo& default_instance();

  void Swap(Demo* other);

  // implements Message ----------------------------------------------

  Demo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Demo& from);
  void MergeFrom(const Demo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Demo.DemoTimeConfig timeconfig = 1;
  inline bool has_timeconfig() const;
  inline void clear_timeconfig();
  static const int kTimeconfigFieldNumber = 1;
  inline const ::Demo::DemoTimeConfig& timeconfig() const;
  inline ::Demo::DemoTimeConfig* mutable_timeconfig();
  inline ::Demo::DemoTimeConfig* release_timeconfig();
  inline void set_allocated_timeconfig(::Demo::DemoTimeConfig* timeconfig);

  // required .Demo.DemoConstConfig constconfig = 2;
  inline bool has_constconfig() const;
  inline void clear_constconfig();
  static const int kConstconfigFieldNumber = 2;
  inline const ::Demo::DemoConstConfig& constconfig() const;
  inline ::Demo::DemoConstConfig* mutable_constconfig();
  inline ::Demo::DemoConstConfig* release_constconfig();
  inline void set_allocated_constconfig(::Demo::DemoConstConfig* constconfig);

  // repeated .Demo.DemoCityG city = 3;
  inline int city_size() const;
  inline void clear_city();
  static const int kCityFieldNumber = 3;
  inline const ::Demo::DemoCityG& city(int index) const;
  inline ::Demo::DemoCityG* mutable_city(int index);
  inline ::Demo::DemoCityG* add_city();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoCityG >&
      city() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoCityG >*
      mutable_city();

  // repeated .Demo.DemoNPCTime normalnpc = 4;
  inline int normalnpc_size() const;
  inline void clear_normalnpc();
  static const int kNormalnpcFieldNumber = 4;
  inline const ::Demo::DemoNPCTime& normalnpc(int index) const;
  inline ::Demo::DemoNPCTime* mutable_normalnpc(int index);
  inline ::Demo::DemoNPCTime* add_normalnpc();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
      normalnpc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
      mutable_normalnpc();

  // repeated .Demo.DemoNPCTime attacknpc = 5;
  inline int attacknpc_size() const;
  inline void clear_attacknpc();
  static const int kAttacknpcFieldNumber = 5;
  inline const ::Demo::DemoNPCTime& attacknpc(int index) const;
  inline ::Demo::DemoNPCTime* mutable_attacknpc(int index);
  inline ::Demo::DemoNPCTime* add_attacknpc();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
      attacknpc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
      mutable_attacknpc();

  // repeated .Demo.DemoNPCTime defendnpc = 6;
  inline int defendnpc_size() const;
  inline void clear_defendnpc();
  static const int kDefendnpcFieldNumber = 6;
  inline const ::Demo::DemoNPCTime& defendnpc(int index) const;
  inline ::Demo::DemoNPCTime* mutable_defendnpc(int index);
  inline ::Demo::DemoNPCTime* add_defendnpc();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
      defendnpc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
      mutable_defendnpc();

  // required .Demo.DemoReward reward = 7;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 7;
  inline const ::Demo::DemoReward& reward() const;
  inline ::Demo::DemoReward* mutable_reward();
  inline ::Demo::DemoReward* release_reward();
  inline void set_allocated_reward(::Demo::DemoReward* reward);

  // required .Demo.DemoNPC npc = 8;
  inline bool has_npc() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 8;
  inline const ::Demo::DemoNPC& npc() const;
  inline ::Demo::DemoNPC* mutable_npc();
  inline ::Demo::DemoNPC* release_npc();
  inline void set_allocated_npc(::Demo::DemoNPC* npc);

  // repeated uint32 killreward = 9;
  inline int killreward_size() const;
  inline void clear_killreward();
  static const int kKillrewardFieldNumber = 9;
  inline ::google::protobuf::uint32 killreward(int index) const;
  inline void set_killreward(int index, ::google::protobuf::uint32 value);
  inline void add_killreward(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      killreward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_killreward();

  // repeated .Demo.BattleReward battlereward = 10;
  inline int battlereward_size() const;
  inline void clear_battlereward();
  static const int kBattlerewardFieldNumber = 10;
  inline const ::Demo::BattleReward& battlereward(int index) const;
  inline ::Demo::BattleReward* mutable_battlereward(int index);
  inline ::Demo::BattleReward* add_battlereward();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::BattleReward >&
      battlereward() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::BattleReward >*
      mutable_battlereward();

  // repeated .Demo.CityReward cityreward = 11;
  inline int cityreward_size() const;
  inline void clear_cityreward();
  static const int kCityrewardFieldNumber = 11;
  inline const ::Demo::CityReward& cityreward(int index) const;
  inline ::Demo::CityReward* mutable_cityreward(int index);
  inline ::Demo::CityReward* add_cityreward();
  inline const ::google::protobuf::RepeatedPtrField< ::Demo::CityReward >&
      cityreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::Demo::CityReward >*
      mutable_cityreward();

  // @@protoc_insertion_point(class_scope:Demo.Demo)
 private:
  inline void set_has_timeconfig();
  inline void clear_has_timeconfig();
  inline void set_has_constconfig();
  inline void clear_has_constconfig();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_npc();
  inline void clear_has_npc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Demo::DemoTimeConfig* timeconfig_;
  ::Demo::DemoConstConfig* constconfig_;
  ::google::protobuf::RepeatedPtrField< ::Demo::DemoCityG > city_;
  ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime > normalnpc_;
  ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime > attacknpc_;
  ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime > defendnpc_;
  ::Demo::DemoReward* reward_;
  ::Demo::DemoNPC* npc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killreward_;
  ::google::protobuf::RepeatedPtrField< ::Demo::BattleReward > battlereward_;
  ::google::protobuf::RepeatedPtrField< ::Demo::CityReward > cityreward_;
  friend void  protobuf_AddDesc_Demo_2eproto();
  friend void protobuf_AssignDesc_Demo_2eproto();
  friend void protobuf_ShutdownFile_Demo_2eproto();

  void InitAsDefaultInstance();
  static Demo* default_instance_;
};
// ===================================================================


// ===================================================================

// DemoTimeConfig

// required uint32 npcwait = 1;
inline bool DemoTimeConfig::has_npcwait() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DemoTimeConfig::set_has_npcwait() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DemoTimeConfig::clear_has_npcwait() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DemoTimeConfig::clear_npcwait() {
  npcwait_ = 0u;
  clear_has_npcwait();
}
inline ::google::protobuf::uint32 DemoTimeConfig::npcwait() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.npcwait)
  return npcwait_;
}
inline void DemoTimeConfig::set_npcwait(::google::protobuf::uint32 value) {
  set_has_npcwait();
  npcwait_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.npcwait)
}

// required uint32 userwait = 2;
inline bool DemoTimeConfig::has_userwait() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoTimeConfig::set_has_userwait() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoTimeConfig::clear_has_userwait() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoTimeConfig::clear_userwait() {
  userwait_ = 0u;
  clear_has_userwait();
}
inline ::google::protobuf::uint32 DemoTimeConfig::userwait() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.userwait)
  return userwait_;
}
inline void DemoTimeConfig::set_userwait(::google::protobuf::uint32 value) {
  set_has_userwait();
  userwait_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.userwait)
}

// required uint32 move = 3;
inline bool DemoTimeConfig::has_move() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DemoTimeConfig::set_has_move() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DemoTimeConfig::clear_has_move() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DemoTimeConfig::clear_move() {
  move_ = 0u;
  clear_has_move();
}
inline ::google::protobuf::uint32 DemoTimeConfig::move() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.move)
  return move_;
}
inline void DemoTimeConfig::set_move(::google::protobuf::uint32 value) {
  set_has_move();
  move_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.move)
}

// required uint32 skill = 4;
inline bool DemoTimeConfig::has_skill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DemoTimeConfig::set_has_skill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DemoTimeConfig::clear_has_skill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DemoTimeConfig::clear_skill() {
  skill_ = 0u;
  clear_has_skill();
}
inline ::google::protobuf::uint32 DemoTimeConfig::skill() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.skill)
  return skill_;
}
inline void DemoTimeConfig::set_skill(::google::protobuf::uint32 value) {
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.skill)
}

// required uint32 skilldodge = 5;
inline bool DemoTimeConfig::has_skilldodge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DemoTimeConfig::set_has_skilldodge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DemoTimeConfig::clear_has_skilldodge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DemoTimeConfig::clear_skilldodge() {
  skilldodge_ = 0u;
  clear_has_skilldodge();
}
inline ::google::protobuf::uint32 DemoTimeConfig::skilldodge() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.skilldodge)
  return skilldodge_;
}
inline void DemoTimeConfig::set_skilldodge(::google::protobuf::uint32 value) {
  set_has_skilldodge();
  skilldodge_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.skilldodge)
}

// required uint32 skillattack = 6;
inline bool DemoTimeConfig::has_skillattack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DemoTimeConfig::set_has_skillattack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DemoTimeConfig::clear_has_skillattack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DemoTimeConfig::clear_skillattack() {
  skillattack_ = 0u;
  clear_has_skillattack();
}
inline ::google::protobuf::uint32 DemoTimeConfig::skillattack() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.skillattack)
  return skillattack_;
}
inline void DemoTimeConfig::set_skillattack(::google::protobuf::uint32 value) {
  set_has_skillattack();
  skillattack_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.skillattack)
}

// required uint32 form = 7;
inline bool DemoTimeConfig::has_form() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DemoTimeConfig::set_has_form() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DemoTimeConfig::clear_has_form() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DemoTimeConfig::clear_form() {
  form_ = 0u;
  clear_has_form();
}
inline ::google::protobuf::uint32 DemoTimeConfig::form() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.form)
  return form_;
}
inline void DemoTimeConfig::set_form(::google::protobuf::uint32 value) {
  set_has_form();
  form_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.form)
}

// required uint32 attack = 8;
inline bool DemoTimeConfig::has_attack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DemoTimeConfig::set_has_attack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DemoTimeConfig::clear_has_attack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DemoTimeConfig::clear_attack() {
  attack_ = 0u;
  clear_has_attack();
}
inline ::google::protobuf::uint32 DemoTimeConfig::attack() const {
  // @@protoc_insertion_point(field_get:Demo.DemoTimeConfig.attack)
  return attack_;
}
inline void DemoTimeConfig::set_attack(::google::protobuf::uint32 value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoTimeConfig.attack)
}

// -------------------------------------------------------------------

// DemoConstConfig

// required int32 npcskill = 1;
inline bool DemoConstConfig::has_npcskill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DemoConstConfig::set_has_npcskill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DemoConstConfig::clear_has_npcskill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DemoConstConfig::clear_npcskill() {
  npcskill_ = 0;
  clear_has_npcskill();
}
inline ::google::protobuf::int32 DemoConstConfig::npcskill() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.npcskill)
  return npcskill_;
}
inline void DemoConstConfig::set_npcskill(::google::protobuf::int32 value) {
  set_has_npcskill();
  npcskill_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.npcskill)
}

// required int32 userskill = 2;
inline bool DemoConstConfig::has_userskill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoConstConfig::set_has_userskill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoConstConfig::clear_has_userskill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoConstConfig::clear_userskill() {
  userskill_ = 0;
  clear_has_userskill();
}
inline ::google::protobuf::int32 DemoConstConfig::userskill() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.userskill)
  return userskill_;
}
inline void DemoConstConfig::set_userskill(::google::protobuf::int32 value) {
  set_has_userskill();
  userskill_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.userskill)
}

// required int32 skillmax = 3;
inline bool DemoConstConfig::has_skillmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DemoConstConfig::set_has_skillmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DemoConstConfig::clear_has_skillmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DemoConstConfig::clear_skillmax() {
  skillmax_ = 0;
  clear_has_skillmax();
}
inline ::google::protobuf::int32 DemoConstConfig::skillmax() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skillmax)
  return skillmax_;
}
inline void DemoConstConfig::set_skillmax(::google::protobuf::int32 value) {
  set_has_skillmax();
  skillmax_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skillmax)
}

// required int32 skillmin = 4;
inline bool DemoConstConfig::has_skillmin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DemoConstConfig::set_has_skillmin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DemoConstConfig::clear_has_skillmin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DemoConstConfig::clear_skillmin() {
  skillmin_ = 0;
  clear_has_skillmin();
}
inline ::google::protobuf::int32 DemoConstConfig::skillmin() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skillmin)
  return skillmin_;
}
inline void DemoConstConfig::set_skillmin(::google::protobuf::int32 value) {
  set_has_skillmin();
  skillmin_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skillmin)
}

// required int32 skill_p_a = 5;
inline bool DemoConstConfig::has_skill_p_a() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DemoConstConfig::set_has_skill_p_a() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DemoConstConfig::clear_has_skill_p_a() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DemoConstConfig::clear_skill_p_a() {
  skill_p_a_ = 0;
  clear_has_skill_p_a();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_p_a() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_p_a)
  return skill_p_a_;
}
inline void DemoConstConfig::set_skill_p_a(::google::protobuf::int32 value) {
  set_has_skill_p_a();
  skill_p_a_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_p_a)
}

// required int32 skill_p_b = 6;
inline bool DemoConstConfig::has_skill_p_b() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DemoConstConfig::set_has_skill_p_b() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DemoConstConfig::clear_has_skill_p_b() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DemoConstConfig::clear_skill_p_b() {
  skill_p_b_ = 0;
  clear_has_skill_p_b();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_p_b() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_p_b)
  return skill_p_b_;
}
inline void DemoConstConfig::set_skill_p_b(::google::protobuf::int32 value) {
  set_has_skill_p_b();
  skill_p_b_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_p_b)
}

// required double skillrange = 7;
inline bool DemoConstConfig::has_skillrange() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DemoConstConfig::set_has_skillrange() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DemoConstConfig::clear_has_skillrange() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DemoConstConfig::clear_skillrange() {
  skillrange_ = 0;
  clear_has_skillrange();
}
inline double DemoConstConfig::skillrange() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skillrange)
  return skillrange_;
}
inline void DemoConstConfig::set_skillrange(double value) {
  set_has_skillrange();
  skillrange_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skillrange)
}

// required int32 skill_a = 8;
inline bool DemoConstConfig::has_skill_a() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DemoConstConfig::set_has_skill_a() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DemoConstConfig::clear_has_skill_a() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DemoConstConfig::clear_skill_a() {
  skill_a_ = 0;
  clear_has_skill_a();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_a() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_a)
  return skill_a_;
}
inline void DemoConstConfig::set_skill_a(::google::protobuf::int32 value) {
  set_has_skill_a();
  skill_a_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_a)
}

// required int32 skill_b = 9;
inline bool DemoConstConfig::has_skill_b() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DemoConstConfig::set_has_skill_b() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DemoConstConfig::clear_has_skill_b() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DemoConstConfig::clear_skill_b() {
  skill_b_ = 0;
  clear_has_skill_b();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_b() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_b)
  return skill_b_;
}
inline void DemoConstConfig::set_skill_b(::google::protobuf::int32 value) {
  set_has_skill_b();
  skill_b_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_b)
}

// required double skill_a_c = 10;
inline bool DemoConstConfig::has_skill_a_c() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DemoConstConfig::set_has_skill_a_c() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DemoConstConfig::clear_has_skill_a_c() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DemoConstConfig::clear_skill_a_c() {
  skill_a_c_ = 0;
  clear_has_skill_a_c();
}
inline double DemoConstConfig::skill_a_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_a_c)
  return skill_a_c_;
}
inline void DemoConstConfig::set_skill_a_c(double value) {
  set_has_skill_a_c();
  skill_a_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_a_c)
}

// required double skill_b_c = 11;
inline bool DemoConstConfig::has_skill_b_c() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DemoConstConfig::set_has_skill_b_c() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DemoConstConfig::clear_has_skill_b_c() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DemoConstConfig::clear_skill_b_c() {
  skill_b_c_ = 0;
  clear_has_skill_b_c();
}
inline double DemoConstConfig::skill_b_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_b_c)
  return skill_b_c_;
}
inline void DemoConstConfig::set_skill_b_c(double value) {
  set_has_skill_b_c();
  skill_b_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_b_c)
}

// required double skill_c_c = 12;
inline bool DemoConstConfig::has_skill_c_c() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DemoConstConfig::set_has_skill_c_c() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DemoConstConfig::clear_has_skill_c_c() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DemoConstConfig::clear_skill_c_c() {
  skill_c_c_ = 0;
  clear_has_skill_c_c();
}
inline double DemoConstConfig::skill_c_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_c_c)
  return skill_c_c_;
}
inline void DemoConstConfig::set_skill_c_c(double value) {
  set_has_skill_c_c();
  skill_c_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_c_c)
}

// required int32 skill_l = 13;
inline bool DemoConstConfig::has_skill_l() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DemoConstConfig::set_has_skill_l() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DemoConstConfig::clear_has_skill_l() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DemoConstConfig::clear_skill_l() {
  skill_l_ = 0;
  clear_has_skill_l();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_l() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_l)
  return skill_l_;
}
inline void DemoConstConfig::set_skill_l(::google::protobuf::int32 value) {
  set_has_skill_l();
  skill_l_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_l)
}

// required int32 skill_h = 14;
inline bool DemoConstConfig::has_skill_h() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DemoConstConfig::set_has_skill_h() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DemoConstConfig::clear_has_skill_h() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DemoConstConfig::clear_skill_h() {
  skill_h_ = 0;
  clear_has_skill_h();
}
inline ::google::protobuf::int32 DemoConstConfig::skill_h() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.skill_h)
  return skill_h_;
}
inline void DemoConstConfig::set_skill_h(::google::protobuf::int32 value) {
  set_has_skill_h();
  skill_h_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.skill_h)
}

// required double form_s_w = 15;
inline bool DemoConstConfig::has_form_s_w() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DemoConstConfig::set_has_form_s_w() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DemoConstConfig::clear_has_form_s_w() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DemoConstConfig::clear_form_s_w() {
  form_s_w_ = 0;
  clear_has_form_s_w();
}
inline double DemoConstConfig::form_s_w() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_s_w)
  return form_s_w_;
}
inline void DemoConstConfig::set_form_s_w(double value) {
  set_has_form_s_w();
  form_s_w_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_s_w)
}

// required double form_s_e = 16;
inline bool DemoConstConfig::has_form_s_e() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DemoConstConfig::set_has_form_s_e() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DemoConstConfig::clear_has_form_s_e() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DemoConstConfig::clear_form_s_e() {
  form_s_e_ = 0;
  clear_has_form_s_e();
}
inline double DemoConstConfig::form_s_e() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_s_e)
  return form_s_e_;
}
inline void DemoConstConfig::set_form_s_e(double value) {
  set_has_form_s_e();
  form_s_e_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_s_e)
}

// required double form_s_l = 17;
inline bool DemoConstConfig::has_form_s_l() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DemoConstConfig::set_has_form_s_l() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DemoConstConfig::clear_has_form_s_l() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DemoConstConfig::clear_form_s_l() {
  form_s_l_ = 0;
  clear_has_form_s_l();
}
inline double DemoConstConfig::form_s_l() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_s_l)
  return form_s_l_;
}
inline void DemoConstConfig::set_form_s_l(double value) {
  set_has_form_s_l();
  form_s_l_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_s_l)
}

// required double form_w = 18;
inline bool DemoConstConfig::has_form_w() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DemoConstConfig::set_has_form_w() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DemoConstConfig::clear_has_form_w() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DemoConstConfig::clear_form_w() {
  form_w_ = 0;
  clear_has_form_w();
}
inline double DemoConstConfig::form_w() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_w)
  return form_w_;
}
inline void DemoConstConfig::set_form_w(double value) {
  set_has_form_w();
  form_w_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_w)
}

// required double form_e = 19;
inline bool DemoConstConfig::has_form_e() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DemoConstConfig::set_has_form_e() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DemoConstConfig::clear_has_form_e() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DemoConstConfig::clear_form_e() {
  form_e_ = 0;
  clear_has_form_e();
}
inline double DemoConstConfig::form_e() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_e)
  return form_e_;
}
inline void DemoConstConfig::set_form_e(double value) {
  set_has_form_e();
  form_e_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_e)
}

// required double form_l = 20;
inline bool DemoConstConfig::has_form_l() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void DemoConstConfig::set_has_form_l() {
  _has_bits_[0] |= 0x00080000u;
}
inline void DemoConstConfig::clear_has_form_l() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void DemoConstConfig::clear_form_l() {
  form_l_ = 0;
  clear_has_form_l();
}
inline double DemoConstConfig::form_l() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.form_l)
  return form_l_;
}
inline void DemoConstConfig::set_form_l(double value) {
  set_has_form_l();
  form_l_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.form_l)
}

// required double npcattack = 21;
inline bool DemoConstConfig::has_npcattack() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DemoConstConfig::set_has_npcattack() {
  _has_bits_[0] |= 0x00100000u;
}
inline void DemoConstConfig::clear_has_npcattack() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void DemoConstConfig::clear_npcattack() {
  npcattack_ = 0;
  clear_has_npcattack();
}
inline double DemoConstConfig::npcattack() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.npcattack)
  return npcattack_;
}
inline void DemoConstConfig::set_npcattack(double value) {
  set_has_npcattack();
  npcattack_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.npcattack)
}

// required double userattack = 22;
inline bool DemoConstConfig::has_userattack() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DemoConstConfig::set_has_userattack() {
  _has_bits_[0] |= 0x00200000u;
}
inline void DemoConstConfig::clear_has_userattack() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void DemoConstConfig::clear_userattack() {
  userattack_ = 0;
  clear_has_userattack();
}
inline double DemoConstConfig::userattack() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.userattack)
  return userattack_;
}
inline void DemoConstConfig::set_userattack(double value) {
  set_has_userattack();
  userattack_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.userattack)
}

// required double hp_c = 23;
inline bool DemoConstConfig::has_hp_c() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void DemoConstConfig::set_has_hp_c() {
  _has_bits_[0] |= 0x00400000u;
}
inline void DemoConstConfig::clear_has_hp_c() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void DemoConstConfig::clear_hp_c() {
  hp_c_ = 0;
  clear_has_hp_c();
}
inline double DemoConstConfig::hp_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.hp_c)
  return hp_c_;
}
inline void DemoConstConfig::set_hp_c(double value) {
  set_has_hp_c();
  hp_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.hp_c)
}

// required double f_s_w = 24;
inline bool DemoConstConfig::has_f_s_w() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void DemoConstConfig::set_has_f_s_w() {
  _has_bits_[0] |= 0x00800000u;
}
inline void DemoConstConfig::clear_has_f_s_w() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void DemoConstConfig::clear_f_s_w() {
  f_s_w_ = 0;
  clear_has_f_s_w();
}
inline double DemoConstConfig::f_s_w() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.f_s_w)
  return f_s_w_;
}
inline void DemoConstConfig::set_f_s_w(double value) {
  set_has_f_s_w();
  f_s_w_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.f_s_w)
}

// required double f_s_e = 25;
inline bool DemoConstConfig::has_f_s_e() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void DemoConstConfig::set_has_f_s_e() {
  _has_bits_[0] |= 0x01000000u;
}
inline void DemoConstConfig::clear_has_f_s_e() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void DemoConstConfig::clear_f_s_e() {
  f_s_e_ = 0;
  clear_has_f_s_e();
}
inline double DemoConstConfig::f_s_e() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.f_s_e)
  return f_s_e_;
}
inline void DemoConstConfig::set_f_s_e(double value) {
  set_has_f_s_e();
  f_s_e_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.f_s_e)
}

// required double f_w = 26;
inline bool DemoConstConfig::has_f_w() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void DemoConstConfig::set_has_f_w() {
  _has_bits_[0] |= 0x02000000u;
}
inline void DemoConstConfig::clear_has_f_w() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void DemoConstConfig::clear_f_w() {
  f_w_ = 0;
  clear_has_f_w();
}
inline double DemoConstConfig::f_w() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.f_w)
  return f_w_;
}
inline void DemoConstConfig::set_f_w(double value) {
  set_has_f_w();
  f_w_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.f_w)
}

// required double f_e = 27;
inline bool DemoConstConfig::has_f_e() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void DemoConstConfig::set_has_f_e() {
  _has_bits_[0] |= 0x04000000u;
}
inline void DemoConstConfig::clear_has_f_e() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void DemoConstConfig::clear_f_e() {
  f_e_ = 0;
  clear_has_f_e();
}
inline double DemoConstConfig::f_e() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.f_e)
  return f_e_;
}
inline void DemoConstConfig::set_f_e(double value) {
  set_has_f_e();
  f_e_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.f_e)
}

// required double r_a = 28;
inline bool DemoConstConfig::has_r_a() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void DemoConstConfig::set_has_r_a() {
  _has_bits_[0] |= 0x08000000u;
}
inline void DemoConstConfig::clear_has_r_a() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void DemoConstConfig::clear_r_a() {
  r_a_ = 0;
  clear_has_r_a();
}
inline double DemoConstConfig::r_a() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.r_a)
  return r_a_;
}
inline void DemoConstConfig::set_r_a(double value) {
  set_has_r_a();
  r_a_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.r_a)
}

// required double r_b = 29;
inline bool DemoConstConfig::has_r_b() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void DemoConstConfig::set_has_r_b() {
  _has_bits_[0] |= 0x10000000u;
}
inline void DemoConstConfig::clear_has_r_b() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void DemoConstConfig::clear_r_b() {
  r_b_ = 0;
  clear_has_r_b();
}
inline double DemoConstConfig::r_b() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.r_b)
  return r_b_;
}
inline void DemoConstConfig::set_r_b(double value) {
  set_has_r_b();
  r_b_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.r_b)
}

// required double r_c = 30;
inline bool DemoConstConfig::has_r_c() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void DemoConstConfig::set_has_r_c() {
  _has_bits_[0] |= 0x20000000u;
}
inline void DemoConstConfig::clear_has_r_c() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void DemoConstConfig::clear_r_c() {
  r_c_ = 0;
  clear_has_r_c();
}
inline double DemoConstConfig::r_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.r_c)
  return r_c_;
}
inline void DemoConstConfig::set_r_c(double value) {
  set_has_r_c();
  r_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.r_c)
}

// required int32 randmin = 31;
inline bool DemoConstConfig::has_randmin() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void DemoConstConfig::set_has_randmin() {
  _has_bits_[0] |= 0x40000000u;
}
inline void DemoConstConfig::clear_has_randmin() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void DemoConstConfig::clear_randmin() {
  randmin_ = 0;
  clear_has_randmin();
}
inline ::google::protobuf::int32 DemoConstConfig::randmin() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.randmin)
  return randmin_;
}
inline void DemoConstConfig::set_randmin(::google::protobuf::int32 value) {
  set_has_randmin();
  randmin_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.randmin)
}

// required int32 randmax = 32;
inline bool DemoConstConfig::has_randmax() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void DemoConstConfig::set_has_randmax() {
  _has_bits_[0] |= 0x80000000u;
}
inline void DemoConstConfig::clear_has_randmax() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void DemoConstConfig::clear_randmax() {
  randmax_ = 0;
  clear_has_randmax();
}
inline ::google::protobuf::int32 DemoConstConfig::randmax() const {
  // @@protoc_insertion_point(field_get:Demo.DemoConstConfig.randmax)
  return randmax_;
}
inline void DemoConstConfig::set_randmax(::google::protobuf::int32 value) {
  set_has_randmax();
  randmax_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoConstConfig.randmax)
}

// -------------------------------------------------------------------

// DemoNPCTime

// required uint32 day = 1;
inline bool DemoNPCTime::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DemoNPCTime::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DemoNPCTime::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DemoNPCTime::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 DemoNPCTime::day() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPCTime.day)
  return day_;
}
inline void DemoNPCTime::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPCTime.day)
}

// required uint32 npcid = 2;
inline bool DemoNPCTime::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoNPCTime::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoNPCTime::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoNPCTime::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 DemoNPCTime::npcid() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPCTime.npcid)
  return npcid_;
}
inline void DemoNPCTime::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPCTime.npcid)
}

// -------------------------------------------------------------------

// DemoCityG

// required uint32 cid = 1;
inline bool DemoCityG::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DemoCityG::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DemoCityG::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DemoCityG::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 DemoCityG::cid() const {
  // @@protoc_insertion_point(field_get:Demo.DemoCityG.cid)
  return cid_;
}
inline void DemoCityG::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoCityG.cid)
}

// required uint32 gid = 2;
inline bool DemoCityG::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoCityG::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoCityG::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoCityG::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 DemoCityG::gid() const {
  // @@protoc_insertion_point(field_get:Demo.DemoCityG.gid)
  return gid_;
}
inline void DemoCityG::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoCityG.gid)
}

// required uint32 scale = 3;
inline bool DemoCityG::has_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DemoCityG::set_has_scale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DemoCityG::clear_has_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DemoCityG::clear_scale() {
  scale_ = 0u;
  clear_has_scale();
}
inline ::google::protobuf::uint32 DemoCityG::scale() const {
  // @@protoc_insertion_point(field_get:Demo.DemoCityG.scale)
  return scale_;
}
inline void DemoCityG::set_scale(::google::protobuf::uint32 value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoCityG.scale)
}

// -------------------------------------------------------------------

// DemoReward

// repeated double v_c = 1;
inline int DemoReward::v_c_size() const {
  return v_c_.size();
}
inline void DemoReward::clear_v_c() {
  v_c_.Clear();
}
inline double DemoReward::v_c(int index) const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.v_c)
  return v_c_.Get(index);
}
inline void DemoReward::set_v_c(int index, double value) {
  v_c_.Set(index, value);
  // @@protoc_insertion_point(field_set:Demo.DemoReward.v_c)
}
inline void DemoReward::add_v_c(double value) {
  v_c_.Add(value);
  // @@protoc_insertion_point(field_add:Demo.DemoReward.v_c)
}
inline const ::google::protobuf::RepeatedField< double >&
DemoReward::v_c() const {
  // @@protoc_insertion_point(field_list:Demo.DemoReward.v_c)
  return v_c_;
}
inline ::google::protobuf::RepeatedField< double >*
DemoReward::mutable_v_c() {
  // @@protoc_insertion_point(field_mutable_list:Demo.DemoReward.v_c)
  return &v_c_;
}

// required double b_c_w = 2;
inline bool DemoReward::has_b_c_w() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoReward::set_has_b_c_w() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoReward::clear_has_b_c_w() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoReward::clear_b_c_w() {
  b_c_w_ = 0;
  clear_has_b_c_w();
}
inline double DemoReward::b_c_w() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.b_c_w)
  return b_c_w_;
}
inline void DemoReward::set_b_c_w(double value) {
  set_has_b_c_w();
  b_c_w_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.b_c_w)
}

// required double b_c_o = 3;
inline bool DemoReward::has_b_c_o() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DemoReward::set_has_b_c_o() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DemoReward::clear_has_b_c_o() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DemoReward::clear_b_c_o() {
  b_c_o_ = 0;
  clear_has_b_c_o();
}
inline double DemoReward::b_c_o() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.b_c_o)
  return b_c_o_;
}
inline void DemoReward::set_b_c_o(double value) {
  set_has_b_c_o();
  b_c_o_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.b_c_o)
}

// required double c_1 = 4;
inline bool DemoReward::has_c_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DemoReward::set_has_c_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DemoReward::clear_has_c_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DemoReward::clear_c_1() {
  c_1_ = 0;
  clear_has_c_1();
}
inline double DemoReward::c_1() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.c_1)
  return c_1_;
}
inline void DemoReward::set_c_1(double value) {
  set_has_c_1();
  c_1_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.c_1)
}

// required double c_2 = 5;
inline bool DemoReward::has_c_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DemoReward::set_has_c_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DemoReward::clear_has_c_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DemoReward::clear_c_2() {
  c_2_ = 0;
  clear_has_c_2();
}
inline double DemoReward::c_2() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.c_2)
  return c_2_;
}
inline void DemoReward::set_c_2(double value) {
  set_has_c_2();
  c_2_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.c_2)
}

// required double c_1_c = 6;
inline bool DemoReward::has_c_1_c() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DemoReward::set_has_c_1_c() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DemoReward::clear_has_c_1_c() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DemoReward::clear_c_1_c() {
  c_1_c_ = 0;
  clear_has_c_1_c();
}
inline double DemoReward::c_1_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.c_1_c)
  return c_1_c_;
}
inline void DemoReward::set_c_1_c(double value) {
  set_has_c_1_c();
  c_1_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.c_1_c)
}

// required double c_2_c = 7;
inline bool DemoReward::has_c_2_c() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DemoReward::set_has_c_2_c() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DemoReward::clear_has_c_2_c() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DemoReward::clear_c_2_c() {
  c_2_c_ = 0;
  clear_has_c_2_c();
}
inline double DemoReward::c_2_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.c_2_c)
  return c_2_c_;
}
inline void DemoReward::set_c_2_c(double value) {
  set_has_c_2_c();
  c_2_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.c_2_c)
}

// required double c_3_c = 8;
inline bool DemoReward::has_c_3_c() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DemoReward::set_has_c_3_c() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DemoReward::clear_has_c_3_c() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DemoReward::clear_c_3_c() {
  c_3_c_ = 0;
  clear_has_c_3_c();
}
inline double DemoReward::c_3_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.c_3_c)
  return c_3_c_;
}
inline void DemoReward::set_c_3_c(double value) {
  set_has_c_3_c();
  c_3_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.c_3_c)
}

// required uint32 i = 9;
inline bool DemoReward::has_i() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DemoReward::set_has_i() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DemoReward::clear_has_i() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DemoReward::clear_i() {
  i_ = 0u;
  clear_has_i();
}
inline ::google::protobuf::uint32 DemoReward::i() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.i)
  return i_;
}
inline void DemoReward::set_i(::google::protobuf::uint32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.i)
}

// required double i_c = 10;
inline bool DemoReward::has_i_c() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DemoReward::set_has_i_c() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DemoReward::clear_has_i_c() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DemoReward::clear_i_c() {
  i_c_ = 0;
  clear_has_i_c();
}
inline double DemoReward::i_c() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.i_c)
  return i_c_;
}
inline void DemoReward::set_i_c(double value) {
  set_has_i_c();
  i_c_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.i_c)
}

// required double f_1 = 11;
inline bool DemoReward::has_f_1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DemoReward::set_has_f_1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DemoReward::clear_has_f_1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DemoReward::clear_f_1() {
  f_1_ = 0;
  clear_has_f_1();
}
inline double DemoReward::f_1() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.f_1)
  return f_1_;
}
inline void DemoReward::set_f_1(double value) {
  set_has_f_1();
  f_1_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.f_1)
}

// required double f_2 = 12;
inline bool DemoReward::has_f_2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DemoReward::set_has_f_2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DemoReward::clear_has_f_2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DemoReward::clear_f_2() {
  f_2_ = 0;
  clear_has_f_2();
}
inline double DemoReward::f_2() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.f_2)
  return f_2_;
}
inline void DemoReward::set_f_2(double value) {
  set_has_f_2();
  f_2_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.f_2)
}

// required double f_3 = 13;
inline bool DemoReward::has_f_3() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DemoReward::set_has_f_3() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DemoReward::clear_has_f_3() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DemoReward::clear_f_3() {
  f_3_ = 0;
  clear_has_f_3();
}
inline double DemoReward::f_3() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.f_3)
  return f_3_;
}
inline void DemoReward::set_f_3(double value) {
  set_has_f_3();
  f_3_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.f_3)
}

// required double fb = 14;
inline bool DemoReward::has_fb() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DemoReward::set_has_fb() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DemoReward::clear_has_fb() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DemoReward::clear_fb() {
  fb_ = 0;
  clear_has_fb();
}
inline double DemoReward::fb() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.fb)
  return fb_;
}
inline void DemoReward::set_fb(double value) {
  set_has_fb();
  fb_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.fb)
}

// required double hexp = 15;
inline bool DemoReward::has_hexp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DemoReward::set_has_hexp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DemoReward::clear_has_hexp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DemoReward::clear_hexp() {
  hexp_ = 0;
  clear_has_hexp();
}
inline double DemoReward::hexp() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.hexp)
  return hexp_;
}
inline void DemoReward::set_hexp(double value) {
  set_has_hexp();
  hexp_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.hexp)
}

// required double coin = 16;
inline bool DemoReward::has_coin() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DemoReward::set_has_coin() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DemoReward::clear_has_coin() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DemoReward::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline double DemoReward::coin() const {
  // @@protoc_insertion_point(field_get:Demo.DemoReward.coin)
  return coin_;
}
inline void DemoReward::set_coin(double value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoReward.coin)
}

// -------------------------------------------------------------------

// DemoNPC

// required uint32 npc_change = 1;
inline bool DemoNPC::has_npc_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DemoNPC::set_has_npc_change() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DemoNPC::clear_has_npc_change() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DemoNPC::clear_npc_change() {
  npc_change_ = 0u;
  clear_has_npc_change();
}
inline ::google::protobuf::uint32 DemoNPC::npc_change() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_change)
  return npc_change_;
}
inline void DemoNPC::set_npc_change(::google::protobuf::uint32 value) {
  set_has_npc_change();
  npc_change_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_change)
}

// required uint32 npc_max = 2;
inline bool DemoNPC::has_npc_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DemoNPC::set_has_npc_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DemoNPC::clear_has_npc_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DemoNPC::clear_npc_max() {
  npc_max_ = 0u;
  clear_has_npc_max();
}
inline ::google::protobuf::uint32 DemoNPC::npc_max() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_max)
  return npc_max_;
}
inline void DemoNPC::set_npc_max(::google::protobuf::uint32 value) {
  set_has_npc_max();
  npc_max_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_max)
}

// required uint32 npc_m = 3;
inline bool DemoNPC::has_npc_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DemoNPC::set_has_npc_m() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DemoNPC::clear_has_npc_m() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DemoNPC::clear_npc_m() {
  npc_m_ = 0u;
  clear_has_npc_m();
}
inline ::google::protobuf::uint32 DemoNPC::npc_m() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_m)
  return npc_m_;
}
inline void DemoNPC::set_npc_m(::google::protobuf::uint32 value) {
  set_has_npc_m();
  npc_m_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_m)
}

// required uint32 npc_extra = 4;
inline bool DemoNPC::has_npc_extra() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DemoNPC::set_has_npc_extra() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DemoNPC::clear_has_npc_extra() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DemoNPC::clear_npc_extra() {
  npc_extra_ = 0u;
  clear_has_npc_extra();
}
inline ::google::protobuf::uint32 DemoNPC::npc_extra() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_extra)
  return npc_extra_;
}
inline void DemoNPC::set_npc_extra(::google::protobuf::uint32 value) {
  set_has_npc_extra();
  npc_extra_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_extra)
}

// required uint32 npc_extra_s = 5;
inline bool DemoNPC::has_npc_extra_s() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DemoNPC::set_has_npc_extra_s() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DemoNPC::clear_has_npc_extra_s() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DemoNPC::clear_npc_extra_s() {
  npc_extra_s_ = 0u;
  clear_has_npc_extra_s();
}
inline ::google::protobuf::uint32 DemoNPC::npc_extra_s() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_extra_s)
  return npc_extra_s_;
}
inline void DemoNPC::set_npc_extra_s(::google::protobuf::uint32 value) {
  set_has_npc_extra_s();
  npc_extra_s_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_extra_s)
}

// required uint32 npc_extra_m = 6;
inline bool DemoNPC::has_npc_extra_m() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DemoNPC::set_has_npc_extra_m() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DemoNPC::clear_has_npc_extra_m() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DemoNPC::clear_npc_extra_m() {
  npc_extra_m_ = 0u;
  clear_has_npc_extra_m();
}
inline ::google::protobuf::uint32 DemoNPC::npc_extra_m() const {
  // @@protoc_insertion_point(field_get:Demo.DemoNPC.npc_extra_m)
  return npc_extra_m_;
}
inline void DemoNPC::set_npc_extra_m(::google::protobuf::uint32 value) {
  set_has_npc_extra_m();
  npc_extra_m_ = value;
  // @@protoc_insertion_point(field_set:Demo.DemoNPC.npc_extra_m)
}

// -------------------------------------------------------------------

// BattleRewardDay

// required uint32 day = 1;
inline bool BattleRewardDay::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleRewardDay::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleRewardDay::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleRewardDay::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 BattleRewardDay::day() const {
  // @@protoc_insertion_point(field_get:Demo.BattleRewardDay.day)
  return day_;
}
inline void BattleRewardDay::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleRewardDay.day)
}

// required uint32 c = 2;
inline bool BattleRewardDay::has_c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleRewardDay::set_has_c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleRewardDay::clear_has_c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleRewardDay::clear_c() {
  c_ = 0u;
  clear_has_c();
}
inline ::google::protobuf::uint32 BattleRewardDay::c() const {
  // @@protoc_insertion_point(field_get:Demo.BattleRewardDay.c)
  return c_;
}
inline void BattleRewardDay::set_c(::google::protobuf::uint32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleRewardDay.c)
}

// -------------------------------------------------------------------

// BattleReward

// required uint32 id = 1;
inline bool BattleReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BattleReward::id() const {
  // @@protoc_insertion_point(field_get:Demo.BattleReward.id)
  return id_;
}
inline void BattleReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleReward.id)
}

// required uint32 r = 2;
inline bool BattleReward::has_r() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleReward::set_has_r() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleReward::clear_has_r() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleReward::clear_r() {
  r_ = 0u;
  clear_has_r();
}
inline ::google::protobuf::uint32 BattleReward::r() const {
  // @@protoc_insertion_point(field_get:Demo.BattleReward.r)
  return r_;
}
inline void BattleReward::set_r(::google::protobuf::uint32 value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleReward.r)
}

// required uint32 c = 3;
inline bool BattleReward::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleReward::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleReward::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleReward::clear_c() {
  c_ = 0u;
  clear_has_c();
}
inline ::google::protobuf::uint32 BattleReward::c() const {
  // @@protoc_insertion_point(field_get:Demo.BattleReward.c)
  return c_;
}
inline void BattleReward::set_c(::google::protobuf::uint32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleReward.c)
}

// required uint32 cu = 4;
inline bool BattleReward::has_cu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleReward::set_has_cu() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleReward::clear_has_cu() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleReward::clear_cu() {
  cu_ = 0u;
  clear_has_cu();
}
inline ::google::protobuf::uint32 BattleReward::cu() const {
  // @@protoc_insertion_point(field_get:Demo.BattleReward.cu)
  return cu_;
}
inline void BattleReward::set_cu(::google::protobuf::uint32 value) {
  set_has_cu();
  cu_ = value;
  // @@protoc_insertion_point(field_set:Demo.BattleReward.cu)
}

// repeated .Demo.BattleRewardDay count = 5;
inline int BattleReward::count_size() const {
  return count_.size();
}
inline void BattleReward::clear_count() {
  count_.Clear();
}
inline const ::Demo::BattleRewardDay& BattleReward::count(int index) const {
  // @@protoc_insertion_point(field_get:Demo.BattleReward.count)
  return count_.Get(index);
}
inline ::Demo::BattleRewardDay* BattleReward::mutable_count(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.BattleReward.count)
  return count_.Mutable(index);
}
inline ::Demo::BattleRewardDay* BattleReward::add_count() {
  // @@protoc_insertion_point(field_add:Demo.BattleReward.count)
  return count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::BattleRewardDay >&
BattleReward::count() const {
  // @@protoc_insertion_point(field_list:Demo.BattleReward.count)
  return count_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::BattleRewardDay >*
BattleReward::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:Demo.BattleReward.count)
  return &count_;
}

// -------------------------------------------------------------------

// CityNPCDay

// required uint32 day = 1;
inline bool CityNPCDay::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CityNPCDay::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CityNPCDay::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CityNPCDay::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 CityNPCDay::day() const {
  // @@protoc_insertion_point(field_get:Demo.CityNPCDay.day)
  return day_;
}
inline void CityNPCDay::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:Demo.CityNPCDay.day)
}

// repeated uint32 npc = 2;
inline int CityNPCDay::npc_size() const {
  return npc_.size();
}
inline void CityNPCDay::clear_npc() {
  npc_.Clear();
}
inline ::google::protobuf::uint32 CityNPCDay::npc(int index) const {
  // @@protoc_insertion_point(field_get:Demo.CityNPCDay.npc)
  return npc_.Get(index);
}
inline void CityNPCDay::set_npc(int index, ::google::protobuf::uint32 value) {
  npc_.Set(index, value);
  // @@protoc_insertion_point(field_set:Demo.CityNPCDay.npc)
}
inline void CityNPCDay::add_npc(::google::protobuf::uint32 value) {
  npc_.Add(value);
  // @@protoc_insertion_point(field_add:Demo.CityNPCDay.npc)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CityNPCDay::npc() const {
  // @@protoc_insertion_point(field_list:Demo.CityNPCDay.npc)
  return npc_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CityNPCDay::mutable_npc() {
  // @@protoc_insertion_point(field_mutable_list:Demo.CityNPCDay.npc)
  return &npc_;
}

// -------------------------------------------------------------------

// CityReward

// required uint32 id = 1;
inline bool CityReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CityReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CityReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CityReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CityReward::id() const {
  // @@protoc_insertion_point(field_get:Demo.CityReward.id)
  return id_;
}
inline void CityReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Demo.CityReward.id)
}

// repeated uint32 r = 2;
inline int CityReward::r_size() const {
  return r_.size();
}
inline void CityReward::clear_r() {
  r_.Clear();
}
inline ::google::protobuf::uint32 CityReward::r(int index) const {
  // @@protoc_insertion_point(field_get:Demo.CityReward.r)
  return r_.Get(index);
}
inline void CityReward::set_r(int index, ::google::protobuf::uint32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:Demo.CityReward.r)
}
inline void CityReward::add_r(::google::protobuf::uint32 value) {
  r_.Add(value);
  // @@protoc_insertion_point(field_add:Demo.CityReward.r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CityReward::r() const {
  // @@protoc_insertion_point(field_list:Demo.CityReward.r)
  return r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CityReward::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:Demo.CityReward.r)
  return &r_;
}

// repeated uint32 c = 3;
inline int CityReward::c_size() const {
  return c_.size();
}
inline void CityReward::clear_c() {
  c_.Clear();
}
inline ::google::protobuf::uint32 CityReward::c(int index) const {
  // @@protoc_insertion_point(field_get:Demo.CityReward.c)
  return c_.Get(index);
}
inline void CityReward::set_c(int index, ::google::protobuf::uint32 value) {
  c_.Set(index, value);
  // @@protoc_insertion_point(field_set:Demo.CityReward.c)
}
inline void CityReward::add_c(::google::protobuf::uint32 value) {
  c_.Add(value);
  // @@protoc_insertion_point(field_add:Demo.CityReward.c)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CityReward::c() const {
  // @@protoc_insertion_point(field_list:Demo.CityReward.c)
  return c_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CityReward::mutable_c() {
  // @@protoc_insertion_point(field_mutable_list:Demo.CityReward.c)
  return &c_;
}

// repeated .Demo.CityNPCDay npc = 4;
inline int CityReward::npc_size() const {
  return npc_.size();
}
inline void CityReward::clear_npc() {
  npc_.Clear();
}
inline const ::Demo::CityNPCDay& CityReward::npc(int index) const {
  // @@protoc_insertion_point(field_get:Demo.CityReward.npc)
  return npc_.Get(index);
}
inline ::Demo::CityNPCDay* CityReward::mutable_npc(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.CityReward.npc)
  return npc_.Mutable(index);
}
inline ::Demo::CityNPCDay* CityReward::add_npc() {
  // @@protoc_insertion_point(field_add:Demo.CityReward.npc)
  return npc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::CityNPCDay >&
CityReward::npc() const {
  // @@protoc_insertion_point(field_list:Demo.CityReward.npc)
  return npc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::CityNPCDay >*
CityReward::mutable_npc() {
  // @@protoc_insertion_point(field_mutable_list:Demo.CityReward.npc)
  return &npc_;
}

// -------------------------------------------------------------------

// Demo

// required .Demo.DemoTimeConfig timeconfig = 1;
inline bool Demo::has_timeconfig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Demo::set_has_timeconfig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Demo::clear_has_timeconfig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Demo::clear_timeconfig() {
  if (timeconfig_ != NULL) timeconfig_->::Demo::DemoTimeConfig::Clear();
  clear_has_timeconfig();
}
inline const ::Demo::DemoTimeConfig& Demo::timeconfig() const {
  // @@protoc_insertion_point(field_get:Demo.Demo.timeconfig)
  return timeconfig_ != NULL ? *timeconfig_ : *default_instance_->timeconfig_;
}
inline ::Demo::DemoTimeConfig* Demo::mutable_timeconfig() {
  set_has_timeconfig();
  if (timeconfig_ == NULL) timeconfig_ = new ::Demo::DemoTimeConfig;
  // @@protoc_insertion_point(field_mutable:Demo.Demo.timeconfig)
  return timeconfig_;
}
inline ::Demo::DemoTimeConfig* Demo::release_timeconfig() {
  clear_has_timeconfig();
  ::Demo::DemoTimeConfig* temp = timeconfig_;
  timeconfig_ = NULL;
  return temp;
}
inline void Demo::set_allocated_timeconfig(::Demo::DemoTimeConfig* timeconfig) {
  delete timeconfig_;
  timeconfig_ = timeconfig;
  if (timeconfig) {
    set_has_timeconfig();
  } else {
    clear_has_timeconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:Demo.Demo.timeconfig)
}

// required .Demo.DemoConstConfig constconfig = 2;
inline bool Demo::has_constconfig() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Demo::set_has_constconfig() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Demo::clear_has_constconfig() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Demo::clear_constconfig() {
  if (constconfig_ != NULL) constconfig_->::Demo::DemoConstConfig::Clear();
  clear_has_constconfig();
}
inline const ::Demo::DemoConstConfig& Demo::constconfig() const {
  // @@protoc_insertion_point(field_get:Demo.Demo.constconfig)
  return constconfig_ != NULL ? *constconfig_ : *default_instance_->constconfig_;
}
inline ::Demo::DemoConstConfig* Demo::mutable_constconfig() {
  set_has_constconfig();
  if (constconfig_ == NULL) constconfig_ = new ::Demo::DemoConstConfig;
  // @@protoc_insertion_point(field_mutable:Demo.Demo.constconfig)
  return constconfig_;
}
inline ::Demo::DemoConstConfig* Demo::release_constconfig() {
  clear_has_constconfig();
  ::Demo::DemoConstConfig* temp = constconfig_;
  constconfig_ = NULL;
  return temp;
}
inline void Demo::set_allocated_constconfig(::Demo::DemoConstConfig* constconfig) {
  delete constconfig_;
  constconfig_ = constconfig;
  if (constconfig) {
    set_has_constconfig();
  } else {
    clear_has_constconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:Demo.Demo.constconfig)
}

// repeated .Demo.DemoCityG city = 3;
inline int Demo::city_size() const {
  return city_.size();
}
inline void Demo::clear_city() {
  city_.Clear();
}
inline const ::Demo::DemoCityG& Demo::city(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.city)
  return city_.Get(index);
}
inline ::Demo::DemoCityG* Demo::mutable_city(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.city)
  return city_.Mutable(index);
}
inline ::Demo::DemoCityG* Demo::add_city() {
  // @@protoc_insertion_point(field_add:Demo.Demo.city)
  return city_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoCityG >&
Demo::city() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.city)
  return city_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoCityG >*
Demo::mutable_city() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.city)
  return &city_;
}

// repeated .Demo.DemoNPCTime normalnpc = 4;
inline int Demo::normalnpc_size() const {
  return normalnpc_.size();
}
inline void Demo::clear_normalnpc() {
  normalnpc_.Clear();
}
inline const ::Demo::DemoNPCTime& Demo::normalnpc(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.normalnpc)
  return normalnpc_.Get(index);
}
inline ::Demo::DemoNPCTime* Demo::mutable_normalnpc(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.normalnpc)
  return normalnpc_.Mutable(index);
}
inline ::Demo::DemoNPCTime* Demo::add_normalnpc() {
  // @@protoc_insertion_point(field_add:Demo.Demo.normalnpc)
  return normalnpc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
Demo::normalnpc() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.normalnpc)
  return normalnpc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
Demo::mutable_normalnpc() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.normalnpc)
  return &normalnpc_;
}

// repeated .Demo.DemoNPCTime attacknpc = 5;
inline int Demo::attacknpc_size() const {
  return attacknpc_.size();
}
inline void Demo::clear_attacknpc() {
  attacknpc_.Clear();
}
inline const ::Demo::DemoNPCTime& Demo::attacknpc(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.attacknpc)
  return attacknpc_.Get(index);
}
inline ::Demo::DemoNPCTime* Demo::mutable_attacknpc(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.attacknpc)
  return attacknpc_.Mutable(index);
}
inline ::Demo::DemoNPCTime* Demo::add_attacknpc() {
  // @@protoc_insertion_point(field_add:Demo.Demo.attacknpc)
  return attacknpc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
Demo::attacknpc() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.attacknpc)
  return attacknpc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
Demo::mutable_attacknpc() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.attacknpc)
  return &attacknpc_;
}

// repeated .Demo.DemoNPCTime defendnpc = 6;
inline int Demo::defendnpc_size() const {
  return defendnpc_.size();
}
inline void Demo::clear_defendnpc() {
  defendnpc_.Clear();
}
inline const ::Demo::DemoNPCTime& Demo::defendnpc(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.defendnpc)
  return defendnpc_.Get(index);
}
inline ::Demo::DemoNPCTime* Demo::mutable_defendnpc(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.defendnpc)
  return defendnpc_.Mutable(index);
}
inline ::Demo::DemoNPCTime* Demo::add_defendnpc() {
  // @@protoc_insertion_point(field_add:Demo.Demo.defendnpc)
  return defendnpc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >&
Demo::defendnpc() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.defendnpc)
  return defendnpc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::DemoNPCTime >*
Demo::mutable_defendnpc() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.defendnpc)
  return &defendnpc_;
}

// required .Demo.DemoReward reward = 7;
inline bool Demo::has_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Demo::set_has_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Demo::clear_has_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Demo::clear_reward() {
  if (reward_ != NULL) reward_->::Demo::DemoReward::Clear();
  clear_has_reward();
}
inline const ::Demo::DemoReward& Demo::reward() const {
  // @@protoc_insertion_point(field_get:Demo.Demo.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::Demo::DemoReward* Demo::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::Demo::DemoReward;
  // @@protoc_insertion_point(field_mutable:Demo.Demo.reward)
  return reward_;
}
inline ::Demo::DemoReward* Demo::release_reward() {
  clear_has_reward();
  ::Demo::DemoReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void Demo::set_allocated_reward(::Demo::DemoReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:Demo.Demo.reward)
}

// required .Demo.DemoNPC npc = 8;
inline bool Demo::has_npc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Demo::set_has_npc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Demo::clear_has_npc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Demo::clear_npc() {
  if (npc_ != NULL) npc_->::Demo::DemoNPC::Clear();
  clear_has_npc();
}
inline const ::Demo::DemoNPC& Demo::npc() const {
  // @@protoc_insertion_point(field_get:Demo.Demo.npc)
  return npc_ != NULL ? *npc_ : *default_instance_->npc_;
}
inline ::Demo::DemoNPC* Demo::mutable_npc() {
  set_has_npc();
  if (npc_ == NULL) npc_ = new ::Demo::DemoNPC;
  // @@protoc_insertion_point(field_mutable:Demo.Demo.npc)
  return npc_;
}
inline ::Demo::DemoNPC* Demo::release_npc() {
  clear_has_npc();
  ::Demo::DemoNPC* temp = npc_;
  npc_ = NULL;
  return temp;
}
inline void Demo::set_allocated_npc(::Demo::DemoNPC* npc) {
  delete npc_;
  npc_ = npc;
  if (npc) {
    set_has_npc();
  } else {
    clear_has_npc();
  }
  // @@protoc_insertion_point(field_set_allocated:Demo.Demo.npc)
}

// repeated uint32 killreward = 9;
inline int Demo::killreward_size() const {
  return killreward_.size();
}
inline void Demo::clear_killreward() {
  killreward_.Clear();
}
inline ::google::protobuf::uint32 Demo::killreward(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.killreward)
  return killreward_.Get(index);
}
inline void Demo::set_killreward(int index, ::google::protobuf::uint32 value) {
  killreward_.Set(index, value);
  // @@protoc_insertion_point(field_set:Demo.Demo.killreward)
}
inline void Demo::add_killreward(::google::protobuf::uint32 value) {
  killreward_.Add(value);
  // @@protoc_insertion_point(field_add:Demo.Demo.killreward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Demo::killreward() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.killreward)
  return killreward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Demo::mutable_killreward() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.killreward)
  return &killreward_;
}

// repeated .Demo.BattleReward battlereward = 10;
inline int Demo::battlereward_size() const {
  return battlereward_.size();
}
inline void Demo::clear_battlereward() {
  battlereward_.Clear();
}
inline const ::Demo::BattleReward& Demo::battlereward(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.battlereward)
  return battlereward_.Get(index);
}
inline ::Demo::BattleReward* Demo::mutable_battlereward(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.battlereward)
  return battlereward_.Mutable(index);
}
inline ::Demo::BattleReward* Demo::add_battlereward() {
  // @@protoc_insertion_point(field_add:Demo.Demo.battlereward)
  return battlereward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::BattleReward >&
Demo::battlereward() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.battlereward)
  return battlereward_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::BattleReward >*
Demo::mutable_battlereward() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.battlereward)
  return &battlereward_;
}

// repeated .Demo.CityReward cityreward = 11;
inline int Demo::cityreward_size() const {
  return cityreward_.size();
}
inline void Demo::clear_cityreward() {
  cityreward_.Clear();
}
inline const ::Demo::CityReward& Demo::cityreward(int index) const {
  // @@protoc_insertion_point(field_get:Demo.Demo.cityreward)
  return cityreward_.Get(index);
}
inline ::Demo::CityReward* Demo::mutable_cityreward(int index) {
  // @@protoc_insertion_point(field_mutable:Demo.Demo.cityreward)
  return cityreward_.Mutable(index);
}
inline ::Demo::CityReward* Demo::add_cityreward() {
  // @@protoc_insertion_point(field_add:Demo.Demo.cityreward)
  return cityreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Demo::CityReward >&
Demo::cityreward() const {
  // @@protoc_insertion_point(field_list:Demo.Demo.cityreward)
  return cityreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::Demo::CityReward >*
Demo::mutable_cityreward() {
  // @@protoc_insertion_point(field_mutable_list:Demo.Demo.cityreward)
  return &cityreward_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Demo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Demo_2eproto__INCLUDED
