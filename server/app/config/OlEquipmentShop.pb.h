// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OlEquipmentShop.proto

#ifndef PROTOBUF_OlEquipmentShop_2eproto__INCLUDED
#define PROTOBUF_OlEquipmentShop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace EquipmentShopConfig {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_OlEquipmentShop_2eproto();
void protobuf_AssignDesc_OlEquipmentShop_2eproto();
void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

class Equip;
class EquipPositionPool;
class EquipLevelPool;
class EquipNum;
class SpecialEquip;
class EquipmentShop;

// ===================================================================

class Equip : public ::google::protobuf::Message {
 public:
  Equip();
  virtual ~Equip();

  Equip(const Equip& from);

  inline Equip& operator=(const Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Equip& default_instance();

  void Swap(Equip* other);

  // implements Message ----------------------------------------------

  Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Equip& from);
  void MergeFrom(const Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eqid = 1;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 1;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // required uint32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // required bool isjp = 4;
  inline bool has_isjp() const;
  inline void clear_isjp();
  static const int kIsjpFieldNumber = 4;
  inline bool isjp() const;
  inline void set_isjp(bool value);

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.Equip)
 private:
  inline void set_has_eqid();
  inline void clear_has_eqid();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_isjp();
  inline void clear_has_isjp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eqid_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 price_;
  bool isjp_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static Equip* default_instance_;
};
// -------------------------------------------------------------------

class EquipPositionPool : public ::google::protobuf::Message {
 public:
  EquipPositionPool();
  virtual ~EquipPositionPool();

  EquipPositionPool(const EquipPositionPool& from);

  inline EquipPositionPool& operator=(const EquipPositionPool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipPositionPool& default_instance();

  void Swap(EquipPositionPool* other);

  // implements Message ----------------------------------------------

  EquipPositionPool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipPositionPool& from);
  void MergeFrom(const EquipPositionPool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // repeated .EquipmentShopConfig.Equip equips = 2;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 2;
  inline const ::EquipmentShopConfig::Equip& equips(int index) const;
  inline ::EquipmentShopConfig::Equip* mutable_equips(int index);
  inline ::EquipmentShopConfig::Equip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::Equip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::Equip >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.EquipPositionPool)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::Equip > equips_;
  ::google::protobuf::uint32 pid_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static EquipPositionPool* default_instance_;
};
// -------------------------------------------------------------------

class EquipLevelPool : public ::google::protobuf::Message {
 public:
  EquipLevelPool();
  virtual ~EquipLevelPool();

  EquipLevelPool(const EquipLevelPool& from);

  inline EquipLevelPool& operator=(const EquipLevelPool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLevelPool& default_instance();

  void Swap(EquipLevelPool* other);

  // implements Message ----------------------------------------------

  EquipLevelPool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLevelPool& from);
  void MergeFrom(const EquipLevelPool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 jpprice = 3;
  inline bool has_jpprice() const;
  inline void clear_jpprice();
  static const int kJppriceFieldNumber = 3;
  inline ::google::protobuf::uint32 jpprice() const;
  inline void set_jpprice(::google::protobuf::uint32 value);

  // repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 4;
  inline const ::EquipmentShopConfig::EquipPositionPool& positions(int index) const;
  inline ::EquipmentShopConfig::EquipPositionPool* mutable_positions(int index);
  inline ::EquipmentShopConfig::EquipPositionPool* add_positions();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipPositionPool >&
      positions() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipPositionPool >*
      mutable_positions();

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.EquipLevelPool)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_jpprice();
  inline void clear_has_jpprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipPositionPool > positions_;
  ::google::protobuf::uint32 jpprice_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static EquipLevelPool* default_instance_;
};
// -------------------------------------------------------------------

class EquipNum : public ::google::protobuf::Message {
 public:
  EquipNum();
  virtual ~EquipNum();

  EquipNum(const EquipNum& from);

  inline EquipNum& operator=(const EquipNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipNum& default_instance();

  void Swap(EquipNum* other);

  // implements Message ----------------------------------------------

  EquipNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipNum& from);
  void MergeFrom(const EquipNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eqid = 1;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 1;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.EquipNum)
 private:
  inline void set_has_eqid();
  inline void clear_has_eqid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eqid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static EquipNum* default_instance_;
};
// -------------------------------------------------------------------

class SpecialEquip : public ::google::protobuf::Message {
 public:
  SpecialEquip();
  virtual ~SpecialEquip();

  SpecialEquip(const SpecialEquip& from);

  inline SpecialEquip& operator=(const SpecialEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialEquip& default_instance();

  void Swap(SpecialEquip* other);

  // implements Message ----------------------------------------------

  SpecialEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecialEquip& from);
  void MergeFrom(const SpecialEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 order = 1;
  inline int order_size() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order(int index) const;
  inline void set_order(int index, ::google::protobuf::uint32 value);
  inline void add_order(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      order() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_order();

  // repeated uint32 iron = 2;
  inline int iron_size() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 2;
  inline ::google::protobuf::uint32 iron(int index) const;
  inline void set_iron(int index, ::google::protobuf::uint32 value);
  inline void add_iron(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      iron() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_iron();

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.SpecialEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > order_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > iron_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static SpecialEquip* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentShop : public ::google::protobuf::Message {
 public:
  EquipmentShop();
  virtual ~EquipmentShop();

  EquipmentShop(const EquipmentShop& from);

  inline EquipmentShop& operator=(const EquipmentShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentShop& default_instance();

  void Swap(EquipmentShop* other);

  // implements Message ----------------------------------------------

  EquipmentShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentShop& from);
  void MergeFrom(const EquipmentShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 clearCdPrice = 1;
  inline bool has_clearcdprice() const;
  inline void clear_clearcdprice();
  static const int kClearCdPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 clearcdprice() const;
  inline void set_clearcdprice(::google::protobuf::uint32 value);

  // repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
  inline int levelpool_size() const;
  inline void clear_levelpool();
  static const int kLevelpoolFieldNumber = 2;
  inline const ::EquipmentShopConfig::EquipLevelPool& levelpool(int index) const;
  inline ::EquipmentShopConfig::EquipLevelPool* mutable_levelpool(int index);
  inline ::EquipmentShopConfig::EquipLevelPool* add_levelpool();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipLevelPool >&
      levelpool() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipLevelPool >*
      mutable_levelpool();

  // repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
  inline int eqid_num_size() const;
  inline void clear_eqid_num();
  static const int kEqidNumFieldNumber = 3;
  inline const ::EquipmentShopConfig::EquipNum& eqid_num(int index) const;
  inline ::EquipmentShopConfig::EquipNum* mutable_eqid_num(int index);
  inline ::EquipmentShopConfig::EquipNum* add_eqid_num();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipNum >&
      eqid_num() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipNum >*
      mutable_eqid_num();

  // required .EquipmentShopConfig.SpecialEquip special = 4;
  inline bool has_special() const;
  inline void clear_special();
  static const int kSpecialFieldNumber = 4;
  inline const ::EquipmentShopConfig::SpecialEquip& special() const;
  inline ::EquipmentShopConfig::SpecialEquip* mutable_special();
  inline ::EquipmentShopConfig::SpecialEquip* release_special();
  inline void set_allocated_special(::EquipmentShopConfig::SpecialEquip* special);

  // @@protoc_insertion_point(class_scope:EquipmentShopConfig.EquipmentShop)
 private:
  inline void set_has_clearcdprice();
  inline void clear_has_clearcdprice();
  inline void set_has_special();
  inline void clear_has_special();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipLevelPool > levelpool_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipNum > eqid_num_;
  ::EquipmentShopConfig::SpecialEquip* special_;
  ::google::protobuf::uint32 clearcdprice_;
  friend void  protobuf_AddDesc_OlEquipmentShop_2eproto();
  friend void protobuf_AssignDesc_OlEquipmentShop_2eproto();
  friend void protobuf_ShutdownFile_OlEquipmentShop_2eproto();

  void InitAsDefaultInstance();
  static EquipmentShop* default_instance_;
};
// ===================================================================


// ===================================================================

// Equip

// required uint32 eqid = 1;
inline bool Equip::has_eqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Equip::set_has_eqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Equip::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Equip::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 Equip::eqid() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.Equip.eqid)
  return eqid_;
}
inline void Equip::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.Equip.eqid)
}

// required uint32 rate = 2;
inline bool Equip::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Equip::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Equip::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Equip::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 Equip::rate() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.Equip.rate)
  return rate_;
}
inline void Equip::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.Equip.rate)
}

// required uint32 price = 3;
inline bool Equip::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Equip::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Equip::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Equip::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 Equip::price() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.Equip.price)
  return price_;
}
inline void Equip::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.Equip.price)
}

// required bool isjp = 4;
inline bool Equip::has_isjp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Equip::set_has_isjp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Equip::clear_has_isjp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Equip::clear_isjp() {
  isjp_ = false;
  clear_has_isjp();
}
inline bool Equip::isjp() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.Equip.isjp)
  return isjp_;
}
inline void Equip::set_isjp(bool value) {
  set_has_isjp();
  isjp_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.Equip.isjp)
}

// -------------------------------------------------------------------

// EquipPositionPool

// required uint32 pid = 1;
inline bool EquipPositionPool::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipPositionPool::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipPositionPool::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipPositionPool::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 EquipPositionPool::pid() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipPositionPool.pid)
  return pid_;
}
inline void EquipPositionPool::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipPositionPool.pid)
}

// repeated .EquipmentShopConfig.Equip equips = 2;
inline int EquipPositionPool::equips_size() const {
  return equips_.size();
}
inline void EquipPositionPool::clear_equips() {
  equips_.Clear();
}
inline const ::EquipmentShopConfig::Equip& EquipPositionPool::equips(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipPositionPool.equips)
  return equips_.Get(index);
}
inline ::EquipmentShopConfig::Equip* EquipPositionPool::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:EquipmentShopConfig.EquipPositionPool.equips)
  return equips_.Mutable(index);
}
inline ::EquipmentShopConfig::Equip* EquipPositionPool::add_equips() {
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.EquipPositionPool.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::Equip >&
EquipPositionPool::equips() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.EquipPositionPool.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::Equip >*
EquipPositionPool::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.EquipPositionPool.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// EquipLevelPool

// required uint32 id = 1;
inline bool EquipLevelPool::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipLevelPool::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipLevelPool::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipLevelPool::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 EquipLevelPool::id() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipLevelPool.id)
  return id_;
}
inline void EquipLevelPool::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipLevelPool.id)
}

// required uint32 level = 2;
inline bool EquipLevelPool::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipLevelPool::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipLevelPool::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipLevelPool::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 EquipLevelPool::level() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipLevelPool.level)
  return level_;
}
inline void EquipLevelPool::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipLevelPool.level)
}

// required uint32 jpprice = 3;
inline bool EquipLevelPool::has_jpprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipLevelPool::set_has_jpprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipLevelPool::clear_has_jpprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipLevelPool::clear_jpprice() {
  jpprice_ = 0u;
  clear_has_jpprice();
}
inline ::google::protobuf::uint32 EquipLevelPool::jpprice() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipLevelPool.jpprice)
  return jpprice_;
}
inline void EquipLevelPool::set_jpprice(::google::protobuf::uint32 value) {
  set_has_jpprice();
  jpprice_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipLevelPool.jpprice)
}

// repeated .EquipmentShopConfig.EquipPositionPool positions = 4;
inline int EquipLevelPool::positions_size() const {
  return positions_.size();
}
inline void EquipLevelPool::clear_positions() {
  positions_.Clear();
}
inline const ::EquipmentShopConfig::EquipPositionPool& EquipLevelPool::positions(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipLevelPool.positions)
  return positions_.Get(index);
}
inline ::EquipmentShopConfig::EquipPositionPool* EquipLevelPool::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:EquipmentShopConfig.EquipLevelPool.positions)
  return positions_.Mutable(index);
}
inline ::EquipmentShopConfig::EquipPositionPool* EquipLevelPool::add_positions() {
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.EquipLevelPool.positions)
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipPositionPool >&
EquipLevelPool::positions() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.EquipLevelPool.positions)
  return positions_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipPositionPool >*
EquipLevelPool::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.EquipLevelPool.positions)
  return &positions_;
}

// -------------------------------------------------------------------

// EquipNum

// required uint32 eqid = 1;
inline bool EquipNum::has_eqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipNum::set_has_eqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipNum::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipNum::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 EquipNum::eqid() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipNum.eqid)
  return eqid_;
}
inline void EquipNum::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipNum.eqid)
}

// required uint32 num = 2;
inline bool EquipNum::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipNum::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipNum::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipNum::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 EquipNum::num() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipNum.num)
  return num_;
}
inline void EquipNum::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipNum.num)
}

// -------------------------------------------------------------------

// SpecialEquip

// repeated uint32 order = 1;
inline int SpecialEquip::order_size() const {
  return order_.size();
}
inline void SpecialEquip::clear_order() {
  order_.Clear();
}
inline ::google::protobuf::uint32 SpecialEquip::order(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.SpecialEquip.order)
  return order_.Get(index);
}
inline void SpecialEquip::set_order(int index, ::google::protobuf::uint32 value) {
  order_.Set(index, value);
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.SpecialEquip.order)
}
inline void SpecialEquip::add_order(::google::protobuf::uint32 value) {
  order_.Add(value);
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.SpecialEquip.order)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SpecialEquip::order() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.SpecialEquip.order)
  return order_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SpecialEquip::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.SpecialEquip.order)
  return &order_;
}

// repeated uint32 iron = 2;
inline int SpecialEquip::iron_size() const {
  return iron_.size();
}
inline void SpecialEquip::clear_iron() {
  iron_.Clear();
}
inline ::google::protobuf::uint32 SpecialEquip::iron(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.SpecialEquip.iron)
  return iron_.Get(index);
}
inline void SpecialEquip::set_iron(int index, ::google::protobuf::uint32 value) {
  iron_.Set(index, value);
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.SpecialEquip.iron)
}
inline void SpecialEquip::add_iron(::google::protobuf::uint32 value) {
  iron_.Add(value);
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.SpecialEquip.iron)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SpecialEquip::iron() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.SpecialEquip.iron)
  return iron_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SpecialEquip::mutable_iron() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.SpecialEquip.iron)
  return &iron_;
}

// -------------------------------------------------------------------

// EquipmentShop

// required uint32 clearCdPrice = 1;
inline bool EquipmentShop::has_clearcdprice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentShop::set_has_clearcdprice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentShop::clear_has_clearcdprice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentShop::clear_clearcdprice() {
  clearcdprice_ = 0u;
  clear_has_clearcdprice();
}
inline ::google::protobuf::uint32 EquipmentShop::clearcdprice() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipmentShop.clearCdPrice)
  return clearcdprice_;
}
inline void EquipmentShop::set_clearcdprice(::google::protobuf::uint32 value) {
  set_has_clearcdprice();
  clearcdprice_ = value;
  // @@protoc_insertion_point(field_set:EquipmentShopConfig.EquipmentShop.clearCdPrice)
}

// repeated .EquipmentShopConfig.EquipLevelPool levelpool = 2;
inline int EquipmentShop::levelpool_size() const {
  return levelpool_.size();
}
inline void EquipmentShop::clear_levelpool() {
  levelpool_.Clear();
}
inline const ::EquipmentShopConfig::EquipLevelPool& EquipmentShop::levelpool(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipmentShop.levelpool)
  return levelpool_.Get(index);
}
inline ::EquipmentShopConfig::EquipLevelPool* EquipmentShop::mutable_levelpool(int index) {
  // @@protoc_insertion_point(field_mutable:EquipmentShopConfig.EquipmentShop.levelpool)
  return levelpool_.Mutable(index);
}
inline ::EquipmentShopConfig::EquipLevelPool* EquipmentShop::add_levelpool() {
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.EquipmentShop.levelpool)
  return levelpool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipLevelPool >&
EquipmentShop::levelpool() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.EquipmentShop.levelpool)
  return levelpool_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipLevelPool >*
EquipmentShop::mutable_levelpool() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.EquipmentShop.levelpool)
  return &levelpool_;
}

// repeated .EquipmentShopConfig.EquipNum eqid_num = 3;
inline int EquipmentShop::eqid_num_size() const {
  return eqid_num_.size();
}
inline void EquipmentShop::clear_eqid_num() {
  eqid_num_.Clear();
}
inline const ::EquipmentShopConfig::EquipNum& EquipmentShop::eqid_num(int index) const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipmentShop.eqid_num)
  return eqid_num_.Get(index);
}
inline ::EquipmentShopConfig::EquipNum* EquipmentShop::mutable_eqid_num(int index) {
  // @@protoc_insertion_point(field_mutable:EquipmentShopConfig.EquipmentShop.eqid_num)
  return eqid_num_.Mutable(index);
}
inline ::EquipmentShopConfig::EquipNum* EquipmentShop::add_eqid_num() {
  // @@protoc_insertion_point(field_add:EquipmentShopConfig.EquipmentShop.eqid_num)
  return eqid_num_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipNum >&
EquipmentShop::eqid_num() const {
  // @@protoc_insertion_point(field_list:EquipmentShopConfig.EquipmentShop.eqid_num)
  return eqid_num_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentShopConfig::EquipNum >*
EquipmentShop::mutable_eqid_num() {
  // @@protoc_insertion_point(field_mutable_list:EquipmentShopConfig.EquipmentShop.eqid_num)
  return &eqid_num_;
}

// required .EquipmentShopConfig.SpecialEquip special = 4;
inline bool EquipmentShop::has_special() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipmentShop::set_has_special() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipmentShop::clear_has_special() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipmentShop::clear_special() {
  if (special_ != NULL) special_->::EquipmentShopConfig::SpecialEquip::Clear();
  clear_has_special();
}
inline const ::EquipmentShopConfig::SpecialEquip& EquipmentShop::special() const {
  // @@protoc_insertion_point(field_get:EquipmentShopConfig.EquipmentShop.special)
  return special_ != NULL ? *special_ : *default_instance_->special_;
}
inline ::EquipmentShopConfig::SpecialEquip* EquipmentShop::mutable_special() {
  set_has_special();
  if (special_ == NULL) special_ = new ::EquipmentShopConfig::SpecialEquip;
  // @@protoc_insertion_point(field_mutable:EquipmentShopConfig.EquipmentShop.special)
  return special_;
}
inline ::EquipmentShopConfig::SpecialEquip* EquipmentShop::release_special() {
  clear_has_special();
  ::EquipmentShopConfig::SpecialEquip* temp = special_;
  special_ = NULL;
  return temp;
}
inline void EquipmentShop::set_allocated_special(::EquipmentShopConfig::SpecialEquip* special) {
  delete special_;
  special_ = special;
  if (special) {
    set_has_special();
  } else {
    clear_has_special();
  }
  // @@protoc_insertion_point(field_set_allocated:EquipmentShopConfig.EquipmentShop.special)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EquipmentShopConfig

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OlEquipmentShop_2eproto__INCLUDED
