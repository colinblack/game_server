// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnlivenKillConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EnlivenKillConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace EnlivenKillConfig {

namespace {

const ::google::protobuf::Descriptor* RankReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyKillReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyKillReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenPlatform_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenPlatform_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnlivenKill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnlivenKill_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EnlivenKillConfig_2eproto() {
  protobuf_AddDesc_EnlivenKillConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EnlivenKillConfig.proto");
  GOOGLE_CHECK(file != NULL);
  RankReward_descriptor_ = file->message_type(0);
  static const int RankReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReward, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReward, reward_),
  };
  RankReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankReward_descriptor_,
      RankReward::default_instance_,
      RankReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankReward));
  DailyKillReward_descriptor_ = file->message_type(1);
  static const int DailyKillReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyKillReward, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyKillReward, reward_),
  };
  DailyKillReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyKillReward_descriptor_,
      DailyKillReward::default_instance_,
      DailyKillReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyKillReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyKillReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyKillReward));
  OpenPlatform_descriptor_ = file->message_type(2);
  static const int OpenPlatform_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenPlatform, startday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenPlatform, kill_quota_),
  };
  OpenPlatform_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenPlatform_descriptor_,
      OpenPlatform::default_instance_,
      OpenPlatform_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenPlatform, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenPlatform, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenPlatform));
  EnlivenKill_descriptor_ = file->message_type(3);
  static const int EnlivenKill_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnlivenKill, rank_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnlivenKill, daily_kill_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnlivenKill, open_platform_),
  };
  EnlivenKill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EnlivenKill_descriptor_,
      EnlivenKill::default_instance_,
      EnlivenKill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnlivenKill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnlivenKill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EnlivenKill));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EnlivenKillConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankReward_descriptor_, &RankReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyKillReward_descriptor_, &DailyKillReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenPlatform_descriptor_, &OpenPlatform::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EnlivenKill_descriptor_, &EnlivenKill::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EnlivenKillConfig_2eproto() {
  delete RankReward::default_instance_;
  delete RankReward_reflection_;
  delete DailyKillReward::default_instance_;
  delete DailyKillReward_reflection_;
  delete OpenPlatform::default_instance_;
  delete OpenPlatform_reflection_;
  delete EnlivenKill::default_instance_;
  delete EnlivenKill_reflection_;
}

void protobuf_AddDesc_EnlivenKillConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RewardConfig::protobuf_AddDesc_RewardConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027EnlivenKillConfig.proto\022\021EnlivenKillCo"
    "nfig\032\022RewardConfig.proto\"@\n\nRankReward\022\014"
    "\n\004rank\030\001 \002(\r\022$\n\006reward\030\002 \003(\0132\024.RewardCon"
    "fig.Reward\"F\n\017DailyKillReward\022\r\n\005index\030\001"
    " \002(\r\022$\n\006reward\030\002 \003(\0132\024.RewardConfig.Rewa"
    "rd\"4\n\014OpenPlatform\022\020\n\010startday\030\001 \002(\r\022\022\n\n"
    "kill_quota\030\002 \003(\r\"\270\001\n\013EnlivenKill\0222\n\013rank"
    "_reward\030\001 \003(\0132\035.EnlivenKillConfig.RankRe"
    "ward\022=\n\021daily_kill_reward\030\002 \003(\0132\".Enlive"
    "nKillConfig.DailyKillReward\0226\n\ropen_plat"
    "form\030\003 \003(\0132\037.EnlivenKillConfig.OpenPlatf"
    "orm", 443);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EnlivenKillConfig.proto", &protobuf_RegisterTypes);
  RankReward::default_instance_ = new RankReward();
  DailyKillReward::default_instance_ = new DailyKillReward();
  OpenPlatform::default_instance_ = new OpenPlatform();
  EnlivenKill::default_instance_ = new EnlivenKill();
  RankReward::default_instance_->InitAsDefaultInstance();
  DailyKillReward::default_instance_->InitAsDefaultInstance();
  OpenPlatform::default_instance_->InitAsDefaultInstance();
  EnlivenKill::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EnlivenKillConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EnlivenKillConfig_2eproto {
  StaticDescriptorInitializer_EnlivenKillConfig_2eproto() {
    protobuf_AddDesc_EnlivenKillConfig_2eproto();
  }
} static_descriptor_initializer_EnlivenKillConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RankReward::kRankFieldNumber;
const int RankReward::kRewardFieldNumber;
#endif  // !_MSC_VER

RankReward::RankReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnlivenKillConfig.RankReward)
}

void RankReward::InitAsDefaultInstance() {
}

RankReward::RankReward(const RankReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnlivenKillConfig.RankReward)
}

void RankReward::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankReward::~RankReward() {
  // @@protoc_insertion_point(destructor:EnlivenKillConfig.RankReward)
  SharedDtor();
}

void RankReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankReward_descriptor_;
}

const RankReward& RankReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnlivenKillConfig_2eproto();
  return *default_instance_;
}

RankReward* RankReward::default_instance_ = NULL;

RankReward* RankReward::New() const {
  return new RankReward;
}

void RankReward::Clear() {
  rank_ = 0u;
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnlivenKillConfig.RankReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 rank = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // repeated .RewardConfig.Reward reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnlivenKillConfig.RankReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnlivenKillConfig.RankReward)
  return false;
#undef DO_
}

void RankReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnlivenKillConfig.RankReward)
  // required uint32 rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rank(), output);
  }

  // repeated .RewardConfig.Reward reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnlivenKillConfig.RankReward)
}

::google::protobuf::uint8* RankReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnlivenKillConfig.RankReward)
  // required uint32 rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rank(), target);
  }

  // repeated .RewardConfig.Reward reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnlivenKillConfig.RankReward)
  return target;
}

int RankReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rank());
    }

  }
  // repeated .RewardConfig.Reward reward = 2;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankReward::MergeFrom(const RankReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankReward::CopyFrom(const RankReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->reward())) return false;
  return true;
}

void RankReward::Swap(RankReward* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankReward_descriptor_;
  metadata.reflection = RankReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyKillReward::kIndexFieldNumber;
const int DailyKillReward::kRewardFieldNumber;
#endif  // !_MSC_VER

DailyKillReward::DailyKillReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnlivenKillConfig.DailyKillReward)
}

void DailyKillReward::InitAsDefaultInstance() {
}

DailyKillReward::DailyKillReward(const DailyKillReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnlivenKillConfig.DailyKillReward)
}

void DailyKillReward::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyKillReward::~DailyKillReward() {
  // @@protoc_insertion_point(destructor:EnlivenKillConfig.DailyKillReward)
  SharedDtor();
}

void DailyKillReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyKillReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyKillReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyKillReward_descriptor_;
}

const DailyKillReward& DailyKillReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnlivenKillConfig_2eproto();
  return *default_instance_;
}

DailyKillReward* DailyKillReward::default_instance_ = NULL;

DailyKillReward* DailyKillReward::New() const {
  return new DailyKillReward;
}

void DailyKillReward::Clear() {
  index_ = 0u;
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyKillReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnlivenKillConfig.DailyKillReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // repeated .RewardConfig.Reward reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnlivenKillConfig.DailyKillReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnlivenKillConfig.DailyKillReward)
  return false;
#undef DO_
}

void DailyKillReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnlivenKillConfig.DailyKillReward)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // repeated .RewardConfig.Reward reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnlivenKillConfig.DailyKillReward)
}

::google::protobuf::uint8* DailyKillReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnlivenKillConfig.DailyKillReward)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // repeated .RewardConfig.Reward reward = 2;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnlivenKillConfig.DailyKillReward)
  return target;
}

int DailyKillReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  // repeated .RewardConfig.Reward reward = 2;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyKillReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyKillReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyKillReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyKillReward::MergeFrom(const DailyKillReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyKillReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyKillReward::CopyFrom(const DailyKillReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyKillReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->reward())) return false;
  return true;
}

void DailyKillReward::Swap(DailyKillReward* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyKillReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyKillReward_descriptor_;
  metadata.reflection = DailyKillReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpenPlatform::kStartdayFieldNumber;
const int OpenPlatform::kKillQuotaFieldNumber;
#endif  // !_MSC_VER

OpenPlatform::OpenPlatform()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnlivenKillConfig.OpenPlatform)
}

void OpenPlatform::InitAsDefaultInstance() {
}

OpenPlatform::OpenPlatform(const OpenPlatform& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnlivenKillConfig.OpenPlatform)
}

void OpenPlatform::SharedCtor() {
  _cached_size_ = 0;
  startday_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenPlatform::~OpenPlatform() {
  // @@protoc_insertion_point(destructor:EnlivenKillConfig.OpenPlatform)
  SharedDtor();
}

void OpenPlatform::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenPlatform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenPlatform::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenPlatform_descriptor_;
}

const OpenPlatform& OpenPlatform::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnlivenKillConfig_2eproto();
  return *default_instance_;
}

OpenPlatform* OpenPlatform::default_instance_ = NULL;

OpenPlatform* OpenPlatform::New() const {
  return new OpenPlatform;
}

void OpenPlatform::Clear() {
  startday_ = 0u;
  kill_quota_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenPlatform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnlivenKillConfig.OpenPlatform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 startday = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startday_)));
          set_has_startday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_kill_quota;
        break;
      }

      // repeated uint32 kill_quota = 2;
      case 2: {
        if (tag == 16) {
         parse_kill_quota:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_kill_quota())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_kill_quota())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_kill_quota;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnlivenKillConfig.OpenPlatform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnlivenKillConfig.OpenPlatform)
  return false;
#undef DO_
}

void OpenPlatform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnlivenKillConfig.OpenPlatform)
  // required uint32 startday = 1;
  if (has_startday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->startday(), output);
  }

  // repeated uint32 kill_quota = 2;
  for (int i = 0; i < this->kill_quota_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->kill_quota(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnlivenKillConfig.OpenPlatform)
}

::google::protobuf::uint8* OpenPlatform::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnlivenKillConfig.OpenPlatform)
  // required uint32 startday = 1;
  if (has_startday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->startday(), target);
  }

  // repeated uint32 kill_quota = 2;
  for (int i = 0; i < this->kill_quota_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->kill_quota(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnlivenKillConfig.OpenPlatform)
  return target;
}

int OpenPlatform::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 startday = 1;
    if (has_startday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->startday());
    }

  }
  // repeated uint32 kill_quota = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->kill_quota_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->kill_quota(i));
    }
    total_size += 1 * this->kill_quota_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenPlatform::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenPlatform* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenPlatform*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenPlatform::MergeFrom(const OpenPlatform& from) {
  GOOGLE_CHECK_NE(&from, this);
  kill_quota_.MergeFrom(from.kill_quota_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startday()) {
      set_startday(from.startday());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenPlatform::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenPlatform::CopyFrom(const OpenPlatform& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenPlatform::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OpenPlatform::Swap(OpenPlatform* other) {
  if (other != this) {
    std::swap(startday_, other->startday_);
    kill_quota_.Swap(&other->kill_quota_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenPlatform::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenPlatform_descriptor_;
  metadata.reflection = OpenPlatform_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EnlivenKill::kRankRewardFieldNumber;
const int EnlivenKill::kDailyKillRewardFieldNumber;
const int EnlivenKill::kOpenPlatformFieldNumber;
#endif  // !_MSC_VER

EnlivenKill::EnlivenKill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnlivenKillConfig.EnlivenKill)
}

void EnlivenKill::InitAsDefaultInstance() {
}

EnlivenKill::EnlivenKill(const EnlivenKill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnlivenKillConfig.EnlivenKill)
}

void EnlivenKill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnlivenKill::~EnlivenKill() {
  // @@protoc_insertion_point(destructor:EnlivenKillConfig.EnlivenKill)
  SharedDtor();
}

void EnlivenKill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnlivenKill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnlivenKill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnlivenKill_descriptor_;
}

const EnlivenKill& EnlivenKill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnlivenKillConfig_2eproto();
  return *default_instance_;
}

EnlivenKill* EnlivenKill::default_instance_ = NULL;

EnlivenKill* EnlivenKill::New() const {
  return new EnlivenKill;
}

void EnlivenKill::Clear() {
  rank_reward_.Clear();
  daily_kill_reward_.Clear();
  open_platform_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EnlivenKill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnlivenKillConfig.EnlivenKill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EnlivenKillConfig.RankReward rank_reward = 1;
      case 1: {
        if (tag == 10) {
         parse_rank_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rank_reward;
        if (input->ExpectTag(18)) goto parse_daily_kill_reward;
        break;
      }

      // repeated .EnlivenKillConfig.DailyKillReward daily_kill_reward = 2;
      case 2: {
        if (tag == 18) {
         parse_daily_kill_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily_kill_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_daily_kill_reward;
        if (input->ExpectTag(26)) goto parse_open_platform;
        break;
      }

      // repeated .EnlivenKillConfig.OpenPlatform open_platform = 3;
      case 3: {
        if (tag == 26) {
         parse_open_platform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_open_platform()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_open_platform;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnlivenKillConfig.EnlivenKill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnlivenKillConfig.EnlivenKill)
  return false;
#undef DO_
}

void EnlivenKill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnlivenKillConfig.EnlivenKill)
  // repeated .EnlivenKillConfig.RankReward rank_reward = 1;
  for (int i = 0; i < this->rank_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_reward(i), output);
  }

  // repeated .EnlivenKillConfig.DailyKillReward daily_kill_reward = 2;
  for (int i = 0; i < this->daily_kill_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->daily_kill_reward(i), output);
  }

  // repeated .EnlivenKillConfig.OpenPlatform open_platform = 3;
  for (int i = 0; i < this->open_platform_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->open_platform(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnlivenKillConfig.EnlivenKill)
}

::google::protobuf::uint8* EnlivenKill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnlivenKillConfig.EnlivenKill)
  // repeated .EnlivenKillConfig.RankReward rank_reward = 1;
  for (int i = 0; i < this->rank_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_reward(i), target);
  }

  // repeated .EnlivenKillConfig.DailyKillReward daily_kill_reward = 2;
  for (int i = 0; i < this->daily_kill_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->daily_kill_reward(i), target);
  }

  // repeated .EnlivenKillConfig.OpenPlatform open_platform = 3;
  for (int i = 0; i < this->open_platform_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->open_platform(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnlivenKillConfig.EnlivenKill)
  return target;
}

int EnlivenKill::ByteSize() const {
  int total_size = 0;

  // repeated .EnlivenKillConfig.RankReward rank_reward = 1;
  total_size += 1 * this->rank_reward_size();
  for (int i = 0; i < this->rank_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_reward(i));
  }

  // repeated .EnlivenKillConfig.DailyKillReward daily_kill_reward = 2;
  total_size += 1 * this->daily_kill_reward_size();
  for (int i = 0; i < this->daily_kill_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily_kill_reward(i));
  }

  // repeated .EnlivenKillConfig.OpenPlatform open_platform = 3;
  total_size += 1 * this->open_platform_size();
  for (int i = 0; i < this->open_platform_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_platform(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnlivenKill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EnlivenKill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EnlivenKill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EnlivenKill::MergeFrom(const EnlivenKill& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_reward_.MergeFrom(from.rank_reward_);
  daily_kill_reward_.MergeFrom(from.daily_kill_reward_);
  open_platform_.MergeFrom(from.open_platform_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EnlivenKill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnlivenKill::CopyFrom(const EnlivenKill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnlivenKill::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rank_reward())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->daily_kill_reward())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->open_platform())) return false;
  return true;
}

void EnlivenKill::Swap(EnlivenKill* other) {
  if (other != this) {
    rank_reward_.Swap(&other->rank_reward_);
    daily_kill_reward_.Swap(&other->daily_kill_reward_);
    open_platform_.Swap(&other->open_platform_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EnlivenKill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnlivenKill_descriptor_;
  metadata.reflection = EnlivenKill_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EnlivenKillConfig

// @@protoc_insertion_point(global_scope)
