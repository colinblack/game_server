// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoOfficial.proto

#ifndef PROTOBUF_ProtoOfficial_2eproto__INCLUDED
#define PROTOBUF_ProtoOfficial_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoOfficial {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoOfficial_2eproto();
void protobuf_AssignDesc_ProtoOfficial_2eproto();
void protobuf_ShutdownFile_ProtoOfficial_2eproto();

class DepartmentRecord;
class PersonnelRecord;
class PrivilegeRecord;
class DepartmentMember;
class DepartmentLeader;
class PublishToken;
class OfficialInfoReq;
class OfficialInfoResp;
class PushJobChangeMsg;
class ChallengeReq;
class ChallengeResp;
class StartChallengeReq;
class AppointDeputyReq;
class AppointDeputyResp;
class ApplyJoinReq;
class ApplyJoinResp;
class ApplyExitReq;
class ApplyExitResp;
class AgreeJoinReq;
class AgreeJoinResp;
class RefuseJoinReq;
class RefuseJoinResp;
class SetNoticeReq;
class GetSalaryReq;
class GetSalaryResp;
class GetDepartmentRecordReq;
class GetDepartmentRecordResp;
class PublishTokenReq;
class PushPublishToken;
class RespondTokenReq;
class RespondTokenResp;
class GetPersonnelRecordReq;
class GetPersonnelRecordResp;
class GetPrivilegeRecordReq;
class GetPrivilegeRecordResp;
class KickOutMemberReq;
class KickOutMemberResp;

enum eDepartment {
  e_None = 0,
  e_Commander = 1,
  e_Defense = 2,
  e_President = 3,
  e_Marshal = 4,
  e_Staff = 5
};
bool eDepartment_IsValid(int value);
const eDepartment eDepartment_MIN = e_None;
const eDepartment eDepartment_MAX = e_Staff;
const int eDepartment_ARRAYSIZE = eDepartment_MAX + 1;

const ::google::protobuf::EnumDescriptor* eDepartment_descriptor();
inline const ::std::string& eDepartment_Name(eDepartment value) {
  return ::google::protobuf::internal::NameOfEnum(
    eDepartment_descriptor(), value);
}
inline bool eDepartment_Parse(
    const ::std::string& name, eDepartment* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eDepartment>(
    eDepartment_descriptor(), name, value);
}
// ===================================================================

class DepartmentRecord : public ::google::protobuf::Message {
 public:
  DepartmentRecord();
  virtual ~DepartmentRecord();

  DepartmentRecord(const DepartmentRecord& from);

  inline DepartmentRecord& operator=(const DepartmentRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepartmentRecord& default_instance();

  void Swap(DepartmentRecord* other);

  // implements Message ----------------------------------------------

  DepartmentRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepartmentRecord& from);
  void MergeFrom(const DepartmentRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline ::google::protobuf::uint32 params() const;
  inline void set_params(::google::protobuf::uint32 value);

  // required bytes operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline const ::std::string& operate() const;
  inline void set_operate(const ::std::string& value);
  inline void set_operate(const char* value);
  inline void set_operate(const void* value, size_t size);
  inline ::std::string* mutable_operate();
  inline ::std::string* release_operate();
  inline void set_allocated_operate(::std::string* operate);

  // required bytes target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline const ::std::string& target() const;
  inline void set_target(const ::std::string& value);
  inline void set_target(const char* value);
  inline void set_target(const void* value, size_t size);
  inline ::std::string* mutable_target();
  inline ::std::string* release_target();
  inline void set_allocated_target(::std::string* target);

  // required uint32 operate_job = 4;
  inline bool has_operate_job() const;
  inline void clear_operate_job();
  static const int kOperateJobFieldNumber = 4;
  inline ::google::protobuf::uint32 operate_job() const;
  inline void set_operate_job(::google::protobuf::uint32 value);

  // required uint32 target_job = 5;
  inline bool has_target_job() const;
  inline void clear_target_job();
  static const int kTargetJobFieldNumber = 5;
  inline ::google::protobuf::uint32 target_job() const;
  inline void set_target_job(::google::protobuf::uint32 value);

  // required uint32 ts = 6;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 6;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 op = 7;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 7;
  inline ::google::protobuf::uint32 op() const;
  inline void set_op(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.DepartmentRecord)
 private:
  inline void set_has_params();
  inline void clear_has_params();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_operate_job();
  inline void clear_has_operate_job();
  inline void set_has_target_job();
  inline void clear_has_target_job();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_op();
  inline void clear_has_op();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* operate_;
  ::google::protobuf::uint32 params_;
  ::google::protobuf::uint32 operate_job_;
  ::std::string* target_;
  ::google::protobuf::uint32 target_job_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 op_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static DepartmentRecord* default_instance_;
};
// -------------------------------------------------------------------

class PersonnelRecord : public ::google::protobuf::Message {
 public:
  PersonnelRecord();
  virtual ~PersonnelRecord();

  PersonnelRecord(const PersonnelRecord& from);

  inline PersonnelRecord& operator=(const PersonnelRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonnelRecord& default_instance();

  void Swap(PersonnelRecord* other);

  // implements Message ----------------------------------------------

  PersonnelRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PersonnelRecord& from);
  void MergeFrom(const PersonnelRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline const ::std::string& operate() const;
  inline void set_operate(const ::std::string& value);
  inline void set_operate(const char* value);
  inline void set_operate(const void* value, size_t size);
  inline ::std::string* mutable_operate();
  inline ::std::string* release_operate();
  inline void set_allocated_operate(::std::string* operate);

  // required bytes target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline const ::std::string& target() const;
  inline void set_target(const ::std::string& value);
  inline void set_target(const char* value);
  inline void set_target(const void* value, size_t size);
  inline ::std::string* mutable_target();
  inline ::std::string* release_target();
  inline void set_allocated_target(::std::string* target);

  // required .ProtoOfficial.eDepartment department = 3;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 3;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 4;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 4;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // required uint32 ts = 5;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 5;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PersonnelRecord)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* operate_;
  ::std::string* target_;
  int department_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PersonnelRecord* default_instance_;
};
// -------------------------------------------------------------------

class PrivilegeRecord : public ::google::protobuf::Message {
 public:
  PrivilegeRecord();
  virtual ~PrivilegeRecord();

  PrivilegeRecord(const PrivilegeRecord& from);

  inline PrivilegeRecord& operator=(const PrivilegeRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivilegeRecord& default_instance();

  void Swap(PrivilegeRecord* other);

  // implements Message ----------------------------------------------

  PrivilegeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrivilegeRecord& from);
  void MergeFrom(const PrivilegeRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline const ::std::string& operate() const;
  inline void set_operate(const ::std::string& value);
  inline void set_operate(const char* value);
  inline void set_operate(const void* value, size_t size);
  inline ::std::string* mutable_operate();
  inline ::std::string* release_operate();
  inline void set_allocated_operate(::std::string* operate);

  // required bytes target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline const ::std::string& target() const;
  inline void set_target(const ::std::string& value);
  inline void set_target(const char* value);
  inline void set_target(const void* value, size_t size);
  inline ::std::string* mutable_target();
  inline ::std::string* release_target();
  inline void set_allocated_target(::std::string* target);

  // required .ProtoOfficial.eDepartment department = 3;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 3;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 4;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 4;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // required uint32 ts = 5;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 5;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 params = 7;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 7;
  inline ::google::protobuf::uint32 params() const;
  inline void set_params(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PrivilegeRecord)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* operate_;
  ::std::string* target_;
  int department_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 params_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PrivilegeRecord* default_instance_;
};
// -------------------------------------------------------------------

class DepartmentMember : public ::google::protobuf::Message {
 public:
  DepartmentMember();
  virtual ~DepartmentMember();

  DepartmentMember(const DepartmentMember& from);

  inline DepartmentMember& operator=(const DepartmentMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepartmentMember& default_instance();

  void Swap(DepartmentMember* other);

  // implements Message ----------------------------------------------

  DepartmentMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepartmentMember& from);
  void MergeFrom(const DepartmentMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 official = 1;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 1;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 lvl = 4;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 4;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // required bytes head = 5;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 5;
  inline const ::std::string& head() const;
  inline void set_head(const ::std::string& value);
  inline void set_head(const char* value);
  inline void set_head(const void* value, size_t size);
  inline ::std::string* mutable_head();
  inline ::std::string* release_head();
  inline void set_allocated_head(::std::string* head);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.DepartmentMember)
 private:
  inline void set_has_official();
  inline void clear_has_official();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::uint32 uid_;
  ::std::string* name_;
  ::std::string* head_;
  ::google::protobuf::uint32 lvl_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static DepartmentMember* default_instance_;
};
// -------------------------------------------------------------------

class DepartmentLeader : public ::google::protobuf::Message {
 public:
  DepartmentLeader();
  virtual ~DepartmentLeader();

  DepartmentLeader(const DepartmentLeader& from);

  inline DepartmentLeader& operator=(const DepartmentLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepartmentLeader& default_instance();

  void Swap(DepartmentLeader* other);

  // implements Message ----------------------------------------------

  DepartmentLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepartmentLeader& from);
  void MergeFrom(const DepartmentLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment type() const;
  inline void set_type(::ProtoOfficial::eDepartment value);

  // required .ProtoOfficial.DepartmentMember leader = 2;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 2;
  inline const ::ProtoOfficial::DepartmentMember& leader() const;
  inline ::ProtoOfficial::DepartmentMember* mutable_leader();
  inline ::ProtoOfficial::DepartmentMember* release_leader();
  inline void set_allocated_leader(::ProtoOfficial::DepartmentMember* leader);

  // required uint32 prestige = 3;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 3;
  inline ::google::protobuf::uint32 prestige() const;
  inline void set_prestige(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.DepartmentLeader)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOfficial::DepartmentMember* leader_;
  int type_;
  ::google::protobuf::uint32 prestige_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static DepartmentLeader* default_instance_;
};
// -------------------------------------------------------------------

class PublishToken : public ::google::protobuf::Message {
 public:
  PublishToken();
  virtual ~PublishToken();

  PublishToken(const PublishToken& from);

  inline PublishToken& operator=(const PublishToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishToken& default_instance();

  void Swap(PublishToken* other);

  // implements Message ----------------------------------------------

  PublishToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PublishToken& from);
  void MergeFrom(const PublishToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 city_id = 3;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 3;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // required bytes text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 kingdom = 6;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 6;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PublishToken)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 ts_;
  ::std::string* text_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 kingdom_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PublishToken* default_instance_;
};
// -------------------------------------------------------------------

class OfficialInfoReq : public ::google::protobuf::Message {
 public:
  OfficialInfoReq();
  virtual ~OfficialInfoReq();

  OfficialInfoReq(const OfficialInfoReq& from);

  inline OfficialInfoReq& operator=(const OfficialInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfficialInfoReq& default_instance();

  void Swap(OfficialInfoReq* other);

  // implements Message ----------------------------------------------

  OfficialInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfficialInfoReq& from);
  void MergeFrom(const OfficialInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.OfficialInfoReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static OfficialInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class OfficialInfoResp : public ::google::protobuf::Message {
 public:
  OfficialInfoResp();
  virtual ~OfficialInfoResp();

  OfficialInfoResp(const OfficialInfoResp& from);

  inline OfficialInfoResp& operator=(const OfficialInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfficialInfoResp& default_instance();

  void Swap(OfficialInfoResp* other);

  // implements Message ----------------------------------------------

  OfficialInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfficialInfoResp& from);
  void MergeFrom(const OfficialInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoOfficial.DepartmentLeader leaders = 1;
  inline int leaders_size() const;
  inline void clear_leaders();
  static const int kLeadersFieldNumber = 1;
  inline const ::ProtoOfficial::DepartmentLeader& leaders(int index) const;
  inline ::ProtoOfficial::DepartmentLeader* mutable_leaders(int index);
  inline ::ProtoOfficial::DepartmentLeader* add_leaders();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentLeader >&
      leaders() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentLeader >*
      mutable_leaders();

  // required .ProtoOfficial.eDepartment department = 2;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 2;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // repeated .ProtoOfficial.DepartmentMember members = 3;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 3;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // required bytes country_notice = 4;
  inline bool has_country_notice() const;
  inline void clear_country_notice();
  static const int kCountryNoticeFieldNumber = 4;
  inline const ::std::string& country_notice() const;
  inline void set_country_notice(const ::std::string& value);
  inline void set_country_notice(const char* value);
  inline void set_country_notice(const void* value, size_t size);
  inline ::std::string* mutable_country_notice();
  inline ::std::string* release_country_notice();
  inline void set_allocated_country_notice(::std::string* country_notice);

  // required bytes depart_notice = 5;
  inline bool has_depart_notice() const;
  inline void clear_depart_notice();
  static const int kDepartNoticeFieldNumber = 5;
  inline const ::std::string& depart_notice() const;
  inline void set_depart_notice(const ::std::string& value);
  inline void set_depart_notice(const char* value);
  inline void set_depart_notice(const void* value, size_t size);
  inline ::std::string* mutable_depart_notice();
  inline ::std::string* release_depart_notice();
  inline void set_allocated_depart_notice(::std::string* depart_notice);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.OfficialInfoResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_country_notice();
  inline void clear_has_country_notice();
  inline void set_has_depart_notice();
  inline void clear_has_depart_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentLeader > leaders_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::std::string* country_notice_;
  ::std::string* depart_notice_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static OfficialInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class PushJobChangeMsg : public ::google::protobuf::Message {
 public:
  PushJobChangeMsg();
  virtual ~PushJobChangeMsg();

  PushJobChangeMsg(const PushJobChangeMsg& from);

  inline PushJobChangeMsg& operator=(const PushJobChangeMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushJobChangeMsg& default_instance();

  void Swap(PushJobChangeMsg* other);

  // implements Message ----------------------------------------------

  PushJobChangeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushJobChangeMsg& from);
  void MergeFrom(const PushJobChangeMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment origin_depart = 1;
  inline bool has_origin_depart() const;
  inline void clear_origin_depart();
  static const int kOriginDepartFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment origin_depart() const;
  inline void set_origin_depart(::ProtoOfficial::eDepartment value);

  // required int32 origin_job = 2;
  inline bool has_origin_job() const;
  inline void clear_origin_job();
  static const int kOriginJobFieldNumber = 2;
  inline ::google::protobuf::int32 origin_job() const;
  inline void set_origin_job(::google::protobuf::int32 value);

  // required .ProtoOfficial.eDepartment target_depart = 3;
  inline bool has_target_depart() const;
  inline void clear_target_depart();
  static const int kTargetDepartFieldNumber = 3;
  inline ::ProtoOfficial::eDepartment target_depart() const;
  inline void set_target_depart(::ProtoOfficial::eDepartment value);

  // required int32 target_job = 4;
  inline bool has_target_job() const;
  inline void clear_target_job();
  static const int kTargetJobFieldNumber = 4;
  inline ::google::protobuf::int32 target_job() const;
  inline void set_target_job(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PushJobChangeMsg)
 private:
  inline void set_has_origin_depart();
  inline void clear_has_origin_depart();
  inline void set_has_origin_job();
  inline void clear_has_origin_job();
  inline void set_has_target_depart();
  inline void clear_has_target_depart();
  inline void set_has_target_job();
  inline void clear_has_target_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int origin_depart_;
  ::google::protobuf::int32 origin_job_;
  int target_depart_;
  ::google::protobuf::int32 target_job_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PushJobChangeMsg* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeReq : public ::google::protobuf::Message {
 public:
  ChallengeReq();
  virtual ~ChallengeReq();

  ChallengeReq(const ChallengeReq& from);

  inline ChallengeReq& operator=(const ChallengeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeReq& default_instance();

  void Swap(ChallengeReq* other);

  // implements Message ----------------------------------------------

  ChallengeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeReq& from);
  void MergeFrom(const ChallengeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 2;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 2;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ChallengeReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 official_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ChallengeReq* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeResp : public ::google::protobuf::Message {
 public:
  ChallengeResp();
  virtual ~ChallengeResp();

  ChallengeResp(const ChallengeResp& from);

  inline ChallengeResp& operator=(const ChallengeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeResp& default_instance();

  void Swap(ChallengeResp* other);

  // implements Message ----------------------------------------------

  ChallengeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeResp& from);
  void MergeFrom(const ChallengeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 2;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 2;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // repeated uint32 hero_ids = 3;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // repeated uint32 hero_lvl = 4;
  inline int hero_lvl_size() const;
  inline void clear_hero_lvl();
  static const int kHeroLvlFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_lvl(int index) const;
  inline void set_hero_lvl(int index, ::google::protobuf::uint32 value);
  inline void add_hero_lvl(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_lvl() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_lvl();

  // repeated uint32 hero_troops = 5;
  inline int hero_troops_size() const;
  inline void clear_hero_troops();
  static const int kHeroTroopsFieldNumber = 5;
  inline ::google::protobuf::uint32 hero_troops(int index) const;
  inline void set_hero_troops(int index, ::google::protobuf::uint32 value);
  inline void add_hero_troops(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_troops() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_troops();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ChallengeResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_lvl_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_troops_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ChallengeResp* default_instance_;
};
// -------------------------------------------------------------------

class StartChallengeReq : public ::google::protobuf::Message {
 public:
  StartChallengeReq();
  virtual ~StartChallengeReq();

  StartChallengeReq(const StartChallengeReq& from);

  inline StartChallengeReq& operator=(const StartChallengeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChallengeReq& default_instance();

  void Swap(StartChallengeReq* other);

  // implements Message ----------------------------------------------

  StartChallengeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartChallengeReq& from);
  void MergeFrom(const StartChallengeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 2;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 2;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // repeated uint32 hero_ids = 3;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.StartChallengeReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static StartChallengeReq* default_instance_;
};
// -------------------------------------------------------------------

class AppointDeputyReq : public ::google::protobuf::Message {
 public:
  AppointDeputyReq();
  virtual ~AppointDeputyReq();

  AppointDeputyReq(const AppointDeputyReq& from);

  inline AppointDeputyReq& operator=(const AppointDeputyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppointDeputyReq& default_instance();

  void Swap(AppointDeputyReq* other);

  // implements Message ----------------------------------------------

  AppointDeputyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppointDeputyReq& from);
  void MergeFrom(const AppointDeputyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.AppointDeputyReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static AppointDeputyReq* default_instance_;
};
// -------------------------------------------------------------------

class AppointDeputyResp : public ::google::protobuf::Message {
 public:
  AppointDeputyResp();
  virtual ~AppointDeputyResp();

  AppointDeputyResp(const AppointDeputyResp& from);

  inline AppointDeputyResp& operator=(const AppointDeputyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppointDeputyResp& default_instance();

  void Swap(AppointDeputyResp* other);

  // implements Message ----------------------------------------------

  AppointDeputyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppointDeputyResp& from);
  void MergeFrom(const AppointDeputyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 origin = 3;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 3;
  inline ::google::protobuf::uint32 origin() const;
  inline void set_origin(::google::protobuf::uint32 value);

  // required uint32 target = 4;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 4;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .ProtoOfficial.DepartmentMember members = 6;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 6;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // repeated .ProtoOfficial.DepartmentRecord records = 7;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 7;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.AppointDeputyResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 origin_;
  ::google::protobuf::uint32 target_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static AppointDeputyResp* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinReq : public ::google::protobuf::Message {
 public:
  ApplyJoinReq();
  virtual ~ApplyJoinReq();

  ApplyJoinReq(const ApplyJoinReq& from);

  inline ApplyJoinReq& operator=(const ApplyJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinReq& default_instance();

  void Swap(ApplyJoinReq* other);

  // implements Message ----------------------------------------------

  ApplyJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinReq& from);
  void MergeFrom(const ApplyJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ApplyJoinReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinResp : public ::google::protobuf::Message {
 public:
  ApplyJoinResp();
  virtual ~ApplyJoinResp();

  ApplyJoinResp(const ApplyJoinResp& from);

  inline ApplyJoinResp& operator=(const ApplyJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinResp& default_instance();

  void Swap(ApplyJoinResp* other);

  // implements Message ----------------------------------------------

  ApplyJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinResp& from);
  void MergeFrom(const ApplyJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // repeated .ProtoOfficial.DepartmentMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // repeated .ProtoOfficial.DepartmentRecord records = 3;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 3;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ApplyJoinResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class ApplyExitReq : public ::google::protobuf::Message {
 public:
  ApplyExitReq();
  virtual ~ApplyExitReq();

  ApplyExitReq(const ApplyExitReq& from);

  inline ApplyExitReq& operator=(const ApplyExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyExitReq& default_instance();

  void Swap(ApplyExitReq* other);

  // implements Message ----------------------------------------------

  ApplyExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyExitReq& from);
  void MergeFrom(const ApplyExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ApplyExitReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ApplyExitReq* default_instance_;
};
// -------------------------------------------------------------------

class ApplyExitResp : public ::google::protobuf::Message {
 public:
  ApplyExitResp();
  virtual ~ApplyExitResp();

  ApplyExitResp(const ApplyExitResp& from);

  inline ApplyExitResp& operator=(const ApplyExitResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyExitResp& default_instance();

  void Swap(ApplyExitResp* other);

  // implements Message ----------------------------------------------

  ApplyExitResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyExitResp& from);
  void MergeFrom(const ApplyExitResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required uint32 official = 2;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 2;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);

  // required uint32 prestige = 3;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 3;
  inline ::google::protobuf::uint32 prestige() const;
  inline void set_prestige(::google::protobuf::uint32 value);

  // repeated .ProtoOfficial.DepartmentMember members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.ApplyExitResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_official();
  inline void clear_has_official();
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::google::protobuf::uint32 prestige_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static ApplyExitResp* default_instance_;
};
// -------------------------------------------------------------------

class AgreeJoinReq : public ::google::protobuf::Message {
 public:
  AgreeJoinReq();
  virtual ~AgreeJoinReq();

  AgreeJoinReq(const AgreeJoinReq& from);

  inline AgreeJoinReq& operator=(const AgreeJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgreeJoinReq& default_instance();

  void Swap(AgreeJoinReq* other);

  // implements Message ----------------------------------------------

  AgreeJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgreeJoinReq& from);
  void MergeFrom(const AgreeJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoOfficial.eDepartment department = 2;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 2;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.AgreeJoinReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static AgreeJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class AgreeJoinResp : public ::google::protobuf::Message {
 public:
  AgreeJoinResp();
  virtual ~AgreeJoinResp();

  AgreeJoinResp(const AgreeJoinResp& from);

  inline AgreeJoinResp& operator=(const AgreeJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgreeJoinResp& default_instance();

  void Swap(AgreeJoinResp* other);

  // implements Message ----------------------------------------------

  AgreeJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgreeJoinResp& from);
  void MergeFrom(const AgreeJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // repeated .ProtoOfficial.DepartmentMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // repeated .ProtoOfficial.DepartmentRecord records = 3;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 3;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.AgreeJoinResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static AgreeJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class RefuseJoinReq : public ::google::protobuf::Message {
 public:
  RefuseJoinReq();
  virtual ~RefuseJoinReq();

  RefuseJoinReq(const RefuseJoinReq& from);

  inline RefuseJoinReq& operator=(const RefuseJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseJoinReq& default_instance();

  void Swap(RefuseJoinReq* other);

  // implements Message ----------------------------------------------

  RefuseJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefuseJoinReq& from);
  void MergeFrom(const RefuseJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoOfficial.eDepartment department = 2;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 2;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.RefuseJoinReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static RefuseJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class RefuseJoinResp : public ::google::protobuf::Message {
 public:
  RefuseJoinResp();
  virtual ~RefuseJoinResp();

  RefuseJoinResp(const RefuseJoinResp& from);

  inline RefuseJoinResp& operator=(const RefuseJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseJoinResp& default_instance();

  void Swap(RefuseJoinResp* other);

  // implements Message ----------------------------------------------

  RefuseJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefuseJoinResp& from);
  void MergeFrom(const RefuseJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // repeated .ProtoOfficial.DepartmentRecord records = 2;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 2;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.RefuseJoinResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static RefuseJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class SetNoticeReq : public ::google::protobuf::Message {
 public:
  SetNoticeReq();
  virtual ~SetNoticeReq();

  SetNoticeReq(const SetNoticeReq& from);

  inline SetNoticeReq& operator=(const SetNoticeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNoticeReq& default_instance();

  void Swap(SetNoticeReq* other);

  // implements Message ----------------------------------------------

  SetNoticeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetNoticeReq& from);
  void MergeFrom(const SetNoticeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // required bytes text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.SetNoticeReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static SetNoticeReq* default_instance_;
};
// -------------------------------------------------------------------

class GetSalaryReq : public ::google::protobuf::Message {
 public:
  GetSalaryReq();
  virtual ~GetSalaryReq();

  GetSalaryReq(const GetSalaryReq& from);

  inline GetSalaryReq& operator=(const GetSalaryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSalaryReq& default_instance();

  void Swap(GetSalaryReq* other);

  // implements Message ----------------------------------------------

  GetSalaryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSalaryReq& from);
  void MergeFrom(const GetSalaryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetSalaryReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetSalaryReq* default_instance_;
};
// -------------------------------------------------------------------

class GetSalaryResp : public ::google::protobuf::Message {
 public:
  GetSalaryResp();
  virtual ~GetSalaryResp();

  GetSalaryResp(const GetSalaryResp& from);

  inline GetSalaryResp& operator=(const GetSalaryResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSalaryResp& default_instance();

  void Swap(GetSalaryResp* other);

  // implements Message ----------------------------------------------

  GetSalaryResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSalaryResp& from);
  void MergeFrom(const GetSalaryResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 salary = 1;
  inline bool has_salary() const;
  inline void clear_salary();
  static const int kSalaryFieldNumber = 1;
  inline ::google::protobuf::uint32 salary() const;
  inline void set_salary(::google::protobuf::uint32 value);

  // required uint32 coins = 2;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 2;
  inline ::google::protobuf::uint32 coins() const;
  inline void set_coins(::google::protobuf::uint32 value);

  // required uint32 job_reward_ts = 3;
  inline bool has_job_reward_ts() const;
  inline void clear_job_reward_ts();
  static const int kJobRewardTsFieldNumber = 3;
  inline ::google::protobuf::uint32 job_reward_ts() const;
  inline void set_job_reward_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetSalaryResp)
 private:
  inline void set_has_salary();
  inline void clear_has_salary();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_job_reward_ts();
  inline void clear_has_job_reward_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 salary_;
  ::google::protobuf::uint32 coins_;
  ::google::protobuf::uint32 job_reward_ts_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetSalaryResp* default_instance_;
};
// -------------------------------------------------------------------

class GetDepartmentRecordReq : public ::google::protobuf::Message {
 public:
  GetDepartmentRecordReq();
  virtual ~GetDepartmentRecordReq();

  GetDepartmentRecordReq(const GetDepartmentRecordReq& from);

  inline GetDepartmentRecordReq& operator=(const GetDepartmentRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDepartmentRecordReq& default_instance();

  void Swap(GetDepartmentRecordReq* other);

  // implements Message ----------------------------------------------

  GetDepartmentRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDepartmentRecordReq& from);
  void MergeFrom(const GetDepartmentRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetDepartmentRecordReq)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetDepartmentRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDepartmentRecordResp : public ::google::protobuf::Message {
 public:
  GetDepartmentRecordResp();
  virtual ~GetDepartmentRecordResp();

  GetDepartmentRecordResp(const GetDepartmentRecordResp& from);

  inline GetDepartmentRecordResp& operator=(const GetDepartmentRecordResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDepartmentRecordResp& default_instance();

  void Swap(GetDepartmentRecordResp* other);

  // implements Message ----------------------------------------------

  GetDepartmentRecordResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDepartmentRecordResp& from);
  void MergeFrom(const GetDepartmentRecordResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoOfficial.DepartmentRecord records = 1;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 1;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetDepartmentRecordResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetDepartmentRecordResp* default_instance_;
};
// -------------------------------------------------------------------

class PublishTokenReq : public ::google::protobuf::Message {
 public:
  PublishTokenReq();
  virtual ~PublishTokenReq();

  PublishTokenReq(const PublishTokenReq& from);

  inline PublishTokenReq& operator=(const PublishTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishTokenReq& default_instance();

  void Swap(PublishTokenReq* other);

  // implements Message ----------------------------------------------

  PublishTokenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PublishTokenReq& from);
  void MergeFrom(const PublishTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // required bytes text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // required .ProtoOfficial.eDepartment department = 3;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 3;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PublishTokenReq)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  ::google::protobuf::uint32 city_id_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PublishTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class PushPublishToken : public ::google::protobuf::Message {
 public:
  PushPublishToken();
  virtual ~PushPublishToken();

  PushPublishToken(const PushPublishToken& from);

  inline PushPublishToken& operator=(const PushPublishToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushPublishToken& default_instance();

  void Swap(PushPublishToken* other);

  // implements Message ----------------------------------------------

  PushPublishToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushPublishToken& from);
  void MergeFrom(const PushPublishToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.PublishToken token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::ProtoOfficial::PublishToken& token() const;
  inline ::ProtoOfficial::PublishToken* mutable_token();
  inline ::ProtoOfficial::PublishToken* release_token();
  inline void set_allocated_token(::ProtoOfficial::PublishToken* token);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.PushPublishToken)
 private:
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOfficial::PublishToken* token_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static PushPublishToken* default_instance_;
};
// -------------------------------------------------------------------

class RespondTokenReq : public ::google::protobuf::Message {
 public:
  RespondTokenReq();
  virtual ~RespondTokenReq();

  RespondTokenReq(const RespondTokenReq& from);

  inline RespondTokenReq& operator=(const RespondTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RespondTokenReq& default_instance();

  void Swap(RespondTokenReq* other);

  // implements Message ----------------------------------------------

  RespondTokenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RespondTokenReq& from);
  void MergeFrom(const RespondTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.RespondTokenReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static RespondTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class RespondTokenResp : public ::google::protobuf::Message {
 public:
  RespondTokenResp();
  virtual ~RespondTokenResp();

  RespondTokenResp(const RespondTokenResp& from);

  inline RespondTokenResp& operator=(const RespondTokenResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RespondTokenResp& default_instance();

  void Swap(RespondTokenResp* other);

  // implements Message ----------------------------------------------

  RespondTokenResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RespondTokenResp& from);
  void MergeFrom(const RespondTokenResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // required uint32 token_ts = 2;
  inline bool has_token_ts() const;
  inline void clear_token_ts();
  static const int kTokenTsFieldNumber = 2;
  inline ::google::protobuf::uint32 token_ts() const;
  inline void set_token_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.RespondTokenResp)
 private:
  inline void set_has_token_ts();
  inline void clear_has_token_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::uint32 token_ts_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static RespondTokenResp* default_instance_;
};
// -------------------------------------------------------------------

class GetPersonnelRecordReq : public ::google::protobuf::Message {
 public:
  GetPersonnelRecordReq();
  virtual ~GetPersonnelRecordReq();

  GetPersonnelRecordReq(const GetPersonnelRecordReq& from);

  inline GetPersonnelRecordReq& operator=(const GetPersonnelRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPersonnelRecordReq& default_instance();

  void Swap(GetPersonnelRecordReq* other);

  // implements Message ----------------------------------------------

  GetPersonnelRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPersonnelRecordReq& from);
  void MergeFrom(const GetPersonnelRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetPersonnelRecordReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetPersonnelRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPersonnelRecordResp : public ::google::protobuf::Message {
 public:
  GetPersonnelRecordResp();
  virtual ~GetPersonnelRecordResp();

  GetPersonnelRecordResp(const GetPersonnelRecordResp& from);

  inline GetPersonnelRecordResp& operator=(const GetPersonnelRecordResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPersonnelRecordResp& default_instance();

  void Swap(GetPersonnelRecordResp* other);

  // implements Message ----------------------------------------------

  GetPersonnelRecordResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPersonnelRecordResp& from);
  void MergeFrom(const GetPersonnelRecordResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoOfficial.PersonnelRecord records = 1;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 1;
  inline const ::ProtoOfficial::PersonnelRecord& records(int index) const;
  inline ::ProtoOfficial::PersonnelRecord* mutable_records(int index);
  inline ::ProtoOfficial::PersonnelRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PersonnelRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PersonnelRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetPersonnelRecordResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PersonnelRecord > records_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetPersonnelRecordResp* default_instance_;
};
// -------------------------------------------------------------------

class GetPrivilegeRecordReq : public ::google::protobuf::Message {
 public:
  GetPrivilegeRecordReq();
  virtual ~GetPrivilegeRecordReq();

  GetPrivilegeRecordReq(const GetPrivilegeRecordReq& from);

  inline GetPrivilegeRecordReq& operator=(const GetPrivilegeRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPrivilegeRecordReq& default_instance();

  void Swap(GetPrivilegeRecordReq* other);

  // implements Message ----------------------------------------------

  GetPrivilegeRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPrivilegeRecordReq& from);
  void MergeFrom(const GetPrivilegeRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetPrivilegeRecordReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetPrivilegeRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPrivilegeRecordResp : public ::google::protobuf::Message {
 public:
  GetPrivilegeRecordResp();
  virtual ~GetPrivilegeRecordResp();

  GetPrivilegeRecordResp(const GetPrivilegeRecordResp& from);

  inline GetPrivilegeRecordResp& operator=(const GetPrivilegeRecordResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPrivilegeRecordResp& default_instance();

  void Swap(GetPrivilegeRecordResp* other);

  // implements Message ----------------------------------------------

  GetPrivilegeRecordResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPrivilegeRecordResp& from);
  void MergeFrom(const GetPrivilegeRecordResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoOfficial.PrivilegeRecord records = 1;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 1;
  inline const ::ProtoOfficial::PrivilegeRecord& records(int index) const;
  inline ::ProtoOfficial::PrivilegeRecord* mutable_records(int index);
  inline ::ProtoOfficial::PrivilegeRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PrivilegeRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PrivilegeRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.GetPrivilegeRecordResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PrivilegeRecord > records_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static GetPrivilegeRecordResp* default_instance_;
};
// -------------------------------------------------------------------

class KickOutMemberReq : public ::google::protobuf::Message {
 public:
  KickOutMemberReq();
  virtual ~KickOutMemberReq();

  KickOutMemberReq(const KickOutMemberReq& from);

  inline KickOutMemberReq& operator=(const KickOutMemberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickOutMemberReq& default_instance();

  void Swap(KickOutMemberReq* other);

  // implements Message ----------------------------------------------

  KickOutMemberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickOutMemberReq& from);
  void MergeFrom(const KickOutMemberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoOfficial.eDepartment department = 2;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 2;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // @@protoc_insertion_point(class_scope:ProtoOfficial.KickOutMemberReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static KickOutMemberReq* default_instance_;
};
// -------------------------------------------------------------------

class KickOutMemberResp : public ::google::protobuf::Message {
 public:
  KickOutMemberResp();
  virtual ~KickOutMemberResp();

  KickOutMemberResp(const KickOutMemberResp& from);

  inline KickOutMemberResp& operator=(const KickOutMemberResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickOutMemberResp& default_instance();

  void Swap(KickOutMemberResp* other);

  // implements Message ----------------------------------------------

  KickOutMemberResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickOutMemberResp& from);
  void MergeFrom(const KickOutMemberResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOfficial.eDepartment department = 1;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 1;
  inline ::ProtoOfficial::eDepartment department() const;
  inline void set_department(::ProtoOfficial::eDepartment value);

  // repeated .ProtoOfficial.DepartmentMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::ProtoOfficial::DepartmentMember& members(int index) const;
  inline ::ProtoOfficial::DepartmentMember* mutable_members(int index);
  inline ::ProtoOfficial::DepartmentMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
      mutable_members();

  // repeated .ProtoOfficial.DepartmentRecord records = 3;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 3;
  inline const ::ProtoOfficial::DepartmentRecord& records(int index) const;
  inline ::ProtoOfficial::DepartmentRecord* mutable_records(int index);
  inline ::ProtoOfficial::DepartmentRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoOfficial.KickOutMemberResp)
 private:
  inline void set_has_department();
  inline void clear_has_department();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember > members_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord > records_;
  int department_;
  friend void  protobuf_AddDesc_ProtoOfficial_2eproto();
  friend void protobuf_AssignDesc_ProtoOfficial_2eproto();
  friend void protobuf_ShutdownFile_ProtoOfficial_2eproto();

  void InitAsDefaultInstance();
  static KickOutMemberResp* default_instance_;
};
// ===================================================================


// ===================================================================

// DepartmentRecord

// required uint32 params = 1;
inline bool DepartmentRecord::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepartmentRecord::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepartmentRecord::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepartmentRecord::clear_params() {
  params_ = 0u;
  clear_has_params();
}
inline ::google::protobuf::uint32 DepartmentRecord::params() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.params)
  return params_;
}
inline void DepartmentRecord::set_params(::google::protobuf::uint32 value) {
  set_has_params();
  params_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.params)
}

// required bytes operate = 2;
inline bool DepartmentRecord::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepartmentRecord::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepartmentRecord::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepartmentRecord::clear_operate() {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_->clear();
  }
  clear_has_operate();
}
inline const ::std::string& DepartmentRecord::operate() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.operate)
  return *operate_;
}
inline void DepartmentRecord::set_operate(const ::std::string& value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.operate)
}
inline void DepartmentRecord::set_operate(const char* value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.DepartmentRecord.operate)
}
inline void DepartmentRecord::set_operate(const void* value, size_t size) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.DepartmentRecord.operate)
}
inline ::std::string* DepartmentRecord::mutable_operate() {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.DepartmentRecord.operate)
  return operate_;
}
inline ::std::string* DepartmentRecord::release_operate() {
  clear_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = operate_;
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DepartmentRecord::set_allocated_operate(::std::string* operate) {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operate_;
  }
  if (operate) {
    set_has_operate();
    operate_ = operate;
  } else {
    clear_has_operate();
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.DepartmentRecord.operate)
}

// required bytes target = 3;
inline bool DepartmentRecord::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepartmentRecord::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepartmentRecord::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepartmentRecord::clear_target() {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_->clear();
  }
  clear_has_target();
}
inline const ::std::string& DepartmentRecord::target() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.target)
  return *target_;
}
inline void DepartmentRecord::set_target(const ::std::string& value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.target)
}
inline void DepartmentRecord::set_target(const char* value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.DepartmentRecord.target)
}
inline void DepartmentRecord::set_target(const void* value, size_t size) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.DepartmentRecord.target)
}
inline ::std::string* DepartmentRecord::mutable_target() {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.DepartmentRecord.target)
  return target_;
}
inline ::std::string* DepartmentRecord::release_target() {
  clear_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_;
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DepartmentRecord::set_allocated_target(::std::string* target) {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_;
  }
  if (target) {
    set_has_target();
    target_ = target;
  } else {
    clear_has_target();
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.DepartmentRecord.target)
}

// required uint32 operate_job = 4;
inline bool DepartmentRecord::has_operate_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepartmentRecord::set_has_operate_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DepartmentRecord::clear_has_operate_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DepartmentRecord::clear_operate_job() {
  operate_job_ = 0u;
  clear_has_operate_job();
}
inline ::google::protobuf::uint32 DepartmentRecord::operate_job() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.operate_job)
  return operate_job_;
}
inline void DepartmentRecord::set_operate_job(::google::protobuf::uint32 value) {
  set_has_operate_job();
  operate_job_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.operate_job)
}

// required uint32 target_job = 5;
inline bool DepartmentRecord::has_target_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DepartmentRecord::set_has_target_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DepartmentRecord::clear_has_target_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DepartmentRecord::clear_target_job() {
  target_job_ = 0u;
  clear_has_target_job();
}
inline ::google::protobuf::uint32 DepartmentRecord::target_job() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.target_job)
  return target_job_;
}
inline void DepartmentRecord::set_target_job(::google::protobuf::uint32 value) {
  set_has_target_job();
  target_job_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.target_job)
}

// required uint32 ts = 6;
inline bool DepartmentRecord::has_ts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DepartmentRecord::set_has_ts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DepartmentRecord::clear_has_ts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DepartmentRecord::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 DepartmentRecord::ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.ts)
  return ts_;
}
inline void DepartmentRecord::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.ts)
}

// required uint32 op = 7;
inline bool DepartmentRecord::has_op() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DepartmentRecord::set_has_op() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DepartmentRecord::clear_has_op() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DepartmentRecord::clear_op() {
  op_ = 0u;
  clear_has_op();
}
inline ::google::protobuf::uint32 DepartmentRecord::op() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentRecord.op)
  return op_;
}
inline void DepartmentRecord::set_op(::google::protobuf::uint32 value) {
  set_has_op();
  op_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentRecord.op)
}

// -------------------------------------------------------------------

// PersonnelRecord

// required bytes operate = 1;
inline bool PersonnelRecord::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PersonnelRecord::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PersonnelRecord::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PersonnelRecord::clear_operate() {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_->clear();
  }
  clear_has_operate();
}
inline const ::std::string& PersonnelRecord::operate() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PersonnelRecord.operate)
  return *operate_;
}
inline void PersonnelRecord::set_operate(const ::std::string& value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PersonnelRecord.operate)
}
inline void PersonnelRecord::set_operate(const char* value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PersonnelRecord.operate)
}
inline void PersonnelRecord::set_operate(const void* value, size_t size) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PersonnelRecord.operate)
}
inline ::std::string* PersonnelRecord::mutable_operate() {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PersonnelRecord.operate)
  return operate_;
}
inline ::std::string* PersonnelRecord::release_operate() {
  clear_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = operate_;
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PersonnelRecord::set_allocated_operate(::std::string* operate) {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operate_;
  }
  if (operate) {
    set_has_operate();
    operate_ = operate;
  } else {
    clear_has_operate();
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PersonnelRecord.operate)
}

// required bytes target = 2;
inline bool PersonnelRecord::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PersonnelRecord::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PersonnelRecord::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PersonnelRecord::clear_target() {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_->clear();
  }
  clear_has_target();
}
inline const ::std::string& PersonnelRecord::target() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PersonnelRecord.target)
  return *target_;
}
inline void PersonnelRecord::set_target(const ::std::string& value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PersonnelRecord.target)
}
inline void PersonnelRecord::set_target(const char* value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PersonnelRecord.target)
}
inline void PersonnelRecord::set_target(const void* value, size_t size) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PersonnelRecord.target)
}
inline ::std::string* PersonnelRecord::mutable_target() {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PersonnelRecord.target)
  return target_;
}
inline ::std::string* PersonnelRecord::release_target() {
  clear_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_;
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PersonnelRecord::set_allocated_target(::std::string* target) {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_;
  }
  if (target) {
    set_has_target();
    target_ = target;
  } else {
    clear_has_target();
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PersonnelRecord.target)
}

// required .ProtoOfficial.eDepartment department = 3;
inline bool PersonnelRecord::has_department() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PersonnelRecord::set_has_department() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PersonnelRecord::clear_has_department() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PersonnelRecord::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment PersonnelRecord::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PersonnelRecord.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void PersonnelRecord::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PersonnelRecord.department)
}

// required uint32 official = 4;
inline bool PersonnelRecord::has_official() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PersonnelRecord::set_has_official() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PersonnelRecord::clear_has_official() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PersonnelRecord::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 PersonnelRecord::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PersonnelRecord.official)
  return official_;
}
inline void PersonnelRecord::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PersonnelRecord.official)
}

// required uint32 ts = 5;
inline bool PersonnelRecord::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PersonnelRecord::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PersonnelRecord::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PersonnelRecord::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 PersonnelRecord::ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PersonnelRecord.ts)
  return ts_;
}
inline void PersonnelRecord::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PersonnelRecord.ts)
}

// -------------------------------------------------------------------

// PrivilegeRecord

// required bytes operate = 1;
inline bool PrivilegeRecord::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrivilegeRecord::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrivilegeRecord::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrivilegeRecord::clear_operate() {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_->clear();
  }
  clear_has_operate();
}
inline const ::std::string& PrivilegeRecord::operate() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.operate)
  return *operate_;
}
inline void PrivilegeRecord::set_operate(const ::std::string& value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.operate)
}
inline void PrivilegeRecord::set_operate(const char* value) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PrivilegeRecord.operate)
}
inline void PrivilegeRecord::set_operate(const void* value, size_t size) {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  operate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PrivilegeRecord.operate)
}
inline ::std::string* PrivilegeRecord::mutable_operate() {
  set_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    operate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PrivilegeRecord.operate)
  return operate_;
}
inline ::std::string* PrivilegeRecord::release_operate() {
  clear_has_operate();
  if (operate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = operate_;
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PrivilegeRecord::set_allocated_operate(::std::string* operate) {
  if (operate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operate_;
  }
  if (operate) {
    set_has_operate();
    operate_ = operate;
  } else {
    clear_has_operate();
    operate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PrivilegeRecord.operate)
}

// required bytes target = 2;
inline bool PrivilegeRecord::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrivilegeRecord::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrivilegeRecord::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrivilegeRecord::clear_target() {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_->clear();
  }
  clear_has_target();
}
inline const ::std::string& PrivilegeRecord::target() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.target)
  return *target_;
}
inline void PrivilegeRecord::set_target(const ::std::string& value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.target)
}
inline void PrivilegeRecord::set_target(const char* value) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PrivilegeRecord.target)
}
inline void PrivilegeRecord::set_target(const void* value, size_t size) {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  target_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PrivilegeRecord.target)
}
inline ::std::string* PrivilegeRecord::mutable_target() {
  set_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PrivilegeRecord.target)
  return target_;
}
inline ::std::string* PrivilegeRecord::release_target() {
  clear_has_target();
  if (target_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_;
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PrivilegeRecord::set_allocated_target(::std::string* target) {
  if (target_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_;
  }
  if (target) {
    set_has_target();
    target_ = target;
  } else {
    clear_has_target();
    target_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PrivilegeRecord.target)
}

// required .ProtoOfficial.eDepartment department = 3;
inline bool PrivilegeRecord::has_department() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrivilegeRecord::set_has_department() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrivilegeRecord::clear_has_department() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrivilegeRecord::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment PrivilegeRecord::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void PrivilegeRecord::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.department)
}

// required uint32 official = 4;
inline bool PrivilegeRecord::has_official() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrivilegeRecord::set_has_official() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrivilegeRecord::clear_has_official() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrivilegeRecord::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 PrivilegeRecord::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.official)
  return official_;
}
inline void PrivilegeRecord::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.official)
}

// required uint32 ts = 5;
inline bool PrivilegeRecord::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PrivilegeRecord::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PrivilegeRecord::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PrivilegeRecord::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 PrivilegeRecord::ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.ts)
  return ts_;
}
inline void PrivilegeRecord::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.ts)
}

// required uint32 type = 6;
inline bool PrivilegeRecord::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PrivilegeRecord::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PrivilegeRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PrivilegeRecord::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PrivilegeRecord::type() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.type)
  return type_;
}
inline void PrivilegeRecord::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.type)
}

// required uint32 params = 7;
inline bool PrivilegeRecord::has_params() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PrivilegeRecord::set_has_params() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PrivilegeRecord::clear_has_params() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PrivilegeRecord::clear_params() {
  params_ = 0u;
  clear_has_params();
}
inline ::google::protobuf::uint32 PrivilegeRecord::params() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PrivilegeRecord.params)
  return params_;
}
inline void PrivilegeRecord::set_params(::google::protobuf::uint32 value) {
  set_has_params();
  params_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PrivilegeRecord.params)
}

// -------------------------------------------------------------------

// DepartmentMember

// required uint32 official = 1;
inline bool DepartmentMember::has_official() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepartmentMember::set_has_official() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepartmentMember::clear_has_official() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepartmentMember::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 DepartmentMember::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentMember.official)
  return official_;
}
inline void DepartmentMember::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentMember.official)
}

// required uint32 uid = 2;
inline bool DepartmentMember::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepartmentMember::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepartmentMember::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepartmentMember::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 DepartmentMember::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentMember.uid)
  return uid_;
}
inline void DepartmentMember::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentMember.uid)
}

// required bytes name = 3;
inline bool DepartmentMember::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepartmentMember::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepartmentMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepartmentMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DepartmentMember::name() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentMember.name)
  return *name_;
}
inline void DepartmentMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentMember.name)
}
inline void DepartmentMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.DepartmentMember.name)
}
inline void DepartmentMember::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.DepartmentMember.name)
}
inline ::std::string* DepartmentMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.DepartmentMember.name)
  return name_;
}
inline ::std::string* DepartmentMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DepartmentMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.DepartmentMember.name)
}

// required uint32 lvl = 4;
inline bool DepartmentMember::has_lvl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepartmentMember::set_has_lvl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DepartmentMember::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DepartmentMember::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 DepartmentMember::lvl() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentMember.lvl)
  return lvl_;
}
inline void DepartmentMember::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentMember.lvl)
}

// required bytes head = 5;
inline bool DepartmentMember::has_head() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DepartmentMember::set_has_head() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DepartmentMember::clear_has_head() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DepartmentMember::clear_head() {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_->clear();
  }
  clear_has_head();
}
inline const ::std::string& DepartmentMember::head() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentMember.head)
  return *head_;
}
inline void DepartmentMember::set_head(const ::std::string& value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentMember.head)
}
inline void DepartmentMember::set_head(const char* value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.DepartmentMember.head)
}
inline void DepartmentMember::set_head(const void* value, size_t size) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.DepartmentMember.head)
}
inline ::std::string* DepartmentMember::mutable_head() {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.DepartmentMember.head)
  return head_;
}
inline ::std::string* DepartmentMember::release_head() {
  clear_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = head_;
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DepartmentMember::set_allocated_head(::std::string* head) {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete head_;
  }
  if (head) {
    set_has_head();
    head_ = head;
  } else {
    clear_has_head();
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.DepartmentMember.head)
}

// -------------------------------------------------------------------

// DepartmentLeader

// required .ProtoOfficial.eDepartment type = 1;
inline bool DepartmentLeader::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepartmentLeader::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepartmentLeader::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepartmentLeader::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ProtoOfficial::eDepartment DepartmentLeader::type() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentLeader.type)
  return static_cast< ::ProtoOfficial::eDepartment >(type_);
}
inline void DepartmentLeader::set_type(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentLeader.type)
}

// required .ProtoOfficial.DepartmentMember leader = 2;
inline bool DepartmentLeader::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepartmentLeader::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepartmentLeader::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepartmentLeader::clear_leader() {
  if (leader_ != NULL) leader_->::ProtoOfficial::DepartmentMember::Clear();
  clear_has_leader();
}
inline const ::ProtoOfficial::DepartmentMember& DepartmentLeader::leader() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentLeader.leader)
  return leader_ != NULL ? *leader_ : *default_instance_->leader_;
}
inline ::ProtoOfficial::DepartmentMember* DepartmentLeader::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) leader_ = new ::ProtoOfficial::DepartmentMember;
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.DepartmentLeader.leader)
  return leader_;
}
inline ::ProtoOfficial::DepartmentMember* DepartmentLeader::release_leader() {
  clear_has_leader();
  ::ProtoOfficial::DepartmentMember* temp = leader_;
  leader_ = NULL;
  return temp;
}
inline void DepartmentLeader::set_allocated_leader(::ProtoOfficial::DepartmentMember* leader) {
  delete leader_;
  leader_ = leader;
  if (leader) {
    set_has_leader();
  } else {
    clear_has_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.DepartmentLeader.leader)
}

// required uint32 prestige = 3;
inline bool DepartmentLeader::has_prestige() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepartmentLeader::set_has_prestige() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepartmentLeader::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepartmentLeader::clear_prestige() {
  prestige_ = 0u;
  clear_has_prestige();
}
inline ::google::protobuf::uint32 DepartmentLeader::prestige() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.DepartmentLeader.prestige)
  return prestige_;
}
inline void DepartmentLeader::set_prestige(::google::protobuf::uint32 value) {
  set_has_prestige();
  prestige_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.DepartmentLeader.prestige)
}

// -------------------------------------------------------------------

// PublishToken

// required .ProtoOfficial.eDepartment department = 1;
inline bool PublishToken::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishToken::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishToken::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishToken::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment PublishToken::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void PublishToken::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.department)
}

// required uint32 ts = 2;
inline bool PublishToken::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishToken::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PublishToken::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PublishToken::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 PublishToken::ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.ts)
  return ts_;
}
inline void PublishToken::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.ts)
}

// required uint32 city_id = 3;
inline bool PublishToken::has_city_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishToken::set_has_city_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PublishToken::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PublishToken::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 PublishToken::city_id() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.city_id)
  return city_id_;
}
inline void PublishToken::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.city_id)
}

// required bytes text = 4;
inline bool PublishToken::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PublishToken::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PublishToken::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PublishToken::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& PublishToken::text() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.text)
  return *text_;
}
inline void PublishToken::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.text)
}
inline void PublishToken::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PublishToken.text)
}
inline void PublishToken::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PublishToken.text)
}
inline ::std::string* PublishToken::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PublishToken.text)
  return text_;
}
inline ::std::string* PublishToken::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PublishToken::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PublishToken.text)
}

// required bytes name = 5;
inline bool PublishToken::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PublishToken::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PublishToken::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PublishToken::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PublishToken::name() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.name)
  return *name_;
}
inline void PublishToken::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.name)
}
inline void PublishToken::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PublishToken.name)
}
inline void PublishToken::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PublishToken.name)
}
inline ::std::string* PublishToken::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PublishToken.name)
  return name_;
}
inline ::std::string* PublishToken::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PublishToken::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PublishToken.name)
}

// required uint32 kingdom = 6;
inline bool PublishToken::has_kingdom() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PublishToken::set_has_kingdom() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PublishToken::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PublishToken::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 PublishToken::kingdom() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishToken.kingdom)
  return kingdom_;
}
inline void PublishToken::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishToken.kingdom)
}

// -------------------------------------------------------------------

// OfficialInfoReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool OfficialInfoReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialInfoReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialInfoReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialInfoReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment OfficialInfoReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void OfficialInfoReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.OfficialInfoReq.department)
}

// -------------------------------------------------------------------

// OfficialInfoResp

// repeated .ProtoOfficial.DepartmentLeader leaders = 1;
inline int OfficialInfoResp::leaders_size() const {
  return leaders_.size();
}
inline void OfficialInfoResp::clear_leaders() {
  leaders_.Clear();
}
inline const ::ProtoOfficial::DepartmentLeader& OfficialInfoResp::leaders(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoResp.leaders)
  return leaders_.Get(index);
}
inline ::ProtoOfficial::DepartmentLeader* OfficialInfoResp::mutable_leaders(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.OfficialInfoResp.leaders)
  return leaders_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentLeader* OfficialInfoResp::add_leaders() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.OfficialInfoResp.leaders)
  return leaders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentLeader >&
OfficialInfoResp::leaders() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.OfficialInfoResp.leaders)
  return leaders_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentLeader >*
OfficialInfoResp::mutable_leaders() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.OfficialInfoResp.leaders)
  return &leaders_;
}

// required .ProtoOfficial.eDepartment department = 2;
inline bool OfficialInfoResp::has_department() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialInfoResp::set_has_department() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialInfoResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialInfoResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment OfficialInfoResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void OfficialInfoResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.OfficialInfoResp.department)
}

// repeated .ProtoOfficial.DepartmentMember members = 3;
inline int OfficialInfoResp::members_size() const {
  return members_.size();
}
inline void OfficialInfoResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& OfficialInfoResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* OfficialInfoResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.OfficialInfoResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* OfficialInfoResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.OfficialInfoResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
OfficialInfoResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.OfficialInfoResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
OfficialInfoResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.OfficialInfoResp.members)
  return &members_;
}

// required bytes country_notice = 4;
inline bool OfficialInfoResp::has_country_notice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OfficialInfoResp::set_has_country_notice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OfficialInfoResp::clear_has_country_notice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OfficialInfoResp::clear_country_notice() {
  if (country_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_notice_->clear();
  }
  clear_has_country_notice();
}
inline const ::std::string& OfficialInfoResp::country_notice() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoResp.country_notice)
  return *country_notice_;
}
inline void OfficialInfoResp::set_country_notice(const ::std::string& value) {
  set_has_country_notice();
  if (country_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_notice_ = new ::std::string;
  }
  country_notice_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.OfficialInfoResp.country_notice)
}
inline void OfficialInfoResp::set_country_notice(const char* value) {
  set_has_country_notice();
  if (country_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_notice_ = new ::std::string;
  }
  country_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.OfficialInfoResp.country_notice)
}
inline void OfficialInfoResp::set_country_notice(const void* value, size_t size) {
  set_has_country_notice();
  if (country_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_notice_ = new ::std::string;
  }
  country_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.OfficialInfoResp.country_notice)
}
inline ::std::string* OfficialInfoResp::mutable_country_notice() {
  set_has_country_notice();
  if (country_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.OfficialInfoResp.country_notice)
  return country_notice_;
}
inline ::std::string* OfficialInfoResp::release_country_notice() {
  clear_has_country_notice();
  if (country_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_notice_;
    country_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialInfoResp::set_allocated_country_notice(::std::string* country_notice) {
  if (country_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_notice_;
  }
  if (country_notice) {
    set_has_country_notice();
    country_notice_ = country_notice;
  } else {
    clear_has_country_notice();
    country_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.OfficialInfoResp.country_notice)
}

// required bytes depart_notice = 5;
inline bool OfficialInfoResp::has_depart_notice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OfficialInfoResp::set_has_depart_notice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OfficialInfoResp::clear_has_depart_notice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OfficialInfoResp::clear_depart_notice() {
  if (depart_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    depart_notice_->clear();
  }
  clear_has_depart_notice();
}
inline const ::std::string& OfficialInfoResp::depart_notice() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.OfficialInfoResp.depart_notice)
  return *depart_notice_;
}
inline void OfficialInfoResp::set_depart_notice(const ::std::string& value) {
  set_has_depart_notice();
  if (depart_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    depart_notice_ = new ::std::string;
  }
  depart_notice_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.OfficialInfoResp.depart_notice)
}
inline void OfficialInfoResp::set_depart_notice(const char* value) {
  set_has_depart_notice();
  if (depart_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    depart_notice_ = new ::std::string;
  }
  depart_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.OfficialInfoResp.depart_notice)
}
inline void OfficialInfoResp::set_depart_notice(const void* value, size_t size) {
  set_has_depart_notice();
  if (depart_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    depart_notice_ = new ::std::string;
  }
  depart_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.OfficialInfoResp.depart_notice)
}
inline ::std::string* OfficialInfoResp::mutable_depart_notice() {
  set_has_depart_notice();
  if (depart_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    depart_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.OfficialInfoResp.depart_notice)
  return depart_notice_;
}
inline ::std::string* OfficialInfoResp::release_depart_notice() {
  clear_has_depart_notice();
  if (depart_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = depart_notice_;
    depart_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialInfoResp::set_allocated_depart_notice(::std::string* depart_notice) {
  if (depart_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete depart_notice_;
  }
  if (depart_notice) {
    set_has_depart_notice();
    depart_notice_ = depart_notice;
  } else {
    clear_has_depart_notice();
    depart_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.OfficialInfoResp.depart_notice)
}

// -------------------------------------------------------------------

// PushJobChangeMsg

// required .ProtoOfficial.eDepartment origin_depart = 1;
inline bool PushJobChangeMsg::has_origin_depart() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushJobChangeMsg::set_has_origin_depart() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushJobChangeMsg::clear_has_origin_depart() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushJobChangeMsg::clear_origin_depart() {
  origin_depart_ = 0;
  clear_has_origin_depart();
}
inline ::ProtoOfficial::eDepartment PushJobChangeMsg::origin_depart() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PushJobChangeMsg.origin_depart)
  return static_cast< ::ProtoOfficial::eDepartment >(origin_depart_);
}
inline void PushJobChangeMsg::set_origin_depart(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_origin_depart();
  origin_depart_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PushJobChangeMsg.origin_depart)
}

// required int32 origin_job = 2;
inline bool PushJobChangeMsg::has_origin_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushJobChangeMsg::set_has_origin_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushJobChangeMsg::clear_has_origin_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushJobChangeMsg::clear_origin_job() {
  origin_job_ = 0;
  clear_has_origin_job();
}
inline ::google::protobuf::int32 PushJobChangeMsg::origin_job() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PushJobChangeMsg.origin_job)
  return origin_job_;
}
inline void PushJobChangeMsg::set_origin_job(::google::protobuf::int32 value) {
  set_has_origin_job();
  origin_job_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PushJobChangeMsg.origin_job)
}

// required .ProtoOfficial.eDepartment target_depart = 3;
inline bool PushJobChangeMsg::has_target_depart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushJobChangeMsg::set_has_target_depart() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushJobChangeMsg::clear_has_target_depart() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushJobChangeMsg::clear_target_depart() {
  target_depart_ = 0;
  clear_has_target_depart();
}
inline ::ProtoOfficial::eDepartment PushJobChangeMsg::target_depart() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PushJobChangeMsg.target_depart)
  return static_cast< ::ProtoOfficial::eDepartment >(target_depart_);
}
inline void PushJobChangeMsg::set_target_depart(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_target_depart();
  target_depart_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PushJobChangeMsg.target_depart)
}

// required int32 target_job = 4;
inline bool PushJobChangeMsg::has_target_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushJobChangeMsg::set_has_target_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushJobChangeMsg::clear_has_target_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushJobChangeMsg::clear_target_job() {
  target_job_ = 0;
  clear_has_target_job();
}
inline ::google::protobuf::int32 PushJobChangeMsg::target_job() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PushJobChangeMsg.target_job)
  return target_job_;
}
inline void PushJobChangeMsg::set_target_job(::google::protobuf::int32 value) {
  set_has_target_job();
  target_job_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PushJobChangeMsg.target_job)
}

// -------------------------------------------------------------------

// ChallengeReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool ChallengeReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ChallengeReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ChallengeReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeReq.department)
}

// required uint32 official = 2;
inline bool ChallengeReq::has_official() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeReq::set_has_official() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeReq::clear_has_official() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeReq::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 ChallengeReq::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeReq.official)
  return official_;
}
inline void ChallengeReq::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeReq.official)
}

// -------------------------------------------------------------------

// ChallengeResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool ChallengeResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ChallengeResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ChallengeResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeResp.department)
}

// required uint32 official = 2;
inline bool ChallengeResp::has_official() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeResp::set_has_official() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeResp::clear_has_official() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeResp::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 ChallengeResp::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeResp.official)
  return official_;
}
inline void ChallengeResp::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeResp.official)
}

// repeated uint32 hero_ids = 3;
inline int ChallengeResp::hero_ids_size() const {
  return hero_ids_.size();
}
inline void ChallengeResp::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 ChallengeResp::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeResp.hero_ids)
  return hero_ids_.Get(index);
}
inline void ChallengeResp::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeResp.hero_ids)
}
inline void ChallengeResp::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.ChallengeResp.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChallengeResp::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ChallengeResp.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChallengeResp::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ChallengeResp.hero_ids)
  return &hero_ids_;
}

// repeated uint32 hero_lvl = 4;
inline int ChallengeResp::hero_lvl_size() const {
  return hero_lvl_.size();
}
inline void ChallengeResp::clear_hero_lvl() {
  hero_lvl_.Clear();
}
inline ::google::protobuf::uint32 ChallengeResp::hero_lvl(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeResp.hero_lvl)
  return hero_lvl_.Get(index);
}
inline void ChallengeResp::set_hero_lvl(int index, ::google::protobuf::uint32 value) {
  hero_lvl_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeResp.hero_lvl)
}
inline void ChallengeResp::add_hero_lvl(::google::protobuf::uint32 value) {
  hero_lvl_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.ChallengeResp.hero_lvl)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChallengeResp::hero_lvl() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ChallengeResp.hero_lvl)
  return hero_lvl_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChallengeResp::mutable_hero_lvl() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ChallengeResp.hero_lvl)
  return &hero_lvl_;
}

// repeated uint32 hero_troops = 5;
inline int ChallengeResp::hero_troops_size() const {
  return hero_troops_.size();
}
inline void ChallengeResp::clear_hero_troops() {
  hero_troops_.Clear();
}
inline ::google::protobuf::uint32 ChallengeResp::hero_troops(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ChallengeResp.hero_troops)
  return hero_troops_.Get(index);
}
inline void ChallengeResp::set_hero_troops(int index, ::google::protobuf::uint32 value) {
  hero_troops_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.ChallengeResp.hero_troops)
}
inline void ChallengeResp::add_hero_troops(::google::protobuf::uint32 value) {
  hero_troops_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.ChallengeResp.hero_troops)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChallengeResp::hero_troops() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ChallengeResp.hero_troops)
  return hero_troops_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChallengeResp::mutable_hero_troops() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ChallengeResp.hero_troops)
  return &hero_troops_;
}

// -------------------------------------------------------------------

// StartChallengeReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool StartChallengeReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartChallengeReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartChallengeReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartChallengeReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment StartChallengeReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.StartChallengeReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void StartChallengeReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.StartChallengeReq.department)
}

// required uint32 official = 2;
inline bool StartChallengeReq::has_official() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartChallengeReq::set_has_official() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartChallengeReq::clear_has_official() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartChallengeReq::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 StartChallengeReq::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.StartChallengeReq.official)
  return official_;
}
inline void StartChallengeReq::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.StartChallengeReq.official)
}

// repeated uint32 hero_ids = 3;
inline int StartChallengeReq::hero_ids_size() const {
  return hero_ids_.size();
}
inline void StartChallengeReq::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 StartChallengeReq::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.StartChallengeReq.hero_ids)
  return hero_ids_.Get(index);
}
inline void StartChallengeReq::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.StartChallengeReq.hero_ids)
}
inline void StartChallengeReq::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.StartChallengeReq.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartChallengeReq::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.StartChallengeReq.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartChallengeReq::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.StartChallengeReq.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// AppointDeputyReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool AppointDeputyReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppointDeputyReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppointDeputyReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppointDeputyReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment AppointDeputyReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void AppointDeputyReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyReq.department)
}

// required uint32 uid = 2;
inline bool AppointDeputyReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppointDeputyReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppointDeputyReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppointDeputyReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AppointDeputyReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyReq.uid)
  return uid_;
}
inline void AppointDeputyReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyReq.uid)
}

// -------------------------------------------------------------------

// AppointDeputyResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool AppointDeputyResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppointDeputyResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppointDeputyResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppointDeputyResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment AppointDeputyResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void AppointDeputyResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyResp.department)
}

// required uint32 uid = 2;
inline bool AppointDeputyResp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppointDeputyResp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppointDeputyResp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppointDeputyResp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AppointDeputyResp::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.uid)
  return uid_;
}
inline void AppointDeputyResp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyResp.uid)
}

// required uint32 origin = 3;
inline bool AppointDeputyResp::has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppointDeputyResp::set_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppointDeputyResp::clear_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppointDeputyResp::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
inline ::google::protobuf::uint32 AppointDeputyResp::origin() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.origin)
  return origin_;
}
inline void AppointDeputyResp::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyResp.origin)
}

// required uint32 target = 4;
inline bool AppointDeputyResp::has_target() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppointDeputyResp::set_has_target() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppointDeputyResp::clear_has_target() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppointDeputyResp::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 AppointDeputyResp::target() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.target)
  return target_;
}
inline void AppointDeputyResp::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyResp.target)
}

// required bytes name = 5;
inline bool AppointDeputyResp::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppointDeputyResp::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppointDeputyResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppointDeputyResp::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AppointDeputyResp::name() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.name)
  return *name_;
}
inline void AppointDeputyResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.AppointDeputyResp.name)
}
inline void AppointDeputyResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.AppointDeputyResp.name)
}
inline void AppointDeputyResp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.AppointDeputyResp.name)
}
inline ::std::string* AppointDeputyResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.AppointDeputyResp.name)
  return name_;
}
inline ::std::string* AppointDeputyResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppointDeputyResp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.AppointDeputyResp.name)
}

// repeated .ProtoOfficial.DepartmentMember members = 6;
inline int AppointDeputyResp::members_size() const {
  return members_.size();
}
inline void AppointDeputyResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& AppointDeputyResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* AppointDeputyResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.AppointDeputyResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* AppointDeputyResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.AppointDeputyResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
AppointDeputyResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.AppointDeputyResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
AppointDeputyResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.AppointDeputyResp.members)
  return &members_;
}

// repeated .ProtoOfficial.DepartmentRecord records = 7;
inline int AppointDeputyResp::records_size() const {
  return records_.size();
}
inline void AppointDeputyResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& AppointDeputyResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AppointDeputyResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* AppointDeputyResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.AppointDeputyResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* AppointDeputyResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.AppointDeputyResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
AppointDeputyResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.AppointDeputyResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
AppointDeputyResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.AppointDeputyResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// ApplyJoinReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool ApplyJoinReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ApplyJoinReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyJoinReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ApplyJoinReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyJoinReq.department)
}

// -------------------------------------------------------------------

// ApplyJoinResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool ApplyJoinResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ApplyJoinResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyJoinResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ApplyJoinResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyJoinResp.department)
}

// repeated .ProtoOfficial.DepartmentMember members = 2;
inline int ApplyJoinResp::members_size() const {
  return members_.size();
}
inline void ApplyJoinResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& ApplyJoinResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyJoinResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* ApplyJoinResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.ApplyJoinResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* ApplyJoinResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.ApplyJoinResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
ApplyJoinResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ApplyJoinResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
ApplyJoinResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ApplyJoinResp.members)
  return &members_;
}

// repeated .ProtoOfficial.DepartmentRecord records = 3;
inline int ApplyJoinResp::records_size() const {
  return records_.size();
}
inline void ApplyJoinResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& ApplyJoinResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyJoinResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* ApplyJoinResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.ApplyJoinResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* ApplyJoinResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.ApplyJoinResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
ApplyJoinResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ApplyJoinResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
ApplyJoinResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ApplyJoinResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// ApplyExitReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool ApplyExitReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyExitReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyExitReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyExitReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ApplyExitReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyExitReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ApplyExitReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyExitReq.department)
}

// -------------------------------------------------------------------

// ApplyExitResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool ApplyExitResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyExitResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyExitResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyExitResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment ApplyExitResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyExitResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void ApplyExitResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyExitResp.department)
}

// required uint32 official = 2;
inline bool ApplyExitResp::has_official() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyExitResp::set_has_official() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyExitResp::clear_has_official() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyExitResp::clear_official() {
  official_ = 0u;
  clear_has_official();
}
inline ::google::protobuf::uint32 ApplyExitResp::official() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyExitResp.official)
  return official_;
}
inline void ApplyExitResp::set_official(::google::protobuf::uint32 value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyExitResp.official)
}

// required uint32 prestige = 3;
inline bool ApplyExitResp::has_prestige() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyExitResp::set_has_prestige() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApplyExitResp::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApplyExitResp::clear_prestige() {
  prestige_ = 0u;
  clear_has_prestige();
}
inline ::google::protobuf::uint32 ApplyExitResp::prestige() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyExitResp.prestige)
  return prestige_;
}
inline void ApplyExitResp::set_prestige(::google::protobuf::uint32 value) {
  set_has_prestige();
  prestige_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.ApplyExitResp.prestige)
}

// repeated .ProtoOfficial.DepartmentMember members = 4;
inline int ApplyExitResp::members_size() const {
  return members_.size();
}
inline void ApplyExitResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& ApplyExitResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.ApplyExitResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* ApplyExitResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.ApplyExitResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* ApplyExitResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.ApplyExitResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
ApplyExitResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.ApplyExitResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
ApplyExitResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.ApplyExitResp.members)
  return &members_;
}

// -------------------------------------------------------------------

// AgreeJoinReq

// required uint32 uid = 1;
inline bool AgreeJoinReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgreeJoinReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgreeJoinReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgreeJoinReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AgreeJoinReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AgreeJoinReq.uid)
  return uid_;
}
inline void AgreeJoinReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AgreeJoinReq.uid)
}

// required .ProtoOfficial.eDepartment department = 2;
inline bool AgreeJoinReq::has_department() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgreeJoinReq::set_has_department() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgreeJoinReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgreeJoinReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment AgreeJoinReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AgreeJoinReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void AgreeJoinReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AgreeJoinReq.department)
}

// -------------------------------------------------------------------

// AgreeJoinResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool AgreeJoinResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgreeJoinResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgreeJoinResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgreeJoinResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment AgreeJoinResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AgreeJoinResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void AgreeJoinResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.AgreeJoinResp.department)
}

// repeated .ProtoOfficial.DepartmentMember members = 2;
inline int AgreeJoinResp::members_size() const {
  return members_.size();
}
inline void AgreeJoinResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& AgreeJoinResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AgreeJoinResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* AgreeJoinResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.AgreeJoinResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* AgreeJoinResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.AgreeJoinResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
AgreeJoinResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.AgreeJoinResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
AgreeJoinResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.AgreeJoinResp.members)
  return &members_;
}

// repeated .ProtoOfficial.DepartmentRecord records = 3;
inline int AgreeJoinResp::records_size() const {
  return records_.size();
}
inline void AgreeJoinResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& AgreeJoinResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.AgreeJoinResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* AgreeJoinResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.AgreeJoinResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* AgreeJoinResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.AgreeJoinResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
AgreeJoinResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.AgreeJoinResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
AgreeJoinResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.AgreeJoinResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// RefuseJoinReq

// required uint32 uid = 1;
inline bool RefuseJoinReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefuseJoinReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefuseJoinReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefuseJoinReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RefuseJoinReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RefuseJoinReq.uid)
  return uid_;
}
inline void RefuseJoinReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.RefuseJoinReq.uid)
}

// required .ProtoOfficial.eDepartment department = 2;
inline bool RefuseJoinReq::has_department() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefuseJoinReq::set_has_department() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefuseJoinReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefuseJoinReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment RefuseJoinReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RefuseJoinReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void RefuseJoinReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.RefuseJoinReq.department)
}

// -------------------------------------------------------------------

// RefuseJoinResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool RefuseJoinResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefuseJoinResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefuseJoinResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefuseJoinResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment RefuseJoinResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RefuseJoinResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void RefuseJoinResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.RefuseJoinResp.department)
}

// repeated .ProtoOfficial.DepartmentRecord records = 2;
inline int RefuseJoinResp::records_size() const {
  return records_.size();
}
inline void RefuseJoinResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& RefuseJoinResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RefuseJoinResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* RefuseJoinResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.RefuseJoinResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* RefuseJoinResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.RefuseJoinResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
RefuseJoinResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.RefuseJoinResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
RefuseJoinResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.RefuseJoinResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// SetNoticeReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool SetNoticeReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetNoticeReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetNoticeReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetNoticeReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment SetNoticeReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.SetNoticeReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void SetNoticeReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.SetNoticeReq.department)
}

// required bytes text = 2;
inline bool SetNoticeReq::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetNoticeReq::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetNoticeReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetNoticeReq::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& SetNoticeReq::text() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.SetNoticeReq.text)
  return *text_;
}
inline void SetNoticeReq::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.SetNoticeReq.text)
}
inline void SetNoticeReq::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.SetNoticeReq.text)
}
inline void SetNoticeReq::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.SetNoticeReq.text)
}
inline ::std::string* SetNoticeReq::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.SetNoticeReq.text)
  return text_;
}
inline ::std::string* SetNoticeReq::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetNoticeReq::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.SetNoticeReq.text)
}

// -------------------------------------------------------------------

// GetSalaryReq

// -------------------------------------------------------------------

// GetSalaryResp

// required uint32 salary = 1;
inline bool GetSalaryResp::has_salary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSalaryResp::set_has_salary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSalaryResp::clear_has_salary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSalaryResp::clear_salary() {
  salary_ = 0u;
  clear_has_salary();
}
inline ::google::protobuf::uint32 GetSalaryResp::salary() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetSalaryResp.salary)
  return salary_;
}
inline void GetSalaryResp::set_salary(::google::protobuf::uint32 value) {
  set_has_salary();
  salary_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.GetSalaryResp.salary)
}

// required uint32 coins = 2;
inline bool GetSalaryResp::has_coins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSalaryResp::set_has_coins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSalaryResp::clear_has_coins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSalaryResp::clear_coins() {
  coins_ = 0u;
  clear_has_coins();
}
inline ::google::protobuf::uint32 GetSalaryResp::coins() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetSalaryResp.coins)
  return coins_;
}
inline void GetSalaryResp::set_coins(::google::protobuf::uint32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.GetSalaryResp.coins)
}

// required uint32 job_reward_ts = 3;
inline bool GetSalaryResp::has_job_reward_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSalaryResp::set_has_job_reward_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSalaryResp::clear_has_job_reward_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSalaryResp::clear_job_reward_ts() {
  job_reward_ts_ = 0u;
  clear_has_job_reward_ts();
}
inline ::google::protobuf::uint32 GetSalaryResp::job_reward_ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetSalaryResp.job_reward_ts)
  return job_reward_ts_;
}
inline void GetSalaryResp::set_job_reward_ts(::google::protobuf::uint32 value) {
  set_has_job_reward_ts();
  job_reward_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.GetSalaryResp.job_reward_ts)
}

// -------------------------------------------------------------------

// GetDepartmentRecordReq

// required .ProtoOfficial.eDepartment department = 1;
inline bool GetDepartmentRecordReq::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDepartmentRecordReq::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDepartmentRecordReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDepartmentRecordReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment GetDepartmentRecordReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetDepartmentRecordReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void GetDepartmentRecordReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.GetDepartmentRecordReq.department)
}

// -------------------------------------------------------------------

// GetDepartmentRecordResp

// repeated .ProtoOfficial.DepartmentRecord records = 1;
inline int GetDepartmentRecordResp::records_size() const {
  return records_.size();
}
inline void GetDepartmentRecordResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& GetDepartmentRecordResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetDepartmentRecordResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* GetDepartmentRecordResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.GetDepartmentRecordResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* GetDepartmentRecordResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.GetDepartmentRecordResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
GetDepartmentRecordResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.GetDepartmentRecordResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
GetDepartmentRecordResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.GetDepartmentRecordResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// PublishTokenReq

// required uint32 city_id = 1;
inline bool PublishTokenReq::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishTokenReq::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishTokenReq::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishTokenReq::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 PublishTokenReq::city_id() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishTokenReq.city_id)
  return city_id_;
}
inline void PublishTokenReq::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishTokenReq.city_id)
}

// required bytes text = 2;
inline bool PublishTokenReq::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishTokenReq::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PublishTokenReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PublishTokenReq::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& PublishTokenReq::text() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishTokenReq.text)
  return *text_;
}
inline void PublishTokenReq::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishTokenReq.text)
}
inline void PublishTokenReq::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOfficial.PublishTokenReq.text)
}
inline void PublishTokenReq::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOfficial.PublishTokenReq.text)
}
inline ::std::string* PublishTokenReq::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PublishTokenReq.text)
  return text_;
}
inline ::std::string* PublishTokenReq::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PublishTokenReq::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PublishTokenReq.text)
}

// required .ProtoOfficial.eDepartment department = 3;
inline bool PublishTokenReq::has_department() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishTokenReq::set_has_department() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PublishTokenReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PublishTokenReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment PublishTokenReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PublishTokenReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void PublishTokenReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.PublishTokenReq.department)
}

// -------------------------------------------------------------------

// PushPublishToken

// required .ProtoOfficial.PublishToken token = 1;
inline bool PushPublishToken::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushPublishToken::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushPublishToken::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushPublishToken::clear_token() {
  if (token_ != NULL) token_->::ProtoOfficial::PublishToken::Clear();
  clear_has_token();
}
inline const ::ProtoOfficial::PublishToken& PushPublishToken::token() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.PushPublishToken.token)
  return token_ != NULL ? *token_ : *default_instance_->token_;
}
inline ::ProtoOfficial::PublishToken* PushPublishToken::mutable_token() {
  set_has_token();
  if (token_ == NULL) token_ = new ::ProtoOfficial::PublishToken;
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.PushPublishToken.token)
  return token_;
}
inline ::ProtoOfficial::PublishToken* PushPublishToken::release_token() {
  clear_has_token();
  ::ProtoOfficial::PublishToken* temp = token_;
  token_ = NULL;
  return temp;
}
inline void PushPublishToken::set_allocated_token(::ProtoOfficial::PublishToken* token) {
  delete token_;
  token_ = token;
  if (token) {
    set_has_token();
  } else {
    clear_has_token();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOfficial.PushPublishToken.token)
}

// -------------------------------------------------------------------

// RespondTokenReq

// repeated uint32 hero_ids = 1;
inline int RespondTokenReq::hero_ids_size() const {
  return hero_ids_.size();
}
inline void RespondTokenReq::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 RespondTokenReq::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RespondTokenReq.hero_ids)
  return hero_ids_.Get(index);
}
inline void RespondTokenReq::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.RespondTokenReq.hero_ids)
}
inline void RespondTokenReq::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.RespondTokenReq.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RespondTokenReq::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.RespondTokenReq.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RespondTokenReq::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.RespondTokenReq.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// RespondTokenResp

// repeated uint32 hero_ids = 1;
inline int RespondTokenResp::hero_ids_size() const {
  return hero_ids_.size();
}
inline void RespondTokenResp::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 RespondTokenResp::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RespondTokenResp.hero_ids)
  return hero_ids_.Get(index);
}
inline void RespondTokenResp::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoOfficial.RespondTokenResp.hero_ids)
}
inline void RespondTokenResp::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoOfficial.RespondTokenResp.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RespondTokenResp::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.RespondTokenResp.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RespondTokenResp::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.RespondTokenResp.hero_ids)
  return &hero_ids_;
}

// required uint32 token_ts = 2;
inline bool RespondTokenResp::has_token_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RespondTokenResp::set_has_token_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RespondTokenResp::clear_has_token_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RespondTokenResp::clear_token_ts() {
  token_ts_ = 0u;
  clear_has_token_ts();
}
inline ::google::protobuf::uint32 RespondTokenResp::token_ts() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.RespondTokenResp.token_ts)
  return token_ts_;
}
inline void RespondTokenResp::set_token_ts(::google::protobuf::uint32 value) {
  set_has_token_ts();
  token_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.RespondTokenResp.token_ts)
}

// -------------------------------------------------------------------

// GetPersonnelRecordReq

// -------------------------------------------------------------------

// GetPersonnelRecordResp

// repeated .ProtoOfficial.PersonnelRecord records = 1;
inline int GetPersonnelRecordResp::records_size() const {
  return records_.size();
}
inline void GetPersonnelRecordResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::PersonnelRecord& GetPersonnelRecordResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetPersonnelRecordResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::PersonnelRecord* GetPersonnelRecordResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.GetPersonnelRecordResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::PersonnelRecord* GetPersonnelRecordResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.GetPersonnelRecordResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PersonnelRecord >&
GetPersonnelRecordResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.GetPersonnelRecordResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PersonnelRecord >*
GetPersonnelRecordResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.GetPersonnelRecordResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// GetPrivilegeRecordReq

// -------------------------------------------------------------------

// GetPrivilegeRecordResp

// repeated .ProtoOfficial.PrivilegeRecord records = 1;
inline int GetPrivilegeRecordResp::records_size() const {
  return records_.size();
}
inline void GetPrivilegeRecordResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::PrivilegeRecord& GetPrivilegeRecordResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.GetPrivilegeRecordResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::PrivilegeRecord* GetPrivilegeRecordResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.GetPrivilegeRecordResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::PrivilegeRecord* GetPrivilegeRecordResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.GetPrivilegeRecordResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PrivilegeRecord >&
GetPrivilegeRecordResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.GetPrivilegeRecordResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::PrivilegeRecord >*
GetPrivilegeRecordResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.GetPrivilegeRecordResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// KickOutMemberReq

// required uint32 uid = 1;
inline bool KickOutMemberReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickOutMemberReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickOutMemberReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickOutMemberReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 KickOutMemberReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.KickOutMemberReq.uid)
  return uid_;
}
inline void KickOutMemberReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.KickOutMemberReq.uid)
}

// required .ProtoOfficial.eDepartment department = 2;
inline bool KickOutMemberReq::has_department() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickOutMemberReq::set_has_department() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickOutMemberReq::clear_has_department() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickOutMemberReq::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment KickOutMemberReq::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.KickOutMemberReq.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void KickOutMemberReq::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.KickOutMemberReq.department)
}

// -------------------------------------------------------------------

// KickOutMemberResp

// required .ProtoOfficial.eDepartment department = 1;
inline bool KickOutMemberResp::has_department() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickOutMemberResp::set_has_department() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickOutMemberResp::clear_has_department() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickOutMemberResp::clear_department() {
  department_ = 0;
  clear_has_department();
}
inline ::ProtoOfficial::eDepartment KickOutMemberResp::department() const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.KickOutMemberResp.department)
  return static_cast< ::ProtoOfficial::eDepartment >(department_);
}
inline void KickOutMemberResp::set_department(::ProtoOfficial::eDepartment value) {
  assert(::ProtoOfficial::eDepartment_IsValid(value));
  set_has_department();
  department_ = value;
  // @@protoc_insertion_point(field_set:ProtoOfficial.KickOutMemberResp.department)
}

// repeated .ProtoOfficial.DepartmentMember members = 2;
inline int KickOutMemberResp::members_size() const {
  return members_.size();
}
inline void KickOutMemberResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoOfficial::DepartmentMember& KickOutMemberResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.KickOutMemberResp.members)
  return members_.Get(index);
}
inline ::ProtoOfficial::DepartmentMember* KickOutMemberResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.KickOutMemberResp.members)
  return members_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentMember* KickOutMemberResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.KickOutMemberResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >&
KickOutMemberResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.KickOutMemberResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentMember >*
KickOutMemberResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.KickOutMemberResp.members)
  return &members_;
}

// repeated .ProtoOfficial.DepartmentRecord records = 3;
inline int KickOutMemberResp::records_size() const {
  return records_.size();
}
inline void KickOutMemberResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoOfficial::DepartmentRecord& KickOutMemberResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOfficial.KickOutMemberResp.records)
  return records_.Get(index);
}
inline ::ProtoOfficial::DepartmentRecord* KickOutMemberResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOfficial.KickOutMemberResp.records)
  return records_.Mutable(index);
}
inline ::ProtoOfficial::DepartmentRecord* KickOutMemberResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoOfficial.KickOutMemberResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >&
KickOutMemberResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoOfficial.KickOutMemberResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOfficial::DepartmentRecord >*
KickOutMemberResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOfficial.KickOutMemberResp.records)
  return &records_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoOfficial

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtoOfficial::eDepartment> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOfficial::eDepartment>() {
  return ::ProtoOfficial::eDepartment_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoOfficial_2eproto__INCLUDED
