// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoActivity.proto

#ifndef PROTOBUF_ProtoActivity_2eproto__INCLUDED
#define PROTOBUF_ProtoActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoActivity_2eproto();
void protobuf_AssignDesc_ProtoActivity_2eproto();
void protobuf_ShutdownFile_ProtoActivity_2eproto();

class LimitShopItem;
class LimitShopBuyReq;
class LimitShopBuyResp;
class LimitShopUserInfoReq;
class LimitShopUserInfoResp;
class CashBackItem;
class CashBackInfoReq;
class CashBackInfoResp;
class CashBackRewardReq;
class CashBackRewardResp;
class PassActivityItem;
class PassActivityRecord;
class PassActivityInfoReq;
class PassActivityInfoResp;
class PassActivityRewardReq;
class PassActivityRewardResp;
class SmeltItem;
class SmeltInfoReq;
class SmeltInfoResp;
class SmeltRewardReq;
class SmeltRewardResp;
class TouchGoldTombItem;
class TouchGoldInfo;
class TouchGoldInfoReq;
class TouchGoldOnceReq;
class TouchGoldAllReq;
class TouchGoldUnlockReq;
class TouchGoldResp;
class TouchGoldResetReq;
class TouchGoldSwitchReq;
class HugeDiscountItem;
class HugeDiscountPage;
class HugeDiscountInfoReq;
class HugeDiscountInfoResp;
class HugeDiscountBuyReq;
class HugeDiscountBuyResp;
class OpenLittleChargeWindowReq;
class OpenLittleChargeWindowResp;
class LittleChargeRewardReq;
class LittleChargeRewardResp;
class OpenEnlivenKillWindowReq;
class OpenEnlivenKillWindowResp;
class ReceiveDailyKillRewardReq;
class ReceiveDailyKillRewardResp;
class SellComponentCPP;
class OpenSellComponentWindowReq;
class OpenSellComponentWindowResp;
class BuyComponentReq;
class BuyComponentResp;

// ===================================================================

class LimitShopItem : public ::google::protobuf::Message {
 public:
  LimitShopItem();
  virtual ~LimitShopItem();

  LimitShopItem(const LimitShopItem& from);

  inline LimitShopItem& operator=(const LimitShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopItem& default_instance();

  void Swap(LimitShopItem* other);

  // implements Message ----------------------------------------------

  LimitShopItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopItem& from);
  void MergeFrom(const LimitShopItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 buy_cnt = 2;
  inline bool has_buy_cnt() const;
  inline void clear_buy_cnt();
  static const int kBuyCntFieldNumber = 2;
  inline ::google::protobuf::uint32 buy_cnt() const;
  inline void set_buy_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.LimitShopItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buy_cnt();
  inline void clear_has_buy_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 buy_cnt_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitShopItem* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopBuyReq : public ::google::protobuf::Message {
 public:
  LimitShopBuyReq();
  virtual ~LimitShopBuyReq();

  LimitShopBuyReq(const LimitShopBuyReq& from);

  inline LimitShopBuyReq& operator=(const LimitShopBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopBuyReq& default_instance();

  void Swap(LimitShopBuyReq* other);

  // implements Message ----------------------------------------------

  LimitShopBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopBuyReq& from);
  void MergeFrom(const LimitShopBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.LimitShopBuyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitShopBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopBuyResp : public ::google::protobuf::Message {
 public:
  LimitShopBuyResp();
  virtual ~LimitShopBuyResp();

  LimitShopBuyResp(const LimitShopBuyResp& from);

  inline LimitShopBuyResp& operator=(const LimitShopBuyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopBuyResp& default_instance();

  void Swap(LimitShopBuyResp* other);

  // implements Message ----------------------------------------------

  LimitShopBuyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopBuyResp& from);
  void MergeFrom(const LimitShopBuyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 buy_cnt = 3;
  inline bool has_buy_cnt() const;
  inline void clear_buy_cnt();
  static const int kBuyCntFieldNumber = 3;
  inline ::google::protobuf::uint32 buy_cnt() const;
  inline void set_buy_cnt(::google::protobuf::uint32 value);

  // required .DataCommon.EquipmentAllCPP equip = 4;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 4;
  inline const ::DataCommon::EquipmentAllCPP& equip() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equip();
  inline ::DataCommon::EquipmentAllCPP* release_equip();
  inline void set_allocated_equip(::DataCommon::EquipmentAllCPP* equip);

  // @@protoc_insertion_point(class_scope:ProtoActivity.LimitShopBuyResp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_buy_cnt();
  inline void clear_has_buy_cnt();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cash_;
  ::DataCommon::EquipmentAllCPP* equip_;
  ::google::protobuf::uint32 buy_cnt_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitShopBuyResp* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopUserInfoReq : public ::google::protobuf::Message {
 public:
  LimitShopUserInfoReq();
  virtual ~LimitShopUserInfoReq();

  LimitShopUserInfoReq(const LimitShopUserInfoReq& from);

  inline LimitShopUserInfoReq& operator=(const LimitShopUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopUserInfoReq& default_instance();

  void Swap(LimitShopUserInfoReq* other);

  // implements Message ----------------------------------------------

  LimitShopUserInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopUserInfoReq& from);
  void MergeFrom(const LimitShopUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.LimitShopUserInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitShopUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopUserInfoResp : public ::google::protobuf::Message {
 public:
  LimitShopUserInfoResp();
  virtual ~LimitShopUserInfoResp();

  LimitShopUserInfoResp(const LimitShopUserInfoResp& from);

  inline LimitShopUserInfoResp& operator=(const LimitShopUserInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopUserInfoResp& default_instance();

  void Swap(LimitShopUserInfoResp* other);

  // implements Message ----------------------------------------------

  LimitShopUserInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopUserInfoResp& from);
  void MergeFrom(const LimitShopUserInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoActivity.LimitShopItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ProtoActivity::LimitShopItem& items(int index) const;
  inline ::ProtoActivity::LimitShopItem* mutable_items(int index);
  inline ::ProtoActivity::LimitShopItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::LimitShopItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::LimitShopItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:ProtoActivity.LimitShopUserInfoResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::LimitShopItem > items_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitShopUserInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CashBackItem : public ::google::protobuf::Message {
 public:
  CashBackItem();
  virtual ~CashBackItem();

  CashBackItem(const CashBackItem& from);

  inline CashBackItem& operator=(const CashBackItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashBackItem& default_instance();

  void Swap(CashBackItem* other);

  // implements Message ----------------------------------------------

  CashBackItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashBackItem& from);
  void MergeFrom(const CashBackItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required bool is_get_reward = 2;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 2;
  inline bool is_get_reward() const;
  inline void set_is_get_reward(bool value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.CashBackItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  bool is_get_reward_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static CashBackItem* default_instance_;
};
// -------------------------------------------------------------------

class CashBackInfoReq : public ::google::protobuf::Message {
 public:
  CashBackInfoReq();
  virtual ~CashBackInfoReq();

  CashBackInfoReq(const CashBackInfoReq& from);

  inline CashBackInfoReq& operator=(const CashBackInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashBackInfoReq& default_instance();

  void Swap(CashBackInfoReq* other);

  // implements Message ----------------------------------------------

  CashBackInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashBackInfoReq& from);
  void MergeFrom(const CashBackInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.CashBackInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static CashBackInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CashBackInfoResp : public ::google::protobuf::Message {
 public:
  CashBackInfoResp();
  virtual ~CashBackInfoResp();

  CashBackInfoResp(const CashBackInfoResp& from);

  inline CashBackInfoResp& operator=(const CashBackInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashBackInfoResp& default_instance();

  void Swap(CashBackInfoResp* other);

  // implements Message ----------------------------------------------

  CashBackInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashBackInfoResp& from);
  void MergeFrom(const CashBackInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoActivity.CashBackItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ProtoActivity::CashBackItem& items(int index) const;
  inline ::ProtoActivity::CashBackItem* mutable_items(int index);
  inline ::ProtoActivity::CashBackItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::CashBackItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::CashBackItem >*
      mutable_items();

  // required uint32 total_recharge = 2;
  inline bool has_total_recharge() const;
  inline void clear_total_recharge();
  static const int kTotalRechargeFieldNumber = 2;
  inline ::google::protobuf::uint32 total_recharge() const;
  inline void set_total_recharge(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.CashBackInfoResp)
 private:
  inline void set_has_total_recharge();
  inline void clear_has_total_recharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::CashBackItem > items_;
  ::google::protobuf::uint32 total_recharge_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static CashBackInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CashBackRewardReq : public ::google::protobuf::Message {
 public:
  CashBackRewardReq();
  virtual ~CashBackRewardReq();

  CashBackRewardReq(const CashBackRewardReq& from);

  inline CashBackRewardReq& operator=(const CashBackRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashBackRewardReq& default_instance();

  void Swap(CashBackRewardReq* other);

  // implements Message ----------------------------------------------

  CashBackRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashBackRewardReq& from);
  void MergeFrom(const CashBackRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.CashBackRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static CashBackRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CashBackRewardResp : public ::google::protobuf::Message {
 public:
  CashBackRewardResp();
  virtual ~CashBackRewardResp();

  CashBackRewardResp(const CashBackRewardResp& from);

  inline CashBackRewardResp& operator=(const CashBackRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashBackRewardResp& default_instance();

  void Swap(CashBackRewardResp* other);

  // implements Message ----------------------------------------------

  CashBackRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashBackRewardResp& from);
  void MergeFrom(const CashBackRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.CashBackItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ProtoActivity::CashBackItem& item() const;
  inline ::ProtoActivity::CashBackItem* mutable_item();
  inline ::ProtoActivity::CashBackItem* release_item();
  inline void set_allocated_item(::ProtoActivity::CashBackItem* item);

  // required .DataCommon.CommonBaseRewardCPP reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::DataCommon::CommonBaseRewardCPP& reward() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_reward();
  inline ::DataCommon::CommonBaseRewardCPP* release_reward();
  inline void set_allocated_reward(::DataCommon::CommonBaseRewardCPP* reward);

  // @@protoc_insertion_point(class_scope:ProtoActivity.CashBackRewardResp)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::CashBackItem* item_;
  ::DataCommon::CommonBaseRewardCPP* reward_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static CashBackRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityItem : public ::google::protobuf::Message {
 public:
  PassActivityItem();
  virtual ~PassActivityItem();

  PassActivityItem(const PassActivityItem& from);

  inline PassActivityItem& operator=(const PassActivityItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityItem& default_instance();

  void Swap(PassActivityItem* other);

  // implements Message ----------------------------------------------

  PassActivityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityItem& from);
  void MergeFrom(const PassActivityItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required bool is_get_reward = 2;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 2;
  inline bool is_get_reward() const;
  inline void set_is_get_reward(bool value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  bool is_get_reward_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityItem* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityRecord : public ::google::protobuf::Message {
 public:
  PassActivityRecord();
  virtual ~PassActivityRecord();

  PassActivityRecord(const PassActivityRecord& from);

  inline PassActivityRecord& operator=(const PassActivityRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityRecord& default_instance();

  void Swap(PassActivityRecord* other);

  // implements Message ----------------------------------------------

  PassActivityRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityRecord& from);
  void MergeFrom(const PassActivityRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 pass_id = 2;
  inline bool has_pass_id() const;
  inline void clear_pass_id();
  static const int kPassIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pass_id() const;
  inline void set_pass_id(::google::protobuf::uint32 value);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityRecord)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pass_id();
  inline void clear_has_pass_id();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 pass_id_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityRecord* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityInfoReq : public ::google::protobuf::Message {
 public:
  PassActivityInfoReq();
  virtual ~PassActivityInfoReq();

  PassActivityInfoReq(const PassActivityInfoReq& from);

  inline PassActivityInfoReq& operator=(const PassActivityInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityInfoReq& default_instance();

  void Swap(PassActivityInfoReq* other);

  // implements Message ----------------------------------------------

  PassActivityInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityInfoReq& from);
  void MergeFrom(const PassActivityInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityInfoResp : public ::google::protobuf::Message {
 public:
  PassActivityInfoResp();
  virtual ~PassActivityInfoResp();

  PassActivityInfoResp(const PassActivityInfoResp& from);

  inline PassActivityInfoResp& operator=(const PassActivityInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityInfoResp& default_instance();

  void Swap(PassActivityInfoResp* other);

  // implements Message ----------------------------------------------

  PassActivityInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityInfoResp& from);
  void MergeFrom(const PassActivityInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoActivity.PassActivityItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ProtoActivity::PassActivityItem& items(int index) const;
  inline ::ProtoActivity::PassActivityItem* mutable_items(int index);
  inline ::ProtoActivity::PassActivityItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityItem >*
      mutable_items();

  // repeated .ProtoActivity.PassActivityRecord records = 2;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 2;
  inline const ::ProtoActivity::PassActivityRecord& records(int index) const;
  inline ::ProtoActivity::PassActivityRecord* mutable_records(int index);
  inline ::ProtoActivity::PassActivityRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityInfoResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityItem > items_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityRecord > records_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityRewardReq : public ::google::protobuf::Message {
 public:
  PassActivityRewardReq();
  virtual ~PassActivityRewardReq();

  PassActivityRewardReq(const PassActivityRewardReq& from);

  inline PassActivityRewardReq& operator=(const PassActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityRewardReq& default_instance();

  void Swap(PassActivityRewardReq* other);

  // implements Message ----------------------------------------------

  PassActivityRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityRewardReq& from);
  void MergeFrom(const PassActivityRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class PassActivityRewardResp : public ::google::protobuf::Message {
 public:
  PassActivityRewardResp();
  virtual ~PassActivityRewardResp();

  PassActivityRewardResp(const PassActivityRewardResp& from);

  inline PassActivityRewardResp& operator=(const PassActivityRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassActivityRewardResp& default_instance();

  void Swap(PassActivityRewardResp* other);

  // implements Message ----------------------------------------------

  PassActivityRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassActivityRewardResp& from);
  void MergeFrom(const PassActivityRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.PassActivityItem items = 1;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ProtoActivity::PassActivityItem& items() const;
  inline ::ProtoActivity::PassActivityItem* mutable_items();
  inline ::ProtoActivity::PassActivityItem* release_items();
  inline void set_allocated_items(::ProtoActivity::PassActivityItem* items);

  // required .DataCommon.CommonBaseRewardCPP reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::DataCommon::CommonBaseRewardCPP& reward() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_reward();
  inline ::DataCommon::CommonBaseRewardCPP* release_reward();
  inline void set_allocated_reward(::DataCommon::CommonBaseRewardCPP* reward);

  // @@protoc_insertion_point(class_scope:ProtoActivity.PassActivityRewardResp)
 private:
  inline void set_has_items();
  inline void clear_has_items();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::PassActivityItem* items_;
  ::DataCommon::CommonBaseRewardCPP* reward_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static PassActivityRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class SmeltItem : public ::google::protobuf::Message {
 public:
  SmeltItem();
  virtual ~SmeltItem();

  SmeltItem(const SmeltItem& from);

  inline SmeltItem& operator=(const SmeltItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltItem& default_instance();

  void Swap(SmeltItem* other);

  // implements Message ----------------------------------------------

  SmeltItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltItem& from);
  void MergeFrom(const SmeltItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 reward_cnt = 2;
  inline bool has_reward_cnt() const;
  inline void clear_reward_cnt();
  static const int kRewardCntFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_cnt() const;
  inline void set_reward_cnt(::google::protobuf::uint32 value);

  // required uint32 yet_cnt = 3;
  inline bool has_yet_cnt() const;
  inline void clear_yet_cnt();
  static const int kYetCntFieldNumber = 3;
  inline ::google::protobuf::uint32 yet_cnt() const;
  inline void set_yet_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.SmeltItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reward_cnt();
  inline void clear_has_reward_cnt();
  inline void set_has_yet_cnt();
  inline void clear_has_yet_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 reward_cnt_;
  ::google::protobuf::uint32 yet_cnt_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SmeltItem* default_instance_;
};
// -------------------------------------------------------------------

class SmeltInfoReq : public ::google::protobuf::Message {
 public:
  SmeltInfoReq();
  virtual ~SmeltInfoReq();

  SmeltInfoReq(const SmeltInfoReq& from);

  inline SmeltInfoReq& operator=(const SmeltInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltInfoReq& default_instance();

  void Swap(SmeltInfoReq* other);

  // implements Message ----------------------------------------------

  SmeltInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltInfoReq& from);
  void MergeFrom(const SmeltInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.SmeltInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SmeltInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class SmeltInfoResp : public ::google::protobuf::Message {
 public:
  SmeltInfoResp();
  virtual ~SmeltInfoResp();

  SmeltInfoResp(const SmeltInfoResp& from);

  inline SmeltInfoResp& operator=(const SmeltInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltInfoResp& default_instance();

  void Swap(SmeltInfoResp* other);

  // implements Message ----------------------------------------------

  SmeltInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltInfoResp& from);
  void MergeFrom(const SmeltInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 total_smelt_cnt = 1;
  inline bool has_total_smelt_cnt() const;
  inline void clear_total_smelt_cnt();
  static const int kTotalSmeltCntFieldNumber = 1;
  inline ::google::protobuf::uint32 total_smelt_cnt() const;
  inline void set_total_smelt_cnt(::google::protobuf::uint32 value);

  // repeated .ProtoActivity.SmeltItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::ProtoActivity::SmeltItem& items(int index) const;
  inline ::ProtoActivity::SmeltItem* mutable_items(int index);
  inline ::ProtoActivity::SmeltItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::SmeltItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::SmeltItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:ProtoActivity.SmeltInfoResp)
 private:
  inline void set_has_total_smelt_cnt();
  inline void clear_has_total_smelt_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::SmeltItem > items_;
  ::google::protobuf::uint32 total_smelt_cnt_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SmeltInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class SmeltRewardReq : public ::google::protobuf::Message {
 public:
  SmeltRewardReq();
  virtual ~SmeltRewardReq();

  SmeltRewardReq(const SmeltRewardReq& from);

  inline SmeltRewardReq& operator=(const SmeltRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltRewardReq& default_instance();

  void Swap(SmeltRewardReq* other);

  // implements Message ----------------------------------------------

  SmeltRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltRewardReq& from);
  void MergeFrom(const SmeltRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.SmeltRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SmeltRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class SmeltRewardResp : public ::google::protobuf::Message {
 public:
  SmeltRewardResp();
  virtual ~SmeltRewardResp();

  SmeltRewardResp(const SmeltRewardResp& from);

  inline SmeltRewardResp& operator=(const SmeltRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltRewardResp& default_instance();

  void Swap(SmeltRewardResp* other);

  // implements Message ----------------------------------------------

  SmeltRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltRewardResp& from);
  void MergeFrom(const SmeltRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.SmeltItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ProtoActivity::SmeltItem& item() const;
  inline ::ProtoActivity::SmeltItem* mutable_item();
  inline ::ProtoActivity::SmeltItem* release_item();
  inline void set_allocated_item(::ProtoActivity::SmeltItem* item);

  // required .DataCommon.EquipmentAllCPP equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::DataCommon::EquipmentAllCPP& equip() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equip();
  inline ::DataCommon::EquipmentAllCPP* release_equip();
  inline void set_allocated_equip(::DataCommon::EquipmentAllCPP* equip);

  // @@protoc_insertion_point(class_scope:ProtoActivity.SmeltRewardResp)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::SmeltItem* item_;
  ::DataCommon::EquipmentAllCPP* equip_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SmeltRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldTombItem : public ::google::protobuf::Message {
 public:
  TouchGoldTombItem();
  virtual ~TouchGoldTombItem();

  TouchGoldTombItem(const TouchGoldTombItem& from);

  inline TouchGoldTombItem& operator=(const TouchGoldTombItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldTombItem& default_instance();

  void Swap(TouchGoldTombItem* other);

  // implements Message ----------------------------------------------

  TouchGoldTombItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldTombItem& from);
  void MergeFrom(const TouchGoldTombItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required bool is_locked = 2;
  inline bool has_is_locked() const;
  inline void clear_is_locked();
  static const int kIsLockedFieldNumber = 2;
  inline bool is_locked() const;
  inline void set_is_locked(bool value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldTombItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_locked();
  inline void clear_has_is_locked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  bool is_locked_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldTombItem* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldInfo : public ::google::protobuf::Message {
 public:
  TouchGoldInfo();
  virtual ~TouchGoldInfo();

  TouchGoldInfo(const TouchGoldInfo& from);

  inline TouchGoldInfo& operator=(const TouchGoldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldInfo& default_instance();

  void Swap(TouchGoldInfo* other);

  // implements Message ----------------------------------------------

  TouchGoldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldInfo& from);
  void MergeFrom(const TouchGoldInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoActivity.TouchGoldTombItem tombs = 1;
  inline int tombs_size() const;
  inline void clear_tombs();
  static const int kTombsFieldNumber = 1;
  inline const ::ProtoActivity::TouchGoldTombItem& tombs(int index) const;
  inline ::ProtoActivity::TouchGoldTombItem* mutable_tombs(int index);
  inline ::ProtoActivity::TouchGoldTombItem* add_tombs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::TouchGoldTombItem >&
      tombs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::TouchGoldTombItem >*
      mutable_tombs();

  // required uint32 total_touch = 2;
  inline bool has_total_touch() const;
  inline void clear_total_touch();
  static const int kTotalTouchFieldNumber = 2;
  inline ::google::protobuf::uint32 total_touch() const;
  inline void set_total_touch(::google::protobuf::uint32 value);

  // required uint32 total_limit = 3;
  inline bool has_total_limit() const;
  inline void clear_total_limit();
  static const int kTotalLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 total_limit() const;
  inline void set_total_limit(::google::protobuf::uint32 value);

  // required uint32 surplus = 4;
  inline bool has_surplus() const;
  inline void clear_surplus();
  static const int kSurplusFieldNumber = 4;
  inline ::google::protobuf::uint32 surplus() const;
  inline void set_surplus(::google::protobuf::uint32 value);

  // repeated uint32 out = 5;
  inline int out_size() const;
  inline void clear_out();
  static const int kOutFieldNumber = 5;
  inline ::google::protobuf::uint32 out(int index) const;
  inline void set_out(int index, ::google::protobuf::uint32 value);
  inline void add_out(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      out() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_out();

  // required uint32 component = 6;
  inline bool has_component() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 6;
  inline ::google::protobuf::uint32 component() const;
  inline void set_component(::google::protobuf::uint32 value);

  // required uint32 cur_tomb_id = 7;
  inline bool has_cur_tomb_id() const;
  inline void clear_cur_tomb_id();
  static const int kCurTombIdFieldNumber = 7;
  inline ::google::protobuf::uint32 cur_tomb_id() const;
  inline void set_cur_tomb_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldInfo)
 private:
  inline void set_has_total_touch();
  inline void clear_has_total_touch();
  inline void set_has_total_limit();
  inline void clear_has_total_limit();
  inline void set_has_surplus();
  inline void clear_has_surplus();
  inline void set_has_component();
  inline void clear_has_component();
  inline void set_has_cur_tomb_id();
  inline void clear_has_cur_tomb_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::TouchGoldTombItem > tombs_;
  ::google::protobuf::uint32 total_touch_;
  ::google::protobuf::uint32 total_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > out_;
  ::google::protobuf::uint32 surplus_;
  ::google::protobuf::uint32 component_;
  ::google::protobuf::uint32 cur_tomb_id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldInfo* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldInfoReq : public ::google::protobuf::Message {
 public:
  TouchGoldInfoReq();
  virtual ~TouchGoldInfoReq();

  TouchGoldInfoReq(const TouchGoldInfoReq& from);

  inline TouchGoldInfoReq& operator=(const TouchGoldInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldInfoReq& default_instance();

  void Swap(TouchGoldInfoReq* other);

  // implements Message ----------------------------------------------

  TouchGoldInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldInfoReq& from);
  void MergeFrom(const TouchGoldInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldOnceReq : public ::google::protobuf::Message {
 public:
  TouchGoldOnceReq();
  virtual ~TouchGoldOnceReq();

  TouchGoldOnceReq(const TouchGoldOnceReq& from);

  inline TouchGoldOnceReq& operator=(const TouchGoldOnceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldOnceReq& default_instance();

  void Swap(TouchGoldOnceReq* other);

  // implements Message ----------------------------------------------

  TouchGoldOnceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldOnceReq& from);
  void MergeFrom(const TouchGoldOnceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldOnceReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldOnceReq* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldAllReq : public ::google::protobuf::Message {
 public:
  TouchGoldAllReq();
  virtual ~TouchGoldAllReq();

  TouchGoldAllReq(const TouchGoldAllReq& from);

  inline TouchGoldAllReq& operator=(const TouchGoldAllReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldAllReq& default_instance();

  void Swap(TouchGoldAllReq* other);

  // implements Message ----------------------------------------------

  TouchGoldAllReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldAllReq& from);
  void MergeFrom(const TouchGoldAllReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldAllReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldAllReq* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldUnlockReq : public ::google::protobuf::Message {
 public:
  TouchGoldUnlockReq();
  virtual ~TouchGoldUnlockReq();

  TouchGoldUnlockReq(const TouchGoldUnlockReq& from);

  inline TouchGoldUnlockReq& operator=(const TouchGoldUnlockReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldUnlockReq& default_instance();

  void Swap(TouchGoldUnlockReq* other);

  // implements Message ----------------------------------------------

  TouchGoldUnlockReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldUnlockReq& from);
  void MergeFrom(const TouchGoldUnlockReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldUnlockReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldUnlockReq* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldResp : public ::google::protobuf::Message {
 public:
  TouchGoldResp();
  virtual ~TouchGoldResp();

  TouchGoldResp(const TouchGoldResp& from);

  inline TouchGoldResp& operator=(const TouchGoldResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldResp& default_instance();

  void Swap(TouchGoldResp* other);

  // implements Message ----------------------------------------------

  TouchGoldResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldResp& from);
  void MergeFrom(const TouchGoldResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.TouchGoldInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoActivity::TouchGoldInfo& info() const;
  inline ::ProtoActivity::TouchGoldInfo* mutable_info();
  inline ::ProtoActivity::TouchGoldInfo* release_info();
  inline void set_allocated_info(::ProtoActivity::TouchGoldInfo* info);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldResp)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::TouchGoldInfo* info_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldResp* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldResetReq : public ::google::protobuf::Message {
 public:
  TouchGoldResetReq();
  virtual ~TouchGoldResetReq();

  TouchGoldResetReq(const TouchGoldResetReq& from);

  inline TouchGoldResetReq& operator=(const TouchGoldResetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldResetReq& default_instance();

  void Swap(TouchGoldResetReq* other);

  // implements Message ----------------------------------------------

  TouchGoldResetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldResetReq& from);
  void MergeFrom(const TouchGoldResetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldResetReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldResetReq* default_instance_;
};
// -------------------------------------------------------------------

class TouchGoldSwitchReq : public ::google::protobuf::Message {
 public:
  TouchGoldSwitchReq();
  virtual ~TouchGoldSwitchReq();

  TouchGoldSwitchReq(const TouchGoldSwitchReq& from);

  inline TouchGoldSwitchReq& operator=(const TouchGoldSwitchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchGoldSwitchReq& default_instance();

  void Swap(TouchGoldSwitchReq* other);

  // implements Message ----------------------------------------------

  TouchGoldSwitchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchGoldSwitchReq& from);
  void MergeFrom(const TouchGoldSwitchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.TouchGoldSwitchReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static TouchGoldSwitchReq* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountItem : public ::google::protobuf::Message {
 public:
  HugeDiscountItem();
  virtual ~HugeDiscountItem();

  HugeDiscountItem(const HugeDiscountItem& from);

  inline HugeDiscountItem& operator=(const HugeDiscountItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountItem& default_instance();

  void Swap(HugeDiscountItem* other);

  // implements Message ----------------------------------------------

  HugeDiscountItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountItem& from);
  void MergeFrom(const HugeDiscountItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 buy_cnt = 2;
  inline bool has_buy_cnt() const;
  inline void clear_buy_cnt();
  static const int kBuyCntFieldNumber = 2;
  inline ::google::protobuf::uint32 buy_cnt() const;
  inline void set_buy_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buy_cnt();
  inline void clear_has_buy_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 buy_cnt_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountItem* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountPage : public ::google::protobuf::Message {
 public:
  HugeDiscountPage();
  virtual ~HugeDiscountPage();

  HugeDiscountPage(const HugeDiscountPage& from);

  inline HugeDiscountPage& operator=(const HugeDiscountPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountPage& default_instance();

  void Swap(HugeDiscountPage* other);

  // implements Message ----------------------------------------------

  HugeDiscountPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountPage& from);
  void MergeFrom(const HugeDiscountPage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 page_id = 1;
  inline bool has_page_id() const;
  inline void clear_page_id();
  static const int kPageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 page_id() const;
  inline void set_page_id(::google::protobuf::uint32 value);

  // repeated .ProtoActivity.HugeDiscountItem goods = 2;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 2;
  inline const ::ProtoActivity::HugeDiscountItem& goods(int index) const;
  inline ::ProtoActivity::HugeDiscountItem* mutable_goods(int index);
  inline ::ProtoActivity::HugeDiscountItem* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountItem >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountItem >*
      mutable_goods();

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountPage)
 private:
  inline void set_has_page_id();
  inline void clear_has_page_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountItem > goods_;
  ::google::protobuf::uint32 page_id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountPage* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountInfoReq : public ::google::protobuf::Message {
 public:
  HugeDiscountInfoReq();
  virtual ~HugeDiscountInfoReq();

  HugeDiscountInfoReq(const HugeDiscountInfoReq& from);

  inline HugeDiscountInfoReq& operator=(const HugeDiscountInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountInfoReq& default_instance();

  void Swap(HugeDiscountInfoReq* other);

  // implements Message ----------------------------------------------

  HugeDiscountInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountInfoReq& from);
  void MergeFrom(const HugeDiscountInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountInfoResp : public ::google::protobuf::Message {
 public:
  HugeDiscountInfoResp();
  virtual ~HugeDiscountInfoResp();

  HugeDiscountInfoResp(const HugeDiscountInfoResp& from);

  inline HugeDiscountInfoResp& operator=(const HugeDiscountInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountInfoResp& default_instance();

  void Swap(HugeDiscountInfoResp* other);

  // implements Message ----------------------------------------------

  HugeDiscountInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountInfoResp& from);
  void MergeFrom(const HugeDiscountInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoActivity.HugeDiscountPage items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ProtoActivity::HugeDiscountPage& items(int index) const;
  inline ::ProtoActivity::HugeDiscountPage* mutable_items(int index);
  inline ::ProtoActivity::HugeDiscountPage* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountPage >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountPage >*
      mutable_items();

  // required uint32 recharge = 2;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 2;
  inline ::google::protobuf::uint32 recharge() const;
  inline void set_recharge(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountInfoResp)
 private:
  inline void set_has_recharge();
  inline void clear_has_recharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountPage > items_;
  ::google::protobuf::uint32 recharge_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountBuyReq : public ::google::protobuf::Message {
 public:
  HugeDiscountBuyReq();
  virtual ~HugeDiscountBuyReq();

  HugeDiscountBuyReq(const HugeDiscountBuyReq& from);

  inline HugeDiscountBuyReq& operator=(const HugeDiscountBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountBuyReq& default_instance();

  void Swap(HugeDiscountBuyReq* other);

  // implements Message ----------------------------------------------

  HugeDiscountBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountBuyReq& from);
  void MergeFrom(const HugeDiscountBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 page_id = 1;
  inline bool has_page_id() const;
  inline void clear_page_id();
  static const int kPageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 page_id() const;
  inline void set_page_id(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountBuyReq)
 private:
  inline void set_has_page_id();
  inline void clear_has_page_id();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 page_id_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class HugeDiscountBuyResp : public ::google::protobuf::Message {
 public:
  HugeDiscountBuyResp();
  virtual ~HugeDiscountBuyResp();

  HugeDiscountBuyResp(const HugeDiscountBuyResp& from);

  inline HugeDiscountBuyResp& operator=(const HugeDiscountBuyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HugeDiscountBuyResp& default_instance();

  void Swap(HugeDiscountBuyResp* other);

  // implements Message ----------------------------------------------

  HugeDiscountBuyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HugeDiscountBuyResp& from);
  void MergeFrom(const HugeDiscountBuyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 page_id = 1;
  inline bool has_page_id() const;
  inline void clear_page_id();
  static const int kPageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 page_id() const;
  inline void set_page_id(::google::protobuf::uint32 value);

  // required .ProtoActivity.HugeDiscountItem item_info = 2;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 2;
  inline const ::ProtoActivity::HugeDiscountItem& item_info() const;
  inline ::ProtoActivity::HugeDiscountItem* mutable_item_info();
  inline ::ProtoActivity::HugeDiscountItem* release_item_info();
  inline void set_allocated_item_info(::ProtoActivity::HugeDiscountItem* item_info);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required .DataCommon.EquipmentAllCPP equip = 4;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 4;
  inline const ::DataCommon::EquipmentAllCPP& equip() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equip();
  inline ::DataCommon::EquipmentAllCPP* release_equip();
  inline void set_allocated_equip(::DataCommon::EquipmentAllCPP* equip);

  // @@protoc_insertion_point(class_scope:ProtoActivity.HugeDiscountBuyResp)
 private:
  inline void set_has_page_id();
  inline void clear_has_page_id();
  inline void set_has_item_info();
  inline void clear_has_item_info();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::HugeDiscountItem* item_info_;
  ::google::protobuf::uint32 page_id_;
  ::google::protobuf::uint32 cash_;
  ::DataCommon::EquipmentAllCPP* equip_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static HugeDiscountBuyResp* default_instance_;
};
// -------------------------------------------------------------------

class OpenLittleChargeWindowReq : public ::google::protobuf::Message {
 public:
  OpenLittleChargeWindowReq();
  virtual ~OpenLittleChargeWindowReq();

  OpenLittleChargeWindowReq(const OpenLittleChargeWindowReq& from);

  inline OpenLittleChargeWindowReq& operator=(const OpenLittleChargeWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenLittleChargeWindowReq& default_instance();

  void Swap(OpenLittleChargeWindowReq* other);

  // implements Message ----------------------------------------------

  OpenLittleChargeWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenLittleChargeWindowReq& from);
  void MergeFrom(const OpenLittleChargeWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenLittleChargeWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenLittleChargeWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenLittleChargeWindowResp : public ::google::protobuf::Message {
 public:
  OpenLittleChargeWindowResp();
  virtual ~OpenLittleChargeWindowResp();

  OpenLittleChargeWindowResp(const OpenLittleChargeWindowResp& from);

  inline OpenLittleChargeWindowResp& operator=(const OpenLittleChargeWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenLittleChargeWindowResp& default_instance();

  void Swap(OpenLittleChargeWindowResp* other);

  // implements Message ----------------------------------------------

  OpenLittleChargeWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenLittleChargeWindowResp& from);
  void MergeFrom(const OpenLittleChargeWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenLittleChargeWindowResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenLittleChargeWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class LittleChargeRewardReq : public ::google::protobuf::Message {
 public:
  LittleChargeRewardReq();
  virtual ~LittleChargeRewardReq();

  LittleChargeRewardReq(const LittleChargeRewardReq& from);

  inline LittleChargeRewardReq& operator=(const LittleChargeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LittleChargeRewardReq& default_instance();

  void Swap(LittleChargeRewardReq* other);

  // implements Message ----------------------------------------------

  LittleChargeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LittleChargeRewardReq& from);
  void MergeFrom(const LittleChargeRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.LittleChargeRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LittleChargeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LittleChargeRewardResp : public ::google::protobuf::Message {
 public:
  LittleChargeRewardResp();
  virtual ~LittleChargeRewardResp();

  LittleChargeRewardResp(const LittleChargeRewardResp& from);

  inline LittleChargeRewardResp& operator=(const LittleChargeRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LittleChargeRewardResp& default_instance();

  void Swap(LittleChargeRewardResp* other);

  // implements Message ----------------------------------------------

  LittleChargeRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LittleChargeRewardResp& from);
  void MergeFrom(const LittleChargeRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shadow = 1;
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 1;
  inline ::google::protobuf::uint32 shadow() const;
  inline void set_shadow(::google::protobuf::uint32 value);

  // required .DataCommon.EquipmentAllCPP equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::DataCommon::EquipmentAllCPP& equip() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equip();
  inline ::DataCommon::EquipmentAllCPP* release_equip();
  inline void set_allocated_equip(::DataCommon::EquipmentAllCPP* equip);

  // @@protoc_insertion_point(class_scope:ProtoActivity.LittleChargeRewardResp)
 private:
  inline void set_has_shadow();
  inline void clear_has_shadow();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equip_;
  ::google::protobuf::uint32 shadow_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static LittleChargeRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class OpenEnlivenKillWindowReq : public ::google::protobuf::Message {
 public:
  OpenEnlivenKillWindowReq();
  virtual ~OpenEnlivenKillWindowReq();

  OpenEnlivenKillWindowReq(const OpenEnlivenKillWindowReq& from);

  inline OpenEnlivenKillWindowReq& operator=(const OpenEnlivenKillWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenEnlivenKillWindowReq& default_instance();

  void Swap(OpenEnlivenKillWindowReq* other);

  // implements Message ----------------------------------------------

  OpenEnlivenKillWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenEnlivenKillWindowReq& from);
  void MergeFrom(const OpenEnlivenKillWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenEnlivenKillWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenEnlivenKillWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenEnlivenKillWindowResp : public ::google::protobuf::Message {
 public:
  OpenEnlivenKillWindowResp();
  virtual ~OpenEnlivenKillWindowResp();

  OpenEnlivenKillWindowResp(const OpenEnlivenKillWindowResp& from);

  inline OpenEnlivenKillWindowResp& operator=(const OpenEnlivenKillWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenEnlivenKillWindowResp& default_instance();

  void Swap(OpenEnlivenKillWindowResp* other);

  // implements Message ----------------------------------------------

  OpenEnlivenKillWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenEnlivenKillWindowResp& from);
  void MergeFrom(const OpenEnlivenKillWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 kill = 1;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 1;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);

  // required uint32 shadow = 2;
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 2;
  inline ::google::protobuf::uint32 shadow() const;
  inline void set_shadow(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenEnlivenKillWindowResp)
 private:
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_shadow();
  inline void clear_has_shadow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 shadow_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenEnlivenKillWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveDailyKillRewardReq : public ::google::protobuf::Message {
 public:
  ReceiveDailyKillRewardReq();
  virtual ~ReceiveDailyKillRewardReq();

  ReceiveDailyKillRewardReq(const ReceiveDailyKillRewardReq& from);

  inline ReceiveDailyKillRewardReq& operator=(const ReceiveDailyKillRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveDailyKillRewardReq& default_instance();

  void Swap(ReceiveDailyKillRewardReq* other);

  // implements Message ----------------------------------------------

  ReceiveDailyKillRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveDailyKillRewardReq& from);
  void MergeFrom(const ReceiveDailyKillRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.ReceiveDailyKillRewardReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static ReceiveDailyKillRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveDailyKillRewardResp : public ::google::protobuf::Message {
 public:
  ReceiveDailyKillRewardResp();
  virtual ~ReceiveDailyKillRewardResp();

  ReceiveDailyKillRewardResp(const ReceiveDailyKillRewardResp& from);

  inline ReceiveDailyKillRewardResp& operator=(const ReceiveDailyKillRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveDailyKillRewardResp& default_instance();

  void Swap(ReceiveDailyKillRewardResp* other);

  // implements Message ----------------------------------------------

  ReceiveDailyKillRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveDailyKillRewardResp& from);
  void MergeFrom(const ReceiveDailyKillRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shadow = 1;
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 1;
  inline ::google::protobuf::uint32 shadow() const;
  inline void set_shadow(::google::protobuf::uint32 value);

  // required .User.RewardBagInfo reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::User::RewardBagInfo& reward() const;
  inline ::User::RewardBagInfo* mutable_reward();
  inline ::User::RewardBagInfo* release_reward();
  inline void set_allocated_reward(::User::RewardBagInfo* reward);

  // @@protoc_insertion_point(class_scope:ProtoActivity.ReceiveDailyKillRewardResp)
 private:
  inline void set_has_shadow();
  inline void clear_has_shadow();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::RewardBagInfo* reward_;
  ::google::protobuf::uint32 shadow_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static ReceiveDailyKillRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class SellComponentCPP : public ::google::protobuf::Message {
 public:
  SellComponentCPP();
  virtual ~SellComponentCPP();

  SellComponentCPP(const SellComponentCPP& from);

  inline SellComponentCPP& operator=(const SellComponentCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellComponentCPP& default_instance();

  void Swap(SellComponentCPP* other);

  // implements Message ----------------------------------------------

  SellComponentCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellComponentCPP& from);
  void MergeFrom(const SellComponentCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 num1 = 1;
  inline bool has_num1() const;
  inline void clear_num1();
  static const int kNum1FieldNumber = 1;
  inline ::google::protobuf::uint32 num1() const;
  inline void set_num1(::google::protobuf::uint32 value);

  // required uint32 num2 = 2;
  inline bool has_num2() const;
  inline void clear_num2();
  static const int kNum2FieldNumber = 2;
  inline ::google::protobuf::uint32 num2() const;
  inline void set_num2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.SellComponentCPP)
 private:
  inline void set_has_num1();
  inline void clear_has_num1();
  inline void set_has_num2();
  inline void clear_has_num2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num1_;
  ::google::protobuf::uint32 num2_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static SellComponentCPP* default_instance_;
};
// -------------------------------------------------------------------

class OpenSellComponentWindowReq : public ::google::protobuf::Message {
 public:
  OpenSellComponentWindowReq();
  virtual ~OpenSellComponentWindowReq();

  OpenSellComponentWindowReq(const OpenSellComponentWindowReq& from);

  inline OpenSellComponentWindowReq& operator=(const OpenSellComponentWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenSellComponentWindowReq& default_instance();

  void Swap(OpenSellComponentWindowReq* other);

  // implements Message ----------------------------------------------

  OpenSellComponentWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenSellComponentWindowReq& from);
  void MergeFrom(const OpenSellComponentWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenSellComponentWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenSellComponentWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenSellComponentWindowResp : public ::google::protobuf::Message {
 public:
  OpenSellComponentWindowResp();
  virtual ~OpenSellComponentWindowResp();

  OpenSellComponentWindowResp(const OpenSellComponentWindowResp& from);

  inline OpenSellComponentWindowResp& operator=(const OpenSellComponentWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenSellComponentWindowResp& default_instance();

  void Swap(OpenSellComponentWindowResp* other);

  // implements Message ----------------------------------------------

  OpenSellComponentWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenSellComponentWindowResp& from);
  void MergeFrom(const OpenSellComponentWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.SellComponentCPP sellinfo = 1;
  inline bool has_sellinfo() const;
  inline void clear_sellinfo();
  static const int kSellinfoFieldNumber = 1;
  inline const ::ProtoActivity::SellComponentCPP& sellinfo() const;
  inline ::ProtoActivity::SellComponentCPP* mutable_sellinfo();
  inline ::ProtoActivity::SellComponentCPP* release_sellinfo();
  inline void set_allocated_sellinfo(::ProtoActivity::SellComponentCPP* sellinfo);

  // @@protoc_insertion_point(class_scope:ProtoActivity.OpenSellComponentWindowResp)
 private:
  inline void set_has_sellinfo();
  inline void clear_has_sellinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::SellComponentCPP* sellinfo_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenSellComponentWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyComponentReq : public ::google::protobuf::Message {
 public:
  BuyComponentReq();
  virtual ~BuyComponentReq();

  BuyComponentReq(const BuyComponentReq& from);

  inline BuyComponentReq& operator=(const BuyComponentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyComponentReq& default_instance();

  void Swap(BuyComponentReq* other);

  // implements Message ----------------------------------------------

  BuyComponentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyComponentReq& from);
  void MergeFrom(const BuyComponentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.BuyComponentReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static BuyComponentReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyComponentResp : public ::google::protobuf::Message {
 public:
  BuyComponentResp();
  virtual ~BuyComponentResp();

  BuyComponentResp(const BuyComponentResp& from);

  inline BuyComponentResp& operator=(const BuyComponentResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyComponentResp& default_instance();

  void Swap(BuyComponentResp* other);

  // implements Message ----------------------------------------------

  BuyComponentResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyComponentResp& from);
  void MergeFrom(const BuyComponentResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoActivity.SellComponentCPP sellinfo = 1;
  inline bool has_sellinfo() const;
  inline void clear_sellinfo();
  static const int kSellinfoFieldNumber = 1;
  inline const ::ProtoActivity::SellComponentCPP& sellinfo() const;
  inline ::ProtoActivity::SellComponentCPP* mutable_sellinfo();
  inline ::ProtoActivity::SellComponentCPP* release_sellinfo();
  inline void set_allocated_sellinfo(::ProtoActivity::SellComponentCPP* sellinfo);

  // required .User.RewardBagInfo reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::User::RewardBagInfo& reward() const;
  inline ::User::RewardBagInfo* mutable_reward();
  inline ::User::RewardBagInfo* release_reward();
  inline void set_allocated_reward(::User::RewardBagInfo* reward);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoActivity.BuyComponentResp)
 private:
  inline void set_has_sellinfo();
  inline void clear_has_sellinfo();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoActivity::SellComponentCPP* sellinfo_;
  ::User::RewardBagInfo* reward_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoActivity_2eproto();

  void InitAsDefaultInstance();
  static BuyComponentResp* default_instance_;
};
// ===================================================================


// ===================================================================

// LimitShopItem

// required uint32 id = 1;
inline bool LimitShopItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LimitShopItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopItem.id)
  return id_;
}
inline void LimitShopItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopItem.id)
}

// required uint32 buy_cnt = 2;
inline bool LimitShopItem::has_buy_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitShopItem::set_has_buy_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitShopItem::clear_has_buy_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitShopItem::clear_buy_cnt() {
  buy_cnt_ = 0u;
  clear_has_buy_cnt();
}
inline ::google::protobuf::uint32 LimitShopItem::buy_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopItem.buy_cnt)
  return buy_cnt_;
}
inline void LimitShopItem::set_buy_cnt(::google::protobuf::uint32 value) {
  set_has_buy_cnt();
  buy_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopItem.buy_cnt)
}

// -------------------------------------------------------------------

// LimitShopBuyReq

// required uint32 id = 1;
inline bool LimitShopBuyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopBuyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopBuyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopBuyReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LimitShopBuyReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopBuyReq.id)
  return id_;
}
inline void LimitShopBuyReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopBuyReq.id)
}

// -------------------------------------------------------------------

// LimitShopBuyResp

// required uint32 id = 1;
inline bool LimitShopBuyResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopBuyResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopBuyResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopBuyResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LimitShopBuyResp::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopBuyResp.id)
  return id_;
}
inline void LimitShopBuyResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopBuyResp.id)
}

// required uint32 cash = 2;
inline bool LimitShopBuyResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitShopBuyResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitShopBuyResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitShopBuyResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 LimitShopBuyResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopBuyResp.cash)
  return cash_;
}
inline void LimitShopBuyResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopBuyResp.cash)
}

// required uint32 buy_cnt = 3;
inline bool LimitShopBuyResp::has_buy_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LimitShopBuyResp::set_has_buy_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LimitShopBuyResp::clear_has_buy_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LimitShopBuyResp::clear_buy_cnt() {
  buy_cnt_ = 0u;
  clear_has_buy_cnt();
}
inline ::google::protobuf::uint32 LimitShopBuyResp::buy_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopBuyResp.buy_cnt)
  return buy_cnt_;
}
inline void LimitShopBuyResp::set_buy_cnt(::google::protobuf::uint32 value) {
  set_has_buy_cnt();
  buy_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LimitShopBuyResp.buy_cnt)
}

// required .DataCommon.EquipmentAllCPP equip = 4;
inline bool LimitShopBuyResp::has_equip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LimitShopBuyResp::set_has_equip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LimitShopBuyResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LimitShopBuyResp::clear_equip() {
  if (equip_ != NULL) equip_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equip();
}
inline const ::DataCommon::EquipmentAllCPP& LimitShopBuyResp::equip() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopBuyResp.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DataCommon::EquipmentAllCPP* LimitShopBuyResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.LimitShopBuyResp.equip)
  return equip_;
}
inline ::DataCommon::EquipmentAllCPP* LimitShopBuyResp::release_equip() {
  clear_has_equip();
  ::DataCommon::EquipmentAllCPP* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void LimitShopBuyResp::set_allocated_equip(::DataCommon::EquipmentAllCPP* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.LimitShopBuyResp.equip)
}

// -------------------------------------------------------------------

// LimitShopUserInfoReq

// -------------------------------------------------------------------

// LimitShopUserInfoResp

// repeated .ProtoActivity.LimitShopItem items = 1;
inline int LimitShopUserInfoResp::items_size() const {
  return items_.size();
}
inline void LimitShopUserInfoResp::clear_items() {
  items_.Clear();
}
inline const ::ProtoActivity::LimitShopItem& LimitShopUserInfoResp::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LimitShopUserInfoResp.items)
  return items_.Get(index);
}
inline ::ProtoActivity::LimitShopItem* LimitShopUserInfoResp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.LimitShopUserInfoResp.items)
  return items_.Mutable(index);
}
inline ::ProtoActivity::LimitShopItem* LimitShopUserInfoResp::add_items() {
  // @@protoc_insertion_point(field_add:ProtoActivity.LimitShopUserInfoResp.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::LimitShopItem >&
LimitShopUserInfoResp::items() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.LimitShopUserInfoResp.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::LimitShopItem >*
LimitShopUserInfoResp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.LimitShopUserInfoResp.items)
  return &items_;
}

// -------------------------------------------------------------------

// CashBackItem

// required uint32 id = 1;
inline bool CashBackItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashBackItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashBackItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashBackItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CashBackItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackItem.id)
  return id_;
}
inline void CashBackItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.CashBackItem.id)
}

// required bool is_get_reward = 2;
inline bool CashBackItem::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashBackItem::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashBackItem::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashBackItem::clear_is_get_reward() {
  is_get_reward_ = false;
  clear_has_is_get_reward();
}
inline bool CashBackItem::is_get_reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackItem.is_get_reward)
  return is_get_reward_;
}
inline void CashBackItem::set_is_get_reward(bool value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.CashBackItem.is_get_reward)
}

// -------------------------------------------------------------------

// CashBackInfoReq

// -------------------------------------------------------------------

// CashBackInfoResp

// repeated .ProtoActivity.CashBackItem items = 1;
inline int CashBackInfoResp::items_size() const {
  return items_.size();
}
inline void CashBackInfoResp::clear_items() {
  items_.Clear();
}
inline const ::ProtoActivity::CashBackItem& CashBackInfoResp::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackInfoResp.items)
  return items_.Get(index);
}
inline ::ProtoActivity::CashBackItem* CashBackInfoResp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.CashBackInfoResp.items)
  return items_.Mutable(index);
}
inline ::ProtoActivity::CashBackItem* CashBackInfoResp::add_items() {
  // @@protoc_insertion_point(field_add:ProtoActivity.CashBackInfoResp.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::CashBackItem >&
CashBackInfoResp::items() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.CashBackInfoResp.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::CashBackItem >*
CashBackInfoResp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.CashBackInfoResp.items)
  return &items_;
}

// required uint32 total_recharge = 2;
inline bool CashBackInfoResp::has_total_recharge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashBackInfoResp::set_has_total_recharge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashBackInfoResp::clear_has_total_recharge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashBackInfoResp::clear_total_recharge() {
  total_recharge_ = 0u;
  clear_has_total_recharge();
}
inline ::google::protobuf::uint32 CashBackInfoResp::total_recharge() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackInfoResp.total_recharge)
  return total_recharge_;
}
inline void CashBackInfoResp::set_total_recharge(::google::protobuf::uint32 value) {
  set_has_total_recharge();
  total_recharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.CashBackInfoResp.total_recharge)
}

// -------------------------------------------------------------------

// CashBackRewardReq

// required uint32 id = 1;
inline bool CashBackRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashBackRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashBackRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashBackRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CashBackRewardReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackRewardReq.id)
  return id_;
}
inline void CashBackRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.CashBackRewardReq.id)
}

// -------------------------------------------------------------------

// CashBackRewardResp

// required .ProtoActivity.CashBackItem item = 1;
inline bool CashBackRewardResp::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashBackRewardResp::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashBackRewardResp::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashBackRewardResp::clear_item() {
  if (item_ != NULL) item_->::ProtoActivity::CashBackItem::Clear();
  clear_has_item();
}
inline const ::ProtoActivity::CashBackItem& CashBackRewardResp::item() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackRewardResp.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoActivity::CashBackItem* CashBackRewardResp::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoActivity::CashBackItem;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.CashBackRewardResp.item)
  return item_;
}
inline ::ProtoActivity::CashBackItem* CashBackRewardResp::release_item() {
  clear_has_item();
  ::ProtoActivity::CashBackItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void CashBackRewardResp::set_allocated_item(::ProtoActivity::CashBackItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.CashBackRewardResp.item)
}

// required .DataCommon.CommonBaseRewardCPP reward = 2;
inline bool CashBackRewardResp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashBackRewardResp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashBackRewardResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashBackRewardResp::clear_reward() {
  if (reward_ != NULL) reward_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_reward();
}
inline const ::DataCommon::CommonBaseRewardCPP& CashBackRewardResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.CashBackRewardResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::DataCommon::CommonBaseRewardCPP* CashBackRewardResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.CashBackRewardResp.reward)
  return reward_;
}
inline ::DataCommon::CommonBaseRewardCPP* CashBackRewardResp::release_reward() {
  clear_has_reward();
  ::DataCommon::CommonBaseRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void CashBackRewardResp::set_allocated_reward(::DataCommon::CommonBaseRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.CashBackRewardResp.reward)
}

// -------------------------------------------------------------------

// PassActivityItem

// required uint32 id = 1;
inline bool PassActivityItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassActivityItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassActivityItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassActivityItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PassActivityItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityItem.id)
  return id_;
}
inline void PassActivityItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityItem.id)
}

// required bool is_get_reward = 2;
inline bool PassActivityItem::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassActivityItem::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassActivityItem::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassActivityItem::clear_is_get_reward() {
  is_get_reward_ = false;
  clear_has_is_get_reward();
}
inline bool PassActivityItem::is_get_reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityItem.is_get_reward)
  return is_get_reward_;
}
inline void PassActivityItem::set_is_get_reward(bool value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityItem.is_get_reward)
}

// -------------------------------------------------------------------

// PassActivityRecord

// required bytes name = 1;
inline bool PassActivityRecord::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassActivityRecord::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassActivityRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassActivityRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PassActivityRecord::name() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRecord.name)
  return *name_;
}
inline void PassActivityRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityRecord.name)
}
inline void PassActivityRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoActivity.PassActivityRecord.name)
}
inline void PassActivityRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoActivity.PassActivityRecord.name)
}
inline ::std::string* PassActivityRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoActivity.PassActivityRecord.name)
  return name_;
}
inline ::std::string* PassActivityRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PassActivityRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.PassActivityRecord.name)
}

// required uint32 pass_id = 2;
inline bool PassActivityRecord::has_pass_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassActivityRecord::set_has_pass_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassActivityRecord::clear_has_pass_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassActivityRecord::clear_pass_id() {
  pass_id_ = 0u;
  clear_has_pass_id();
}
inline ::google::protobuf::uint32 PassActivityRecord::pass_id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRecord.pass_id)
  return pass_id_;
}
inline void PassActivityRecord::set_pass_id(::google::protobuf::uint32 value) {
  set_has_pass_id();
  pass_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityRecord.pass_id)
}

// required uint32 cash = 3;
inline bool PassActivityRecord::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassActivityRecord::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassActivityRecord::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassActivityRecord::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PassActivityRecord::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRecord.cash)
  return cash_;
}
inline void PassActivityRecord::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityRecord.cash)
}

// -------------------------------------------------------------------

// PassActivityInfoReq

// -------------------------------------------------------------------

// PassActivityInfoResp

// repeated .ProtoActivity.PassActivityItem items = 1;
inline int PassActivityInfoResp::items_size() const {
  return items_.size();
}
inline void PassActivityInfoResp::clear_items() {
  items_.Clear();
}
inline const ::ProtoActivity::PassActivityItem& PassActivityInfoResp::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityInfoResp.items)
  return items_.Get(index);
}
inline ::ProtoActivity::PassActivityItem* PassActivityInfoResp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.PassActivityInfoResp.items)
  return items_.Mutable(index);
}
inline ::ProtoActivity::PassActivityItem* PassActivityInfoResp::add_items() {
  // @@protoc_insertion_point(field_add:ProtoActivity.PassActivityInfoResp.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityItem >&
PassActivityInfoResp::items() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.PassActivityInfoResp.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityItem >*
PassActivityInfoResp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.PassActivityInfoResp.items)
  return &items_;
}

// repeated .ProtoActivity.PassActivityRecord records = 2;
inline int PassActivityInfoResp::records_size() const {
  return records_.size();
}
inline void PassActivityInfoResp::clear_records() {
  records_.Clear();
}
inline const ::ProtoActivity::PassActivityRecord& PassActivityInfoResp::records(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityInfoResp.records)
  return records_.Get(index);
}
inline ::ProtoActivity::PassActivityRecord* PassActivityInfoResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.PassActivityInfoResp.records)
  return records_.Mutable(index);
}
inline ::ProtoActivity::PassActivityRecord* PassActivityInfoResp::add_records() {
  // @@protoc_insertion_point(field_add:ProtoActivity.PassActivityInfoResp.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityRecord >&
PassActivityInfoResp::records() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.PassActivityInfoResp.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::PassActivityRecord >*
PassActivityInfoResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.PassActivityInfoResp.records)
  return &records_;
}

// -------------------------------------------------------------------

// PassActivityRewardReq

// required uint32 id = 1;
inline bool PassActivityRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassActivityRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassActivityRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassActivityRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PassActivityRewardReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRewardReq.id)
  return id_;
}
inline void PassActivityRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.PassActivityRewardReq.id)
}

// -------------------------------------------------------------------

// PassActivityRewardResp

// required .ProtoActivity.PassActivityItem items = 1;
inline bool PassActivityRewardResp::has_items() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassActivityRewardResp::set_has_items() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassActivityRewardResp::clear_has_items() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassActivityRewardResp::clear_items() {
  if (items_ != NULL) items_->::ProtoActivity::PassActivityItem::Clear();
  clear_has_items();
}
inline const ::ProtoActivity::PassActivityItem& PassActivityRewardResp::items() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRewardResp.items)
  return items_ != NULL ? *items_ : *default_instance_->items_;
}
inline ::ProtoActivity::PassActivityItem* PassActivityRewardResp::mutable_items() {
  set_has_items();
  if (items_ == NULL) items_ = new ::ProtoActivity::PassActivityItem;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.PassActivityRewardResp.items)
  return items_;
}
inline ::ProtoActivity::PassActivityItem* PassActivityRewardResp::release_items() {
  clear_has_items();
  ::ProtoActivity::PassActivityItem* temp = items_;
  items_ = NULL;
  return temp;
}
inline void PassActivityRewardResp::set_allocated_items(::ProtoActivity::PassActivityItem* items) {
  delete items_;
  items_ = items;
  if (items) {
    set_has_items();
  } else {
    clear_has_items();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.PassActivityRewardResp.items)
}

// required .DataCommon.CommonBaseRewardCPP reward = 2;
inline bool PassActivityRewardResp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassActivityRewardResp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassActivityRewardResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassActivityRewardResp::clear_reward() {
  if (reward_ != NULL) reward_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_reward();
}
inline const ::DataCommon::CommonBaseRewardCPP& PassActivityRewardResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.PassActivityRewardResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::DataCommon::CommonBaseRewardCPP* PassActivityRewardResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.PassActivityRewardResp.reward)
  return reward_;
}
inline ::DataCommon::CommonBaseRewardCPP* PassActivityRewardResp::release_reward() {
  clear_has_reward();
  ::DataCommon::CommonBaseRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void PassActivityRewardResp::set_allocated_reward(::DataCommon::CommonBaseRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.PassActivityRewardResp.reward)
}

// -------------------------------------------------------------------

// SmeltItem

// required uint32 id = 1;
inline bool SmeltItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmeltItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmeltItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmeltItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SmeltItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltItem.id)
  return id_;
}
inline void SmeltItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SmeltItem.id)
}

// required uint32 reward_cnt = 2;
inline bool SmeltItem::has_reward_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SmeltItem::set_has_reward_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SmeltItem::clear_has_reward_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SmeltItem::clear_reward_cnt() {
  reward_cnt_ = 0u;
  clear_has_reward_cnt();
}
inline ::google::protobuf::uint32 SmeltItem::reward_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltItem.reward_cnt)
  return reward_cnt_;
}
inline void SmeltItem::set_reward_cnt(::google::protobuf::uint32 value) {
  set_has_reward_cnt();
  reward_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SmeltItem.reward_cnt)
}

// required uint32 yet_cnt = 3;
inline bool SmeltItem::has_yet_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SmeltItem::set_has_yet_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SmeltItem::clear_has_yet_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SmeltItem::clear_yet_cnt() {
  yet_cnt_ = 0u;
  clear_has_yet_cnt();
}
inline ::google::protobuf::uint32 SmeltItem::yet_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltItem.yet_cnt)
  return yet_cnt_;
}
inline void SmeltItem::set_yet_cnt(::google::protobuf::uint32 value) {
  set_has_yet_cnt();
  yet_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SmeltItem.yet_cnt)
}

// -------------------------------------------------------------------

// SmeltInfoReq

// -------------------------------------------------------------------

// SmeltInfoResp

// required uint32 total_smelt_cnt = 1;
inline bool SmeltInfoResp::has_total_smelt_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmeltInfoResp::set_has_total_smelt_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmeltInfoResp::clear_has_total_smelt_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmeltInfoResp::clear_total_smelt_cnt() {
  total_smelt_cnt_ = 0u;
  clear_has_total_smelt_cnt();
}
inline ::google::protobuf::uint32 SmeltInfoResp::total_smelt_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltInfoResp.total_smelt_cnt)
  return total_smelt_cnt_;
}
inline void SmeltInfoResp::set_total_smelt_cnt(::google::protobuf::uint32 value) {
  set_has_total_smelt_cnt();
  total_smelt_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SmeltInfoResp.total_smelt_cnt)
}

// repeated .ProtoActivity.SmeltItem items = 2;
inline int SmeltInfoResp::items_size() const {
  return items_.size();
}
inline void SmeltInfoResp::clear_items() {
  items_.Clear();
}
inline const ::ProtoActivity::SmeltItem& SmeltInfoResp::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltInfoResp.items)
  return items_.Get(index);
}
inline ::ProtoActivity::SmeltItem* SmeltInfoResp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.SmeltInfoResp.items)
  return items_.Mutable(index);
}
inline ::ProtoActivity::SmeltItem* SmeltInfoResp::add_items() {
  // @@protoc_insertion_point(field_add:ProtoActivity.SmeltInfoResp.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::SmeltItem >&
SmeltInfoResp::items() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.SmeltInfoResp.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::SmeltItem >*
SmeltInfoResp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.SmeltInfoResp.items)
  return &items_;
}

// -------------------------------------------------------------------

// SmeltRewardReq

// required uint32 id = 1;
inline bool SmeltRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmeltRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmeltRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmeltRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SmeltRewardReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltRewardReq.id)
  return id_;
}
inline void SmeltRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SmeltRewardReq.id)
}

// -------------------------------------------------------------------

// SmeltRewardResp

// required .ProtoActivity.SmeltItem item = 1;
inline bool SmeltRewardResp::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmeltRewardResp::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmeltRewardResp::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmeltRewardResp::clear_item() {
  if (item_ != NULL) item_->::ProtoActivity::SmeltItem::Clear();
  clear_has_item();
}
inline const ::ProtoActivity::SmeltItem& SmeltRewardResp::item() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltRewardResp.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoActivity::SmeltItem* SmeltRewardResp::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoActivity::SmeltItem;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.SmeltRewardResp.item)
  return item_;
}
inline ::ProtoActivity::SmeltItem* SmeltRewardResp::release_item() {
  clear_has_item();
  ::ProtoActivity::SmeltItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void SmeltRewardResp::set_allocated_item(::ProtoActivity::SmeltItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.SmeltRewardResp.item)
}

// required .DataCommon.EquipmentAllCPP equip = 2;
inline bool SmeltRewardResp::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SmeltRewardResp::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SmeltRewardResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SmeltRewardResp::clear_equip() {
  if (equip_ != NULL) equip_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equip();
}
inline const ::DataCommon::EquipmentAllCPP& SmeltRewardResp::equip() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SmeltRewardResp.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DataCommon::EquipmentAllCPP* SmeltRewardResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.SmeltRewardResp.equip)
  return equip_;
}
inline ::DataCommon::EquipmentAllCPP* SmeltRewardResp::release_equip() {
  clear_has_equip();
  ::DataCommon::EquipmentAllCPP* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void SmeltRewardResp::set_allocated_equip(::DataCommon::EquipmentAllCPP* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.SmeltRewardResp.equip)
}

// -------------------------------------------------------------------

// TouchGoldTombItem

// required uint32 id = 1;
inline bool TouchGoldTombItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchGoldTombItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchGoldTombItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchGoldTombItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TouchGoldTombItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldTombItem.id)
  return id_;
}
inline void TouchGoldTombItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldTombItem.id)
}

// required bool is_locked = 2;
inline bool TouchGoldTombItem::has_is_locked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TouchGoldTombItem::set_has_is_locked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TouchGoldTombItem::clear_has_is_locked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TouchGoldTombItem::clear_is_locked() {
  is_locked_ = false;
  clear_has_is_locked();
}
inline bool TouchGoldTombItem::is_locked() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldTombItem.is_locked)
  return is_locked_;
}
inline void TouchGoldTombItem::set_is_locked(bool value) {
  set_has_is_locked();
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldTombItem.is_locked)
}

// -------------------------------------------------------------------

// TouchGoldInfo

// repeated .ProtoActivity.TouchGoldTombItem tombs = 1;
inline int TouchGoldInfo::tombs_size() const {
  return tombs_.size();
}
inline void TouchGoldInfo::clear_tombs() {
  tombs_.Clear();
}
inline const ::ProtoActivity::TouchGoldTombItem& TouchGoldInfo::tombs(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.tombs)
  return tombs_.Get(index);
}
inline ::ProtoActivity::TouchGoldTombItem* TouchGoldInfo::mutable_tombs(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.TouchGoldInfo.tombs)
  return tombs_.Mutable(index);
}
inline ::ProtoActivity::TouchGoldTombItem* TouchGoldInfo::add_tombs() {
  // @@protoc_insertion_point(field_add:ProtoActivity.TouchGoldInfo.tombs)
  return tombs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::TouchGoldTombItem >&
TouchGoldInfo::tombs() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.TouchGoldInfo.tombs)
  return tombs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::TouchGoldTombItem >*
TouchGoldInfo::mutable_tombs() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.TouchGoldInfo.tombs)
  return &tombs_;
}

// required uint32 total_touch = 2;
inline bool TouchGoldInfo::has_total_touch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TouchGoldInfo::set_has_total_touch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TouchGoldInfo::clear_has_total_touch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TouchGoldInfo::clear_total_touch() {
  total_touch_ = 0u;
  clear_has_total_touch();
}
inline ::google::protobuf::uint32 TouchGoldInfo::total_touch() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.total_touch)
  return total_touch_;
}
inline void TouchGoldInfo::set_total_touch(::google::protobuf::uint32 value) {
  set_has_total_touch();
  total_touch_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.total_touch)
}

// required uint32 total_limit = 3;
inline bool TouchGoldInfo::has_total_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TouchGoldInfo::set_has_total_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TouchGoldInfo::clear_has_total_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TouchGoldInfo::clear_total_limit() {
  total_limit_ = 0u;
  clear_has_total_limit();
}
inline ::google::protobuf::uint32 TouchGoldInfo::total_limit() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.total_limit)
  return total_limit_;
}
inline void TouchGoldInfo::set_total_limit(::google::protobuf::uint32 value) {
  set_has_total_limit();
  total_limit_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.total_limit)
}

// required uint32 surplus = 4;
inline bool TouchGoldInfo::has_surplus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TouchGoldInfo::set_has_surplus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TouchGoldInfo::clear_has_surplus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TouchGoldInfo::clear_surplus() {
  surplus_ = 0u;
  clear_has_surplus();
}
inline ::google::protobuf::uint32 TouchGoldInfo::surplus() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.surplus)
  return surplus_;
}
inline void TouchGoldInfo::set_surplus(::google::protobuf::uint32 value) {
  set_has_surplus();
  surplus_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.surplus)
}

// repeated uint32 out = 5;
inline int TouchGoldInfo::out_size() const {
  return out_.size();
}
inline void TouchGoldInfo::clear_out() {
  out_.Clear();
}
inline ::google::protobuf::uint32 TouchGoldInfo::out(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.out)
  return out_.Get(index);
}
inline void TouchGoldInfo::set_out(int index, ::google::protobuf::uint32 value) {
  out_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.out)
}
inline void TouchGoldInfo::add_out(::google::protobuf::uint32 value) {
  out_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoActivity.TouchGoldInfo.out)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TouchGoldInfo::out() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.TouchGoldInfo.out)
  return out_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TouchGoldInfo::mutable_out() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.TouchGoldInfo.out)
  return &out_;
}

// required uint32 component = 6;
inline bool TouchGoldInfo::has_component() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TouchGoldInfo::set_has_component() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TouchGoldInfo::clear_has_component() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TouchGoldInfo::clear_component() {
  component_ = 0u;
  clear_has_component();
}
inline ::google::protobuf::uint32 TouchGoldInfo::component() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.component)
  return component_;
}
inline void TouchGoldInfo::set_component(::google::protobuf::uint32 value) {
  set_has_component();
  component_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.component)
}

// required uint32 cur_tomb_id = 7;
inline bool TouchGoldInfo::has_cur_tomb_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TouchGoldInfo::set_has_cur_tomb_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TouchGoldInfo::clear_has_cur_tomb_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TouchGoldInfo::clear_cur_tomb_id() {
  cur_tomb_id_ = 0u;
  clear_has_cur_tomb_id();
}
inline ::google::protobuf::uint32 TouchGoldInfo::cur_tomb_id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldInfo.cur_tomb_id)
  return cur_tomb_id_;
}
inline void TouchGoldInfo::set_cur_tomb_id(::google::protobuf::uint32 value) {
  set_has_cur_tomb_id();
  cur_tomb_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldInfo.cur_tomb_id)
}

// -------------------------------------------------------------------

// TouchGoldInfoReq

// -------------------------------------------------------------------

// TouchGoldOnceReq

// required uint32 index = 1;
inline bool TouchGoldOnceReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchGoldOnceReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchGoldOnceReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchGoldOnceReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TouchGoldOnceReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldOnceReq.index)
  return index_;
}
inline void TouchGoldOnceReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldOnceReq.index)
}

// -------------------------------------------------------------------

// TouchGoldAllReq

// -------------------------------------------------------------------

// TouchGoldUnlockReq

// required uint32 id = 1;
inline bool TouchGoldUnlockReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchGoldUnlockReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchGoldUnlockReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchGoldUnlockReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TouchGoldUnlockReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldUnlockReq.id)
  return id_;
}
inline void TouchGoldUnlockReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldUnlockReq.id)
}

// -------------------------------------------------------------------

// TouchGoldResp

// required .ProtoActivity.TouchGoldInfo info = 1;
inline bool TouchGoldResp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchGoldResp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchGoldResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchGoldResp::clear_info() {
  if (info_ != NULL) info_->::ProtoActivity::TouchGoldInfo::Clear();
  clear_has_info();
}
inline const ::ProtoActivity::TouchGoldInfo& TouchGoldResp::info() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoActivity::TouchGoldInfo* TouchGoldResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoActivity::TouchGoldInfo;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.TouchGoldResp.info)
  return info_;
}
inline ::ProtoActivity::TouchGoldInfo* TouchGoldResp::release_info() {
  clear_has_info();
  ::ProtoActivity::TouchGoldInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void TouchGoldResp::set_allocated_info(::ProtoActivity::TouchGoldInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.TouchGoldResp.info)
}

// required uint32 cash = 2;
inline bool TouchGoldResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TouchGoldResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TouchGoldResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TouchGoldResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 TouchGoldResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldResp.cash)
  return cash_;
}
inline void TouchGoldResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldResp.cash)
}

// -------------------------------------------------------------------

// TouchGoldResetReq

// -------------------------------------------------------------------

// TouchGoldSwitchReq

// required uint32 id = 1;
inline bool TouchGoldSwitchReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchGoldSwitchReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchGoldSwitchReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchGoldSwitchReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TouchGoldSwitchReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.TouchGoldSwitchReq.id)
  return id_;
}
inline void TouchGoldSwitchReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.TouchGoldSwitchReq.id)
}

// -------------------------------------------------------------------

// HugeDiscountItem

// required uint32 id = 1;
inline bool HugeDiscountItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HugeDiscountItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HugeDiscountItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HugeDiscountItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HugeDiscountItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountItem.id)
  return id_;
}
inline void HugeDiscountItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountItem.id)
}

// required uint32 buy_cnt = 2;
inline bool HugeDiscountItem::has_buy_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HugeDiscountItem::set_has_buy_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HugeDiscountItem::clear_has_buy_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HugeDiscountItem::clear_buy_cnt() {
  buy_cnt_ = 0u;
  clear_has_buy_cnt();
}
inline ::google::protobuf::uint32 HugeDiscountItem::buy_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountItem.buy_cnt)
  return buy_cnt_;
}
inline void HugeDiscountItem::set_buy_cnt(::google::protobuf::uint32 value) {
  set_has_buy_cnt();
  buy_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountItem.buy_cnt)
}

// -------------------------------------------------------------------

// HugeDiscountPage

// required uint32 page_id = 1;
inline bool HugeDiscountPage::has_page_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HugeDiscountPage::set_has_page_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HugeDiscountPage::clear_has_page_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HugeDiscountPage::clear_page_id() {
  page_id_ = 0u;
  clear_has_page_id();
}
inline ::google::protobuf::uint32 HugeDiscountPage::page_id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountPage.page_id)
  return page_id_;
}
inline void HugeDiscountPage::set_page_id(::google::protobuf::uint32 value) {
  set_has_page_id();
  page_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountPage.page_id)
}

// repeated .ProtoActivity.HugeDiscountItem goods = 2;
inline int HugeDiscountPage::goods_size() const {
  return goods_.size();
}
inline void HugeDiscountPage::clear_goods() {
  goods_.Clear();
}
inline const ::ProtoActivity::HugeDiscountItem& HugeDiscountPage::goods(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountPage.goods)
  return goods_.Get(index);
}
inline ::ProtoActivity::HugeDiscountItem* HugeDiscountPage::mutable_goods(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.HugeDiscountPage.goods)
  return goods_.Mutable(index);
}
inline ::ProtoActivity::HugeDiscountItem* HugeDiscountPage::add_goods() {
  // @@protoc_insertion_point(field_add:ProtoActivity.HugeDiscountPage.goods)
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountItem >&
HugeDiscountPage::goods() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.HugeDiscountPage.goods)
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountItem >*
HugeDiscountPage::mutable_goods() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.HugeDiscountPage.goods)
  return &goods_;
}

// -------------------------------------------------------------------

// HugeDiscountInfoReq

// -------------------------------------------------------------------

// HugeDiscountInfoResp

// repeated .ProtoActivity.HugeDiscountPage items = 1;
inline int HugeDiscountInfoResp::items_size() const {
  return items_.size();
}
inline void HugeDiscountInfoResp::clear_items() {
  items_.Clear();
}
inline const ::ProtoActivity::HugeDiscountPage& HugeDiscountInfoResp::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountInfoResp.items)
  return items_.Get(index);
}
inline ::ProtoActivity::HugeDiscountPage* HugeDiscountInfoResp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoActivity.HugeDiscountInfoResp.items)
  return items_.Mutable(index);
}
inline ::ProtoActivity::HugeDiscountPage* HugeDiscountInfoResp::add_items() {
  // @@protoc_insertion_point(field_add:ProtoActivity.HugeDiscountInfoResp.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountPage >&
HugeDiscountInfoResp::items() const {
  // @@protoc_insertion_point(field_list:ProtoActivity.HugeDiscountInfoResp.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoActivity::HugeDiscountPage >*
HugeDiscountInfoResp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoActivity.HugeDiscountInfoResp.items)
  return &items_;
}

// required uint32 recharge = 2;
inline bool HugeDiscountInfoResp::has_recharge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HugeDiscountInfoResp::set_has_recharge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HugeDiscountInfoResp::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HugeDiscountInfoResp::clear_recharge() {
  recharge_ = 0u;
  clear_has_recharge();
}
inline ::google::protobuf::uint32 HugeDiscountInfoResp::recharge() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountInfoResp.recharge)
  return recharge_;
}
inline void HugeDiscountInfoResp::set_recharge(::google::protobuf::uint32 value) {
  set_has_recharge();
  recharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountInfoResp.recharge)
}

// -------------------------------------------------------------------

// HugeDiscountBuyReq

// required uint32 page_id = 1;
inline bool HugeDiscountBuyReq::has_page_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HugeDiscountBuyReq::set_has_page_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HugeDiscountBuyReq::clear_has_page_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HugeDiscountBuyReq::clear_page_id() {
  page_id_ = 0u;
  clear_has_page_id();
}
inline ::google::protobuf::uint32 HugeDiscountBuyReq::page_id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyReq.page_id)
  return page_id_;
}
inline void HugeDiscountBuyReq::set_page_id(::google::protobuf::uint32 value) {
  set_has_page_id();
  page_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountBuyReq.page_id)
}

// required uint32 id = 2;
inline bool HugeDiscountBuyReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HugeDiscountBuyReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HugeDiscountBuyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HugeDiscountBuyReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HugeDiscountBuyReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyReq.id)
  return id_;
}
inline void HugeDiscountBuyReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountBuyReq.id)
}

// -------------------------------------------------------------------

// HugeDiscountBuyResp

// required uint32 page_id = 1;
inline bool HugeDiscountBuyResp::has_page_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HugeDiscountBuyResp::set_has_page_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HugeDiscountBuyResp::clear_has_page_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HugeDiscountBuyResp::clear_page_id() {
  page_id_ = 0u;
  clear_has_page_id();
}
inline ::google::protobuf::uint32 HugeDiscountBuyResp::page_id() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyResp.page_id)
  return page_id_;
}
inline void HugeDiscountBuyResp::set_page_id(::google::protobuf::uint32 value) {
  set_has_page_id();
  page_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountBuyResp.page_id)
}

// required .ProtoActivity.HugeDiscountItem item_info = 2;
inline bool HugeDiscountBuyResp::has_item_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HugeDiscountBuyResp::set_has_item_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HugeDiscountBuyResp::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HugeDiscountBuyResp::clear_item_info() {
  if (item_info_ != NULL) item_info_->::ProtoActivity::HugeDiscountItem::Clear();
  clear_has_item_info();
}
inline const ::ProtoActivity::HugeDiscountItem& HugeDiscountBuyResp::item_info() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyResp.item_info)
  return item_info_ != NULL ? *item_info_ : *default_instance_->item_info_;
}
inline ::ProtoActivity::HugeDiscountItem* HugeDiscountBuyResp::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == NULL) item_info_ = new ::ProtoActivity::HugeDiscountItem;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.HugeDiscountBuyResp.item_info)
  return item_info_;
}
inline ::ProtoActivity::HugeDiscountItem* HugeDiscountBuyResp::release_item_info() {
  clear_has_item_info();
  ::ProtoActivity::HugeDiscountItem* temp = item_info_;
  item_info_ = NULL;
  return temp;
}
inline void HugeDiscountBuyResp::set_allocated_item_info(::ProtoActivity::HugeDiscountItem* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.HugeDiscountBuyResp.item_info)
}

// required uint32 cash = 3;
inline bool HugeDiscountBuyResp::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HugeDiscountBuyResp::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HugeDiscountBuyResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HugeDiscountBuyResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 HugeDiscountBuyResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyResp.cash)
  return cash_;
}
inline void HugeDiscountBuyResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.HugeDiscountBuyResp.cash)
}

// required .DataCommon.EquipmentAllCPP equip = 4;
inline bool HugeDiscountBuyResp::has_equip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HugeDiscountBuyResp::set_has_equip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HugeDiscountBuyResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HugeDiscountBuyResp::clear_equip() {
  if (equip_ != NULL) equip_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equip();
}
inline const ::DataCommon::EquipmentAllCPP& HugeDiscountBuyResp::equip() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.HugeDiscountBuyResp.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DataCommon::EquipmentAllCPP* HugeDiscountBuyResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.HugeDiscountBuyResp.equip)
  return equip_;
}
inline ::DataCommon::EquipmentAllCPP* HugeDiscountBuyResp::release_equip() {
  clear_has_equip();
  ::DataCommon::EquipmentAllCPP* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void HugeDiscountBuyResp::set_allocated_equip(::DataCommon::EquipmentAllCPP* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.HugeDiscountBuyResp.equip)
}

// -------------------------------------------------------------------

// OpenLittleChargeWindowReq

// -------------------------------------------------------------------

// OpenLittleChargeWindowResp

// required uint32 cash = 1;
inline bool OpenLittleChargeWindowResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenLittleChargeWindowResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenLittleChargeWindowResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenLittleChargeWindowResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 OpenLittleChargeWindowResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.OpenLittleChargeWindowResp.cash)
  return cash_;
}
inline void OpenLittleChargeWindowResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.OpenLittleChargeWindowResp.cash)
}

// -------------------------------------------------------------------

// LittleChargeRewardReq

// -------------------------------------------------------------------

// LittleChargeRewardResp

// required uint32 shadow = 1;
inline bool LittleChargeRewardResp::has_shadow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LittleChargeRewardResp::set_has_shadow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LittleChargeRewardResp::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LittleChargeRewardResp::clear_shadow() {
  shadow_ = 0u;
  clear_has_shadow();
}
inline ::google::protobuf::uint32 LittleChargeRewardResp::shadow() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LittleChargeRewardResp.shadow)
  return shadow_;
}
inline void LittleChargeRewardResp::set_shadow(::google::protobuf::uint32 value) {
  set_has_shadow();
  shadow_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.LittleChargeRewardResp.shadow)
}

// required .DataCommon.EquipmentAllCPP equip = 2;
inline bool LittleChargeRewardResp::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LittleChargeRewardResp::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LittleChargeRewardResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LittleChargeRewardResp::clear_equip() {
  if (equip_ != NULL) equip_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equip();
}
inline const ::DataCommon::EquipmentAllCPP& LittleChargeRewardResp::equip() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.LittleChargeRewardResp.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DataCommon::EquipmentAllCPP* LittleChargeRewardResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.LittleChargeRewardResp.equip)
  return equip_;
}
inline ::DataCommon::EquipmentAllCPP* LittleChargeRewardResp::release_equip() {
  clear_has_equip();
  ::DataCommon::EquipmentAllCPP* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void LittleChargeRewardResp::set_allocated_equip(::DataCommon::EquipmentAllCPP* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.LittleChargeRewardResp.equip)
}

// -------------------------------------------------------------------

// OpenEnlivenKillWindowReq

// -------------------------------------------------------------------

// OpenEnlivenKillWindowResp

// required uint32 kill = 1;
inline bool OpenEnlivenKillWindowResp::has_kill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenEnlivenKillWindowResp::set_has_kill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenEnlivenKillWindowResp::clear_has_kill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenEnlivenKillWindowResp::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 OpenEnlivenKillWindowResp::kill() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.OpenEnlivenKillWindowResp.kill)
  return kill_;
}
inline void OpenEnlivenKillWindowResp::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.OpenEnlivenKillWindowResp.kill)
}

// required uint32 shadow = 2;
inline bool OpenEnlivenKillWindowResp::has_shadow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenEnlivenKillWindowResp::set_has_shadow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenEnlivenKillWindowResp::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenEnlivenKillWindowResp::clear_shadow() {
  shadow_ = 0u;
  clear_has_shadow();
}
inline ::google::protobuf::uint32 OpenEnlivenKillWindowResp::shadow() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.OpenEnlivenKillWindowResp.shadow)
  return shadow_;
}
inline void OpenEnlivenKillWindowResp::set_shadow(::google::protobuf::uint32 value) {
  set_has_shadow();
  shadow_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.OpenEnlivenKillWindowResp.shadow)
}

// -------------------------------------------------------------------

// ReceiveDailyKillRewardReq

// required uint32 index = 1;
inline bool ReceiveDailyKillRewardReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveDailyKillRewardReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveDailyKillRewardReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveDailyKillRewardReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ReceiveDailyKillRewardReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.ReceiveDailyKillRewardReq.index)
  return index_;
}
inline void ReceiveDailyKillRewardReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.ReceiveDailyKillRewardReq.index)
}

// -------------------------------------------------------------------

// ReceiveDailyKillRewardResp

// required uint32 shadow = 1;
inline bool ReceiveDailyKillRewardResp::has_shadow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveDailyKillRewardResp::set_has_shadow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveDailyKillRewardResp::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveDailyKillRewardResp::clear_shadow() {
  shadow_ = 0u;
  clear_has_shadow();
}
inline ::google::protobuf::uint32 ReceiveDailyKillRewardResp::shadow() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.ReceiveDailyKillRewardResp.shadow)
  return shadow_;
}
inline void ReceiveDailyKillRewardResp::set_shadow(::google::protobuf::uint32 value) {
  set_has_shadow();
  shadow_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.ReceiveDailyKillRewardResp.shadow)
}

// required .User.RewardBagInfo reward = 2;
inline bool ReceiveDailyKillRewardResp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveDailyKillRewardResp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveDailyKillRewardResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveDailyKillRewardResp::clear_reward() {
  if (reward_ != NULL) reward_->::User::RewardBagInfo::Clear();
  clear_has_reward();
}
inline const ::User::RewardBagInfo& ReceiveDailyKillRewardResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.ReceiveDailyKillRewardResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::User::RewardBagInfo* ReceiveDailyKillRewardResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::User::RewardBagInfo;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.ReceiveDailyKillRewardResp.reward)
  return reward_;
}
inline ::User::RewardBagInfo* ReceiveDailyKillRewardResp::release_reward() {
  clear_has_reward();
  ::User::RewardBagInfo* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ReceiveDailyKillRewardResp::set_allocated_reward(::User::RewardBagInfo* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.ReceiveDailyKillRewardResp.reward)
}

// -------------------------------------------------------------------

// SellComponentCPP

// required uint32 num1 = 1;
inline bool SellComponentCPP::has_num1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellComponentCPP::set_has_num1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellComponentCPP::clear_has_num1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellComponentCPP::clear_num1() {
  num1_ = 0u;
  clear_has_num1();
}
inline ::google::protobuf::uint32 SellComponentCPP::num1() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SellComponentCPP.num1)
  return num1_;
}
inline void SellComponentCPP::set_num1(::google::protobuf::uint32 value) {
  set_has_num1();
  num1_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SellComponentCPP.num1)
}

// required uint32 num2 = 2;
inline bool SellComponentCPP::has_num2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellComponentCPP::set_has_num2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellComponentCPP::clear_has_num2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellComponentCPP::clear_num2() {
  num2_ = 0u;
  clear_has_num2();
}
inline ::google::protobuf::uint32 SellComponentCPP::num2() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.SellComponentCPP.num2)
  return num2_;
}
inline void SellComponentCPP::set_num2(::google::protobuf::uint32 value) {
  set_has_num2();
  num2_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.SellComponentCPP.num2)
}

// -------------------------------------------------------------------

// OpenSellComponentWindowReq

// -------------------------------------------------------------------

// OpenSellComponentWindowResp

// required .ProtoActivity.SellComponentCPP sellinfo = 1;
inline bool OpenSellComponentWindowResp::has_sellinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenSellComponentWindowResp::set_has_sellinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenSellComponentWindowResp::clear_has_sellinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenSellComponentWindowResp::clear_sellinfo() {
  if (sellinfo_ != NULL) sellinfo_->::ProtoActivity::SellComponentCPP::Clear();
  clear_has_sellinfo();
}
inline const ::ProtoActivity::SellComponentCPP& OpenSellComponentWindowResp::sellinfo() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.OpenSellComponentWindowResp.sellinfo)
  return sellinfo_ != NULL ? *sellinfo_ : *default_instance_->sellinfo_;
}
inline ::ProtoActivity::SellComponentCPP* OpenSellComponentWindowResp::mutable_sellinfo() {
  set_has_sellinfo();
  if (sellinfo_ == NULL) sellinfo_ = new ::ProtoActivity::SellComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.OpenSellComponentWindowResp.sellinfo)
  return sellinfo_;
}
inline ::ProtoActivity::SellComponentCPP* OpenSellComponentWindowResp::release_sellinfo() {
  clear_has_sellinfo();
  ::ProtoActivity::SellComponentCPP* temp = sellinfo_;
  sellinfo_ = NULL;
  return temp;
}
inline void OpenSellComponentWindowResp::set_allocated_sellinfo(::ProtoActivity::SellComponentCPP* sellinfo) {
  delete sellinfo_;
  sellinfo_ = sellinfo;
  if (sellinfo) {
    set_has_sellinfo();
  } else {
    clear_has_sellinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.OpenSellComponentWindowResp.sellinfo)
}

// -------------------------------------------------------------------

// BuyComponentReq

// required uint32 index = 1;
inline bool BuyComponentReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyComponentReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyComponentReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyComponentReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 BuyComponentReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.BuyComponentReq.index)
  return index_;
}
inline void BuyComponentReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.BuyComponentReq.index)
}

// -------------------------------------------------------------------

// BuyComponentResp

// required .ProtoActivity.SellComponentCPP sellinfo = 1;
inline bool BuyComponentResp::has_sellinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyComponentResp::set_has_sellinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyComponentResp::clear_has_sellinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyComponentResp::clear_sellinfo() {
  if (sellinfo_ != NULL) sellinfo_->::ProtoActivity::SellComponentCPP::Clear();
  clear_has_sellinfo();
}
inline const ::ProtoActivity::SellComponentCPP& BuyComponentResp::sellinfo() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.BuyComponentResp.sellinfo)
  return sellinfo_ != NULL ? *sellinfo_ : *default_instance_->sellinfo_;
}
inline ::ProtoActivity::SellComponentCPP* BuyComponentResp::mutable_sellinfo() {
  set_has_sellinfo();
  if (sellinfo_ == NULL) sellinfo_ = new ::ProtoActivity::SellComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.BuyComponentResp.sellinfo)
  return sellinfo_;
}
inline ::ProtoActivity::SellComponentCPP* BuyComponentResp::release_sellinfo() {
  clear_has_sellinfo();
  ::ProtoActivity::SellComponentCPP* temp = sellinfo_;
  sellinfo_ = NULL;
  return temp;
}
inline void BuyComponentResp::set_allocated_sellinfo(::ProtoActivity::SellComponentCPP* sellinfo) {
  delete sellinfo_;
  sellinfo_ = sellinfo;
  if (sellinfo) {
    set_has_sellinfo();
  } else {
    clear_has_sellinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.BuyComponentResp.sellinfo)
}

// required .User.RewardBagInfo reward = 2;
inline bool BuyComponentResp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyComponentResp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyComponentResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyComponentResp::clear_reward() {
  if (reward_ != NULL) reward_->::User::RewardBagInfo::Clear();
  clear_has_reward();
}
inline const ::User::RewardBagInfo& BuyComponentResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.BuyComponentResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::User::RewardBagInfo* BuyComponentResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::User::RewardBagInfo;
  // @@protoc_insertion_point(field_mutable:ProtoActivity.BuyComponentResp.reward)
  return reward_;
}
inline ::User::RewardBagInfo* BuyComponentResp::release_reward() {
  clear_has_reward();
  ::User::RewardBagInfo* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void BuyComponentResp::set_allocated_reward(::User::RewardBagInfo* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoActivity.BuyComponentResp.reward)
}

// required uint32 cash = 3;
inline bool BuyComponentResp::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyComponentResp::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyComponentResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyComponentResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 BuyComponentResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.BuyComponentResp.cash)
  return cash_;
}
inline void BuyComponentResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.BuyComponentResp.cash)
}

// required uint32 index = 4;
inline bool BuyComponentResp::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyComponentResp::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyComponentResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyComponentResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 BuyComponentResp::index() const {
  // @@protoc_insertion_point(field_get:ProtoActivity.BuyComponentResp.index)
  return index_;
}
inline void BuyComponentResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoActivity.BuyComponentResp.index)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoActivity_2eproto__INCLUDED
