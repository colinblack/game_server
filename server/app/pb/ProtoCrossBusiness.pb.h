// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoCrossBusiness.proto

#ifndef PROTOBUF_ProtoCrossBusiness_2eproto__INCLUDED
#define PROTOBUF_ProtoCrossBusiness_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoCrossBusiness {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

class CrossBusinessCPP;
class BusinessOpenWindowReq;
class BusinessOpenWindowResp;
class BusinessRefreshReq;
class BusinessRefreshResp;
class BusinessPurchaseReq;
class BusinessPurchaseResp;

// ===================================================================

class CrossBusinessCPP : public ::google::protobuf::Message {
 public:
  CrossBusinessCPP();
  virtual ~CrossBusinessCPP();

  CrossBusinessCPP(const CrossBusinessCPP& from);

  inline CrossBusinessCPP& operator=(const CrossBusinessCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrossBusinessCPP& default_instance();

  void Swap(CrossBusinessCPP* other);

  // implements Message ----------------------------------------------

  CrossBusinessCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrossBusinessCPP& from);
  void MergeFrom(const CrossBusinessCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 refreshts = 1;
  inline bool has_refreshts() const;
  inline void clear_refreshts();
  static const int kRefreshtsFieldNumber = 1;
  inline ::google::protobuf::uint32 refreshts() const;
  inline void set_refreshts(::google::protobuf::uint32 value);

  // required uint32 slot1 = 2;
  inline bool has_slot1() const;
  inline void clear_slot1();
  static const int kSlot1FieldNumber = 2;
  inline ::google::protobuf::uint32 slot1() const;
  inline void set_slot1(::google::protobuf::uint32 value);

  // required uint32 slot2 = 3;
  inline bool has_slot2() const;
  inline void clear_slot2();
  static const int kSlot2FieldNumber = 3;
  inline ::google::protobuf::uint32 slot2() const;
  inline void set_slot2(::google::protobuf::uint32 value);

  // required uint32 slot3 = 4;
  inline bool has_slot3() const;
  inline void clear_slot3();
  static const int kSlot3FieldNumber = 4;
  inline ::google::protobuf::uint32 slot3() const;
  inline void set_slot3(::google::protobuf::uint32 value);

  // required uint32 slot4 = 5;
  inline bool has_slot4() const;
  inline void clear_slot4();
  static const int kSlot4FieldNumber = 5;
  inline ::google::protobuf::uint32 slot4() const;
  inline void set_slot4(::google::protobuf::uint32 value);

  // required uint32 slot5 = 6;
  inline bool has_slot5() const;
  inline void clear_slot5();
  static const int kSlot5FieldNumber = 6;
  inline ::google::protobuf::uint32 slot5() const;
  inline void set_slot5(::google::protobuf::uint32 value);

  // required uint32 slot6 = 7;
  inline bool has_slot6() const;
  inline void clear_slot6();
  static const int kSlot6FieldNumber = 7;
  inline ::google::protobuf::uint32 slot6() const;
  inline void set_slot6(::google::protobuf::uint32 value);

  // required uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.CrossBusinessCPP)
 private:
  inline void set_has_refreshts();
  inline void clear_has_refreshts();
  inline void set_has_slot1();
  inline void clear_has_slot1();
  inline void set_has_slot2();
  inline void clear_has_slot2();
  inline void set_has_slot3();
  inline void clear_has_slot3();
  inline void set_has_slot4();
  inline void clear_has_slot4();
  inline void set_has_slot5();
  inline void clear_has_slot5();
  inline void set_has_slot6();
  inline void clear_has_slot6();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 refreshts_;
  ::google::protobuf::uint32 slot1_;
  ::google::protobuf::uint32 slot2_;
  ::google::protobuf::uint32 slot3_;
  ::google::protobuf::uint32 slot4_;
  ::google::protobuf::uint32 slot5_;
  ::google::protobuf::uint32 slot6_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static CrossBusinessCPP* default_instance_;
};
// -------------------------------------------------------------------

class BusinessOpenWindowReq : public ::google::protobuf::Message {
 public:
  BusinessOpenWindowReq();
  virtual ~BusinessOpenWindowReq();

  BusinessOpenWindowReq(const BusinessOpenWindowReq& from);

  inline BusinessOpenWindowReq& operator=(const BusinessOpenWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessOpenWindowReq& default_instance();

  void Swap(BusinessOpenWindowReq* other);

  // implements Message ----------------------------------------------

  BusinessOpenWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessOpenWindowReq& from);
  void MergeFrom(const BusinessOpenWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessOpenWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessOpenWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class BusinessOpenWindowResp : public ::google::protobuf::Message {
 public:
  BusinessOpenWindowResp();
  virtual ~BusinessOpenWindowResp();

  BusinessOpenWindowResp(const BusinessOpenWindowResp& from);

  inline BusinessOpenWindowResp& operator=(const BusinessOpenWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessOpenWindowResp& default_instance();

  void Swap(BusinessOpenWindowResp* other);

  // implements Message ----------------------------------------------

  BusinessOpenWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessOpenWindowResp& from);
  void MergeFrom(const BusinessOpenWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 1;
  inline bool has_crossbusiness() const;
  inline void clear_crossbusiness();
  static const int kCrossbusinessFieldNumber = 1;
  inline const ::ProtoCrossBusiness::CrossBusinessCPP& crossbusiness() const;
  inline ::ProtoCrossBusiness::CrossBusinessCPP* mutable_crossbusiness();
  inline ::ProtoCrossBusiness::CrossBusinessCPP* release_crossbusiness();
  inline void set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessOpenWindowResp)
 private:
  inline void set_has_crossbusiness();
  inline void clear_has_crossbusiness();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessOpenWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class BusinessRefreshReq : public ::google::protobuf::Message {
 public:
  BusinessRefreshReq();
  virtual ~BusinessRefreshReq();

  BusinessRefreshReq(const BusinessRefreshReq& from);

  inline BusinessRefreshReq& operator=(const BusinessRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessRefreshReq& default_instance();

  void Swap(BusinessRefreshReq* other);

  // implements Message ----------------------------------------------

  BusinessRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessRefreshReq& from);
  void MergeFrom(const BusinessRefreshReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool iscash = 1;
  inline bool has_iscash() const;
  inline void clear_iscash();
  static const int kIscashFieldNumber = 1;
  inline bool iscash() const;
  inline void set_iscash(bool value);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessRefreshReq)
 private:
  inline void set_has_iscash();
  inline void clear_has_iscash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool iscash_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class BusinessRefreshResp : public ::google::protobuf::Message {
 public:
  BusinessRefreshResp();
  virtual ~BusinessRefreshResp();

  BusinessRefreshResp(const BusinessRefreshResp& from);

  inline BusinessRefreshResp& operator=(const BusinessRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessRefreshResp& default_instance();

  void Swap(BusinessRefreshResp* other);

  // implements Message ----------------------------------------------

  BusinessRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessRefreshResp& from);
  void MergeFrom(const BusinessRefreshResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 1;
  inline bool has_crossbusiness() const;
  inline void clear_crossbusiness();
  static const int kCrossbusinessFieldNumber = 1;
  inline const ::ProtoCrossBusiness::CrossBusinessCPP& crossbusiness() const;
  inline ::ProtoCrossBusiness::CrossBusinessCPP* mutable_crossbusiness();
  inline ::ProtoCrossBusiness::CrossBusinessCPP* release_crossbusiness();
  inline void set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessRefreshResp)
 private:
  inline void set_has_crossbusiness();
  inline void clear_has_crossbusiness();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class BusinessPurchaseReq : public ::google::protobuf::Message {
 public:
  BusinessPurchaseReq();
  virtual ~BusinessPurchaseReq();

  BusinessPurchaseReq(const BusinessPurchaseReq& from);

  inline BusinessPurchaseReq& operator=(const BusinessPurchaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessPurchaseReq& default_instance();

  void Swap(BusinessPurchaseReq* other);

  // implements Message ----------------------------------------------

  BusinessPurchaseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessPurchaseReq& from);
  void MergeFrom(const BusinessPurchaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessPurchaseReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessPurchaseReq* default_instance_;
};
// -------------------------------------------------------------------

class BusinessPurchaseResp : public ::google::protobuf::Message {
 public:
  BusinessPurchaseResp();
  virtual ~BusinessPurchaseResp();

  BusinessPurchaseResp(const BusinessPurchaseResp& from);

  inline BusinessPurchaseResp& operator=(const BusinessPurchaseResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessPurchaseResp& default_instance();

  void Swap(BusinessPurchaseResp* other);

  // implements Message ----------------------------------------------

  BusinessPurchaseResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusinessPurchaseResp& from);
  void MergeFrom(const BusinessPurchaseResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.RewardBagInfo goods = 1;
  inline bool has_goods() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 1;
  inline const ::User::RewardBagInfo& goods() const;
  inline ::User::RewardBagInfo* mutable_goods();
  inline ::User::RewardBagInfo* release_goods();
  inline void set_allocated_goods(::User::RewardBagInfo* goods);

  // required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 2;
  inline bool has_crossbusiness() const;
  inline void clear_crossbusiness();
  static const int kCrossbusinessFieldNumber = 2;
  inline const ::ProtoCrossBusiness::CrossBusinessCPP& crossbusiness() const;
  inline ::ProtoCrossBusiness::CrossBusinessCPP* mutable_crossbusiness();
  inline ::ProtoCrossBusiness::CrossBusinessCPP* release_crossbusiness();
  inline void set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoCrossBusiness.BusinessPurchaseResp)
 private:
  inline void set_has_goods();
  inline void clear_has_goods();
  inline void set_has_crossbusiness();
  inline void clear_has_crossbusiness();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::RewardBagInfo* goods_;
  ::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_AssignDesc_ProtoCrossBusiness_2eproto();
  friend void protobuf_ShutdownFile_ProtoCrossBusiness_2eproto();

  void InitAsDefaultInstance();
  static BusinessPurchaseResp* default_instance_;
};
// ===================================================================


// ===================================================================

// CrossBusinessCPP

// required uint32 refreshts = 1;
inline bool CrossBusinessCPP::has_refreshts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrossBusinessCPP::set_has_refreshts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrossBusinessCPP::clear_has_refreshts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrossBusinessCPP::clear_refreshts() {
  refreshts_ = 0u;
  clear_has_refreshts();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::refreshts() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.refreshts)
  return refreshts_;
}
inline void CrossBusinessCPP::set_refreshts(::google::protobuf::uint32 value) {
  set_has_refreshts();
  refreshts_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.refreshts)
}

// required uint32 slot1 = 2;
inline bool CrossBusinessCPP::has_slot1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrossBusinessCPP::set_has_slot1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrossBusinessCPP::clear_has_slot1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrossBusinessCPP::clear_slot1() {
  slot1_ = 0u;
  clear_has_slot1();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot1() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot1)
  return slot1_;
}
inline void CrossBusinessCPP::set_slot1(::google::protobuf::uint32 value) {
  set_has_slot1();
  slot1_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot1)
}

// required uint32 slot2 = 3;
inline bool CrossBusinessCPP::has_slot2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrossBusinessCPP::set_has_slot2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrossBusinessCPP::clear_has_slot2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrossBusinessCPP::clear_slot2() {
  slot2_ = 0u;
  clear_has_slot2();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot2() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot2)
  return slot2_;
}
inline void CrossBusinessCPP::set_slot2(::google::protobuf::uint32 value) {
  set_has_slot2();
  slot2_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot2)
}

// required uint32 slot3 = 4;
inline bool CrossBusinessCPP::has_slot3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrossBusinessCPP::set_has_slot3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrossBusinessCPP::clear_has_slot3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrossBusinessCPP::clear_slot3() {
  slot3_ = 0u;
  clear_has_slot3();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot3() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot3)
  return slot3_;
}
inline void CrossBusinessCPP::set_slot3(::google::protobuf::uint32 value) {
  set_has_slot3();
  slot3_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot3)
}

// required uint32 slot4 = 5;
inline bool CrossBusinessCPP::has_slot4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CrossBusinessCPP::set_has_slot4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CrossBusinessCPP::clear_has_slot4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CrossBusinessCPP::clear_slot4() {
  slot4_ = 0u;
  clear_has_slot4();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot4() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot4)
  return slot4_;
}
inline void CrossBusinessCPP::set_slot4(::google::protobuf::uint32 value) {
  set_has_slot4();
  slot4_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot4)
}

// required uint32 slot5 = 6;
inline bool CrossBusinessCPP::has_slot5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CrossBusinessCPP::set_has_slot5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CrossBusinessCPP::clear_has_slot5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CrossBusinessCPP::clear_slot5() {
  slot5_ = 0u;
  clear_has_slot5();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot5() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot5)
  return slot5_;
}
inline void CrossBusinessCPP::set_slot5(::google::protobuf::uint32 value) {
  set_has_slot5();
  slot5_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot5)
}

// required uint32 slot6 = 7;
inline bool CrossBusinessCPP::has_slot6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CrossBusinessCPP::set_has_slot6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CrossBusinessCPP::clear_has_slot6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CrossBusinessCPP::clear_slot6() {
  slot6_ = 0u;
  clear_has_slot6();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::slot6() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.slot6)
  return slot6_;
}
inline void CrossBusinessCPP::set_slot6(::google::protobuf::uint32 value) {
  set_has_slot6();
  slot6_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.slot6)
}

// required uint32 status = 8;
inline bool CrossBusinessCPP::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CrossBusinessCPP::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CrossBusinessCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CrossBusinessCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CrossBusinessCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.CrossBusinessCPP.status)
  return status_;
}
inline void CrossBusinessCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.CrossBusinessCPP.status)
}

// -------------------------------------------------------------------

// BusinessOpenWindowReq

// -------------------------------------------------------------------

// BusinessOpenWindowResp

// required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 1;
inline bool BusinessOpenWindowResp::has_crossbusiness() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BusinessOpenWindowResp::set_has_crossbusiness() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BusinessOpenWindowResp::clear_has_crossbusiness() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BusinessOpenWindowResp::clear_crossbusiness() {
  if (crossbusiness_ != NULL) crossbusiness_->::ProtoCrossBusiness::CrossBusinessCPP::Clear();
  clear_has_crossbusiness();
}
inline const ::ProtoCrossBusiness::CrossBusinessCPP& BusinessOpenWindowResp::crossbusiness() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessOpenWindowResp.crossbusiness)
  return crossbusiness_ != NULL ? *crossbusiness_ : *default_instance_->crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessOpenWindowResp::mutable_crossbusiness() {
  set_has_crossbusiness();
  if (crossbusiness_ == NULL) crossbusiness_ = new ::ProtoCrossBusiness::CrossBusinessCPP;
  // @@protoc_insertion_point(field_mutable:ProtoCrossBusiness.BusinessOpenWindowResp.crossbusiness)
  return crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessOpenWindowResp::release_crossbusiness() {
  clear_has_crossbusiness();
  ::ProtoCrossBusiness::CrossBusinessCPP* temp = crossbusiness_;
  crossbusiness_ = NULL;
  return temp;
}
inline void BusinessOpenWindowResp::set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness) {
  delete crossbusiness_;
  crossbusiness_ = crossbusiness;
  if (crossbusiness) {
    set_has_crossbusiness();
  } else {
    clear_has_crossbusiness();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoCrossBusiness.BusinessOpenWindowResp.crossbusiness)
}

// -------------------------------------------------------------------

// BusinessRefreshReq

// required bool iscash = 1;
inline bool BusinessRefreshReq::has_iscash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BusinessRefreshReq::set_has_iscash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BusinessRefreshReq::clear_has_iscash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BusinessRefreshReq::clear_iscash() {
  iscash_ = false;
  clear_has_iscash();
}
inline bool BusinessRefreshReq::iscash() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessRefreshReq.iscash)
  return iscash_;
}
inline void BusinessRefreshReq::set_iscash(bool value) {
  set_has_iscash();
  iscash_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.BusinessRefreshReq.iscash)
}

// -------------------------------------------------------------------

// BusinessRefreshResp

// required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 1;
inline bool BusinessRefreshResp::has_crossbusiness() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BusinessRefreshResp::set_has_crossbusiness() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BusinessRefreshResp::clear_has_crossbusiness() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BusinessRefreshResp::clear_crossbusiness() {
  if (crossbusiness_ != NULL) crossbusiness_->::ProtoCrossBusiness::CrossBusinessCPP::Clear();
  clear_has_crossbusiness();
}
inline const ::ProtoCrossBusiness::CrossBusinessCPP& BusinessRefreshResp::crossbusiness() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessRefreshResp.crossbusiness)
  return crossbusiness_ != NULL ? *crossbusiness_ : *default_instance_->crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessRefreshResp::mutable_crossbusiness() {
  set_has_crossbusiness();
  if (crossbusiness_ == NULL) crossbusiness_ = new ::ProtoCrossBusiness::CrossBusinessCPP;
  // @@protoc_insertion_point(field_mutable:ProtoCrossBusiness.BusinessRefreshResp.crossbusiness)
  return crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessRefreshResp::release_crossbusiness() {
  clear_has_crossbusiness();
  ::ProtoCrossBusiness::CrossBusinessCPP* temp = crossbusiness_;
  crossbusiness_ = NULL;
  return temp;
}
inline void BusinessRefreshResp::set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness) {
  delete crossbusiness_;
  crossbusiness_ = crossbusiness;
  if (crossbusiness) {
    set_has_crossbusiness();
  } else {
    clear_has_crossbusiness();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoCrossBusiness.BusinessRefreshResp.crossbusiness)
}

// required uint32 cash = 2;
inline bool BusinessRefreshResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BusinessRefreshResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BusinessRefreshResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BusinessRefreshResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 BusinessRefreshResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessRefreshResp.cash)
  return cash_;
}
inline void BusinessRefreshResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.BusinessRefreshResp.cash)
}

// -------------------------------------------------------------------

// BusinessPurchaseReq

// required uint32 pos = 1;
inline bool BusinessPurchaseReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BusinessPurchaseReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BusinessPurchaseReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BusinessPurchaseReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 BusinessPurchaseReq::pos() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessPurchaseReq.pos)
  return pos_;
}
inline void BusinessPurchaseReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.BusinessPurchaseReq.pos)
}

// -------------------------------------------------------------------

// BusinessPurchaseResp

// required .User.RewardBagInfo goods = 1;
inline bool BusinessPurchaseResp::has_goods() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BusinessPurchaseResp::set_has_goods() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BusinessPurchaseResp::clear_has_goods() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BusinessPurchaseResp::clear_goods() {
  if (goods_ != NULL) goods_->::User::RewardBagInfo::Clear();
  clear_has_goods();
}
inline const ::User::RewardBagInfo& BusinessPurchaseResp::goods() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessPurchaseResp.goods)
  return goods_ != NULL ? *goods_ : *default_instance_->goods_;
}
inline ::User::RewardBagInfo* BusinessPurchaseResp::mutable_goods() {
  set_has_goods();
  if (goods_ == NULL) goods_ = new ::User::RewardBagInfo;
  // @@protoc_insertion_point(field_mutable:ProtoCrossBusiness.BusinessPurchaseResp.goods)
  return goods_;
}
inline ::User::RewardBagInfo* BusinessPurchaseResp::release_goods() {
  clear_has_goods();
  ::User::RewardBagInfo* temp = goods_;
  goods_ = NULL;
  return temp;
}
inline void BusinessPurchaseResp::set_allocated_goods(::User::RewardBagInfo* goods) {
  delete goods_;
  goods_ = goods;
  if (goods) {
    set_has_goods();
  } else {
    clear_has_goods();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoCrossBusiness.BusinessPurchaseResp.goods)
}

// required .ProtoCrossBusiness.CrossBusinessCPP crossbusiness = 2;
inline bool BusinessPurchaseResp::has_crossbusiness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BusinessPurchaseResp::set_has_crossbusiness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BusinessPurchaseResp::clear_has_crossbusiness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BusinessPurchaseResp::clear_crossbusiness() {
  if (crossbusiness_ != NULL) crossbusiness_->::ProtoCrossBusiness::CrossBusinessCPP::Clear();
  clear_has_crossbusiness();
}
inline const ::ProtoCrossBusiness::CrossBusinessCPP& BusinessPurchaseResp::crossbusiness() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessPurchaseResp.crossbusiness)
  return crossbusiness_ != NULL ? *crossbusiness_ : *default_instance_->crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessPurchaseResp::mutable_crossbusiness() {
  set_has_crossbusiness();
  if (crossbusiness_ == NULL) crossbusiness_ = new ::ProtoCrossBusiness::CrossBusinessCPP;
  // @@protoc_insertion_point(field_mutable:ProtoCrossBusiness.BusinessPurchaseResp.crossbusiness)
  return crossbusiness_;
}
inline ::ProtoCrossBusiness::CrossBusinessCPP* BusinessPurchaseResp::release_crossbusiness() {
  clear_has_crossbusiness();
  ::ProtoCrossBusiness::CrossBusinessCPP* temp = crossbusiness_;
  crossbusiness_ = NULL;
  return temp;
}
inline void BusinessPurchaseResp::set_allocated_crossbusiness(::ProtoCrossBusiness::CrossBusinessCPP* crossbusiness) {
  delete crossbusiness_;
  crossbusiness_ = crossbusiness;
  if (crossbusiness) {
    set_has_crossbusiness();
  } else {
    clear_has_crossbusiness();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoCrossBusiness.BusinessPurchaseResp.crossbusiness)
}

// required uint32 cash = 3;
inline bool BusinessPurchaseResp::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BusinessPurchaseResp::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BusinessPurchaseResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BusinessPurchaseResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 BusinessPurchaseResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoCrossBusiness.BusinessPurchaseResp.cash)
  return cash_;
}
inline void BusinessPurchaseResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoCrossBusiness.BusinessPurchaseResp.cash)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoCrossBusiness

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoCrossBusiness_2eproto__INCLUDED
