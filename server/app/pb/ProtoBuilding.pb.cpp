// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuilding.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoBuilding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoBuilding {

namespace {

const ::google::protobuf::Descriptor* BuildInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildQueue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildQueue_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUserSyncInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUserSyncInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildYield_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildYield_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildSyncReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildSyncReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildSyncResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildSyncResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUnlockReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUnlockReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUnlockResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUnlockResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUnlockQueueReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUnlockQueueReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUnlockQueueResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUnlockQueueResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUpgradeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUpgradeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildUpgradeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildUpgradeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildFreeSpeedReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildFreeSpeedReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildFreeSpeedResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildFreeSpeedResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildOverOnceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildOverOnceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildOverOnceResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildOverOnceResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildExploitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildExploitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildExploitResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildExploitResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildAutoUpgradeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildAutoUpgradeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildAutoUpgradeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildAutoUpgradeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildResourceSyncReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResourceSyncReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildResourceSyncResq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResourceSyncResq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoBuilding_2eproto() {
  protobuf_AddDesc_ProtoBuilding_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoBuilding.proto");
  GOOGLE_CHECK(file != NULL);
  BuildInfo_descriptor_ = file->message_type(0);
  static const int BuildInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, handle_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, is_speed_),
  };
  BuildInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildInfo_descriptor_,
      BuildInfo::default_instance_,
      BuildInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildInfo));
  BuildQueue_descriptor_ = file->message_type(1);
  static const int BuildQueue_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildQueue, left_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildQueue, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildQueue, queue_),
  };
  BuildQueue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildQueue_descriptor_,
      BuildQueue::default_instance_,
      BuildQueue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildQueue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildQueue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildQueue));
  BuildUserSyncInfo_descriptor_ = file->message_type(2);
  static const int BuildUserSyncInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, total_exploit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, user_coins_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, user_woods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, user_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, user_level_),
  };
  BuildUserSyncInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUserSyncInfo_descriptor_,
      BuildUserSyncInfo::default_instance_,
      BuildUserSyncInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUserSyncInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUserSyncInfo));
  BuildYield_descriptor_ = file->message_type(3);
  static const int BuildYield_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildYield, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildYield, capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildYield, yield_),
  };
  BuildYield_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildYield_descriptor_,
      BuildYield::default_instance_,
      BuildYield_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildYield, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildYield, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildYield));
  BuildSyncReq_descriptor_ = file->message_type(4);
  static const int BuildSyncReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncReq, type_),
  };
  BuildSyncReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildSyncReq_descriptor_,
      BuildSyncReq::default_instance_,
      BuildSyncReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildSyncReq));
  BuildSyncResp_descriptor_ = file->message_type(5);
  static const int BuildSyncResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, user_),
  };
  BuildSyncResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildSyncResp_descriptor_,
      BuildSyncResp::default_instance_,
      BuildSyncResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildSyncResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildSyncResp));
  BuildUnlockReq_descriptor_ = file->message_type(6);
  static const int BuildUnlockReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockReq, ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockReq, lock_queue_),
  };
  BuildUnlockReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUnlockReq_descriptor_,
      BuildUnlockReq::default_instance_,
      BuildUnlockReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUnlockReq));
  BuildUnlockResp_descriptor_ = file->message_type(7);
  static const int BuildUnlockResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockResp, build_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockResp, builds_),
  };
  BuildUnlockResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUnlockResp_descriptor_,
      BuildUnlockResp::default_instance_,
      BuildUnlockResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUnlockResp));
  BuildUnlockQueueReq_descriptor_ = file->message_type(8);
  static const int BuildUnlockQueueReq_offsets_[1] = {
  };
  BuildUnlockQueueReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUnlockQueueReq_descriptor_,
      BuildUnlockQueueReq::default_instance_,
      BuildUnlockQueueReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUnlockQueueReq));
  BuildUnlockQueueResp_descriptor_ = file->message_type(9);
  static const int BuildUnlockQueueResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueResp, build_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueResp, builds_),
  };
  BuildUnlockQueueResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUnlockQueueResp_descriptor_,
      BuildUnlockQueueResp::default_instance_,
      BuildUnlockQueueResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUnlockQueueResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUnlockQueueResp));
  BuildUpgradeReq_descriptor_ = file->message_type(10);
  static const int BuildUpgradeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeReq, id_),
  };
  BuildUpgradeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUpgradeReq_descriptor_,
      BuildUpgradeReq::default_instance_,
      BuildUpgradeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUpgradeReq));
  BuildUpgradeResp_descriptor_ = file->message_type(11);
  static const int BuildUpgradeResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, build_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, builds_),
  };
  BuildUpgradeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildUpgradeResp_descriptor_,
      BuildUpgradeResp::default_instance_,
      BuildUpgradeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildUpgradeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildUpgradeResp));
  BuildFreeSpeedReq_descriptor_ = file->message_type(12);
  static const int BuildFreeSpeedReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedReq, id_),
  };
  BuildFreeSpeedReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildFreeSpeedReq_descriptor_,
      BuildFreeSpeedReq::default_instance_,
      BuildFreeSpeedReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildFreeSpeedReq));
  BuildFreeSpeedResp_descriptor_ = file->message_type(13);
  static const int BuildFreeSpeedResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedResp, build_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedResp, queue_),
  };
  BuildFreeSpeedResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildFreeSpeedResp_descriptor_,
      BuildFreeSpeedResp::default_instance_,
      BuildFreeSpeedResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFreeSpeedResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildFreeSpeedResp));
  BuildOverOnceReq_descriptor_ = file->message_type(14);
  static const int BuildOverOnceReq_offsets_[1] = {
  };
  BuildOverOnceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildOverOnceReq_descriptor_,
      BuildOverOnceReq::default_instance_,
      BuildOverOnceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildOverOnceReq));
  BuildOverOnceResp_descriptor_ = file->message_type(15);
  static const int BuildOverOnceResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, hammer_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, build_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, total_exploit_),
  };
  BuildOverOnceResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildOverOnceResp_descriptor_,
      BuildOverOnceResp::default_instance_,
      BuildOverOnceResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOverOnceResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildOverOnceResp));
  BuildExploitReq_descriptor_ = file->message_type(16);
  static const int BuildExploitReq_offsets_[1] = {
  };
  BuildExploitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildExploitReq_descriptor_,
      BuildExploitReq::default_instance_,
      BuildExploitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildExploitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildExploitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildExploitReq));
  BuildExploitResp_descriptor_ = file->message_type(17);
  static const int BuildExploitResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildExploitResp, user_exploit_),
  };
  BuildExploitResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildExploitResp_descriptor_,
      BuildExploitResp::default_instance_,
      BuildExploitResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildExploitResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildExploitResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildExploitResp));
  BuildAutoUpgradeReq_descriptor_ = file->message_type(18);
  static const int BuildAutoUpgradeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeReq, handle_),
  };
  BuildAutoUpgradeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildAutoUpgradeReq_descriptor_,
      BuildAutoUpgradeReq::default_instance_,
      BuildAutoUpgradeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildAutoUpgradeReq));
  BuildAutoUpgradeResp_descriptor_ = file->message_type(19);
  static const int BuildAutoUpgradeResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeResp, build_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeResp, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeResp, user_),
  };
  BuildAutoUpgradeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildAutoUpgradeResp_descriptor_,
      BuildAutoUpgradeResp::default_instance_,
      BuildAutoUpgradeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildAutoUpgradeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildAutoUpgradeResp));
  BuildResourceSyncReq_descriptor_ = file->message_type(20);
  static const int BuildResourceSyncReq_offsets_[1] = {
  };
  BuildResourceSyncReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResourceSyncReq_descriptor_,
      BuildResourceSyncReq::default_instance_,
      BuildResourceSyncReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResourceSyncReq));
  BuildResourceSyncResq_descriptor_ = file->message_type(21);
  static const int BuildResourceSyncResq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, wood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, iron_),
  };
  BuildResourceSyncResq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResourceSyncResq_descriptor_,
      BuildResourceSyncResq::default_instance_,
      BuildResourceSyncResq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResourceSyncResq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResourceSyncResq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoBuilding_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildInfo_descriptor_, &BuildInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildQueue_descriptor_, &BuildQueue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUserSyncInfo_descriptor_, &BuildUserSyncInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildYield_descriptor_, &BuildYield::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildSyncReq_descriptor_, &BuildSyncReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildSyncResp_descriptor_, &BuildSyncResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUnlockReq_descriptor_, &BuildUnlockReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUnlockResp_descriptor_, &BuildUnlockResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUnlockQueueReq_descriptor_, &BuildUnlockQueueReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUnlockQueueResp_descriptor_, &BuildUnlockQueueResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUpgradeReq_descriptor_, &BuildUpgradeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildUpgradeResp_descriptor_, &BuildUpgradeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildFreeSpeedReq_descriptor_, &BuildFreeSpeedReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildFreeSpeedResp_descriptor_, &BuildFreeSpeedResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildOverOnceReq_descriptor_, &BuildOverOnceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildOverOnceResp_descriptor_, &BuildOverOnceResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildExploitReq_descriptor_, &BuildExploitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildExploitResp_descriptor_, &BuildExploitResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildAutoUpgradeReq_descriptor_, &BuildAutoUpgradeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildAutoUpgradeResp_descriptor_, &BuildAutoUpgradeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResourceSyncReq_descriptor_, &BuildResourceSyncReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResourceSyncResq_descriptor_, &BuildResourceSyncResq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoBuilding_2eproto() {
  delete BuildInfo::default_instance_;
  delete BuildInfo_reflection_;
  delete BuildQueue::default_instance_;
  delete BuildQueue_reflection_;
  delete BuildUserSyncInfo::default_instance_;
  delete BuildUserSyncInfo_reflection_;
  delete BuildYield::default_instance_;
  delete BuildYield_reflection_;
  delete BuildSyncReq::default_instance_;
  delete BuildSyncReq_reflection_;
  delete BuildSyncResp::default_instance_;
  delete BuildSyncResp_reflection_;
  delete BuildUnlockReq::default_instance_;
  delete BuildUnlockReq_reflection_;
  delete BuildUnlockResp::default_instance_;
  delete BuildUnlockResp_reflection_;
  delete BuildUnlockQueueReq::default_instance_;
  delete BuildUnlockQueueReq_reflection_;
  delete BuildUnlockQueueResp::default_instance_;
  delete BuildUnlockQueueResp_reflection_;
  delete BuildUpgradeReq::default_instance_;
  delete BuildUpgradeReq_reflection_;
  delete BuildUpgradeResp::default_instance_;
  delete BuildUpgradeResp_reflection_;
  delete BuildFreeSpeedReq::default_instance_;
  delete BuildFreeSpeedReq_reflection_;
  delete BuildFreeSpeedResp::default_instance_;
  delete BuildFreeSpeedResp_reflection_;
  delete BuildOverOnceReq::default_instance_;
  delete BuildOverOnceReq_reflection_;
  delete BuildOverOnceResp::default_instance_;
  delete BuildOverOnceResp_reflection_;
  delete BuildExploitReq::default_instance_;
  delete BuildExploitReq_reflection_;
  delete BuildExploitResp::default_instance_;
  delete BuildExploitResp_reflection_;
  delete BuildAutoUpgradeReq::default_instance_;
  delete BuildAutoUpgradeReq_reflection_;
  delete BuildAutoUpgradeResp::default_instance_;
  delete BuildAutoUpgradeResp_reflection_;
  delete BuildResourceSyncReq::default_instance_;
  delete BuildResourceSyncReq_reflection_;
  delete BuildResourceSyncResq::default_instance_;
  delete BuildResourceSyncResq_reflection_;
}

void protobuf_AddDesc_ProtoBuilding_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoBuilding.proto\022\rProtoBuilding\"]\n\t"
    "BuildInfo\022\n\n\002id\030\001 \002(\r\022\r\n\005level\030\002 \002(\r\022\016\n\006"
    "status\030\003 \002(\r\022\023\n\013handle_time\030\004 \002(\r\022\020\n\010is_"
    "speed\030\005 \002(\010\";\n\nBuildQueue\022\020\n\010left_cnt\030\001 "
    "\002(\r\022\014\n\004type\030\002 \002(\r\022\r\n\005queue\030\003 \003(\005\"x\n\021Buil"
    "dUserSyncInfo\022\025\n\rtotal_exploit\030\001 \002(\r\022\022\n\n"
    "user_coins\030\002 \002(\r\022\022\n\nuser_woods\030\003 \002(\r\022\020\n\010"
    "user_exp\030\004 \002(\004\022\022\n\nuser_level\030\005 \002(\r\";\n\nBu"
    "ildYield\022\014\n\004type\030\001 \002(\r\022\020\n\010capacity\030\002 \002(\r"
    "\022\r\n\005yield\030\003 \002(\r\"\034\n\014BuildSyncReq\022\014\n\004type\030"
    "\001 \002(\r\"\241\001\n\rBuildSyncResp\022\014\n\004type\030\001 \002(\r\022(\n"
    "\006builds\030\002 \003(\0132\030.ProtoBuilding.BuildInfo\022"
    "(\n\005queue\030\003 \002(\0132\031.ProtoBuilding.BuildQueu"
    "e\022.\n\004user\030\004 \002(\0132 .ProtoBuilding.BuildUse"
    "rSyncInfo\"1\n\016BuildUnlockReq\022\013\n\003ids\030\001 \003(\r"
    "\022\022\n\nlock_queue\030\002 \001(\010\"k\n\017BuildUnlockResp\022"
    ".\n\013build_queue\030\001 \002(\0132\031.ProtoBuilding.Bui"
    "ldQueue\022(\n\006builds\030\002 \003(\0132\030.ProtoBuilding."
    "BuildInfo\"\025\n\023BuildUnlockQueueReq\"p\n\024Buil"
    "dUnlockQueueResp\022.\n\013build_queue\030\001 \002(\0132\031."
    "ProtoBuilding.BuildQueue\022(\n\006builds\030\002 \003(\013"
    "2\030.ProtoBuilding.BuildInfo\"\035\n\017BuildUpgra"
    "deReq\022\n\n\002id\030\001 \002(\r\"\250\001\n\020BuildUpgradeResp\022\n"
    "\n\002id\030\001 \002(\r\022.\n\004user\030\002 \002(\0132 .ProtoBuilding"
    ".BuildUserSyncInfo\022.\n\013build_queue\030\003 \002(\0132"
    "\031.ProtoBuilding.BuildQueue\022(\n\006builds\030\004 \003"
    "(\0132\030.ProtoBuilding.BuildInfo\"\037\n\021BuildFre"
    "eSpeedReq\022\n\n\002id\030\001 \002(\r\"g\n\022BuildFreeSpeedR"
    "esp\022\'\n\005build\030\001 \003(\0132\030.ProtoBuilding.Build"
    "Info\022(\n\005queue\030\002 \002(\0132\031.ProtoBuilding.Buil"
    "dQueue\"\022\n\020BuildOverOnceReq\"\246\001\n\021BuildOver"
    "OnceResp\022(\n\006builds\030\001 \003(\0132\030.ProtoBuilding"
    ".BuildInfo\022\022\n\nhammer_cnt\030\002 \002(\r\022.\n\013build_"
    "queue\030\003 \002(\0132\031.ProtoBuilding.BuildQueue\022\014"
    "\n\004cash\030\004 \002(\r\022\025\n\rtotal_exploit\030\005 \002(\r\"\021\n\017B"
    "uildExploitReq\"(\n\020BuildExploitResp\022\024\n\014us"
    "er_exploit\030\001 \002(\r\"3\n\023BuildAutoUpgradeReq\022"
    "\014\n\004type\030\001 \002(\r\022\016\n\006handle\030\002 \002(\010\"\240\001\n\024BuildA"
    "utoUpgradeResp\022.\n\013build_queue\030\001 \002(\0132\031.Pr"
    "otoBuilding.BuildQueue\022(\n\006builds\030\002 \003(\0132\030"
    ".ProtoBuilding.BuildInfo\022.\n\004user\030\003 \002(\0132 "
    ".ProtoBuilding.BuildUserSyncInfo\"\026\n\024Buil"
    "dResourceSyncReq\"O\n\025BuildResourceSyncRes"
    "q\022\014\n\004coin\030\001 \002(\r\022\014\n\004wood\030\002 \002(\r\022\014\n\004food\030\003 "
    "\002(\r\022\014\n\004iron\030\004 \002(\r", 1777);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoBuilding.proto", &protobuf_RegisterTypes);
  BuildInfo::default_instance_ = new BuildInfo();
  BuildQueue::default_instance_ = new BuildQueue();
  BuildUserSyncInfo::default_instance_ = new BuildUserSyncInfo();
  BuildYield::default_instance_ = new BuildYield();
  BuildSyncReq::default_instance_ = new BuildSyncReq();
  BuildSyncResp::default_instance_ = new BuildSyncResp();
  BuildUnlockReq::default_instance_ = new BuildUnlockReq();
  BuildUnlockResp::default_instance_ = new BuildUnlockResp();
  BuildUnlockQueueReq::default_instance_ = new BuildUnlockQueueReq();
  BuildUnlockQueueResp::default_instance_ = new BuildUnlockQueueResp();
  BuildUpgradeReq::default_instance_ = new BuildUpgradeReq();
  BuildUpgradeResp::default_instance_ = new BuildUpgradeResp();
  BuildFreeSpeedReq::default_instance_ = new BuildFreeSpeedReq();
  BuildFreeSpeedResp::default_instance_ = new BuildFreeSpeedResp();
  BuildOverOnceReq::default_instance_ = new BuildOverOnceReq();
  BuildOverOnceResp::default_instance_ = new BuildOverOnceResp();
  BuildExploitReq::default_instance_ = new BuildExploitReq();
  BuildExploitResp::default_instance_ = new BuildExploitResp();
  BuildAutoUpgradeReq::default_instance_ = new BuildAutoUpgradeReq();
  BuildAutoUpgradeResp::default_instance_ = new BuildAutoUpgradeResp();
  BuildResourceSyncReq::default_instance_ = new BuildResourceSyncReq();
  BuildResourceSyncResq::default_instance_ = new BuildResourceSyncResq();
  BuildInfo::default_instance_->InitAsDefaultInstance();
  BuildQueue::default_instance_->InitAsDefaultInstance();
  BuildUserSyncInfo::default_instance_->InitAsDefaultInstance();
  BuildYield::default_instance_->InitAsDefaultInstance();
  BuildSyncReq::default_instance_->InitAsDefaultInstance();
  BuildSyncResp::default_instance_->InitAsDefaultInstance();
  BuildUnlockReq::default_instance_->InitAsDefaultInstance();
  BuildUnlockResp::default_instance_->InitAsDefaultInstance();
  BuildUnlockQueueReq::default_instance_->InitAsDefaultInstance();
  BuildUnlockQueueResp::default_instance_->InitAsDefaultInstance();
  BuildUpgradeReq::default_instance_->InitAsDefaultInstance();
  BuildUpgradeResp::default_instance_->InitAsDefaultInstance();
  BuildFreeSpeedReq::default_instance_->InitAsDefaultInstance();
  BuildFreeSpeedResp::default_instance_->InitAsDefaultInstance();
  BuildOverOnceReq::default_instance_->InitAsDefaultInstance();
  BuildOverOnceResp::default_instance_->InitAsDefaultInstance();
  BuildExploitReq::default_instance_->InitAsDefaultInstance();
  BuildExploitResp::default_instance_->InitAsDefaultInstance();
  BuildAutoUpgradeReq::default_instance_->InitAsDefaultInstance();
  BuildAutoUpgradeResp::default_instance_->InitAsDefaultInstance();
  BuildResourceSyncReq::default_instance_->InitAsDefaultInstance();
  BuildResourceSyncResq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoBuilding_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoBuilding_2eproto {
  StaticDescriptorInitializer_ProtoBuilding_2eproto() {
    protobuf_AddDesc_ProtoBuilding_2eproto();
  }
} static_descriptor_initializer_ProtoBuilding_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BuildInfo::kIdFieldNumber;
const int BuildInfo::kLevelFieldNumber;
const int BuildInfo::kStatusFieldNumber;
const int BuildInfo::kHandleTimeFieldNumber;
const int BuildInfo::kIsSpeedFieldNumber;
#endif  // !_MSC_VER

BuildInfo::BuildInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildInfo)
}

void BuildInfo::InitAsDefaultInstance() {
}

BuildInfo::BuildInfo(const BuildInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildInfo)
}

void BuildInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  status_ = 0u;
  handle_time_ = 0u;
  is_speed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildInfo::~BuildInfo() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildInfo)
  SharedDtor();
}

void BuildInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildInfo_descriptor_;
}

const BuildInfo& BuildInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildInfo* BuildInfo::default_instance_ = NULL;

BuildInfo* BuildInfo::New() const {
  return new BuildInfo;
}

void BuildInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(id_, is_speed_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // required uint32 status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_handle_time;
        break;
      }

      // required uint32 handle_time = 4;
      case 4: {
        if (tag == 32) {
         parse_handle_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_time_)));
          set_has_handle_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_speed;
        break;
      }

      // required bool is_speed = 5;
      case 5: {
        if (tag == 40) {
         parse_is_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_speed_)));
          set_has_is_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildInfo)
  return false;
#undef DO_
}

void BuildInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildInfo)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // required uint32 handle_time = 4;
  if (has_handle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->handle_time(), output);
  }

  // required bool is_speed = 5;
  if (has_is_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_speed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildInfo)
}

::google::protobuf::uint8* BuildInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildInfo)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // required uint32 handle_time = 4;
  if (has_handle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->handle_time(), target);
  }

  // required bool is_speed = 5;
  if (has_is_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_speed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildInfo)
  return target;
}

int BuildInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // required uint32 handle_time = 4;
    if (has_handle_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle_time());
    }

    // required bool is_speed = 5;
    if (has_is_speed()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildInfo::MergeFrom(const BuildInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_handle_time()) {
      set_handle_time(from.handle_time());
    }
    if (from.has_is_speed()) {
      set_is_speed(from.is_speed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildInfo::CopyFrom(const BuildInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void BuildInfo::Swap(BuildInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(status_, other->status_);
    std::swap(handle_time_, other->handle_time_);
    std::swap(is_speed_, other->is_speed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildInfo_descriptor_;
  metadata.reflection = BuildInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildQueue::kLeftCntFieldNumber;
const int BuildQueue::kTypeFieldNumber;
const int BuildQueue::kQueueFieldNumber;
#endif  // !_MSC_VER

BuildQueue::BuildQueue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildQueue)
}

void BuildQueue::InitAsDefaultInstance() {
}

BuildQueue::BuildQueue(const BuildQueue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildQueue)
}

void BuildQueue::SharedCtor() {
  _cached_size_ = 0;
  left_cnt_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildQueue::~BuildQueue() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildQueue)
  SharedDtor();
}

void BuildQueue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildQueue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildQueue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildQueue_descriptor_;
}

const BuildQueue& BuildQueue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildQueue* BuildQueue::default_instance_ = NULL;

BuildQueue* BuildQueue::New() const {
  return new BuildQueue;
}

void BuildQueue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildQueue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(left_cnt_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  queue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildQueue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildQueue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 left_cnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_cnt_)));
          set_has_left_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_queue;
        break;
      }

      // repeated int32 queue = 3;
      case 3: {
        if (tag == 24) {
         parse_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_queue())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_queue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_queue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildQueue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildQueue)
  return false;
#undef DO_
}

void BuildQueue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildQueue)
  // required uint32 left_cnt = 1;
  if (has_left_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->left_cnt(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // repeated int32 queue = 3;
  for (int i = 0; i < this->queue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->queue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildQueue)
}

::google::protobuf::uint8* BuildQueue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildQueue)
  // required uint32 left_cnt = 1;
  if (has_left_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->left_cnt(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // repeated int32 queue = 3;
  for (int i = 0; i < this->queue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->queue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildQueue)
  return target;
}

int BuildQueue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 left_cnt = 1;
    if (has_left_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->left_cnt());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  // repeated int32 queue = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->queue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->queue(i));
    }
    total_size += 1 * this->queue_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildQueue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildQueue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildQueue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildQueue::MergeFrom(const BuildQueue& from) {
  GOOGLE_CHECK_NE(&from, this);
  queue_.MergeFrom(from.queue_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_cnt()) {
      set_left_cnt(from.left_cnt());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildQueue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildQueue::CopyFrom(const BuildQueue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildQueue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BuildQueue::Swap(BuildQueue* other) {
  if (other != this) {
    std::swap(left_cnt_, other->left_cnt_);
    std::swap(type_, other->type_);
    queue_.Swap(&other->queue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildQueue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildQueue_descriptor_;
  metadata.reflection = BuildQueue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUserSyncInfo::kTotalExploitFieldNumber;
const int BuildUserSyncInfo::kUserCoinsFieldNumber;
const int BuildUserSyncInfo::kUserWoodsFieldNumber;
const int BuildUserSyncInfo::kUserExpFieldNumber;
const int BuildUserSyncInfo::kUserLevelFieldNumber;
#endif  // !_MSC_VER

BuildUserSyncInfo::BuildUserSyncInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUserSyncInfo)
}

void BuildUserSyncInfo::InitAsDefaultInstance() {
}

BuildUserSyncInfo::BuildUserSyncInfo(const BuildUserSyncInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUserSyncInfo)
}

void BuildUserSyncInfo::SharedCtor() {
  _cached_size_ = 0;
  total_exploit_ = 0u;
  user_coins_ = 0u;
  user_woods_ = 0u;
  user_exp_ = GOOGLE_ULONGLONG(0);
  user_level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUserSyncInfo::~BuildUserSyncInfo() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUserSyncInfo)
  SharedDtor();
}

void BuildUserSyncInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildUserSyncInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUserSyncInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUserSyncInfo_descriptor_;
}

const BuildUserSyncInfo& BuildUserSyncInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUserSyncInfo* BuildUserSyncInfo::default_instance_ = NULL;

BuildUserSyncInfo* BuildUserSyncInfo::New() const {
  return new BuildUserSyncInfo;
}

void BuildUserSyncInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildUserSyncInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(total_exploit_, user_level_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUserSyncInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUserSyncInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 total_exploit = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_exploit_)));
          set_has_total_exploit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_coins;
        break;
      }

      // required uint32 user_coins = 2;
      case 2: {
        if (tag == 16) {
         parse_user_coins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_coins_)));
          set_has_user_coins();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_user_woods;
        break;
      }

      // required uint32 user_woods = 3;
      case 3: {
        if (tag == 24) {
         parse_user_woods:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_woods_)));
          set_has_user_woods();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_user_exp;
        break;
      }

      // required uint64 user_exp = 4;
      case 4: {
        if (tag == 32) {
         parse_user_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_exp_)));
          set_has_user_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_user_level;
        break;
      }

      // required uint32 user_level = 5;
      case 5: {
        if (tag == 40) {
         parse_user_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_level_)));
          set_has_user_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUserSyncInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUserSyncInfo)
  return false;
#undef DO_
}

void BuildUserSyncInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUserSyncInfo)
  // required uint32 total_exploit = 1;
  if (has_total_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_exploit(), output);
  }

  // required uint32 user_coins = 2;
  if (has_user_coins()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_coins(), output);
  }

  // required uint32 user_woods = 3;
  if (has_user_woods()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->user_woods(), output);
  }

  // required uint64 user_exp = 4;
  if (has_user_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->user_exp(), output);
  }

  // required uint32 user_level = 5;
  if (has_user_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->user_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUserSyncInfo)
}

::google::protobuf::uint8* BuildUserSyncInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUserSyncInfo)
  // required uint32 total_exploit = 1;
  if (has_total_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_exploit(), target);
  }

  // required uint32 user_coins = 2;
  if (has_user_coins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_coins(), target);
  }

  // required uint32 user_woods = 3;
  if (has_user_woods()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->user_woods(), target);
  }

  // required uint64 user_exp = 4;
  if (has_user_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->user_exp(), target);
  }

  // required uint32 user_level = 5;
  if (has_user_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->user_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUserSyncInfo)
  return target;
}

int BuildUserSyncInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 total_exploit = 1;
    if (has_total_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_exploit());
    }

    // required uint32 user_coins = 2;
    if (has_user_coins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_coins());
    }

    // required uint32 user_woods = 3;
    if (has_user_woods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_woods());
    }

    // required uint64 user_exp = 4;
    if (has_user_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_exp());
    }

    // required uint32 user_level = 5;
    if (has_user_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUserSyncInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUserSyncInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUserSyncInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUserSyncInfo::MergeFrom(const BuildUserSyncInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_exploit()) {
      set_total_exploit(from.total_exploit());
    }
    if (from.has_user_coins()) {
      set_user_coins(from.user_coins());
    }
    if (from.has_user_woods()) {
      set_user_woods(from.user_woods());
    }
    if (from.has_user_exp()) {
      set_user_exp(from.user_exp());
    }
    if (from.has_user_level()) {
      set_user_level(from.user_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUserSyncInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUserSyncInfo::CopyFrom(const BuildUserSyncInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUserSyncInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void BuildUserSyncInfo::Swap(BuildUserSyncInfo* other) {
  if (other != this) {
    std::swap(total_exploit_, other->total_exploit_);
    std::swap(user_coins_, other->user_coins_);
    std::swap(user_woods_, other->user_woods_);
    std::swap(user_exp_, other->user_exp_);
    std::swap(user_level_, other->user_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUserSyncInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUserSyncInfo_descriptor_;
  metadata.reflection = BuildUserSyncInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildYield::kTypeFieldNumber;
const int BuildYield::kCapacityFieldNumber;
const int BuildYield::kYieldFieldNumber;
#endif  // !_MSC_VER

BuildYield::BuildYield()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildYield)
}

void BuildYield::InitAsDefaultInstance() {
}

BuildYield::BuildYield(const BuildYield& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildYield)
}

void BuildYield::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  capacity_ = 0u;
  yield_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildYield::~BuildYield() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildYield)
  SharedDtor();
}

void BuildYield::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildYield::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildYield::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildYield_descriptor_;
}

const BuildYield& BuildYield::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildYield* BuildYield::default_instance_ = NULL;

BuildYield* BuildYield::New() const {
  return new BuildYield;
}

void BuildYield::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildYield*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, yield_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildYield::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildYield)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_capacity;
        break;
      }

      // required uint32 capacity = 2;
      case 2: {
        if (tag == 16) {
         parse_capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capacity_)));
          set_has_capacity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_yield;
        break;
      }

      // required uint32 yield = 3;
      case 3: {
        if (tag == 24) {
         parse_yield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yield_)));
          set_has_yield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildYield)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildYield)
  return false;
#undef DO_
}

void BuildYield::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildYield)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 capacity = 2;
  if (has_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->capacity(), output);
  }

  // required uint32 yield = 3;
  if (has_yield()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->yield(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildYield)
}

::google::protobuf::uint8* BuildYield::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildYield)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 capacity = 2;
  if (has_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->capacity(), target);
  }

  // required uint32 yield = 3;
  if (has_yield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->yield(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildYield)
  return target;
}

int BuildYield::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 capacity = 2;
    if (has_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->capacity());
    }

    // required uint32 yield = 3;
    if (has_yield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yield());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildYield::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildYield* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildYield*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildYield::MergeFrom(const BuildYield& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_capacity()) {
      set_capacity(from.capacity());
    }
    if (from.has_yield()) {
      set_yield(from.yield());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildYield::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildYield::CopyFrom(const BuildYield& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildYield::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BuildYield::Swap(BuildYield* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(capacity_, other->capacity_);
    std::swap(yield_, other->yield_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildYield::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildYield_descriptor_;
  metadata.reflection = BuildYield_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildSyncReq::kTypeFieldNumber;
#endif  // !_MSC_VER

BuildSyncReq::BuildSyncReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildSyncReq)
}

void BuildSyncReq::InitAsDefaultInstance() {
}

BuildSyncReq::BuildSyncReq(const BuildSyncReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildSyncReq)
}

void BuildSyncReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildSyncReq::~BuildSyncReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildSyncReq)
  SharedDtor();
}

void BuildSyncReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildSyncReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildSyncReq_descriptor_;
}

const BuildSyncReq& BuildSyncReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildSyncReq* BuildSyncReq::default_instance_ = NULL;

BuildSyncReq* BuildSyncReq::New() const {
  return new BuildSyncReq;
}

void BuildSyncReq::Clear() {
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildSyncReq)
  return false;
#undef DO_
}

void BuildSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildSyncReq)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildSyncReq)
}

::google::protobuf::uint8* BuildSyncReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildSyncReq)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildSyncReq)
  return target;
}

int BuildSyncReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildSyncReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildSyncReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildSyncReq::MergeFrom(const BuildSyncReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildSyncReq::CopyFrom(const BuildSyncReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildSyncReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildSyncReq::Swap(BuildSyncReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildSyncReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildSyncReq_descriptor_;
  metadata.reflection = BuildSyncReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildSyncResp::kTypeFieldNumber;
const int BuildSyncResp::kBuildsFieldNumber;
const int BuildSyncResp::kQueueFieldNumber;
const int BuildSyncResp::kUserFieldNumber;
#endif  // !_MSC_VER

BuildSyncResp::BuildSyncResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildSyncResp)
}

void BuildSyncResp::InitAsDefaultInstance() {
  queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
  user_ = const_cast< ::ProtoBuilding::BuildUserSyncInfo*>(&::ProtoBuilding::BuildUserSyncInfo::default_instance());
}

BuildSyncResp::BuildSyncResp(const BuildSyncResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildSyncResp)
}

void BuildSyncResp::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  queue_ = NULL;
  user_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildSyncResp::~BuildSyncResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildSyncResp)
  SharedDtor();
}

void BuildSyncResp::SharedDtor() {
  if (this != default_instance_) {
    delete queue_;
    delete user_;
  }
}

void BuildSyncResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildSyncResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildSyncResp_descriptor_;
}

const BuildSyncResp& BuildSyncResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildSyncResp* BuildSyncResp::default_instance_ = NULL;

BuildSyncResp* BuildSyncResp::New() const {
  return new BuildSyncResp;
}

void BuildSyncResp::Clear() {
  if (_has_bits_[0 / 32] & 13) {
    type_ = 0u;
    if (has_queue()) {
      if (queue_ != NULL) queue_->::ProtoBuilding::BuildQueue::Clear();
    }
    if (has_user()) {
      if (user_ != NULL) user_->::ProtoBuilding::BuildUserSyncInfo::Clear();
    }
  }
  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildSyncResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildSyncResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildInfo builds = 2;
      case 2: {
        if (tag == 18) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        if (input->ExpectTag(26)) goto parse_queue;
        break;
      }

      // required .ProtoBuilding.BuildQueue queue = 3;
      case 3: {
        if (tag == 26) {
         parse_queue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user;
        break;
      }

      // required .ProtoBuilding.BuildUserSyncInfo user = 4;
      case 4: {
        if (tag == 34) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildSyncResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildSyncResp)
  return false;
#undef DO_
}

void BuildSyncResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildSyncResp)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->builds(i), output);
  }

  // required .ProtoBuilding.BuildQueue queue = 3;
  if (has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->queue(), output);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 4;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->user(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildSyncResp)
}

::google::protobuf::uint8* BuildSyncResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildSyncResp)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->builds(i), target);
  }

  // required .ProtoBuilding.BuildQueue queue = 3;
  if (has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->queue(), target);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 4;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->user(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildSyncResp)
  return target;
}

int BuildSyncResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required .ProtoBuilding.BuildQueue queue = 3;
    if (has_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queue());
    }

    // required .ProtoBuilding.BuildUserSyncInfo user = 4;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 2;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildSyncResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildSyncResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildSyncResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildSyncResp::MergeFrom(const BuildSyncResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_queue()) {
      mutable_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.queue());
    }
    if (from.has_user()) {
      mutable_user()->::ProtoBuilding::BuildUserSyncInfo::MergeFrom(from.user());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildSyncResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildSyncResp::CopyFrom(const BuildSyncResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildSyncResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (has_queue()) {
    if (!this->queue().IsInitialized()) return false;
  }
  if (has_user()) {
    if (!this->user().IsInitialized()) return false;
  }
  return true;
}

void BuildSyncResp::Swap(BuildSyncResp* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    builds_.Swap(&other->builds_);
    std::swap(queue_, other->queue_);
    std::swap(user_, other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildSyncResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildSyncResp_descriptor_;
  metadata.reflection = BuildSyncResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUnlockReq::kIdsFieldNumber;
const int BuildUnlockReq::kLockQueueFieldNumber;
#endif  // !_MSC_VER

BuildUnlockReq::BuildUnlockReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUnlockReq)
}

void BuildUnlockReq::InitAsDefaultInstance() {
}

BuildUnlockReq::BuildUnlockReq(const BuildUnlockReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUnlockReq)
}

void BuildUnlockReq::SharedCtor() {
  _cached_size_ = 0;
  lock_queue_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUnlockReq::~BuildUnlockReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUnlockReq)
  SharedDtor();
}

void BuildUnlockReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildUnlockReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUnlockReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUnlockReq_descriptor_;
}

const BuildUnlockReq& BuildUnlockReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUnlockReq* BuildUnlockReq::default_instance_ = NULL;

BuildUnlockReq* BuildUnlockReq::New() const {
  return new BuildUnlockReq;
}

void BuildUnlockReq::Clear() {
  lock_queue_ = false;
  ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUnlockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUnlockReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ids = 1;
      case 1: {
        if (tag == 8) {
         parse_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ids;
        if (input->ExpectTag(16)) goto parse_lock_queue;
        break;
      }

      // optional bool lock_queue = 2;
      case 2: {
        if (tag == 16) {
         parse_lock_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lock_queue_)));
          set_has_lock_queue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUnlockReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUnlockReq)
  return false;
#undef DO_
}

void BuildUnlockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUnlockReq)
  // repeated uint32 ids = 1;
  for (int i = 0; i < this->ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->ids(i), output);
  }

  // optional bool lock_queue = 2;
  if (has_lock_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->lock_queue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUnlockReq)
}

::google::protobuf::uint8* BuildUnlockReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUnlockReq)
  // repeated uint32 ids = 1;
  for (int i = 0; i < this->ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->ids(i), target);
  }

  // optional bool lock_queue = 2;
  if (has_lock_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->lock_queue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUnlockReq)
  return target;
}

int BuildUnlockReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bool lock_queue = 2;
    if (has_lock_queue()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ids(i));
    }
    total_size += 1 * this->ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUnlockReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUnlockReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUnlockReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUnlockReq::MergeFrom(const BuildUnlockReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  ids_.MergeFrom(from.ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lock_queue()) {
      set_lock_queue(from.lock_queue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUnlockReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUnlockReq::CopyFrom(const BuildUnlockReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUnlockReq::IsInitialized() const {

  return true;
}

void BuildUnlockReq::Swap(BuildUnlockReq* other) {
  if (other != this) {
    ids_.Swap(&other->ids_);
    std::swap(lock_queue_, other->lock_queue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUnlockReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUnlockReq_descriptor_;
  metadata.reflection = BuildUnlockReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUnlockResp::kBuildQueueFieldNumber;
const int BuildUnlockResp::kBuildsFieldNumber;
#endif  // !_MSC_VER

BuildUnlockResp::BuildUnlockResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUnlockResp)
}

void BuildUnlockResp::InitAsDefaultInstance() {
  build_queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
}

BuildUnlockResp::BuildUnlockResp(const BuildUnlockResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUnlockResp)
}

void BuildUnlockResp::SharedCtor() {
  _cached_size_ = 0;
  build_queue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUnlockResp::~BuildUnlockResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUnlockResp)
  SharedDtor();
}

void BuildUnlockResp::SharedDtor() {
  if (this != default_instance_) {
    delete build_queue_;
  }
}

void BuildUnlockResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUnlockResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUnlockResp_descriptor_;
}

const BuildUnlockResp& BuildUnlockResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUnlockResp* BuildUnlockResp::default_instance_ = NULL;

BuildUnlockResp* BuildUnlockResp::New() const {
  return new BuildUnlockResp;
}

void BuildUnlockResp::Clear() {
  if (has_build_queue()) {
    if (build_queue_ != NULL) build_queue_->::ProtoBuilding::BuildQueue::Clear();
  }
  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUnlockResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUnlockResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoBuilding.BuildQueue build_queue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildInfo builds = 2;
      case 2: {
        if (tag == 18) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUnlockResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUnlockResp)
  return false;
#undef DO_
}

void BuildUnlockResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUnlockResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->build_queue(), output);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->builds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUnlockResp)
}

::google::protobuf::uint8* BuildUnlockResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUnlockResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->build_queue(), target);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->builds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUnlockResp)
  return target;
}

int BuildUnlockResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoBuilding.BuildQueue build_queue = 1;
    if (has_build_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_queue());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 2;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUnlockResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUnlockResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUnlockResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUnlockResp::MergeFrom(const BuildUnlockResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_build_queue()) {
      mutable_build_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.build_queue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUnlockResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUnlockResp::CopyFrom(const BuildUnlockResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUnlockResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_build_queue()) {
    if (!this->build_queue().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  return true;
}

void BuildUnlockResp::Swap(BuildUnlockResp* other) {
  if (other != this) {
    std::swap(build_queue_, other->build_queue_);
    builds_.Swap(&other->builds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUnlockResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUnlockResp_descriptor_;
  metadata.reflection = BuildUnlockResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuildUnlockQueueReq::BuildUnlockQueueReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUnlockQueueReq)
}

void BuildUnlockQueueReq::InitAsDefaultInstance() {
}

BuildUnlockQueueReq::BuildUnlockQueueReq(const BuildUnlockQueueReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUnlockQueueReq)
}

void BuildUnlockQueueReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUnlockQueueReq::~BuildUnlockQueueReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUnlockQueueReq)
  SharedDtor();
}

void BuildUnlockQueueReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildUnlockQueueReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUnlockQueueReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUnlockQueueReq_descriptor_;
}

const BuildUnlockQueueReq& BuildUnlockQueueReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUnlockQueueReq* BuildUnlockQueueReq::default_instance_ = NULL;

BuildUnlockQueueReq* BuildUnlockQueueReq::New() const {
  return new BuildUnlockQueueReq;
}

void BuildUnlockQueueReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUnlockQueueReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUnlockQueueReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUnlockQueueReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUnlockQueueReq)
  return false;
#undef DO_
}

void BuildUnlockQueueReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUnlockQueueReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUnlockQueueReq)
}

::google::protobuf::uint8* BuildUnlockQueueReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUnlockQueueReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUnlockQueueReq)
  return target;
}

int BuildUnlockQueueReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUnlockQueueReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUnlockQueueReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUnlockQueueReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUnlockQueueReq::MergeFrom(const BuildUnlockQueueReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUnlockQueueReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUnlockQueueReq::CopyFrom(const BuildUnlockQueueReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUnlockQueueReq::IsInitialized() const {

  return true;
}

void BuildUnlockQueueReq::Swap(BuildUnlockQueueReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUnlockQueueReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUnlockQueueReq_descriptor_;
  metadata.reflection = BuildUnlockQueueReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUnlockQueueResp::kBuildQueueFieldNumber;
const int BuildUnlockQueueResp::kBuildsFieldNumber;
#endif  // !_MSC_VER

BuildUnlockQueueResp::BuildUnlockQueueResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUnlockQueueResp)
}

void BuildUnlockQueueResp::InitAsDefaultInstance() {
  build_queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
}

BuildUnlockQueueResp::BuildUnlockQueueResp(const BuildUnlockQueueResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUnlockQueueResp)
}

void BuildUnlockQueueResp::SharedCtor() {
  _cached_size_ = 0;
  build_queue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUnlockQueueResp::~BuildUnlockQueueResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUnlockQueueResp)
  SharedDtor();
}

void BuildUnlockQueueResp::SharedDtor() {
  if (this != default_instance_) {
    delete build_queue_;
  }
}

void BuildUnlockQueueResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUnlockQueueResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUnlockQueueResp_descriptor_;
}

const BuildUnlockQueueResp& BuildUnlockQueueResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUnlockQueueResp* BuildUnlockQueueResp::default_instance_ = NULL;

BuildUnlockQueueResp* BuildUnlockQueueResp::New() const {
  return new BuildUnlockQueueResp;
}

void BuildUnlockQueueResp::Clear() {
  if (has_build_queue()) {
    if (build_queue_ != NULL) build_queue_->::ProtoBuilding::BuildQueue::Clear();
  }
  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUnlockQueueResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUnlockQueueResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoBuilding.BuildQueue build_queue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildInfo builds = 2;
      case 2: {
        if (tag == 18) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUnlockQueueResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUnlockQueueResp)
  return false;
#undef DO_
}

void BuildUnlockQueueResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUnlockQueueResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->build_queue(), output);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->builds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUnlockQueueResp)
}

::google::protobuf::uint8* BuildUnlockQueueResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUnlockQueueResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->build_queue(), target);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->builds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUnlockQueueResp)
  return target;
}

int BuildUnlockQueueResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoBuilding.BuildQueue build_queue = 1;
    if (has_build_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_queue());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 2;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUnlockQueueResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUnlockQueueResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUnlockQueueResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUnlockQueueResp::MergeFrom(const BuildUnlockQueueResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_build_queue()) {
      mutable_build_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.build_queue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUnlockQueueResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUnlockQueueResp::CopyFrom(const BuildUnlockQueueResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUnlockQueueResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_build_queue()) {
    if (!this->build_queue().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  return true;
}

void BuildUnlockQueueResp::Swap(BuildUnlockQueueResp* other) {
  if (other != this) {
    std::swap(build_queue_, other->build_queue_);
    builds_.Swap(&other->builds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUnlockQueueResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUnlockQueueResp_descriptor_;
  metadata.reflection = BuildUnlockQueueResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUpgradeReq::kIdFieldNumber;
#endif  // !_MSC_VER

BuildUpgradeReq::BuildUpgradeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUpgradeReq)
}

void BuildUpgradeReq::InitAsDefaultInstance() {
}

BuildUpgradeReq::BuildUpgradeReq(const BuildUpgradeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUpgradeReq)
}

void BuildUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUpgradeReq::~BuildUpgradeReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUpgradeReq)
  SharedDtor();
}

void BuildUpgradeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUpgradeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUpgradeReq_descriptor_;
}

const BuildUpgradeReq& BuildUpgradeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUpgradeReq* BuildUpgradeReq::default_instance_ = NULL;

BuildUpgradeReq* BuildUpgradeReq::New() const {
  return new BuildUpgradeReq;
}

void BuildUpgradeReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUpgradeReq)
  return false;
#undef DO_
}

void BuildUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUpgradeReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUpgradeReq)
}

::google::protobuf::uint8* BuildUpgradeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUpgradeReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUpgradeReq)
  return target;
}

int BuildUpgradeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUpgradeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUpgradeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUpgradeReq::MergeFrom(const BuildUpgradeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUpgradeReq::CopyFrom(const BuildUpgradeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUpgradeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildUpgradeReq::Swap(BuildUpgradeReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUpgradeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUpgradeReq_descriptor_;
  metadata.reflection = BuildUpgradeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildUpgradeResp::kIdFieldNumber;
const int BuildUpgradeResp::kUserFieldNumber;
const int BuildUpgradeResp::kBuildQueueFieldNumber;
const int BuildUpgradeResp::kBuildsFieldNumber;
#endif  // !_MSC_VER

BuildUpgradeResp::BuildUpgradeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildUpgradeResp)
}

void BuildUpgradeResp::InitAsDefaultInstance() {
  user_ = const_cast< ::ProtoBuilding::BuildUserSyncInfo*>(&::ProtoBuilding::BuildUserSyncInfo::default_instance());
  build_queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
}

BuildUpgradeResp::BuildUpgradeResp(const BuildUpgradeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildUpgradeResp)
}

void BuildUpgradeResp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  user_ = NULL;
  build_queue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildUpgradeResp::~BuildUpgradeResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildUpgradeResp)
  SharedDtor();
}

void BuildUpgradeResp::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
    delete build_queue_;
  }
}

void BuildUpgradeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildUpgradeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildUpgradeResp_descriptor_;
}

const BuildUpgradeResp& BuildUpgradeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildUpgradeResp* BuildUpgradeResp::default_instance_ = NULL;

BuildUpgradeResp* BuildUpgradeResp::New() const {
  return new BuildUpgradeResp;
}

void BuildUpgradeResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    if (has_user()) {
      if (user_ != NULL) user_->::ProtoBuilding::BuildUserSyncInfo::Clear();
    }
    if (has_build_queue()) {
      if (build_queue_ != NULL) build_queue_->::ProtoBuilding::BuildQueue::Clear();
    }
  }
  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildUpgradeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildUpgradeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        break;
      }

      // required .ProtoBuilding.BuildUserSyncInfo user = 2;
      case 2: {
        if (tag == 18) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_build_queue;
        break;
      }

      // required .ProtoBuilding.BuildQueue build_queue = 3;
      case 3: {
        if (tag == 26) {
         parse_build_queue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildInfo builds = 4;
      case 4: {
        if (tag == 34) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_builds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildUpgradeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildUpgradeResp)
  return false;
#undef DO_
}

void BuildUpgradeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildUpgradeResp)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 2;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user(), output);
  }

  // required .ProtoBuilding.BuildQueue build_queue = 3;
  if (has_build_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->build_queue(), output);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 4;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->builds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildUpgradeResp)
}

::google::protobuf::uint8* BuildUpgradeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildUpgradeResp)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 2;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->user(), target);
  }

  // required .ProtoBuilding.BuildQueue build_queue = 3;
  if (has_build_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->build_queue(), target);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 4;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->builds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildUpgradeResp)
  return target;
}

int BuildUpgradeResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .ProtoBuilding.BuildUserSyncInfo user = 2;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

    // required .ProtoBuilding.BuildQueue build_queue = 3;
    if (has_build_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_queue());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 4;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildUpgradeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildUpgradeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildUpgradeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildUpgradeResp::MergeFrom(const BuildUpgradeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_user()) {
      mutable_user()->::ProtoBuilding::BuildUserSyncInfo::MergeFrom(from.user());
    }
    if (from.has_build_queue()) {
      mutable_build_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.build_queue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildUpgradeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildUpgradeResp::CopyFrom(const BuildUpgradeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildUpgradeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_user()) {
    if (!this->user().IsInitialized()) return false;
  }
  if (has_build_queue()) {
    if (!this->build_queue().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  return true;
}

void BuildUpgradeResp::Swap(BuildUpgradeResp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(user_, other->user_);
    std::swap(build_queue_, other->build_queue_);
    builds_.Swap(&other->builds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildUpgradeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildUpgradeResp_descriptor_;
  metadata.reflection = BuildUpgradeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildFreeSpeedReq::kIdFieldNumber;
#endif  // !_MSC_VER

BuildFreeSpeedReq::BuildFreeSpeedReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildFreeSpeedReq)
}

void BuildFreeSpeedReq::InitAsDefaultInstance() {
}

BuildFreeSpeedReq::BuildFreeSpeedReq(const BuildFreeSpeedReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildFreeSpeedReq)
}

void BuildFreeSpeedReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildFreeSpeedReq::~BuildFreeSpeedReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildFreeSpeedReq)
  SharedDtor();
}

void BuildFreeSpeedReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildFreeSpeedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildFreeSpeedReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildFreeSpeedReq_descriptor_;
}

const BuildFreeSpeedReq& BuildFreeSpeedReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildFreeSpeedReq* BuildFreeSpeedReq::default_instance_ = NULL;

BuildFreeSpeedReq* BuildFreeSpeedReq::New() const {
  return new BuildFreeSpeedReq;
}

void BuildFreeSpeedReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildFreeSpeedReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildFreeSpeedReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildFreeSpeedReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildFreeSpeedReq)
  return false;
#undef DO_
}

void BuildFreeSpeedReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildFreeSpeedReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildFreeSpeedReq)
}

::google::protobuf::uint8* BuildFreeSpeedReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildFreeSpeedReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildFreeSpeedReq)
  return target;
}

int BuildFreeSpeedReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildFreeSpeedReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildFreeSpeedReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildFreeSpeedReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildFreeSpeedReq::MergeFrom(const BuildFreeSpeedReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildFreeSpeedReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildFreeSpeedReq::CopyFrom(const BuildFreeSpeedReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildFreeSpeedReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildFreeSpeedReq::Swap(BuildFreeSpeedReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildFreeSpeedReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildFreeSpeedReq_descriptor_;
  metadata.reflection = BuildFreeSpeedReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildFreeSpeedResp::kBuildFieldNumber;
const int BuildFreeSpeedResp::kQueueFieldNumber;
#endif  // !_MSC_VER

BuildFreeSpeedResp::BuildFreeSpeedResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildFreeSpeedResp)
}

void BuildFreeSpeedResp::InitAsDefaultInstance() {
  queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
}

BuildFreeSpeedResp::BuildFreeSpeedResp(const BuildFreeSpeedResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildFreeSpeedResp)
}

void BuildFreeSpeedResp::SharedCtor() {
  _cached_size_ = 0;
  queue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildFreeSpeedResp::~BuildFreeSpeedResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildFreeSpeedResp)
  SharedDtor();
}

void BuildFreeSpeedResp::SharedDtor() {
  if (this != default_instance_) {
    delete queue_;
  }
}

void BuildFreeSpeedResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildFreeSpeedResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildFreeSpeedResp_descriptor_;
}

const BuildFreeSpeedResp& BuildFreeSpeedResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildFreeSpeedResp* BuildFreeSpeedResp::default_instance_ = NULL;

BuildFreeSpeedResp* BuildFreeSpeedResp::New() const {
  return new BuildFreeSpeedResp;
}

void BuildFreeSpeedResp::Clear() {
  if (has_queue()) {
    if (queue_ != NULL) queue_->::ProtoBuilding::BuildQueue::Clear();
  }
  build_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildFreeSpeedResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildFreeSpeedResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuilding.BuildInfo build = 1;
      case 1: {
        if (tag == 10) {
         parse_build:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_build;
        if (input->ExpectTag(18)) goto parse_queue;
        break;
      }

      // required .ProtoBuilding.BuildQueue queue = 2;
      case 2: {
        if (tag == 18) {
         parse_queue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildFreeSpeedResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildFreeSpeedResp)
  return false;
#undef DO_
}

void BuildFreeSpeedResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildFreeSpeedResp)
  // repeated .ProtoBuilding.BuildInfo build = 1;
  for (int i = 0; i < this->build_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->build(i), output);
  }

  // required .ProtoBuilding.BuildQueue queue = 2;
  if (has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->queue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildFreeSpeedResp)
}

::google::protobuf::uint8* BuildFreeSpeedResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildFreeSpeedResp)
  // repeated .ProtoBuilding.BuildInfo build = 1;
  for (int i = 0; i < this->build_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->build(i), target);
  }

  // required .ProtoBuilding.BuildQueue queue = 2;
  if (has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->queue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildFreeSpeedResp)
  return target;
}

int BuildFreeSpeedResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .ProtoBuilding.BuildQueue queue = 2;
    if (has_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queue());
    }

  }
  // repeated .ProtoBuilding.BuildInfo build = 1;
  total_size += 1 * this->build_size();
  for (int i = 0; i < this->build_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->build(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildFreeSpeedResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildFreeSpeedResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildFreeSpeedResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildFreeSpeedResp::MergeFrom(const BuildFreeSpeedResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  build_.MergeFrom(from.build_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_queue()) {
      mutable_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.queue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildFreeSpeedResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildFreeSpeedResp::CopyFrom(const BuildFreeSpeedResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildFreeSpeedResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->build())) return false;
  if (has_queue()) {
    if (!this->queue().IsInitialized()) return false;
  }
  return true;
}

void BuildFreeSpeedResp::Swap(BuildFreeSpeedResp* other) {
  if (other != this) {
    build_.Swap(&other->build_);
    std::swap(queue_, other->queue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildFreeSpeedResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildFreeSpeedResp_descriptor_;
  metadata.reflection = BuildFreeSpeedResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuildOverOnceReq::BuildOverOnceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildOverOnceReq)
}

void BuildOverOnceReq::InitAsDefaultInstance() {
}

BuildOverOnceReq::BuildOverOnceReq(const BuildOverOnceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildOverOnceReq)
}

void BuildOverOnceReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildOverOnceReq::~BuildOverOnceReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildOverOnceReq)
  SharedDtor();
}

void BuildOverOnceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildOverOnceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOverOnceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildOverOnceReq_descriptor_;
}

const BuildOverOnceReq& BuildOverOnceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildOverOnceReq* BuildOverOnceReq::default_instance_ = NULL;

BuildOverOnceReq* BuildOverOnceReq::New() const {
  return new BuildOverOnceReq;
}

void BuildOverOnceReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildOverOnceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildOverOnceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildOverOnceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildOverOnceReq)
  return false;
#undef DO_
}

void BuildOverOnceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildOverOnceReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildOverOnceReq)
}

::google::protobuf::uint8* BuildOverOnceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildOverOnceReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildOverOnceReq)
  return target;
}

int BuildOverOnceReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOverOnceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildOverOnceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildOverOnceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildOverOnceReq::MergeFrom(const BuildOverOnceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildOverOnceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOverOnceReq::CopyFrom(const BuildOverOnceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOverOnceReq::IsInitialized() const {

  return true;
}

void BuildOverOnceReq::Swap(BuildOverOnceReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildOverOnceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildOverOnceReq_descriptor_;
  metadata.reflection = BuildOverOnceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildOverOnceResp::kBuildsFieldNumber;
const int BuildOverOnceResp::kHammerCntFieldNumber;
const int BuildOverOnceResp::kBuildQueueFieldNumber;
const int BuildOverOnceResp::kCashFieldNumber;
const int BuildOverOnceResp::kTotalExploitFieldNumber;
#endif  // !_MSC_VER

BuildOverOnceResp::BuildOverOnceResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildOverOnceResp)
}

void BuildOverOnceResp::InitAsDefaultInstance() {
  build_queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
}

BuildOverOnceResp::BuildOverOnceResp(const BuildOverOnceResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildOverOnceResp)
}

void BuildOverOnceResp::SharedCtor() {
  _cached_size_ = 0;
  hammer_cnt_ = 0u;
  build_queue_ = NULL;
  cash_ = 0u;
  total_exploit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildOverOnceResp::~BuildOverOnceResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildOverOnceResp)
  SharedDtor();
}

void BuildOverOnceResp::SharedDtor() {
  if (this != default_instance_) {
    delete build_queue_;
  }
}

void BuildOverOnceResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOverOnceResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildOverOnceResp_descriptor_;
}

const BuildOverOnceResp& BuildOverOnceResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildOverOnceResp* BuildOverOnceResp::default_instance_ = NULL;

BuildOverOnceResp* BuildOverOnceResp::New() const {
  return new BuildOverOnceResp;
}

void BuildOverOnceResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildOverOnceResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 30) {
    ZR_(hammer_cnt_, total_exploit_);
    if (has_build_queue()) {
      if (build_queue_ != NULL) build_queue_->::ProtoBuilding::BuildQueue::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildOverOnceResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildOverOnceResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuilding.BuildInfo builds = 1;
      case 1: {
        if (tag == 10) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_builds;
        if (input->ExpectTag(16)) goto parse_hammer_cnt;
        break;
      }

      // required uint32 hammer_cnt = 2;
      case 2: {
        if (tag == 16) {
         parse_hammer_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hammer_cnt_)));
          set_has_hammer_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_build_queue;
        break;
      }

      // required .ProtoBuilding.BuildQueue build_queue = 3;
      case 3: {
        if (tag == 26) {
         parse_build_queue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cash;
        break;
      }

      // required uint32 cash = 4;
      case 4: {
        if (tag == 32) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_total_exploit;
        break;
      }

      // required uint32 total_exploit = 5;
      case 5: {
        if (tag == 40) {
         parse_total_exploit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_exploit_)));
          set_has_total_exploit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildOverOnceResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildOverOnceResp)
  return false;
#undef DO_
}

void BuildOverOnceResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildOverOnceResp)
  // repeated .ProtoBuilding.BuildInfo builds = 1;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->builds(i), output);
  }

  // required uint32 hammer_cnt = 2;
  if (has_hammer_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hammer_cnt(), output);
  }

  // required .ProtoBuilding.BuildQueue build_queue = 3;
  if (has_build_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->build_queue(), output);
  }

  // required uint32 cash = 4;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cash(), output);
  }

  // required uint32 total_exploit = 5;
  if (has_total_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->total_exploit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildOverOnceResp)
}

::google::protobuf::uint8* BuildOverOnceResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildOverOnceResp)
  // repeated .ProtoBuilding.BuildInfo builds = 1;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->builds(i), target);
  }

  // required uint32 hammer_cnt = 2;
  if (has_hammer_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hammer_cnt(), target);
  }

  // required .ProtoBuilding.BuildQueue build_queue = 3;
  if (has_build_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->build_queue(), target);
  }

  // required uint32 cash = 4;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cash(), target);
  }

  // required uint32 total_exploit = 5;
  if (has_total_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->total_exploit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildOverOnceResp)
  return target;
}

int BuildOverOnceResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 hammer_cnt = 2;
    if (has_hammer_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hammer_cnt());
    }

    // required .ProtoBuilding.BuildQueue build_queue = 3;
    if (has_build_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_queue());
    }

    // required uint32 cash = 4;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required uint32 total_exploit = 5;
    if (has_total_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_exploit());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 1;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOverOnceResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildOverOnceResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildOverOnceResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildOverOnceResp::MergeFrom(const BuildOverOnceResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_hammer_cnt()) {
      set_hammer_cnt(from.hammer_cnt());
    }
    if (from.has_build_queue()) {
      mutable_build_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.build_queue());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_total_exploit()) {
      set_total_exploit(from.total_exploit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildOverOnceResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOverOnceResp::CopyFrom(const BuildOverOnceResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOverOnceResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (has_build_queue()) {
    if (!this->build_queue().IsInitialized()) return false;
  }
  return true;
}

void BuildOverOnceResp::Swap(BuildOverOnceResp* other) {
  if (other != this) {
    builds_.Swap(&other->builds_);
    std::swap(hammer_cnt_, other->hammer_cnt_);
    std::swap(build_queue_, other->build_queue_);
    std::swap(cash_, other->cash_);
    std::swap(total_exploit_, other->total_exploit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildOverOnceResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildOverOnceResp_descriptor_;
  metadata.reflection = BuildOverOnceResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuildExploitReq::BuildExploitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildExploitReq)
}

void BuildExploitReq::InitAsDefaultInstance() {
}

BuildExploitReq::BuildExploitReq(const BuildExploitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildExploitReq)
}

void BuildExploitReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildExploitReq::~BuildExploitReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildExploitReq)
  SharedDtor();
}

void BuildExploitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildExploitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildExploitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildExploitReq_descriptor_;
}

const BuildExploitReq& BuildExploitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildExploitReq* BuildExploitReq::default_instance_ = NULL;

BuildExploitReq* BuildExploitReq::New() const {
  return new BuildExploitReq;
}

void BuildExploitReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildExploitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildExploitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildExploitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildExploitReq)
  return false;
#undef DO_
}

void BuildExploitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildExploitReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildExploitReq)
}

::google::protobuf::uint8* BuildExploitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildExploitReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildExploitReq)
  return target;
}

int BuildExploitReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildExploitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildExploitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildExploitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildExploitReq::MergeFrom(const BuildExploitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildExploitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildExploitReq::CopyFrom(const BuildExploitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildExploitReq::IsInitialized() const {

  return true;
}

void BuildExploitReq::Swap(BuildExploitReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildExploitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildExploitReq_descriptor_;
  metadata.reflection = BuildExploitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildExploitResp::kUserExploitFieldNumber;
#endif  // !_MSC_VER

BuildExploitResp::BuildExploitResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildExploitResp)
}

void BuildExploitResp::InitAsDefaultInstance() {
}

BuildExploitResp::BuildExploitResp(const BuildExploitResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildExploitResp)
}

void BuildExploitResp::SharedCtor() {
  _cached_size_ = 0;
  user_exploit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildExploitResp::~BuildExploitResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildExploitResp)
  SharedDtor();
}

void BuildExploitResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildExploitResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildExploitResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildExploitResp_descriptor_;
}

const BuildExploitResp& BuildExploitResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildExploitResp* BuildExploitResp::default_instance_ = NULL;

BuildExploitResp* BuildExploitResp::New() const {
  return new BuildExploitResp;
}

void BuildExploitResp::Clear() {
  user_exploit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildExploitResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildExploitResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_exploit = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_exploit_)));
          set_has_user_exploit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildExploitResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildExploitResp)
  return false;
#undef DO_
}

void BuildExploitResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildExploitResp)
  // required uint32 user_exploit = 1;
  if (has_user_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_exploit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildExploitResp)
}

::google::protobuf::uint8* BuildExploitResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildExploitResp)
  // required uint32 user_exploit = 1;
  if (has_user_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_exploit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildExploitResp)
  return target;
}

int BuildExploitResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user_exploit = 1;
    if (has_user_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_exploit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildExploitResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildExploitResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildExploitResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildExploitResp::MergeFrom(const BuildExploitResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_exploit()) {
      set_user_exploit(from.user_exploit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildExploitResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildExploitResp::CopyFrom(const BuildExploitResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildExploitResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildExploitResp::Swap(BuildExploitResp* other) {
  if (other != this) {
    std::swap(user_exploit_, other->user_exploit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildExploitResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildExploitResp_descriptor_;
  metadata.reflection = BuildExploitResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildAutoUpgradeReq::kTypeFieldNumber;
const int BuildAutoUpgradeReq::kHandleFieldNumber;
#endif  // !_MSC_VER

BuildAutoUpgradeReq::BuildAutoUpgradeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildAutoUpgradeReq)
}

void BuildAutoUpgradeReq::InitAsDefaultInstance() {
}

BuildAutoUpgradeReq::BuildAutoUpgradeReq(const BuildAutoUpgradeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildAutoUpgradeReq)
}

void BuildAutoUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  handle_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildAutoUpgradeReq::~BuildAutoUpgradeReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildAutoUpgradeReq)
  SharedDtor();
}

void BuildAutoUpgradeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildAutoUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildAutoUpgradeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildAutoUpgradeReq_descriptor_;
}

const BuildAutoUpgradeReq& BuildAutoUpgradeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildAutoUpgradeReq* BuildAutoUpgradeReq::default_instance_ = NULL;

BuildAutoUpgradeReq* BuildAutoUpgradeReq::New() const {
  return new BuildAutoUpgradeReq;
}

void BuildAutoUpgradeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildAutoUpgradeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, handle_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildAutoUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildAutoUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handle;
        break;
      }

      // required bool handle = 2;
      case 2: {
        if (tag == 16) {
         parse_handle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &handle_)));
          set_has_handle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildAutoUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildAutoUpgradeReq)
  return false;
#undef DO_
}

void BuildAutoUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildAutoUpgradeReq)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required bool handle = 2;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->handle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildAutoUpgradeReq)
}

::google::protobuf::uint8* BuildAutoUpgradeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildAutoUpgradeReq)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required bool handle = 2;
  if (has_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->handle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildAutoUpgradeReq)
  return target;
}

int BuildAutoUpgradeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required bool handle = 2;
    if (has_handle()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildAutoUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildAutoUpgradeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildAutoUpgradeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildAutoUpgradeReq::MergeFrom(const BuildAutoUpgradeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_handle()) {
      set_handle(from.handle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildAutoUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildAutoUpgradeReq::CopyFrom(const BuildAutoUpgradeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildAutoUpgradeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BuildAutoUpgradeReq::Swap(BuildAutoUpgradeReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(handle_, other->handle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildAutoUpgradeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildAutoUpgradeReq_descriptor_;
  metadata.reflection = BuildAutoUpgradeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildAutoUpgradeResp::kBuildQueueFieldNumber;
const int BuildAutoUpgradeResp::kBuildsFieldNumber;
const int BuildAutoUpgradeResp::kUserFieldNumber;
#endif  // !_MSC_VER

BuildAutoUpgradeResp::BuildAutoUpgradeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildAutoUpgradeResp)
}

void BuildAutoUpgradeResp::InitAsDefaultInstance() {
  build_queue_ = const_cast< ::ProtoBuilding::BuildQueue*>(&::ProtoBuilding::BuildQueue::default_instance());
  user_ = const_cast< ::ProtoBuilding::BuildUserSyncInfo*>(&::ProtoBuilding::BuildUserSyncInfo::default_instance());
}

BuildAutoUpgradeResp::BuildAutoUpgradeResp(const BuildAutoUpgradeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildAutoUpgradeResp)
}

void BuildAutoUpgradeResp::SharedCtor() {
  _cached_size_ = 0;
  build_queue_ = NULL;
  user_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildAutoUpgradeResp::~BuildAutoUpgradeResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildAutoUpgradeResp)
  SharedDtor();
}

void BuildAutoUpgradeResp::SharedDtor() {
  if (this != default_instance_) {
    delete build_queue_;
    delete user_;
  }
}

void BuildAutoUpgradeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildAutoUpgradeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildAutoUpgradeResp_descriptor_;
}

const BuildAutoUpgradeResp& BuildAutoUpgradeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildAutoUpgradeResp* BuildAutoUpgradeResp::default_instance_ = NULL;

BuildAutoUpgradeResp* BuildAutoUpgradeResp::New() const {
  return new BuildAutoUpgradeResp;
}

void BuildAutoUpgradeResp::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_build_queue()) {
      if (build_queue_ != NULL) build_queue_->::ProtoBuilding::BuildQueue::Clear();
    }
    if (has_user()) {
      if (user_ != NULL) user_->::ProtoBuilding::BuildUserSyncInfo::Clear();
    }
  }
  builds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildAutoUpgradeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildAutoUpgradeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoBuilding.BuildQueue build_queue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_queue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildInfo builds = 2;
      case 2: {
        if (tag == 18) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        if (input->ExpectTag(26)) goto parse_user;
        break;
      }

      // required .ProtoBuilding.BuildUserSyncInfo user = 3;
      case 3: {
        if (tag == 26) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildAutoUpgradeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildAutoUpgradeResp)
  return false;
#undef DO_
}

void BuildAutoUpgradeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildAutoUpgradeResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->build_queue(), output);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->builds(i), output);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 3;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->user(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildAutoUpgradeResp)
}

::google::protobuf::uint8* BuildAutoUpgradeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildAutoUpgradeResp)
  // required .ProtoBuilding.BuildQueue build_queue = 1;
  if (has_build_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->build_queue(), target);
  }

  // repeated .ProtoBuilding.BuildInfo builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->builds(i), target);
  }

  // required .ProtoBuilding.BuildUserSyncInfo user = 3;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->user(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildAutoUpgradeResp)
  return target;
}

int BuildAutoUpgradeResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoBuilding.BuildQueue build_queue = 1;
    if (has_build_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_queue());
    }

    // required .ProtoBuilding.BuildUserSyncInfo user = 3;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

  }
  // repeated .ProtoBuilding.BuildInfo builds = 2;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildAutoUpgradeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildAutoUpgradeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildAutoUpgradeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildAutoUpgradeResp::MergeFrom(const BuildAutoUpgradeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_build_queue()) {
      mutable_build_queue()->::ProtoBuilding::BuildQueue::MergeFrom(from.build_queue());
    }
    if (from.has_user()) {
      mutable_user()->::ProtoBuilding::BuildUserSyncInfo::MergeFrom(from.user());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildAutoUpgradeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildAutoUpgradeResp::CopyFrom(const BuildAutoUpgradeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildAutoUpgradeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (has_build_queue()) {
    if (!this->build_queue().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (has_user()) {
    if (!this->user().IsInitialized()) return false;
  }
  return true;
}

void BuildAutoUpgradeResp::Swap(BuildAutoUpgradeResp* other) {
  if (other != this) {
    std::swap(build_queue_, other->build_queue_);
    builds_.Swap(&other->builds_);
    std::swap(user_, other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildAutoUpgradeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildAutoUpgradeResp_descriptor_;
  metadata.reflection = BuildAutoUpgradeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuildResourceSyncReq::BuildResourceSyncReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildResourceSyncReq)
}

void BuildResourceSyncReq::InitAsDefaultInstance() {
}

BuildResourceSyncReq::BuildResourceSyncReq(const BuildResourceSyncReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildResourceSyncReq)
}

void BuildResourceSyncReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResourceSyncReq::~BuildResourceSyncReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildResourceSyncReq)
  SharedDtor();
}

void BuildResourceSyncReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildResourceSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResourceSyncReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResourceSyncReq_descriptor_;
}

const BuildResourceSyncReq& BuildResourceSyncReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildResourceSyncReq* BuildResourceSyncReq::default_instance_ = NULL;

BuildResourceSyncReq* BuildResourceSyncReq::New() const {
  return new BuildResourceSyncReq;
}

void BuildResourceSyncReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResourceSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildResourceSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildResourceSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildResourceSyncReq)
  return false;
#undef DO_
}

void BuildResourceSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildResourceSyncReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildResourceSyncReq)
}

::google::protobuf::uint8* BuildResourceSyncReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildResourceSyncReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildResourceSyncReq)
  return target;
}

int BuildResourceSyncReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResourceSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResourceSyncReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResourceSyncReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResourceSyncReq::MergeFrom(const BuildResourceSyncReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResourceSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResourceSyncReq::CopyFrom(const BuildResourceSyncReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResourceSyncReq::IsInitialized() const {

  return true;
}

void BuildResourceSyncReq::Swap(BuildResourceSyncReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResourceSyncReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResourceSyncReq_descriptor_;
  metadata.reflection = BuildResourceSyncReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildResourceSyncResq::kCoinFieldNumber;
const int BuildResourceSyncResq::kWoodFieldNumber;
const int BuildResourceSyncResq::kFoodFieldNumber;
const int BuildResourceSyncResq::kIronFieldNumber;
#endif  // !_MSC_VER

BuildResourceSyncResq::BuildResourceSyncResq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildResourceSyncResq)
}

void BuildResourceSyncResq::InitAsDefaultInstance() {
}

BuildResourceSyncResq::BuildResourceSyncResq(const BuildResourceSyncResq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildResourceSyncResq)
}

void BuildResourceSyncResq::SharedCtor() {
  _cached_size_ = 0;
  coin_ = 0u;
  wood_ = 0u;
  food_ = 0u;
  iron_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResourceSyncResq::~BuildResourceSyncResq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildResourceSyncResq)
  SharedDtor();
}

void BuildResourceSyncResq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildResourceSyncResq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResourceSyncResq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResourceSyncResq_descriptor_;
}

const BuildResourceSyncResq& BuildResourceSyncResq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildResourceSyncResq* BuildResourceSyncResq::default_instance_ = NULL;

BuildResourceSyncResq* BuildResourceSyncResq::New() const {
  return new BuildResourceSyncResq;
}

void BuildResourceSyncResq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildResourceSyncResq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(coin_, iron_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResourceSyncResq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildResourceSyncResq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 coin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wood;
        break;
      }

      // required uint32 wood = 2;
      case 2: {
        if (tag == 16) {
         parse_wood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wood_)));
          set_has_wood();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_food;
        break;
      }

      // required uint32 food = 3;
      case 3: {
        if (tag == 24) {
         parse_food:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &food_)));
          set_has_food();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_iron;
        break;
      }

      // required uint32 iron = 4;
      case 4: {
        if (tag == 32) {
         parse_iron:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iron_)));
          set_has_iron();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildResourceSyncResq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildResourceSyncResq)
  return false;
#undef DO_
}

void BuildResourceSyncResq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildResourceSyncResq)
  // required uint32 coin = 1;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->coin(), output);
  }

  // required uint32 wood = 2;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wood(), output);
  }

  // required uint32 food = 3;
  if (has_food()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->food(), output);
  }

  // required uint32 iron = 4;
  if (has_iron()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->iron(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildResourceSyncResq)
}

::google::protobuf::uint8* BuildResourceSyncResq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildResourceSyncResq)
  // required uint32 coin = 1;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->coin(), target);
  }

  // required uint32 wood = 2;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wood(), target);
  }

  // required uint32 food = 3;
  if (has_food()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->food(), target);
  }

  // required uint32 iron = 4;
  if (has_iron()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->iron(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildResourceSyncResq)
  return target;
}

int BuildResourceSyncResq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 coin = 1;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required uint32 wood = 2;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wood());
    }

    // required uint32 food = 3;
    if (has_food()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->food());
    }

    // required uint32 iron = 4;
    if (has_iron()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iron());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResourceSyncResq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResourceSyncResq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResourceSyncResq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResourceSyncResq::MergeFrom(const BuildResourceSyncResq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_wood()) {
      set_wood(from.wood());
    }
    if (from.has_food()) {
      set_food(from.food());
    }
    if (from.has_iron()) {
      set_iron(from.iron());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResourceSyncResq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResourceSyncResq::CopyFrom(const BuildResourceSyncResq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResourceSyncResq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void BuildResourceSyncResq::Swap(BuildResourceSyncResq* other) {
  if (other != this) {
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(food_, other->food_);
    std::swap(iron_, other->iron_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResourceSyncResq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResourceSyncResq_descriptor_;
  metadata.reflection = BuildResourceSyncResq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuilding

// @@protoc_insertion_point(global_scope)
