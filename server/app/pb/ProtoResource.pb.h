// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoResource.proto

#ifndef PROTOBUF_ProtoResource_2eproto__INCLUDED
#define PROTOBUF_ProtoResource_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoResource {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoResource_2eproto();
void protobuf_AssignDesc_ProtoResource_2eproto();
void protobuf_ShutdownFile_ProtoResource_2eproto();

class FlamenReq;
class FlamemResp;
class CutBlackMarketCDReq;
class CutBlackMarketCDResp;
class BMarketExchangeReq;
class BMarketExchangeResp;

// ===================================================================

class FlamenReq : public ::google::protobuf::Message {
 public:
  FlamenReq();
  virtual ~FlamenReq();

  FlamenReq(const FlamenReq& from);

  inline FlamenReq& operator=(const FlamenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlamenReq& default_instance();

  void Swap(FlamenReq* other);

  // implements Message ----------------------------------------------

  FlamenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlamenReq& from);
  void MergeFrom(const FlamenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required bool isOnce = 2;
  inline bool has_isonce() const;
  inline void clear_isonce();
  static const int kIsOnceFieldNumber = 2;
  inline bool isonce() const;
  inline void set_isonce(bool value);

  // required bool isFree = 3;
  inline bool has_isfree() const;
  inline void clear_isfree();
  static const int kIsFreeFieldNumber = 3;
  inline bool isfree() const;
  inline void set_isfree(bool value);

  // @@protoc_insertion_point(class_scope:ProtoResource.FlamenReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isonce();
  inline void clear_has_isonce();
  inline void set_has_isfree();
  inline void clear_has_isfree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  bool isonce_;
  bool isfree_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static FlamenReq* default_instance_;
};
// -------------------------------------------------------------------

class FlamemResp : public ::google::protobuf::Message {
 public:
  FlamemResp();
  virtual ~FlamemResp();

  FlamemResp(const FlamemResp& from);

  inline FlamemResp& operator=(const FlamemResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlamemResp& default_instance();

  void Swap(FlamemResp* other);

  // implements Message ----------------------------------------------

  FlamemResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlamemResp& from);
  void MergeFrom(const FlamemResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated uint32 multiple = 2;
  inline int multiple_size() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 2;
  inline ::google::protobuf::uint32 multiple(int index) const;
  inline void set_multiple(int index, ::google::protobuf::uint32 value);
  inline void add_multiple(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      multiple() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_multiple();

  // required uint64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // required uint32 free_cnt = 4;
  inline bool has_free_cnt() const;
  inline void clear_free_cnt();
  static const int kFreeCntFieldNumber = 4;
  inline ::google::protobuf::uint32 free_cnt() const;
  inline void set_free_cnt(::google::protobuf::uint32 value);

  // required uint32 buy_cnt = 5;
  inline bool has_buy_cnt() const;
  inline void clear_buy_cnt();
  static const int kBuyCntFieldNumber = 5;
  inline ::google::protobuf::uint32 buy_cnt() const;
  inline void set_buy_cnt(::google::protobuf::uint32 value);

  // required uint32 cash = 6;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 6;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // repeated uint32 rewards = 7;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 7;
  inline ::google::protobuf::uint32 rewards(int index) const;
  inline void set_rewards(int index, ::google::protobuf::uint32 value);
  inline void add_rewards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:ProtoResource.FlamemResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_free_cnt();
  inline void clear_has_free_cnt();
  inline void set_has_buy_cnt();
  inline void clear_has_buy_cnt();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > multiple_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 free_cnt_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 buy_cnt_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewards_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static FlamemResp* default_instance_;
};
// -------------------------------------------------------------------

class CutBlackMarketCDReq : public ::google::protobuf::Message {
 public:
  CutBlackMarketCDReq();
  virtual ~CutBlackMarketCDReq();

  CutBlackMarketCDReq(const CutBlackMarketCDReq& from);

  inline CutBlackMarketCDReq& operator=(const CutBlackMarketCDReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutBlackMarketCDReq& default_instance();

  void Swap(CutBlackMarketCDReq* other);

  // implements Message ----------------------------------------------

  CutBlackMarketCDReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutBlackMarketCDReq& from);
  void MergeFrom(const CutBlackMarketCDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoResource.CutBlackMarketCDReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static CutBlackMarketCDReq* default_instance_;
};
// -------------------------------------------------------------------

class CutBlackMarketCDResp : public ::google::protobuf::Message {
 public:
  CutBlackMarketCDResp();
  virtual ~CutBlackMarketCDResp();

  CutBlackMarketCDResp(const CutBlackMarketCDResp& from);

  inline CutBlackMarketCDResp& operator=(const CutBlackMarketCDResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutBlackMarketCDResp& default_instance();

  void Swap(CutBlackMarketCDResp* other);

  // implements Message ----------------------------------------------

  CutBlackMarketCDResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutBlackMarketCDResp& from);
  void MergeFrom(const CutBlackMarketCDResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bmarketcd = 1;
  inline bool has_bmarketcd() const;
  inline void clear_bmarketcd();
  static const int kBmarketcdFieldNumber = 1;
  inline ::google::protobuf::uint32 bmarketcd() const;
  inline void set_bmarketcd(::google::protobuf::uint32 value);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResource.CutBlackMarketCDResp)
 private:
  inline void set_has_bmarketcd();
  inline void clear_has_bmarketcd();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bmarketcd_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static CutBlackMarketCDResp* default_instance_;
};
// -------------------------------------------------------------------

class BMarketExchangeReq : public ::google::protobuf::Message {
 public:
  BMarketExchangeReq();
  virtual ~BMarketExchangeReq();

  BMarketExchangeReq(const BMarketExchangeReq& from);

  inline BMarketExchangeReq& operator=(const BMarketExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BMarketExchangeReq& default_instance();

  void Swap(BMarketExchangeReq* other);

  // implements Message ----------------------------------------------

  BMarketExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BMarketExchangeReq& from);
  void MergeFrom(const BMarketExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 usedtype = 1;
  inline bool has_usedtype() const;
  inline void clear_usedtype();
  static const int kUsedtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 usedtype() const;
  inline void set_usedtype(::google::protobuf::uint32 value);

  // required uint32 gaintype = 2;
  inline bool has_gaintype() const;
  inline void clear_gaintype();
  static const int kGaintypeFieldNumber = 2;
  inline ::google::protobuf::uint32 gaintype() const;
  inline void set_gaintype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResource.BMarketExchangeReq)
 private:
  inline void set_has_usedtype();
  inline void clear_has_usedtype();
  inline void set_has_gaintype();
  inline void clear_has_gaintype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 usedtype_;
  ::google::protobuf::uint32 gaintype_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static BMarketExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

class BMarketExchangeResp : public ::google::protobuf::Message {
 public:
  BMarketExchangeResp();
  virtual ~BMarketExchangeResp();

  BMarketExchangeResp(const BMarketExchangeResp& from);

  inline BMarketExchangeResp& operator=(const BMarketExchangeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BMarketExchangeResp& default_instance();

  void Swap(BMarketExchangeResp* other);

  // implements Message ----------------------------------------------

  BMarketExchangeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BMarketExchangeResp& from);
  void MergeFrom(const BMarketExchangeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 wood = 2;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 2;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // required uint32 food = 3;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 3;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // required uint32 bmarketcd = 4;
  inline bool has_bmarketcd() const;
  inline void clear_bmarketcd();
  static const int kBmarketcdFieldNumber = 4;
  inline ::google::protobuf::uint32 bmarketcd() const;
  inline void set_bmarketcd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResource.BMarketExchangeResp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_bmarketcd();
  inline void clear_has_bmarketcd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 bmarketcd_;
  friend void  protobuf_AddDesc_ProtoResource_2eproto();
  friend void protobuf_AssignDesc_ProtoResource_2eproto();
  friend void protobuf_ShutdownFile_ProtoResource_2eproto();

  void InitAsDefaultInstance();
  static BMarketExchangeResp* default_instance_;
};
// ===================================================================


// ===================================================================

// FlamenReq

// required uint32 type = 1;
inline bool FlamenReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FlamenReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FlamenReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FlamenReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 FlamenReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamenReq.type)
  return type_;
}
inline void FlamenReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamenReq.type)
}

// required bool isOnce = 2;
inline bool FlamenReq::has_isonce() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FlamenReq::set_has_isonce() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FlamenReq::clear_has_isonce() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FlamenReq::clear_isonce() {
  isonce_ = false;
  clear_has_isonce();
}
inline bool FlamenReq::isonce() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamenReq.isOnce)
  return isonce_;
}
inline void FlamenReq::set_isonce(bool value) {
  set_has_isonce();
  isonce_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamenReq.isOnce)
}

// required bool isFree = 3;
inline bool FlamenReq::has_isfree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FlamenReq::set_has_isfree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FlamenReq::clear_has_isfree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FlamenReq::clear_isfree() {
  isfree_ = false;
  clear_has_isfree();
}
inline bool FlamenReq::isfree() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamenReq.isFree)
  return isfree_;
}
inline void FlamenReq::set_isfree(bool value) {
  set_has_isfree();
  isfree_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamenReq.isFree)
}

// -------------------------------------------------------------------

// FlamemResp

// required uint32 type = 1;
inline bool FlamemResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FlamemResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FlamemResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FlamemResp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 FlamemResp::type() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.type)
  return type_;
}
inline void FlamemResp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.type)
}

// repeated uint32 multiple = 2;
inline int FlamemResp::multiple_size() const {
  return multiple_.size();
}
inline void FlamemResp::clear_multiple() {
  multiple_.Clear();
}
inline ::google::protobuf::uint32 FlamemResp::multiple(int index) const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.multiple)
  return multiple_.Get(index);
}
inline void FlamemResp::set_multiple(int index, ::google::protobuf::uint32 value) {
  multiple_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.multiple)
}
inline void FlamemResp::add_multiple(::google::protobuf::uint32 value) {
  multiple_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoResource.FlamemResp.multiple)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FlamemResp::multiple() const {
  // @@protoc_insertion_point(field_list:ProtoResource.FlamemResp.multiple)
  return multiple_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FlamemResp::mutable_multiple() {
  // @@protoc_insertion_point(field_mutable_list:ProtoResource.FlamemResp.multiple)
  return &multiple_;
}

// required uint64 value = 3;
inline bool FlamemResp::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FlamemResp::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FlamemResp::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FlamemResp::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 FlamemResp::value() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.value)
  return value_;
}
inline void FlamemResp::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.value)
}

// required uint32 free_cnt = 4;
inline bool FlamemResp::has_free_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FlamemResp::set_has_free_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FlamemResp::clear_has_free_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FlamemResp::clear_free_cnt() {
  free_cnt_ = 0u;
  clear_has_free_cnt();
}
inline ::google::protobuf::uint32 FlamemResp::free_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.free_cnt)
  return free_cnt_;
}
inline void FlamemResp::set_free_cnt(::google::protobuf::uint32 value) {
  set_has_free_cnt();
  free_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.free_cnt)
}

// required uint32 buy_cnt = 5;
inline bool FlamemResp::has_buy_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FlamemResp::set_has_buy_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FlamemResp::clear_has_buy_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FlamemResp::clear_buy_cnt() {
  buy_cnt_ = 0u;
  clear_has_buy_cnt();
}
inline ::google::protobuf::uint32 FlamemResp::buy_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.buy_cnt)
  return buy_cnt_;
}
inline void FlamemResp::set_buy_cnt(::google::protobuf::uint32 value) {
  set_has_buy_cnt();
  buy_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.buy_cnt)
}

// required uint32 cash = 6;
inline bool FlamemResp::has_cash() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FlamemResp::set_has_cash() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FlamemResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FlamemResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 FlamemResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.cash)
  return cash_;
}
inline void FlamemResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.cash)
}

// repeated uint32 rewards = 7;
inline int FlamemResp::rewards_size() const {
  return rewards_.size();
}
inline void FlamemResp::clear_rewards() {
  rewards_.Clear();
}
inline ::google::protobuf::uint32 FlamemResp::rewards(int index) const {
  // @@protoc_insertion_point(field_get:ProtoResource.FlamemResp.rewards)
  return rewards_.Get(index);
}
inline void FlamemResp::set_rewards(int index, ::google::protobuf::uint32 value) {
  rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoResource.FlamemResp.rewards)
}
inline void FlamemResp::add_rewards(::google::protobuf::uint32 value) {
  rewards_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoResource.FlamemResp.rewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FlamemResp::rewards() const {
  // @@protoc_insertion_point(field_list:ProtoResource.FlamemResp.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FlamemResp::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:ProtoResource.FlamemResp.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// CutBlackMarketCDReq

// -------------------------------------------------------------------

// CutBlackMarketCDResp

// required uint32 bmarketcd = 1;
inline bool CutBlackMarketCDResp::has_bmarketcd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CutBlackMarketCDResp::set_has_bmarketcd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CutBlackMarketCDResp::clear_has_bmarketcd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CutBlackMarketCDResp::clear_bmarketcd() {
  bmarketcd_ = 0u;
  clear_has_bmarketcd();
}
inline ::google::protobuf::uint32 CutBlackMarketCDResp::bmarketcd() const {
  // @@protoc_insertion_point(field_get:ProtoResource.CutBlackMarketCDResp.bmarketcd)
  return bmarketcd_;
}
inline void CutBlackMarketCDResp::set_bmarketcd(::google::protobuf::uint32 value) {
  set_has_bmarketcd();
  bmarketcd_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.CutBlackMarketCDResp.bmarketcd)
}

// required uint32 cash = 2;
inline bool CutBlackMarketCDResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CutBlackMarketCDResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CutBlackMarketCDResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CutBlackMarketCDResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CutBlackMarketCDResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoResource.CutBlackMarketCDResp.cash)
  return cash_;
}
inline void CutBlackMarketCDResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.CutBlackMarketCDResp.cash)
}

// -------------------------------------------------------------------

// BMarketExchangeReq

// required uint32 usedtype = 1;
inline bool BMarketExchangeReq::has_usedtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BMarketExchangeReq::set_has_usedtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BMarketExchangeReq::clear_has_usedtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BMarketExchangeReq::clear_usedtype() {
  usedtype_ = 0u;
  clear_has_usedtype();
}
inline ::google::protobuf::uint32 BMarketExchangeReq::usedtype() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeReq.usedtype)
  return usedtype_;
}
inline void BMarketExchangeReq::set_usedtype(::google::protobuf::uint32 value) {
  set_has_usedtype();
  usedtype_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeReq.usedtype)
}

// required uint32 gaintype = 2;
inline bool BMarketExchangeReq::has_gaintype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BMarketExchangeReq::set_has_gaintype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BMarketExchangeReq::clear_has_gaintype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BMarketExchangeReq::clear_gaintype() {
  gaintype_ = 0u;
  clear_has_gaintype();
}
inline ::google::protobuf::uint32 BMarketExchangeReq::gaintype() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeReq.gaintype)
  return gaintype_;
}
inline void BMarketExchangeReq::set_gaintype(::google::protobuf::uint32 value) {
  set_has_gaintype();
  gaintype_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeReq.gaintype)
}

// -------------------------------------------------------------------

// BMarketExchangeResp

// required uint32 coin = 1;
inline bool BMarketExchangeResp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BMarketExchangeResp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BMarketExchangeResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BMarketExchangeResp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 BMarketExchangeResp::coin() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeResp.coin)
  return coin_;
}
inline void BMarketExchangeResp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeResp.coin)
}

// required uint32 wood = 2;
inline bool BMarketExchangeResp::has_wood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BMarketExchangeResp::set_has_wood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BMarketExchangeResp::clear_has_wood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BMarketExchangeResp::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 BMarketExchangeResp::wood() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeResp.wood)
  return wood_;
}
inline void BMarketExchangeResp::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeResp.wood)
}

// required uint32 food = 3;
inline bool BMarketExchangeResp::has_food() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BMarketExchangeResp::set_has_food() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BMarketExchangeResp::clear_has_food() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BMarketExchangeResp::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 BMarketExchangeResp::food() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeResp.food)
  return food_;
}
inline void BMarketExchangeResp::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeResp.food)
}

// required uint32 bmarketcd = 4;
inline bool BMarketExchangeResp::has_bmarketcd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BMarketExchangeResp::set_has_bmarketcd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BMarketExchangeResp::clear_has_bmarketcd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BMarketExchangeResp::clear_bmarketcd() {
  bmarketcd_ = 0u;
  clear_has_bmarketcd();
}
inline ::google::protobuf::uint32 BMarketExchangeResp::bmarketcd() const {
  // @@protoc_insertion_point(field_get:ProtoResource.BMarketExchangeResp.bmarketcd)
  return bmarketcd_;
}
inline void BMarketExchangeResp::set_bmarketcd(::google::protobuf::uint32 value) {
  set_has_bmarketcd();
  bmarketcd_ = value;
  // @@protoc_insertion_point(field_set:ProtoResource.BMarketExchangeResp.bmarketcd)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoResource

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoResource_2eproto__INCLUDED
