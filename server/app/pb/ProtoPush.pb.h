// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPush.proto

#ifndef PROTOBUF_ProtoPush_2eproto__INCLUDED
#define PROTOBUF_ProtoPush_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuilding.pb.h"
#include "ProtoHero.pb.h"
#include "ProtoScience.pb.h"
#include "ProtoPass.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoPush {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoPush_2eproto();
void protobuf_AssignDesc_ProtoPush_2eproto();
void protobuf_ShutdownFile_ProtoPush_2eproto();

class UserUpLevel;
class BuildYieldInfo;
class HerosInfo;
class ScienceFinish;
class PushNPCPassRecord;
class OnceEveryDayReward;
class SmeltActivityHint;
class TimesAddPushReq;
class MineKingdomRewardStatus;

// ===================================================================

class UserUpLevel : public ::google::protobuf::Message {
 public:
  UserUpLevel();
  virtual ~UserUpLevel();

  UserUpLevel(const UserUpLevel& from);

  inline UserUpLevel& operator=(const UserUpLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserUpLevel& default_instance();

  void Swap(UserUpLevel* other);

  // implements Message ----------------------------------------------

  UserUpLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserUpLevel& from);
  void MergeFrom(const UserUpLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 old_level = 2;
  inline bool has_old_level() const;
  inline void clear_old_level();
  static const int kOldLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 old_level() const;
  inline void set_old_level(::google::protobuf::uint32 value);

  // required uint32 new_level = 3;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 new_level() const;
  inline void set_new_level(::google::protobuf::uint32 value);

  // required uint64 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // required uint32 sacrifice = 5;
  inline bool has_sacrifice() const;
  inline void clear_sacrifice();
  static const int kSacrificeFieldNumber = 5;
  inline ::google::protobuf::uint32 sacrifice() const;
  inline void set_sacrifice(::google::protobuf::uint32 value);

  // required uint32 reward_s = 6;
  inline bool has_reward_s() const;
  inline void clear_reward_s();
  static const int kRewardSFieldNumber = 6;
  inline ::google::protobuf::uint32 reward_s() const;
  inline void set_reward_s(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPush.UserUpLevel)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_old_level();
  inline void clear_has_old_level();
  inline void set_has_new_level();
  inline void clear_has_new_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_sacrifice();
  inline void clear_has_sacrifice();
  inline void set_has_reward_s();
  inline void clear_has_reward_s();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 old_level_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 new_level_;
  ::google::protobuf::uint32 sacrifice_;
  ::google::protobuf::uint32 reward_s_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static UserUpLevel* default_instance_;
};
// -------------------------------------------------------------------

class BuildYieldInfo : public ::google::protobuf::Message {
 public:
  BuildYieldInfo();
  virtual ~BuildYieldInfo();

  BuildYieldInfo(const BuildYieldInfo& from);

  inline BuildYieldInfo& operator=(const BuildYieldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildYieldInfo& default_instance();

  void Swap(BuildYieldInfo* other);

  // implements Message ----------------------------------------------

  BuildYieldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildYieldInfo& from);
  void MergeFrom(const BuildYieldInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuilding.BuildYield yield = 1;
  inline int yield_size() const;
  inline void clear_yield();
  static const int kYieldFieldNumber = 1;
  inline const ::ProtoBuilding::BuildYield& yield(int index) const;
  inline ::ProtoBuilding::BuildYield* mutable_yield(int index);
  inline ::ProtoBuilding::BuildYield* add_yield();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildYield >&
      yield() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildYield >*
      mutable_yield();

  // @@protoc_insertion_point(class_scope:ProtoPush.BuildYieldInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildYield > yield_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static BuildYieldInfo* default_instance_;
};
// -------------------------------------------------------------------

class HerosInfo : public ::google::protobuf::Message {
 public:
  HerosInfo();
  virtual ~HerosInfo();

  HerosInfo(const HerosInfo& from);

  inline HerosInfo& operator=(const HerosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HerosInfo& default_instance();

  void Swap(HerosInfo* other);

  // implements Message ----------------------------------------------

  HerosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HerosInfo& from);
  void MergeFrom(const HerosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoHero.HeroBaseInfoCPP heros = 1;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 1;
  inline const ::ProtoHero::HeroBaseInfoCPP& heros(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_heros(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_heros();

  // @@protoc_insertion_point(class_scope:ProtoPush.HerosInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > heros_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static HerosInfo* default_instance_;
};
// -------------------------------------------------------------------

class ScienceFinish : public ::google::protobuf::Message {
 public:
  ScienceFinish();
  virtual ~ScienceFinish();

  ScienceFinish(const ScienceFinish& from);

  inline ScienceFinish& operator=(const ScienceFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScienceFinish& default_instance();

  void Swap(ScienceFinish* other);

  // implements Message ----------------------------------------------

  ScienceFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScienceFinish& from);
  void MergeFrom(const ScienceFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoScience.ScienceItemCPP science = 1;
  inline bool has_science() const;
  inline void clear_science();
  static const int kScienceFieldNumber = 1;
  inline const ::ProtoScience::ScienceItemCPP& science() const;
  inline ::ProtoScience::ScienceItemCPP* mutable_science();
  inline ::ProtoScience::ScienceItemCPP* release_science();
  inline void set_allocated_science(::ProtoScience::ScienceItemCPP* science);

  // @@protoc_insertion_point(class_scope:ProtoPush.ScienceFinish)
 private:
  inline void set_has_science();
  inline void clear_has_science();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoScience::ScienceItemCPP* science_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static ScienceFinish* default_instance_;
};
// -------------------------------------------------------------------

class PushNPCPassRecord : public ::google::protobuf::Message {
 public:
  PushNPCPassRecord();
  virtual ~PushNPCPassRecord();

  PushNPCPassRecord(const PushNPCPassRecord& from);

  inline PushNPCPassRecord& operator=(const PushNPCPassRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushNPCPassRecord& default_instance();

  void Swap(PushNPCPassRecord* other);

  // implements Message ----------------------------------------------

  PushNPCPassRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushNPCPassRecord& from);
  void MergeFrom(const PushNPCPassRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoPass.NPCPassRecord item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ProtoPass::NPCPassRecord& item() const;
  inline ::ProtoPass::NPCPassRecord* mutable_item();
  inline ::ProtoPass::NPCPassRecord* release_item();
  inline void set_allocated_item(::ProtoPass::NPCPassRecord* item);

  // @@protoc_insertion_point(class_scope:ProtoPush.PushNPCPassRecord)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoPass::NPCPassRecord* item_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static PushNPCPassRecord* default_instance_;
};
// -------------------------------------------------------------------

class OnceEveryDayReward : public ::google::protobuf::Message {
 public:
  OnceEveryDayReward();
  virtual ~OnceEveryDayReward();

  OnceEveryDayReward(const OnceEveryDayReward& from);

  inline OnceEveryDayReward& operator=(const OnceEveryDayReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnceEveryDayReward& default_instance();

  void Swap(OnceEveryDayReward* other);

  // implements Message ----------------------------------------------

  OnceEveryDayReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnceEveryDayReward& from);
  void MergeFrom(const OnceEveryDayReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 integral_time_cnt = 1;
  inline bool has_integral_time_cnt() const;
  inline void clear_integral_time_cnt();
  static const int kIntegralTimeCntFieldNumber = 1;
  inline ::google::protobuf::uint32 integral_time_cnt() const;
  inline void set_integral_time_cnt(::google::protobuf::uint32 value);

  // required uint32 market = 2;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 2;
  inline ::google::protobuf::uint32 market() const;
  inline void set_market(::google::protobuf::uint32 value);

  // required uint32 sacrifice = 3;
  inline bool has_sacrifice() const;
  inline void clear_sacrifice();
  static const int kSacrificeFieldNumber = 3;
  inline ::google::protobuf::uint32 sacrifice() const;
  inline void set_sacrifice(::google::protobuf::uint32 value);

  // required uint32 order = 4;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);

  // required uint32 refresh = 5;
  inline bool has_refresh() const;
  inline void clear_refresh();
  static const int kRefreshFieldNumber = 5;
  inline ::google::protobuf::uint32 refresh() const;
  inline void set_refresh(::google::protobuf::uint32 value);

  // required uint32 ladder = 6;
  inline bool has_ladder() const;
  inline void clear_ladder();
  static const int kLadderFieldNumber = 6;
  inline ::google::protobuf::uint32 ladder() const;
  inline void set_ladder(::google::protobuf::uint32 value);

  // required uint32 freerefresh = 7;
  inline bool has_freerefresh() const;
  inline void clear_freerefresh();
  static const int kFreerefreshFieldNumber = 7;
  inline ::google::protobuf::uint32 freerefresh() const;
  inline void set_freerefresh(::google::protobuf::uint32 value);

  // required uint32 reward_times = 8;
  inline bool has_reward_times() const;
  inline void clear_reward_times();
  static const int kRewardTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 reward_times() const;
  inline void set_reward_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPush.OnceEveryDayReward)
 private:
  inline void set_has_integral_time_cnt();
  inline void clear_has_integral_time_cnt();
  inline void set_has_market();
  inline void clear_has_market();
  inline void set_has_sacrifice();
  inline void clear_has_sacrifice();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_refresh();
  inline void clear_has_refresh();
  inline void set_has_ladder();
  inline void clear_has_ladder();
  inline void set_has_freerefresh();
  inline void clear_has_freerefresh();
  inline void set_has_reward_times();
  inline void clear_has_reward_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 integral_time_cnt_;
  ::google::protobuf::uint32 market_;
  ::google::protobuf::uint32 sacrifice_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 refresh_;
  ::google::protobuf::uint32 ladder_;
  ::google::protobuf::uint32 freerefresh_;
  ::google::protobuf::uint32 reward_times_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static OnceEveryDayReward* default_instance_;
};
// -------------------------------------------------------------------

class SmeltActivityHint : public ::google::protobuf::Message {
 public:
  SmeltActivityHint();
  virtual ~SmeltActivityHint();

  SmeltActivityHint(const SmeltActivityHint& from);

  inline SmeltActivityHint& operator=(const SmeltActivityHint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmeltActivityHint& default_instance();

  void Swap(SmeltActivityHint* other);

  // implements Message ----------------------------------------------

  SmeltActivityHint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmeltActivityHint& from);
  void MergeFrom(const SmeltActivityHint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPush.SmeltActivityHint)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static SmeltActivityHint* default_instance_;
};
// -------------------------------------------------------------------

class TimesAddPushReq : public ::google::protobuf::Message {
 public:
  TimesAddPushReq();
  virtual ~TimesAddPushReq();

  TimesAddPushReq(const TimesAddPushReq& from);

  inline TimesAddPushReq& operator=(const TimesAddPushReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimesAddPushReq& default_instance();

  void Swap(TimesAddPushReq* other);

  // implements Message ----------------------------------------------

  TimesAddPushReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimesAddPushReq& from);
  void MergeFrom(const TimesAddPushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mission_times = 1;
  inline bool has_mission_times() const;
  inline void clear_mission_times();
  static const int kMissionTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 mission_times() const;
  inline void set_mission_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPush.TimesAddPushReq)
 private:
  inline void set_has_mission_times();
  inline void clear_has_mission_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mission_times_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static TimesAddPushReq* default_instance_;
};
// -------------------------------------------------------------------

class MineKingdomRewardStatus : public ::google::protobuf::Message {
 public:
  MineKingdomRewardStatus();
  virtual ~MineKingdomRewardStatus();

  MineKingdomRewardStatus(const MineKingdomRewardStatus& from);

  inline MineKingdomRewardStatus& operator=(const MineKingdomRewardStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MineKingdomRewardStatus& default_instance();

  void Swap(MineKingdomRewardStatus* other);

  // implements Message ----------------------------------------------

  MineKingdomRewardStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MineKingdomRewardStatus& from);
  void MergeFrom(const MineKingdomRewardStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 kingdom = 1;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 1;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPush.MineKingdomRewardStatus)
 private:
  inline void set_has_kingdom();
  inline void clear_has_kingdom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 kingdom_;
  friend void  protobuf_AddDesc_ProtoPush_2eproto();
  friend void protobuf_AssignDesc_ProtoPush_2eproto();
  friend void protobuf_ShutdownFile_ProtoPush_2eproto();

  void InitAsDefaultInstance();
  static MineKingdomRewardStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// UserUpLevel

// required uint32 uid = 1;
inline bool UserUpLevel::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserUpLevel::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserUpLevel::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserUpLevel::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 UserUpLevel::uid() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.uid)
  return uid_;
}
inline void UserUpLevel::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.uid)
}

// required uint32 old_level = 2;
inline bool UserUpLevel::has_old_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserUpLevel::set_has_old_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserUpLevel::clear_has_old_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserUpLevel::clear_old_level() {
  old_level_ = 0u;
  clear_has_old_level();
}
inline ::google::protobuf::uint32 UserUpLevel::old_level() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.old_level)
  return old_level_;
}
inline void UserUpLevel::set_old_level(::google::protobuf::uint32 value) {
  set_has_old_level();
  old_level_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.old_level)
}

// required uint32 new_level = 3;
inline bool UserUpLevel::has_new_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserUpLevel::set_has_new_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserUpLevel::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserUpLevel::clear_new_level() {
  new_level_ = 0u;
  clear_has_new_level();
}
inline ::google::protobuf::uint32 UserUpLevel::new_level() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.new_level)
  return new_level_;
}
inline void UserUpLevel::set_new_level(::google::protobuf::uint32 value) {
  set_has_new_level();
  new_level_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.new_level)
}

// required uint64 exp = 4;
inline bool UserUpLevel::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserUpLevel::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserUpLevel::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserUpLevel::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 UserUpLevel::exp() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.exp)
  return exp_;
}
inline void UserUpLevel::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.exp)
}

// required uint32 sacrifice = 5;
inline bool UserUpLevel::has_sacrifice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserUpLevel::set_has_sacrifice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserUpLevel::clear_has_sacrifice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserUpLevel::clear_sacrifice() {
  sacrifice_ = 0u;
  clear_has_sacrifice();
}
inline ::google::protobuf::uint32 UserUpLevel::sacrifice() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.sacrifice)
  return sacrifice_;
}
inline void UserUpLevel::set_sacrifice(::google::protobuf::uint32 value) {
  set_has_sacrifice();
  sacrifice_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.sacrifice)
}

// required uint32 reward_s = 6;
inline bool UserUpLevel::has_reward_s() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserUpLevel::set_has_reward_s() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserUpLevel::clear_has_reward_s() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserUpLevel::clear_reward_s() {
  reward_s_ = 0u;
  clear_has_reward_s();
}
inline ::google::protobuf::uint32 UserUpLevel::reward_s() const {
  // @@protoc_insertion_point(field_get:ProtoPush.UserUpLevel.reward_s)
  return reward_s_;
}
inline void UserUpLevel::set_reward_s(::google::protobuf::uint32 value) {
  set_has_reward_s();
  reward_s_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.UserUpLevel.reward_s)
}

// -------------------------------------------------------------------

// BuildYieldInfo

// repeated .ProtoBuilding.BuildYield yield = 1;
inline int BuildYieldInfo::yield_size() const {
  return yield_.size();
}
inline void BuildYieldInfo::clear_yield() {
  yield_.Clear();
}
inline const ::ProtoBuilding::BuildYield& BuildYieldInfo::yield(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPush.BuildYieldInfo.yield)
  return yield_.Get(index);
}
inline ::ProtoBuilding::BuildYield* BuildYieldInfo::mutable_yield(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoPush.BuildYieldInfo.yield)
  return yield_.Mutable(index);
}
inline ::ProtoBuilding::BuildYield* BuildYieldInfo::add_yield() {
  // @@protoc_insertion_point(field_add:ProtoPush.BuildYieldInfo.yield)
  return yield_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildYield >&
BuildYieldInfo::yield() const {
  // @@protoc_insertion_point(field_list:ProtoPush.BuildYieldInfo.yield)
  return yield_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildYield >*
BuildYieldInfo::mutable_yield() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPush.BuildYieldInfo.yield)
  return &yield_;
}

// -------------------------------------------------------------------

// HerosInfo

// repeated .ProtoHero.HeroBaseInfoCPP heros = 1;
inline int HerosInfo::heros_size() const {
  return heros_.size();
}
inline void HerosInfo::clear_heros() {
  heros_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& HerosInfo::heros(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPush.HerosInfo.heros)
  return heros_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* HerosInfo::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoPush.HerosInfo.heros)
  return heros_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* HerosInfo::add_heros() {
  // @@protoc_insertion_point(field_add:ProtoPush.HerosInfo.heros)
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
HerosInfo::heros() const {
  // @@protoc_insertion_point(field_list:ProtoPush.HerosInfo.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
HerosInfo::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPush.HerosInfo.heros)
  return &heros_;
}

// -------------------------------------------------------------------

// ScienceFinish

// required .ProtoScience.ScienceItemCPP science = 1;
inline bool ScienceFinish::has_science() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScienceFinish::set_has_science() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScienceFinish::clear_has_science() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScienceFinish::clear_science() {
  if (science_ != NULL) science_->::ProtoScience::ScienceItemCPP::Clear();
  clear_has_science();
}
inline const ::ProtoScience::ScienceItemCPP& ScienceFinish::science() const {
  // @@protoc_insertion_point(field_get:ProtoPush.ScienceFinish.science)
  return science_ != NULL ? *science_ : *default_instance_->science_;
}
inline ::ProtoScience::ScienceItemCPP* ScienceFinish::mutable_science() {
  set_has_science();
  if (science_ == NULL) science_ = new ::ProtoScience::ScienceItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoPush.ScienceFinish.science)
  return science_;
}
inline ::ProtoScience::ScienceItemCPP* ScienceFinish::release_science() {
  clear_has_science();
  ::ProtoScience::ScienceItemCPP* temp = science_;
  science_ = NULL;
  return temp;
}
inline void ScienceFinish::set_allocated_science(::ProtoScience::ScienceItemCPP* science) {
  delete science_;
  science_ = science;
  if (science) {
    set_has_science();
  } else {
    clear_has_science();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoPush.ScienceFinish.science)
}

// -------------------------------------------------------------------

// PushNPCPassRecord

// required .ProtoPass.NPCPassRecord item = 1;
inline bool PushNPCPassRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushNPCPassRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushNPCPassRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushNPCPassRecord::clear_item() {
  if (item_ != NULL) item_->::ProtoPass::NPCPassRecord::Clear();
  clear_has_item();
}
inline const ::ProtoPass::NPCPassRecord& PushNPCPassRecord::item() const {
  // @@protoc_insertion_point(field_get:ProtoPush.PushNPCPassRecord.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoPass::NPCPassRecord* PushNPCPassRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoPass::NPCPassRecord;
  // @@protoc_insertion_point(field_mutable:ProtoPush.PushNPCPassRecord.item)
  return item_;
}
inline ::ProtoPass::NPCPassRecord* PushNPCPassRecord::release_item() {
  clear_has_item();
  ::ProtoPass::NPCPassRecord* temp = item_;
  item_ = NULL;
  return temp;
}
inline void PushNPCPassRecord::set_allocated_item(::ProtoPass::NPCPassRecord* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoPush.PushNPCPassRecord.item)
}

// -------------------------------------------------------------------

// OnceEveryDayReward

// required uint32 integral_time_cnt = 1;
inline bool OnceEveryDayReward::has_integral_time_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnceEveryDayReward::set_has_integral_time_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnceEveryDayReward::clear_has_integral_time_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnceEveryDayReward::clear_integral_time_cnt() {
  integral_time_cnt_ = 0u;
  clear_has_integral_time_cnt();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::integral_time_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.integral_time_cnt)
  return integral_time_cnt_;
}
inline void OnceEveryDayReward::set_integral_time_cnt(::google::protobuf::uint32 value) {
  set_has_integral_time_cnt();
  integral_time_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.integral_time_cnt)
}

// required uint32 market = 2;
inline bool OnceEveryDayReward::has_market() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnceEveryDayReward::set_has_market() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnceEveryDayReward::clear_has_market() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnceEveryDayReward::clear_market() {
  market_ = 0u;
  clear_has_market();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::market() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.market)
  return market_;
}
inline void OnceEveryDayReward::set_market(::google::protobuf::uint32 value) {
  set_has_market();
  market_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.market)
}

// required uint32 sacrifice = 3;
inline bool OnceEveryDayReward::has_sacrifice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnceEveryDayReward::set_has_sacrifice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnceEveryDayReward::clear_has_sacrifice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnceEveryDayReward::clear_sacrifice() {
  sacrifice_ = 0u;
  clear_has_sacrifice();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::sacrifice() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.sacrifice)
  return sacrifice_;
}
inline void OnceEveryDayReward::set_sacrifice(::google::protobuf::uint32 value) {
  set_has_sacrifice();
  sacrifice_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.sacrifice)
}

// required uint32 order = 4;
inline bool OnceEveryDayReward::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnceEveryDayReward::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnceEveryDayReward::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnceEveryDayReward::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::order() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.order)
  return order_;
}
inline void OnceEveryDayReward::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.order)
}

// required uint32 refresh = 5;
inline bool OnceEveryDayReward::has_refresh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OnceEveryDayReward::set_has_refresh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OnceEveryDayReward::clear_has_refresh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OnceEveryDayReward::clear_refresh() {
  refresh_ = 0u;
  clear_has_refresh();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::refresh() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.refresh)
  return refresh_;
}
inline void OnceEveryDayReward::set_refresh(::google::protobuf::uint32 value) {
  set_has_refresh();
  refresh_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.refresh)
}

// required uint32 ladder = 6;
inline bool OnceEveryDayReward::has_ladder() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OnceEveryDayReward::set_has_ladder() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OnceEveryDayReward::clear_has_ladder() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OnceEveryDayReward::clear_ladder() {
  ladder_ = 0u;
  clear_has_ladder();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::ladder() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.ladder)
  return ladder_;
}
inline void OnceEveryDayReward::set_ladder(::google::protobuf::uint32 value) {
  set_has_ladder();
  ladder_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.ladder)
}

// required uint32 freerefresh = 7;
inline bool OnceEveryDayReward::has_freerefresh() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OnceEveryDayReward::set_has_freerefresh() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OnceEveryDayReward::clear_has_freerefresh() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OnceEveryDayReward::clear_freerefresh() {
  freerefresh_ = 0u;
  clear_has_freerefresh();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::freerefresh() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.freerefresh)
  return freerefresh_;
}
inline void OnceEveryDayReward::set_freerefresh(::google::protobuf::uint32 value) {
  set_has_freerefresh();
  freerefresh_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.freerefresh)
}

// required uint32 reward_times = 8;
inline bool OnceEveryDayReward::has_reward_times() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OnceEveryDayReward::set_has_reward_times() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OnceEveryDayReward::clear_has_reward_times() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OnceEveryDayReward::clear_reward_times() {
  reward_times_ = 0u;
  clear_has_reward_times();
}
inline ::google::protobuf::uint32 OnceEveryDayReward::reward_times() const {
  // @@protoc_insertion_point(field_get:ProtoPush.OnceEveryDayReward.reward_times)
  return reward_times_;
}
inline void OnceEveryDayReward::set_reward_times(::google::protobuf::uint32 value) {
  set_has_reward_times();
  reward_times_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.OnceEveryDayReward.reward_times)
}

// -------------------------------------------------------------------

// SmeltActivityHint

// required uint32 type = 1;
inline bool SmeltActivityHint::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmeltActivityHint::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmeltActivityHint::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmeltActivityHint::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SmeltActivityHint::type() const {
  // @@protoc_insertion_point(field_get:ProtoPush.SmeltActivityHint.type)
  return type_;
}
inline void SmeltActivityHint::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.SmeltActivityHint.type)
}

// -------------------------------------------------------------------

// TimesAddPushReq

// optional uint32 mission_times = 1;
inline bool TimesAddPushReq::has_mission_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimesAddPushReq::set_has_mission_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimesAddPushReq::clear_has_mission_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimesAddPushReq::clear_mission_times() {
  mission_times_ = 0u;
  clear_has_mission_times();
}
inline ::google::protobuf::uint32 TimesAddPushReq::mission_times() const {
  // @@protoc_insertion_point(field_get:ProtoPush.TimesAddPushReq.mission_times)
  return mission_times_;
}
inline void TimesAddPushReq::set_mission_times(::google::protobuf::uint32 value) {
  set_has_mission_times();
  mission_times_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.TimesAddPushReq.mission_times)
}

// -------------------------------------------------------------------

// MineKingdomRewardStatus

// required uint32 kingdom = 1;
inline bool MineKingdomRewardStatus::has_kingdom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MineKingdomRewardStatus::set_has_kingdom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MineKingdomRewardStatus::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MineKingdomRewardStatus::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 MineKingdomRewardStatus::kingdom() const {
  // @@protoc_insertion_point(field_get:ProtoPush.MineKingdomRewardStatus.kingdom)
  return kingdom_;
}
inline void MineKingdomRewardStatus::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:ProtoPush.MineKingdomRewardStatus.kingdom)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoPush

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoPush_2eproto__INCLUDED
