// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoComponent.proto

#ifndef PROTOBUF_ProtoComponent_2eproto__INCLUDED
#define PROTOBUF_ProtoComponent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoComponent {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoComponent_2eproto();
void protobuf_AssignDesc_ProtoComponent_2eproto();
void protobuf_ShutdownFile_ProtoComponent_2eproto();

class ComponentCPP;
class ComponentAllCPP;
class ProduceComponentCPP;
class ProductCPP;
class OpenComponentWindowReq;
class OpenComponentWindowResp;
class ProduceReq;
class ProduceResp;
class OneKeyProduceReq;
class OneKeyProduceResp;
class CashProduceReq;
class CashProduceResp;

// ===================================================================

class ComponentCPP : public ::google::protobuf::Message {
 public:
  ComponentCPP();
  virtual ~ComponentCPP();

  ComponentCPP(const ComponentCPP& from);

  inline ComponentCPP& operator=(const ComponentCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentCPP& default_instance();

  void Swap(ComponentCPP* other);

  // implements Message ----------------------------------------------

  ComponentCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentCPP& from);
  void MergeFrom(const ComponentCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 compud = 1;
  inline bool has_compud() const;
  inline void clear_compud();
  static const int kCompudFieldNumber = 1;
  inline ::google::protobuf::uint32 compud() const;
  inline void set_compud(::google::protobuf::uint32 value);

  // required uint32 compid = 2;
  inline bool has_compid() const;
  inline void clear_compid();
  static const int kCompidFieldNumber = 2;
  inline ::google::protobuf::uint32 compid() const;
  inline void set_compid(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 heroid = 5;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 5;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // required uint32 position = 6;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 6;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 master = 7;
  inline bool has_master() const;
  inline void clear_master();
  static const int kMasterFieldNumber = 7;
  inline ::google::protobuf::uint32 master() const;
  inline void set_master(::google::protobuf::uint32 value);

  // repeated uint32 slave = 8;
  inline int slave_size() const;
  inline void clear_slave();
  static const int kSlaveFieldNumber = 8;
  inline ::google::protobuf::uint32 slave(int index) const;
  inline void set_slave(int index, ::google::protobuf::uint32 value);
  inline void add_slave(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      slave() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_slave();

  // @@protoc_insertion_point(class_scope:ProtoComponent.ComponentCPP)
 private:
  inline void set_has_compud();
  inline void clear_has_compud();
  inline void set_has_compid();
  inline void clear_has_compid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_master();
  inline void clear_has_master();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 compud_;
  ::google::protobuf::uint32 compid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slave_;
  ::google::protobuf::uint32 master_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ComponentCPP* default_instance_;
};
// -------------------------------------------------------------------

class ComponentAllCPP : public ::google::protobuf::Message {
 public:
  ComponentAllCPP();
  virtual ~ComponentAllCPP();

  ComponentAllCPP(const ComponentAllCPP& from);

  inline ComponentAllCPP& operator=(const ComponentAllCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentAllCPP& default_instance();

  void Swap(ComponentAllCPP* other);

  // implements Message ----------------------------------------------

  ComponentAllCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentAllCPP& from);
  void MergeFrom(const ComponentAllCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoComponent.ComponentCPP components = 1;
  inline int components_size() const;
  inline void clear_components();
  static const int kComponentsFieldNumber = 1;
  inline const ::ProtoComponent::ComponentCPP& components(int index) const;
  inline ::ProtoComponent::ComponentCPP* mutable_components(int index);
  inline ::ProtoComponent::ComponentCPP* add_components();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ComponentCPP >&
      components() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ComponentCPP >*
      mutable_components();

  // @@protoc_insertion_point(class_scope:ProtoComponent.ComponentAllCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ComponentCPP > components_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ComponentAllCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProduceComponentCPP : public ::google::protobuf::Message {
 public:
  ProduceComponentCPP();
  virtual ~ProduceComponentCPP();

  ProduceComponentCPP(const ProduceComponentCPP& from);

  inline ProduceComponentCPP& operator=(const ProduceComponentCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceComponentCPP& default_instance();

  void Swap(ProduceComponentCPP* other);

  // implements Message ----------------------------------------------

  ProduceComponentCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProduceComponentCPP& from);
  void MergeFrom(const ProduceComponentCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 current_level = 1;
  inline bool has_current_level() const;
  inline void clear_current_level();
  static const int kCurrentLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 current_level() const;
  inline void set_current_level(::google::protobuf::uint32 value);

  // required bool ispaycash = 2;
  inline bool has_ispaycash() const;
  inline void clear_ispaycash();
  static const int kIspaycashFieldNumber = 2;
  inline bool ispaycash() const;
  inline void set_ispaycash(bool value);

  // required uint32 times = 3;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // required uint32 paycash_ts = 4;
  inline bool has_paycash_ts() const;
  inline void clear_paycash_ts();
  static const int kPaycashTsFieldNumber = 4;
  inline ::google::protobuf::uint32 paycash_ts() const;
  inline void set_paycash_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoComponent.ProduceComponentCPP)
 private:
  inline void set_has_current_level();
  inline void clear_has_current_level();
  inline void set_has_ispaycash();
  inline void clear_has_ispaycash();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_paycash_ts();
  inline void clear_has_paycash_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 current_level_;
  bool ispaycash_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 paycash_ts_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ProduceComponentCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProductCPP : public ::google::protobuf::Message {
 public:
  ProductCPP();
  virtual ~ProductCPP();

  ProductCPP(const ProductCPP& from);

  inline ProductCPP& operator=(const ProductCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductCPP& default_instance();

  void Swap(ProductCPP* other);

  // implements Message ----------------------------------------------

  ProductCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductCPP& from);
  void MergeFrom(const ProductCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 material = 1;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 1;
  inline ::google::protobuf::uint32 material() const;
  inline void set_material(::google::protobuf::uint32 value);

  // optional .ProtoComponent.ComponentCPP component = 2;
  inline bool has_component() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 2;
  inline const ::ProtoComponent::ComponentCPP& component() const;
  inline ::ProtoComponent::ComponentCPP* mutable_component();
  inline ::ProtoComponent::ComponentCPP* release_component();
  inline void set_allocated_component(::ProtoComponent::ComponentCPP* component);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoComponent.ProductCPP)
 private:
  inline void set_has_material();
  inline void clear_has_material();
  inline void set_has_component();
  inline void clear_has_component();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoComponent::ComponentCPP* component_;
  ::google::protobuf::uint32 material_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ProductCPP* default_instance_;
};
// -------------------------------------------------------------------

class OpenComponentWindowReq : public ::google::protobuf::Message {
 public:
  OpenComponentWindowReq();
  virtual ~OpenComponentWindowReq();

  OpenComponentWindowReq(const OpenComponentWindowReq& from);

  inline OpenComponentWindowReq& operator=(const OpenComponentWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenComponentWindowReq& default_instance();

  void Swap(OpenComponentWindowReq* other);

  // implements Message ----------------------------------------------

  OpenComponentWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenComponentWindowReq& from);
  void MergeFrom(const OpenComponentWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoComponent.OpenComponentWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static OpenComponentWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenComponentWindowResp : public ::google::protobuf::Message {
 public:
  OpenComponentWindowResp();
  virtual ~OpenComponentWindowResp();

  OpenComponentWindowResp(const OpenComponentWindowResp& from);

  inline OpenComponentWindowResp& operator=(const OpenComponentWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenComponentWindowResp& default_instance();

  void Swap(OpenComponentWindowResp* other);

  // implements Message ----------------------------------------------

  OpenComponentWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenComponentWindowResp& from);
  void MergeFrom(const OpenComponentWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 material = 1;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 1;
  inline ::google::protobuf::uint32 material() const;
  inline void set_material(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoComponent.OpenComponentWindowResp)
 private:
  inline void set_has_material();
  inline void clear_has_material();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 material_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static OpenComponentWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class ProduceReq : public ::google::protobuf::Message {
 public:
  ProduceReq();
  virtual ~ProduceReq();

  ProduceReq(const ProduceReq& from);

  inline ProduceReq& operator=(const ProduceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceReq& default_instance();

  void Swap(ProduceReq* other);

  // implements Message ----------------------------------------------

  ProduceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProduceReq& from);
  void MergeFrom(const ProduceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoComponent.ProduceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ProduceReq* default_instance_;
};
// -------------------------------------------------------------------

class ProduceResp : public ::google::protobuf::Message {
 public:
  ProduceResp();
  virtual ~ProduceResp();

  ProduceResp(const ProduceResp& from);

  inline ProduceResp& operator=(const ProduceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceResp& default_instance();

  void Swap(ProduceResp* other);

  // implements Message ----------------------------------------------

  ProduceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProduceResp& from);
  void MergeFrom(const ProduceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 material = 1;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 1;
  inline ::google::protobuf::uint32 material() const;
  inline void set_material(::google::protobuf::uint32 value);

  // required .ProtoComponent.ProductCPP product = 2;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 2;
  inline const ::ProtoComponent::ProductCPP& product() const;
  inline ::ProtoComponent::ProductCPP* mutable_product();
  inline ::ProtoComponent::ProductCPP* release_product();
  inline void set_allocated_product(::ProtoComponent::ProductCPP* product);

  // required .ProtoComponent.ProduceComponentCPP produce = 3;
  inline bool has_produce() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 3;
  inline const ::ProtoComponent::ProduceComponentCPP& produce() const;
  inline ::ProtoComponent::ProduceComponentCPP* mutable_produce();
  inline ::ProtoComponent::ProduceComponentCPP* release_produce();
  inline void set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce);

  // @@protoc_insertion_point(class_scope:ProtoComponent.ProduceResp)
 private:
  inline void set_has_material();
  inline void clear_has_material();
  inline void set_has_product();
  inline void clear_has_product();
  inline void set_has_produce();
  inline void clear_has_produce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoComponent::ProductCPP* product_;
  ::ProtoComponent::ProduceComponentCPP* produce_;
  ::google::protobuf::uint32 material_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static ProduceResp* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyProduceReq : public ::google::protobuf::Message {
 public:
  OneKeyProduceReq();
  virtual ~OneKeyProduceReq();

  OneKeyProduceReq(const OneKeyProduceReq& from);

  inline OneKeyProduceReq& operator=(const OneKeyProduceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneKeyProduceReq& default_instance();

  void Swap(OneKeyProduceReq* other);

  // implements Message ----------------------------------------------

  OneKeyProduceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneKeyProduceReq& from);
  void MergeFrom(const OneKeyProduceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoComponent.OneKeyProduceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static OneKeyProduceReq* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyProduceResp : public ::google::protobuf::Message {
 public:
  OneKeyProduceResp();
  virtual ~OneKeyProduceResp();

  OneKeyProduceResp(const OneKeyProduceResp& from);

  inline OneKeyProduceResp& operator=(const OneKeyProduceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneKeyProduceResp& default_instance();

  void Swap(OneKeyProduceResp* other);

  // implements Message ----------------------------------------------

  OneKeyProduceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneKeyProduceResp& from);
  void MergeFrom(const OneKeyProduceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 material = 1;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 1;
  inline ::google::protobuf::uint32 material() const;
  inline void set_material(::google::protobuf::uint32 value);

  // repeated .ProtoComponent.ProductCPP product = 2;
  inline int product_size() const;
  inline void clear_product();
  static const int kProductFieldNumber = 2;
  inline const ::ProtoComponent::ProductCPP& product(int index) const;
  inline ::ProtoComponent::ProductCPP* mutable_product(int index);
  inline ::ProtoComponent::ProductCPP* add_product();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ProductCPP >&
      product() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ProductCPP >*
      mutable_product();

  // required .ProtoComponent.ProduceComponentCPP produce = 3;
  inline bool has_produce() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 3;
  inline const ::ProtoComponent::ProduceComponentCPP& produce() const;
  inline ::ProtoComponent::ProduceComponentCPP* mutable_produce();
  inline ::ProtoComponent::ProduceComponentCPP* release_produce();
  inline void set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce);

  // required uint32 stopcode = 4;
  inline bool has_stopcode() const;
  inline void clear_stopcode();
  static const int kStopcodeFieldNumber = 4;
  inline ::google::protobuf::uint32 stopcode() const;
  inline void set_stopcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoComponent.OneKeyProduceResp)
 private:
  inline void set_has_material();
  inline void clear_has_material();
  inline void set_has_produce();
  inline void clear_has_produce();
  inline void set_has_stopcode();
  inline void clear_has_stopcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ProductCPP > product_;
  ::google::protobuf::uint32 material_;
  ::google::protobuf::uint32 stopcode_;
  ::ProtoComponent::ProduceComponentCPP* produce_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static OneKeyProduceResp* default_instance_;
};
// -------------------------------------------------------------------

class CashProduceReq : public ::google::protobuf::Message {
 public:
  CashProduceReq();
  virtual ~CashProduceReq();

  CashProduceReq(const CashProduceReq& from);

  inline CashProduceReq& operator=(const CashProduceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashProduceReq& default_instance();

  void Swap(CashProduceReq* other);

  // implements Message ----------------------------------------------

  CashProduceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashProduceReq& from);
  void MergeFrom(const CashProduceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoComponent.CashProduceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static CashProduceReq* default_instance_;
};
// -------------------------------------------------------------------

class CashProduceResp : public ::google::protobuf::Message {
 public:
  CashProduceResp();
  virtual ~CashProduceResp();

  CashProduceResp(const CashProduceResp& from);

  inline CashProduceResp& operator=(const CashProduceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashProduceResp& default_instance();

  void Swap(CashProduceResp* other);

  // implements Message ----------------------------------------------

  CashProduceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashProduceResp& from);
  void MergeFrom(const CashProduceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required .ProtoComponent.ProduceComponentCPP produce = 2;
  inline bool has_produce() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 2;
  inline const ::ProtoComponent::ProduceComponentCPP& produce() const;
  inline ::ProtoComponent::ProduceComponentCPP* mutable_produce();
  inline ::ProtoComponent::ProduceComponentCPP* release_produce();
  inline void set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce);

  // @@protoc_insertion_point(class_scope:ProtoComponent.CashProduceResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_produce();
  inline void clear_has_produce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoComponent::ProduceComponentCPP* produce_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoComponent_2eproto();
  friend void protobuf_AssignDesc_ProtoComponent_2eproto();
  friend void protobuf_ShutdownFile_ProtoComponent_2eproto();

  void InitAsDefaultInstance();
  static CashProduceResp* default_instance_;
};
// ===================================================================


// ===================================================================

// ComponentCPP

// required uint32 compud = 1;
inline bool ComponentCPP::has_compud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentCPP::set_has_compud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentCPP::clear_has_compud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentCPP::clear_compud() {
  compud_ = 0u;
  clear_has_compud();
}
inline ::google::protobuf::uint32 ComponentCPP::compud() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.compud)
  return compud_;
}
inline void ComponentCPP::set_compud(::google::protobuf::uint32 value) {
  set_has_compud();
  compud_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.compud)
}

// required uint32 compid = 2;
inline bool ComponentCPP::has_compid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentCPP::set_has_compid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentCPP::clear_has_compid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentCPP::clear_compid() {
  compid_ = 0u;
  clear_has_compid();
}
inline ::google::protobuf::uint32 ComponentCPP::compid() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.compid)
  return compid_;
}
inline void ComponentCPP::set_compid(::google::protobuf::uint32 value) {
  set_has_compid();
  compid_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.compid)
}

// required uint32 level = 3;
inline bool ComponentCPP::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComponentCPP::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComponentCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComponentCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ComponentCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.level)
  return level_;
}
inline void ComponentCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.level)
}

// required uint32 exp = 4;
inline bool ComponentCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComponentCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ComponentCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ComponentCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ComponentCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.exp)
  return exp_;
}
inline void ComponentCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.exp)
}

// required uint32 heroid = 5;
inline bool ComponentCPP::has_heroid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ComponentCPP::set_has_heroid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ComponentCPP::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ComponentCPP::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 ComponentCPP::heroid() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.heroid)
  return heroid_;
}
inline void ComponentCPP::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.heroid)
}

// required uint32 position = 6;
inline bool ComponentCPP::has_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ComponentCPP::set_has_position() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ComponentCPP::clear_has_position() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ComponentCPP::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 ComponentCPP::position() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.position)
  return position_;
}
inline void ComponentCPP::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.position)
}

// required uint32 master = 7;
inline bool ComponentCPP::has_master() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ComponentCPP::set_has_master() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ComponentCPP::clear_has_master() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ComponentCPP::clear_master() {
  master_ = 0u;
  clear_has_master();
}
inline ::google::protobuf::uint32 ComponentCPP::master() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.master)
  return master_;
}
inline void ComponentCPP::set_master(::google::protobuf::uint32 value) {
  set_has_master();
  master_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.master)
}

// repeated uint32 slave = 8;
inline int ComponentCPP::slave_size() const {
  return slave_.size();
}
inline void ComponentCPP::clear_slave() {
  slave_.Clear();
}
inline ::google::protobuf::uint32 ComponentCPP::slave(int index) const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentCPP.slave)
  return slave_.Get(index);
}
inline void ComponentCPP::set_slave(int index, ::google::protobuf::uint32 value) {
  slave_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoComponent.ComponentCPP.slave)
}
inline void ComponentCPP::add_slave(::google::protobuf::uint32 value) {
  slave_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoComponent.ComponentCPP.slave)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ComponentCPP::slave() const {
  // @@protoc_insertion_point(field_list:ProtoComponent.ComponentCPP.slave)
  return slave_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ComponentCPP::mutable_slave() {
  // @@protoc_insertion_point(field_mutable_list:ProtoComponent.ComponentCPP.slave)
  return &slave_;
}

// -------------------------------------------------------------------

// ComponentAllCPP

// repeated .ProtoComponent.ComponentCPP components = 1;
inline int ComponentAllCPP::components_size() const {
  return components_.size();
}
inline void ComponentAllCPP::clear_components() {
  components_.Clear();
}
inline const ::ProtoComponent::ComponentCPP& ComponentAllCPP::components(int index) const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ComponentAllCPP.components)
  return components_.Get(index);
}
inline ::ProtoComponent::ComponentCPP* ComponentAllCPP::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoComponent.ComponentAllCPP.components)
  return components_.Mutable(index);
}
inline ::ProtoComponent::ComponentCPP* ComponentAllCPP::add_components() {
  // @@protoc_insertion_point(field_add:ProtoComponent.ComponentAllCPP.components)
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ComponentCPP >&
ComponentAllCPP::components() const {
  // @@protoc_insertion_point(field_list:ProtoComponent.ComponentAllCPP.components)
  return components_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ComponentCPP >*
ComponentAllCPP::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:ProtoComponent.ComponentAllCPP.components)
  return &components_;
}

// -------------------------------------------------------------------

// ProduceComponentCPP

// required uint32 current_level = 1;
inline bool ProduceComponentCPP::has_current_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProduceComponentCPP::set_has_current_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProduceComponentCPP::clear_has_current_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProduceComponentCPP::clear_current_level() {
  current_level_ = 0u;
  clear_has_current_level();
}
inline ::google::protobuf::uint32 ProduceComponentCPP::current_level() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceComponentCPP.current_level)
  return current_level_;
}
inline void ProduceComponentCPP::set_current_level(::google::protobuf::uint32 value) {
  set_has_current_level();
  current_level_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProduceComponentCPP.current_level)
}

// required bool ispaycash = 2;
inline bool ProduceComponentCPP::has_ispaycash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProduceComponentCPP::set_has_ispaycash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProduceComponentCPP::clear_has_ispaycash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProduceComponentCPP::clear_ispaycash() {
  ispaycash_ = false;
  clear_has_ispaycash();
}
inline bool ProduceComponentCPP::ispaycash() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceComponentCPP.ispaycash)
  return ispaycash_;
}
inline void ProduceComponentCPP::set_ispaycash(bool value) {
  set_has_ispaycash();
  ispaycash_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProduceComponentCPP.ispaycash)
}

// required uint32 times = 3;
inline bool ProduceComponentCPP::has_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProduceComponentCPP::set_has_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProduceComponentCPP::clear_has_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProduceComponentCPP::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 ProduceComponentCPP::times() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceComponentCPP.times)
  return times_;
}
inline void ProduceComponentCPP::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProduceComponentCPP.times)
}

// required uint32 paycash_ts = 4;
inline bool ProduceComponentCPP::has_paycash_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProduceComponentCPP::set_has_paycash_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProduceComponentCPP::clear_has_paycash_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProduceComponentCPP::clear_paycash_ts() {
  paycash_ts_ = 0u;
  clear_has_paycash_ts();
}
inline ::google::protobuf::uint32 ProduceComponentCPP::paycash_ts() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceComponentCPP.paycash_ts)
  return paycash_ts_;
}
inline void ProduceComponentCPP::set_paycash_ts(::google::protobuf::uint32 value) {
  set_has_paycash_ts();
  paycash_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProduceComponentCPP.paycash_ts)
}

// -------------------------------------------------------------------

// ProductCPP

// optional uint32 material = 1;
inline bool ProductCPP::has_material() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductCPP::set_has_material() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductCPP::clear_has_material() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductCPP::clear_material() {
  material_ = 0u;
  clear_has_material();
}
inline ::google::protobuf::uint32 ProductCPP::material() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProductCPP.material)
  return material_;
}
inline void ProductCPP::set_material(::google::protobuf::uint32 value) {
  set_has_material();
  material_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProductCPP.material)
}

// optional .ProtoComponent.ComponentCPP component = 2;
inline bool ProductCPP::has_component() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductCPP::set_has_component() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductCPP::clear_has_component() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductCPP::clear_component() {
  if (component_ != NULL) component_->::ProtoComponent::ComponentCPP::Clear();
  clear_has_component();
}
inline const ::ProtoComponent::ComponentCPP& ProductCPP::component() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProductCPP.component)
  return component_ != NULL ? *component_ : *default_instance_->component_;
}
inline ::ProtoComponent::ComponentCPP* ProductCPP::mutable_component() {
  set_has_component();
  if (component_ == NULL) component_ = new ::ProtoComponent::ComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoComponent.ProductCPP.component)
  return component_;
}
inline ::ProtoComponent::ComponentCPP* ProductCPP::release_component() {
  clear_has_component();
  ::ProtoComponent::ComponentCPP* temp = component_;
  component_ = NULL;
  return temp;
}
inline void ProductCPP::set_allocated_component(::ProtoComponent::ComponentCPP* component) {
  delete component_;
  component_ = component;
  if (component) {
    set_has_component();
  } else {
    clear_has_component();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoComponent.ProductCPP.component)
}

// required uint32 level = 3;
inline bool ProductCPP::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductCPP::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ProductCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProductCPP.level)
  return level_;
}
inline void ProductCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProductCPP.level)
}

// -------------------------------------------------------------------

// OpenComponentWindowReq

// -------------------------------------------------------------------

// OpenComponentWindowResp

// required uint32 material = 1;
inline bool OpenComponentWindowResp::has_material() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenComponentWindowResp::set_has_material() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenComponentWindowResp::clear_has_material() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenComponentWindowResp::clear_material() {
  material_ = 0u;
  clear_has_material();
}
inline ::google::protobuf::uint32 OpenComponentWindowResp::material() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.OpenComponentWindowResp.material)
  return material_;
}
inline void OpenComponentWindowResp::set_material(::google::protobuf::uint32 value) {
  set_has_material();
  material_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.OpenComponentWindowResp.material)
}

// -------------------------------------------------------------------

// ProduceReq

// -------------------------------------------------------------------

// ProduceResp

// required uint32 material = 1;
inline bool ProduceResp::has_material() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProduceResp::set_has_material() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProduceResp::clear_has_material() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProduceResp::clear_material() {
  material_ = 0u;
  clear_has_material();
}
inline ::google::protobuf::uint32 ProduceResp::material() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceResp.material)
  return material_;
}
inline void ProduceResp::set_material(::google::protobuf::uint32 value) {
  set_has_material();
  material_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.ProduceResp.material)
}

// required .ProtoComponent.ProductCPP product = 2;
inline bool ProduceResp::has_product() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProduceResp::set_has_product() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProduceResp::clear_has_product() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProduceResp::clear_product() {
  if (product_ != NULL) product_->::ProtoComponent::ProductCPP::Clear();
  clear_has_product();
}
inline const ::ProtoComponent::ProductCPP& ProduceResp::product() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceResp.product)
  return product_ != NULL ? *product_ : *default_instance_->product_;
}
inline ::ProtoComponent::ProductCPP* ProduceResp::mutable_product() {
  set_has_product();
  if (product_ == NULL) product_ = new ::ProtoComponent::ProductCPP;
  // @@protoc_insertion_point(field_mutable:ProtoComponent.ProduceResp.product)
  return product_;
}
inline ::ProtoComponent::ProductCPP* ProduceResp::release_product() {
  clear_has_product();
  ::ProtoComponent::ProductCPP* temp = product_;
  product_ = NULL;
  return temp;
}
inline void ProduceResp::set_allocated_product(::ProtoComponent::ProductCPP* product) {
  delete product_;
  product_ = product;
  if (product) {
    set_has_product();
  } else {
    clear_has_product();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoComponent.ProduceResp.product)
}

// required .ProtoComponent.ProduceComponentCPP produce = 3;
inline bool ProduceResp::has_produce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProduceResp::set_has_produce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProduceResp::clear_has_produce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProduceResp::clear_produce() {
  if (produce_ != NULL) produce_->::ProtoComponent::ProduceComponentCPP::Clear();
  clear_has_produce();
}
inline const ::ProtoComponent::ProduceComponentCPP& ProduceResp::produce() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.ProduceResp.produce)
  return produce_ != NULL ? *produce_ : *default_instance_->produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* ProduceResp::mutable_produce() {
  set_has_produce();
  if (produce_ == NULL) produce_ = new ::ProtoComponent::ProduceComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoComponent.ProduceResp.produce)
  return produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* ProduceResp::release_produce() {
  clear_has_produce();
  ::ProtoComponent::ProduceComponentCPP* temp = produce_;
  produce_ = NULL;
  return temp;
}
inline void ProduceResp::set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce) {
  delete produce_;
  produce_ = produce;
  if (produce) {
    set_has_produce();
  } else {
    clear_has_produce();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoComponent.ProduceResp.produce)
}

// -------------------------------------------------------------------

// OneKeyProduceReq

// -------------------------------------------------------------------

// OneKeyProduceResp

// required uint32 material = 1;
inline bool OneKeyProduceResp::has_material() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyProduceResp::set_has_material() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyProduceResp::clear_has_material() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyProduceResp::clear_material() {
  material_ = 0u;
  clear_has_material();
}
inline ::google::protobuf::uint32 OneKeyProduceResp::material() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.OneKeyProduceResp.material)
  return material_;
}
inline void OneKeyProduceResp::set_material(::google::protobuf::uint32 value) {
  set_has_material();
  material_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.OneKeyProduceResp.material)
}

// repeated .ProtoComponent.ProductCPP product = 2;
inline int OneKeyProduceResp::product_size() const {
  return product_.size();
}
inline void OneKeyProduceResp::clear_product() {
  product_.Clear();
}
inline const ::ProtoComponent::ProductCPP& OneKeyProduceResp::product(int index) const {
  // @@protoc_insertion_point(field_get:ProtoComponent.OneKeyProduceResp.product)
  return product_.Get(index);
}
inline ::ProtoComponent::ProductCPP* OneKeyProduceResp::mutable_product(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoComponent.OneKeyProduceResp.product)
  return product_.Mutable(index);
}
inline ::ProtoComponent::ProductCPP* OneKeyProduceResp::add_product() {
  // @@protoc_insertion_point(field_add:ProtoComponent.OneKeyProduceResp.product)
  return product_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ProductCPP >&
OneKeyProduceResp::product() const {
  // @@protoc_insertion_point(field_list:ProtoComponent.OneKeyProduceResp.product)
  return product_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoComponent::ProductCPP >*
OneKeyProduceResp::mutable_product() {
  // @@protoc_insertion_point(field_mutable_list:ProtoComponent.OneKeyProduceResp.product)
  return &product_;
}

// required .ProtoComponent.ProduceComponentCPP produce = 3;
inline bool OneKeyProduceResp::has_produce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneKeyProduceResp::set_has_produce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneKeyProduceResp::clear_has_produce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneKeyProduceResp::clear_produce() {
  if (produce_ != NULL) produce_->::ProtoComponent::ProduceComponentCPP::Clear();
  clear_has_produce();
}
inline const ::ProtoComponent::ProduceComponentCPP& OneKeyProduceResp::produce() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.OneKeyProduceResp.produce)
  return produce_ != NULL ? *produce_ : *default_instance_->produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* OneKeyProduceResp::mutable_produce() {
  set_has_produce();
  if (produce_ == NULL) produce_ = new ::ProtoComponent::ProduceComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoComponent.OneKeyProduceResp.produce)
  return produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* OneKeyProduceResp::release_produce() {
  clear_has_produce();
  ::ProtoComponent::ProduceComponentCPP* temp = produce_;
  produce_ = NULL;
  return temp;
}
inline void OneKeyProduceResp::set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce) {
  delete produce_;
  produce_ = produce;
  if (produce) {
    set_has_produce();
  } else {
    clear_has_produce();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoComponent.OneKeyProduceResp.produce)
}

// required uint32 stopcode = 4;
inline bool OneKeyProduceResp::has_stopcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneKeyProduceResp::set_has_stopcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneKeyProduceResp::clear_has_stopcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneKeyProduceResp::clear_stopcode() {
  stopcode_ = 0u;
  clear_has_stopcode();
}
inline ::google::protobuf::uint32 OneKeyProduceResp::stopcode() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.OneKeyProduceResp.stopcode)
  return stopcode_;
}
inline void OneKeyProduceResp::set_stopcode(::google::protobuf::uint32 value) {
  set_has_stopcode();
  stopcode_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.OneKeyProduceResp.stopcode)
}

// -------------------------------------------------------------------

// CashProduceReq

// -------------------------------------------------------------------

// CashProduceResp

// required uint32 cash = 1;
inline bool CashProduceResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashProduceResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashProduceResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashProduceResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CashProduceResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.CashProduceResp.cash)
  return cash_;
}
inline void CashProduceResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoComponent.CashProduceResp.cash)
}

// required .ProtoComponent.ProduceComponentCPP produce = 2;
inline bool CashProduceResp::has_produce() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashProduceResp::set_has_produce() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashProduceResp::clear_has_produce() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashProduceResp::clear_produce() {
  if (produce_ != NULL) produce_->::ProtoComponent::ProduceComponentCPP::Clear();
  clear_has_produce();
}
inline const ::ProtoComponent::ProduceComponentCPP& CashProduceResp::produce() const {
  // @@protoc_insertion_point(field_get:ProtoComponent.CashProduceResp.produce)
  return produce_ != NULL ? *produce_ : *default_instance_->produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* CashProduceResp::mutable_produce() {
  set_has_produce();
  if (produce_ == NULL) produce_ = new ::ProtoComponent::ProduceComponentCPP;
  // @@protoc_insertion_point(field_mutable:ProtoComponent.CashProduceResp.produce)
  return produce_;
}
inline ::ProtoComponent::ProduceComponentCPP* CashProduceResp::release_produce() {
  clear_has_produce();
  ::ProtoComponent::ProduceComponentCPP* temp = produce_;
  produce_ = NULL;
  return temp;
}
inline void CashProduceResp::set_allocated_produce(::ProtoComponent::ProduceComponentCPP* produce) {
  delete produce_;
  produce_ = produce;
  if (produce) {
    set_has_produce();
  } else {
    clear_has_produce();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoComponent.CashProduceResp.produce)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoComponent

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoComponent_2eproto__INCLUDED
