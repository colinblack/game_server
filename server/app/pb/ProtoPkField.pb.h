// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPkField.proto

#ifndef PROTOBUF_ProtoPkField_2eproto__INCLUDED
#define PROTOBUF_ProtoPkField_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoPkField {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoPkField_2eproto();
void protobuf_AssignDesc_ProtoPkField_2eproto();
void protobuf_ShutdownFile_ProtoPkField_2eproto();

class PkUserItem;
class PkFieldReq;
class PkFieldResp;
class EnterPkFieldReq;
class EnterPkFieldResp;
class StartPkReq;
class RefreshRivalReq;
class RefreshRivalResp;
class PkRewardReq;
class PkRewardResp;

// ===================================================================

class PkUserItem : public ::google::protobuf::Message {
 public:
  PkUserItem();
  virtual ~PkUserItem();

  PkUserItem(const PkUserItem& from);

  inline PkUserItem& operator=(const PkUserItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkUserItem& default_instance();

  void Swap(PkUserItem* other);

  // implements Message ----------------------------------------------

  PkUserItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkUserItem& from);
  void MergeFrom(const PkUserItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 lvl = 3;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 3;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // required uint32 rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required bytes head = 5;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 5;
  inline const ::std::string& head() const;
  inline void set_head(const ::std::string& value);
  inline void set_head(const char* value);
  inline void set_head(const void* value, size_t size);
  inline ::std::string* mutable_head();
  inline ::std::string* release_head();
  inline void set_allocated_head(::std::string* head);

  // @@protoc_insertion_point(class_scope:ProtoPkField.PkUserItem)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 lvl_;
  ::std::string* head_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static PkUserItem* default_instance_;
};
// -------------------------------------------------------------------

class PkFieldReq : public ::google::protobuf::Message {
 public:
  PkFieldReq();
  virtual ~PkFieldReq();

  PkFieldReq(const PkFieldReq& from);

  inline PkFieldReq& operator=(const PkFieldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkFieldReq& default_instance();

  void Swap(PkFieldReq* other);

  // implements Message ----------------------------------------------

  PkFieldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkFieldReq& from);
  void MergeFrom(const PkFieldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoPkField.PkFieldReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static PkFieldReq* default_instance_;
};
// -------------------------------------------------------------------

class PkFieldResp : public ::google::protobuf::Message {
 public:
  PkFieldResp();
  virtual ~PkFieldResp();

  PkFieldResp(const PkFieldResp& from);

  inline PkFieldResp& operator=(const PkFieldResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkFieldResp& default_instance();

  void Swap(PkFieldResp* other);

  // implements Message ----------------------------------------------

  PkFieldResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkFieldResp& from);
  void MergeFrom(const PkFieldResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // required uint32 challenge = 2;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 2;
  inline ::google::protobuf::uint32 challenge() const;
  inline void set_challenge(::google::protobuf::uint32 value);

  // repeated .ProtoPkField.PkUserItem winners = 3;
  inline int winners_size() const;
  inline void clear_winners();
  static const int kWinnersFieldNumber = 3;
  inline const ::ProtoPkField::PkUserItem& winners(int index) const;
  inline ::ProtoPkField::PkUserItem* mutable_winners(int index);
  inline ::ProtoPkField::PkUserItem* add_winners();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
      winners() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
      mutable_winners();

  // repeated .ProtoPkField.PkUserItem defier = 4;
  inline int defier_size() const;
  inline void clear_defier();
  static const int kDefierFieldNumber = 4;
  inline const ::ProtoPkField::PkUserItem& defier(int index) const;
  inline ::ProtoPkField::PkUserItem* mutable_defier(int index);
  inline ::ProtoPkField::PkUserItem* add_defier();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
      defier() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
      mutable_defier();

  // required int32 reward_rank = 5;
  inline bool has_reward_rank() const;
  inline void clear_reward_rank();
  static const int kRewardRankFieldNumber = 5;
  inline ::google::protobuf::int32 reward_rank() const;
  inline void set_reward_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoPkField.PkFieldResp)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_reward_rank();
  inline void clear_has_reward_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::uint32 challenge_;
  ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem > winners_;
  ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem > defier_;
  ::google::protobuf::int32 reward_rank_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static PkFieldResp* default_instance_;
};
// -------------------------------------------------------------------

class EnterPkFieldReq : public ::google::protobuf::Message {
 public:
  EnterPkFieldReq();
  virtual ~EnterPkFieldReq();

  EnterPkFieldReq(const EnterPkFieldReq& from);

  inline EnterPkFieldReq& operator=(const EnterPkFieldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterPkFieldReq& default_instance();

  void Swap(EnterPkFieldReq* other);

  // implements Message ----------------------------------------------

  EnterPkFieldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterPkFieldReq& from);
  void MergeFrom(const EnterPkFieldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoPkField.EnterPkFieldReq)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static EnterPkFieldReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterPkFieldResp : public ::google::protobuf::Message {
 public:
  EnterPkFieldResp();
  virtual ~EnterPkFieldResp();

  EnterPkFieldResp(const EnterPkFieldResp& from);

  inline EnterPkFieldResp& operator=(const EnterPkFieldResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterPkFieldResp& default_instance();

  void Swap(EnterPkFieldResp* other);

  // implements Message ----------------------------------------------

  EnterPkFieldResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterPkFieldResp& from);
  void MergeFrom(const EnterPkFieldResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // repeated uint32 hero_lvl = 2;
  inline int hero_lvl_size() const;
  inline void clear_hero_lvl();
  static const int kHeroLvlFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_lvl(int index) const;
  inline void set_hero_lvl(int index, ::google::protobuf::uint32 value);
  inline void add_hero_lvl(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_lvl() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_lvl();

  // repeated uint32 hero_troops = 3;
  inline int hero_troops_size() const;
  inline void clear_hero_troops();
  static const int kHeroTroopsFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_troops(int index) const;
  inline void set_hero_troops(int index, ::google::protobuf::uint32 value);
  inline void add_hero_troops(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_troops() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_troops();

  // @@protoc_insertion_point(class_scope:ProtoPkField.EnterPkFieldResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_lvl_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_troops_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static EnterPkFieldResp* default_instance_;
};
// -------------------------------------------------------------------

class StartPkReq : public ::google::protobuf::Message {
 public:
  StartPkReq();
  virtual ~StartPkReq();

  StartPkReq(const StartPkReq& from);

  inline StartPkReq& operator=(const StartPkReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartPkReq& default_instance();

  void Swap(StartPkReq* other);

  // implements Message ----------------------------------------------

  StartPkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartPkReq& from);
  void MergeFrom(const StartPkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // repeated uint32 hero_ids = 2;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:ProtoPkField.StartPkReq)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static StartPkReq* default_instance_;
};
// -------------------------------------------------------------------

class RefreshRivalReq : public ::google::protobuf::Message {
 public:
  RefreshRivalReq();
  virtual ~RefreshRivalReq();

  RefreshRivalReq(const RefreshRivalReq& from);

  inline RefreshRivalReq& operator=(const RefreshRivalReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshRivalReq& default_instance();

  void Swap(RefreshRivalReq* other);

  // implements Message ----------------------------------------------

  RefreshRivalReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshRivalReq& from);
  void MergeFrom(const RefreshRivalReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoPkField.RefreshRivalReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static RefreshRivalReq* default_instance_;
};
// -------------------------------------------------------------------

class RefreshRivalResp : public ::google::protobuf::Message {
 public:
  RefreshRivalResp();
  virtual ~RefreshRivalResp();

  RefreshRivalResp(const RefreshRivalResp& from);

  inline RefreshRivalResp& operator=(const RefreshRivalResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshRivalResp& default_instance();

  void Swap(RefreshRivalResp* other);

  // implements Message ----------------------------------------------

  RefreshRivalResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshRivalResp& from);
  void MergeFrom(const RefreshRivalResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // repeated .ProtoPkField.PkUserItem rival = 2;
  inline int rival_size() const;
  inline void clear_rival();
  static const int kRivalFieldNumber = 2;
  inline const ::ProtoPkField::PkUserItem& rival(int index) const;
  inline ::ProtoPkField::PkUserItem* mutable_rival(int index);
  inline ::ProtoPkField::PkUserItem* add_rival();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
      rival() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
      mutable_rival();

  // @@protoc_insertion_point(class_scope:ProtoPkField.RefreshRivalResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem > rival_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static RefreshRivalResp* default_instance_;
};
// -------------------------------------------------------------------

class PkRewardReq : public ::google::protobuf::Message {
 public:
  PkRewardReq();
  virtual ~PkRewardReq();

  PkRewardReq(const PkRewardReq& from);

  inline PkRewardReq& operator=(const PkRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkRewardReq& default_instance();

  void Swap(PkRewardReq* other);

  // implements Message ----------------------------------------------

  PkRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkRewardReq& from);
  void MergeFrom(const PkRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoPkField.PkRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static PkRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class PkRewardResp : public ::google::protobuf::Message {
 public:
  PkRewardResp();
  virtual ~PkRewardResp();

  PkRewardResp(const PkRewardResp& from);

  inline PkRewardResp& operator=(const PkRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkRewardResp& default_instance();

  void Swap(PkRewardResp* other);

  // implements Message ----------------------------------------------

  PkRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkRewardResp& from);
  void MergeFrom(const PkRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonBaseRewardCPP base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // required uint32 ladder_ts = 2;
  inline bool has_ladder_ts() const;
  inline void clear_ladder_ts();
  static const int kLadderTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ladder_ts() const;
  inline void set_ladder_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPkField.PkRewardResp)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ladder_ts();
  inline void clear_has_ladder_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::uint32 ladder_ts_;
  friend void  protobuf_AddDesc_ProtoPkField_2eproto();
  friend void protobuf_AssignDesc_ProtoPkField_2eproto();
  friend void protobuf_ShutdownFile_ProtoPkField_2eproto();

  void InitAsDefaultInstance();
  static PkRewardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// PkUserItem

// required uint32 uid = 1;
inline bool PkUserItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkUserItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkUserItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkUserItem::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PkUserItem::uid() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkUserItem.uid)
  return uid_;
}
inline void PkUserItem::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkUserItem.uid)
}

// required bytes name = 2;
inline bool PkUserItem::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkUserItem::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkUserItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkUserItem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PkUserItem::name() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkUserItem.name)
  return *name_;
}
inline void PkUserItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoPkField.PkUserItem.name)
}
inline void PkUserItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoPkField.PkUserItem.name)
}
inline void PkUserItem::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoPkField.PkUserItem.name)
}
inline ::std::string* PkUserItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPkField.PkUserItem.name)
  return name_;
}
inline ::std::string* PkUserItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PkUserItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoPkField.PkUserItem.name)
}

// required uint32 lvl = 3;
inline bool PkUserItem::has_lvl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkUserItem::set_has_lvl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkUserItem::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkUserItem::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 PkUserItem::lvl() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkUserItem.lvl)
  return lvl_;
}
inline void PkUserItem::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkUserItem.lvl)
}

// required uint32 rank = 4;
inline bool PkUserItem::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkUserItem::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkUserItem::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkUserItem::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 PkUserItem::rank() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkUserItem.rank)
  return rank_;
}
inline void PkUserItem::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkUserItem.rank)
}

// required bytes head = 5;
inline bool PkUserItem::has_head() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkUserItem::set_has_head() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkUserItem::clear_has_head() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkUserItem::clear_head() {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_->clear();
  }
  clear_has_head();
}
inline const ::std::string& PkUserItem::head() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkUserItem.head)
  return *head_;
}
inline void PkUserItem::set_head(const ::std::string& value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoPkField.PkUserItem.head)
}
inline void PkUserItem::set_head(const char* value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoPkField.PkUserItem.head)
}
inline void PkUserItem::set_head(const void* value, size_t size) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoPkField.PkUserItem.head)
}
inline ::std::string* PkUserItem::mutable_head() {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPkField.PkUserItem.head)
  return head_;
}
inline ::std::string* PkUserItem::release_head() {
  clear_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = head_;
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PkUserItem::set_allocated_head(::std::string* head) {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete head_;
  }
  if (head) {
    set_has_head();
    head_ = head;
  } else {
    clear_has_head();
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoPkField.PkUserItem.head)
}

// -------------------------------------------------------------------

// PkFieldReq

// -------------------------------------------------------------------

// PkFieldResp

// required int32 rank = 1;
inline bool PkFieldResp::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkFieldResp::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkFieldResp::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkFieldResp::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 PkFieldResp::rank() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkFieldResp.rank)
  return rank_;
}
inline void PkFieldResp::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkFieldResp.rank)
}

// required uint32 challenge = 2;
inline bool PkFieldResp::has_challenge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkFieldResp::set_has_challenge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkFieldResp::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkFieldResp::clear_challenge() {
  challenge_ = 0u;
  clear_has_challenge();
}
inline ::google::protobuf::uint32 PkFieldResp::challenge() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkFieldResp.challenge)
  return challenge_;
}
inline void PkFieldResp::set_challenge(::google::protobuf::uint32 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkFieldResp.challenge)
}

// repeated .ProtoPkField.PkUserItem winners = 3;
inline int PkFieldResp::winners_size() const {
  return winners_.size();
}
inline void PkFieldResp::clear_winners() {
  winners_.Clear();
}
inline const ::ProtoPkField::PkUserItem& PkFieldResp::winners(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkFieldResp.winners)
  return winners_.Get(index);
}
inline ::ProtoPkField::PkUserItem* PkFieldResp::mutable_winners(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoPkField.PkFieldResp.winners)
  return winners_.Mutable(index);
}
inline ::ProtoPkField::PkUserItem* PkFieldResp::add_winners() {
  // @@protoc_insertion_point(field_add:ProtoPkField.PkFieldResp.winners)
  return winners_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
PkFieldResp::winners() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.PkFieldResp.winners)
  return winners_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
PkFieldResp::mutable_winners() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.PkFieldResp.winners)
  return &winners_;
}

// repeated .ProtoPkField.PkUserItem defier = 4;
inline int PkFieldResp::defier_size() const {
  return defier_.size();
}
inline void PkFieldResp::clear_defier() {
  defier_.Clear();
}
inline const ::ProtoPkField::PkUserItem& PkFieldResp::defier(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkFieldResp.defier)
  return defier_.Get(index);
}
inline ::ProtoPkField::PkUserItem* PkFieldResp::mutable_defier(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoPkField.PkFieldResp.defier)
  return defier_.Mutable(index);
}
inline ::ProtoPkField::PkUserItem* PkFieldResp::add_defier() {
  // @@protoc_insertion_point(field_add:ProtoPkField.PkFieldResp.defier)
  return defier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
PkFieldResp::defier() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.PkFieldResp.defier)
  return defier_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
PkFieldResp::mutable_defier() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.PkFieldResp.defier)
  return &defier_;
}

// required int32 reward_rank = 5;
inline bool PkFieldResp::has_reward_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkFieldResp::set_has_reward_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkFieldResp::clear_has_reward_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkFieldResp::clear_reward_rank() {
  reward_rank_ = 0;
  clear_has_reward_rank();
}
inline ::google::protobuf::int32 PkFieldResp::reward_rank() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkFieldResp.reward_rank)
  return reward_rank_;
}
inline void PkFieldResp::set_reward_rank(::google::protobuf::int32 value) {
  set_has_reward_rank();
  reward_rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkFieldResp.reward_rank)
}

// -------------------------------------------------------------------

// EnterPkFieldReq

// required int32 rank = 1;
inline bool EnterPkFieldReq::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterPkFieldReq::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterPkFieldReq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterPkFieldReq::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 EnterPkFieldReq::rank() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.EnterPkFieldReq.rank)
  return rank_;
}
inline void EnterPkFieldReq::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.EnterPkFieldReq.rank)
}

// -------------------------------------------------------------------

// EnterPkFieldResp

// repeated uint32 hero_ids = 1;
inline int EnterPkFieldResp::hero_ids_size() const {
  return hero_ids_.size();
}
inline void EnterPkFieldResp::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 EnterPkFieldResp::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.EnterPkFieldResp.hero_ids)
  return hero_ids_.Get(index);
}
inline void EnterPkFieldResp::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoPkField.EnterPkFieldResp.hero_ids)
}
inline void EnterPkFieldResp::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoPkField.EnterPkFieldResp.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnterPkFieldResp::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.EnterPkFieldResp.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnterPkFieldResp::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.EnterPkFieldResp.hero_ids)
  return &hero_ids_;
}

// repeated uint32 hero_lvl = 2;
inline int EnterPkFieldResp::hero_lvl_size() const {
  return hero_lvl_.size();
}
inline void EnterPkFieldResp::clear_hero_lvl() {
  hero_lvl_.Clear();
}
inline ::google::protobuf::uint32 EnterPkFieldResp::hero_lvl(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.EnterPkFieldResp.hero_lvl)
  return hero_lvl_.Get(index);
}
inline void EnterPkFieldResp::set_hero_lvl(int index, ::google::protobuf::uint32 value) {
  hero_lvl_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoPkField.EnterPkFieldResp.hero_lvl)
}
inline void EnterPkFieldResp::add_hero_lvl(::google::protobuf::uint32 value) {
  hero_lvl_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoPkField.EnterPkFieldResp.hero_lvl)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnterPkFieldResp::hero_lvl() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.EnterPkFieldResp.hero_lvl)
  return hero_lvl_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnterPkFieldResp::mutable_hero_lvl() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.EnterPkFieldResp.hero_lvl)
  return &hero_lvl_;
}

// repeated uint32 hero_troops = 3;
inline int EnterPkFieldResp::hero_troops_size() const {
  return hero_troops_.size();
}
inline void EnterPkFieldResp::clear_hero_troops() {
  hero_troops_.Clear();
}
inline ::google::protobuf::uint32 EnterPkFieldResp::hero_troops(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.EnterPkFieldResp.hero_troops)
  return hero_troops_.Get(index);
}
inline void EnterPkFieldResp::set_hero_troops(int index, ::google::protobuf::uint32 value) {
  hero_troops_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoPkField.EnterPkFieldResp.hero_troops)
}
inline void EnterPkFieldResp::add_hero_troops(::google::protobuf::uint32 value) {
  hero_troops_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoPkField.EnterPkFieldResp.hero_troops)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnterPkFieldResp::hero_troops() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.EnterPkFieldResp.hero_troops)
  return hero_troops_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnterPkFieldResp::mutable_hero_troops() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.EnterPkFieldResp.hero_troops)
  return &hero_troops_;
}

// -------------------------------------------------------------------

// StartPkReq

// required int32 rank = 1;
inline bool StartPkReq::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartPkReq::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartPkReq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartPkReq::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 StartPkReq::rank() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.StartPkReq.rank)
  return rank_;
}
inline void StartPkReq::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.StartPkReq.rank)
}

// repeated uint32 hero_ids = 2;
inline int StartPkReq::hero_ids_size() const {
  return hero_ids_.size();
}
inline void StartPkReq::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 StartPkReq::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.StartPkReq.hero_ids)
  return hero_ids_.Get(index);
}
inline void StartPkReq::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoPkField.StartPkReq.hero_ids)
}
inline void StartPkReq::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoPkField.StartPkReq.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartPkReq::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.StartPkReq.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartPkReq::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.StartPkReq.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// RefreshRivalReq

// -------------------------------------------------------------------

// RefreshRivalResp

// required uint32 cash = 1;
inline bool RefreshRivalResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshRivalResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshRivalResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshRivalResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 RefreshRivalResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.RefreshRivalResp.cash)
  return cash_;
}
inline void RefreshRivalResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.RefreshRivalResp.cash)
}

// repeated .ProtoPkField.PkUserItem rival = 2;
inline int RefreshRivalResp::rival_size() const {
  return rival_.size();
}
inline void RefreshRivalResp::clear_rival() {
  rival_.Clear();
}
inline const ::ProtoPkField::PkUserItem& RefreshRivalResp::rival(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPkField.RefreshRivalResp.rival)
  return rival_.Get(index);
}
inline ::ProtoPkField::PkUserItem* RefreshRivalResp::mutable_rival(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoPkField.RefreshRivalResp.rival)
  return rival_.Mutable(index);
}
inline ::ProtoPkField::PkUserItem* RefreshRivalResp::add_rival() {
  // @@protoc_insertion_point(field_add:ProtoPkField.RefreshRivalResp.rival)
  return rival_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >&
RefreshRivalResp::rival() const {
  // @@protoc_insertion_point(field_list:ProtoPkField.RefreshRivalResp.rival)
  return rival_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoPkField::PkUserItem >*
RefreshRivalResp::mutable_rival() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPkField.RefreshRivalResp.rival)
  return &rival_;
}

// -------------------------------------------------------------------

// PkRewardReq

// -------------------------------------------------------------------

// PkRewardResp

// required .DataCommon.CommonBaseRewardCPP base = 1;
inline bool PkRewardResp::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkRewardResp::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkRewardResp::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkRewardResp::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& PkRewardResp::base() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkRewardResp.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* PkRewardResp::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoPkField.PkRewardResp.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* PkRewardResp::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void PkRewardResp::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoPkField.PkRewardResp.base)
}

// required uint32 ladder_ts = 2;
inline bool PkRewardResp::has_ladder_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkRewardResp::set_has_ladder_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkRewardResp::clear_has_ladder_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkRewardResp::clear_ladder_ts() {
  ladder_ts_ = 0u;
  clear_has_ladder_ts();
}
inline ::google::protobuf::uint32 PkRewardResp::ladder_ts() const {
  // @@protoc_insertion_point(field_get:ProtoPkField.PkRewardResp.ladder_ts)
  return ladder_ts_;
}
inline void PkRewardResp::set_ladder_ts(::google::protobuf::uint32 value) {
  set_has_ladder_ts();
  ladder_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoPkField.PkRewardResp.ladder_ts)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoPkField

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoPkField_2eproto__INCLUDED
