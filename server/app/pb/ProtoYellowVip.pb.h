// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoYellowVip.proto

#ifndef PROTOBUF_ProtoYellowVip_2eproto__INCLUDED
#define PROTOBUF_ProtoYellowVip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoYellowVip {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoYellowVip_2eproto();
void protobuf_AssignDesc_ProtoYellowVip_2eproto();
void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

class FinalRewardCPP;
class YellowVipCPP;
class GetNewerGiftReq;
class GetNewerGiftResp;
class GetDailyGiftReq;
class GetDailyGiftResp;
class GetYearDailyGiftReq;
class GetYearDailyGiftResp;
class GetLevelGiftReq;
class GetLevelGiftResp;
class QQZoneGetDailyGiftReq;
class QQZoneGetDailyGiftResp;
class QQZoneGetLevelGiftReq;
class QQZoneGetLevelGiftResp;

// ===================================================================

class FinalRewardCPP : public ::google::protobuf::Message {
 public:
  FinalRewardCPP();
  virtual ~FinalRewardCPP();

  FinalRewardCPP(const FinalRewardCPP& from);

  inline FinalRewardCPP& operator=(const FinalRewardCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinalRewardCPP& default_instance();

  void Swap(FinalRewardCPP* other);

  // implements Message ----------------------------------------------

  FinalRewardCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinalRewardCPP& from);
  void MergeFrom(const FinalRewardCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // optional int32 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // optional int32 wood = 3;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 3;
  inline ::google::protobuf::int32 wood() const;
  inline void set_wood(::google::protobuf::int32 value);

  // optional int32 food = 4;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 4;
  inline ::google::protobuf::int32 food() const;
  inline void set_food(::google::protobuf::int32 value);

  // optional int32 iron = 5;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 5;
  inline ::google::protobuf::int32 iron() const;
  inline void set_iron(::google::protobuf::int32 value);

  // optional int32 hammer = 6;
  inline bool has_hammer() const;
  inline void clear_hammer();
  static const int kHammerFieldNumber = 6;
  inline ::google::protobuf::int32 hammer() const;
  inline void set_hammer(::google::protobuf::int32 value);

  // optional int32 order = 7;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 7;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.FinalRewardCPP)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_iron();
  inline void clear_has_iron();
  inline void set_has_hammer();
  inline void clear_has_hammer();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 wood_;
  ::google::protobuf::int32 food_;
  ::google::protobuf::int32 iron_;
  ::google::protobuf::int32 hammer_;
  ::google::protobuf::int32 order_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static FinalRewardCPP* default_instance_;
};
// -------------------------------------------------------------------

class YellowVipCPP : public ::google::protobuf::Message {
 public:
  YellowVipCPP();
  virtual ~YellowVipCPP();

  YellowVipCPP(const YellowVipCPP& from);

  inline YellowVipCPP& operator=(const YellowVipCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YellowVipCPP& default_instance();

  void Swap(YellowVipCPP* other);

  // implements Message ----------------------------------------------

  YellowVipCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YellowVipCPP& from);
  void MergeFrom(const YellowVipCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 newerstatus = 1;
  inline bool has_newerstatus() const;
  inline void clear_newerstatus();
  static const int kNewerstatusFieldNumber = 1;
  inline ::google::protobuf::uint32 newerstatus() const;
  inline void set_newerstatus(::google::protobuf::uint32 value);

  // required uint32 dailystatus = 2;
  inline bool has_dailystatus() const;
  inline void clear_dailystatus();
  static const int kDailystatusFieldNumber = 2;
  inline ::google::protobuf::uint32 dailystatus() const;
  inline void set_dailystatus(::google::protobuf::uint32 value);

  // required uint32 yearstatus = 3;
  inline bool has_yearstatus() const;
  inline void clear_yearstatus();
  static const int kYearstatusFieldNumber = 3;
  inline ::google::protobuf::uint32 yearstatus() const;
  inline void set_yearstatus(::google::protobuf::uint32 value);

  // required uint32 levelstatus = 4;
  inline bool has_levelstatus() const;
  inline void clear_levelstatus();
  static const int kLevelstatusFieldNumber = 4;
  inline ::google::protobuf::uint32 levelstatus() const;
  inline void set_levelstatus(::google::protobuf::uint32 value);

  // required uint32 daily_reward_time = 5;
  inline bool has_daily_reward_time() const;
  inline void clear_daily_reward_time();
  static const int kDailyRewardTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_reward_time() const;
  inline void set_daily_reward_time(::google::protobuf::uint32 value);

  // required uint32 year_reward_time = 6;
  inline bool has_year_reward_time() const;
  inline void clear_year_reward_time();
  static const int kYearRewardTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 year_reward_time() const;
  inline void set_year_reward_time(::google::protobuf::uint32 value);

  // required uint32 qqzone_dailystatus = 7;
  inline bool has_qqzone_dailystatus() const;
  inline void clear_qqzone_dailystatus();
  static const int kQqzoneDailystatusFieldNumber = 7;
  inline ::google::protobuf::uint32 qqzone_dailystatus() const;
  inline void set_qqzone_dailystatus(::google::protobuf::uint32 value);

  // required uint32 qqzone_daily_time = 8;
  inline bool has_qqzone_daily_time() const;
  inline void clear_qqzone_daily_time();
  static const int kQqzoneDailyTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 qqzone_daily_time() const;
  inline void set_qqzone_daily_time(::google::protobuf::uint32 value);

  // required uint32 qqzone_levelstatus = 9;
  inline bool has_qqzone_levelstatus() const;
  inline void clear_qqzone_levelstatus();
  static const int kQqzoneLevelstatusFieldNumber = 9;
  inline ::google::protobuf::uint32 qqzone_levelstatus() const;
  inline void set_qqzone_levelstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.YellowVipCPP)
 private:
  inline void set_has_newerstatus();
  inline void clear_has_newerstatus();
  inline void set_has_dailystatus();
  inline void clear_has_dailystatus();
  inline void set_has_yearstatus();
  inline void clear_has_yearstatus();
  inline void set_has_levelstatus();
  inline void clear_has_levelstatus();
  inline void set_has_daily_reward_time();
  inline void clear_has_daily_reward_time();
  inline void set_has_year_reward_time();
  inline void clear_has_year_reward_time();
  inline void set_has_qqzone_dailystatus();
  inline void clear_has_qqzone_dailystatus();
  inline void set_has_qqzone_daily_time();
  inline void clear_has_qqzone_daily_time();
  inline void set_has_qqzone_levelstatus();
  inline void clear_has_qqzone_levelstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 newerstatus_;
  ::google::protobuf::uint32 dailystatus_;
  ::google::protobuf::uint32 yearstatus_;
  ::google::protobuf::uint32 levelstatus_;
  ::google::protobuf::uint32 daily_reward_time_;
  ::google::protobuf::uint32 year_reward_time_;
  ::google::protobuf::uint32 qqzone_dailystatus_;
  ::google::protobuf::uint32 qqzone_daily_time_;
  ::google::protobuf::uint32 qqzone_levelstatus_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static YellowVipCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetNewerGiftReq : public ::google::protobuf::Message {
 public:
  GetNewerGiftReq();
  virtual ~GetNewerGiftReq();

  GetNewerGiftReq(const GetNewerGiftReq& from);

  inline GetNewerGiftReq& operator=(const GetNewerGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewerGiftReq& default_instance();

  void Swap(GetNewerGiftReq* other);

  // implements Message ----------------------------------------------

  GetNewerGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewerGiftReq& from);
  void MergeFrom(const GetNewerGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetNewerGiftReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetNewerGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNewerGiftResp : public ::google::protobuf::Message {
 public:
  GetNewerGiftResp();
  virtual ~GetNewerGiftResp();

  GetNewerGiftResp(const GetNewerGiftResp& from);

  inline GetNewerGiftResp& operator=(const GetNewerGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewerGiftResp& default_instance();

  void Swap(GetNewerGiftResp* other);

  // implements Message ----------------------------------------------

  GetNewerGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewerGiftResp& from);
  void MergeFrom(const GetNewerGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetNewerGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetNewerGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyGiftReq : public ::google::protobuf::Message {
 public:
  GetDailyGiftReq();
  virtual ~GetDailyGiftReq();

  GetDailyGiftReq(const GetDailyGiftReq& from);

  inline GetDailyGiftReq& operator=(const GetDailyGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyGiftReq& default_instance();

  void Swap(GetDailyGiftReq* other);

  // implements Message ----------------------------------------------

  GetDailyGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyGiftReq& from);
  void MergeFrom(const GetDailyGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetDailyGiftReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetDailyGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyGiftResp : public ::google::protobuf::Message {
 public:
  GetDailyGiftResp();
  virtual ~GetDailyGiftResp();

  GetDailyGiftResp(const GetDailyGiftResp& from);

  inline GetDailyGiftResp& operator=(const GetDailyGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyGiftResp& default_instance();

  void Swap(GetDailyGiftResp* other);

  // implements Message ----------------------------------------------

  GetDailyGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyGiftResp& from);
  void MergeFrom(const GetDailyGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetDailyGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetDailyGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class GetYearDailyGiftReq : public ::google::protobuf::Message {
 public:
  GetYearDailyGiftReq();
  virtual ~GetYearDailyGiftReq();

  GetYearDailyGiftReq(const GetYearDailyGiftReq& from);

  inline GetYearDailyGiftReq& operator=(const GetYearDailyGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetYearDailyGiftReq& default_instance();

  void Swap(GetYearDailyGiftReq* other);

  // implements Message ----------------------------------------------

  GetYearDailyGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetYearDailyGiftReq& from);
  void MergeFrom(const GetYearDailyGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetYearDailyGiftReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetYearDailyGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class GetYearDailyGiftResp : public ::google::protobuf::Message {
 public:
  GetYearDailyGiftResp();
  virtual ~GetYearDailyGiftResp();

  GetYearDailyGiftResp(const GetYearDailyGiftResp& from);

  inline GetYearDailyGiftResp& operator=(const GetYearDailyGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetYearDailyGiftResp& default_instance();

  void Swap(GetYearDailyGiftResp* other);

  // implements Message ----------------------------------------------

  GetYearDailyGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetYearDailyGiftResp& from);
  void MergeFrom(const GetYearDailyGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetYearDailyGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetYearDailyGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class GetLevelGiftReq : public ::google::protobuf::Message {
 public:
  GetLevelGiftReq();
  virtual ~GetLevelGiftReq();

  GetLevelGiftReq(const GetLevelGiftReq& from);

  inline GetLevelGiftReq& operator=(const GetLevelGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLevelGiftReq& default_instance();

  void Swap(GetLevelGiftReq* other);

  // implements Message ----------------------------------------------

  GetLevelGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLevelGiftReq& from);
  void MergeFrom(const GetLevelGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetLevelGiftReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetLevelGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class GetLevelGiftResp : public ::google::protobuf::Message {
 public:
  GetLevelGiftResp();
  virtual ~GetLevelGiftResp();

  GetLevelGiftResp(const GetLevelGiftResp& from);

  inline GetLevelGiftResp& operator=(const GetLevelGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLevelGiftResp& default_instance();

  void Swap(GetLevelGiftResp* other);

  // implements Message ----------------------------------------------

  GetLevelGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLevelGiftResp& from);
  void MergeFrom(const GetLevelGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.GetLevelGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GetLevelGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class QQZoneGetDailyGiftReq : public ::google::protobuf::Message {
 public:
  QQZoneGetDailyGiftReq();
  virtual ~QQZoneGetDailyGiftReq();

  QQZoneGetDailyGiftReq(const QQZoneGetDailyGiftReq& from);

  inline QQZoneGetDailyGiftReq& operator=(const QQZoneGetDailyGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQZoneGetDailyGiftReq& default_instance();

  void Swap(QQZoneGetDailyGiftReq* other);

  // implements Message ----------------------------------------------

  QQZoneGetDailyGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQZoneGetDailyGiftReq& from);
  void MergeFrom(const QQZoneGetDailyGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.QQZoneGetDailyGiftReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static QQZoneGetDailyGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class QQZoneGetDailyGiftResp : public ::google::protobuf::Message {
 public:
  QQZoneGetDailyGiftResp();
  virtual ~QQZoneGetDailyGiftResp();

  QQZoneGetDailyGiftResp(const QQZoneGetDailyGiftResp& from);

  inline QQZoneGetDailyGiftResp& operator=(const QQZoneGetDailyGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQZoneGetDailyGiftResp& default_instance();

  void Swap(QQZoneGetDailyGiftResp* other);

  // implements Message ----------------------------------------------

  QQZoneGetDailyGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQZoneGetDailyGiftResp& from);
  void MergeFrom(const QQZoneGetDailyGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.QQZoneGetDailyGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static QQZoneGetDailyGiftResp* default_instance_;
};
// -------------------------------------------------------------------

class QQZoneGetLevelGiftReq : public ::google::protobuf::Message {
 public:
  QQZoneGetLevelGiftReq();
  virtual ~QQZoneGetLevelGiftReq();

  QQZoneGetLevelGiftReq(const QQZoneGetLevelGiftReq& from);

  inline QQZoneGetLevelGiftReq& operator=(const QQZoneGetLevelGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQZoneGetLevelGiftReq& default_instance();

  void Swap(QQZoneGetLevelGiftReq* other);

  // implements Message ----------------------------------------------

  QQZoneGetLevelGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQZoneGetLevelGiftReq& from);
  void MergeFrom(const QQZoneGetLevelGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.QQZoneGetLevelGiftReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static QQZoneGetLevelGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class QQZoneGetLevelGiftResp : public ::google::protobuf::Message {
 public:
  QQZoneGetLevelGiftResp();
  virtual ~QQZoneGetLevelGiftResp();

  QQZoneGetLevelGiftResp(const QQZoneGetLevelGiftResp& from);

  inline QQZoneGetLevelGiftResp& operator=(const QQZoneGetLevelGiftResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQZoneGetLevelGiftResp& default_instance();

  void Swap(QQZoneGetLevelGiftResp* other);

  // implements Message ----------------------------------------------

  QQZoneGetLevelGiftResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQZoneGetLevelGiftResp& from);
  void MergeFrom(const QQZoneGetLevelGiftResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoYellowVip::FinalRewardCPP& reward() const;
  inline ::ProtoYellowVip::FinalRewardCPP* mutable_reward();
  inline ::ProtoYellowVip::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward);

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  inline bool has_yellowvip() const;
  inline void clear_yellowvip();
  static const int kYellowvipFieldNumber = 2;
  inline const ::ProtoYellowVip::YellowVipCPP& yellowvip() const;
  inline ::ProtoYellowVip::YellowVipCPP* mutable_yellowvip();
  inline ::ProtoYellowVip::YellowVipCPP* release_yellowvip();
  inline void set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip);

  // @@protoc_insertion_point(class_scope:ProtoYellowVip.QQZoneGetLevelGiftResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_yellowvip();
  inline void clear_has_yellowvip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoYellowVip::FinalRewardCPP* reward_;
  ::ProtoYellowVip::YellowVipCPP* yellowvip_;
  friend void  protobuf_AddDesc_ProtoYellowVip_2eproto();
  friend void protobuf_AssignDesc_ProtoYellowVip_2eproto();
  friend void protobuf_ShutdownFile_ProtoYellowVip_2eproto();

  void InitAsDefaultInstance();
  static QQZoneGetLevelGiftResp* default_instance_;
};
// ===================================================================


// ===================================================================

// FinalRewardCPP

// optional .DataCommon.EquipmentAllCPP equips = 1;
inline bool FinalRewardCPP::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinalRewardCPP::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinalRewardCPP::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinalRewardCPP::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& FinalRewardCPP::equips() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* FinalRewardCPP::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.FinalRewardCPP.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* FinalRewardCPP::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void FinalRewardCPP::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.FinalRewardCPP.equips)
}

// optional int32 coin = 2;
inline bool FinalRewardCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinalRewardCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinalRewardCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinalRewardCPP::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 FinalRewardCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.coin)
  return coin_;
}
inline void FinalRewardCPP::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.coin)
}

// optional int32 wood = 3;
inline bool FinalRewardCPP::has_wood() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinalRewardCPP::set_has_wood() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinalRewardCPP::clear_has_wood() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinalRewardCPP::clear_wood() {
  wood_ = 0;
  clear_has_wood();
}
inline ::google::protobuf::int32 FinalRewardCPP::wood() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.wood)
  return wood_;
}
inline void FinalRewardCPP::set_wood(::google::protobuf::int32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.wood)
}

// optional int32 food = 4;
inline bool FinalRewardCPP::has_food() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FinalRewardCPP::set_has_food() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FinalRewardCPP::clear_has_food() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FinalRewardCPP::clear_food() {
  food_ = 0;
  clear_has_food();
}
inline ::google::protobuf::int32 FinalRewardCPP::food() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.food)
  return food_;
}
inline void FinalRewardCPP::set_food(::google::protobuf::int32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.food)
}

// optional int32 iron = 5;
inline bool FinalRewardCPP::has_iron() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FinalRewardCPP::set_has_iron() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FinalRewardCPP::clear_has_iron() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FinalRewardCPP::clear_iron() {
  iron_ = 0;
  clear_has_iron();
}
inline ::google::protobuf::int32 FinalRewardCPP::iron() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.iron)
  return iron_;
}
inline void FinalRewardCPP::set_iron(::google::protobuf::int32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.iron)
}

// optional int32 hammer = 6;
inline bool FinalRewardCPP::has_hammer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FinalRewardCPP::set_has_hammer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FinalRewardCPP::clear_has_hammer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FinalRewardCPP::clear_hammer() {
  hammer_ = 0;
  clear_has_hammer();
}
inline ::google::protobuf::int32 FinalRewardCPP::hammer() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.hammer)
  return hammer_;
}
inline void FinalRewardCPP::set_hammer(::google::protobuf::int32 value) {
  set_has_hammer();
  hammer_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.hammer)
}

// optional int32 order = 7;
inline bool FinalRewardCPP::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FinalRewardCPP::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FinalRewardCPP::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FinalRewardCPP::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 FinalRewardCPP::order() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.FinalRewardCPP.order)
  return order_;
}
inline void FinalRewardCPP::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.FinalRewardCPP.order)
}

// -------------------------------------------------------------------

// YellowVipCPP

// required uint32 newerstatus = 1;
inline bool YellowVipCPP::has_newerstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YellowVipCPP::set_has_newerstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YellowVipCPP::clear_has_newerstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YellowVipCPP::clear_newerstatus() {
  newerstatus_ = 0u;
  clear_has_newerstatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::newerstatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.newerstatus)
  return newerstatus_;
}
inline void YellowVipCPP::set_newerstatus(::google::protobuf::uint32 value) {
  set_has_newerstatus();
  newerstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.newerstatus)
}

// required uint32 dailystatus = 2;
inline bool YellowVipCPP::has_dailystatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YellowVipCPP::set_has_dailystatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YellowVipCPP::clear_has_dailystatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YellowVipCPP::clear_dailystatus() {
  dailystatus_ = 0u;
  clear_has_dailystatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::dailystatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.dailystatus)
  return dailystatus_;
}
inline void YellowVipCPP::set_dailystatus(::google::protobuf::uint32 value) {
  set_has_dailystatus();
  dailystatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.dailystatus)
}

// required uint32 yearstatus = 3;
inline bool YellowVipCPP::has_yearstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YellowVipCPP::set_has_yearstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YellowVipCPP::clear_has_yearstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YellowVipCPP::clear_yearstatus() {
  yearstatus_ = 0u;
  clear_has_yearstatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::yearstatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.yearstatus)
  return yearstatus_;
}
inline void YellowVipCPP::set_yearstatus(::google::protobuf::uint32 value) {
  set_has_yearstatus();
  yearstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.yearstatus)
}

// required uint32 levelstatus = 4;
inline bool YellowVipCPP::has_levelstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YellowVipCPP::set_has_levelstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YellowVipCPP::clear_has_levelstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YellowVipCPP::clear_levelstatus() {
  levelstatus_ = 0u;
  clear_has_levelstatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::levelstatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.levelstatus)
  return levelstatus_;
}
inline void YellowVipCPP::set_levelstatus(::google::protobuf::uint32 value) {
  set_has_levelstatus();
  levelstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.levelstatus)
}

// required uint32 daily_reward_time = 5;
inline bool YellowVipCPP::has_daily_reward_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YellowVipCPP::set_has_daily_reward_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YellowVipCPP::clear_has_daily_reward_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YellowVipCPP::clear_daily_reward_time() {
  daily_reward_time_ = 0u;
  clear_has_daily_reward_time();
}
inline ::google::protobuf::uint32 YellowVipCPP::daily_reward_time() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.daily_reward_time)
  return daily_reward_time_;
}
inline void YellowVipCPP::set_daily_reward_time(::google::protobuf::uint32 value) {
  set_has_daily_reward_time();
  daily_reward_time_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.daily_reward_time)
}

// required uint32 year_reward_time = 6;
inline bool YellowVipCPP::has_year_reward_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YellowVipCPP::set_has_year_reward_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YellowVipCPP::clear_has_year_reward_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YellowVipCPP::clear_year_reward_time() {
  year_reward_time_ = 0u;
  clear_has_year_reward_time();
}
inline ::google::protobuf::uint32 YellowVipCPP::year_reward_time() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.year_reward_time)
  return year_reward_time_;
}
inline void YellowVipCPP::set_year_reward_time(::google::protobuf::uint32 value) {
  set_has_year_reward_time();
  year_reward_time_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.year_reward_time)
}

// required uint32 qqzone_dailystatus = 7;
inline bool YellowVipCPP::has_qqzone_dailystatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YellowVipCPP::set_has_qqzone_dailystatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YellowVipCPP::clear_has_qqzone_dailystatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YellowVipCPP::clear_qqzone_dailystatus() {
  qqzone_dailystatus_ = 0u;
  clear_has_qqzone_dailystatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::qqzone_dailystatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.qqzone_dailystatus)
  return qqzone_dailystatus_;
}
inline void YellowVipCPP::set_qqzone_dailystatus(::google::protobuf::uint32 value) {
  set_has_qqzone_dailystatus();
  qqzone_dailystatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.qqzone_dailystatus)
}

// required uint32 qqzone_daily_time = 8;
inline bool YellowVipCPP::has_qqzone_daily_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void YellowVipCPP::set_has_qqzone_daily_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void YellowVipCPP::clear_has_qqzone_daily_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void YellowVipCPP::clear_qqzone_daily_time() {
  qqzone_daily_time_ = 0u;
  clear_has_qqzone_daily_time();
}
inline ::google::protobuf::uint32 YellowVipCPP::qqzone_daily_time() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.qqzone_daily_time)
  return qqzone_daily_time_;
}
inline void YellowVipCPP::set_qqzone_daily_time(::google::protobuf::uint32 value) {
  set_has_qqzone_daily_time();
  qqzone_daily_time_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.qqzone_daily_time)
}

// required uint32 qqzone_levelstatus = 9;
inline bool YellowVipCPP::has_qqzone_levelstatus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void YellowVipCPP::set_has_qqzone_levelstatus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void YellowVipCPP::clear_has_qqzone_levelstatus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void YellowVipCPP::clear_qqzone_levelstatus() {
  qqzone_levelstatus_ = 0u;
  clear_has_qqzone_levelstatus();
}
inline ::google::protobuf::uint32 YellowVipCPP::qqzone_levelstatus() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.YellowVipCPP.qqzone_levelstatus)
  return qqzone_levelstatus_;
}
inline void YellowVipCPP::set_qqzone_levelstatus(::google::protobuf::uint32 value) {
  set_has_qqzone_levelstatus();
  qqzone_levelstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.YellowVipCPP.qqzone_levelstatus)
}

// -------------------------------------------------------------------

// GetNewerGiftReq

// -------------------------------------------------------------------

// GetNewerGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool GetNewerGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNewerGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNewerGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNewerGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& GetNewerGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetNewerGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetNewerGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetNewerGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetNewerGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetNewerGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetNewerGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool GetNewerGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNewerGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNewerGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNewerGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& GetNewerGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetNewerGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetNewerGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetNewerGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetNewerGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void GetNewerGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetNewerGiftResp.yellowvip)
}

// -------------------------------------------------------------------

// GetDailyGiftReq

// -------------------------------------------------------------------

// GetDailyGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool GetDailyGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& GetDailyGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetDailyGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetDailyGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetDailyGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetDailyGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetDailyGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetDailyGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool GetDailyGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDailyGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDailyGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDailyGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& GetDailyGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetDailyGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetDailyGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetDailyGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetDailyGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void GetDailyGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetDailyGiftResp.yellowvip)
}

// -------------------------------------------------------------------

// GetYearDailyGiftReq

// -------------------------------------------------------------------

// GetYearDailyGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool GetYearDailyGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetYearDailyGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetYearDailyGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetYearDailyGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& GetYearDailyGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetYearDailyGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetYearDailyGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetYearDailyGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetYearDailyGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetYearDailyGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetYearDailyGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool GetYearDailyGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetYearDailyGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetYearDailyGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetYearDailyGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& GetYearDailyGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetYearDailyGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetYearDailyGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetYearDailyGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetYearDailyGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void GetYearDailyGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetYearDailyGiftResp.yellowvip)
}

// -------------------------------------------------------------------

// GetLevelGiftReq

// required uint32 index = 1;
inline bool GetLevelGiftReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLevelGiftReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLevelGiftReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLevelGiftReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GetLevelGiftReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetLevelGiftReq.index)
  return index_;
}
inline void GetLevelGiftReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.GetLevelGiftReq.index)
}

// -------------------------------------------------------------------

// GetLevelGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool GetLevelGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLevelGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLevelGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLevelGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& GetLevelGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetLevelGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetLevelGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetLevelGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* GetLevelGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetLevelGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetLevelGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool GetLevelGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLevelGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLevelGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLevelGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& GetLevelGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.GetLevelGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetLevelGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.GetLevelGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* GetLevelGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void GetLevelGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.GetLevelGiftResp.yellowvip)
}

// -------------------------------------------------------------------

// QQZoneGetDailyGiftReq

// -------------------------------------------------------------------

// QQZoneGetDailyGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool QQZoneGetDailyGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQZoneGetDailyGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQZoneGetDailyGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQZoneGetDailyGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& QQZoneGetDailyGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.QQZoneGetDailyGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* QQZoneGetDailyGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.QQZoneGetDailyGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* QQZoneGetDailyGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void QQZoneGetDailyGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.QQZoneGetDailyGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool QQZoneGetDailyGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QQZoneGetDailyGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QQZoneGetDailyGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QQZoneGetDailyGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& QQZoneGetDailyGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.QQZoneGetDailyGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* QQZoneGetDailyGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.QQZoneGetDailyGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* QQZoneGetDailyGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void QQZoneGetDailyGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.QQZoneGetDailyGiftResp.yellowvip)
}

// -------------------------------------------------------------------

// QQZoneGetLevelGiftReq

// required uint32 index = 1;
inline bool QQZoneGetLevelGiftReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQZoneGetLevelGiftReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQZoneGetLevelGiftReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQZoneGetLevelGiftReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 QQZoneGetLevelGiftReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.QQZoneGetLevelGiftReq.index)
  return index_;
}
inline void QQZoneGetLevelGiftReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoYellowVip.QQZoneGetLevelGiftReq.index)
}

// -------------------------------------------------------------------

// QQZoneGetLevelGiftResp

// required .ProtoYellowVip.FinalRewardCPP reward = 1;
inline bool QQZoneGetLevelGiftResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQZoneGetLevelGiftResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQZoneGetLevelGiftResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQZoneGetLevelGiftResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoYellowVip::FinalRewardCPP& QQZoneGetLevelGiftResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.QQZoneGetLevelGiftResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* QQZoneGetLevelGiftResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoYellowVip::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.QQZoneGetLevelGiftResp.reward)
  return reward_;
}
inline ::ProtoYellowVip::FinalRewardCPP* QQZoneGetLevelGiftResp::release_reward() {
  clear_has_reward();
  ::ProtoYellowVip::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void QQZoneGetLevelGiftResp::set_allocated_reward(::ProtoYellowVip::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.QQZoneGetLevelGiftResp.reward)
}

// required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
inline bool QQZoneGetLevelGiftResp::has_yellowvip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QQZoneGetLevelGiftResp::set_has_yellowvip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QQZoneGetLevelGiftResp::clear_has_yellowvip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QQZoneGetLevelGiftResp::clear_yellowvip() {
  if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
  clear_has_yellowvip();
}
inline const ::ProtoYellowVip::YellowVipCPP& QQZoneGetLevelGiftResp::yellowvip() const {
  // @@protoc_insertion_point(field_get:ProtoYellowVip.QQZoneGetLevelGiftResp.yellowvip)
  return yellowvip_ != NULL ? *yellowvip_ : *default_instance_->yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* QQZoneGetLevelGiftResp::mutable_yellowvip() {
  set_has_yellowvip();
  if (yellowvip_ == NULL) yellowvip_ = new ::ProtoYellowVip::YellowVipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoYellowVip.QQZoneGetLevelGiftResp.yellowvip)
  return yellowvip_;
}
inline ::ProtoYellowVip::YellowVipCPP* QQZoneGetLevelGiftResp::release_yellowvip() {
  clear_has_yellowvip();
  ::ProtoYellowVip::YellowVipCPP* temp = yellowvip_;
  yellowvip_ = NULL;
  return temp;
}
inline void QQZoneGetLevelGiftResp::set_allocated_yellowvip(::ProtoYellowVip::YellowVipCPP* yellowvip) {
  delete yellowvip_;
  yellowvip_ = yellowvip;
  if (yellowvip) {
    set_has_yellowvip();
  } else {
    clear_has_yellowvip();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoYellowVip.QQZoneGetLevelGiftResp.yellowvip)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoYellowVip

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoYellowVip_2eproto__INCLUDED
