// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoReward.proto

#ifndef PROTOBUF_ProtoReward_2eproto__INCLUDED
#define PROTOBUF_ProtoReward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
#include "ProtoHero.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoReward {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoReward_2eproto();
void protobuf_AssignDesc_ProtoReward_2eproto();
void protobuf_ShutdownFile_ProtoReward_2eproto();

class FirstRechargeReq;
class FirstRechargeResp;
class IntegralTimeReq;
class IntegralTimeResp;
class VIPReq;
class VIPResp;

// ===================================================================

class FirstRechargeReq : public ::google::protobuf::Message {
 public:
  FirstRechargeReq();
  virtual ~FirstRechargeReq();

  FirstRechargeReq(const FirstRechargeReq& from);

  inline FirstRechargeReq& operator=(const FirstRechargeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstRechargeReq& default_instance();

  void Swap(FirstRechargeReq* other);

  // implements Message ----------------------------------------------

  FirstRechargeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstRechargeReq& from);
  void MergeFrom(const FirstRechargeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.FirstRechargeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static FirstRechargeReq* default_instance_;
};
// -------------------------------------------------------------------

class FirstRechargeResp : public ::google::protobuf::Message {
 public:
  FirstRechargeResp();
  virtual ~FirstRechargeResp();

  FirstRechargeResp(const FirstRechargeResp& from);

  inline FirstRechargeResp& operator=(const FirstRechargeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstRechargeResp& default_instance();

  void Swap(FirstRechargeResp* other);

  // implements Message ----------------------------------------------

  FirstRechargeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstRechargeResp& from);
  void MergeFrom(const FirstRechargeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // repeated uint32 equips_cnt = 2;
  inline int equips_cnt_size() const;
  inline void clear_equips_cnt();
  static const int kEquipsCntFieldNumber = 2;
  inline ::google::protobuf::uint32 equips_cnt(int index) const;
  inline void set_equips_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_equips_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equips_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equips_cnt();

  // required .DataCommon.CommonBaseRewardCPP base = 3;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 3;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // repeated .ProtoHero.HeroBaseInfoCPP heros = 4;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 4;
  inline const ::ProtoHero::HeroBaseInfoCPP& heros(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_heros(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_heros();

  // required uint32 first_recharge = 5;
  inline bool has_first_recharge() const;
  inline void clear_first_recharge();
  static const int kFirstRechargeFieldNumber = 5;
  inline ::google::protobuf::uint32 first_recharge() const;
  inline void set_first_recharge(::google::protobuf::uint32 value);

  // required uint32 auto_build_flag = 6;
  inline bool has_auto_build_flag() const;
  inline void clear_auto_build_flag();
  static const int kAutoBuildFlagFieldNumber = 6;
  inline ::google::protobuf::uint32 auto_build_flag() const;
  inline void set_auto_build_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoReward.FirstRechargeResp)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_first_recharge();
  inline void clear_has_first_recharge();
  inline void set_has_auto_build_flag();
  inline void clear_has_auto_build_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equips_cnt_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > heros_;
  ::google::protobuf::uint32 first_recharge_;
  ::google::protobuf::uint32 auto_build_flag_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static FirstRechargeResp* default_instance_;
};
// -------------------------------------------------------------------

class IntegralTimeReq : public ::google::protobuf::Message {
 public:
  IntegralTimeReq();
  virtual ~IntegralTimeReq();

  IntegralTimeReq(const IntegralTimeReq& from);

  inline IntegralTimeReq& operator=(const IntegralTimeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegralTimeReq& default_instance();

  void Swap(IntegralTimeReq* other);

  // implements Message ----------------------------------------------

  IntegralTimeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntegralTimeReq& from);
  void MergeFrom(const IntegralTimeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.IntegralTimeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static IntegralTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class IntegralTimeResp : public ::google::protobuf::Message {
 public:
  IntegralTimeResp();
  virtual ~IntegralTimeResp();

  IntegralTimeResp(const IntegralTimeResp& from);

  inline IntegralTimeResp& operator=(const IntegralTimeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegralTimeResp& default_instance();

  void Swap(IntegralTimeResp* other);

  // implements Message ----------------------------------------------

  IntegralTimeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntegralTimeResp& from);
  void MergeFrom(const IntegralTimeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 new_cnt = 1;
  inline bool has_new_cnt() const;
  inline void clear_new_cnt();
  static const int kNewCntFieldNumber = 1;
  inline ::google::protobuf::uint32 new_cnt() const;
  inline void set_new_cnt(::google::protobuf::uint32 value);

  // required .DataCommon.CommonBaseRewardCPP base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // @@protoc_insertion_point(class_scope:ProtoReward.IntegralTimeResp)
 private:
  inline void set_has_new_cnt();
  inline void clear_has_new_cnt();
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::uint32 new_cnt_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static IntegralTimeResp* default_instance_;
};
// -------------------------------------------------------------------

class VIPReq : public ::google::protobuf::Message {
 public:
  VIPReq();
  virtual ~VIPReq();

  VIPReq(const VIPReq& from);

  inline VIPReq& operator=(const VIPReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPReq& default_instance();

  void Swap(VIPReq* other);

  // implements Message ----------------------------------------------

  VIPReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPReq& from);
  void MergeFrom(const VIPReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.VIPReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static VIPReq* default_instance_;
};
// -------------------------------------------------------------------

class VIPResp : public ::google::protobuf::Message {
 public:
  VIPResp();
  virtual ~VIPResp();

  VIPResp(const VIPResp& from);

  inline VIPResp& operator=(const VIPResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPResp& default_instance();

  void Swap(VIPResp* other);

  // implements Message ----------------------------------------------

  VIPResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPResp& from);
  void MergeFrom(const VIPResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // repeated uint32 equips_id = 2;
  inline int equips_id_size() const;
  inline void clear_equips_id();
  static const int kEquipsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 equips_id(int index) const;
  inline void set_equips_id(int index, ::google::protobuf::uint32 value);
  inline void add_equips_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equips_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equips_id();

  // repeated uint32 equips_cnt = 3;
  inline int equips_cnt_size() const;
  inline void clear_equips_cnt();
  static const int kEquipsCntFieldNumber = 3;
  inline ::google::protobuf::uint32 equips_cnt(int index) const;
  inline void set_equips_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_equips_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equips_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equips_cnt();

  // required .DataCommon.CommonBaseRewardCPP base = 4;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 4;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // repeated .ProtoHero.HeroBaseInfoCPP heros = 5;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 5;
  inline const ::ProtoHero::HeroBaseInfoCPP& heros(int index) const;
  inline ::ProtoHero::HeroBaseInfoCPP* mutable_heros(int index);
  inline ::ProtoHero::HeroBaseInfoCPP* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
      mutable_heros();

  // required uint32 vip_level = 6;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // required uint32 vip_reward = 7;
  inline bool has_vip_reward() const;
  inline void clear_vip_reward();
  static const int kVipRewardFieldNumber = 7;
  inline ::google::protobuf::uint32 vip_reward() const;
  inline void set_vip_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoReward.VIPResp)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_vip_reward();
  inline void clear_has_vip_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equips_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equips_cnt_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP > heros_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 vip_reward_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static VIPResp* default_instance_;
};
// ===================================================================


// ===================================================================

// FirstRechargeReq

// -------------------------------------------------------------------

// FirstRechargeResp

// required .DataCommon.EquipmentAllCPP equips = 1;
inline bool FirstRechargeResp::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FirstRechargeResp::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FirstRechargeResp::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FirstRechargeResp::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& FirstRechargeResp::equips() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* FirstRechargeResp::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.FirstRechargeResp.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* FirstRechargeResp::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void FirstRechargeResp::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.FirstRechargeResp.equips)
}

// repeated uint32 equips_cnt = 2;
inline int FirstRechargeResp::equips_cnt_size() const {
  return equips_cnt_.size();
}
inline void FirstRechargeResp::clear_equips_cnt() {
  equips_cnt_.Clear();
}
inline ::google::protobuf::uint32 FirstRechargeResp::equips_cnt(int index) const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.equips_cnt)
  return equips_cnt_.Get(index);
}
inline void FirstRechargeResp::set_equips_cnt(int index, ::google::protobuf::uint32 value) {
  equips_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoReward.FirstRechargeResp.equips_cnt)
}
inline void FirstRechargeResp::add_equips_cnt(::google::protobuf::uint32 value) {
  equips_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoReward.FirstRechargeResp.equips_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FirstRechargeResp::equips_cnt() const {
  // @@protoc_insertion_point(field_list:ProtoReward.FirstRechargeResp.equips_cnt)
  return equips_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FirstRechargeResp::mutable_equips_cnt() {
  // @@protoc_insertion_point(field_mutable_list:ProtoReward.FirstRechargeResp.equips_cnt)
  return &equips_cnt_;
}

// required .DataCommon.CommonBaseRewardCPP base = 3;
inline bool FirstRechargeResp::has_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FirstRechargeResp::set_has_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FirstRechargeResp::clear_has_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FirstRechargeResp::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& FirstRechargeResp::base() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* FirstRechargeResp::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.FirstRechargeResp.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* FirstRechargeResp::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void FirstRechargeResp::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.FirstRechargeResp.base)
}

// repeated .ProtoHero.HeroBaseInfoCPP heros = 4;
inline int FirstRechargeResp::heros_size() const {
  return heros_.size();
}
inline void FirstRechargeResp::clear_heros() {
  heros_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& FirstRechargeResp::heros(int index) const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.heros)
  return heros_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* FirstRechargeResp::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoReward.FirstRechargeResp.heros)
  return heros_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* FirstRechargeResp::add_heros() {
  // @@protoc_insertion_point(field_add:ProtoReward.FirstRechargeResp.heros)
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
FirstRechargeResp::heros() const {
  // @@protoc_insertion_point(field_list:ProtoReward.FirstRechargeResp.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
FirstRechargeResp::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:ProtoReward.FirstRechargeResp.heros)
  return &heros_;
}

// required uint32 first_recharge = 5;
inline bool FirstRechargeResp::has_first_recharge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FirstRechargeResp::set_has_first_recharge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FirstRechargeResp::clear_has_first_recharge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FirstRechargeResp::clear_first_recharge() {
  first_recharge_ = 0u;
  clear_has_first_recharge();
}
inline ::google::protobuf::uint32 FirstRechargeResp::first_recharge() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.first_recharge)
  return first_recharge_;
}
inline void FirstRechargeResp::set_first_recharge(::google::protobuf::uint32 value) {
  set_has_first_recharge();
  first_recharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.FirstRechargeResp.first_recharge)
}

// required uint32 auto_build_flag = 6;
inline bool FirstRechargeResp::has_auto_build_flag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FirstRechargeResp::set_has_auto_build_flag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FirstRechargeResp::clear_has_auto_build_flag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FirstRechargeResp::clear_auto_build_flag() {
  auto_build_flag_ = 0u;
  clear_has_auto_build_flag();
}
inline ::google::protobuf::uint32 FirstRechargeResp::auto_build_flag() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FirstRechargeResp.auto_build_flag)
  return auto_build_flag_;
}
inline void FirstRechargeResp::set_auto_build_flag(::google::protobuf::uint32 value) {
  set_has_auto_build_flag();
  auto_build_flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.FirstRechargeResp.auto_build_flag)
}

// -------------------------------------------------------------------

// IntegralTimeReq

// -------------------------------------------------------------------

// IntegralTimeResp

// required uint32 new_cnt = 1;
inline bool IntegralTimeResp::has_new_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntegralTimeResp::set_has_new_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntegralTimeResp::clear_has_new_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntegralTimeResp::clear_new_cnt() {
  new_cnt_ = 0u;
  clear_has_new_cnt();
}
inline ::google::protobuf::uint32 IntegralTimeResp::new_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoReward.IntegralTimeResp.new_cnt)
  return new_cnt_;
}
inline void IntegralTimeResp::set_new_cnt(::google::protobuf::uint32 value) {
  set_has_new_cnt();
  new_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.IntegralTimeResp.new_cnt)
}

// required .DataCommon.CommonBaseRewardCPP base = 2;
inline bool IntegralTimeResp::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntegralTimeResp::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntegralTimeResp::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntegralTimeResp::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& IntegralTimeResp::base() const {
  // @@protoc_insertion_point(field_get:ProtoReward.IntegralTimeResp.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* IntegralTimeResp::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.IntegralTimeResp.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* IntegralTimeResp::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void IntegralTimeResp::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.IntegralTimeResp.base)
}

// -------------------------------------------------------------------

// VIPReq

// -------------------------------------------------------------------

// VIPResp

// required .DataCommon.EquipmentAllCPP equips = 1;
inline bool VIPResp::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VIPResp::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VIPResp::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VIPResp::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& VIPResp::equips() const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* VIPResp::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.VIPResp.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* VIPResp::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void VIPResp::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.VIPResp.equips)
}

// repeated uint32 equips_id = 2;
inline int VIPResp::equips_id_size() const {
  return equips_id_.size();
}
inline void VIPResp::clear_equips_id() {
  equips_id_.Clear();
}
inline ::google::protobuf::uint32 VIPResp::equips_id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.equips_id)
  return equips_id_.Get(index);
}
inline void VIPResp::set_equips_id(int index, ::google::protobuf::uint32 value) {
  equips_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoReward.VIPResp.equips_id)
}
inline void VIPResp::add_equips_id(::google::protobuf::uint32 value) {
  equips_id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoReward.VIPResp.equips_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPResp::equips_id() const {
  // @@protoc_insertion_point(field_list:ProtoReward.VIPResp.equips_id)
  return equips_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPResp::mutable_equips_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoReward.VIPResp.equips_id)
  return &equips_id_;
}

// repeated uint32 equips_cnt = 3;
inline int VIPResp::equips_cnt_size() const {
  return equips_cnt_.size();
}
inline void VIPResp::clear_equips_cnt() {
  equips_cnt_.Clear();
}
inline ::google::protobuf::uint32 VIPResp::equips_cnt(int index) const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.equips_cnt)
  return equips_cnt_.Get(index);
}
inline void VIPResp::set_equips_cnt(int index, ::google::protobuf::uint32 value) {
  equips_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoReward.VIPResp.equips_cnt)
}
inline void VIPResp::add_equips_cnt(::google::protobuf::uint32 value) {
  equips_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoReward.VIPResp.equips_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPResp::equips_cnt() const {
  // @@protoc_insertion_point(field_list:ProtoReward.VIPResp.equips_cnt)
  return equips_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPResp::mutable_equips_cnt() {
  // @@protoc_insertion_point(field_mutable_list:ProtoReward.VIPResp.equips_cnt)
  return &equips_cnt_;
}

// required .DataCommon.CommonBaseRewardCPP base = 4;
inline bool VIPResp::has_base() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VIPResp::set_has_base() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VIPResp::clear_has_base() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VIPResp::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& VIPResp::base() const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* VIPResp::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.VIPResp.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* VIPResp::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void VIPResp::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.VIPResp.base)
}

// repeated .ProtoHero.HeroBaseInfoCPP heros = 5;
inline int VIPResp::heros_size() const {
  return heros_.size();
}
inline void VIPResp::clear_heros() {
  heros_.Clear();
}
inline const ::ProtoHero::HeroBaseInfoCPP& VIPResp::heros(int index) const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.heros)
  return heros_.Get(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* VIPResp::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoReward.VIPResp.heros)
  return heros_.Mutable(index);
}
inline ::ProtoHero::HeroBaseInfoCPP* VIPResp::add_heros() {
  // @@protoc_insertion_point(field_add:ProtoReward.VIPResp.heros)
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >&
VIPResp::heros() const {
  // @@protoc_insertion_point(field_list:ProtoReward.VIPResp.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoHero::HeroBaseInfoCPP >*
VIPResp::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:ProtoReward.VIPResp.heros)
  return &heros_;
}

// required uint32 vip_level = 6;
inline bool VIPResp::has_vip_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VIPResp::set_has_vip_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VIPResp::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VIPResp::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 VIPResp::vip_level() const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.vip_level)
  return vip_level_;
}
inline void VIPResp::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.VIPResp.vip_level)
}

// required uint32 vip_reward = 7;
inline bool VIPResp::has_vip_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VIPResp::set_has_vip_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VIPResp::clear_has_vip_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VIPResp::clear_vip_reward() {
  vip_reward_ = 0u;
  clear_has_vip_reward();
}
inline ::google::protobuf::uint32 VIPResp::vip_reward() const {
  // @@protoc_insertion_point(field_get:ProtoReward.VIPResp.vip_reward)
  return vip_reward_;
}
inline void VIPResp::set_vip_reward(::google::protobuf::uint32 value) {
  set_has_vip_reward();
  vip_reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.VIPResp.vip_reward)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoReward

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoReward_2eproto__INCLUDED
