// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFriend.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoFriend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoFriend {

namespace {

const ::google::protobuf::Descriptor* FriendCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* FriendCPPAll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendCPPAll_reflection_ = NULL;
const ::google::protobuf::Descriptor* FriendGiftCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendGiftCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddFriendReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddFriendReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddFriendResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddFriendResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelFriendReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelFriendReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelFriendResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelFriendResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenFriendWindowReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenFriendWindowReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenFriendWindowResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenFriendWindowResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReceiveGiftPushReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReceiveGiftPushReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReceivePrestigeRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReceivePrestigeRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReceivePrestigeRewardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReceivePrestigeRewardResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoFriend_2eproto() {
  protobuf_AddDesc_ProtoFriend_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoFriend.proto");
  GOOGLE_CHECK(file != NULL);
  FriendCPP_descriptor_ = file->message_type(0);
  static const int FriendCPP_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, friend_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, send_gift_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, isonline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, kindom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, level_),
  };
  FriendCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FriendCPP_descriptor_,
      FriendCPP::default_instance_,
      FriendCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FriendCPP));
  FriendCPPAll_descriptor_ = file->message_type(1);
  static const int FriendCPPAll_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPPAll, friends_),
  };
  FriendCPPAll_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FriendCPPAll_descriptor_,
      FriendCPPAll::default_instance_,
      FriendCPPAll_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPPAll, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendCPPAll, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FriendCPPAll));
  FriendGiftCPP_descriptor_ = file->message_type(2);
  static const int FriendGiftCPP_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, prestige_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, grades_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, receive_gift_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, receive_gift_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, send_gift_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, send_gift_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, log_data_),
  };
  FriendGiftCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FriendGiftCPP_descriptor_,
      FriendGiftCPP::default_instance_,
      FriendGiftCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendGiftCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FriendGiftCPP));
  AddFriendReq_descriptor_ = file->message_type(3);
  static const int AddFriendReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendReq, othuid_),
  };
  AddFriendReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddFriendReq_descriptor_,
      AddFriendReq::default_instance_,
      AddFriendReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddFriendReq));
  AddFriendResp_descriptor_ = file->message_type(4);
  static const int AddFriendResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendResp, yourfriend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendResp, friendgift_),
  };
  AddFriendResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddFriendResp_descriptor_,
      AddFriendResp::default_instance_,
      AddFriendResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddFriendResp));
  DelFriendReq_descriptor_ = file->message_type(5);
  static const int DelFriendReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendReq, othuid_),
  };
  DelFriendReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DelFriendReq_descriptor_,
      DelFriendReq::default_instance_,
      DelFriendReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DelFriendReq));
  DelFriendResp_descriptor_ = file->message_type(6);
  static const int DelFriendResp_offsets_[1] = {
  };
  DelFriendResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DelFriendResp_descriptor_,
      DelFriendResp::default_instance_,
      DelFriendResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DelFriendResp));
  OpenFriendWindowReq_descriptor_ = file->message_type(7);
  static const int OpenFriendWindowReq_offsets_[1] = {
  };
  OpenFriendWindowReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenFriendWindowReq_descriptor_,
      OpenFriendWindowReq::default_instance_,
      OpenFriendWindowReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenFriendWindowReq));
  OpenFriendWindowResp_descriptor_ = file->message_type(8);
  static const int OpenFriendWindowResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowResp, friendall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowResp, friendgift_),
  };
  OpenFriendWindowResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenFriendWindowResp_descriptor_,
      OpenFriendWindowResp::default_instance_,
      OpenFriendWindowResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenFriendWindowResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenFriendWindowResp));
  SendGiftReq_descriptor_ = file->message_type(9);
  static const int SendGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftReq, othuid_),
  };
  SendGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendGiftReq_descriptor_,
      SendGiftReq::default_instance_,
      SendGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendGiftReq));
  SendGiftResp_descriptor_ = file->message_type(10);
  static const int SendGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftResp, yourfriend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftResp, friendgift_),
  };
  SendGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendGiftResp_descriptor_,
      SendGiftResp::default_instance_,
      SendGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendGiftResp));
  ReceiveGiftPushReq_descriptor_ = file->message_type(11);
  static const int ReceiveGiftPushReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, recv_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, recv_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, prestige_),
  };
  ReceiveGiftPushReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReceiveGiftPushReq_descriptor_,
      ReceiveGiftPushReq::default_instance_,
      ReceiveGiftPushReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveGiftPushReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReceiveGiftPushReq));
  ReceivePrestigeRewardReq_descriptor_ = file->message_type(12);
  static const int ReceivePrestigeRewardReq_offsets_[1] = {
  };
  ReceivePrestigeRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReceivePrestigeRewardReq_descriptor_,
      ReceivePrestigeRewardReq::default_instance_,
      ReceivePrestigeRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReceivePrestigeRewardReq));
  ReceivePrestigeRewardResp_descriptor_ = file->message_type(13);
  static const int ReceivePrestigeRewardResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardResp, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardResp, friendgift_),
  };
  ReceivePrestigeRewardResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReceivePrestigeRewardResp_descriptor_,
      ReceivePrestigeRewardResp::default_instance_,
      ReceivePrestigeRewardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivePrestigeRewardResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReceivePrestigeRewardResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoFriend_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FriendCPP_descriptor_, &FriendCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FriendCPPAll_descriptor_, &FriendCPPAll::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FriendGiftCPP_descriptor_, &FriendGiftCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddFriendReq_descriptor_, &AddFriendReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddFriendResp_descriptor_, &AddFriendResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DelFriendReq_descriptor_, &DelFriendReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DelFriendResp_descriptor_, &DelFriendResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenFriendWindowReq_descriptor_, &OpenFriendWindowReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenFriendWindowResp_descriptor_, &OpenFriendWindowResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendGiftReq_descriptor_, &SendGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendGiftResp_descriptor_, &SendGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReceiveGiftPushReq_descriptor_, &ReceiveGiftPushReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReceivePrestigeRewardReq_descriptor_, &ReceivePrestigeRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReceivePrestigeRewardResp_descriptor_, &ReceivePrestigeRewardResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoFriend_2eproto() {
  delete FriendCPP::default_instance_;
  delete FriendCPP_reflection_;
  delete FriendCPPAll::default_instance_;
  delete FriendCPPAll_reflection_;
  delete FriendGiftCPP::default_instance_;
  delete FriendGiftCPP_reflection_;
  delete AddFriendReq::default_instance_;
  delete AddFriendReq_reflection_;
  delete AddFriendResp::default_instance_;
  delete AddFriendResp_reflection_;
  delete DelFriendReq::default_instance_;
  delete DelFriendReq_reflection_;
  delete DelFriendResp::default_instance_;
  delete DelFriendResp_reflection_;
  delete OpenFriendWindowReq::default_instance_;
  delete OpenFriendWindowReq_reflection_;
  delete OpenFriendWindowResp::default_instance_;
  delete OpenFriendWindowResp_reflection_;
  delete SendGiftReq::default_instance_;
  delete SendGiftReq_reflection_;
  delete SendGiftResp::default_instance_;
  delete SendGiftResp_reflection_;
  delete ReceiveGiftPushReq::default_instance_;
  delete ReceiveGiftPushReq_reflection_;
  delete ReceivePrestigeRewardReq::default_instance_;
  delete ReceivePrestigeRewardReq_reflection_;
  delete ReceivePrestigeRewardResp::default_instance_;
  delete ReceivePrestigeRewardResp_reflection_;
}

void protobuf_AddDesc_ProtoFriend_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ProtoFriend.proto\022\013ProtoFriend\032\020DataCo"
    "mmon.proto\"t\n\tFriendCPP\022\022\n\nfriend_uid\030\001 "
    "\002(\r\022\024\n\014send_gift_ts\030\002 \002(\r\022\020\n\010isonline\030\003 "
    "\002(\010\022\014\n\004name\030\004 \002(\014\022\016\n\006kindom\030\005 \002(\r\022\r\n\005lev"
    "el\030\006 \002(\r\"7\n\014FriendCPPAll\022\'\n\007friends\030\001 \003("
    "\0132\026.ProtoFriend.FriendCPP\"\247\001\n\rFriendGift"
    "CPP\022\020\n\010prestige\030\001 \002(\r\022\016\n\006grades\030\002 \002(\r\022\032\n"
    "\022receive_gift_times\030\003 \002(\r\022\027\n\017receive_gif"
    "t_ts\030\004 \002(\r\022\027\n\017send_gift_times\030\005 \002(\r\022\024\n\014s"
    "end_gift_ts\030\006 \002(\r\022\020\n\010log_data\030\007 \002(\014\"\036\n\014A"
    "ddFriendReq\022\016\n\006othuid\030\001 \002(\r\"k\n\rAddFriend"
    "Resp\022*\n\nyourfriend\030\001 \002(\0132\026.ProtoFriend.F"
    "riendCPP\022.\n\nfriendgift\030\002 \002(\0132\032.ProtoFrie"
    "nd.FriendGiftCPP\"\036\n\014DelFriendReq\022\016\n\006othu"
    "id\030\001 \002(\r\"\017\n\rDelFriendResp\"\025\n\023OpenFriendW"
    "indowReq\"t\n\024OpenFriendWindowResp\022,\n\tfrie"
    "ndall\030\001 \002(\0132\031.ProtoFriend.FriendCPPAll\022."
    "\n\nfriendgift\030\002 \002(\0132\032.ProtoFriend.FriendG"
    "iftCPP\"\035\n\013SendGiftReq\022\016\n\006othuid\030\001 \002(\r\"j\n"
    "\014SendGiftResp\022*\n\nyourfriend\030\001 \002(\0132\026.Prot"
    "oFriend.FriendCPP\022.\n\nfriendgift\030\002 \002(\0132\032."
    "ProtoFriend.FriendGiftCPP\"\217\001\n\022ReceiveGif"
    "tPushReq\022\022\n\nrecv_times\030\001 \002(\r\022\017\n\007recv_ts\030"
    "\002 \002(\r\022\'\n\004coin\030\003 \002(\0132\031.DataCommon.RewardI"
    "temCPP\022+\n\010prestige\030\004 \002(\0132\031.DataCommon.Re"
    "wardItemCPP\"\032\n\030ReceivePrestigeRewardReq\""
    "Y\n\031ReceivePrestigeRewardResp\022\014\n\004cash\030\001 \002"
    "(\r\022.\n\nfriendgift\030\002 \002(\0132\032.ProtoFriend.Fri"
    "endGiftCPP", 1130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoFriend.proto", &protobuf_RegisterTypes);
  FriendCPP::default_instance_ = new FriendCPP();
  FriendCPPAll::default_instance_ = new FriendCPPAll();
  FriendGiftCPP::default_instance_ = new FriendGiftCPP();
  AddFriendReq::default_instance_ = new AddFriendReq();
  AddFriendResp::default_instance_ = new AddFriendResp();
  DelFriendReq::default_instance_ = new DelFriendReq();
  DelFriendResp::default_instance_ = new DelFriendResp();
  OpenFriendWindowReq::default_instance_ = new OpenFriendWindowReq();
  OpenFriendWindowResp::default_instance_ = new OpenFriendWindowResp();
  SendGiftReq::default_instance_ = new SendGiftReq();
  SendGiftResp::default_instance_ = new SendGiftResp();
  ReceiveGiftPushReq::default_instance_ = new ReceiveGiftPushReq();
  ReceivePrestigeRewardReq::default_instance_ = new ReceivePrestigeRewardReq();
  ReceivePrestigeRewardResp::default_instance_ = new ReceivePrestigeRewardResp();
  FriendCPP::default_instance_->InitAsDefaultInstance();
  FriendCPPAll::default_instance_->InitAsDefaultInstance();
  FriendGiftCPP::default_instance_->InitAsDefaultInstance();
  AddFriendReq::default_instance_->InitAsDefaultInstance();
  AddFriendResp::default_instance_->InitAsDefaultInstance();
  DelFriendReq::default_instance_->InitAsDefaultInstance();
  DelFriendResp::default_instance_->InitAsDefaultInstance();
  OpenFriendWindowReq::default_instance_->InitAsDefaultInstance();
  OpenFriendWindowResp::default_instance_->InitAsDefaultInstance();
  SendGiftReq::default_instance_->InitAsDefaultInstance();
  SendGiftResp::default_instance_->InitAsDefaultInstance();
  ReceiveGiftPushReq::default_instance_->InitAsDefaultInstance();
  ReceivePrestigeRewardReq::default_instance_->InitAsDefaultInstance();
  ReceivePrestigeRewardResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoFriend_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoFriend_2eproto {
  StaticDescriptorInitializer_ProtoFriend_2eproto() {
    protobuf_AddDesc_ProtoFriend_2eproto();
  }
} static_descriptor_initializer_ProtoFriend_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int FriendCPP::kFriendUidFieldNumber;
const int FriendCPP::kSendGiftTsFieldNumber;
const int FriendCPP::kIsonlineFieldNumber;
const int FriendCPP::kNameFieldNumber;
const int FriendCPP::kKindomFieldNumber;
const int FriendCPP::kLevelFieldNumber;
#endif  // !_MSC_VER

FriendCPP::FriendCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.FriendCPP)
}

void FriendCPP::InitAsDefaultInstance() {
}

FriendCPP::FriendCPP(const FriendCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.FriendCPP)
}

void FriendCPP::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  friend_uid_ = 0u;
  send_gift_ts_ = 0u;
  isonline_ = false;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kindom_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FriendCPP::~FriendCPP() {
  // @@protoc_insertion_point(destructor:ProtoFriend.FriendCPP)
  SharedDtor();
}

void FriendCPP::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void FriendCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendCPP_descriptor_;
}

const FriendCPP& FriendCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

FriendCPP* FriendCPP::default_instance_ = NULL;

FriendCPP* FriendCPP::New() const {
  return new FriendCPP;
}

void FriendCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FriendCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(friend_uid_, send_gift_ts_);
    ZR_(isonline_, level_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FriendCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.FriendCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 friend_uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
          set_has_friend_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_send_gift_ts;
        break;
      }

      // required uint32 send_gift_ts = 2;
      case 2: {
        if (tag == 16) {
         parse_send_gift_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_gift_ts_)));
          set_has_send_gift_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isonline;
        break;
      }

      // required bool isonline = 3;
      case 3: {
        if (tag == 24) {
         parse_isonline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isonline_)));
          set_has_isonline();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required bytes name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_kindom;
        break;
      }

      // required uint32 kindom = 5;
      case 5: {
        if (tag == 40) {
         parse_kindom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kindom_)));
          set_has_kindom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }

      // required uint32 level = 6;
      case 6: {
        if (tag == 48) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.FriendCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.FriendCPP)
  return false;
#undef DO_
}

void FriendCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.FriendCPP)
  // required uint32 friend_uid = 1;
  if (has_friend_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->friend_uid(), output);
  }

  // required uint32 send_gift_ts = 2;
  if (has_send_gift_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->send_gift_ts(), output);
  }

  // required bool isonline = 3;
  if (has_isonline()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isonline(), output);
  }

  // required bytes name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->name(), output);
  }

  // required uint32 kindom = 5;
  if (has_kindom()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->kindom(), output);
  }

  // required uint32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.FriendCPP)
}

::google::protobuf::uint8* FriendCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.FriendCPP)
  // required uint32 friend_uid = 1;
  if (has_friend_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->friend_uid(), target);
  }

  // required uint32 send_gift_ts = 2;
  if (has_send_gift_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->send_gift_ts(), target);
  }

  // required bool isonline = 3;
  if (has_isonline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isonline(), target);
  }

  // required bytes name = 4;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->name(), target);
  }

  // required uint32 kindom = 5;
  if (has_kindom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->kindom(), target);
  }

  // required uint32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.FriendCPP)
  return target;
}

int FriendCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 friend_uid = 1;
    if (has_friend_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friend_uid());
    }

    // required uint32 send_gift_ts = 2;
    if (has_send_gift_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->send_gift_ts());
    }

    // required bool isonline = 3;
    if (has_isonline()) {
      total_size += 1 + 1;
    }

    // required bytes name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // required uint32 kindom = 5;
    if (has_kindom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kindom());
    }

    // required uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FriendCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FriendCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FriendCPP::MergeFrom(const FriendCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_uid()) {
      set_friend_uid(from.friend_uid());
    }
    if (from.has_send_gift_ts()) {
      set_send_gift_ts(from.send_gift_ts());
    }
    if (from.has_isonline()) {
      set_isonline(from.isonline());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_kindom()) {
      set_kindom(from.kindom());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FriendCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendCPP::CopyFrom(const FriendCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void FriendCPP::Swap(FriendCPP* other) {
  if (other != this) {
    std::swap(friend_uid_, other->friend_uid_);
    std::swap(send_gift_ts_, other->send_gift_ts_);
    std::swap(isonline_, other->isonline_);
    std::swap(name_, other->name_);
    std::swap(kindom_, other->kindom_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FriendCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendCPP_descriptor_;
  metadata.reflection = FriendCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FriendCPPAll::kFriendsFieldNumber;
#endif  // !_MSC_VER

FriendCPPAll::FriendCPPAll()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.FriendCPPAll)
}

void FriendCPPAll::InitAsDefaultInstance() {
}

FriendCPPAll::FriendCPPAll(const FriendCPPAll& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.FriendCPPAll)
}

void FriendCPPAll::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FriendCPPAll::~FriendCPPAll() {
  // @@protoc_insertion_point(destructor:ProtoFriend.FriendCPPAll)
  SharedDtor();
}

void FriendCPPAll::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FriendCPPAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendCPPAll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendCPPAll_descriptor_;
}

const FriendCPPAll& FriendCPPAll::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

FriendCPPAll* FriendCPPAll::default_instance_ = NULL;

FriendCPPAll* FriendCPPAll::New() const {
  return new FriendCPPAll;
}

void FriendCPPAll::Clear() {
  friends_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FriendCPPAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.FriendCPPAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriend.FriendCPP friends = 1;
      case 1: {
        if (tag == 10) {
         parse_friends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_friends;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.FriendCPPAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.FriendCPPAll)
  return false;
#undef DO_
}

void FriendCPPAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.FriendCPPAll)
  // repeated .ProtoFriend.FriendCPP friends = 1;
  for (int i = 0; i < this->friends_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.FriendCPPAll)
}

::google::protobuf::uint8* FriendCPPAll::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.FriendCPPAll)
  // repeated .ProtoFriend.FriendCPP friends = 1;
  for (int i = 0; i < this->friends_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friends(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.FriendCPPAll)
  return target;
}

int FriendCPPAll::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoFriend.FriendCPP friends = 1;
  total_size += 1 * this->friends_size();
  for (int i = 0; i < this->friends_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friends(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendCPPAll::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FriendCPPAll* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FriendCPPAll*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FriendCPPAll::MergeFrom(const FriendCPPAll& from) {
  GOOGLE_CHECK_NE(&from, this);
  friends_.MergeFrom(from.friends_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FriendCPPAll::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendCPPAll::CopyFrom(const FriendCPPAll& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendCPPAll::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->friends())) return false;
  return true;
}

void FriendCPPAll::Swap(FriendCPPAll* other) {
  if (other != this) {
    friends_.Swap(&other->friends_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FriendCPPAll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendCPPAll_descriptor_;
  metadata.reflection = FriendCPPAll_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FriendGiftCPP::kPrestigeFieldNumber;
const int FriendGiftCPP::kGradesFieldNumber;
const int FriendGiftCPP::kReceiveGiftTimesFieldNumber;
const int FriendGiftCPP::kReceiveGiftTsFieldNumber;
const int FriendGiftCPP::kSendGiftTimesFieldNumber;
const int FriendGiftCPP::kSendGiftTsFieldNumber;
const int FriendGiftCPP::kLogDataFieldNumber;
#endif  // !_MSC_VER

FriendGiftCPP::FriendGiftCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.FriendGiftCPP)
}

void FriendGiftCPP::InitAsDefaultInstance() {
}

FriendGiftCPP::FriendGiftCPP(const FriendGiftCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.FriendGiftCPP)
}

void FriendGiftCPP::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  prestige_ = 0u;
  grades_ = 0u;
  receive_gift_times_ = 0u;
  receive_gift_ts_ = 0u;
  send_gift_times_ = 0u;
  send_gift_ts_ = 0u;
  log_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FriendGiftCPP::~FriendGiftCPP() {
  // @@protoc_insertion_point(destructor:ProtoFriend.FriendGiftCPP)
  SharedDtor();
}

void FriendGiftCPP::SharedDtor() {
  if (log_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_data_;
  }
  if (this != default_instance_) {
  }
}

void FriendGiftCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendGiftCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendGiftCPP_descriptor_;
}

const FriendGiftCPP& FriendGiftCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

FriendGiftCPP* FriendGiftCPP::default_instance_ = NULL;

FriendGiftCPP* FriendGiftCPP::New() const {
  return new FriendGiftCPP;
}

void FriendGiftCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FriendGiftCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(prestige_, send_gift_ts_);
    if (has_log_data()) {
      if (log_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        log_data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FriendGiftCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.FriendGiftCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 prestige = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prestige_)));
          set_has_prestige();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_grades;
        break;
      }

      // required uint32 grades = 2;
      case 2: {
        if (tag == 16) {
         parse_grades:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grades_)));
          set_has_grades();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_receive_gift_times;
        break;
      }

      // required uint32 receive_gift_times = 3;
      case 3: {
        if (tag == 24) {
         parse_receive_gift_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receive_gift_times_)));
          set_has_receive_gift_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_receive_gift_ts;
        break;
      }

      // required uint32 receive_gift_ts = 4;
      case 4: {
        if (tag == 32) {
         parse_receive_gift_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receive_gift_ts_)));
          set_has_receive_gift_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_send_gift_times;
        break;
      }

      // required uint32 send_gift_times = 5;
      case 5: {
        if (tag == 40) {
         parse_send_gift_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_gift_times_)));
          set_has_send_gift_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_send_gift_ts;
        break;
      }

      // required uint32 send_gift_ts = 6;
      case 6: {
        if (tag == 48) {
         parse_send_gift_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_gift_ts_)));
          set_has_send_gift_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_log_data;
        break;
      }

      // required bytes log_data = 7;
      case 7: {
        if (tag == 58) {
         parse_log_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.FriendGiftCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.FriendGiftCPP)
  return false;
#undef DO_
}

void FriendGiftCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.FriendGiftCPP)
  // required uint32 prestige = 1;
  if (has_prestige()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prestige(), output);
  }

  // required uint32 grades = 2;
  if (has_grades()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grades(), output);
  }

  // required uint32 receive_gift_times = 3;
  if (has_receive_gift_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->receive_gift_times(), output);
  }

  // required uint32 receive_gift_ts = 4;
  if (has_receive_gift_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->receive_gift_ts(), output);
  }

  // required uint32 send_gift_times = 5;
  if (has_send_gift_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->send_gift_times(), output);
  }

  // required uint32 send_gift_ts = 6;
  if (has_send_gift_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->send_gift_ts(), output);
  }

  // required bytes log_data = 7;
  if (has_log_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->log_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.FriendGiftCPP)
}

::google::protobuf::uint8* FriendGiftCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.FriendGiftCPP)
  // required uint32 prestige = 1;
  if (has_prestige()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prestige(), target);
  }

  // required uint32 grades = 2;
  if (has_grades()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grades(), target);
  }

  // required uint32 receive_gift_times = 3;
  if (has_receive_gift_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->receive_gift_times(), target);
  }

  // required uint32 receive_gift_ts = 4;
  if (has_receive_gift_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->receive_gift_ts(), target);
  }

  // required uint32 send_gift_times = 5;
  if (has_send_gift_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->send_gift_times(), target);
  }

  // required uint32 send_gift_ts = 6;
  if (has_send_gift_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->send_gift_ts(), target);
  }

  // required bytes log_data = 7;
  if (has_log_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->log_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.FriendGiftCPP)
  return target;
}

int FriendGiftCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 prestige = 1;
    if (has_prestige()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prestige());
    }

    // required uint32 grades = 2;
    if (has_grades()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grades());
    }

    // required uint32 receive_gift_times = 3;
    if (has_receive_gift_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receive_gift_times());
    }

    // required uint32 receive_gift_ts = 4;
    if (has_receive_gift_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receive_gift_ts());
    }

    // required uint32 send_gift_times = 5;
    if (has_send_gift_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->send_gift_times());
    }

    // required uint32 send_gift_ts = 6;
    if (has_send_gift_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->send_gift_ts());
    }

    // required bytes log_data = 7;
    if (has_log_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->log_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendGiftCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FriendGiftCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FriendGiftCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FriendGiftCPP::MergeFrom(const FriendGiftCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prestige()) {
      set_prestige(from.prestige());
    }
    if (from.has_grades()) {
      set_grades(from.grades());
    }
    if (from.has_receive_gift_times()) {
      set_receive_gift_times(from.receive_gift_times());
    }
    if (from.has_receive_gift_ts()) {
      set_receive_gift_ts(from.receive_gift_ts());
    }
    if (from.has_send_gift_times()) {
      set_send_gift_times(from.send_gift_times());
    }
    if (from.has_send_gift_ts()) {
      set_send_gift_ts(from.send_gift_ts());
    }
    if (from.has_log_data()) {
      set_log_data(from.log_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FriendGiftCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendGiftCPP::CopyFrom(const FriendGiftCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendGiftCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void FriendGiftCPP::Swap(FriendGiftCPP* other) {
  if (other != this) {
    std::swap(prestige_, other->prestige_);
    std::swap(grades_, other->grades_);
    std::swap(receive_gift_times_, other->receive_gift_times_);
    std::swap(receive_gift_ts_, other->receive_gift_ts_);
    std::swap(send_gift_times_, other->send_gift_times_);
    std::swap(send_gift_ts_, other->send_gift_ts_);
    std::swap(log_data_, other->log_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FriendGiftCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendGiftCPP_descriptor_;
  metadata.reflection = FriendGiftCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddFriendReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

AddFriendReq::AddFriendReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.AddFriendReq)
}

void AddFriendReq::InitAsDefaultInstance() {
}

AddFriendReq::AddFriendReq(const AddFriendReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.AddFriendReq)
}

void AddFriendReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddFriendReq::~AddFriendReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.AddFriendReq)
  SharedDtor();
}

void AddFriendReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddFriendReq_descriptor_;
}

const AddFriendReq& AddFriendReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

AddFriendReq* AddFriendReq::default_instance_ = NULL;

AddFriendReq* AddFriendReq::New() const {
  return new AddFriendReq;
}

void AddFriendReq::Clear() {
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.AddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.AddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.AddFriendReq)
  return false;
#undef DO_
}

void AddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.AddFriendReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.AddFriendReq)
}

::google::protobuf::uint8* AddFriendReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.AddFriendReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.AddFriendReq)
  return target;
}

int AddFriendReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddFriendReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddFriendReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddFriendReq::MergeFrom(const AddFriendReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendReq::CopyFrom(const AddFriendReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AddFriendReq::Swap(AddFriendReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddFriendReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddFriendReq_descriptor_;
  metadata.reflection = AddFriendReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddFriendResp::kYourfriendFieldNumber;
const int AddFriendResp::kFriendgiftFieldNumber;
#endif  // !_MSC_VER

AddFriendResp::AddFriendResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.AddFriendResp)
}

void AddFriendResp::InitAsDefaultInstance() {
  yourfriend_ = const_cast< ::ProtoFriend::FriendCPP*>(&::ProtoFriend::FriendCPP::default_instance());
  friendgift_ = const_cast< ::ProtoFriend::FriendGiftCPP*>(&::ProtoFriend::FriendGiftCPP::default_instance());
}

AddFriendResp::AddFriendResp(const AddFriendResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.AddFriendResp)
}

void AddFriendResp::SharedCtor() {
  _cached_size_ = 0;
  yourfriend_ = NULL;
  friendgift_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddFriendResp::~AddFriendResp() {
  // @@protoc_insertion_point(destructor:ProtoFriend.AddFriendResp)
  SharedDtor();
}

void AddFriendResp::SharedDtor() {
  if (this != default_instance_) {
    delete yourfriend_;
    delete friendgift_;
  }
}

void AddFriendResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddFriendResp_descriptor_;
}

const AddFriendResp& AddFriendResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

AddFriendResp* AddFriendResp::default_instance_ = NULL;

AddFriendResp* AddFriendResp::New() const {
  return new AddFriendResp;
}

void AddFriendResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_yourfriend()) {
      if (yourfriend_ != NULL) yourfriend_->::ProtoFriend::FriendCPP::Clear();
    }
    if (has_friendgift()) {
      if (friendgift_ != NULL) friendgift_->::ProtoFriend::FriendGiftCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddFriendResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.AddFriendResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoFriend.FriendCPP yourfriend = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yourfriend()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friendgift;
        break;
      }

      // required .ProtoFriend.FriendGiftCPP friendgift = 2;
      case 2: {
        if (tag == 18) {
         parse_friendgift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendgift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.AddFriendResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.AddFriendResp)
  return false;
#undef DO_
}

void AddFriendResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.AddFriendResp)
  // required .ProtoFriend.FriendCPP yourfriend = 1;
  if (has_yourfriend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->yourfriend(), output);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friendgift(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.AddFriendResp)
}

::google::protobuf::uint8* AddFriendResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.AddFriendResp)
  // required .ProtoFriend.FriendCPP yourfriend = 1;
  if (has_yourfriend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->yourfriend(), target);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friendgift(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.AddFriendResp)
  return target;
}

int AddFriendResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoFriend.FriendCPP yourfriend = 1;
    if (has_yourfriend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yourfriend());
    }

    // required .ProtoFriend.FriendGiftCPP friendgift = 2;
    if (has_friendgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendgift());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddFriendResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddFriendResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddFriendResp::MergeFrom(const AddFriendResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yourfriend()) {
      mutable_yourfriend()->::ProtoFriend::FriendCPP::MergeFrom(from.yourfriend());
    }
    if (from.has_friendgift()) {
      mutable_friendgift()->::ProtoFriend::FriendGiftCPP::MergeFrom(from.friendgift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddFriendResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendResp::CopyFrom(const AddFriendResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_yourfriend()) {
    if (!this->yourfriend().IsInitialized()) return false;
  }
  if (has_friendgift()) {
    if (!this->friendgift().IsInitialized()) return false;
  }
  return true;
}

void AddFriendResp::Swap(AddFriendResp* other) {
  if (other != this) {
    std::swap(yourfriend_, other->yourfriend_);
    std::swap(friendgift_, other->friendgift_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddFriendResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddFriendResp_descriptor_;
  metadata.reflection = AddFriendResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DelFriendReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

DelFriendReq::DelFriendReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.DelFriendReq)
}

void DelFriendReq::InitAsDefaultInstance() {
}

DelFriendReq::DelFriendReq(const DelFriendReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.DelFriendReq)
}

void DelFriendReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelFriendReq::~DelFriendReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.DelFriendReq)
  SharedDtor();
}

void DelFriendReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DelFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelFriendReq_descriptor_;
}

const DelFriendReq& DelFriendReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

DelFriendReq* DelFriendReq::default_instance_ = NULL;

DelFriendReq* DelFriendReq::New() const {
  return new DelFriendReq;
}

void DelFriendReq::Clear() {
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DelFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.DelFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.DelFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.DelFriendReq)
  return false;
#undef DO_
}

void DelFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.DelFriendReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.DelFriendReq)
}

::google::protobuf::uint8* DelFriendReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.DelFriendReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.DelFriendReq)
  return target;
}

int DelFriendReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DelFriendReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DelFriendReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelFriendReq::MergeFrom(const DelFriendReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DelFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendReq::CopyFrom(const DelFriendReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DelFriendReq::Swap(DelFriendReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DelFriendReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelFriendReq_descriptor_;
  metadata.reflection = DelFriendReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DelFriendResp::DelFriendResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.DelFriendResp)
}

void DelFriendResp::InitAsDefaultInstance() {
}

DelFriendResp::DelFriendResp(const DelFriendResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.DelFriendResp)
}

void DelFriendResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelFriendResp::~DelFriendResp() {
  // @@protoc_insertion_point(destructor:ProtoFriend.DelFriendResp)
  SharedDtor();
}

void DelFriendResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DelFriendResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelFriendResp_descriptor_;
}

const DelFriendResp& DelFriendResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

DelFriendResp* DelFriendResp::default_instance_ = NULL;

DelFriendResp* DelFriendResp::New() const {
  return new DelFriendResp;
}

void DelFriendResp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DelFriendResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.DelFriendResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.DelFriendResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.DelFriendResp)
  return false;
#undef DO_
}

void DelFriendResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.DelFriendResp)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.DelFriendResp)
}

::google::protobuf::uint8* DelFriendResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.DelFriendResp)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.DelFriendResp)
  return target;
}

int DelFriendResp::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DelFriendResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DelFriendResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelFriendResp::MergeFrom(const DelFriendResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DelFriendResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendResp::CopyFrom(const DelFriendResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendResp::IsInitialized() const {

  return true;
}

void DelFriendResp::Swap(DelFriendResp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DelFriendResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelFriendResp_descriptor_;
  metadata.reflection = DelFriendResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

OpenFriendWindowReq::OpenFriendWindowReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.OpenFriendWindowReq)
}

void OpenFriendWindowReq::InitAsDefaultInstance() {
}

OpenFriendWindowReq::OpenFriendWindowReq(const OpenFriendWindowReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.OpenFriendWindowReq)
}

void OpenFriendWindowReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenFriendWindowReq::~OpenFriendWindowReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.OpenFriendWindowReq)
  SharedDtor();
}

void OpenFriendWindowReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenFriendWindowReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenFriendWindowReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenFriendWindowReq_descriptor_;
}

const OpenFriendWindowReq& OpenFriendWindowReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

OpenFriendWindowReq* OpenFriendWindowReq::default_instance_ = NULL;

OpenFriendWindowReq* OpenFriendWindowReq::New() const {
  return new OpenFriendWindowReq;
}

void OpenFriendWindowReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenFriendWindowReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.OpenFriendWindowReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.OpenFriendWindowReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.OpenFriendWindowReq)
  return false;
#undef DO_
}

void OpenFriendWindowReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.OpenFriendWindowReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.OpenFriendWindowReq)
}

::google::protobuf::uint8* OpenFriendWindowReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.OpenFriendWindowReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.OpenFriendWindowReq)
  return target;
}

int OpenFriendWindowReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenFriendWindowReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenFriendWindowReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenFriendWindowReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenFriendWindowReq::MergeFrom(const OpenFriendWindowReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenFriendWindowReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenFriendWindowReq::CopyFrom(const OpenFriendWindowReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenFriendWindowReq::IsInitialized() const {

  return true;
}

void OpenFriendWindowReq::Swap(OpenFriendWindowReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenFriendWindowReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenFriendWindowReq_descriptor_;
  metadata.reflection = OpenFriendWindowReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpenFriendWindowResp::kFriendallFieldNumber;
const int OpenFriendWindowResp::kFriendgiftFieldNumber;
#endif  // !_MSC_VER

OpenFriendWindowResp::OpenFriendWindowResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.OpenFriendWindowResp)
}

void OpenFriendWindowResp::InitAsDefaultInstance() {
  friendall_ = const_cast< ::ProtoFriend::FriendCPPAll*>(&::ProtoFriend::FriendCPPAll::default_instance());
  friendgift_ = const_cast< ::ProtoFriend::FriendGiftCPP*>(&::ProtoFriend::FriendGiftCPP::default_instance());
}

OpenFriendWindowResp::OpenFriendWindowResp(const OpenFriendWindowResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.OpenFriendWindowResp)
}

void OpenFriendWindowResp::SharedCtor() {
  _cached_size_ = 0;
  friendall_ = NULL;
  friendgift_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenFriendWindowResp::~OpenFriendWindowResp() {
  // @@protoc_insertion_point(destructor:ProtoFriend.OpenFriendWindowResp)
  SharedDtor();
}

void OpenFriendWindowResp::SharedDtor() {
  if (this != default_instance_) {
    delete friendall_;
    delete friendgift_;
  }
}

void OpenFriendWindowResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenFriendWindowResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenFriendWindowResp_descriptor_;
}

const OpenFriendWindowResp& OpenFriendWindowResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

OpenFriendWindowResp* OpenFriendWindowResp::default_instance_ = NULL;

OpenFriendWindowResp* OpenFriendWindowResp::New() const {
  return new OpenFriendWindowResp;
}

void OpenFriendWindowResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_friendall()) {
      if (friendall_ != NULL) friendall_->::ProtoFriend::FriendCPPAll::Clear();
    }
    if (has_friendgift()) {
      if (friendgift_ != NULL) friendgift_->::ProtoFriend::FriendGiftCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenFriendWindowResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.OpenFriendWindowResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoFriend.FriendCPPAll friendall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friendgift;
        break;
      }

      // required .ProtoFriend.FriendGiftCPP friendgift = 2;
      case 2: {
        if (tag == 18) {
         parse_friendgift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendgift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.OpenFriendWindowResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.OpenFriendWindowResp)
  return false;
#undef DO_
}

void OpenFriendWindowResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.OpenFriendWindowResp)
  // required .ProtoFriend.FriendCPPAll friendall = 1;
  if (has_friendall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendall(), output);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friendgift(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.OpenFriendWindowResp)
}

::google::protobuf::uint8* OpenFriendWindowResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.OpenFriendWindowResp)
  // required .ProtoFriend.FriendCPPAll friendall = 1;
  if (has_friendall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friendall(), target);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friendgift(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.OpenFriendWindowResp)
  return target;
}

int OpenFriendWindowResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoFriend.FriendCPPAll friendall = 1;
    if (has_friendall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendall());
    }

    // required .ProtoFriend.FriendGiftCPP friendgift = 2;
    if (has_friendgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendgift());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenFriendWindowResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenFriendWindowResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenFriendWindowResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenFriendWindowResp::MergeFrom(const OpenFriendWindowResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friendall()) {
      mutable_friendall()->::ProtoFriend::FriendCPPAll::MergeFrom(from.friendall());
    }
    if (from.has_friendgift()) {
      mutable_friendgift()->::ProtoFriend::FriendGiftCPP::MergeFrom(from.friendgift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenFriendWindowResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenFriendWindowResp::CopyFrom(const OpenFriendWindowResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenFriendWindowResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_friendall()) {
    if (!this->friendall().IsInitialized()) return false;
  }
  if (has_friendgift()) {
    if (!this->friendgift().IsInitialized()) return false;
  }
  return true;
}

void OpenFriendWindowResp::Swap(OpenFriendWindowResp* other) {
  if (other != this) {
    std::swap(friendall_, other->friendall_);
    std::swap(friendgift_, other->friendgift_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenFriendWindowResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenFriendWindowResp_descriptor_;
  metadata.reflection = OpenFriendWindowResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SendGiftReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

SendGiftReq::SendGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.SendGiftReq)
}

void SendGiftReq::InitAsDefaultInstance() {
}

SendGiftReq::SendGiftReq(const SendGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.SendGiftReq)
}

void SendGiftReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendGiftReq::~SendGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.SendGiftReq)
  SharedDtor();
}

void SendGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SendGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendGiftReq_descriptor_;
}

const SendGiftReq& SendGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

SendGiftReq* SendGiftReq::default_instance_ = NULL;

SendGiftReq* SendGiftReq::New() const {
  return new SendGiftReq;
}

void SendGiftReq::Clear() {
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SendGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.SendGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.SendGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.SendGiftReq)
  return false;
#undef DO_
}

void SendGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.SendGiftReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.SendGiftReq)
}

::google::protobuf::uint8* SendGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.SendGiftReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.SendGiftReq)
  return target;
}

int SendGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SendGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SendGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SendGiftReq::MergeFrom(const SendGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SendGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendGiftReq::CopyFrom(const SendGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SendGiftReq::Swap(SendGiftReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SendGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendGiftReq_descriptor_;
  metadata.reflection = SendGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SendGiftResp::kYourfriendFieldNumber;
const int SendGiftResp::kFriendgiftFieldNumber;
#endif  // !_MSC_VER

SendGiftResp::SendGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.SendGiftResp)
}

void SendGiftResp::InitAsDefaultInstance() {
  yourfriend_ = const_cast< ::ProtoFriend::FriendCPP*>(&::ProtoFriend::FriendCPP::default_instance());
  friendgift_ = const_cast< ::ProtoFriend::FriendGiftCPP*>(&::ProtoFriend::FriendGiftCPP::default_instance());
}

SendGiftResp::SendGiftResp(const SendGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.SendGiftResp)
}

void SendGiftResp::SharedCtor() {
  _cached_size_ = 0;
  yourfriend_ = NULL;
  friendgift_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendGiftResp::~SendGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoFriend.SendGiftResp)
  SharedDtor();
}

void SendGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete yourfriend_;
    delete friendgift_;
  }
}

void SendGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendGiftResp_descriptor_;
}

const SendGiftResp& SendGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

SendGiftResp* SendGiftResp::default_instance_ = NULL;

SendGiftResp* SendGiftResp::New() const {
  return new SendGiftResp;
}

void SendGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_yourfriend()) {
      if (yourfriend_ != NULL) yourfriend_->::ProtoFriend::FriendCPP::Clear();
    }
    if (has_friendgift()) {
      if (friendgift_ != NULL) friendgift_->::ProtoFriend::FriendGiftCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SendGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.SendGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoFriend.FriendCPP yourfriend = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yourfriend()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friendgift;
        break;
      }

      // required .ProtoFriend.FriendGiftCPP friendgift = 2;
      case 2: {
        if (tag == 18) {
         parse_friendgift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendgift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.SendGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.SendGiftResp)
  return false;
#undef DO_
}

void SendGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.SendGiftResp)
  // required .ProtoFriend.FriendCPP yourfriend = 1;
  if (has_yourfriend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->yourfriend(), output);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friendgift(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.SendGiftResp)
}

::google::protobuf::uint8* SendGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.SendGiftResp)
  // required .ProtoFriend.FriendCPP yourfriend = 1;
  if (has_yourfriend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->yourfriend(), target);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friendgift(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.SendGiftResp)
  return target;
}

int SendGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoFriend.FriendCPP yourfriend = 1;
    if (has_yourfriend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yourfriend());
    }

    // required .ProtoFriend.FriendGiftCPP friendgift = 2;
    if (has_friendgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendgift());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SendGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SendGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SendGiftResp::MergeFrom(const SendGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yourfriend()) {
      mutable_yourfriend()->::ProtoFriend::FriendCPP::MergeFrom(from.yourfriend());
    }
    if (from.has_friendgift()) {
      mutable_friendgift()->::ProtoFriend::FriendGiftCPP::MergeFrom(from.friendgift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SendGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendGiftResp::CopyFrom(const SendGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_yourfriend()) {
    if (!this->yourfriend().IsInitialized()) return false;
  }
  if (has_friendgift()) {
    if (!this->friendgift().IsInitialized()) return false;
  }
  return true;
}

void SendGiftResp::Swap(SendGiftResp* other) {
  if (other != this) {
    std::swap(yourfriend_, other->yourfriend_);
    std::swap(friendgift_, other->friendgift_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SendGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendGiftResp_descriptor_;
  metadata.reflection = SendGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReceiveGiftPushReq::kRecvTimesFieldNumber;
const int ReceiveGiftPushReq::kRecvTsFieldNumber;
const int ReceiveGiftPushReq::kCoinFieldNumber;
const int ReceiveGiftPushReq::kPrestigeFieldNumber;
#endif  // !_MSC_VER

ReceiveGiftPushReq::ReceiveGiftPushReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.ReceiveGiftPushReq)
}

void ReceiveGiftPushReq::InitAsDefaultInstance() {
  coin_ = const_cast< ::DataCommon::RewardItemCPP*>(&::DataCommon::RewardItemCPP::default_instance());
  prestige_ = const_cast< ::DataCommon::RewardItemCPP*>(&::DataCommon::RewardItemCPP::default_instance());
}

ReceiveGiftPushReq::ReceiveGiftPushReq(const ReceiveGiftPushReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.ReceiveGiftPushReq)
}

void ReceiveGiftPushReq::SharedCtor() {
  _cached_size_ = 0;
  recv_times_ = 0u;
  recv_ts_ = 0u;
  coin_ = NULL;
  prestige_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReceiveGiftPushReq::~ReceiveGiftPushReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.ReceiveGiftPushReq)
  SharedDtor();
}

void ReceiveGiftPushReq::SharedDtor() {
  if (this != default_instance_) {
    delete coin_;
    delete prestige_;
  }
}

void ReceiveGiftPushReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceiveGiftPushReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceiveGiftPushReq_descriptor_;
}

const ReceiveGiftPushReq& ReceiveGiftPushReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

ReceiveGiftPushReq* ReceiveGiftPushReq::default_instance_ = NULL;

ReceiveGiftPushReq* ReceiveGiftPushReq::New() const {
  return new ReceiveGiftPushReq;
}

void ReceiveGiftPushReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReceiveGiftPushReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(recv_times_, recv_ts_);
    if (has_coin()) {
      if (coin_ != NULL) coin_->::DataCommon::RewardItemCPP::Clear();
    }
    if (has_prestige()) {
      if (prestige_ != NULL) prestige_->::DataCommon::RewardItemCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReceiveGiftPushReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.ReceiveGiftPushReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 recv_times = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_times_)));
          set_has_recv_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_ts;
        break;
      }

      // required uint32 recv_ts = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_ts_)));
          set_has_recv_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_coin;
        break;
      }

      // required .DataCommon.RewardItemCPP coin = 3;
      case 3: {
        if (tag == 26) {
         parse_coin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_prestige;
        break;
      }

      // required .DataCommon.RewardItemCPP prestige = 4;
      case 4: {
        if (tag == 34) {
         parse_prestige:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prestige()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.ReceiveGiftPushReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.ReceiveGiftPushReq)
  return false;
#undef DO_
}

void ReceiveGiftPushReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.ReceiveGiftPushReq)
  // required uint32 recv_times = 1;
  if (has_recv_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recv_times(), output);
  }

  // required uint32 recv_ts = 2;
  if (has_recv_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recv_ts(), output);
  }

  // required .DataCommon.RewardItemCPP coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->coin(), output);
  }

  // required .DataCommon.RewardItemCPP prestige = 4;
  if (has_prestige()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prestige(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.ReceiveGiftPushReq)
}

::google::protobuf::uint8* ReceiveGiftPushReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.ReceiveGiftPushReq)
  // required uint32 recv_times = 1;
  if (has_recv_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recv_times(), target);
  }

  // required uint32 recv_ts = 2;
  if (has_recv_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recv_ts(), target);
  }

  // required .DataCommon.RewardItemCPP coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->coin(), target);
  }

  // required .DataCommon.RewardItemCPP prestige = 4;
  if (has_prestige()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prestige(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.ReceiveGiftPushReq)
  return target;
}

int ReceiveGiftPushReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 recv_times = 1;
    if (has_recv_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recv_times());
    }

    // required uint32 recv_ts = 2;
    if (has_recv_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recv_ts());
    }

    // required .DataCommon.RewardItemCPP coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coin());
    }

    // required .DataCommon.RewardItemCPP prestige = 4;
    if (has_prestige()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prestige());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceiveGiftPushReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReceiveGiftPushReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReceiveGiftPushReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReceiveGiftPushReq::MergeFrom(const ReceiveGiftPushReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recv_times()) {
      set_recv_times(from.recv_times());
    }
    if (from.has_recv_ts()) {
      set_recv_ts(from.recv_ts());
    }
    if (from.has_coin()) {
      mutable_coin()->::DataCommon::RewardItemCPP::MergeFrom(from.coin());
    }
    if (from.has_prestige()) {
      mutable_prestige()->::DataCommon::RewardItemCPP::MergeFrom(from.prestige());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReceiveGiftPushReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiveGiftPushReq::CopyFrom(const ReceiveGiftPushReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveGiftPushReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_coin()) {
    if (!this->coin().IsInitialized()) return false;
  }
  if (has_prestige()) {
    if (!this->prestige().IsInitialized()) return false;
  }
  return true;
}

void ReceiveGiftPushReq::Swap(ReceiveGiftPushReq* other) {
  if (other != this) {
    std::swap(recv_times_, other->recv_times_);
    std::swap(recv_ts_, other->recv_ts_);
    std::swap(coin_, other->coin_);
    std::swap(prestige_, other->prestige_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReceiveGiftPushReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReceiveGiftPushReq_descriptor_;
  metadata.reflection = ReceiveGiftPushReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReceivePrestigeRewardReq::ReceivePrestigeRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.ReceivePrestigeRewardReq)
}

void ReceivePrestigeRewardReq::InitAsDefaultInstance() {
}

ReceivePrestigeRewardReq::ReceivePrestigeRewardReq(const ReceivePrestigeRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.ReceivePrestigeRewardReq)
}

void ReceivePrestigeRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReceivePrestigeRewardReq::~ReceivePrestigeRewardReq() {
  // @@protoc_insertion_point(destructor:ProtoFriend.ReceivePrestigeRewardReq)
  SharedDtor();
}

void ReceivePrestigeRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReceivePrestigeRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceivePrestigeRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceivePrestigeRewardReq_descriptor_;
}

const ReceivePrestigeRewardReq& ReceivePrestigeRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

ReceivePrestigeRewardReq* ReceivePrestigeRewardReq::default_instance_ = NULL;

ReceivePrestigeRewardReq* ReceivePrestigeRewardReq::New() const {
  return new ReceivePrestigeRewardReq;
}

void ReceivePrestigeRewardReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReceivePrestigeRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.ReceivePrestigeRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.ReceivePrestigeRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.ReceivePrestigeRewardReq)
  return false;
#undef DO_
}

void ReceivePrestigeRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.ReceivePrestigeRewardReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.ReceivePrestigeRewardReq)
}

::google::protobuf::uint8* ReceivePrestigeRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.ReceivePrestigeRewardReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.ReceivePrestigeRewardReq)
  return target;
}

int ReceivePrestigeRewardReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceivePrestigeRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReceivePrestigeRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReceivePrestigeRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReceivePrestigeRewardReq::MergeFrom(const ReceivePrestigeRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReceivePrestigeRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceivePrestigeRewardReq::CopyFrom(const ReceivePrestigeRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceivePrestigeRewardReq::IsInitialized() const {

  return true;
}

void ReceivePrestigeRewardReq::Swap(ReceivePrestigeRewardReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReceivePrestigeRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReceivePrestigeRewardReq_descriptor_;
  metadata.reflection = ReceivePrestigeRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReceivePrestigeRewardResp::kCashFieldNumber;
const int ReceivePrestigeRewardResp::kFriendgiftFieldNumber;
#endif  // !_MSC_VER

ReceivePrestigeRewardResp::ReceivePrestigeRewardResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFriend.ReceivePrestigeRewardResp)
}

void ReceivePrestigeRewardResp::InitAsDefaultInstance() {
  friendgift_ = const_cast< ::ProtoFriend::FriendGiftCPP*>(&::ProtoFriend::FriendGiftCPP::default_instance());
}

ReceivePrestigeRewardResp::ReceivePrestigeRewardResp(const ReceivePrestigeRewardResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoFriend.ReceivePrestigeRewardResp)
}

void ReceivePrestigeRewardResp::SharedCtor() {
  _cached_size_ = 0;
  cash_ = 0u;
  friendgift_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReceivePrestigeRewardResp::~ReceivePrestigeRewardResp() {
  // @@protoc_insertion_point(destructor:ProtoFriend.ReceivePrestigeRewardResp)
  SharedDtor();
}

void ReceivePrestigeRewardResp::SharedDtor() {
  if (this != default_instance_) {
    delete friendgift_;
  }
}

void ReceivePrestigeRewardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceivePrestigeRewardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceivePrestigeRewardResp_descriptor_;
}

const ReceivePrestigeRewardResp& ReceivePrestigeRewardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoFriend_2eproto();
  return *default_instance_;
}

ReceivePrestigeRewardResp* ReceivePrestigeRewardResp::default_instance_ = NULL;

ReceivePrestigeRewardResp* ReceivePrestigeRewardResp::New() const {
  return new ReceivePrestigeRewardResp;
}

void ReceivePrestigeRewardResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cash_ = 0u;
    if (has_friendgift()) {
      if (friendgift_ != NULL) friendgift_->::ProtoFriend::FriendGiftCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReceivePrestigeRewardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFriend.ReceivePrestigeRewardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cash = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friendgift;
        break;
      }

      // required .ProtoFriend.FriendGiftCPP friendgift = 2;
      case 2: {
        if (tag == 18) {
         parse_friendgift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendgift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFriend.ReceivePrestigeRewardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFriend.ReceivePrestigeRewardResp)
  return false;
#undef DO_
}

void ReceivePrestigeRewardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFriend.ReceivePrestigeRewardResp)
  // required uint32 cash = 1;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cash(), output);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friendgift(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFriend.ReceivePrestigeRewardResp)
}

::google::protobuf::uint8* ReceivePrestigeRewardResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFriend.ReceivePrestigeRewardResp)
  // required uint32 cash = 1;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cash(), target);
  }

  // required .ProtoFriend.FriendGiftCPP friendgift = 2;
  if (has_friendgift()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friendgift(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFriend.ReceivePrestigeRewardResp)
  return target;
}

int ReceivePrestigeRewardResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cash = 1;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required .ProtoFriend.FriendGiftCPP friendgift = 2;
    if (has_friendgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendgift());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceivePrestigeRewardResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReceivePrestigeRewardResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReceivePrestigeRewardResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReceivePrestigeRewardResp::MergeFrom(const ReceivePrestigeRewardResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_friendgift()) {
      mutable_friendgift()->::ProtoFriend::FriendGiftCPP::MergeFrom(from.friendgift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReceivePrestigeRewardResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceivePrestigeRewardResp::CopyFrom(const ReceivePrestigeRewardResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceivePrestigeRewardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_friendgift()) {
    if (!this->friendgift().IsInitialized()) return false;
  }
  return true;
}

void ReceivePrestigeRewardResp::Swap(ReceivePrestigeRewardResp* other) {
  if (other != this) {
    std::swap(cash_, other->cash_);
    std::swap(friendgift_, other->friendgift_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReceivePrestigeRewardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReceivePrestigeRewardResp_descriptor_;
  metadata.reflection = ReceivePrestigeRewardResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoFriend

// @@protoc_insertion_point(global_scope)
