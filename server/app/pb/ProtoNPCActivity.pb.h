// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoNPCActivity.proto

#ifndef PROTOBUF_ProtoNPCActivity_2eproto__INCLUDED
#define PROTOBUF_ProtoNPCActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataConfig.pb.h"
#include "DataCommon.pb.h"
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoNPCActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

class OpenPlatformAffairConfigCPP;
class AffairItemConfigCPP;
class AffairConfigCPP;
class ActiveValueConfigCPP;
class OpenPlatformRewardConfigCPP;
class ActivityAffairConfigCPP;
class NPCActivityConfigCPP;
class NPCActivitySingleConfigCPP;
class NPCActivityCPP;
class SpecialNPCCPP;
class OpenNPCActivityWindowReq;
class OpenNPCActivityWindowResp;
class GetActiveAffairRewardReq;
class FinalRewardCPP;
class GetActiveAffairRewardResp;
class GetActiveValueRewardReq;
class GetActiveValueRewardResp;

// ===================================================================

class OpenPlatformAffairConfigCPP : public ::google::protobuf::Message {
 public:
  OpenPlatformAffairConfigCPP();
  virtual ~OpenPlatformAffairConfigCPP();

  OpenPlatformAffairConfigCPP(const OpenPlatformAffairConfigCPP& from);

  inline OpenPlatformAffairConfigCPP& operator=(const OpenPlatformAffairConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenPlatformAffairConfigCPP& default_instance();

  void Swap(OpenPlatformAffairConfigCPP* other);

  // implements Message ----------------------------------------------

  OpenPlatformAffairConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenPlatformAffairConfigCPP& from);
  void MergeFrom(const OpenPlatformAffairConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 startday = 1;
  inline bool has_startday() const;
  inline void clear_startday();
  static const int kStartdayFieldNumber = 1;
  inline ::google::protobuf::uint32 startday() const;
  inline void set_startday(::google::protobuf::uint32 value);

  // repeated .DataConfig.RewardConfigCPP reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::DataConfig::RewardConfigCPP& reward(int index) const;
  inline ::DataConfig::RewardConfigCPP* mutable_reward(int index);
  inline ::DataConfig::RewardConfigCPP* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >*
      mutable_reward();

  // required uint32 active_value = 3;
  inline bool has_active_value() const;
  inline void clear_active_value();
  static const int kActiveValueFieldNumber = 3;
  inline ::google::protobuf::uint32 active_value() const;
  inline void set_active_value(::google::protobuf::uint32 value);

  // optional uint32 paycash = 4;
  inline bool has_paycash() const;
  inline void clear_paycash();
  static const int kPaycashFieldNumber = 4;
  inline ::google::protobuf::uint32 paycash() const;
  inline void set_paycash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.OpenPlatformAffairConfigCPP)
 private:
  inline void set_has_startday();
  inline void clear_has_startday();
  inline void set_has_active_value();
  inline void clear_has_active_value();
  inline void set_has_paycash();
  inline void clear_has_paycash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP > reward_;
  ::google::protobuf::uint32 startday_;
  ::google::protobuf::uint32 active_value_;
  ::google::protobuf::uint32 paycash_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenPlatformAffairConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class AffairItemConfigCPP : public ::google::protobuf::Message {
 public:
  AffairItemConfigCPP();
  virtual ~AffairItemConfigCPP();

  AffairItemConfigCPP(const AffairItemConfigCPP& from);

  inline AffairItemConfigCPP& operator=(const AffairItemConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AffairItemConfigCPP& default_instance();

  void Swap(AffairItemConfigCPP* other);

  // implements Message ----------------------------------------------

  AffairItemConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AffairItemConfigCPP& from);
  void MergeFrom(const AffairItemConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 props = 1;
  inline bool has_props() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 1;
  inline ::google::protobuf::uint32 props() const;
  inline void set_props(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // repeated .ProtoNPCActivity.OpenPlatformAffairConfigCPP open_platform_affair = 3;
  inline int open_platform_affair_size() const;
  inline void clear_open_platform_affair();
  static const int kOpenPlatformAffairFieldNumber = 3;
  inline const ::ProtoNPCActivity::OpenPlatformAffairConfigCPP& open_platform_affair(int index) const;
  inline ::ProtoNPCActivity::OpenPlatformAffairConfigCPP* mutable_open_platform_affair(int index);
  inline ::ProtoNPCActivity::OpenPlatformAffairConfigCPP* add_open_platform_affair();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformAffairConfigCPP >&
      open_platform_affair() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformAffairConfigCPP >*
      mutable_open_platform_affair();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.AffairItemConfigCPP)
 private:
  inline void set_has_props();
  inline void clear_has_props();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 props_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformAffairConfigCPP > open_platform_affair_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static AffairItemConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class AffairConfigCPP : public ::google::protobuf::Message {
 public:
  AffairConfigCPP();
  virtual ~AffairConfigCPP();

  AffairConfigCPP(const AffairConfigCPP& from);

  inline AffairConfigCPP& operator=(const AffairConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AffairConfigCPP& default_instance();

  void Swap(AffairConfigCPP* other);

  // implements Message ----------------------------------------------

  AffairConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AffairConfigCPP& from);
  void MergeFrom(const AffairConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .ProtoNPCActivity.AffairItemConfigCPP items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::ProtoNPCActivity::AffairItemConfigCPP& items(int index) const;
  inline ::ProtoNPCActivity::AffairItemConfigCPP* mutable_items(int index);
  inline ::ProtoNPCActivity::AffairItemConfigCPP* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairItemConfigCPP >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairItemConfigCPP >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.AffairConfigCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairItemConfigCPP > items_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static AffairConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class ActiveValueConfigCPP : public ::google::protobuf::Message {
 public:
  ActiveValueConfigCPP();
  virtual ~ActiveValueConfigCPP();

  ActiveValueConfigCPP(const ActiveValueConfigCPP& from);

  inline ActiveValueConfigCPP& operator=(const ActiveValueConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveValueConfigCPP& default_instance();

  void Swap(ActiveValueConfigCPP* other);

  // implements Message ----------------------------------------------

  ActiveValueConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveValueConfigCPP& from);
  void MergeFrom(const ActiveValueConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // repeated .DataConfig.RewardConfigCPP reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::DataConfig::RewardConfigCPP& reward(int index) const;
  inline ::DataConfig::RewardConfigCPP* mutable_reward(int index);
  inline ::DataConfig::RewardConfigCPP* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.ActiveValueConfigCPP)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP > reward_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static ActiveValueConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class OpenPlatformRewardConfigCPP : public ::google::protobuf::Message {
 public:
  OpenPlatformRewardConfigCPP();
  virtual ~OpenPlatformRewardConfigCPP();

  OpenPlatformRewardConfigCPP(const OpenPlatformRewardConfigCPP& from);

  inline OpenPlatformRewardConfigCPP& operator=(const OpenPlatformRewardConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenPlatformRewardConfigCPP& default_instance();

  void Swap(OpenPlatformRewardConfigCPP* other);

  // implements Message ----------------------------------------------

  OpenPlatformRewardConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenPlatformRewardConfigCPP& from);
  void MergeFrom(const OpenPlatformRewardConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 startday = 1;
  inline bool has_startday() const;
  inline void clear_startday();
  static const int kStartdayFieldNumber = 1;
  inline ::google::protobuf::uint32 startday() const;
  inline void set_startday(::google::protobuf::uint32 value);

  // repeated .ProtoNPCActivity.ActiveValueConfigCPP active_value_reward = 2;
  inline int active_value_reward_size() const;
  inline void clear_active_value_reward();
  static const int kActiveValueRewardFieldNumber = 2;
  inline const ::ProtoNPCActivity::ActiveValueConfigCPP& active_value_reward(int index) const;
  inline ::ProtoNPCActivity::ActiveValueConfigCPP* mutable_active_value_reward(int index);
  inline ::ProtoNPCActivity::ActiveValueConfigCPP* add_active_value_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >&
      active_value_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >*
      mutable_active_value_reward();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.OpenPlatformRewardConfigCPP)
 private:
  inline void set_has_startday();
  inline void clear_has_startday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP > active_value_reward_;
  ::google::protobuf::uint32 startday_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenPlatformRewardConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class ActivityAffairConfigCPP : public ::google::protobuf::Message {
 public:
  ActivityAffairConfigCPP();
  virtual ~ActivityAffairConfigCPP();

  ActivityAffairConfigCPP(const ActivityAffairConfigCPP& from);

  inline ActivityAffairConfigCPP& operator=(const ActivityAffairConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityAffairConfigCPP& default_instance();

  void Swap(ActivityAffairConfigCPP* other);

  // implements Message ----------------------------------------------

  ActivityAffairConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityAffairConfigCPP& from);
  void MergeFrom(const ActivityAffairConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated .ProtoNPCActivity.AffairConfigCPP affairs = 2;
  inline int affairs_size() const;
  inline void clear_affairs();
  static const int kAffairsFieldNumber = 2;
  inline const ::ProtoNPCActivity::AffairConfigCPP& affairs(int index) const;
  inline ::ProtoNPCActivity::AffairConfigCPP* mutable_affairs(int index);
  inline ::ProtoNPCActivity::AffairConfigCPP* add_affairs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairConfigCPP >&
      affairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairConfigCPP >*
      mutable_affairs();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.ActivityAffairConfigCPP)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairConfigCPP > affairs_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static ActivityAffairConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class NPCActivityConfigCPP : public ::google::protobuf::Message {
 public:
  NPCActivityConfigCPP();
  virtual ~NPCActivityConfigCPP();

  NPCActivityConfigCPP(const NPCActivityConfigCPP& from);

  inline NPCActivityConfigCPP& operator=(const NPCActivityConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCActivityConfigCPP& default_instance();

  void Swap(NPCActivityConfigCPP* other);

  // implements Message ----------------------------------------------

  NPCActivityConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCActivityConfigCPP& from);
  void MergeFrom(const NPCActivityConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoNPCActivity.ActivityAffairConfigCPP activity_affairs = 1;
  inline int activity_affairs_size() const;
  inline void clear_activity_affairs();
  static const int kActivityAffairsFieldNumber = 1;
  inline const ::ProtoNPCActivity::ActivityAffairConfigCPP& activity_affairs(int index) const;
  inline ::ProtoNPCActivity::ActivityAffairConfigCPP* mutable_activity_affairs(int index);
  inline ::ProtoNPCActivity::ActivityAffairConfigCPP* add_activity_affairs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActivityAffairConfigCPP >&
      activity_affairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActivityAffairConfigCPP >*
      mutable_activity_affairs();

  // repeated .ProtoNPCActivity.OpenPlatformRewardConfigCPP open_platform_reward = 2;
  inline int open_platform_reward_size() const;
  inline void clear_open_platform_reward();
  static const int kOpenPlatformRewardFieldNumber = 2;
  inline const ::ProtoNPCActivity::OpenPlatformRewardConfigCPP& open_platform_reward(int index) const;
  inline ::ProtoNPCActivity::OpenPlatformRewardConfigCPP* mutable_open_platform_reward(int index);
  inline ::ProtoNPCActivity::OpenPlatformRewardConfigCPP* add_open_platform_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformRewardConfigCPP >&
      open_platform_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformRewardConfigCPP >*
      mutable_open_platform_reward();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.NPCActivityConfigCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActivityAffairConfigCPP > activity_affairs_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformRewardConfigCPP > open_platform_reward_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static NPCActivityConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class NPCActivitySingleConfigCPP : public ::google::protobuf::Message {
 public:
  NPCActivitySingleConfigCPP();
  virtual ~NPCActivitySingleConfigCPP();

  NPCActivitySingleConfigCPP(const NPCActivitySingleConfigCPP& from);

  inline NPCActivitySingleConfigCPP& operator=(const NPCActivitySingleConfigCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCActivitySingleConfigCPP& default_instance();

  void Swap(NPCActivitySingleConfigCPP* other);

  // implements Message ----------------------------------------------

  NPCActivitySingleConfigCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCActivitySingleConfigCPP& from);
  void MergeFrom(const NPCActivitySingleConfigCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoNPCActivity.ActiveValueConfigCPP activevalueconfig = 1;
  inline int activevalueconfig_size() const;
  inline void clear_activevalueconfig();
  static const int kActivevalueconfigFieldNumber = 1;
  inline const ::ProtoNPCActivity::ActiveValueConfigCPP& activevalueconfig(int index) const;
  inline ::ProtoNPCActivity::ActiveValueConfigCPP* mutable_activevalueconfig(int index);
  inline ::ProtoNPCActivity::ActiveValueConfigCPP* add_activevalueconfig();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >&
      activevalueconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >*
      mutable_activevalueconfig();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.NPCActivitySingleConfigCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP > activevalueconfig_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static NPCActivitySingleConfigCPP* default_instance_;
};
// -------------------------------------------------------------------

class NPCActivityCPP : public ::google::protobuf::Message {
 public:
  NPCActivityCPP();
  virtual ~NPCActivityCPP();

  NPCActivityCPP(const NPCActivityCPP& from);

  inline NPCActivityCPP& operator=(const NPCActivityCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCActivityCPP& default_instance();

  void Swap(NPCActivityCPP* other);

  // implements Message ----------------------------------------------

  NPCActivityCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCActivityCPP& from);
  void MergeFrom(const NPCActivityCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 active_value = 2;
  inline bool has_active_value() const;
  inline void clear_active_value();
  static const int kActiveValueFieldNumber = 2;
  inline ::google::protobuf::uint32 active_value() const;
  inline void set_active_value(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // repeated uint32 material = 4;
  inline int material_size() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 4;
  inline ::google::protobuf::uint32 material(int index) const;
  inline void set_material(int index, ::google::protobuf::uint32 value);
  inline void add_material(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      material() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_material();

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.NPCActivityCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_active_value();
  inline void clear_has_active_value();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 active_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > material_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static NPCActivityCPP* default_instance_;
};
// -------------------------------------------------------------------

class SpecialNPCCPP : public ::google::protobuf::Message {
 public:
  SpecialNPCCPP();
  virtual ~SpecialNPCCPP();

  SpecialNPCCPP(const SpecialNPCCPP& from);

  inline SpecialNPCCPP& operator=(const SpecialNPCCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialNPCCPP& default_instance();

  void Swap(SpecialNPCCPP* other);

  // implements Message ----------------------------------------------

  SpecialNPCCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecialNPCCPP& from);
  void MergeFrom(const SpecialNPCCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 kindom = 1;
  inline bool has_kindom() const;
  inline void clear_kindom();
  static const int kKindomFieldNumber = 1;
  inline ::google::protobuf::uint32 kindom() const;
  inline void set_kindom(::google::protobuf::uint32 value);

  // required uint32 city = 2;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 2;
  inline ::google::protobuf::uint32 city() const;
  inline void set_city(::google::protobuf::uint32 value);

  // required uint32 nextts = 3;
  inline bool has_nextts() const;
  inline void clear_nextts();
  static const int kNexttsFieldNumber = 3;
  inline ::google::protobuf::uint32 nextts() const;
  inline void set_nextts(::google::protobuf::uint32 value);

  // required uint32 npcid = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 4;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.SpecialNPCCPP)
 private:
  inline void set_has_kindom();
  inline void clear_has_kindom();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_nextts();
  inline void clear_has_nextts();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 kindom_;
  ::google::protobuf::uint32 city_;
  ::google::protobuf::uint32 nextts_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static SpecialNPCCPP* default_instance_;
};
// -------------------------------------------------------------------

class OpenNPCActivityWindowReq : public ::google::protobuf::Message {
 public:
  OpenNPCActivityWindowReq();
  virtual ~OpenNPCActivityWindowReq();

  OpenNPCActivityWindowReq(const OpenNPCActivityWindowReq& from);

  inline OpenNPCActivityWindowReq& operator=(const OpenNPCActivityWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenNPCActivityWindowReq& default_instance();

  void Swap(OpenNPCActivityWindowReq* other);

  // implements Message ----------------------------------------------

  OpenNPCActivityWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenNPCActivityWindowReq& from);
  void MergeFrom(const OpenNPCActivityWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.OpenNPCActivityWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenNPCActivityWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenNPCActivityWindowResp : public ::google::protobuf::Message {
 public:
  OpenNPCActivityWindowResp();
  virtual ~OpenNPCActivityWindowResp();

  OpenNPCActivityWindowResp(const OpenNPCActivityWindowResp& from);

  inline OpenNPCActivityWindowResp& operator=(const OpenNPCActivityWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenNPCActivityWindowResp& default_instance();

  void Swap(OpenNPCActivityWindowResp* other);

  // implements Message ----------------------------------------------

  OpenNPCActivityWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenNPCActivityWindowResp& from);
  void MergeFrom(const OpenNPCActivityWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .User.ActivityItem activityitem = 1;
  inline bool has_activityitem() const;
  inline void clear_activityitem();
  static const int kActivityitemFieldNumber = 1;
  inline const ::User::ActivityItem& activityitem() const;
  inline ::User::ActivityItem* mutable_activityitem();
  inline ::User::ActivityItem* release_activityitem();
  inline void set_allocated_activityitem(::User::ActivityItem* activityitem);

  // repeated .ProtoNPCActivity.SpecialNPCCPP npcinfo = 2;
  inline int npcinfo_size() const;
  inline void clear_npcinfo();
  static const int kNpcinfoFieldNumber = 2;
  inline const ::ProtoNPCActivity::SpecialNPCCPP& npcinfo(int index) const;
  inline ::ProtoNPCActivity::SpecialNPCCPP* mutable_npcinfo(int index);
  inline ::ProtoNPCActivity::SpecialNPCCPP* add_npcinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::SpecialNPCCPP >&
      npcinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::SpecialNPCCPP >*
      mutable_npcinfo();

  // optional .ProtoNPCActivity.NPCActivitySingleConfigCPP activityconfig = 3;
  inline bool has_activityconfig() const;
  inline void clear_activityconfig();
  static const int kActivityconfigFieldNumber = 3;
  inline const ::ProtoNPCActivity::NPCActivitySingleConfigCPP& activityconfig() const;
  inline ::ProtoNPCActivity::NPCActivitySingleConfigCPP* mutable_activityconfig();
  inline ::ProtoNPCActivity::NPCActivitySingleConfigCPP* release_activityconfig();
  inline void set_allocated_activityconfig(::ProtoNPCActivity::NPCActivitySingleConfigCPP* activityconfig);

  // optional .ProtoNPCActivity.NPCActivityCPP activity = 4;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 4;
  inline const ::ProtoNPCActivity::NPCActivityCPP& activity() const;
  inline ::ProtoNPCActivity::NPCActivityCPP* mutable_activity();
  inline ::ProtoNPCActivity::NPCActivityCPP* release_activity();
  inline void set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity);

  // optional uint32 multiple = 5;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 5;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // optional uint32 day = 6;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 6;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.OpenNPCActivityWindowResp)
 private:
  inline void set_has_activityitem();
  inline void clear_has_activityitem();
  inline void set_has_activityconfig();
  inline void clear_has_activityconfig();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::ActivityItem* activityitem_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::SpecialNPCCPP > npcinfo_;
  ::ProtoNPCActivity::NPCActivitySingleConfigCPP* activityconfig_;
  ::ProtoNPCActivity::NPCActivityCPP* activity_;
  ::google::protobuf::uint32 multiple_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static OpenNPCActivityWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class GetActiveAffairRewardReq : public ::google::protobuf::Message {
 public:
  GetActiveAffairRewardReq();
  virtual ~GetActiveAffairRewardReq();

  GetActiveAffairRewardReq(const GetActiveAffairRewardReq& from);

  inline GetActiveAffairRewardReq& operator=(const GetActiveAffairRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActiveAffairRewardReq& default_instance();

  void Swap(GetActiveAffairRewardReq* other);

  // implements Message ----------------------------------------------

  GetActiveAffairRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetActiveAffairRewardReq& from);
  void MergeFrom(const GetActiveAffairRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.GetActiveAffairRewardReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static GetActiveAffairRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class FinalRewardCPP : public ::google::protobuf::Message {
 public:
  FinalRewardCPP();
  virtual ~FinalRewardCPP();

  FinalRewardCPP(const FinalRewardCPP& from);

  inline FinalRewardCPP& operator=(const FinalRewardCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinalRewardCPP& default_instance();

  void Swap(FinalRewardCPP* other);

  // implements Message ----------------------------------------------

  FinalRewardCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinalRewardCPP& from);
  void MergeFrom(const FinalRewardCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // optional .DataCommon.CommonBaseRewardCPP base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.FinalRewardCPP)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static FinalRewardCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetActiveAffairRewardResp : public ::google::protobuf::Message {
 public:
  GetActiveAffairRewardResp();
  virtual ~GetActiveAffairRewardResp();

  GetActiveAffairRewardResp(const GetActiveAffairRewardResp& from);

  inline GetActiveAffairRewardResp& operator=(const GetActiveAffairRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActiveAffairRewardResp& default_instance();

  void Swap(GetActiveAffairRewardResp* other);

  // implements Message ----------------------------------------------

  GetActiveAffairRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetActiveAffairRewardResp& from);
  void MergeFrom(const GetActiveAffairRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNPCActivity.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoNPCActivity::FinalRewardCPP& reward() const;
  inline ::ProtoNPCActivity::FinalRewardCPP* mutable_reward();
  inline ::ProtoNPCActivity::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoNPCActivity::FinalRewardCPP* reward);

  // required .ProtoNPCActivity.NPCActivityCPP activity = 2;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 2;
  inline const ::ProtoNPCActivity::NPCActivityCPP& activity() const;
  inline ::ProtoNPCActivity::NPCActivityCPP* mutable_activity();
  inline ::ProtoNPCActivity::NPCActivityCPP* release_activity();
  inline void set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.GetActiveAffairRewardResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoNPCActivity::FinalRewardCPP* reward_;
  ::ProtoNPCActivity::NPCActivityCPP* activity_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static GetActiveAffairRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class GetActiveValueRewardReq : public ::google::protobuf::Message {
 public:
  GetActiveValueRewardReq();
  virtual ~GetActiveValueRewardReq();

  GetActiveValueRewardReq(const GetActiveValueRewardReq& from);

  inline GetActiveValueRewardReq& operator=(const GetActiveValueRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActiveValueRewardReq& default_instance();

  void Swap(GetActiveValueRewardReq* other);

  // implements Message ----------------------------------------------

  GetActiveValueRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetActiveValueRewardReq& from);
  void MergeFrom(const GetActiveValueRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.GetActiveValueRewardReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static GetActiveValueRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetActiveValueRewardResp : public ::google::protobuf::Message {
 public:
  GetActiveValueRewardResp();
  virtual ~GetActiveValueRewardResp();

  GetActiveValueRewardResp(const GetActiveValueRewardResp& from);

  inline GetActiveValueRewardResp& operator=(const GetActiveValueRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActiveValueRewardResp& default_instance();

  void Swap(GetActiveValueRewardResp* other);

  // implements Message ----------------------------------------------

  GetActiveValueRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetActiveValueRewardResp& from);
  void MergeFrom(const GetActiveValueRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNPCActivity.FinalRewardCPP reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoNPCActivity::FinalRewardCPP& reward() const;
  inline ::ProtoNPCActivity::FinalRewardCPP* mutable_reward();
  inline ::ProtoNPCActivity::FinalRewardCPP* release_reward();
  inline void set_allocated_reward(::ProtoNPCActivity::FinalRewardCPP* reward);

  // required .ProtoNPCActivity.NPCActivityCPP activity = 2;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 2;
  inline const ::ProtoNPCActivity::NPCActivityCPP& activity() const;
  inline ::ProtoNPCActivity::NPCActivityCPP* mutable_activity();
  inline ::ProtoNPCActivity::NPCActivityCPP* release_activity();
  inline void set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity);

  // @@protoc_insertion_point(class_scope:ProtoNPCActivity.GetActiveValueRewardResp)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_activity();
  inline void clear_has_activity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoNPCActivity::FinalRewardCPP* reward_;
  ::ProtoNPCActivity::NPCActivityCPP* activity_;
  friend void  protobuf_AddDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCActivity_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCActivity_2eproto();

  void InitAsDefaultInstance();
  static GetActiveValueRewardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// OpenPlatformAffairConfigCPP

// required uint32 startday = 1;
inline bool OpenPlatformAffairConfigCPP::has_startday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenPlatformAffairConfigCPP::set_has_startday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenPlatformAffairConfigCPP::clear_has_startday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenPlatformAffairConfigCPP::clear_startday() {
  startday_ = 0u;
  clear_has_startday();
}
inline ::google::protobuf::uint32 OpenPlatformAffairConfigCPP::startday() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformAffairConfigCPP.startday)
  return startday_;
}
inline void OpenPlatformAffairConfigCPP::set_startday(::google::protobuf::uint32 value) {
  set_has_startday();
  startday_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenPlatformAffairConfigCPP.startday)
}

// repeated .DataConfig.RewardConfigCPP reward = 2;
inline int OpenPlatformAffairConfigCPP::reward_size() const {
  return reward_.size();
}
inline void OpenPlatformAffairConfigCPP::clear_reward() {
  reward_.Clear();
}
inline const ::DataConfig::RewardConfigCPP& OpenPlatformAffairConfigCPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformAffairConfigCPP.reward)
  return reward_.Get(index);
}
inline ::DataConfig::RewardConfigCPP* OpenPlatformAffairConfigCPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenPlatformAffairConfigCPP.reward)
  return reward_.Mutable(index);
}
inline ::DataConfig::RewardConfigCPP* OpenPlatformAffairConfigCPP::add_reward() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.OpenPlatformAffairConfigCPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >&
OpenPlatformAffairConfigCPP::reward() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.OpenPlatformAffairConfigCPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >*
OpenPlatformAffairConfigCPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.OpenPlatformAffairConfigCPP.reward)
  return &reward_;
}

// required uint32 active_value = 3;
inline bool OpenPlatformAffairConfigCPP::has_active_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpenPlatformAffairConfigCPP::set_has_active_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpenPlatformAffairConfigCPP::clear_has_active_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpenPlatformAffairConfigCPP::clear_active_value() {
  active_value_ = 0u;
  clear_has_active_value();
}
inline ::google::protobuf::uint32 OpenPlatformAffairConfigCPP::active_value() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformAffairConfigCPP.active_value)
  return active_value_;
}
inline void OpenPlatformAffairConfigCPP::set_active_value(::google::protobuf::uint32 value) {
  set_has_active_value();
  active_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenPlatformAffairConfigCPP.active_value)
}

// optional uint32 paycash = 4;
inline bool OpenPlatformAffairConfigCPP::has_paycash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpenPlatformAffairConfigCPP::set_has_paycash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpenPlatformAffairConfigCPP::clear_has_paycash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpenPlatformAffairConfigCPP::clear_paycash() {
  paycash_ = 0u;
  clear_has_paycash();
}
inline ::google::protobuf::uint32 OpenPlatformAffairConfigCPP::paycash() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformAffairConfigCPP.paycash)
  return paycash_;
}
inline void OpenPlatformAffairConfigCPP::set_paycash(::google::protobuf::uint32 value) {
  set_has_paycash();
  paycash_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenPlatformAffairConfigCPP.paycash)
}

// -------------------------------------------------------------------

// AffairItemConfigCPP

// optional uint32 props = 1;
inline bool AffairItemConfigCPP::has_props() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AffairItemConfigCPP::set_has_props() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AffairItemConfigCPP::clear_has_props() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AffairItemConfigCPP::clear_props() {
  props_ = 0u;
  clear_has_props();
}
inline ::google::protobuf::uint32 AffairItemConfigCPP::props() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.AffairItemConfigCPP.props)
  return props_;
}
inline void AffairItemConfigCPP::set_props(::google::protobuf::uint32 value) {
  set_has_props();
  props_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.AffairItemConfigCPP.props)
}

// optional uint32 count = 2;
inline bool AffairItemConfigCPP::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AffairItemConfigCPP::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AffairItemConfigCPP::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AffairItemConfigCPP::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 AffairItemConfigCPP::count() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.AffairItemConfigCPP.count)
  return count_;
}
inline void AffairItemConfigCPP::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.AffairItemConfigCPP.count)
}

// repeated .ProtoNPCActivity.OpenPlatformAffairConfigCPP open_platform_affair = 3;
inline int AffairItemConfigCPP::open_platform_affair_size() const {
  return open_platform_affair_.size();
}
inline void AffairItemConfigCPP::clear_open_platform_affair() {
  open_platform_affair_.Clear();
}
inline const ::ProtoNPCActivity::OpenPlatformAffairConfigCPP& AffairItemConfigCPP::open_platform_affair(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.AffairItemConfigCPP.open_platform_affair)
  return open_platform_affair_.Get(index);
}
inline ::ProtoNPCActivity::OpenPlatformAffairConfigCPP* AffairItemConfigCPP::mutable_open_platform_affair(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.AffairItemConfigCPP.open_platform_affair)
  return open_platform_affair_.Mutable(index);
}
inline ::ProtoNPCActivity::OpenPlatformAffairConfigCPP* AffairItemConfigCPP::add_open_platform_affair() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.AffairItemConfigCPP.open_platform_affair)
  return open_platform_affair_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformAffairConfigCPP >&
AffairItemConfigCPP::open_platform_affair() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.AffairItemConfigCPP.open_platform_affair)
  return open_platform_affair_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformAffairConfigCPP >*
AffairItemConfigCPP::mutable_open_platform_affair() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.AffairItemConfigCPP.open_platform_affair)
  return &open_platform_affair_;
}

// -------------------------------------------------------------------

// AffairConfigCPP

// required uint32 id = 1;
inline bool AffairConfigCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AffairConfigCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AffairConfigCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AffairConfigCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AffairConfigCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.AffairConfigCPP.id)
  return id_;
}
inline void AffairConfigCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.AffairConfigCPP.id)
}

// repeated .ProtoNPCActivity.AffairItemConfigCPP items = 2;
inline int AffairConfigCPP::items_size() const {
  return items_.size();
}
inline void AffairConfigCPP::clear_items() {
  items_.Clear();
}
inline const ::ProtoNPCActivity::AffairItemConfigCPP& AffairConfigCPP::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.AffairConfigCPP.items)
  return items_.Get(index);
}
inline ::ProtoNPCActivity::AffairItemConfigCPP* AffairConfigCPP::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.AffairConfigCPP.items)
  return items_.Mutable(index);
}
inline ::ProtoNPCActivity::AffairItemConfigCPP* AffairConfigCPP::add_items() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.AffairConfigCPP.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairItemConfigCPP >&
AffairConfigCPP::items() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.AffairConfigCPP.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairItemConfigCPP >*
AffairConfigCPP::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.AffairConfigCPP.items)
  return &items_;
}

// -------------------------------------------------------------------

// ActiveValueConfigCPP

// required uint32 value = 1;
inline bool ActiveValueConfigCPP::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveValueConfigCPP::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveValueConfigCPP::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveValueConfigCPP::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ActiveValueConfigCPP::value() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.ActiveValueConfigCPP.value)
  return value_;
}
inline void ActiveValueConfigCPP::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.ActiveValueConfigCPP.value)
}

// repeated .DataConfig.RewardConfigCPP reward = 2;
inline int ActiveValueConfigCPP::reward_size() const {
  return reward_.size();
}
inline void ActiveValueConfigCPP::clear_reward() {
  reward_.Clear();
}
inline const ::DataConfig::RewardConfigCPP& ActiveValueConfigCPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.ActiveValueConfigCPP.reward)
  return reward_.Get(index);
}
inline ::DataConfig::RewardConfigCPP* ActiveValueConfigCPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.ActiveValueConfigCPP.reward)
  return reward_.Mutable(index);
}
inline ::DataConfig::RewardConfigCPP* ActiveValueConfigCPP::add_reward() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.ActiveValueConfigCPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >&
ActiveValueConfigCPP::reward() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.ActiveValueConfigCPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataConfig::RewardConfigCPP >*
ActiveValueConfigCPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.ActiveValueConfigCPP.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// OpenPlatformRewardConfigCPP

// required uint32 startday = 1;
inline bool OpenPlatformRewardConfigCPP::has_startday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenPlatformRewardConfigCPP::set_has_startday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenPlatformRewardConfigCPP::clear_has_startday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenPlatformRewardConfigCPP::clear_startday() {
  startday_ = 0u;
  clear_has_startday();
}
inline ::google::protobuf::uint32 OpenPlatformRewardConfigCPP::startday() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformRewardConfigCPP.startday)
  return startday_;
}
inline void OpenPlatformRewardConfigCPP::set_startday(::google::protobuf::uint32 value) {
  set_has_startday();
  startday_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenPlatformRewardConfigCPP.startday)
}

// repeated .ProtoNPCActivity.ActiveValueConfigCPP active_value_reward = 2;
inline int OpenPlatformRewardConfigCPP::active_value_reward_size() const {
  return active_value_reward_.size();
}
inline void OpenPlatformRewardConfigCPP::clear_active_value_reward() {
  active_value_reward_.Clear();
}
inline const ::ProtoNPCActivity::ActiveValueConfigCPP& OpenPlatformRewardConfigCPP::active_value_reward(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenPlatformRewardConfigCPP.active_value_reward)
  return active_value_reward_.Get(index);
}
inline ::ProtoNPCActivity::ActiveValueConfigCPP* OpenPlatformRewardConfigCPP::mutable_active_value_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenPlatformRewardConfigCPP.active_value_reward)
  return active_value_reward_.Mutable(index);
}
inline ::ProtoNPCActivity::ActiveValueConfigCPP* OpenPlatformRewardConfigCPP::add_active_value_reward() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.OpenPlatformRewardConfigCPP.active_value_reward)
  return active_value_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >&
OpenPlatformRewardConfigCPP::active_value_reward() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.OpenPlatformRewardConfigCPP.active_value_reward)
  return active_value_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >*
OpenPlatformRewardConfigCPP::mutable_active_value_reward() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.OpenPlatformRewardConfigCPP.active_value_reward)
  return &active_value_reward_;
}

// -------------------------------------------------------------------

// ActivityAffairConfigCPP

// required uint32 day = 1;
inline bool ActivityAffairConfigCPP::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityAffairConfigCPP::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityAffairConfigCPP::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityAffairConfigCPP::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 ActivityAffairConfigCPP::day() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.ActivityAffairConfigCPP.day)
  return day_;
}
inline void ActivityAffairConfigCPP::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.ActivityAffairConfigCPP.day)
}

// repeated .ProtoNPCActivity.AffairConfigCPP affairs = 2;
inline int ActivityAffairConfigCPP::affairs_size() const {
  return affairs_.size();
}
inline void ActivityAffairConfigCPP::clear_affairs() {
  affairs_.Clear();
}
inline const ::ProtoNPCActivity::AffairConfigCPP& ActivityAffairConfigCPP::affairs(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.ActivityAffairConfigCPP.affairs)
  return affairs_.Get(index);
}
inline ::ProtoNPCActivity::AffairConfigCPP* ActivityAffairConfigCPP::mutable_affairs(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.ActivityAffairConfigCPP.affairs)
  return affairs_.Mutable(index);
}
inline ::ProtoNPCActivity::AffairConfigCPP* ActivityAffairConfigCPP::add_affairs() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.ActivityAffairConfigCPP.affairs)
  return affairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairConfigCPP >&
ActivityAffairConfigCPP::affairs() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.ActivityAffairConfigCPP.affairs)
  return affairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::AffairConfigCPP >*
ActivityAffairConfigCPP::mutable_affairs() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.ActivityAffairConfigCPP.affairs)
  return &affairs_;
}

// -------------------------------------------------------------------

// NPCActivityConfigCPP

// repeated .ProtoNPCActivity.ActivityAffairConfigCPP activity_affairs = 1;
inline int NPCActivityConfigCPP::activity_affairs_size() const {
  return activity_affairs_.size();
}
inline void NPCActivityConfigCPP::clear_activity_affairs() {
  activity_affairs_.Clear();
}
inline const ::ProtoNPCActivity::ActivityAffairConfigCPP& NPCActivityConfigCPP::activity_affairs(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityConfigCPP.activity_affairs)
  return activity_affairs_.Get(index);
}
inline ::ProtoNPCActivity::ActivityAffairConfigCPP* NPCActivityConfigCPP::mutable_activity_affairs(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.NPCActivityConfigCPP.activity_affairs)
  return activity_affairs_.Mutable(index);
}
inline ::ProtoNPCActivity::ActivityAffairConfigCPP* NPCActivityConfigCPP::add_activity_affairs() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.NPCActivityConfigCPP.activity_affairs)
  return activity_affairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActivityAffairConfigCPP >&
NPCActivityConfigCPP::activity_affairs() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.NPCActivityConfigCPP.activity_affairs)
  return activity_affairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActivityAffairConfigCPP >*
NPCActivityConfigCPP::mutable_activity_affairs() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.NPCActivityConfigCPP.activity_affairs)
  return &activity_affairs_;
}

// repeated .ProtoNPCActivity.OpenPlatformRewardConfigCPP open_platform_reward = 2;
inline int NPCActivityConfigCPP::open_platform_reward_size() const {
  return open_platform_reward_.size();
}
inline void NPCActivityConfigCPP::clear_open_platform_reward() {
  open_platform_reward_.Clear();
}
inline const ::ProtoNPCActivity::OpenPlatformRewardConfigCPP& NPCActivityConfigCPP::open_platform_reward(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityConfigCPP.open_platform_reward)
  return open_platform_reward_.Get(index);
}
inline ::ProtoNPCActivity::OpenPlatformRewardConfigCPP* NPCActivityConfigCPP::mutable_open_platform_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.NPCActivityConfigCPP.open_platform_reward)
  return open_platform_reward_.Mutable(index);
}
inline ::ProtoNPCActivity::OpenPlatformRewardConfigCPP* NPCActivityConfigCPP::add_open_platform_reward() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.NPCActivityConfigCPP.open_platform_reward)
  return open_platform_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformRewardConfigCPP >&
NPCActivityConfigCPP::open_platform_reward() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.NPCActivityConfigCPP.open_platform_reward)
  return open_platform_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::OpenPlatformRewardConfigCPP >*
NPCActivityConfigCPP::mutable_open_platform_reward() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.NPCActivityConfigCPP.open_platform_reward)
  return &open_platform_reward_;
}

// -------------------------------------------------------------------

// NPCActivitySingleConfigCPP

// repeated .ProtoNPCActivity.ActiveValueConfigCPP activevalueconfig = 1;
inline int NPCActivitySingleConfigCPP::activevalueconfig_size() const {
  return activevalueconfig_.size();
}
inline void NPCActivitySingleConfigCPP::clear_activevalueconfig() {
  activevalueconfig_.Clear();
}
inline const ::ProtoNPCActivity::ActiveValueConfigCPP& NPCActivitySingleConfigCPP::activevalueconfig(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivitySingleConfigCPP.activevalueconfig)
  return activevalueconfig_.Get(index);
}
inline ::ProtoNPCActivity::ActiveValueConfigCPP* NPCActivitySingleConfigCPP::mutable_activevalueconfig(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.NPCActivitySingleConfigCPP.activevalueconfig)
  return activevalueconfig_.Mutable(index);
}
inline ::ProtoNPCActivity::ActiveValueConfigCPP* NPCActivitySingleConfigCPP::add_activevalueconfig() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.NPCActivitySingleConfigCPP.activevalueconfig)
  return activevalueconfig_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >&
NPCActivitySingleConfigCPP::activevalueconfig() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.NPCActivitySingleConfigCPP.activevalueconfig)
  return activevalueconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::ActiveValueConfigCPP >*
NPCActivitySingleConfigCPP::mutable_activevalueconfig() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.NPCActivitySingleConfigCPP.activevalueconfig)
  return &activevalueconfig_;
}

// -------------------------------------------------------------------

// NPCActivityCPP

// required uint32 id = 1;
inline bool NPCActivityCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCActivityCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCActivityCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCActivityCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NPCActivityCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityCPP.id)
  return id_;
}
inline void NPCActivityCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.NPCActivityCPP.id)
}

// required uint32 active_value = 2;
inline bool NPCActivityCPP::has_active_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NPCActivityCPP::set_has_active_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NPCActivityCPP::clear_has_active_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NPCActivityCPP::clear_active_value() {
  active_value_ = 0u;
  clear_has_active_value();
}
inline ::google::protobuf::uint32 NPCActivityCPP::active_value() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityCPP.active_value)
  return active_value_;
}
inline void NPCActivityCPP::set_active_value(::google::protobuf::uint32 value) {
  set_has_active_value();
  active_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.NPCActivityCPP.active_value)
}

// required uint32 status = 3;
inline bool NPCActivityCPP::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NPCActivityCPP::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NPCActivityCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NPCActivityCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 NPCActivityCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityCPP.status)
  return status_;
}
inline void NPCActivityCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.NPCActivityCPP.status)
}

// repeated uint32 material = 4;
inline int NPCActivityCPP::material_size() const {
  return material_.size();
}
inline void NPCActivityCPP::clear_material() {
  material_.Clear();
}
inline ::google::protobuf::uint32 NPCActivityCPP::material(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.NPCActivityCPP.material)
  return material_.Get(index);
}
inline void NPCActivityCPP::set_material(int index, ::google::protobuf::uint32 value) {
  material_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.NPCActivityCPP.material)
}
inline void NPCActivityCPP::add_material(::google::protobuf::uint32 value) {
  material_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.NPCActivityCPP.material)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NPCActivityCPP::material() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.NPCActivityCPP.material)
  return material_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NPCActivityCPP::mutable_material() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.NPCActivityCPP.material)
  return &material_;
}

// -------------------------------------------------------------------

// SpecialNPCCPP

// required uint32 kindom = 1;
inline bool SpecialNPCCPP::has_kindom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialNPCCPP::set_has_kindom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialNPCCPP::clear_has_kindom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialNPCCPP::clear_kindom() {
  kindom_ = 0u;
  clear_has_kindom();
}
inline ::google::protobuf::uint32 SpecialNPCCPP::kindom() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.SpecialNPCCPP.kindom)
  return kindom_;
}
inline void SpecialNPCCPP::set_kindom(::google::protobuf::uint32 value) {
  set_has_kindom();
  kindom_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.SpecialNPCCPP.kindom)
}

// required uint32 city = 2;
inline bool SpecialNPCCPP::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialNPCCPP::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialNPCCPP::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialNPCCPP::clear_city() {
  city_ = 0u;
  clear_has_city();
}
inline ::google::protobuf::uint32 SpecialNPCCPP::city() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.SpecialNPCCPP.city)
  return city_;
}
inline void SpecialNPCCPP::set_city(::google::protobuf::uint32 value) {
  set_has_city();
  city_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.SpecialNPCCPP.city)
}

// required uint32 nextts = 3;
inline bool SpecialNPCCPP::has_nextts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecialNPCCPP::set_has_nextts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecialNPCCPP::clear_has_nextts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecialNPCCPP::clear_nextts() {
  nextts_ = 0u;
  clear_has_nextts();
}
inline ::google::protobuf::uint32 SpecialNPCCPP::nextts() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.SpecialNPCCPP.nextts)
  return nextts_;
}
inline void SpecialNPCCPP::set_nextts(::google::protobuf::uint32 value) {
  set_has_nextts();
  nextts_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.SpecialNPCCPP.nextts)
}

// required uint32 npcid = 4;
inline bool SpecialNPCCPP::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpecialNPCCPP::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpecialNPCCPP::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpecialNPCCPP::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 SpecialNPCCPP::npcid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.SpecialNPCCPP.npcid)
  return npcid_;
}
inline void SpecialNPCCPP::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.SpecialNPCCPP.npcid)
}

// -------------------------------------------------------------------

// OpenNPCActivityWindowReq

// -------------------------------------------------------------------

// OpenNPCActivityWindowResp

// optional .User.ActivityItem activityitem = 1;
inline bool OpenNPCActivityWindowResp::has_activityitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenNPCActivityWindowResp::set_has_activityitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenNPCActivityWindowResp::clear_has_activityitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenNPCActivityWindowResp::clear_activityitem() {
  if (activityitem_ != NULL) activityitem_->::User::ActivityItem::Clear();
  clear_has_activityitem();
}
inline const ::User::ActivityItem& OpenNPCActivityWindowResp::activityitem() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.activityitem)
  return activityitem_ != NULL ? *activityitem_ : *default_instance_->activityitem_;
}
inline ::User::ActivityItem* OpenNPCActivityWindowResp::mutable_activityitem() {
  set_has_activityitem();
  if (activityitem_ == NULL) activityitem_ = new ::User::ActivityItem;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenNPCActivityWindowResp.activityitem)
  return activityitem_;
}
inline ::User::ActivityItem* OpenNPCActivityWindowResp::release_activityitem() {
  clear_has_activityitem();
  ::User::ActivityItem* temp = activityitem_;
  activityitem_ = NULL;
  return temp;
}
inline void OpenNPCActivityWindowResp::set_allocated_activityitem(::User::ActivityItem* activityitem) {
  delete activityitem_;
  activityitem_ = activityitem;
  if (activityitem) {
    set_has_activityitem();
  } else {
    clear_has_activityitem();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.OpenNPCActivityWindowResp.activityitem)
}

// repeated .ProtoNPCActivity.SpecialNPCCPP npcinfo = 2;
inline int OpenNPCActivityWindowResp::npcinfo_size() const {
  return npcinfo_.size();
}
inline void OpenNPCActivityWindowResp::clear_npcinfo() {
  npcinfo_.Clear();
}
inline const ::ProtoNPCActivity::SpecialNPCCPP& OpenNPCActivityWindowResp::npcinfo(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.npcinfo)
  return npcinfo_.Get(index);
}
inline ::ProtoNPCActivity::SpecialNPCCPP* OpenNPCActivityWindowResp::mutable_npcinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenNPCActivityWindowResp.npcinfo)
  return npcinfo_.Mutable(index);
}
inline ::ProtoNPCActivity::SpecialNPCCPP* OpenNPCActivityWindowResp::add_npcinfo() {
  // @@protoc_insertion_point(field_add:ProtoNPCActivity.OpenNPCActivityWindowResp.npcinfo)
  return npcinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::SpecialNPCCPP >&
OpenNPCActivityWindowResp::npcinfo() const {
  // @@protoc_insertion_point(field_list:ProtoNPCActivity.OpenNPCActivityWindowResp.npcinfo)
  return npcinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCActivity::SpecialNPCCPP >*
OpenNPCActivityWindowResp::mutable_npcinfo() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCActivity.OpenNPCActivityWindowResp.npcinfo)
  return &npcinfo_;
}

// optional .ProtoNPCActivity.NPCActivitySingleConfigCPP activityconfig = 3;
inline bool OpenNPCActivityWindowResp::has_activityconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpenNPCActivityWindowResp::set_has_activityconfig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpenNPCActivityWindowResp::clear_has_activityconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpenNPCActivityWindowResp::clear_activityconfig() {
  if (activityconfig_ != NULL) activityconfig_->::ProtoNPCActivity::NPCActivitySingleConfigCPP::Clear();
  clear_has_activityconfig();
}
inline const ::ProtoNPCActivity::NPCActivitySingleConfigCPP& OpenNPCActivityWindowResp::activityconfig() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.activityconfig)
  return activityconfig_ != NULL ? *activityconfig_ : *default_instance_->activityconfig_;
}
inline ::ProtoNPCActivity::NPCActivitySingleConfigCPP* OpenNPCActivityWindowResp::mutable_activityconfig() {
  set_has_activityconfig();
  if (activityconfig_ == NULL) activityconfig_ = new ::ProtoNPCActivity::NPCActivitySingleConfigCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenNPCActivityWindowResp.activityconfig)
  return activityconfig_;
}
inline ::ProtoNPCActivity::NPCActivitySingleConfigCPP* OpenNPCActivityWindowResp::release_activityconfig() {
  clear_has_activityconfig();
  ::ProtoNPCActivity::NPCActivitySingleConfigCPP* temp = activityconfig_;
  activityconfig_ = NULL;
  return temp;
}
inline void OpenNPCActivityWindowResp::set_allocated_activityconfig(::ProtoNPCActivity::NPCActivitySingleConfigCPP* activityconfig) {
  delete activityconfig_;
  activityconfig_ = activityconfig;
  if (activityconfig) {
    set_has_activityconfig();
  } else {
    clear_has_activityconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.OpenNPCActivityWindowResp.activityconfig)
}

// optional .ProtoNPCActivity.NPCActivityCPP activity = 4;
inline bool OpenNPCActivityWindowResp::has_activity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpenNPCActivityWindowResp::set_has_activity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpenNPCActivityWindowResp::clear_has_activity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpenNPCActivityWindowResp::clear_activity() {
  if (activity_ != NULL) activity_->::ProtoNPCActivity::NPCActivityCPP::Clear();
  clear_has_activity();
}
inline const ::ProtoNPCActivity::NPCActivityCPP& OpenNPCActivityWindowResp::activity() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* OpenNPCActivityWindowResp::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::ProtoNPCActivity::NPCActivityCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.OpenNPCActivityWindowResp.activity)
  return activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* OpenNPCActivityWindowResp::release_activity() {
  clear_has_activity();
  ::ProtoNPCActivity::NPCActivityCPP* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void OpenNPCActivityWindowResp::set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.OpenNPCActivityWindowResp.activity)
}

// optional uint32 multiple = 5;
inline bool OpenNPCActivityWindowResp::has_multiple() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OpenNPCActivityWindowResp::set_has_multiple() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OpenNPCActivityWindowResp::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OpenNPCActivityWindowResp::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 OpenNPCActivityWindowResp::multiple() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.multiple)
  return multiple_;
}
inline void OpenNPCActivityWindowResp::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenNPCActivityWindowResp.multiple)
}

// optional uint32 day = 6;
inline bool OpenNPCActivityWindowResp::has_day() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OpenNPCActivityWindowResp::set_has_day() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OpenNPCActivityWindowResp::clear_has_day() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OpenNPCActivityWindowResp::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 OpenNPCActivityWindowResp::day() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.OpenNPCActivityWindowResp.day)
  return day_;
}
inline void OpenNPCActivityWindowResp::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.OpenNPCActivityWindowResp.day)
}

// -------------------------------------------------------------------

// GetActiveAffairRewardReq

// required uint32 type = 1;
inline bool GetActiveAffairRewardReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetActiveAffairRewardReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetActiveAffairRewardReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetActiveAffairRewardReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetActiveAffairRewardReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveAffairRewardReq.type)
  return type_;
}
inline void GetActiveAffairRewardReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.GetActiveAffairRewardReq.type)
}

// -------------------------------------------------------------------

// FinalRewardCPP

// optional .DataCommon.EquipmentAllCPP equips = 1;
inline bool FinalRewardCPP::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinalRewardCPP::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinalRewardCPP::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinalRewardCPP::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& FinalRewardCPP::equips() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.FinalRewardCPP.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* FinalRewardCPP::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.FinalRewardCPP.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* FinalRewardCPP::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void FinalRewardCPP::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.FinalRewardCPP.equips)
}

// optional .DataCommon.CommonBaseRewardCPP base = 2;
inline bool FinalRewardCPP::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinalRewardCPP::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinalRewardCPP::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinalRewardCPP::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& FinalRewardCPP::base() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.FinalRewardCPP.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* FinalRewardCPP::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.FinalRewardCPP.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* FinalRewardCPP::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void FinalRewardCPP::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.FinalRewardCPP.base)
}

// -------------------------------------------------------------------

// GetActiveAffairRewardResp

// required .ProtoNPCActivity.FinalRewardCPP reward = 1;
inline bool GetActiveAffairRewardResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetActiveAffairRewardResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetActiveAffairRewardResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetActiveAffairRewardResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoNPCActivity::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoNPCActivity::FinalRewardCPP& GetActiveAffairRewardResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveAffairRewardResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoNPCActivity::FinalRewardCPP* GetActiveAffairRewardResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoNPCActivity::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.GetActiveAffairRewardResp.reward)
  return reward_;
}
inline ::ProtoNPCActivity::FinalRewardCPP* GetActiveAffairRewardResp::release_reward() {
  clear_has_reward();
  ::ProtoNPCActivity::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetActiveAffairRewardResp::set_allocated_reward(::ProtoNPCActivity::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.GetActiveAffairRewardResp.reward)
}

// required .ProtoNPCActivity.NPCActivityCPP activity = 2;
inline bool GetActiveAffairRewardResp::has_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetActiveAffairRewardResp::set_has_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetActiveAffairRewardResp::clear_has_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetActiveAffairRewardResp::clear_activity() {
  if (activity_ != NULL) activity_->::ProtoNPCActivity::NPCActivityCPP::Clear();
  clear_has_activity();
}
inline const ::ProtoNPCActivity::NPCActivityCPP& GetActiveAffairRewardResp::activity() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveAffairRewardResp.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* GetActiveAffairRewardResp::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::ProtoNPCActivity::NPCActivityCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.GetActiveAffairRewardResp.activity)
  return activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* GetActiveAffairRewardResp::release_activity() {
  clear_has_activity();
  ::ProtoNPCActivity::NPCActivityCPP* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void GetActiveAffairRewardResp::set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.GetActiveAffairRewardResp.activity)
}

// required uint32 cash = 3;
inline bool GetActiveAffairRewardResp::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetActiveAffairRewardResp::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetActiveAffairRewardResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetActiveAffairRewardResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 GetActiveAffairRewardResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveAffairRewardResp.cash)
  return cash_;
}
inline void GetActiveAffairRewardResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.GetActiveAffairRewardResp.cash)
}

// -------------------------------------------------------------------

// GetActiveValueRewardReq

// required uint32 index = 1;
inline bool GetActiveValueRewardReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetActiveValueRewardReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetActiveValueRewardReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetActiveValueRewardReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GetActiveValueRewardReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveValueRewardReq.index)
  return index_;
}
inline void GetActiveValueRewardReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCActivity.GetActiveValueRewardReq.index)
}

// -------------------------------------------------------------------

// GetActiveValueRewardResp

// required .ProtoNPCActivity.FinalRewardCPP reward = 1;
inline bool GetActiveValueRewardResp::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetActiveValueRewardResp::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetActiveValueRewardResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetActiveValueRewardResp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoNPCActivity::FinalRewardCPP::Clear();
  clear_has_reward();
}
inline const ::ProtoNPCActivity::FinalRewardCPP& GetActiveValueRewardResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveValueRewardResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoNPCActivity::FinalRewardCPP* GetActiveValueRewardResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoNPCActivity::FinalRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.GetActiveValueRewardResp.reward)
  return reward_;
}
inline ::ProtoNPCActivity::FinalRewardCPP* GetActiveValueRewardResp::release_reward() {
  clear_has_reward();
  ::ProtoNPCActivity::FinalRewardCPP* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetActiveValueRewardResp::set_allocated_reward(::ProtoNPCActivity::FinalRewardCPP* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.GetActiveValueRewardResp.reward)
}

// required .ProtoNPCActivity.NPCActivityCPP activity = 2;
inline bool GetActiveValueRewardResp::has_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetActiveValueRewardResp::set_has_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetActiveValueRewardResp::clear_has_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetActiveValueRewardResp::clear_activity() {
  if (activity_ != NULL) activity_->::ProtoNPCActivity::NPCActivityCPP::Clear();
  clear_has_activity();
}
inline const ::ProtoNPCActivity::NPCActivityCPP& GetActiveValueRewardResp::activity() const {
  // @@protoc_insertion_point(field_get:ProtoNPCActivity.GetActiveValueRewardResp.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* GetActiveValueRewardResp::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::ProtoNPCActivity::NPCActivityCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCActivity.GetActiveValueRewardResp.activity)
  return activity_;
}
inline ::ProtoNPCActivity::NPCActivityCPP* GetActiveValueRewardResp::release_activity() {
  clear_has_activity();
  ::ProtoNPCActivity::NPCActivityCPP* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void GetActiveValueRewardResp::set_allocated_activity(::ProtoNPCActivity::NPCActivityCPP* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCActivity.GetActiveValueRewardResp.activity)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNPCActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoNPCActivity_2eproto__INCLUDED
