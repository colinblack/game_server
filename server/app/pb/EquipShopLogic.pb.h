// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipShopLogic.proto

#ifndef PROTOBUF_EquipShopLogic_2eproto__INCLUDED
#define PROTOBUF_EquipShopLogic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace EquipShopLogic {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EquipShopLogic_2eproto();
void protobuf_AssignDesc_EquipShopLogic_2eproto();
void protobuf_ShutdownFile_EquipShopLogic_2eproto();

class RefreshReq;
class RefreshResp;
class SuperRefreshReq;
class SuperRefreshResp;
class CutRefreshReq;
class CutRefreshResp;
class PurchaseEquipReq;
class PurchaseEquipResp;
class ExchangeWingmanReq;
class ExchangeWingmanResp;

// ===================================================================

class RefreshReq : public ::google::protobuf::Message {
 public:
  RefreshReq();
  virtual ~RefreshReq();

  RefreshReq(const RefreshReq& from);

  inline RefreshReq& operator=(const RefreshReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshReq& default_instance();

  void Swap(RefreshReq* other);

  // implements Message ----------------------------------------------

  RefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshReq& from);
  void MergeFrom(const RefreshReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EquipShopLogic.RefreshReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static RefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class RefreshResp : public ::google::protobuf::Message {
 public:
  RefreshResp();
  virtual ~RefreshResp();

  RefreshResp(const RefreshResp& from);

  inline RefreshResp& operator=(const RefreshResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshResp& default_instance();

  void Swap(RefreshResp* other);

  // implements Message ----------------------------------------------

  RefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshResp& from);
  void MergeFrom(const RefreshResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cdtime = 1;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCdtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);

  // repeated .DataCommon.EquipShopCPP equippool = 2;
  inline int equippool_size() const;
  inline void clear_equippool();
  static const int kEquippoolFieldNumber = 2;
  inline const ::DataCommon::EquipShopCPP& equippool(int index) const;
  inline ::DataCommon::EquipShopCPP* mutable_equippool(int index);
  inline ::DataCommon::EquipShopCPP* add_equippool();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
      equippool() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
      mutable_equippool();

  // @@protoc_insertion_point(class_scope:EquipShopLogic.RefreshResp)
 private:
  inline void set_has_cdtime();
  inline void clear_has_cdtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP > equippool_;
  ::google::protobuf::uint32 cdtime_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static RefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class SuperRefreshReq : public ::google::protobuf::Message {
 public:
  SuperRefreshReq();
  virtual ~SuperRefreshReq();

  SuperRefreshReq(const SuperRefreshReq& from);

  inline SuperRefreshReq& operator=(const SuperRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperRefreshReq& default_instance();

  void Swap(SuperRefreshReq* other);

  // implements Message ----------------------------------------------

  SuperRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperRefreshReq& from);
  void MergeFrom(const SuperRefreshReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EquipShopLogic.SuperRefreshReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static SuperRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class SuperRefreshResp : public ::google::protobuf::Message {
 public:
  SuperRefreshResp();
  virtual ~SuperRefreshResp();

  SuperRefreshResp(const SuperRefreshResp& from);

  inline SuperRefreshResp& operator=(const SuperRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperRefreshResp& default_instance();

  void Swap(SuperRefreshResp* other);

  // implements Message ----------------------------------------------

  SuperRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperRefreshResp& from);
  void MergeFrom(const SuperRefreshResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // repeated .DataCommon.EquipShopCPP equippool = 2;
  inline int equippool_size() const;
  inline void clear_equippool();
  static const int kEquippoolFieldNumber = 2;
  inline const ::DataCommon::EquipShopCPP& equippool(int index) const;
  inline ::DataCommon::EquipShopCPP* mutable_equippool(int index);
  inline ::DataCommon::EquipShopCPP* add_equippool();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
      equippool() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
      mutable_equippool();

  // @@protoc_insertion_point(class_scope:EquipShopLogic.SuperRefreshResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP > equippool_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static SuperRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class CutRefreshReq : public ::google::protobuf::Message {
 public:
  CutRefreshReq();
  virtual ~CutRefreshReq();

  CutRefreshReq(const CutRefreshReq& from);

  inline CutRefreshReq& operator=(const CutRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutRefreshReq& default_instance();

  void Swap(CutRefreshReq* other);

  // implements Message ----------------------------------------------

  CutRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutRefreshReq& from);
  void MergeFrom(const CutRefreshReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EquipShopLogic.CutRefreshReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static CutRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class CutRefreshResp : public ::google::protobuf::Message {
 public:
  CutRefreshResp();
  virtual ~CutRefreshResp();

  CutRefreshResp(const CutRefreshResp& from);

  inline CutRefreshResp& operator=(const CutRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutRefreshResp& default_instance();

  void Swap(CutRefreshResp* other);

  // implements Message ----------------------------------------------

  CutRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutRefreshResp& from);
  void MergeFrom(const CutRefreshResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cdtime = 1;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCdtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipShopLogic.CutRefreshResp)
 private:
  inline void set_has_cdtime();
  inline void clear_has_cdtime();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cdtime_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static CutRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseEquipReq : public ::google::protobuf::Message {
 public:
  PurchaseEquipReq();
  virtual ~PurchaseEquipReq();

  PurchaseEquipReq(const PurchaseEquipReq& from);

  inline PurchaseEquipReq& operator=(const PurchaseEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseEquipReq& default_instance();

  void Swap(PurchaseEquipReq* other);

  // implements Message ----------------------------------------------

  PurchaseEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseEquipReq& from);
  void MergeFrom(const PurchaseEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // required uint32 eqid = 2;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 2;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipShopLogic.PurchaseEquipReq)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_eqid();
  inline void clear_has_eqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 eqid_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static PurchaseEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseEquipResp : public ::google::protobuf::Message {
 public:
  PurchaseEquipResp();
  virtual ~PurchaseEquipResp();

  PurchaseEquipResp(const PurchaseEquipResp& from);

  inline PurchaseEquipResp& operator=(const PurchaseEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseEquipResp& default_instance();

  void Swap(PurchaseEquipResp* other);

  // implements Message ----------------------------------------------

  PurchaseEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseEquipResp& from);
  void MergeFrom(const PurchaseEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.EquipmentCPP equip = 1;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 1;
  inline const ::DataCommon::EquipmentCPP& equip() const;
  inline ::DataCommon::EquipmentCPP* mutable_equip();
  inline ::DataCommon::EquipmentCPP* release_equip();
  inline void set_allocated_equip(::DataCommon::EquipmentCPP* equip);

  // required uint32 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // repeated .DataCommon.EquipShopCPP equippool = 3;
  inline int equippool_size() const;
  inline void clear_equippool();
  static const int kEquippoolFieldNumber = 3;
  inline const ::DataCommon::EquipShopCPP& equippool(int index) const;
  inline ::DataCommon::EquipShopCPP* mutable_equippool(int index);
  inline ::DataCommon::EquipShopCPP* add_equippool();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
      equippool() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
      mutable_equippool();

  // required uint32 order = 4;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);

  // required uint32 iron = 5;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 5;
  inline ::google::protobuf::uint32 iron() const;
  inline void set_iron(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipShopLogic.PurchaseEquipResp)
 private:
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_iron();
  inline void clear_has_iron();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentCPP* equip_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP > equippool_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 iron_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static PurchaseEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeWingmanReq : public ::google::protobuf::Message {
 public:
  ExchangeWingmanReq();
  virtual ~ExchangeWingmanReq();

  ExchangeWingmanReq(const ExchangeWingmanReq& from);

  inline ExchangeWingmanReq& operator=(const ExchangeWingmanReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeWingmanReq& default_instance();

  void Swap(ExchangeWingmanReq* other);

  // implements Message ----------------------------------------------

  ExchangeWingmanReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeWingmanReq& from);
  void MergeFrom(const ExchangeWingmanReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eqid = 1;
  inline bool has_eqid() const;
  inline void clear_eqid();
  static const int kEqidFieldNumber = 1;
  inline ::google::protobuf::uint32 eqid() const;
  inline void set_eqid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipShopLogic.ExchangeWingmanReq)
 private:
  inline void set_has_eqid();
  inline void clear_has_eqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eqid_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static ExchangeWingmanReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeWingmanResp : public ::google::protobuf::Message {
 public:
  ExchangeWingmanResp();
  virtual ~ExchangeWingmanResp();

  ExchangeWingmanResp(const ExchangeWingmanResp& from);

  inline ExchangeWingmanResp& operator=(const ExchangeWingmanResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeWingmanResp& default_instance();

  void Swap(ExchangeWingmanResp* other);

  // implements Message ----------------------------------------------

  ExchangeWingmanResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeWingmanResp& from);
  void MergeFrom(const ExchangeWingmanResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // required uint32 ticket = 2;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 2;
  inline ::google::protobuf::uint32 ticket() const;
  inline void set_ticket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipShopLogic.ExchangeWingmanResp)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_ticket();
  inline void clear_has_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::google::protobuf::uint32 ticket_;
  friend void  protobuf_AddDesc_EquipShopLogic_2eproto();
  friend void protobuf_AssignDesc_EquipShopLogic_2eproto();
  friend void protobuf_ShutdownFile_EquipShopLogic_2eproto();

  void InitAsDefaultInstance();
  static ExchangeWingmanResp* default_instance_;
};
// ===================================================================


// ===================================================================

// RefreshReq

// -------------------------------------------------------------------

// RefreshResp

// required uint32 cdtime = 1;
inline bool RefreshResp::has_cdtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshResp::set_has_cdtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshResp::clear_has_cdtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshResp::clear_cdtime() {
  cdtime_ = 0u;
  clear_has_cdtime();
}
inline ::google::protobuf::uint32 RefreshResp::cdtime() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.RefreshResp.cdtime)
  return cdtime_;
}
inline void RefreshResp::set_cdtime(::google::protobuf::uint32 value) {
  set_has_cdtime();
  cdtime_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.RefreshResp.cdtime)
}

// repeated .DataCommon.EquipShopCPP equippool = 2;
inline int RefreshResp::equippool_size() const {
  return equippool_.size();
}
inline void RefreshResp::clear_equippool() {
  equippool_.Clear();
}
inline const ::DataCommon::EquipShopCPP& RefreshResp::equippool(int index) const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.RefreshResp.equippool)
  return equippool_.Get(index);
}
inline ::DataCommon::EquipShopCPP* RefreshResp::mutable_equippool(int index) {
  // @@protoc_insertion_point(field_mutable:EquipShopLogic.RefreshResp.equippool)
  return equippool_.Mutable(index);
}
inline ::DataCommon::EquipShopCPP* RefreshResp::add_equippool() {
  // @@protoc_insertion_point(field_add:EquipShopLogic.RefreshResp.equippool)
  return equippool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
RefreshResp::equippool() const {
  // @@protoc_insertion_point(field_list:EquipShopLogic.RefreshResp.equippool)
  return equippool_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
RefreshResp::mutable_equippool() {
  // @@protoc_insertion_point(field_mutable_list:EquipShopLogic.RefreshResp.equippool)
  return &equippool_;
}

// -------------------------------------------------------------------

// SuperRefreshReq

// -------------------------------------------------------------------

// SuperRefreshResp

// required uint32 cash = 1;
inline bool SuperRefreshResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperRefreshResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperRefreshResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperRefreshResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 SuperRefreshResp::cash() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.SuperRefreshResp.cash)
  return cash_;
}
inline void SuperRefreshResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.SuperRefreshResp.cash)
}

// repeated .DataCommon.EquipShopCPP equippool = 2;
inline int SuperRefreshResp::equippool_size() const {
  return equippool_.size();
}
inline void SuperRefreshResp::clear_equippool() {
  equippool_.Clear();
}
inline const ::DataCommon::EquipShopCPP& SuperRefreshResp::equippool(int index) const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.SuperRefreshResp.equippool)
  return equippool_.Get(index);
}
inline ::DataCommon::EquipShopCPP* SuperRefreshResp::mutable_equippool(int index) {
  // @@protoc_insertion_point(field_mutable:EquipShopLogic.SuperRefreshResp.equippool)
  return equippool_.Mutable(index);
}
inline ::DataCommon::EquipShopCPP* SuperRefreshResp::add_equippool() {
  // @@protoc_insertion_point(field_add:EquipShopLogic.SuperRefreshResp.equippool)
  return equippool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
SuperRefreshResp::equippool() const {
  // @@protoc_insertion_point(field_list:EquipShopLogic.SuperRefreshResp.equippool)
  return equippool_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
SuperRefreshResp::mutable_equippool() {
  // @@protoc_insertion_point(field_mutable_list:EquipShopLogic.SuperRefreshResp.equippool)
  return &equippool_;
}

// -------------------------------------------------------------------

// CutRefreshReq

// -------------------------------------------------------------------

// CutRefreshResp

// required uint32 cdtime = 1;
inline bool CutRefreshResp::has_cdtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CutRefreshResp::set_has_cdtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CutRefreshResp::clear_has_cdtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CutRefreshResp::clear_cdtime() {
  cdtime_ = 0u;
  clear_has_cdtime();
}
inline ::google::protobuf::uint32 CutRefreshResp::cdtime() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.CutRefreshResp.cdtime)
  return cdtime_;
}
inline void CutRefreshResp::set_cdtime(::google::protobuf::uint32 value) {
  set_has_cdtime();
  cdtime_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.CutRefreshResp.cdtime)
}

// required uint32 cash = 2;
inline bool CutRefreshResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CutRefreshResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CutRefreshResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CutRefreshResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CutRefreshResp::cash() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.CutRefreshResp.cash)
  return cash_;
}
inline void CutRefreshResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.CutRefreshResp.cash)
}

// -------------------------------------------------------------------

// PurchaseEquipReq

// required uint32 pid = 1;
inline bool PurchaseEquipReq::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseEquipReq::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseEquipReq::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseEquipReq::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 PurchaseEquipReq::pid() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipReq.pid)
  return pid_;
}
inline void PurchaseEquipReq::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.PurchaseEquipReq.pid)
}

// required uint32 eqid = 2;
inline bool PurchaseEquipReq::has_eqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PurchaseEquipReq::set_has_eqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PurchaseEquipReq::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PurchaseEquipReq::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 PurchaseEquipReq::eqid() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipReq.eqid)
  return eqid_;
}
inline void PurchaseEquipReq::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.PurchaseEquipReq.eqid)
}

// -------------------------------------------------------------------

// PurchaseEquipResp

// optional .DataCommon.EquipmentCPP equip = 1;
inline bool PurchaseEquipResp::has_equip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseEquipResp::set_has_equip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseEquipResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseEquipResp::clear_equip() {
  if (equip_ != NULL) equip_->::DataCommon::EquipmentCPP::Clear();
  clear_has_equip();
}
inline const ::DataCommon::EquipmentCPP& PurchaseEquipResp::equip() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipResp.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DataCommon::EquipmentCPP* PurchaseEquipResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::DataCommon::EquipmentCPP;
  // @@protoc_insertion_point(field_mutable:EquipShopLogic.PurchaseEquipResp.equip)
  return equip_;
}
inline ::DataCommon::EquipmentCPP* PurchaseEquipResp::release_equip() {
  clear_has_equip();
  ::DataCommon::EquipmentCPP* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void PurchaseEquipResp::set_allocated_equip(::DataCommon::EquipmentCPP* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:EquipShopLogic.PurchaseEquipResp.equip)
}

// required uint32 coin = 2;
inline bool PurchaseEquipResp::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PurchaseEquipResp::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PurchaseEquipResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PurchaseEquipResp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 PurchaseEquipResp::coin() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipResp.coin)
  return coin_;
}
inline void PurchaseEquipResp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.PurchaseEquipResp.coin)
}

// repeated .DataCommon.EquipShopCPP equippool = 3;
inline int PurchaseEquipResp::equippool_size() const {
  return equippool_.size();
}
inline void PurchaseEquipResp::clear_equippool() {
  equippool_.Clear();
}
inline const ::DataCommon::EquipShopCPP& PurchaseEquipResp::equippool(int index) const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipResp.equippool)
  return equippool_.Get(index);
}
inline ::DataCommon::EquipShopCPP* PurchaseEquipResp::mutable_equippool(int index) {
  // @@protoc_insertion_point(field_mutable:EquipShopLogic.PurchaseEquipResp.equippool)
  return equippool_.Mutable(index);
}
inline ::DataCommon::EquipShopCPP* PurchaseEquipResp::add_equippool() {
  // @@protoc_insertion_point(field_add:EquipShopLogic.PurchaseEquipResp.equippool)
  return equippool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >&
PurchaseEquipResp::equippool() const {
  // @@protoc_insertion_point(field_list:EquipShopLogic.PurchaseEquipResp.equippool)
  return equippool_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::EquipShopCPP >*
PurchaseEquipResp::mutable_equippool() {
  // @@protoc_insertion_point(field_mutable_list:EquipShopLogic.PurchaseEquipResp.equippool)
  return &equippool_;
}

// required uint32 order = 4;
inline bool PurchaseEquipResp::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PurchaseEquipResp::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PurchaseEquipResp::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PurchaseEquipResp::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PurchaseEquipResp::order() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipResp.order)
  return order_;
}
inline void PurchaseEquipResp::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.PurchaseEquipResp.order)
}

// required uint32 iron = 5;
inline bool PurchaseEquipResp::has_iron() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PurchaseEquipResp::set_has_iron() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PurchaseEquipResp::clear_has_iron() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PurchaseEquipResp::clear_iron() {
  iron_ = 0u;
  clear_has_iron();
}
inline ::google::protobuf::uint32 PurchaseEquipResp::iron() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.PurchaseEquipResp.iron)
  return iron_;
}
inline void PurchaseEquipResp::set_iron(::google::protobuf::uint32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.PurchaseEquipResp.iron)
}

// -------------------------------------------------------------------

// ExchangeWingmanReq

// required uint32 eqid = 1;
inline bool ExchangeWingmanReq::has_eqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeWingmanReq::set_has_eqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeWingmanReq::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeWingmanReq::clear_eqid() {
  eqid_ = 0u;
  clear_has_eqid();
}
inline ::google::protobuf::uint32 ExchangeWingmanReq::eqid() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.ExchangeWingmanReq.eqid)
  return eqid_;
}
inline void ExchangeWingmanReq::set_eqid(::google::protobuf::uint32 value) {
  set_has_eqid();
  eqid_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.ExchangeWingmanReq.eqid)
}

// -------------------------------------------------------------------

// ExchangeWingmanResp

// required .DataCommon.EquipmentAllCPP equips = 1;
inline bool ExchangeWingmanResp::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeWingmanResp::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeWingmanResp::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeWingmanResp::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& ExchangeWingmanResp::equips() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.ExchangeWingmanResp.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* ExchangeWingmanResp::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:EquipShopLogic.ExchangeWingmanResp.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* ExchangeWingmanResp::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void ExchangeWingmanResp::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:EquipShopLogic.ExchangeWingmanResp.equips)
}

// required uint32 ticket = 2;
inline bool ExchangeWingmanResp::has_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeWingmanResp::set_has_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeWingmanResp::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeWingmanResp::clear_ticket() {
  ticket_ = 0u;
  clear_has_ticket();
}
inline ::google::protobuf::uint32 ExchangeWingmanResp::ticket() const {
  // @@protoc_insertion_point(field_get:EquipShopLogic.ExchangeWingmanResp.ticket)
  return ticket_;
}
inline void ExchangeWingmanResp::set_ticket(::google::protobuf::uint32 value) {
  set_has_ticket();
  ticket_ = value;
  // @@protoc_insertion_point(field_set:EquipShopLogic.ExchangeWingmanResp.ticket)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EquipShopLogic

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EquipShopLogic_2eproto__INCLUDED
