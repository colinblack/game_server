// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoDailyMission.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoDailyMission.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoDailyMission {

namespace {

const ::google::protobuf::Descriptor* DailyMissionCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyMissionCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyMissionAllCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyMissionAllCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshDailyMissionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshDailyMissionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshDailyMissionResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshDailyMissionResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CashRefreshMissionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CashRefreshMissionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CashRefreshMissionResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CashRefreshMissionResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenDailyMissionWindowReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenDailyMissionWindowReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenDailyMissionWindowResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenDailyMissionWindowResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushDailyMissionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushDailyMissionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDailyMissionRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDailyMissionRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDailyMissionRewardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDailyMissionRewardResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoDailyMission_2eproto() {
  protobuf_AddDesc_ProtoDailyMission_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoDailyMission.proto");
  GOOGLE_CHECK(file != NULL);
  DailyMissionCPP_descriptor_ = file->message_type(0);
  static const int DailyMissionCPP_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, missid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, current_),
  };
  DailyMissionCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyMissionCPP_descriptor_,
      DailyMissionCPP::default_instance_,
      DailyMissionCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyMissionCPP));
  DailyMissionAllCPP_descriptor_ = file->message_type(1);
  static const int DailyMissionAllCPP_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionAllCPP, missions_),
  };
  DailyMissionAllCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyMissionAllCPP_descriptor_,
      DailyMissionAllCPP::default_instance_,
      DailyMissionAllCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionAllCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyMissionAllCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyMissionAllCPP));
  RefreshDailyMissionReq_descriptor_ = file->message_type(2);
  static const int RefreshDailyMissionReq_offsets_[1] = {
  };
  RefreshDailyMissionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshDailyMissionReq_descriptor_,
      RefreshDailyMissionReq::default_instance_,
      RefreshDailyMissionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshDailyMissionReq));
  RefreshDailyMissionResp_descriptor_ = file->message_type(3);
  static const int RefreshDailyMissionResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionResp, missionall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionResp, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionResp, freetimes_),
  };
  RefreshDailyMissionResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshDailyMissionResp_descriptor_,
      RefreshDailyMissionResp::default_instance_,
      RefreshDailyMissionResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshDailyMissionResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshDailyMissionResp));
  CashRefreshMissionReq_descriptor_ = file->message_type(4);
  static const int CashRefreshMissionReq_offsets_[1] = {
  };
  CashRefreshMissionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CashRefreshMissionReq_descriptor_,
      CashRefreshMissionReq::default_instance_,
      CashRefreshMissionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CashRefreshMissionReq));
  CashRefreshMissionResp_descriptor_ = file->message_type(5);
  static const int CashRefreshMissionResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionResp, missionall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionResp, cash_),
  };
  CashRefreshMissionResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CashRefreshMissionResp_descriptor_,
      CashRefreshMissionResp::default_instance_,
      CashRefreshMissionResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashRefreshMissionResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CashRefreshMissionResp));
  OpenDailyMissionWindowReq_descriptor_ = file->message_type(6);
  static const int OpenDailyMissionWindowReq_offsets_[1] = {
  };
  OpenDailyMissionWindowReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenDailyMissionWindowReq_descriptor_,
      OpenDailyMissionWindowReq::default_instance_,
      OpenDailyMissionWindowReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDailyMissionWindowReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDailyMissionWindowReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenDailyMissionWindowReq));
  OpenDailyMissionWindowResp_descriptor_ = file->message_type(7);
  static const int OpenDailyMissionWindowResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDailyMissionWindowResp, missionall_),
  };
  OpenDailyMissionWindowResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenDailyMissionWindowResp_descriptor_,
      OpenDailyMissionWindowResp::default_instance_,
      OpenDailyMissionWindowResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDailyMissionWindowResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDailyMissionWindowResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenDailyMissionWindowResp));
  PushDailyMissionReq_descriptor_ = file->message_type(8);
  static const int PushDailyMissionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushDailyMissionReq, missionall_),
  };
  PushDailyMissionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushDailyMissionReq_descriptor_,
      PushDailyMissionReq::default_instance_,
      PushDailyMissionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushDailyMissionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushDailyMissionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushDailyMissionReq));
  GetDailyMissionRewardReq_descriptor_ = file->message_type(9);
  static const int GetDailyMissionRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardReq, missid_),
  };
  GetDailyMissionRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDailyMissionRewardReq_descriptor_,
      GetDailyMissionRewardReq::default_instance_,
      GetDailyMissionRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDailyMissionRewardReq));
  GetDailyMissionRewardResp_descriptor_ = file->message_type(10);
  static const int GetDailyMissionRewardResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardResp, mission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardResp, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardResp, reward_times_),
  };
  GetDailyMissionRewardResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDailyMissionRewardResp_descriptor_,
      GetDailyMissionRewardResp::default_instance_,
      GetDailyMissionRewardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyMissionRewardResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDailyMissionRewardResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoDailyMission_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyMissionCPP_descriptor_, &DailyMissionCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyMissionAllCPP_descriptor_, &DailyMissionAllCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshDailyMissionReq_descriptor_, &RefreshDailyMissionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshDailyMissionResp_descriptor_, &RefreshDailyMissionResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CashRefreshMissionReq_descriptor_, &CashRefreshMissionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CashRefreshMissionResp_descriptor_, &CashRefreshMissionResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenDailyMissionWindowReq_descriptor_, &OpenDailyMissionWindowReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenDailyMissionWindowResp_descriptor_, &OpenDailyMissionWindowResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushDailyMissionReq_descriptor_, &PushDailyMissionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDailyMissionRewardReq_descriptor_, &GetDailyMissionRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDailyMissionRewardResp_descriptor_, &GetDailyMissionRewardResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoDailyMission_2eproto() {
  delete DailyMissionCPP::default_instance_;
  delete DailyMissionCPP_reflection_;
  delete DailyMissionAllCPP::default_instance_;
  delete DailyMissionAllCPP_reflection_;
  delete RefreshDailyMissionReq::default_instance_;
  delete RefreshDailyMissionReq_reflection_;
  delete RefreshDailyMissionResp::default_instance_;
  delete RefreshDailyMissionResp_reflection_;
  delete CashRefreshMissionReq::default_instance_;
  delete CashRefreshMissionReq_reflection_;
  delete CashRefreshMissionResp::default_instance_;
  delete CashRefreshMissionResp_reflection_;
  delete OpenDailyMissionWindowReq::default_instance_;
  delete OpenDailyMissionWindowReq_reflection_;
  delete OpenDailyMissionWindowResp::default_instance_;
  delete OpenDailyMissionWindowResp_reflection_;
  delete PushDailyMissionReq::default_instance_;
  delete PushDailyMissionReq_reflection_;
  delete GetDailyMissionRewardReq::default_instance_;
  delete GetDailyMissionRewardReq_reflection_;
  delete GetDailyMissionRewardResp::default_instance_;
  delete GetDailyMissionRewardResp_reflection_;
}

void protobuf_AddDesc_ProtoDailyMission_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ProtoDailyMission.proto\022\021ProtoDailyMis"
    "sion\"P\n\017DailyMissionCPP\022\016\n\006missid\030\001 \002(\r\022"
    "\014\n\004star\030\002 \002(\r\022\016\n\006status\030\003 \002(\r\022\017\n\007current"
    "\030\004 \002(\r\"J\n\022DailyMissionAllCPP\0224\n\010missions"
    "\030\001 \003(\0132\".ProtoDailyMission.DailyMissionC"
    "PP\"\030\n\026RefreshDailyMissionReq\"|\n\027RefreshD"
    "ailyMissionResp\0229\n\nmissionall\030\001 \002(\0132%.Pr"
    "otoDailyMission.DailyMissionAllCPP\022\023\n\013re"
    "freshtime\030\002 \002(\r\022\021\n\tfreetimes\030\003 \002(\r\"\027\n\025Ca"
    "shRefreshMissionReq\"a\n\026CashRefreshMissio"
    "nResp\0229\n\nmissionall\030\001 \002(\0132%.ProtoDailyMi"
    "ssion.DailyMissionAllCPP\022\014\n\004cash\030\002 \002(\r\"\033"
    "\n\031OpenDailyMissionWindowReq\"W\n\032OpenDaily"
    "MissionWindowResp\0229\n\nmissionall\030\001 \002(\0132%."
    "ProtoDailyMission.DailyMissionAllCPP\"P\n\023"
    "PushDailyMissionReq\0229\n\nmissionall\030\001 \002(\0132"
    "%.ProtoDailyMission.DailyMissionAllCPP\"*"
    "\n\030GetDailyMissionRewardReq\022\016\n\006missid\030\001 \002"
    "(\r\"s\n\031GetDailyMissionRewardResp\0223\n\007missi"
    "on\030\001 \002(\0132\".ProtoDailyMission.DailyMissio"
    "nCPP\022\013\n\003exp\030\002 \002(\004\022\024\n\014reward_times\030\003 \002(\r", 839);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoDailyMission.proto", &protobuf_RegisterTypes);
  DailyMissionCPP::default_instance_ = new DailyMissionCPP();
  DailyMissionAllCPP::default_instance_ = new DailyMissionAllCPP();
  RefreshDailyMissionReq::default_instance_ = new RefreshDailyMissionReq();
  RefreshDailyMissionResp::default_instance_ = new RefreshDailyMissionResp();
  CashRefreshMissionReq::default_instance_ = new CashRefreshMissionReq();
  CashRefreshMissionResp::default_instance_ = new CashRefreshMissionResp();
  OpenDailyMissionWindowReq::default_instance_ = new OpenDailyMissionWindowReq();
  OpenDailyMissionWindowResp::default_instance_ = new OpenDailyMissionWindowResp();
  PushDailyMissionReq::default_instance_ = new PushDailyMissionReq();
  GetDailyMissionRewardReq::default_instance_ = new GetDailyMissionRewardReq();
  GetDailyMissionRewardResp::default_instance_ = new GetDailyMissionRewardResp();
  DailyMissionCPP::default_instance_->InitAsDefaultInstance();
  DailyMissionAllCPP::default_instance_->InitAsDefaultInstance();
  RefreshDailyMissionReq::default_instance_->InitAsDefaultInstance();
  RefreshDailyMissionResp::default_instance_->InitAsDefaultInstance();
  CashRefreshMissionReq::default_instance_->InitAsDefaultInstance();
  CashRefreshMissionResp::default_instance_->InitAsDefaultInstance();
  OpenDailyMissionWindowReq::default_instance_->InitAsDefaultInstance();
  OpenDailyMissionWindowResp::default_instance_->InitAsDefaultInstance();
  PushDailyMissionReq::default_instance_->InitAsDefaultInstance();
  GetDailyMissionRewardReq::default_instance_->InitAsDefaultInstance();
  GetDailyMissionRewardResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoDailyMission_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoDailyMission_2eproto {
  StaticDescriptorInitializer_ProtoDailyMission_2eproto() {
    protobuf_AddDesc_ProtoDailyMission_2eproto();
  }
} static_descriptor_initializer_ProtoDailyMission_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DailyMissionCPP::kMissidFieldNumber;
const int DailyMissionCPP::kStarFieldNumber;
const int DailyMissionCPP::kStatusFieldNumber;
const int DailyMissionCPP::kCurrentFieldNumber;
#endif  // !_MSC_VER

DailyMissionCPP::DailyMissionCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.DailyMissionCPP)
}

void DailyMissionCPP::InitAsDefaultInstance() {
}

DailyMissionCPP::DailyMissionCPP(const DailyMissionCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.DailyMissionCPP)
}

void DailyMissionCPP::SharedCtor() {
  _cached_size_ = 0;
  missid_ = 0u;
  star_ = 0u;
  status_ = 0u;
  current_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyMissionCPP::~DailyMissionCPP() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.DailyMissionCPP)
  SharedDtor();
}

void DailyMissionCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyMissionCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyMissionCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyMissionCPP_descriptor_;
}

const DailyMissionCPP& DailyMissionCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

DailyMissionCPP* DailyMissionCPP::default_instance_ = NULL;

DailyMissionCPP* DailyMissionCPP::New() const {
  return new DailyMissionCPP;
}

void DailyMissionCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DailyMissionCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(missid_, current_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyMissionCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.DailyMissionCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 missid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &missid_)));
          set_has_missid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_star;
        break;
      }

      // required uint32 star = 2;
      case 2: {
        if (tag == 16) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // required uint32 status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_current;
        break;
      }

      // required uint32 current = 4;
      case 4: {
        if (tag == 32) {
         parse_current:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_)));
          set_has_current();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.DailyMissionCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.DailyMissionCPP)
  return false;
#undef DO_
}

void DailyMissionCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.DailyMissionCPP)
  // required uint32 missid = 1;
  if (has_missid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->missid(), output);
  }

  // required uint32 star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star(), output);
  }

  // required uint32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // required uint32 current = 4;
  if (has_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->current(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.DailyMissionCPP)
}

::google::protobuf::uint8* DailyMissionCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.DailyMissionCPP)
  // required uint32 missid = 1;
  if (has_missid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->missid(), target);
  }

  // required uint32 star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star(), target);
  }

  // required uint32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // required uint32 current = 4;
  if (has_current()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->current(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.DailyMissionCPP)
  return target;
}

int DailyMissionCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 missid = 1;
    if (has_missid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->missid());
    }

    // required uint32 star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // required uint32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // required uint32 current = 4;
    if (has_current()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyMissionCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyMissionCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyMissionCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyMissionCPP::MergeFrom(const DailyMissionCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missid()) {
      set_missid(from.missid());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_current()) {
      set_current(from.current());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyMissionCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyMissionCPP::CopyFrom(const DailyMissionCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyMissionCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void DailyMissionCPP::Swap(DailyMissionCPP* other) {
  if (other != this) {
    std::swap(missid_, other->missid_);
    std::swap(star_, other->star_);
    std::swap(status_, other->status_);
    std::swap(current_, other->current_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyMissionCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyMissionCPP_descriptor_;
  metadata.reflection = DailyMissionCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyMissionAllCPP::kMissionsFieldNumber;
#endif  // !_MSC_VER

DailyMissionAllCPP::DailyMissionAllCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.DailyMissionAllCPP)
}

void DailyMissionAllCPP::InitAsDefaultInstance() {
}

DailyMissionAllCPP::DailyMissionAllCPP(const DailyMissionAllCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.DailyMissionAllCPP)
}

void DailyMissionAllCPP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyMissionAllCPP::~DailyMissionAllCPP() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.DailyMissionAllCPP)
  SharedDtor();
}

void DailyMissionAllCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyMissionAllCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyMissionAllCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyMissionAllCPP_descriptor_;
}

const DailyMissionAllCPP& DailyMissionAllCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

DailyMissionAllCPP* DailyMissionAllCPP::default_instance_ = NULL;

DailyMissionAllCPP* DailyMissionAllCPP::New() const {
  return new DailyMissionAllCPP;
}

void DailyMissionAllCPP::Clear() {
  missions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyMissionAllCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.DailyMissionAllCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
      case 1: {
        if (tag == 10) {
         parse_missions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_missions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_missions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.DailyMissionAllCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.DailyMissionAllCPP)
  return false;
#undef DO_
}

void DailyMissionAllCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.DailyMissionAllCPP)
  // repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
  for (int i = 0; i < this->missions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.DailyMissionAllCPP)
}

::google::protobuf::uint8* DailyMissionAllCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.DailyMissionAllCPP)
  // repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
  for (int i = 0; i < this->missions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.DailyMissionAllCPP)
  return target;
}

int DailyMissionAllCPP::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
  total_size += 1 * this->missions_size();
  for (int i = 0; i < this->missions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->missions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyMissionAllCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyMissionAllCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyMissionAllCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyMissionAllCPP::MergeFrom(const DailyMissionAllCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  missions_.MergeFrom(from.missions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyMissionAllCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyMissionAllCPP::CopyFrom(const DailyMissionAllCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyMissionAllCPP::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->missions())) return false;
  return true;
}

void DailyMissionAllCPP::Swap(DailyMissionAllCPP* other) {
  if (other != this) {
    missions_.Swap(&other->missions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyMissionAllCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyMissionAllCPP_descriptor_;
  metadata.reflection = DailyMissionAllCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RefreshDailyMissionReq::RefreshDailyMissionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.RefreshDailyMissionReq)
}

void RefreshDailyMissionReq::InitAsDefaultInstance() {
}

RefreshDailyMissionReq::RefreshDailyMissionReq(const RefreshDailyMissionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.RefreshDailyMissionReq)
}

void RefreshDailyMissionReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshDailyMissionReq::~RefreshDailyMissionReq() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.RefreshDailyMissionReq)
  SharedDtor();
}

void RefreshDailyMissionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshDailyMissionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshDailyMissionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshDailyMissionReq_descriptor_;
}

const RefreshDailyMissionReq& RefreshDailyMissionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

RefreshDailyMissionReq* RefreshDailyMissionReq::default_instance_ = NULL;

RefreshDailyMissionReq* RefreshDailyMissionReq::New() const {
  return new RefreshDailyMissionReq;
}

void RefreshDailyMissionReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshDailyMissionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.RefreshDailyMissionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.RefreshDailyMissionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.RefreshDailyMissionReq)
  return false;
#undef DO_
}

void RefreshDailyMissionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.RefreshDailyMissionReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.RefreshDailyMissionReq)
}

::google::protobuf::uint8* RefreshDailyMissionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.RefreshDailyMissionReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.RefreshDailyMissionReq)
  return target;
}

int RefreshDailyMissionReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshDailyMissionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshDailyMissionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshDailyMissionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshDailyMissionReq::MergeFrom(const RefreshDailyMissionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshDailyMissionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshDailyMissionReq::CopyFrom(const RefreshDailyMissionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshDailyMissionReq::IsInitialized() const {

  return true;
}

void RefreshDailyMissionReq::Swap(RefreshDailyMissionReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshDailyMissionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshDailyMissionReq_descriptor_;
  metadata.reflection = RefreshDailyMissionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RefreshDailyMissionResp::kMissionallFieldNumber;
const int RefreshDailyMissionResp::kRefreshtimeFieldNumber;
const int RefreshDailyMissionResp::kFreetimesFieldNumber;
#endif  // !_MSC_VER

RefreshDailyMissionResp::RefreshDailyMissionResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.RefreshDailyMissionResp)
}

void RefreshDailyMissionResp::InitAsDefaultInstance() {
  missionall_ = const_cast< ::ProtoDailyMission::DailyMissionAllCPP*>(&::ProtoDailyMission::DailyMissionAllCPP::default_instance());
}

RefreshDailyMissionResp::RefreshDailyMissionResp(const RefreshDailyMissionResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.RefreshDailyMissionResp)
}

void RefreshDailyMissionResp::SharedCtor() {
  _cached_size_ = 0;
  missionall_ = NULL;
  refreshtime_ = 0u;
  freetimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshDailyMissionResp::~RefreshDailyMissionResp() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.RefreshDailyMissionResp)
  SharedDtor();
}

void RefreshDailyMissionResp::SharedDtor() {
  if (this != default_instance_) {
    delete missionall_;
  }
}

void RefreshDailyMissionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshDailyMissionResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshDailyMissionResp_descriptor_;
}

const RefreshDailyMissionResp& RefreshDailyMissionResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

RefreshDailyMissionResp* RefreshDailyMissionResp::default_instance_ = NULL;

RefreshDailyMissionResp* RefreshDailyMissionResp::New() const {
  return new RefreshDailyMissionResp;
}

void RefreshDailyMissionResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RefreshDailyMissionResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(refreshtime_, freetimes_);
    if (has_missionall()) {
      if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshDailyMissionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.RefreshDailyMissionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missionall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_refreshtime;
        break;
      }

      // required uint32 refreshtime = 2;
      case 2: {
        if (tag == 16) {
         parse_refreshtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_freetimes;
        break;
      }

      // required uint32 freetimes = 3;
      case 3: {
        if (tag == 24) {
         parse_freetimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freetimes_)));
          set_has_freetimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.RefreshDailyMissionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.RefreshDailyMissionResp)
  return false;
#undef DO_
}

void RefreshDailyMissionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.RefreshDailyMissionResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missionall(), output);
  }

  // required uint32 refreshtime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->refreshtime(), output);
  }

  // required uint32 freetimes = 3;
  if (has_freetimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->freetimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.RefreshDailyMissionResp)
}

::google::protobuf::uint8* RefreshDailyMissionResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.RefreshDailyMissionResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missionall(), target);
  }

  // required uint32 refreshtime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->refreshtime(), target);
  }

  // required uint32 freetimes = 3;
  if (has_freetimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->freetimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.RefreshDailyMissionResp)
  return target;
}

int RefreshDailyMissionResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
    if (has_missionall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionall());
    }

    // required uint32 refreshtime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refreshtime());
    }

    // required uint32 freetimes = 3;
    if (has_freetimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freetimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshDailyMissionResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshDailyMissionResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshDailyMissionResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshDailyMissionResp::MergeFrom(const RefreshDailyMissionResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missionall()) {
      mutable_missionall()->::ProtoDailyMission::DailyMissionAllCPP::MergeFrom(from.missionall());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_freetimes()) {
      set_freetimes(from.freetimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshDailyMissionResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshDailyMissionResp::CopyFrom(const RefreshDailyMissionResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshDailyMissionResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_missionall()) {
    if (!this->missionall().IsInitialized()) return false;
  }
  return true;
}

void RefreshDailyMissionResp::Swap(RefreshDailyMissionResp* other) {
  if (other != this) {
    std::swap(missionall_, other->missionall_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(freetimes_, other->freetimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshDailyMissionResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshDailyMissionResp_descriptor_;
  metadata.reflection = RefreshDailyMissionResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CashRefreshMissionReq::CashRefreshMissionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.CashRefreshMissionReq)
}

void CashRefreshMissionReq::InitAsDefaultInstance() {
}

CashRefreshMissionReq::CashRefreshMissionReq(const CashRefreshMissionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.CashRefreshMissionReq)
}

void CashRefreshMissionReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CashRefreshMissionReq::~CashRefreshMissionReq() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.CashRefreshMissionReq)
  SharedDtor();
}

void CashRefreshMissionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CashRefreshMissionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CashRefreshMissionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CashRefreshMissionReq_descriptor_;
}

const CashRefreshMissionReq& CashRefreshMissionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

CashRefreshMissionReq* CashRefreshMissionReq::default_instance_ = NULL;

CashRefreshMissionReq* CashRefreshMissionReq::New() const {
  return new CashRefreshMissionReq;
}

void CashRefreshMissionReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CashRefreshMissionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.CashRefreshMissionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.CashRefreshMissionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.CashRefreshMissionReq)
  return false;
#undef DO_
}

void CashRefreshMissionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.CashRefreshMissionReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.CashRefreshMissionReq)
}

::google::protobuf::uint8* CashRefreshMissionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.CashRefreshMissionReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.CashRefreshMissionReq)
  return target;
}

int CashRefreshMissionReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CashRefreshMissionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CashRefreshMissionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CashRefreshMissionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CashRefreshMissionReq::MergeFrom(const CashRefreshMissionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CashRefreshMissionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CashRefreshMissionReq::CopyFrom(const CashRefreshMissionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CashRefreshMissionReq::IsInitialized() const {

  return true;
}

void CashRefreshMissionReq::Swap(CashRefreshMissionReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CashRefreshMissionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CashRefreshMissionReq_descriptor_;
  metadata.reflection = CashRefreshMissionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CashRefreshMissionResp::kMissionallFieldNumber;
const int CashRefreshMissionResp::kCashFieldNumber;
#endif  // !_MSC_VER

CashRefreshMissionResp::CashRefreshMissionResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.CashRefreshMissionResp)
}

void CashRefreshMissionResp::InitAsDefaultInstance() {
  missionall_ = const_cast< ::ProtoDailyMission::DailyMissionAllCPP*>(&::ProtoDailyMission::DailyMissionAllCPP::default_instance());
}

CashRefreshMissionResp::CashRefreshMissionResp(const CashRefreshMissionResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.CashRefreshMissionResp)
}

void CashRefreshMissionResp::SharedCtor() {
  _cached_size_ = 0;
  missionall_ = NULL;
  cash_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CashRefreshMissionResp::~CashRefreshMissionResp() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.CashRefreshMissionResp)
  SharedDtor();
}

void CashRefreshMissionResp::SharedDtor() {
  if (this != default_instance_) {
    delete missionall_;
  }
}

void CashRefreshMissionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CashRefreshMissionResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CashRefreshMissionResp_descriptor_;
}

const CashRefreshMissionResp& CashRefreshMissionResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

CashRefreshMissionResp* CashRefreshMissionResp::default_instance_ = NULL;

CashRefreshMissionResp* CashRefreshMissionResp::New() const {
  return new CashRefreshMissionResp;
}

void CashRefreshMissionResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_missionall()) {
      if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
    }
    cash_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CashRefreshMissionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.CashRefreshMissionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missionall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cash;
        break;
      }

      // required uint32 cash = 2;
      case 2: {
        if (tag == 16) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.CashRefreshMissionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.CashRefreshMissionResp)
  return false;
#undef DO_
}

void CashRefreshMissionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.CashRefreshMissionResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missionall(), output);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.CashRefreshMissionResp)
}

::google::protobuf::uint8* CashRefreshMissionResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.CashRefreshMissionResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missionall(), target);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.CashRefreshMissionResp)
  return target;
}

int CashRefreshMissionResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
    if (has_missionall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionall());
    }

    // required uint32 cash = 2;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CashRefreshMissionResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CashRefreshMissionResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CashRefreshMissionResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CashRefreshMissionResp::MergeFrom(const CashRefreshMissionResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missionall()) {
      mutable_missionall()->::ProtoDailyMission::DailyMissionAllCPP::MergeFrom(from.missionall());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CashRefreshMissionResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CashRefreshMissionResp::CopyFrom(const CashRefreshMissionResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CashRefreshMissionResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_missionall()) {
    if (!this->missionall().IsInitialized()) return false;
  }
  return true;
}

void CashRefreshMissionResp::Swap(CashRefreshMissionResp* other) {
  if (other != this) {
    std::swap(missionall_, other->missionall_);
    std::swap(cash_, other->cash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CashRefreshMissionResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CashRefreshMissionResp_descriptor_;
  metadata.reflection = CashRefreshMissionResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

OpenDailyMissionWindowReq::OpenDailyMissionWindowReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.OpenDailyMissionWindowReq)
}

void OpenDailyMissionWindowReq::InitAsDefaultInstance() {
}

OpenDailyMissionWindowReq::OpenDailyMissionWindowReq(const OpenDailyMissionWindowReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.OpenDailyMissionWindowReq)
}

void OpenDailyMissionWindowReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenDailyMissionWindowReq::~OpenDailyMissionWindowReq() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.OpenDailyMissionWindowReq)
  SharedDtor();
}

void OpenDailyMissionWindowReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenDailyMissionWindowReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenDailyMissionWindowReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenDailyMissionWindowReq_descriptor_;
}

const OpenDailyMissionWindowReq& OpenDailyMissionWindowReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

OpenDailyMissionWindowReq* OpenDailyMissionWindowReq::default_instance_ = NULL;

OpenDailyMissionWindowReq* OpenDailyMissionWindowReq::New() const {
  return new OpenDailyMissionWindowReq;
}

void OpenDailyMissionWindowReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenDailyMissionWindowReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.OpenDailyMissionWindowReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.OpenDailyMissionWindowReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.OpenDailyMissionWindowReq)
  return false;
#undef DO_
}

void OpenDailyMissionWindowReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.OpenDailyMissionWindowReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.OpenDailyMissionWindowReq)
}

::google::protobuf::uint8* OpenDailyMissionWindowReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.OpenDailyMissionWindowReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.OpenDailyMissionWindowReq)
  return target;
}

int OpenDailyMissionWindowReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenDailyMissionWindowReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenDailyMissionWindowReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenDailyMissionWindowReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenDailyMissionWindowReq::MergeFrom(const OpenDailyMissionWindowReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenDailyMissionWindowReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenDailyMissionWindowReq::CopyFrom(const OpenDailyMissionWindowReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenDailyMissionWindowReq::IsInitialized() const {

  return true;
}

void OpenDailyMissionWindowReq::Swap(OpenDailyMissionWindowReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenDailyMissionWindowReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenDailyMissionWindowReq_descriptor_;
  metadata.reflection = OpenDailyMissionWindowReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpenDailyMissionWindowResp::kMissionallFieldNumber;
#endif  // !_MSC_VER

OpenDailyMissionWindowResp::OpenDailyMissionWindowResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.OpenDailyMissionWindowResp)
}

void OpenDailyMissionWindowResp::InitAsDefaultInstance() {
  missionall_ = const_cast< ::ProtoDailyMission::DailyMissionAllCPP*>(&::ProtoDailyMission::DailyMissionAllCPP::default_instance());
}

OpenDailyMissionWindowResp::OpenDailyMissionWindowResp(const OpenDailyMissionWindowResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.OpenDailyMissionWindowResp)
}

void OpenDailyMissionWindowResp::SharedCtor() {
  _cached_size_ = 0;
  missionall_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenDailyMissionWindowResp::~OpenDailyMissionWindowResp() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.OpenDailyMissionWindowResp)
  SharedDtor();
}

void OpenDailyMissionWindowResp::SharedDtor() {
  if (this != default_instance_) {
    delete missionall_;
  }
}

void OpenDailyMissionWindowResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenDailyMissionWindowResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenDailyMissionWindowResp_descriptor_;
}

const OpenDailyMissionWindowResp& OpenDailyMissionWindowResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

OpenDailyMissionWindowResp* OpenDailyMissionWindowResp::default_instance_ = NULL;

OpenDailyMissionWindowResp* OpenDailyMissionWindowResp::New() const {
  return new OpenDailyMissionWindowResp;
}

void OpenDailyMissionWindowResp::Clear() {
  if (has_missionall()) {
    if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenDailyMissionWindowResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.OpenDailyMissionWindowResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missionall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.OpenDailyMissionWindowResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.OpenDailyMissionWindowResp)
  return false;
#undef DO_
}

void OpenDailyMissionWindowResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.OpenDailyMissionWindowResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missionall(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.OpenDailyMissionWindowResp)
}

::google::protobuf::uint8* OpenDailyMissionWindowResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.OpenDailyMissionWindowResp)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missionall(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.OpenDailyMissionWindowResp)
  return target;
}

int OpenDailyMissionWindowResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
    if (has_missionall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionall());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenDailyMissionWindowResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenDailyMissionWindowResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenDailyMissionWindowResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenDailyMissionWindowResp::MergeFrom(const OpenDailyMissionWindowResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missionall()) {
      mutable_missionall()->::ProtoDailyMission::DailyMissionAllCPP::MergeFrom(from.missionall());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenDailyMissionWindowResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenDailyMissionWindowResp::CopyFrom(const OpenDailyMissionWindowResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenDailyMissionWindowResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_missionall()) {
    if (!this->missionall().IsInitialized()) return false;
  }
  return true;
}

void OpenDailyMissionWindowResp::Swap(OpenDailyMissionWindowResp* other) {
  if (other != this) {
    std::swap(missionall_, other->missionall_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenDailyMissionWindowResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenDailyMissionWindowResp_descriptor_;
  metadata.reflection = OpenDailyMissionWindowResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushDailyMissionReq::kMissionallFieldNumber;
#endif  // !_MSC_VER

PushDailyMissionReq::PushDailyMissionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.PushDailyMissionReq)
}

void PushDailyMissionReq::InitAsDefaultInstance() {
  missionall_ = const_cast< ::ProtoDailyMission::DailyMissionAllCPP*>(&::ProtoDailyMission::DailyMissionAllCPP::default_instance());
}

PushDailyMissionReq::PushDailyMissionReq(const PushDailyMissionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.PushDailyMissionReq)
}

void PushDailyMissionReq::SharedCtor() {
  _cached_size_ = 0;
  missionall_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushDailyMissionReq::~PushDailyMissionReq() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.PushDailyMissionReq)
  SharedDtor();
}

void PushDailyMissionReq::SharedDtor() {
  if (this != default_instance_) {
    delete missionall_;
  }
}

void PushDailyMissionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushDailyMissionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushDailyMissionReq_descriptor_;
}

const PushDailyMissionReq& PushDailyMissionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

PushDailyMissionReq* PushDailyMissionReq::default_instance_ = NULL;

PushDailyMissionReq* PushDailyMissionReq::New() const {
  return new PushDailyMissionReq;
}

void PushDailyMissionReq::Clear() {
  if (has_missionall()) {
    if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushDailyMissionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.PushDailyMissionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missionall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.PushDailyMissionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.PushDailyMissionReq)
  return false;
#undef DO_
}

void PushDailyMissionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.PushDailyMissionReq)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missionall(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.PushDailyMissionReq)
}

::google::protobuf::uint8* PushDailyMissionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.PushDailyMissionReq)
  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  if (has_missionall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missionall(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.PushDailyMissionReq)
  return target;
}

int PushDailyMissionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
    if (has_missionall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionall());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushDailyMissionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushDailyMissionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushDailyMissionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushDailyMissionReq::MergeFrom(const PushDailyMissionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missionall()) {
      mutable_missionall()->::ProtoDailyMission::DailyMissionAllCPP::MergeFrom(from.missionall());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushDailyMissionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushDailyMissionReq::CopyFrom(const PushDailyMissionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushDailyMissionReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_missionall()) {
    if (!this->missionall().IsInitialized()) return false;
  }
  return true;
}

void PushDailyMissionReq::Swap(PushDailyMissionReq* other) {
  if (other != this) {
    std::swap(missionall_, other->missionall_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushDailyMissionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushDailyMissionReq_descriptor_;
  metadata.reflection = PushDailyMissionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetDailyMissionRewardReq::kMissidFieldNumber;
#endif  // !_MSC_VER

GetDailyMissionRewardReq::GetDailyMissionRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.GetDailyMissionRewardReq)
}

void GetDailyMissionRewardReq::InitAsDefaultInstance() {
}

GetDailyMissionRewardReq::GetDailyMissionRewardReq(const GetDailyMissionRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.GetDailyMissionRewardReq)
}

void GetDailyMissionRewardReq::SharedCtor() {
  _cached_size_ = 0;
  missid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDailyMissionRewardReq::~GetDailyMissionRewardReq() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.GetDailyMissionRewardReq)
  SharedDtor();
}

void GetDailyMissionRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDailyMissionRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDailyMissionRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDailyMissionRewardReq_descriptor_;
}

const GetDailyMissionRewardReq& GetDailyMissionRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

GetDailyMissionRewardReq* GetDailyMissionRewardReq::default_instance_ = NULL;

GetDailyMissionRewardReq* GetDailyMissionRewardReq::New() const {
  return new GetDailyMissionRewardReq;
}

void GetDailyMissionRewardReq::Clear() {
  missid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDailyMissionRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.GetDailyMissionRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 missid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &missid_)));
          set_has_missid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.GetDailyMissionRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.GetDailyMissionRewardReq)
  return false;
#undef DO_
}

void GetDailyMissionRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.GetDailyMissionRewardReq)
  // required uint32 missid = 1;
  if (has_missid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->missid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.GetDailyMissionRewardReq)
}

::google::protobuf::uint8* GetDailyMissionRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.GetDailyMissionRewardReq)
  // required uint32 missid = 1;
  if (has_missid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->missid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.GetDailyMissionRewardReq)
  return target;
}

int GetDailyMissionRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 missid = 1;
    if (has_missid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->missid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDailyMissionRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDailyMissionRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDailyMissionRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDailyMissionRewardReq::MergeFrom(const GetDailyMissionRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_missid()) {
      set_missid(from.missid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDailyMissionRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDailyMissionRewardReq::CopyFrom(const GetDailyMissionRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyMissionRewardReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetDailyMissionRewardReq::Swap(GetDailyMissionRewardReq* other) {
  if (other != this) {
    std::swap(missid_, other->missid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDailyMissionRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDailyMissionRewardReq_descriptor_;
  metadata.reflection = GetDailyMissionRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetDailyMissionRewardResp::kMissionFieldNumber;
const int GetDailyMissionRewardResp::kExpFieldNumber;
const int GetDailyMissionRewardResp::kRewardTimesFieldNumber;
#endif  // !_MSC_VER

GetDailyMissionRewardResp::GetDailyMissionRewardResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDailyMission.GetDailyMissionRewardResp)
}

void GetDailyMissionRewardResp::InitAsDefaultInstance() {
  mission_ = const_cast< ::ProtoDailyMission::DailyMissionCPP*>(&::ProtoDailyMission::DailyMissionCPP::default_instance());
}

GetDailyMissionRewardResp::GetDailyMissionRewardResp(const GetDailyMissionRewardResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDailyMission.GetDailyMissionRewardResp)
}

void GetDailyMissionRewardResp::SharedCtor() {
  _cached_size_ = 0;
  mission_ = NULL;
  exp_ = GOOGLE_ULONGLONG(0);
  reward_times_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDailyMissionRewardResp::~GetDailyMissionRewardResp() {
  // @@protoc_insertion_point(destructor:ProtoDailyMission.GetDailyMissionRewardResp)
  SharedDtor();
}

void GetDailyMissionRewardResp::SharedDtor() {
  if (this != default_instance_) {
    delete mission_;
  }
}

void GetDailyMissionRewardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDailyMissionRewardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDailyMissionRewardResp_descriptor_;
}

const GetDailyMissionRewardResp& GetDailyMissionRewardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDailyMission_2eproto();
  return *default_instance_;
}

GetDailyMissionRewardResp* GetDailyMissionRewardResp::default_instance_ = NULL;

GetDailyMissionRewardResp* GetDailyMissionRewardResp::New() const {
  return new GetDailyMissionRewardResp;
}

void GetDailyMissionRewardResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetDailyMissionRewardResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(exp_, reward_times_);
    if (has_mission()) {
      if (mission_ != NULL) mission_->::ProtoDailyMission::DailyMissionCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDailyMissionRewardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDailyMission.GetDailyMissionRewardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoDailyMission.DailyMissionCPP mission = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mission()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }

      // required uint64 exp = 2;
      case 2: {
        if (tag == 16) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_reward_times;
        break;
      }

      // required uint32 reward_times = 3;
      case 3: {
        if (tag == 24) {
         parse_reward_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_times_)));
          set_has_reward_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDailyMission.GetDailyMissionRewardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDailyMission.GetDailyMissionRewardResp)
  return false;
#undef DO_
}

void GetDailyMissionRewardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDailyMission.GetDailyMissionRewardResp)
  // required .ProtoDailyMission.DailyMissionCPP mission = 1;
  if (has_mission()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mission(), output);
  }

  // required uint64 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->exp(), output);
  }

  // required uint32 reward_times = 3;
  if (has_reward_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->reward_times(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDailyMission.GetDailyMissionRewardResp)
}

::google::protobuf::uint8* GetDailyMissionRewardResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDailyMission.GetDailyMissionRewardResp)
  // required .ProtoDailyMission.DailyMissionCPP mission = 1;
  if (has_mission()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mission(), target);
  }

  // required uint64 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->exp(), target);
  }

  // required uint32 reward_times = 3;
  if (has_reward_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->reward_times(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDailyMission.GetDailyMissionRewardResp)
  return target;
}

int GetDailyMissionRewardResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoDailyMission.DailyMissionCPP mission = 1;
    if (has_mission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mission());
    }

    // required uint64 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // required uint32 reward_times = 3;
    if (has_reward_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reward_times());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDailyMissionRewardResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDailyMissionRewardResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDailyMissionRewardResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDailyMissionRewardResp::MergeFrom(const GetDailyMissionRewardResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mission()) {
      mutable_mission()->::ProtoDailyMission::DailyMissionCPP::MergeFrom(from.mission());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_reward_times()) {
      set_reward_times(from.reward_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDailyMissionRewardResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDailyMissionRewardResp::CopyFrom(const GetDailyMissionRewardResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyMissionRewardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_mission()) {
    if (!this->mission().IsInitialized()) return false;
  }
  return true;
}

void GetDailyMissionRewardResp::Swap(GetDailyMissionRewardResp* other) {
  if (other != this) {
    std::swap(mission_, other->mission_);
    std::swap(exp_, other->exp_);
    std::swap(reward_times_, other->reward_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDailyMissionRewardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDailyMissionRewardResp_descriptor_;
  metadata.reflection = GetDailyMissionRewardResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoDailyMission

// @@protoc_insertion_point(global_scope)
