// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBattleField.proto

#ifndef PROTOBUF_ProtoBattleField_2eproto__INCLUDED
#define PROTOBUF_ProtoBattleField_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBattleField {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBattleField_2eproto();
void protobuf_AssignDesc_ProtoBattleField_2eproto();
void protobuf_ShutdownFile_ProtoBattleField_2eproto();

class Hero;
class City;
class Mission;
class RMIField;
class BattleReward;
class Field;
class ResetBattleReward;
class RequestBattleReward;
class ReplyBattleReward;
class HeroReward;
class ItemReward;
class UserReward;
class MissionState;
class RequestHero;
class HeroState;
class CityState;
class RequestMove;
class ReplyMove;
class RequestStop;
class RequestCityKingdom;
class ReplyCityKingdom;
class RequestCityCount;
class ReplyCityCount;
class RequestCityMaster;
class ReplyCityMaster;
class StartCityBattle;
class RequestCityReward;
class ReplyCityReward;
class RequestCity;
class RequestGate;
class RequestRush;
class RequestLadder;
class HeroUid;
class HidUid;
class UserInfo;
class Turn;
class ReplyCity;
class QuitCity;
class QuitGate;
class QuitRush;
class QuitLadder;
class RequestList;
class ReplyList;
class SkillOrShapeCity;
class SkillOrShapeGate;
class SkillOrShapeRush;
class SkillOrShapeLadder;
class BattleOver;
class StartRush;
class SendRush;
class RequestVision;
class ReplyVision;
class ImmediatelyCity;
class ImmediatelyGate;
class ImmediatelyRush;
class ImmediatelyLadder;
class NPCMove;
class SendNPCMove;
class RequestRewardInfo;
class ReplyRewardInfo;
class RequestHistoryReward;
class ReplyHistoryReward;
class RequestKillReward;
class ReplyKillReward;
class RequestMissionPersonalReward;
class ReplyMissionPersonalReward;
class RequestMissionCountryReward;
class ReplyMissionCountryReward;
class RequestAuto;
class RequestFight;
class ReplyFight;

// ===================================================================

class Hero : public ::google::protobuf::Message {
 public:
  Hero();
  virtual ~Hero();

  Hero(const Hero& from);

  inline Hero& operator=(const Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hero& default_instance();

  void Swap(Hero* other);

  // implements Message ----------------------------------------------

  Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hero& from);
  void MergeFrom(const Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated int32 property = 2;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 2;
  inline ::google::protobuf::int32 property(int index) const;
  inline void set_property(int index, ::google::protobuf::int32 value);
  inline void add_property(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      property() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_property();

  // repeated int32 hp = 3;
  inline int hp_size() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::int32 hp(int index) const;
  inline void set_hp(int index, ::google::protobuf::int32 value);
  inline void add_hp(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hp();

  // repeated uint32 shape = 4;
  inline int shape_size() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 4;
  inline ::google::protobuf::uint32 shape(int index) const;
  inline void set_shape(int index, ::google::protobuf::uint32 value);
  inline void add_shape(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shape() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shape();

  // optional uint32 skill = 5;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 5;
  inline ::google::protobuf::uint32 skill() const;
  inline void set_skill(::google::protobuf::uint32 value);

  // required uint32 extraid = 6;
  inline bool has_extraid() const;
  inline void clear_extraid();
  static const int kExtraidFieldNumber = 6;
  inline ::google::protobuf::uint32 extraid() const;
  inline void set_extraid(::google::protobuf::uint32 value);

  // required uint32 city = 7;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 7;
  inline ::google::protobuf::uint32 city() const;
  inline void set_city(::google::protobuf::uint32 value);

  // required uint32 gate = 8;
  inline bool has_gate() const;
  inline void clear_gate();
  static const int kGateFieldNumber = 8;
  inline ::google::protobuf::uint32 gate() const;
  inline void set_gate(::google::protobuf::uint32 value);

  // optional uint32 ouid = 9;
  inline bool has_ouid() const;
  inline void clear_ouid();
  static const int kOuidFieldNumber = 9;
  inline ::google::protobuf::uint32 ouid() const;
  inline void set_ouid(::google::protobuf::uint32 value);

  // optional uint32 oid = 10;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 10;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.Hero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_extraid();
  inline void clear_has_extraid();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_gate();
  inline void clear_has_gate();
  inline void set_has_ouid();
  inline void clear_has_ouid();
  inline void set_has_oid();
  inline void clear_has_oid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > property_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hp_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shape_;
  ::google::protobuf::uint32 extraid_;
  ::google::protobuf::uint32 city_;
  ::google::protobuf::uint32 gate_;
  ::google::protobuf::uint32 ouid_;
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static Hero* default_instance_;
};
// -------------------------------------------------------------------

class City : public ::google::protobuf::Message {
 public:
  City();
  virtual ~City();

  City(const City& from);

  inline City& operator=(const City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const City& default_instance();

  void Swap(City* other);

  // implements Message ----------------------------------------------

  City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const City& from);
  void MergeFrom(const City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required uint32 kingdom = 2;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 2;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // required bool fight = 3;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 3;
  inline bool fight() const;
  inline void set_fight(bool value);

  // required uint32 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.City)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 kingdom_;
  bool fight_;
  ::google::protobuf::uint32 uid_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static City* default_instance_;
};
// -------------------------------------------------------------------

class Mission : public ::google::protobuf::Message {
 public:
  Mission();
  virtual ~Mission();

  Mission(const Mission& from);

  inline Mission& operator=(const Mission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mission& default_instance();

  void Swap(Mission* other);

  // implements Message ----------------------------------------------

  Mission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mission& from);
  void MergeFrom(const Mission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline ::google::protobuf::uint32 m1() const;
  inline void set_m1(::google::protobuf::uint32 value);

  // required uint32 m2 = 2;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 2;
  inline ::google::protobuf::uint32 m2() const;
  inline void set_m2(::google::protobuf::uint32 value);

  // required uint32 m1status = 3;
  inline bool has_m1status() const;
  inline void clear_m1status();
  static const int kM1StatusFieldNumber = 3;
  inline ::google::protobuf::uint32 m1status() const;
  inline void set_m1status(::google::protobuf::uint32 value);

  // required uint32 m2status = 4;
  inline bool has_m2status() const;
  inline void clear_m2status();
  static const int kM2StatusFieldNumber = 4;
  inline ::google::protobuf::uint32 m2status() const;
  inline void set_m2status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.Mission)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m1status();
  inline void clear_has_m1status();
  inline void set_has_m2status();
  inline void clear_has_m2status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m1_;
  ::google::protobuf::uint32 m2_;
  ::google::protobuf::uint32 m1status_;
  ::google::protobuf::uint32 m2status_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static Mission* default_instance_;
};
// -------------------------------------------------------------------

class RMIField : public ::google::protobuf::Message {
 public:
  RMIField();
  virtual ~RMIField();

  RMIField(const RMIField& from);

  inline RMIField& operator=(const RMIField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RMIField& default_instance();

  void Swap(RMIField* other);

  // implements Message ----------------------------------------------

  RMIField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RMIField& from);
  void MergeFrom(const RMIField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // required bool is_atuo = 3;
  inline bool has_is_atuo() const;
  inline void clear_is_atuo();
  static const int kIsAtuoFieldNumber = 3;
  inline bool is_atuo() const;
  inline void set_is_atuo(bool value);

  // required uint32 forbid_talk_ts = 4;
  inline bool has_forbid_talk_ts() const;
  inline void clear_forbid_talk_ts();
  static const int kForbidTalkTsFieldNumber = 4;
  inline ::google::protobuf::uint32 forbid_talk_ts() const;
  inline void set_forbid_talk_ts(::google::protobuf::uint32 value);

  // required uint32 forbid_move_ts = 5;
  inline bool has_forbid_move_ts() const;
  inline void clear_forbid_move_ts();
  static const int kForbidMoveTsFieldNumber = 5;
  inline ::google::protobuf::uint32 forbid_move_ts() const;
  inline void set_forbid_move_ts(::google::protobuf::uint32 value);

  // required uint32 silk = 6;
  inline bool has_silk() const;
  inline void clear_silk();
  static const int kSilkFieldNumber = 6;
  inline ::google::protobuf::uint32 silk() const;
  inline void set_silk(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RMIField)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_is_atuo();
  inline void clear_has_is_atuo();
  inline void set_has_forbid_talk_ts();
  inline void clear_has_forbid_talk_ts();
  inline void set_has_forbid_move_ts();
  inline void clear_has_forbid_move_ts();
  inline void set_has_silk();
  inline void clear_has_silk();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 job_;
  bool is_atuo_;
  ::google::protobuf::uint32 forbid_talk_ts_;
  ::google::protobuf::uint32 forbid_move_ts_;
  ::google::protobuf::uint32 silk_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RMIField* default_instance_;
};
// -------------------------------------------------------------------

class BattleReward : public ::google::protobuf::Message {
 public:
  BattleReward();
  virtual ~BattleReward();

  BattleReward(const BattleReward& from);

  inline BattleReward& operator=(const BattleReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleReward& default_instance();

  void Swap(BattleReward* other);

  // implements Message ----------------------------------------------

  BattleReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleReward& from);
  void MergeFrom(const BattleReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 c = 1;
  inline int c_size() const;
  inline void clear_c();
  static const int kCFieldNumber = 1;
  inline ::google::protobuf::uint32 c(int index) const;
  inline void set_c(int index, ::google::protobuf::uint32 value);
  inline void add_c(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      c() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_c();

  // repeated uint32 r = 2;
  inline int r_size() const;
  inline void clear_r();
  static const int kRFieldNumber = 2;
  inline ::google::protobuf::uint32 r(int index) const;
  inline void set_r(int index, ::google::protobuf::uint32 value);
  inline void add_r(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      r() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_r();

  // required uint32 rp = 4;
  inline bool has_rp() const;
  inline void clear_rp();
  static const int kRpFieldNumber = 4;
  inline ::google::protobuf::uint32 rp() const;
  inline void set_rp(::google::protobuf::uint32 value);

  // required uint32 ccd = 5;
  inline bool has_ccd() const;
  inline void clear_ccd();
  static const int kCcdFieldNumber = 5;
  inline ::google::protobuf::uint32 ccd() const;
  inline void set_ccd(::google::protobuf::uint32 value);

  // required uint32 ctimes = 6;
  inline bool has_ctimes() const;
  inline void clear_ctimes();
  static const int kCtimesFieldNumber = 6;
  inline ::google::protobuf::uint32 ctimes() const;
  inline void set_ctimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.BattleReward)
 private:
  inline void set_has_rp();
  inline void clear_has_rp();
  inline void set_has_ccd();
  inline void clear_has_ccd();
  inline void set_has_ctimes();
  inline void clear_has_ctimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > c_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > r_;
  ::google::protobuf::uint32 rp_;
  ::google::protobuf::uint32 ccd_;
  ::google::protobuf::uint32 ctimes_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleReward* default_instance_;
};
// -------------------------------------------------------------------

class Field : public ::google::protobuf::Message {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Field& default_instance();

  void Swap(Field* other);

  // implements Message ----------------------------------------------

  Field* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.Hero hero = 1;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoBattleField::Hero& hero(int index) const;
  inline ::ProtoBattleField::Hero* mutable_hero(int index);
  inline ::ProtoBattleField::Hero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >*
      mutable_hero();

  // repeated .ProtoBattleField.City city = 2;
  inline int city_size() const;
  inline void clear_city();
  static const int kCityFieldNumber = 2;
  inline const ::ProtoBattleField::City& city(int index) const;
  inline ::ProtoBattleField::City* mutable_city(int index);
  inline ::ProtoBattleField::City* add_city();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >&
      city() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >*
      mutable_city();

  // repeated .ProtoBattleField.Mission mission = 3;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 3;
  inline const ::ProtoBattleField::Mission& mission(int index) const;
  inline ::ProtoBattleField::Mission* mutable_mission(int index);
  inline ::ProtoBattleField::Mission* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
      mutable_mission();

  // required .ProtoBattleField.RMIField rmi = 4;
  inline bool has_rmi() const;
  inline void clear_rmi();
  static const int kRmiFieldNumber = 4;
  inline const ::ProtoBattleField::RMIField& rmi() const;
  inline ::ProtoBattleField::RMIField* mutable_rmi();
  inline ::ProtoBattleField::RMIField* release_rmi();
  inline void set_allocated_rmi(::ProtoBattleField::RMIField* rmi);

  // required .ProtoBattleField.BattleReward reward = 5;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::ProtoBattleField::BattleReward& reward() const;
  inline ::ProtoBattleField::BattleReward* mutable_reward();
  inline ::ProtoBattleField::BattleReward* release_reward();
  inline void set_allocated_reward(::ProtoBattleField::BattleReward* reward);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.Field)
 private:
  inline void set_has_rmi();
  inline void clear_has_rmi();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero > hero_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City > city_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission > mission_;
  ::ProtoBattleField::RMIField* rmi_;
  ::ProtoBattleField::BattleReward* reward_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static Field* default_instance_;
};
// -------------------------------------------------------------------

class ResetBattleReward : public ::google::protobuf::Message {
 public:
  ResetBattleReward();
  virtual ~ResetBattleReward();

  ResetBattleReward(const ResetBattleReward& from);

  inline ResetBattleReward& operator=(const ResetBattleReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetBattleReward& default_instance();

  void Swap(ResetBattleReward* other);

  // implements Message ----------------------------------------------

  ResetBattleReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResetBattleReward& from);
  void MergeFrom(const ResetBattleReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 c = 1;
  inline int c_size() const;
  inline void clear_c();
  static const int kCFieldNumber = 1;
  inline ::google::protobuf::uint32 c(int index) const;
  inline void set_c(int index, ::google::protobuf::uint32 value);
  inline void add_c(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      c() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_c();

  // repeated uint32 r = 2;
  inline int r_size() const;
  inline void clear_r();
  static const int kRFieldNumber = 2;
  inline ::google::protobuf::uint32 r(int index) const;
  inline void set_r(int index, ::google::protobuf::uint32 value);
  inline void add_r(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      r() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_r();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ResetBattleReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > c_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > r_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ResetBattleReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestBattleReward : public ::google::protobuf::Message {
 public:
  RequestBattleReward();
  virtual ~RequestBattleReward();

  RequestBattleReward(const RequestBattleReward& from);

  inline RequestBattleReward& operator=(const RequestBattleReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBattleReward& default_instance();

  void Swap(RequestBattleReward* other);

  // implements Message ----------------------------------------------

  RequestBattleReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBattleReward& from);
  void MergeFrom(const RequestBattleReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required bool cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline bool cash() const;
  inline void set_cash(bool value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestBattleReward)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  bool cash_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestBattleReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyBattleReward : public ::google::protobuf::Message {
 public:
  ReplyBattleReward();
  virtual ~ReplyBattleReward();

  ReplyBattleReward(const ReplyBattleReward& from);

  inline ReplyBattleReward& operator=(const ReplyBattleReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyBattleReward& default_instance();

  void Swap(ReplyBattleReward* other);

  // implements Message ----------------------------------------------

  ReplyBattleReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyBattleReward& from);
  void MergeFrom(const ReplyBattleReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 equd = 3;
  inline bool has_equd() const;
  inline void clear_equd();
  static const int kEqudFieldNumber = 3;
  inline ::google::protobuf::uint32 equd() const;
  inline void set_equd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyBattleReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_equd();
  inline void clear_has_equd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 equd_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyBattleReward* default_instance_;
};
// -------------------------------------------------------------------

class HeroReward : public ::google::protobuf::Message {
 public:
  HeroReward();
  virtual ~HeroReward();

  HeroReward(const HeroReward& from);

  inline HeroReward& operator=(const HeroReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroReward& default_instance();

  void Swap(HeroReward* other);

  // implements Message ----------------------------------------------

  HeroReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroReward& from);
  void MergeFrom(const HeroReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 hexp = 2;
  inline bool has_hexp() const;
  inline void clear_hexp();
  static const int kHexpFieldNumber = 2;
  inline ::google::protobuf::uint32 hexp() const;
  inline void set_hexp(::google::protobuf::uint32 value);

  // required uint32 occupy = 3;
  inline bool has_occupy() const;
  inline void clear_occupy();
  static const int kOccupyFieldNumber = 3;
  inline ::google::protobuf::uint32 occupy() const;
  inline void set_occupy(::google::protobuf::uint32 value);

  // required uint32 win = 4;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 4;
  inline ::google::protobuf::uint32 win() const;
  inline void set_win(::google::protobuf::uint32 value);

  // required uint32 kill = 5;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 5;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.HeroReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hexp();
  inline void clear_has_hexp();
  inline void set_has_occupy();
  inline void clear_has_occupy();
  inline void set_has_win();
  inline void clear_has_win();
  inline void set_has_kill();
  inline void clear_has_kill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hexp_;
  ::google::protobuf::uint32 occupy_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::uint32 kill_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static HeroReward* default_instance_;
};
// -------------------------------------------------------------------

class ItemReward : public ::google::protobuf::Message {
 public:
  ItemReward();
  virtual ~ItemReward();

  ItemReward(const ItemReward& from);

  inline ItemReward& operator=(const ItemReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemReward& default_instance();

  void Swap(ItemReward* other);

  // implements Message ----------------------------------------------

  ItemReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemReward& from);
  void MergeFrom(const ItemReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ItemReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ItemReward* default_instance_;
};
// -------------------------------------------------------------------

class UserReward : public ::google::protobuf::Message {
 public:
  UserReward();
  virtual ~UserReward();

  UserReward(const UserReward& from);

  inline UserReward& operator=(const UserReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserReward& default_instance();

  void Swap(UserReward* other);

  // implements Message ----------------------------------------------

  UserReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserReward& from);
  void MergeFrom(const UserReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 wood = 3;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 3;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // required uint32 food = 4;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 4;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // required uint32 iron = 5;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 5;
  inline ::google::protobuf::uint32 iron() const;
  inline void set_iron(::google::protobuf::uint32 value);

  // required uint32 gem = 6;
  inline bool has_gem() const;
  inline void clear_gem();
  static const int kGemFieldNumber = 6;
  inline ::google::protobuf::uint32 gem() const;
  inline void set_gem(::google::protobuf::uint32 value);

  // repeated .ProtoBattleField.HeroReward hexp = 7;
  inline int hexp_size() const;
  inline void clear_hexp();
  static const int kHexpFieldNumber = 7;
  inline const ::ProtoBattleField::HeroReward& hexp(int index) const;
  inline ::ProtoBattleField::HeroReward* mutable_hexp(int index);
  inline ::ProtoBattleField::HeroReward* add_hexp();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroReward >&
      hexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroReward >*
      mutable_hexp();

  // optional uint32 kill = 8;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 8;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);

  // optional uint32 hurt = 9;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 9;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);

  // optional uint32 head = 10;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 10;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);

  // optional uint32 reward = 11;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 11;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // optional uint32 bkill = 12;
  inline bool has_bkill() const;
  inline void clear_bkill();
  static const int kBkillFieldNumber = 12;
  inline ::google::protobuf::uint32 bkill() const;
  inline void set_bkill(::google::protobuf::uint32 value);

  // repeated .ProtoBattleField.ItemReward item = 13;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 13;
  inline const ::ProtoBattleField::ItemReward& item(int index) const;
  inline ::ProtoBattleField::ItemReward* mutable_item(int index);
  inline ::ProtoBattleField::ItemReward* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::ItemReward >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::ItemReward >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.UserReward)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_iron();
  inline void clear_has_iron();
  inline void set_has_gem();
  inline void clear_has_gem();
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_bkill();
  inline void clear_has_bkill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 iron_;
  ::google::protobuf::uint32 gem_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroReward > hexp_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 hurt_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::ItemReward > item_;
  ::google::protobuf::uint32 bkill_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static UserReward* default_instance_;
};
// -------------------------------------------------------------------

class MissionState : public ::google::protobuf::Message {
 public:
  MissionState();
  virtual ~MissionState();

  MissionState(const MissionState& from);

  inline MissionState& operator=(const MissionState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionState& default_instance();

  void Swap(MissionState* other);

  // implements Message ----------------------------------------------

  MissionState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionState& from);
  void MergeFrom(const MissionState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.Mission mission = 1;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 1;
  inline const ::ProtoBattleField::Mission& mission(int index) const;
  inline ::ProtoBattleField::Mission* mutable_mission(int index);
  inline ::ProtoBattleField::Mission* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
      mutable_mission();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.MissionState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission > mission_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static MissionState* default_instance_;
};
// -------------------------------------------------------------------

class RequestHero : public ::google::protobuf::Message {
 public:
  RequestHero();
  virtual ~RequestHero();

  RequestHero(const RequestHero& from);

  inline RequestHero& operator=(const RequestHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHero& default_instance();

  void Swap(RequestHero* other);

  // implements Message ----------------------------------------------

  RequestHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHero& from);
  void MergeFrom(const RequestHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestHero)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestHero* default_instance_;
};
// -------------------------------------------------------------------

class HeroState : public ::google::protobuf::Message {
 public:
  HeroState();
  virtual ~HeroState();

  HeroState(const HeroState& from);

  inline HeroState& operator=(const HeroState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroState& default_instance();

  void Swap(HeroState* other);

  // implements Message ----------------------------------------------

  HeroState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroState& from);
  void MergeFrom(const HeroState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.Hero hero = 1;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::ProtoBattleField::Hero& hero(int index) const;
  inline ::ProtoBattleField::Hero* mutable_hero(int index);
  inline ::ProtoBattleField::Hero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >*
      mutable_hero();

  // optional .ProtoBattleField.UserReward reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::ProtoBattleField::UserReward& reward() const;
  inline ::ProtoBattleField::UserReward* mutable_reward();
  inline ::ProtoBattleField::UserReward* release_reward();
  inline void set_allocated_reward(::ProtoBattleField::UserReward* reward);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.HeroState)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero > hero_;
  ::ProtoBattleField::UserReward* reward_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static HeroState* default_instance_;
};
// -------------------------------------------------------------------

class CityState : public ::google::protobuf::Message {
 public:
  CityState();
  virtual ~CityState();

  CityState(const CityState& from);

  inline CityState& operator=(const CityState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityState& default_instance();

  void Swap(CityState* other);

  // implements Message ----------------------------------------------

  CityState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityState& from);
  void MergeFrom(const CityState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.City city = 1;
  inline int city_size() const;
  inline void clear_city();
  static const int kCityFieldNumber = 1;
  inline const ::ProtoBattleField::City& city(int index) const;
  inline ::ProtoBattleField::City* mutable_city(int index);
  inline ::ProtoBattleField::City* add_city();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >&
      city() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >*
      mutable_city();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.CityState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City > city_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static CityState* default_instance_;
};
// -------------------------------------------------------------------

class RequestMove : public ::google::protobuf::Message {
 public:
  RequestMove();
  virtual ~RequestMove();

  RequestMove(const RequestMove& from);

  inline RequestMove& operator=(const RequestMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMove& default_instance();

  void Swap(RequestMove* other);

  // implements Message ----------------------------------------------

  RequestMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMove& from);
  void MergeFrom(const RequestMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 cids = 2;
  inline int cids_size() const;
  inline void clear_cids();
  static const int kCidsFieldNumber = 2;
  inline ::google::protobuf::uint32 cids(int index) const;
  inline void set_cids(int index, ::google::protobuf::uint32 value);
  inline void add_cids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cids();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestMove)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cids_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestMove* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMove : public ::google::protobuf::Message {
 public:
  ReplyMove();
  virtual ~ReplyMove();

  ReplyMove(const ReplyMove& from);

  inline ReplyMove& operator=(const ReplyMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMove& default_instance();

  void Swap(ReplyMove* other);

  // implements Message ----------------------------------------------

  ReplyMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMove& from);
  void MergeFrom(const ReplyMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 mts = 3;
  inline bool has_mts() const;
  inline void clear_mts();
  static const int kMtsFieldNumber = 3;
  inline ::google::protobuf::uint32 mts() const;
  inline void set_mts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyMove)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_mts();
  inline void clear_has_mts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 mts_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyMove* default_instance_;
};
// -------------------------------------------------------------------

class RequestStop : public ::google::protobuf::Message {
 public:
  RequestStop();
  virtual ~RequestStop();

  RequestStop(const RequestStop& from);

  inline RequestStop& operator=(const RequestStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStop& default_instance();

  void Swap(RequestStop* other);

  // implements Message ----------------------------------------------

  RequestStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStop& from);
  void MergeFrom(const RequestStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestStop)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestStop* default_instance_;
};
// -------------------------------------------------------------------

class RequestCityKingdom : public ::google::protobuf::Message {
 public:
  RequestCityKingdom();
  virtual ~RequestCityKingdom();

  RequestCityKingdom(const RequestCityKingdom& from);

  inline RequestCityKingdom& operator=(const RequestCityKingdom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCityKingdom& default_instance();

  void Swap(RequestCityKingdom* other);

  // implements Message ----------------------------------------------

  RequestCityKingdom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCityKingdom& from);
  void MergeFrom(const RequestCityKingdom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 1;
  inline int cid_size() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid(int index) const;
  inline void set_cid(int index, ::google::protobuf::uint32 value);
  inline void add_cid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestCityKingdom)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestCityKingdom* default_instance_;
};
// -------------------------------------------------------------------

class ReplyCityKingdom : public ::google::protobuf::Message {
 public:
  ReplyCityKingdom();
  virtual ~ReplyCityKingdom();

  ReplyCityKingdom(const ReplyCityKingdom& from);

  inline ReplyCityKingdom& operator=(const ReplyCityKingdom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyCityKingdom& default_instance();

  void Swap(ReplyCityKingdom* other);

  // implements Message ----------------------------------------------

  ReplyCityKingdom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyCityKingdom& from);
  void MergeFrom(const ReplyCityKingdom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 1;
  inline int cid_size() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid(int index) const;
  inline void set_cid(int index, ::google::protobuf::uint32 value);
  inline void add_cid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // repeated uint32 kingdom = 2;
  inline int kingdom_size() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 2;
  inline ::google::protobuf::uint32 kingdom(int index) const;
  inline void set_kingdom(int index, ::google::protobuf::uint32 value);
  inline void add_kingdom(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      kingdom() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_kingdom();

  // repeated bool fight = 3;
  inline int fight_size() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 3;
  inline bool fight(int index) const;
  inline void set_fight(int index, bool value);
  inline void add_fight(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      fight() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_fight();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyCityKingdom)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kingdom_;
  ::google::protobuf::RepeatedField< bool > fight_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyCityKingdom* default_instance_;
};
// -------------------------------------------------------------------

class RequestCityCount : public ::google::protobuf::Message {
 public:
  RequestCityCount();
  virtual ~RequestCityCount();

  RequestCityCount(const RequestCityCount& from);

  inline RequestCityCount& operator=(const RequestCityCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCityCount& default_instance();

  void Swap(RequestCityCount* other);

  // implements Message ----------------------------------------------

  RequestCityCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCityCount& from);
  void MergeFrom(const RequestCityCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestCityCount)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestCityCount* default_instance_;
};
// -------------------------------------------------------------------

class ReplyCityCount : public ::google::protobuf::Message {
 public:
  ReplyCityCount();
  virtual ~ReplyCityCount();

  ReplyCityCount(const ReplyCityCount& from);

  inline ReplyCityCount& operator=(const ReplyCityCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyCityCount& default_instance();

  void Swap(ReplyCityCount* other);

  // implements Message ----------------------------------------------

  ReplyCityCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyCityCount& from);
  void MergeFrom(const ReplyCityCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 count = 1;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count(int index) const;
  inline void set_count(int index, ::google::protobuf::uint32 value);
  inline void add_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_count();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyCityCount)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > count_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyCityCount* default_instance_;
};
// -------------------------------------------------------------------

class RequestCityMaster : public ::google::protobuf::Message {
 public:
  RequestCityMaster();
  virtual ~RequestCityMaster();

  RequestCityMaster(const RequestCityMaster& from);

  inline RequestCityMaster& operator=(const RequestCityMaster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCityMaster& default_instance();

  void Swap(RequestCityMaster* other);

  // implements Message ----------------------------------------------

  RequestCityMaster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCityMaster& from);
  void MergeFrom(const RequestCityMaster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestCityMaster)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestCityMaster* default_instance_;
};
// -------------------------------------------------------------------

class ReplyCityMaster : public ::google::protobuf::Message {
 public:
  ReplyCityMaster();
  virtual ~ReplyCityMaster();

  ReplyCityMaster(const ReplyCityMaster& from);

  inline ReplyCityMaster& operator=(const ReplyCityMaster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyCityMaster& default_instance();

  void Swap(ReplyCityMaster* other);

  // implements Message ----------------------------------------------

  ReplyCityMaster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyCityMaster& from);
  void MergeFrom(const ReplyCityMaster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 aid = 3;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 3;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // optional uint32 job = 4;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated uint32 hero_ids = 6;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 6;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // repeated uint32 hero_lvl = 7;
  inline int hero_lvl_size() const;
  inline void clear_hero_lvl();
  static const int kHeroLvlFieldNumber = 7;
  inline ::google::protobuf::uint32 hero_lvl(int index) const;
  inline void set_hero_lvl(int index, ::google::protobuf::uint32 value);
  inline void add_hero_lvl(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_lvl() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_lvl();

  // repeated uint32 hero_troops = 8;
  inline int hero_troops_size() const;
  inline void clear_hero_troops();
  static const int kHeroTroopsFieldNumber = 8;
  inline ::google::protobuf::uint32 hero_troops(int index) const;
  inline void set_hero_troops(int index, ::google::protobuf::uint32 value);
  inline void add_hero_troops(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_troops() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_troops();

  // required uint32 reward = 9;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 9;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // required uint32 next_reward = 10;
  inline bool has_next_reward() const;
  inline void clear_next_reward();
  static const int kNextRewardFieldNumber = 10;
  inline ::google::protobuf::uint32 next_reward() const;
  inline void set_next_reward(::google::protobuf::uint32 value);

  // required uint32 ccd = 11;
  inline bool has_ccd() const;
  inline void clear_ccd();
  static const int kCcdFieldNumber = 11;
  inline ::google::protobuf::uint32 ccd() const;
  inline void set_ccd(::google::protobuf::uint32 value);

  // required uint32 ctimes = 12;
  inline bool has_ctimes() const;
  inline void clear_ctimes();
  static const int kCtimesFieldNumber = 12;
  inline ::google::protobuf::uint32 ctimes() const;
  inline void set_ctimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyCityMaster)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_next_reward();
  inline void clear_has_next_reward();
  inline void set_has_ccd();
  inline void clear_has_ccd();
  inline void set_has_ctimes();
  inline void clear_has_ctimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_lvl_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_troops_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::uint32 next_reward_;
  ::google::protobuf::uint32 ccd_;
  ::google::protobuf::uint32 ctimes_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyCityMaster* default_instance_;
};
// -------------------------------------------------------------------

class StartCityBattle : public ::google::protobuf::Message {
 public:
  StartCityBattle();
  virtual ~StartCityBattle();

  StartCityBattle(const StartCityBattle& from);

  inline StartCityBattle& operator=(const StartCityBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartCityBattle& default_instance();

  void Swap(StartCityBattle* other);

  // implements Message ----------------------------------------------

  StartCityBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartCityBattle& from);
  void MergeFrom(const StartCityBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // repeated uint32 hero = 2;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline ::google::protobuf::uint32 hero(int index) const;
  inline void set_hero(int index, ::google::protobuf::uint32 value);
  inline void add_hero(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.StartCityBattle)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static StartCityBattle* default_instance_;
};
// -------------------------------------------------------------------

class RequestCityReward : public ::google::protobuf::Message {
 public:
  RequestCityReward();
  virtual ~RequestCityReward();

  RequestCityReward(const RequestCityReward& from);

  inline RequestCityReward& operator=(const RequestCityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCityReward& default_instance();

  void Swap(RequestCityReward* other);

  // implements Message ----------------------------------------------

  RequestCityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCityReward& from);
  void MergeFrom(const RequestCityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestCityReward)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestCityReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyCityReward : public ::google::protobuf::Message {
 public:
  ReplyCityReward();
  virtual ~ReplyCityReward();

  ReplyCityReward(const ReplyCityReward& from);

  inline ReplyCityReward& operator=(const ReplyCityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyCityReward& default_instance();

  void Swap(ReplyCityReward* other);

  // implements Message ----------------------------------------------

  ReplyCityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyCityReward& from);
  void MergeFrom(const ReplyCityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 equd = 3;
  inline bool has_equd() const;
  inline void clear_equd();
  static const int kEqudFieldNumber = 3;
  inline ::google::protobuf::uint32 equd() const;
  inline void set_equd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyCityReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_equd();
  inline void clear_has_equd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 equd_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyCityReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestCity : public ::google::protobuf::Message {
 public:
  RequestCity();
  virtual ~RequestCity();

  RequestCity(const RequestCity& from);

  inline RequestCity& operator=(const RequestCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCity& default_instance();

  void Swap(RequestCity* other);

  // implements Message ----------------------------------------------

  RequestCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCity& from);
  void MergeFrom(const RequestCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestCity)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestCity* default_instance_;
};
// -------------------------------------------------------------------

class RequestGate : public ::google::protobuf::Message {
 public:
  RequestGate();
  virtual ~RequestGate();

  RequestGate(const RequestGate& from);

  inline RequestGate& operator=(const RequestGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestGate& default_instance();

  void Swap(RequestGate* other);

  // implements Message ----------------------------------------------

  RequestGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestGate& from);
  void MergeFrom(const RequestGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestGate)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestGate* default_instance_;
};
// -------------------------------------------------------------------

class RequestRush : public ::google::protobuf::Message {
 public:
  RequestRush();
  virtual ~RequestRush();

  RequestRush(const RequestRush& from);

  inline RequestRush& operator=(const RequestRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRush& default_instance();

  void Swap(RequestRush* other);

  // implements Message ----------------------------------------------

  RequestRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRush& from);
  void MergeFrom(const RequestRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 euid = 3;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 3;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 eid = 4;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 4;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestRush)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 eid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestRush* default_instance_;
};
// -------------------------------------------------------------------

class RequestLadder : public ::google::protobuf::Message {
 public:
  RequestLadder();
  virtual ~RequestLadder();

  RequestLadder(const RequestLadder& from);

  inline RequestLadder& operator=(const RequestLadder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLadder& default_instance();

  void Swap(RequestLadder* other);

  // implements Message ----------------------------------------------

  RequestLadder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestLadder& from);
  void MergeFrom(const RequestLadder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestLadder)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestLadder* default_instance_;
};
// -------------------------------------------------------------------

class HeroUid : public ::google::protobuf::Message {
 public:
  HeroUid();
  virtual ~HeroUid();

  HeroUid(const HeroUid& from);

  inline HeroUid& operator=(const HeroUid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroUid& default_instance();

  void Swap(HeroUid* other);

  // implements Message ----------------------------------------------

  HeroUid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroUid& from);
  void MergeFrom(const HeroUid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoBattleField.Hero hero = 2;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::ProtoBattleField::Hero& hero() const;
  inline ::ProtoBattleField::Hero* mutable_hero();
  inline ::ProtoBattleField::Hero* release_hero();
  inline void set_allocated_hero(::ProtoBattleField::Hero* hero);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.HeroUid)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_hero();
  inline void clear_has_hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoBattleField::Hero* hero_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static HeroUid* default_instance_;
};
// -------------------------------------------------------------------

class HidUid : public ::google::protobuf::Message {
 public:
  HidUid();
  virtual ~HidUid();

  HidUid(const HidUid& from);

  inline HidUid& operator=(const HidUid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HidUid& default_instance();

  void Swap(HidUid* other);

  // implements Message ----------------------------------------------

  HidUid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HidUid& from);
  void MergeFrom(const HidUid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 ouid = 3;
  inline bool has_ouid() const;
  inline void clear_ouid();
  static const int kOuidFieldNumber = 3;
  inline ::google::protobuf::uint32 ouid() const;
  inline void set_ouid(::google::protobuf::uint32 value);

  // optional uint32 oid = 4;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 4;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.HidUid)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ouid();
  inline void clear_has_ouid();
  inline void set_has_oid();
  inline void clear_has_oid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ouid_;
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static HidUid* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 kingdom = 3;
  inline bool has_kingdom() const;
  inline void clear_kingdom();
  static const int kKingdomFieldNumber = 3;
  inline ::google::protobuf::uint32 kingdom() const;
  inline void set_kingdom(::google::protobuf::uint32 value);

  // optional bytes fig = 4;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 4;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.UserInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_kingdom();
  inline void clear_has_kingdom();
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 kingdom_;
  ::std::string* fig_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class Turn : public ::google::protobuf::Message {
 public:
  Turn();
  virtual ~Turn();

  Turn(const Turn& from);

  inline Turn& operator=(const Turn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Turn& default_instance();

  void Swap(Turn* other);

  // implements Message ----------------------------------------------

  Turn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Turn& from);
  void MergeFrom(const Turn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 a_shape = 1;
  inline bool has_a_shape() const;
  inline void clear_a_shape();
  static const int kAShapeFieldNumber = 1;
  inline ::google::protobuf::uint32 a_shape() const;
  inline void set_a_shape(::google::protobuf::uint32 value);

  // required uint32 d_shape = 2;
  inline bool has_d_shape() const;
  inline void clear_d_shape();
  static const int kDShapeFieldNumber = 2;
  inline ::google::protobuf::uint32 d_shape() const;
  inline void set_d_shape(::google::protobuf::uint32 value);

  // required uint32 att_shape = 3;
  inline bool has_att_shape() const;
  inline void clear_att_shape();
  static const int kAttShapeFieldNumber = 3;
  inline ::google::protobuf::uint32 att_shape() const;
  inline void set_att_shape(::google::protobuf::uint32 value);

  // required uint32 def_shape = 4;
  inline bool has_def_shape() const;
  inline void clear_def_shape();
  static const int kDefShapeFieldNumber = 4;
  inline ::google::protobuf::uint32 def_shape() const;
  inline void set_def_shape(::google::protobuf::uint32 value);

  // repeated uint32 a_skill = 5;
  inline int a_skill_size() const;
  inline void clear_a_skill();
  static const int kASkillFieldNumber = 5;
  inline ::google::protobuf::uint32 a_skill(int index) const;
  inline void set_a_skill(int index, ::google::protobuf::uint32 value);
  inline void add_a_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      a_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_a_skill();

  // repeated uint32 d_skill = 6;
  inline int d_skill_size() const;
  inline void clear_d_skill();
  static const int kDSkillFieldNumber = 6;
  inline ::google::protobuf::uint32 d_skill(int index) const;
  inline void set_d_skill(int index, ::google::protobuf::uint32 value);
  inline void add_d_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      d_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_d_skill();

  // repeated uint32 a_attack = 7;
  inline int a_attack_size() const;
  inline void clear_a_attack();
  static const int kAAttackFieldNumber = 7;
  inline ::google::protobuf::uint32 a_attack(int index) const;
  inline void set_a_attack(int index, ::google::protobuf::uint32 value);
  inline void add_a_attack(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      a_attack() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_a_attack();

  // repeated uint32 d_attack = 8;
  inline int d_attack_size() const;
  inline void clear_d_attack();
  static const int kDAttackFieldNumber = 8;
  inline ::google::protobuf::uint32 d_attack(int index) const;
  inline void set_d_attack(int index, ::google::protobuf::uint32 value);
  inline void add_d_attack(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      d_attack() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_d_attack();

  // required uint32 ts = 9;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 9;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 nextts = 10;
  inline bool has_nextts() const;
  inline void clear_nextts();
  static const int kNexttsFieldNumber = 10;
  inline ::google::protobuf::uint32 nextts() const;
  inline void set_nextts(::google::protobuf::uint32 value);

  // optional uint32 a_explode = 11;
  inline bool has_a_explode() const;
  inline void clear_a_explode();
  static const int kAExplodeFieldNumber = 11;
  inline ::google::protobuf::uint32 a_explode() const;
  inline void set_a_explode(::google::protobuf::uint32 value);

  // optional uint32 d_explode = 12;
  inline bool has_d_explode() const;
  inline void clear_d_explode();
  static const int kDExplodeFieldNumber = 12;
  inline ::google::protobuf::uint32 d_explode() const;
  inline void set_d_explode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.Turn)
 private:
  inline void set_has_a_shape();
  inline void clear_has_a_shape();
  inline void set_has_d_shape();
  inline void clear_has_d_shape();
  inline void set_has_att_shape();
  inline void clear_has_att_shape();
  inline void set_has_def_shape();
  inline void clear_has_def_shape();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_nextts();
  inline void clear_has_nextts();
  inline void set_has_a_explode();
  inline void clear_has_a_explode();
  inline void set_has_d_explode();
  inline void clear_has_d_explode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 a_shape_;
  ::google::protobuf::uint32 d_shape_;
  ::google::protobuf::uint32 att_shape_;
  ::google::protobuf::uint32 def_shape_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > a_skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > d_skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > a_attack_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > d_attack_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 nextts_;
  ::google::protobuf::uint32 a_explode_;
  ::google::protobuf::uint32 d_explode_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static Turn* default_instance_;
};
// -------------------------------------------------------------------

class ReplyCity : public ::google::protobuf::Message {
 public:
  ReplyCity();
  virtual ~ReplyCity();

  ReplyCity(const ReplyCity& from);

  inline ReplyCity& operator=(const ReplyCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyCity& default_instance();

  void Swap(ReplyCity* other);

  // implements Message ----------------------------------------------

  ReplyCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyCity& from);
  void MergeFrom(const ReplyCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.HeroUid attacker = 1;
  inline int attacker_size() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  inline const ::ProtoBattleField::HeroUid& attacker(int index) const;
  inline ::ProtoBattleField::HeroUid* mutable_attacker(int index);
  inline ::ProtoBattleField::HeroUid* add_attacker();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
      attacker() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
      mutable_attacker();

  // repeated .ProtoBattleField.HeroUid defender = 2;
  inline int defender_size() const;
  inline void clear_defender();
  static const int kDefenderFieldNumber = 2;
  inline const ::ProtoBattleField::HeroUid& defender(int index) const;
  inline ::ProtoBattleField::HeroUid* mutable_defender(int index);
  inline ::ProtoBattleField::HeroUid* add_defender();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
      defender() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
      mutable_defender();

  // repeated .ProtoBattleField.UserInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::ProtoBattleField::UserInfo& info(int index) const;
  inline ::ProtoBattleField::UserInfo* mutable_info(int index);
  inline ::ProtoBattleField::UserInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >*
      mutable_info();

  // optional uint32 ts = 4;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 4;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // optional uint32 nextts = 5;
  inline bool has_nextts() const;
  inline void clear_nextts();
  static const int kNexttsFieldNumber = 5;
  inline ::google::protobuf::uint32 nextts() const;
  inline void set_nextts(::google::protobuf::uint32 value);

  // optional .ProtoBattleField.Turn turn = 6;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 6;
  inline const ::ProtoBattleField::Turn& turn() const;
  inline ::ProtoBattleField::Turn* mutable_turn();
  inline ::ProtoBattleField::Turn* release_turn();
  inline void set_allocated_turn(::ProtoBattleField::Turn* turn);

  // required uint32 gid = 7;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 7;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // required uint32 type = 8;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 cid = 9;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 9;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required uint32 uid = 10;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 10;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 gate = 11;
  inline bool has_gate() const;
  inline void clear_gate();
  static const int kGateFieldNumber = 11;
  inline ::google::protobuf::uint32 gate() const;
  inline void set_gate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyCity)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_nextts();
  inline void clear_has_nextts();
  inline void set_has_turn();
  inline void clear_has_turn();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gate();
  inline void clear_has_gate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid > attacker_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid > defender_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo > info_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 nextts_;
  ::ProtoBattleField::Turn* turn_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 gate_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyCity* default_instance_;
};
// -------------------------------------------------------------------

class QuitCity : public ::google::protobuf::Message {
 public:
  QuitCity();
  virtual ~QuitCity();

  QuitCity(const QuitCity& from);

  inline QuitCity& operator=(const QuitCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitCity& default_instance();

  void Swap(QuitCity* other);

  // implements Message ----------------------------------------------

  QuitCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitCity& from);
  void MergeFrom(const QuitCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.QuitCity)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static QuitCity* default_instance_;
};
// -------------------------------------------------------------------

class QuitGate : public ::google::protobuf::Message {
 public:
  QuitGate();
  virtual ~QuitGate();

  QuitGate(const QuitGate& from);

  inline QuitGate& operator=(const QuitGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitGate& default_instance();

  void Swap(QuitGate* other);

  // implements Message ----------------------------------------------

  QuitGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitGate& from);
  void MergeFrom(const QuitGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.QuitGate)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static QuitGate* default_instance_;
};
// -------------------------------------------------------------------

class QuitRush : public ::google::protobuf::Message {
 public:
  QuitRush();
  virtual ~QuitRush();

  QuitRush(const QuitRush& from);

  inline QuitRush& operator=(const QuitRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitRush& default_instance();

  void Swap(QuitRush* other);

  // implements Message ----------------------------------------------

  QuitRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitRush& from);
  void MergeFrom(const QuitRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 euid = 3;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 3;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 eid = 4;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 4;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.QuitRush)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 eid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static QuitRush* default_instance_;
};
// -------------------------------------------------------------------

class QuitLadder : public ::google::protobuf::Message {
 public:
  QuitLadder();
  virtual ~QuitLadder();

  QuitLadder(const QuitLadder& from);

  inline QuitLadder& operator=(const QuitLadder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitLadder& default_instance();

  void Swap(QuitLadder* other);

  // implements Message ----------------------------------------------

  QuitLadder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitLadder& from);
  void MergeFrom(const QuitLadder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.QuitLadder)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static QuitLadder* default_instance_;
};
// -------------------------------------------------------------------

class RequestList : public ::google::protobuf::Message {
 public:
  RequestList();
  virtual ~RequestList();

  RequestList(const RequestList& from);

  inline RequestList& operator=(const RequestList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestList& default_instance();

  void Swap(RequestList* other);

  // implements Message ----------------------------------------------

  RequestList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestList& from);
  void MergeFrom(const RequestList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required bool attack = 2;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 2;
  inline bool attack() const;
  inline void set_attack(bool value);

  // required uint32 page = 3;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 3;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestList)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  bool attack_;
  ::google::protobuf::uint32 page_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestList* default_instance_;
};
// -------------------------------------------------------------------

class ReplyList : public ::google::protobuf::Message {
 public:
  ReplyList();
  virtual ~ReplyList();

  ReplyList(const ReplyList& from);

  inline ReplyList& operator=(const ReplyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyList& default_instance();

  void Swap(ReplyList* other);

  // implements Message ----------------------------------------------

  ReplyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyList& from);
  void MergeFrom(const ReplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.HidUid queue = 1;
  inline int queue_size() const;
  inline void clear_queue();
  static const int kQueueFieldNumber = 1;
  inline const ::ProtoBattleField::HidUid& queue(int index) const;
  inline ::ProtoBattleField::HidUid* mutable_queue(int index);
  inline ::ProtoBattleField::HidUid* add_queue();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HidUid >&
      queue() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HidUid >*
      mutable_queue();

  // repeated .ProtoBattleField.UserInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::ProtoBattleField::UserInfo& info(int index) const;
  inline ::ProtoBattleField::UserInfo* mutable_info(int index);
  inline ::ProtoBattleField::UserInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HidUid > queue_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo > info_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyList* default_instance_;
};
// -------------------------------------------------------------------

class SkillOrShapeCity : public ::google::protobuf::Message {
 public:
  SkillOrShapeCity();
  virtual ~SkillOrShapeCity();

  SkillOrShapeCity(const SkillOrShapeCity& from);

  inline SkillOrShapeCity& operator=(const SkillOrShapeCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOrShapeCity& default_instance();

  void Swap(SkillOrShapeCity* other);

  // implements Message ----------------------------------------------

  SkillOrShapeCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOrShapeCity& from);
  void MergeFrom(const SkillOrShapeCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 shape = 2;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 2;
  inline ::google::protobuf::uint32 shape() const;
  inline void set_shape(::google::protobuf::uint32 value);

  // required uint32 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SkillOrShapeCity)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 shape_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SkillOrShapeCity* default_instance_;
};
// -------------------------------------------------------------------

class SkillOrShapeGate : public ::google::protobuf::Message {
 public:
  SkillOrShapeGate();
  virtual ~SkillOrShapeGate();

  SkillOrShapeGate(const SkillOrShapeGate& from);

  inline SkillOrShapeGate& operator=(const SkillOrShapeGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOrShapeGate& default_instance();

  void Swap(SkillOrShapeGate* other);

  // implements Message ----------------------------------------------

  SkillOrShapeGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOrShapeGate& from);
  void MergeFrom(const SkillOrShapeGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 shape = 2;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 2;
  inline ::google::protobuf::uint32 shape() const;
  inline void set_shape(::google::protobuf::uint32 value);

  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SkillOrShapeGate)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 shape_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SkillOrShapeGate* default_instance_;
};
// -------------------------------------------------------------------

class SkillOrShapeRush : public ::google::protobuf::Message {
 public:
  SkillOrShapeRush();
  virtual ~SkillOrShapeRush();

  SkillOrShapeRush(const SkillOrShapeRush& from);

  inline SkillOrShapeRush& operator=(const SkillOrShapeRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOrShapeRush& default_instance();

  void Swap(SkillOrShapeRush* other);

  // implements Message ----------------------------------------------

  SkillOrShapeRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOrShapeRush& from);
  void MergeFrom(const SkillOrShapeRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 shape = 2;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 2;
  inline ::google::protobuf::uint32 shape() const;
  inline void set_shape(::google::protobuf::uint32 value);

  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 euid = 5;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 5;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 eid = 6;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 6;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SkillOrShapeRush)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 shape_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 eid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SkillOrShapeRush* default_instance_;
};
// -------------------------------------------------------------------

class SkillOrShapeLadder : public ::google::protobuf::Message {
 public:
  SkillOrShapeLadder();
  virtual ~SkillOrShapeLadder();

  SkillOrShapeLadder(const SkillOrShapeLadder& from);

  inline SkillOrShapeLadder& operator=(const SkillOrShapeLadder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOrShapeLadder& default_instance();

  void Swap(SkillOrShapeLadder* other);

  // implements Message ----------------------------------------------

  SkillOrShapeLadder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOrShapeLadder& from);
  void MergeFrom(const SkillOrShapeLadder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 shape = 2;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 2;
  inline ::google::protobuf::uint32 shape() const;
  inline void set_shape(::google::protobuf::uint32 value);

  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SkillOrShapeLadder)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 shape_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SkillOrShapeLadder* default_instance_;
};
// -------------------------------------------------------------------

class BattleOver : public ::google::protobuf::Message {
 public:
  BattleOver();
  virtual ~BattleOver();

  BattleOver(const BattleOver& from);

  inline BattleOver& operator=(const BattleOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleOver& default_instance();

  void Swap(BattleOver* other);

  // implements Message ----------------------------------------------

  BattleOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleOver& from);
  void MergeFrom(const BattleOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool attackerwin = 1;
  inline bool has_attackerwin() const;
  inline void clear_attackerwin();
  static const int kAttackerwinFieldNumber = 1;
  inline bool attackerwin() const;
  inline void set_attackerwin(bool value);

  // optional .ProtoBattleField.UserReward reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::ProtoBattleField::UserReward& reward() const;
  inline ::ProtoBattleField::UserReward* mutable_reward();
  inline ::ProtoBattleField::UserReward* release_reward();
  inline void set_allocated_reward(::ProtoBattleField::UserReward* reward);

  // optional uint32 gate = 3;
  inline bool has_gate() const;
  inline void clear_gate();
  static const int kGateFieldNumber = 3;
  inline ::google::protobuf::uint32 gate() const;
  inline void set_gate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.BattleOver)
 private:
  inline void set_has_attackerwin();
  inline void clear_has_attackerwin();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_gate();
  inline void clear_has_gate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoBattleField::UserReward* reward_;
  bool attackerwin_;
  ::google::protobuf::uint32 gate_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleOver* default_instance_;
};
// -------------------------------------------------------------------

class StartRush : public ::google::protobuf::Message {
 public:
  StartRush();
  virtual ~StartRush();

  StartRush(const StartRush& from);

  inline StartRush& operator=(const StartRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartRush& default_instance();

  void Swap(StartRush* other);

  // implements Message ----------------------------------------------

  StartRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartRush& from);
  void MergeFrom(const StartRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.StartRush)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static StartRush* default_instance_;
};
// -------------------------------------------------------------------

class SendRush : public ::google::protobuf::Message {
 public:
  SendRush();
  virtual ~SendRush();

  SendRush(const SendRush& from);

  inline SendRush& operator=(const SendRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendRush& default_instance();

  void Swap(SendRush* other);

  // implements Message ----------------------------------------------

  SendRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendRush& from);
  void MergeFrom(const SendRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 euid = 3;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 3;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 eid = 4;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 4;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SendRush)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 eid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SendRush* default_instance_;
};
// -------------------------------------------------------------------

class RequestVision : public ::google::protobuf::Message {
 public:
  RequestVision();
  virtual ~RequestVision();

  RequestVision(const RequestVision& from);

  inline RequestVision& operator=(const RequestVision& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVision& default_instance();

  void Swap(RequestVision* other);

  // implements Message ----------------------------------------------

  RequestVision* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestVision& from);
  void MergeFrom(const RequestVision& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // optional uint32 equd = 3;
  inline bool has_equd() const;
  inline void clear_equd();
  static const int kEqudFieldNumber = 3;
  inline ::google::protobuf::uint32 equd() const;
  inline void set_equd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestVision)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_equd();
  inline void clear_has_equd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 equd_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestVision* default_instance_;
};
// -------------------------------------------------------------------

class ReplyVision : public ::google::protobuf::Message {
 public:
  ReplyVision();
  virtual ~ReplyVision();

  ReplyVision(const ReplyVision& from);

  inline ReplyVision& operator=(const ReplyVision& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyVision& default_instance();

  void Swap(ReplyVision* other);

  // implements Message ----------------------------------------------

  ReplyVision* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyVision& from);
  void MergeFrom(const ReplyVision& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyVision)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyVision* default_instance_;
};
// -------------------------------------------------------------------

class ImmediatelyCity : public ::google::protobuf::Message {
 public:
  ImmediatelyCity();
  virtual ~ImmediatelyCity();

  ImmediatelyCity(const ImmediatelyCity& from);

  inline ImmediatelyCity& operator=(const ImmediatelyCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmediatelyCity& default_instance();

  void Swap(ImmediatelyCity* other);

  // implements Message ----------------------------------------------

  ImmediatelyCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImmediatelyCity& from);
  void MergeFrom(const ImmediatelyCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ImmediatelyCity)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ImmediatelyCity* default_instance_;
};
// -------------------------------------------------------------------

class ImmediatelyGate : public ::google::protobuf::Message {
 public:
  ImmediatelyGate();
  virtual ~ImmediatelyGate();

  ImmediatelyGate(const ImmediatelyGate& from);

  inline ImmediatelyGate& operator=(const ImmediatelyGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmediatelyGate& default_instance();

  void Swap(ImmediatelyGate* other);

  // implements Message ----------------------------------------------

  ImmediatelyGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImmediatelyGate& from);
  void MergeFrom(const ImmediatelyGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ImmediatelyGate)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ImmediatelyGate* default_instance_;
};
// -------------------------------------------------------------------

class ImmediatelyRush : public ::google::protobuf::Message {
 public:
  ImmediatelyRush();
  virtual ~ImmediatelyRush();

  ImmediatelyRush(const ImmediatelyRush& from);

  inline ImmediatelyRush& operator=(const ImmediatelyRush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmediatelyRush& default_instance();

  void Swap(ImmediatelyRush* other);

  // implements Message ----------------------------------------------

  ImmediatelyRush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImmediatelyRush& from);
  void MergeFrom(const ImmediatelyRush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 euid = 3;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 3;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 eid = 4;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 4;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ImmediatelyRush)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 eid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ImmediatelyRush* default_instance_;
};
// -------------------------------------------------------------------

class ImmediatelyLadder : public ::google::protobuf::Message {
 public:
  ImmediatelyLadder();
  virtual ~ImmediatelyLadder();

  ImmediatelyLadder(const ImmediatelyLadder& from);

  inline ImmediatelyLadder& operator=(const ImmediatelyLadder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmediatelyLadder& default_instance();

  void Swap(ImmediatelyLadder* other);

  // implements Message ----------------------------------------------

  ImmediatelyLadder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImmediatelyLadder& from);
  void MergeFrom(const ImmediatelyLadder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ImmediatelyLadder)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ImmediatelyLadder* default_instance_;
};
// -------------------------------------------------------------------

class NPCMove : public ::google::protobuf::Message {
 public:
  NPCMove();
  virtual ~NPCMove();

  NPCMove(const NPCMove& from);

  inline NPCMove& operator=(const NPCMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCMove& default_instance();

  void Swap(NPCMove* other);

  // implements Message ----------------------------------------------

  NPCMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCMove& from);
  void MergeFrom(const NPCMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 cids = 2;
  inline int cids_size() const;
  inline void clear_cids();
  static const int kCidsFieldNumber = 2;
  inline ::google::protobuf::uint32 cids(int index) const;
  inline void set_cids(int index, ::google::protobuf::uint32 value);
  inline void add_cids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cids();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.NPCMove)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cids_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static NPCMove* default_instance_;
};
// -------------------------------------------------------------------

class SendNPCMove : public ::google::protobuf::Message {
 public:
  SendNPCMove();
  virtual ~SendNPCMove();

  SendNPCMove(const SendNPCMove& from);

  inline SendNPCMove& operator=(const SendNPCMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendNPCMove& default_instance();

  void Swap(SendNPCMove* other);

  // implements Message ----------------------------------------------

  SendNPCMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendNPCMove& from);
  void MergeFrom(const SendNPCMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.NPCMove move = 1;
  inline int move_size() const;
  inline void clear_move();
  static const int kMoveFieldNumber = 1;
  inline const ::ProtoBattleField::NPCMove& move(int index) const;
  inline ::ProtoBattleField::NPCMove* mutable_move(int index);
  inline ::ProtoBattleField::NPCMove* add_move();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::NPCMove >&
      move() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::NPCMove >*
      mutable_move();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.SendNPCMove)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::NPCMove > move_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static SendNPCMove* default_instance_;
};
// -------------------------------------------------------------------

class RequestRewardInfo : public ::google::protobuf::Message {
 public:
  RequestRewardInfo();
  virtual ~RequestRewardInfo();

  RequestRewardInfo(const RequestRewardInfo& from);

  inline RequestRewardInfo& operator=(const RequestRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRewardInfo& default_instance();

  void Swap(RequestRewardInfo* other);

  // implements Message ----------------------------------------------

  RequestRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRewardInfo& from);
  void MergeFrom(const RequestRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestRewardInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReplyRewardInfo : public ::google::protobuf::Message {
 public:
  ReplyRewardInfo();
  virtual ~ReplyRewardInfo();

  ReplyRewardInfo(const ReplyRewardInfo& from);

  inline ReplyRewardInfo& operator=(const ReplyRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyRewardInfo& default_instance();

  void Swap(ReplyRewardInfo* other);

  // implements Message ----------------------------------------------

  ReplyRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyRewardInfo& from);
  void MergeFrom(const ReplyRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 history = 1;
  inline int history_size() const;
  inline void clear_history();
  static const int kHistoryFieldNumber = 1;
  inline ::google::protobuf::uint32 history(int index) const;
  inline void set_history(int index, ::google::protobuf::uint32 value);
  inline void add_history(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      history() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_history();

  // required uint32 mkill = 2;
  inline bool has_mkill() const;
  inline void clear_mkill();
  static const int kMkillFieldNumber = 2;
  inline ::google::protobuf::uint32 mkill() const;
  inline void set_mkill(::google::protobuf::uint32 value);

  // required uint32 kill = 3;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 3;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);

  // required uint32 occupy = 4;
  inline bool has_occupy() const;
  inline void clear_occupy();
  static const int kOccupyFieldNumber = 4;
  inline ::google::protobuf::uint32 occupy() const;
  inline void set_occupy(::google::protobuf::uint32 value);

  // required uint32 foccupy = 5;
  inline bool has_foccupy() const;
  inline void clear_foccupy();
  static const int kFoccupyFieldNumber = 5;
  inline ::google::protobuf::uint32 foccupy() const;
  inline void set_foccupy(::google::protobuf::uint32 value);

  // required uint32 rush = 6;
  inline bool has_rush() const;
  inline void clear_rush();
  static const int kRushFieldNumber = 6;
  inline ::google::protobuf::uint32 rush() const;
  inline void set_rush(::google::protobuf::uint32 value);

  // required uint32 reward = 7;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 7;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // required uint32 rewardb = 8;
  inline bool has_rewardb() const;
  inline void clear_rewardb();
  static const int kRewardbFieldNumber = 8;
  inline ::google::protobuf::uint32 rewardb() const;
  inline void set_rewardb(::google::protobuf::uint32 value);

  // repeated .ProtoBattleField.Mission mission = 9;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 9;
  inline const ::ProtoBattleField::Mission& mission(int index) const;
  inline ::ProtoBattleField::Mission* mutable_mission(int index);
  inline ::ProtoBattleField::Mission* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
      mutable_mission();

  // required uint32 mp1 = 10;
  inline bool has_mp1() const;
  inline void clear_mp1();
  static const int kMp1FieldNumber = 10;
  inline ::google::protobuf::uint32 mp1() const;
  inline void set_mp1(::google::protobuf::uint32 value);

  // required uint32 mp2 = 11;
  inline bool has_mp2() const;
  inline void clear_mp2();
  static const int kMp2FieldNumber = 11;
  inline ::google::protobuf::uint32 mp2() const;
  inline void set_mp2(::google::protobuf::uint32 value);

  // required uint32 mk1 = 12;
  inline bool has_mk1() const;
  inline void clear_mk1();
  static const int kMk1FieldNumber = 12;
  inline ::google::protobuf::uint32 mk1() const;
  inline void set_mk1(::google::protobuf::uint32 value);

  // required uint32 mk2 = 13;
  inline bool has_mk2() const;
  inline void clear_mk2();
  static const int kMk2FieldNumber = 13;
  inline ::google::protobuf::uint32 mk2() const;
  inline void set_mk2(::google::protobuf::uint32 value);

  // required uint32 mp3 = 14;
  inline bool has_mp3() const;
  inline void clear_mp3();
  static const int kMp3FieldNumber = 14;
  inline ::google::protobuf::uint32 mp3() const;
  inline void set_mp3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyRewardInfo)
 private:
  inline void set_has_mkill();
  inline void clear_has_mkill();
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_occupy();
  inline void clear_has_occupy();
  inline void set_has_foccupy();
  inline void clear_has_foccupy();
  inline void set_has_rush();
  inline void clear_has_rush();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_rewardb();
  inline void clear_has_rewardb();
  inline void set_has_mp1();
  inline void clear_has_mp1();
  inline void set_has_mp2();
  inline void clear_has_mp2();
  inline void set_has_mk1();
  inline void clear_has_mk1();
  inline void set_has_mk2();
  inline void clear_has_mk2();
  inline void set_has_mp3();
  inline void clear_has_mp3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > history_;
  ::google::protobuf::uint32 mkill_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 occupy_;
  ::google::protobuf::uint32 foccupy_;
  ::google::protobuf::uint32 rush_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission > mission_;
  ::google::protobuf::uint32 rewardb_;
  ::google::protobuf::uint32 mp1_;
  ::google::protobuf::uint32 mp2_;
  ::google::protobuf::uint32 mk1_;
  ::google::protobuf::uint32 mk2_;
  ::google::protobuf::uint32 mp3_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestHistoryReward : public ::google::protobuf::Message {
 public:
  RequestHistoryReward();
  virtual ~RequestHistoryReward();

  RequestHistoryReward(const RequestHistoryReward& from);

  inline RequestHistoryReward& operator=(const RequestHistoryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHistoryReward& default_instance();

  void Swap(RequestHistoryReward* other);

  // implements Message ----------------------------------------------

  RequestHistoryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHistoryReward& from);
  void MergeFrom(const RequestHistoryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestHistoryReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestHistoryReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyHistoryReward : public ::google::protobuf::Message {
 public:
  ReplyHistoryReward();
  virtual ~ReplyHistoryReward();

  ReplyHistoryReward(const ReplyHistoryReward& from);

  inline ReplyHistoryReward& operator=(const ReplyHistoryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyHistoryReward& default_instance();

  void Swap(ReplyHistoryReward* other);

  // implements Message ----------------------------------------------

  ReplyHistoryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyHistoryReward& from);
  void MergeFrom(const ReplyHistoryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rests = 1;
  inline bool has_rests() const;
  inline void clear_rests();
  static const int kRestsFieldNumber = 1;
  inline ::google::protobuf::uint32 rests() const;
  inline void set_rests(::google::protobuf::uint32 value);

  // required uint32 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional uint32 iron = 3;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 3;
  inline ::google::protobuf::uint32 iron() const;
  inline void set_iron(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyHistoryReward)
 private:
  inline void set_has_rests();
  inline void clear_has_rests();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_iron();
  inline void clear_has_iron();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rests_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 iron_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyHistoryReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestKillReward : public ::google::protobuf::Message {
 public:
  RequestKillReward();
  virtual ~RequestKillReward();

  RequestKillReward(const RequestKillReward& from);

  inline RequestKillReward& operator=(const RequestKillReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestKillReward& default_instance();

  void Swap(RequestKillReward* other);

  // implements Message ----------------------------------------------

  RequestKillReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestKillReward& from);
  void MergeFrom(const RequestKillReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestKillReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestKillReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyKillReward : public ::google::protobuf::Message {
 public:
  ReplyKillReward();
  virtual ~ReplyKillReward();

  ReplyKillReward(const ReplyKillReward& from);

  inline ReplyKillReward& operator=(const ReplyKillReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyKillReward& default_instance();

  void Swap(ReplyKillReward* other);

  // implements Message ----------------------------------------------

  ReplyKillReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyKillReward& from);
  void MergeFrom(const ReplyKillReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // optional .DataCommon.CommonBaseRewardCPP base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // required uint32 exploit_box_cnt = 3;
  inline bool has_exploit_box_cnt() const;
  inline void clear_exploit_box_cnt();
  static const int kExploitBoxCntFieldNumber = 3;
  inline ::google::protobuf::uint32 exploit_box_cnt() const;
  inline void set_exploit_box_cnt(::google::protobuf::uint32 value);

  // required uint32 multiple = 4;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 4;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // optional uint32 equips_cnt = 5;
  inline bool has_equips_cnt() const;
  inline void clear_equips_cnt();
  static const int kEquipsCntFieldNumber = 5;
  inline ::google::protobuf::uint32 equips_cnt() const;
  inline void set_equips_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyKillReward)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_exploit_box_cnt();
  inline void clear_has_exploit_box_cnt();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_equips_cnt();
  inline void clear_has_equips_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::uint32 exploit_box_cnt_;
  ::google::protobuf::uint32 multiple_;
  ::google::protobuf::uint32 equips_cnt_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyKillReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestMissionPersonalReward : public ::google::protobuf::Message {
 public:
  RequestMissionPersonalReward();
  virtual ~RequestMissionPersonalReward();

  RequestMissionPersonalReward(const RequestMissionPersonalReward& from);

  inline RequestMissionPersonalReward& operator=(const RequestMissionPersonalReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMissionPersonalReward& default_instance();

  void Swap(RequestMissionPersonalReward* other);

  // implements Message ----------------------------------------------

  RequestMissionPersonalReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMissionPersonalReward& from);
  void MergeFrom(const RequestMissionPersonalReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_no = 1;
  inline bool has_task_no() const;
  inline void clear_task_no();
  static const int kTaskNoFieldNumber = 1;
  inline ::google::protobuf::uint32 task_no() const;
  inline void set_task_no(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestMissionPersonalReward)
 private:
  inline void set_has_task_no();
  inline void clear_has_task_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 task_no_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestMissionPersonalReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMissionPersonalReward : public ::google::protobuf::Message {
 public:
  ReplyMissionPersonalReward();
  virtual ~ReplyMissionPersonalReward();

  ReplyMissionPersonalReward(const ReplyMissionPersonalReward& from);

  inline ReplyMissionPersonalReward& operator=(const ReplyMissionPersonalReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMissionPersonalReward& default_instance();

  void Swap(ReplyMissionPersonalReward* other);

  // implements Message ----------------------------------------------

  ReplyMissionPersonalReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMissionPersonalReward& from);
  void MergeFrom(const ReplyMissionPersonalReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.EquipmentAllCPP equips = 1;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::DataCommon::EquipmentAllCPP& equips() const;
  inline ::DataCommon::EquipmentAllCPP* mutable_equips();
  inline ::DataCommon::EquipmentAllCPP* release_equips();
  inline void set_allocated_equips(::DataCommon::EquipmentAllCPP* equips);

  // repeated uint32 equips_cnt = 2;
  inline int equips_cnt_size() const;
  inline void clear_equips_cnt();
  static const int kEquipsCntFieldNumber = 2;
  inline ::google::protobuf::uint32 equips_cnt(int index) const;
  inline void set_equips_cnt(int index, ::google::protobuf::uint32 value);
  inline void add_equips_cnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equips_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equips_cnt();

  // optional .DataCommon.CommonBaseRewardCPP base = 3;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 3;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // repeated uint32 mp = 4;
  inline int mp_size() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 4;
  inline ::google::protobuf::uint32 mp(int index) const;
  inline void set_mp(int index, ::google::protobuf::uint32 value);
  inline void add_mp(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mp();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyMissionPersonalReward)
 private:
  inline void set_has_equips();
  inline void clear_has_equips();
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::EquipmentAllCPP* equips_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equips_cnt_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mp_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyMissionPersonalReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestMissionCountryReward : public ::google::protobuf::Message {
 public:
  RequestMissionCountryReward();
  virtual ~RequestMissionCountryReward();

  RequestMissionCountryReward(const RequestMissionCountryReward& from);

  inline RequestMissionCountryReward& operator=(const RequestMissionCountryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMissionCountryReward& default_instance();

  void Swap(RequestMissionCountryReward* other);

  // implements Message ----------------------------------------------

  RequestMissionCountryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMissionCountryReward& from);
  void MergeFrom(const RequestMissionCountryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_no = 1;
  inline bool has_task_no() const;
  inline void clear_task_no();
  static const int kTaskNoFieldNumber = 1;
  inline ::google::protobuf::uint32 task_no() const;
  inline void set_task_no(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestMissionCountryReward)
 private:
  inline void set_has_task_no();
  inline void clear_has_task_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 task_no_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestMissionCountryReward* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMissionCountryReward : public ::google::protobuf::Message {
 public:
  ReplyMissionCountryReward();
  virtual ~ReplyMissionCountryReward();

  ReplyMissionCountryReward(const ReplyMissionCountryReward& from);

  inline ReplyMissionCountryReward& operator=(const ReplyMissionCountryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMissionCountryReward& default_instance();

  void Swap(ReplyMissionCountryReward* other);

  // implements Message ----------------------------------------------

  ReplyMissionCountryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMissionCountryReward& from);
  void MergeFrom(const ReplyMissionCountryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonBaseRewardCPP base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::DataCommon::CommonBaseRewardCPP& base() const;
  inline ::DataCommon::CommonBaseRewardCPP* mutable_base();
  inline ::DataCommon::CommonBaseRewardCPP* release_base();
  inline void set_allocated_base(::DataCommon::CommonBaseRewardCPP* base);

  // repeated uint32 mk = 2;
  inline int mk_size() const;
  inline void clear_mk();
  static const int kMkFieldNumber = 2;
  inline ::google::protobuf::uint32 mk(int index) const;
  inline void set_mk(int index, ::google::protobuf::uint32 value);
  inline void add_mk(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mk() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mk();

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyMissionCountryReward)
 private:
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonBaseRewardCPP* base_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mk_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyMissionCountryReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAuto : public ::google::protobuf::Message {
 public:
  RequestAuto();
  virtual ~RequestAuto();

  RequestAuto(const RequestAuto& from);

  inline RequestAuto& operator=(const RequestAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAuto& default_instance();

  void Swap(RequestAuto* other);

  // implements Message ----------------------------------------------

  RequestAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAuto& from);
  void MergeFrom(const RequestAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool b_atuo = 1;
  inline bool has_b_atuo() const;
  inline void clear_b_atuo();
  static const int kBAtuoFieldNumber = 1;
  inline bool b_atuo() const;
  inline void set_b_atuo(bool value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestAuto)
 private:
  inline void set_has_b_atuo();
  inline void clear_has_b_atuo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool b_atuo_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestAuto* default_instance_;
};
// -------------------------------------------------------------------

class RequestFight : public ::google::protobuf::Message {
 public:
  RequestFight();
  virtual ~RequestFight();

  RequestFight(const RequestFight& from);

  inline RequestFight& operator=(const RequestFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestFight& default_instance();

  void Swap(RequestFight* other);

  // implements Message ----------------------------------------------

  RequestFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestFight& from);
  void MergeFrom(const RequestFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBattleField.HeroUid attacker = 1;
  inline int attacker_size() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  inline const ::ProtoBattleField::HeroUid& attacker(int index) const;
  inline ::ProtoBattleField::HeroUid* mutable_attacker(int index);
  inline ::ProtoBattleField::HeroUid* add_attacker();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
      attacker() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
      mutable_attacker();

  // repeated .ProtoBattleField.HeroUid defender = 2;
  inline int defender_size() const;
  inline void clear_defender();
  static const int kDefenderFieldNumber = 2;
  inline const ::ProtoBattleField::HeroUid& defender(int index) const;
  inline ::ProtoBattleField::HeroUid* mutable_defender(int index);
  inline ::ProtoBattleField::HeroUid* add_defender();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
      defender() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
      mutable_defender();

  // required uint32 gid = 3;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 3;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // required uint32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.RequestFight)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid > attacker_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid > defender_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static RequestFight* default_instance_;
};
// -------------------------------------------------------------------

class ReplyFight : public ::google::protobuf::Message {
 public:
  ReplyFight();
  virtual ~ReplyFight();

  ReplyFight(const ReplyFight& from);

  inline ReplyFight& operator=(const ReplyFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyFight& default_instance();

  void Swap(ReplyFight* other);

  // implements Message ----------------------------------------------

  ReplyFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyFight& from);
  void MergeFrom(const ReplyFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .ProtoBattleField.Turn turn = 2;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 2;
  inline const ::ProtoBattleField::Turn& turn() const;
  inline ::ProtoBattleField::Turn* mutable_turn();
  inline ::ProtoBattleField::Turn* release_turn();
  inline void set_allocated_turn(::ProtoBattleField::Turn* turn);

  // @@protoc_insertion_point(class_scope:ProtoBattleField.ReplyFight)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_turn();
  inline void clear_has_turn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoBattleField::Turn* turn_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoBattleField_2eproto();
  friend void protobuf_AssignDesc_ProtoBattleField_2eproto();
  friend void protobuf_ShutdownFile_ProtoBattleField_2eproto();

  void InitAsDefaultInstance();
  static ReplyFight* default_instance_;
};
// ===================================================================


// ===================================================================

// Hero

// required uint32 id = 1;
inline bool Hero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hero::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Hero::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.id)
  return id_;
}
inline void Hero::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.id)
}

// repeated int32 property = 2;
inline int Hero::property_size() const {
  return property_.size();
}
inline void Hero::clear_property() {
  property_.Clear();
}
inline ::google::protobuf::int32 Hero::property(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.property)
  return property_.Get(index);
}
inline void Hero::set_property(int index, ::google::protobuf::int32 value) {
  property_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.property)
}
inline void Hero::add_property(::google::protobuf::int32 value) {
  property_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Hero.property)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Hero::property() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Hero.property)
  return property_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Hero::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Hero.property)
  return &property_;
}

// repeated int32 hp = 3;
inline int Hero::hp_size() const {
  return hp_.size();
}
inline void Hero::clear_hp() {
  hp_.Clear();
}
inline ::google::protobuf::int32 Hero::hp(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.hp)
  return hp_.Get(index);
}
inline void Hero::set_hp(int index, ::google::protobuf::int32 value) {
  hp_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.hp)
}
inline void Hero::add_hp(::google::protobuf::int32 value) {
  hp_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Hero.hp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Hero::hp() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Hero.hp)
  return hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Hero::mutable_hp() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Hero.hp)
  return &hp_;
}

// repeated uint32 shape = 4;
inline int Hero::shape_size() const {
  return shape_.size();
}
inline void Hero::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::uint32 Hero::shape(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.shape)
  return shape_.Get(index);
}
inline void Hero::set_shape(int index, ::google::protobuf::uint32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.shape)
}
inline void Hero::add_shape(::google::protobuf::uint32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Hero.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Hero::shape() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Hero.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Hero::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Hero.shape)
  return &shape_;
}

// optional uint32 skill = 5;
inline bool Hero::has_skill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Hero::set_has_skill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Hero::clear_has_skill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Hero::clear_skill() {
  skill_ = 0u;
  clear_has_skill();
}
inline ::google::protobuf::uint32 Hero::skill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.skill)
  return skill_;
}
inline void Hero::set_skill(::google::protobuf::uint32 value) {
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.skill)
}

// required uint32 extraid = 6;
inline bool Hero::has_extraid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Hero::set_has_extraid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Hero::clear_has_extraid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Hero::clear_extraid() {
  extraid_ = 0u;
  clear_has_extraid();
}
inline ::google::protobuf::uint32 Hero::extraid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.extraid)
  return extraid_;
}
inline void Hero::set_extraid(::google::protobuf::uint32 value) {
  set_has_extraid();
  extraid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.extraid)
}

// required uint32 city = 7;
inline bool Hero::has_city() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Hero::set_has_city() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Hero::clear_has_city() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Hero::clear_city() {
  city_ = 0u;
  clear_has_city();
}
inline ::google::protobuf::uint32 Hero::city() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.city)
  return city_;
}
inline void Hero::set_city(::google::protobuf::uint32 value) {
  set_has_city();
  city_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.city)
}

// required uint32 gate = 8;
inline bool Hero::has_gate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Hero::set_has_gate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Hero::clear_has_gate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Hero::clear_gate() {
  gate_ = 0u;
  clear_has_gate();
}
inline ::google::protobuf::uint32 Hero::gate() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.gate)
  return gate_;
}
inline void Hero::set_gate(::google::protobuf::uint32 value) {
  set_has_gate();
  gate_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.gate)
}

// optional uint32 ouid = 9;
inline bool Hero::has_ouid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Hero::set_has_ouid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Hero::clear_has_ouid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Hero::clear_ouid() {
  ouid_ = 0u;
  clear_has_ouid();
}
inline ::google::protobuf::uint32 Hero::ouid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.ouid)
  return ouid_;
}
inline void Hero::set_ouid(::google::protobuf::uint32 value) {
  set_has_ouid();
  ouid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.ouid)
}

// optional uint32 oid = 10;
inline bool Hero::has_oid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Hero::set_has_oid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Hero::clear_has_oid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Hero::clear_oid() {
  oid_ = 0u;
  clear_has_oid();
}
inline ::google::protobuf::uint32 Hero::oid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Hero.oid)
  return oid_;
}
inline void Hero::set_oid(::google::protobuf::uint32 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Hero.oid)
}

// -------------------------------------------------------------------

// City

// required uint32 cid = 1;
inline bool City::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void City::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void City::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void City::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 City::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.City.cid)
  return cid_;
}
inline void City::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.City.cid)
}

// required uint32 kingdom = 2;
inline bool City::has_kingdom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void City::set_has_kingdom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void City::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void City::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 City::kingdom() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.City.kingdom)
  return kingdom_;
}
inline void City::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.City.kingdom)
}

// required bool fight = 3;
inline bool City::has_fight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void City::set_has_fight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void City::clear_has_fight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void City::clear_fight() {
  fight_ = false;
  clear_has_fight();
}
inline bool City::fight() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.City.fight)
  return fight_;
}
inline void City::set_fight(bool value) {
  set_has_fight();
  fight_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.City.fight)
}

// required uint32 uid = 4;
inline bool City::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void City::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void City::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void City::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 City::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.City.uid)
  return uid_;
}
inline void City::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.City.uid)
}

// optional bytes name = 5;
inline bool City::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void City::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void City::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void City::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& City::name() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.City.name)
  return *name_;
}
inline void City::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.City.name)
}
inline void City::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoBattleField.City.name)
}
inline void City::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoBattleField.City.name)
}
inline ::std::string* City::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.City.name)
  return name_;
}
inline ::std::string* City::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void City::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.City.name)
}

// -------------------------------------------------------------------

// Mission

// required uint32 m1 = 1;
inline bool Mission::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mission::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mission::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mission::clear_m1() {
  m1_ = 0u;
  clear_has_m1();
}
inline ::google::protobuf::uint32 Mission::m1() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Mission.m1)
  return m1_;
}
inline void Mission::set_m1(::google::protobuf::uint32 value) {
  set_has_m1();
  m1_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Mission.m1)
}

// required uint32 m2 = 2;
inline bool Mission::has_m2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mission::set_has_m2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mission::clear_has_m2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mission::clear_m2() {
  m2_ = 0u;
  clear_has_m2();
}
inline ::google::protobuf::uint32 Mission::m2() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Mission.m2)
  return m2_;
}
inline void Mission::set_m2(::google::protobuf::uint32 value) {
  set_has_m2();
  m2_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Mission.m2)
}

// required uint32 m1status = 3;
inline bool Mission::has_m1status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mission::set_has_m1status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mission::clear_has_m1status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mission::clear_m1status() {
  m1status_ = 0u;
  clear_has_m1status();
}
inline ::google::protobuf::uint32 Mission::m1status() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Mission.m1status)
  return m1status_;
}
inline void Mission::set_m1status(::google::protobuf::uint32 value) {
  set_has_m1status();
  m1status_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Mission.m1status)
}

// required uint32 m2status = 4;
inline bool Mission::has_m2status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Mission::set_has_m2status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Mission::clear_has_m2status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Mission::clear_m2status() {
  m2status_ = 0u;
  clear_has_m2status();
}
inline ::google::protobuf::uint32 Mission::m2status() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Mission.m2status)
  return m2status_;
}
inline void Mission::set_m2status(::google::protobuf::uint32 value) {
  set_has_m2status();
  m2status_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Mission.m2status)
}

// -------------------------------------------------------------------

// RMIField

// required uint32 aid = 1;
inline bool RMIField::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RMIField::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RMIField::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RMIField::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RMIField::aid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.aid)
  return aid_;
}
inline void RMIField::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.aid)
}

// required uint32 job = 2;
inline bool RMIField::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RMIField::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RMIField::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RMIField::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 RMIField::job() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.job)
  return job_;
}
inline void RMIField::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.job)
}

// required bool is_atuo = 3;
inline bool RMIField::has_is_atuo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RMIField::set_has_is_atuo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RMIField::clear_has_is_atuo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RMIField::clear_is_atuo() {
  is_atuo_ = false;
  clear_has_is_atuo();
}
inline bool RMIField::is_atuo() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.is_atuo)
  return is_atuo_;
}
inline void RMIField::set_is_atuo(bool value) {
  set_has_is_atuo();
  is_atuo_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.is_atuo)
}

// required uint32 forbid_talk_ts = 4;
inline bool RMIField::has_forbid_talk_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RMIField::set_has_forbid_talk_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RMIField::clear_has_forbid_talk_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RMIField::clear_forbid_talk_ts() {
  forbid_talk_ts_ = 0u;
  clear_has_forbid_talk_ts();
}
inline ::google::protobuf::uint32 RMIField::forbid_talk_ts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.forbid_talk_ts)
  return forbid_talk_ts_;
}
inline void RMIField::set_forbid_talk_ts(::google::protobuf::uint32 value) {
  set_has_forbid_talk_ts();
  forbid_talk_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.forbid_talk_ts)
}

// required uint32 forbid_move_ts = 5;
inline bool RMIField::has_forbid_move_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RMIField::set_has_forbid_move_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RMIField::clear_has_forbid_move_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RMIField::clear_forbid_move_ts() {
  forbid_move_ts_ = 0u;
  clear_has_forbid_move_ts();
}
inline ::google::protobuf::uint32 RMIField::forbid_move_ts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.forbid_move_ts)
  return forbid_move_ts_;
}
inline void RMIField::set_forbid_move_ts(::google::protobuf::uint32 value) {
  set_has_forbid_move_ts();
  forbid_move_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.forbid_move_ts)
}

// required uint32 silk = 6;
inline bool RMIField::has_silk() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RMIField::set_has_silk() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RMIField::clear_has_silk() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RMIField::clear_silk() {
  silk_ = 0u;
  clear_has_silk();
}
inline ::google::protobuf::uint32 RMIField::silk() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RMIField.silk)
  return silk_;
}
inline void RMIField::set_silk(::google::protobuf::uint32 value) {
  set_has_silk();
  silk_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RMIField.silk)
}

// -------------------------------------------------------------------

// BattleReward

// repeated uint32 c = 1;
inline int BattleReward::c_size() const {
  return c_.size();
}
inline void BattleReward::clear_c() {
  c_.Clear();
}
inline ::google::protobuf::uint32 BattleReward::c(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleReward.c)
  return c_.Get(index);
}
inline void BattleReward::set_c(int index, ::google::protobuf::uint32 value) {
  c_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleReward.c)
}
inline void BattleReward::add_c(::google::protobuf::uint32 value) {
  c_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.BattleReward.c)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleReward::c() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.BattleReward.c)
  return c_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleReward::mutable_c() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.BattleReward.c)
  return &c_;
}

// repeated uint32 r = 2;
inline int BattleReward::r_size() const {
  return r_.size();
}
inline void BattleReward::clear_r() {
  r_.Clear();
}
inline ::google::protobuf::uint32 BattleReward::r(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleReward.r)
  return r_.Get(index);
}
inline void BattleReward::set_r(int index, ::google::protobuf::uint32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleReward.r)
}
inline void BattleReward::add_r(::google::protobuf::uint32 value) {
  r_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.BattleReward.r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleReward::r() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.BattleReward.r)
  return r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleReward::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.BattleReward.r)
  return &r_;
}

// required uint32 rp = 4;
inline bool BattleReward::has_rp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleReward::set_has_rp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleReward::clear_has_rp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleReward::clear_rp() {
  rp_ = 0u;
  clear_has_rp();
}
inline ::google::protobuf::uint32 BattleReward::rp() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleReward.rp)
  return rp_;
}
inline void BattleReward::set_rp(::google::protobuf::uint32 value) {
  set_has_rp();
  rp_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleReward.rp)
}

// required uint32 ccd = 5;
inline bool BattleReward::has_ccd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleReward::set_has_ccd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleReward::clear_has_ccd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleReward::clear_ccd() {
  ccd_ = 0u;
  clear_has_ccd();
}
inline ::google::protobuf::uint32 BattleReward::ccd() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleReward.ccd)
  return ccd_;
}
inline void BattleReward::set_ccd(::google::protobuf::uint32 value) {
  set_has_ccd();
  ccd_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleReward.ccd)
}

// required uint32 ctimes = 6;
inline bool BattleReward::has_ctimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleReward::set_has_ctimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleReward::clear_has_ctimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleReward::clear_ctimes() {
  ctimes_ = 0u;
  clear_has_ctimes();
}
inline ::google::protobuf::uint32 BattleReward::ctimes() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleReward.ctimes)
  return ctimes_;
}
inline void BattleReward::set_ctimes(::google::protobuf::uint32 value) {
  set_has_ctimes();
  ctimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleReward.ctimes)
}

// -------------------------------------------------------------------

// Field

// repeated .ProtoBattleField.Hero hero = 1;
inline int Field::hero_size() const {
  return hero_.size();
}
inline void Field::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoBattleField::Hero& Field::hero(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Field.hero)
  return hero_.Get(index);
}
inline ::ProtoBattleField::Hero* Field::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.Field.hero)
  return hero_.Mutable(index);
}
inline ::ProtoBattleField::Hero* Field::add_hero() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.Field.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >&
Field::hero() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Field.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >*
Field::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Field.hero)
  return &hero_;
}

// repeated .ProtoBattleField.City city = 2;
inline int Field::city_size() const {
  return city_.size();
}
inline void Field::clear_city() {
  city_.Clear();
}
inline const ::ProtoBattleField::City& Field::city(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Field.city)
  return city_.Get(index);
}
inline ::ProtoBattleField::City* Field::mutable_city(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.Field.city)
  return city_.Mutable(index);
}
inline ::ProtoBattleField::City* Field::add_city() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.Field.city)
  return city_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >&
Field::city() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Field.city)
  return city_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >*
Field::mutable_city() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Field.city)
  return &city_;
}

// repeated .ProtoBattleField.Mission mission = 3;
inline int Field::mission_size() const {
  return mission_.size();
}
inline void Field::clear_mission() {
  mission_.Clear();
}
inline const ::ProtoBattleField::Mission& Field::mission(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Field.mission)
  return mission_.Get(index);
}
inline ::ProtoBattleField::Mission* Field::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.Field.mission)
  return mission_.Mutable(index);
}
inline ::ProtoBattleField::Mission* Field::add_mission() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.Field.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
Field::mission() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Field.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
Field::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Field.mission)
  return &mission_;
}

// required .ProtoBattleField.RMIField rmi = 4;
inline bool Field::has_rmi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Field::set_has_rmi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Field::clear_has_rmi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Field::clear_rmi() {
  if (rmi_ != NULL) rmi_->::ProtoBattleField::RMIField::Clear();
  clear_has_rmi();
}
inline const ::ProtoBattleField::RMIField& Field::rmi() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Field.rmi)
  return rmi_ != NULL ? *rmi_ : *default_instance_->rmi_;
}
inline ::ProtoBattleField::RMIField* Field::mutable_rmi() {
  set_has_rmi();
  if (rmi_ == NULL) rmi_ = new ::ProtoBattleField::RMIField;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.Field.rmi)
  return rmi_;
}
inline ::ProtoBattleField::RMIField* Field::release_rmi() {
  clear_has_rmi();
  ::ProtoBattleField::RMIField* temp = rmi_;
  rmi_ = NULL;
  return temp;
}
inline void Field::set_allocated_rmi(::ProtoBattleField::RMIField* rmi) {
  delete rmi_;
  rmi_ = rmi;
  if (rmi) {
    set_has_rmi();
  } else {
    clear_has_rmi();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.Field.rmi)
}

// required .ProtoBattleField.BattleReward reward = 5;
inline bool Field::has_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Field::set_has_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Field::clear_has_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Field::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoBattleField::BattleReward::Clear();
  clear_has_reward();
}
inline const ::ProtoBattleField::BattleReward& Field::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Field.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoBattleField::BattleReward* Field::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoBattleField::BattleReward;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.Field.reward)
  return reward_;
}
inline ::ProtoBattleField::BattleReward* Field::release_reward() {
  clear_has_reward();
  ::ProtoBattleField::BattleReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void Field::set_allocated_reward(::ProtoBattleField::BattleReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.Field.reward)
}

// -------------------------------------------------------------------

// ResetBattleReward

// repeated uint32 c = 1;
inline int ResetBattleReward::c_size() const {
  return c_.size();
}
inline void ResetBattleReward::clear_c() {
  c_.Clear();
}
inline ::google::protobuf::uint32 ResetBattleReward::c(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ResetBattleReward.c)
  return c_.Get(index);
}
inline void ResetBattleReward::set_c(int index, ::google::protobuf::uint32 value) {
  c_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ResetBattleReward.c)
}
inline void ResetBattleReward::add_c(::google::protobuf::uint32 value) {
  c_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ResetBattleReward.c)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ResetBattleReward::c() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ResetBattleReward.c)
  return c_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ResetBattleReward::mutable_c() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ResetBattleReward.c)
  return &c_;
}

// repeated uint32 r = 2;
inline int ResetBattleReward::r_size() const {
  return r_.size();
}
inline void ResetBattleReward::clear_r() {
  r_.Clear();
}
inline ::google::protobuf::uint32 ResetBattleReward::r(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ResetBattleReward.r)
  return r_.Get(index);
}
inline void ResetBattleReward::set_r(int index, ::google::protobuf::uint32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ResetBattleReward.r)
}
inline void ResetBattleReward::add_r(::google::protobuf::uint32 value) {
  r_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ResetBattleReward.r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ResetBattleReward::r() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ResetBattleReward.r)
  return r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ResetBattleReward::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ResetBattleReward.r)
  return &r_;
}

// -------------------------------------------------------------------

// RequestBattleReward

// required uint32 index = 1;
inline bool RequestBattleReward::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBattleReward::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBattleReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBattleReward::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 RequestBattleReward::index() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestBattleReward.index)
  return index_;
}
inline void RequestBattleReward::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestBattleReward.index)
}

// required bool cash = 2;
inline bool RequestBattleReward::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBattleReward::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBattleReward::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBattleReward::clear_cash() {
  cash_ = false;
  clear_has_cash();
}
inline bool RequestBattleReward::cash() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestBattleReward.cash)
  return cash_;
}
inline void RequestBattleReward::set_cash(bool value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestBattleReward.cash)
}

// -------------------------------------------------------------------

// ReplyBattleReward

// required uint32 type = 1;
inline bool ReplyBattleReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyBattleReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyBattleReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyBattleReward::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReplyBattleReward::type() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyBattleReward.type)
  return type_;
}
inline void ReplyBattleReward::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyBattleReward.type)
}

// required uint32 count = 2;
inline bool ReplyBattleReward::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyBattleReward::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyBattleReward::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyBattleReward::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ReplyBattleReward::count() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyBattleReward.count)
  return count_;
}
inline void ReplyBattleReward::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyBattleReward.count)
}

// optional uint32 equd = 3;
inline bool ReplyBattleReward::has_equd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyBattleReward::set_has_equd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyBattleReward::clear_has_equd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyBattleReward::clear_equd() {
  equd_ = 0u;
  clear_has_equd();
}
inline ::google::protobuf::uint32 ReplyBattleReward::equd() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyBattleReward.equd)
  return equd_;
}
inline void ReplyBattleReward::set_equd(::google::protobuf::uint32 value) {
  set_has_equd();
  equd_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyBattleReward.equd)
}

// -------------------------------------------------------------------

// HeroReward

// required uint32 id = 1;
inline bool HeroReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroReward::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroReward.id)
  return id_;
}
inline void HeroReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroReward.id)
}

// required uint32 hexp = 2;
inline bool HeroReward::has_hexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroReward::set_has_hexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroReward::clear_has_hexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroReward::clear_hexp() {
  hexp_ = 0u;
  clear_has_hexp();
}
inline ::google::protobuf::uint32 HeroReward::hexp() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroReward.hexp)
  return hexp_;
}
inline void HeroReward::set_hexp(::google::protobuf::uint32 value) {
  set_has_hexp();
  hexp_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroReward.hexp)
}

// required uint32 occupy = 3;
inline bool HeroReward::has_occupy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroReward::set_has_occupy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroReward::clear_has_occupy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroReward::clear_occupy() {
  occupy_ = 0u;
  clear_has_occupy();
}
inline ::google::protobuf::uint32 HeroReward::occupy() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroReward.occupy)
  return occupy_;
}
inline void HeroReward::set_occupy(::google::protobuf::uint32 value) {
  set_has_occupy();
  occupy_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroReward.occupy)
}

// required uint32 win = 4;
inline bool HeroReward::has_win() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroReward::set_has_win() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroReward::clear_has_win() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroReward::clear_win() {
  win_ = 0u;
  clear_has_win();
}
inline ::google::protobuf::uint32 HeroReward::win() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroReward.win)
  return win_;
}
inline void HeroReward::set_win(::google::protobuf::uint32 value) {
  set_has_win();
  win_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroReward.win)
}

// required uint32 kill = 5;
inline bool HeroReward::has_kill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroReward::set_has_kill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroReward::clear_has_kill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroReward::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 HeroReward::kill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroReward.kill)
  return kill_;
}
inline void HeroReward::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroReward.kill)
}

// -------------------------------------------------------------------

// ItemReward

// required uint32 id = 1;
inline bool ItemReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ItemReward::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ItemReward.id)
  return id_;
}
inline void ItemReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ItemReward.id)
}

// required uint32 count = 2;
inline bool ItemReward::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemReward::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemReward::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemReward::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ItemReward::count() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ItemReward.count)
  return count_;
}
inline void ItemReward::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ItemReward.count)
}

// -------------------------------------------------------------------

// UserReward

// required uint32 exp = 1;
inline bool UserReward::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserReward::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserReward::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserReward::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 UserReward::exp() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.exp)
  return exp_;
}
inline void UserReward::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.exp)
}

// required uint32 coin = 2;
inline bool UserReward::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserReward::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserReward::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserReward::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 UserReward::coin() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.coin)
  return coin_;
}
inline void UserReward::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.coin)
}

// required uint32 wood = 3;
inline bool UserReward::has_wood() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserReward::set_has_wood() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserReward::clear_has_wood() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserReward::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 UserReward::wood() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.wood)
  return wood_;
}
inline void UserReward::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.wood)
}

// required uint32 food = 4;
inline bool UserReward::has_food() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserReward::set_has_food() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserReward::clear_has_food() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserReward::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 UserReward::food() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.food)
  return food_;
}
inline void UserReward::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.food)
}

// required uint32 iron = 5;
inline bool UserReward::has_iron() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserReward::set_has_iron() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserReward::clear_has_iron() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserReward::clear_iron() {
  iron_ = 0u;
  clear_has_iron();
}
inline ::google::protobuf::uint32 UserReward::iron() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.iron)
  return iron_;
}
inline void UserReward::set_iron(::google::protobuf::uint32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.iron)
}

// required uint32 gem = 6;
inline bool UserReward::has_gem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserReward::set_has_gem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserReward::clear_has_gem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserReward::clear_gem() {
  gem_ = 0u;
  clear_has_gem();
}
inline ::google::protobuf::uint32 UserReward::gem() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.gem)
  return gem_;
}
inline void UserReward::set_gem(::google::protobuf::uint32 value) {
  set_has_gem();
  gem_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.gem)
}

// repeated .ProtoBattleField.HeroReward hexp = 7;
inline int UserReward::hexp_size() const {
  return hexp_.size();
}
inline void UserReward::clear_hexp() {
  hexp_.Clear();
}
inline const ::ProtoBattleField::HeroReward& UserReward::hexp(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.hexp)
  return hexp_.Get(index);
}
inline ::ProtoBattleField::HeroReward* UserReward::mutable_hexp(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.UserReward.hexp)
  return hexp_.Mutable(index);
}
inline ::ProtoBattleField::HeroReward* UserReward::add_hexp() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.UserReward.hexp)
  return hexp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroReward >&
UserReward::hexp() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.UserReward.hexp)
  return hexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroReward >*
UserReward::mutable_hexp() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.UserReward.hexp)
  return &hexp_;
}

// optional uint32 kill = 8;
inline bool UserReward::has_kill() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserReward::set_has_kill() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserReward::clear_has_kill() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserReward::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 UserReward::kill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.kill)
  return kill_;
}
inline void UserReward::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.kill)
}

// optional uint32 hurt = 9;
inline bool UserReward::has_hurt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserReward::set_has_hurt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserReward::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserReward::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 UserReward::hurt() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.hurt)
  return hurt_;
}
inline void UserReward::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.hurt)
}

// optional uint32 head = 10;
inline bool UserReward::has_head() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserReward::set_has_head() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserReward::clear_has_head() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserReward::clear_head() {
  head_ = 0u;
  clear_has_head();
}
inline ::google::protobuf::uint32 UserReward::head() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.head)
  return head_;
}
inline void UserReward::set_head(::google::protobuf::uint32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.head)
}

// optional uint32 reward = 11;
inline bool UserReward::has_reward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserReward::set_has_reward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserReward::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 UserReward::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.reward)
  return reward_;
}
inline void UserReward::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.reward)
}

// optional uint32 bkill = 12;
inline bool UserReward::has_bkill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserReward::set_has_bkill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserReward::clear_has_bkill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserReward::clear_bkill() {
  bkill_ = 0u;
  clear_has_bkill();
}
inline ::google::protobuf::uint32 UserReward::bkill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.bkill)
  return bkill_;
}
inline void UserReward::set_bkill(::google::protobuf::uint32 value) {
  set_has_bkill();
  bkill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserReward.bkill)
}

// repeated .ProtoBattleField.ItemReward item = 13;
inline int UserReward::item_size() const {
  return item_.size();
}
inline void UserReward::clear_item() {
  item_.Clear();
}
inline const ::ProtoBattleField::ItemReward& UserReward::item(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserReward.item)
  return item_.Get(index);
}
inline ::ProtoBattleField::ItemReward* UserReward::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.UserReward.item)
  return item_.Mutable(index);
}
inline ::ProtoBattleField::ItemReward* UserReward::add_item() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.UserReward.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::ItemReward >&
UserReward::item() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.UserReward.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::ItemReward >*
UserReward::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.UserReward.item)
  return &item_;
}

// -------------------------------------------------------------------

// MissionState

// repeated .ProtoBattleField.Mission mission = 1;
inline int MissionState::mission_size() const {
  return mission_.size();
}
inline void MissionState::clear_mission() {
  mission_.Clear();
}
inline const ::ProtoBattleField::Mission& MissionState::mission(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.MissionState.mission)
  return mission_.Get(index);
}
inline ::ProtoBattleField::Mission* MissionState::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.MissionState.mission)
  return mission_.Mutable(index);
}
inline ::ProtoBattleField::Mission* MissionState::add_mission() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.MissionState.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
MissionState::mission() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.MissionState.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
MissionState::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.MissionState.mission)
  return &mission_;
}

// -------------------------------------------------------------------

// RequestHero

// -------------------------------------------------------------------

// HeroState

// repeated .ProtoBattleField.Hero hero = 1;
inline int HeroState::hero_size() const {
  return hero_.size();
}
inline void HeroState::clear_hero() {
  hero_.Clear();
}
inline const ::ProtoBattleField::Hero& HeroState::hero(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroState.hero)
  return hero_.Get(index);
}
inline ::ProtoBattleField::Hero* HeroState::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.HeroState.hero)
  return hero_.Mutable(index);
}
inline ::ProtoBattleField::Hero* HeroState::add_hero() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.HeroState.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >&
HeroState::hero() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.HeroState.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Hero >*
HeroState::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.HeroState.hero)
  return &hero_;
}

// optional .ProtoBattleField.UserReward reward = 2;
inline bool HeroState::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroState::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroState::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroState::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoBattleField::UserReward::Clear();
  clear_has_reward();
}
inline const ::ProtoBattleField::UserReward& HeroState::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroState.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoBattleField::UserReward* HeroState::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoBattleField::UserReward;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.HeroState.reward)
  return reward_;
}
inline ::ProtoBattleField::UserReward* HeroState::release_reward() {
  clear_has_reward();
  ::ProtoBattleField::UserReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void HeroState::set_allocated_reward(::ProtoBattleField::UserReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.HeroState.reward)
}

// -------------------------------------------------------------------

// CityState

// repeated .ProtoBattleField.City city = 1;
inline int CityState::city_size() const {
  return city_.size();
}
inline void CityState::clear_city() {
  city_.Clear();
}
inline const ::ProtoBattleField::City& CityState::city(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.CityState.city)
  return city_.Get(index);
}
inline ::ProtoBattleField::City* CityState::mutable_city(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.CityState.city)
  return city_.Mutable(index);
}
inline ::ProtoBattleField::City* CityState::add_city() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.CityState.city)
  return city_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >&
CityState::city() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.CityState.city)
  return city_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::City >*
CityState::mutable_city() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.CityState.city)
  return &city_;
}

// -------------------------------------------------------------------

// RequestMove

// required uint32 id = 1;
inline bool RequestMove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestMove::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestMove.id)
  return id_;
}
inline void RequestMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestMove.id)
}

// repeated uint32 cids = 2;
inline int RequestMove::cids_size() const {
  return cids_.size();
}
inline void RequestMove::clear_cids() {
  cids_.Clear();
}
inline ::google::protobuf::uint32 RequestMove::cids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestMove.cids)
  return cids_.Get(index);
}
inline void RequestMove::set_cids(int index, ::google::protobuf::uint32 value) {
  cids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestMove.cids)
}
inline void RequestMove::add_cids(::google::protobuf::uint32 value) {
  cids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.RequestMove.cids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestMove::cids() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.RequestMove.cids)
  return cids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestMove::mutable_cids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.RequestMove.cids)
  return &cids_;
}

// -------------------------------------------------------------------

// ReplyMove

// required uint32 id = 1;
inline bool ReplyMove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ReplyMove::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMove.id)
  return id_;
}
inline void ReplyMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMove.id)
}

// required uint32 ts = 2;
inline bool ReplyMove::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyMove::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyMove::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyMove::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReplyMove::ts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMove.ts)
  return ts_;
}
inline void ReplyMove::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMove.ts)
}

// required uint32 mts = 3;
inline bool ReplyMove::has_mts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyMove::set_has_mts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyMove::clear_has_mts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyMove::clear_mts() {
  mts_ = 0u;
  clear_has_mts();
}
inline ::google::protobuf::uint32 ReplyMove::mts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMove.mts)
  return mts_;
}
inline void ReplyMove::set_mts(::google::protobuf::uint32 value) {
  set_has_mts();
  mts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMove.mts)
}

// -------------------------------------------------------------------

// RequestStop

// required uint32 id = 1;
inline bool RequestStop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestStop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestStop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestStop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestStop::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestStop.id)
  return id_;
}
inline void RequestStop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestStop.id)
}

// -------------------------------------------------------------------

// RequestCityKingdom

// repeated uint32 cid = 1;
inline int RequestCityKingdom::cid_size() const {
  return cid_.size();
}
inline void RequestCityKingdom::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 RequestCityKingdom::cid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestCityKingdom.cid)
  return cid_.Get(index);
}
inline void RequestCityKingdom::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestCityKingdom.cid)
}
inline void RequestCityKingdom::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.RequestCityKingdom.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestCityKingdom::cid() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.RequestCityKingdom.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestCityKingdom::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.RequestCityKingdom.cid)
  return &cid_;
}

// -------------------------------------------------------------------

// ReplyCityKingdom

// repeated uint32 cid = 1;
inline int ReplyCityKingdom::cid_size() const {
  return cid_.size();
}
inline void ReplyCityKingdom::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityKingdom::cid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityKingdom.cid)
  return cid_.Get(index);
}
inline void ReplyCityKingdom::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityKingdom.cid)
}
inline void ReplyCityKingdom::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityKingdom.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityKingdom::cid() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityKingdom.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityKingdom::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityKingdom.cid)
  return &cid_;
}

// repeated uint32 kingdom = 2;
inline int ReplyCityKingdom::kingdom_size() const {
  return kingdom_.size();
}
inline void ReplyCityKingdom::clear_kingdom() {
  kingdom_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityKingdom::kingdom(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityKingdom.kingdom)
  return kingdom_.Get(index);
}
inline void ReplyCityKingdom::set_kingdom(int index, ::google::protobuf::uint32 value) {
  kingdom_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityKingdom.kingdom)
}
inline void ReplyCityKingdom::add_kingdom(::google::protobuf::uint32 value) {
  kingdom_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityKingdom.kingdom)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityKingdom::kingdom() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityKingdom.kingdom)
  return kingdom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityKingdom::mutable_kingdom() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityKingdom.kingdom)
  return &kingdom_;
}

// repeated bool fight = 3;
inline int ReplyCityKingdom::fight_size() const {
  return fight_.size();
}
inline void ReplyCityKingdom::clear_fight() {
  fight_.Clear();
}
inline bool ReplyCityKingdom::fight(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityKingdom.fight)
  return fight_.Get(index);
}
inline void ReplyCityKingdom::set_fight(int index, bool value) {
  fight_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityKingdom.fight)
}
inline void ReplyCityKingdom::add_fight(bool value) {
  fight_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityKingdom.fight)
}
inline const ::google::protobuf::RepeatedField< bool >&
ReplyCityKingdom::fight() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityKingdom.fight)
  return fight_;
}
inline ::google::protobuf::RepeatedField< bool >*
ReplyCityKingdom::mutable_fight() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityKingdom.fight)
  return &fight_;
}

// -------------------------------------------------------------------

// RequestCityCount

// required uint32 cid = 1;
inline bool RequestCityCount::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCityCount::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCityCount::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCityCount::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestCityCount::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestCityCount.cid)
  return cid_;
}
inline void RequestCityCount::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestCityCount.cid)
}

// -------------------------------------------------------------------

// ReplyCityCount

// repeated uint32 count = 1;
inline int ReplyCityCount::count_size() const {
  return count_.size();
}
inline void ReplyCityCount::clear_count() {
  count_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityCount::count(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityCount.count)
  return count_.Get(index);
}
inline void ReplyCityCount::set_count(int index, ::google::protobuf::uint32 value) {
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityCount.count)
}
inline void ReplyCityCount::add_count(::google::protobuf::uint32 value) {
  count_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityCount.count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityCount::count() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityCount.count)
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityCount::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityCount.count)
  return &count_;
}

// -------------------------------------------------------------------

// RequestCityMaster

// required uint32 cid = 1;
inline bool RequestCityMaster::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCityMaster::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCityMaster::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCityMaster::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestCityMaster::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestCityMaster.cid)
  return cid_;
}
inline void RequestCityMaster::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestCityMaster.cid)
}

// -------------------------------------------------------------------

// ReplyCityMaster

// required uint32 uid = 1;
inline bool ReplyCityMaster::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyCityMaster::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyCityMaster::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyCityMaster::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyCityMaster::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.uid)
  return uid_;
}
inline void ReplyCityMaster::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.uid)
}

// optional bytes name = 2;
inline bool ReplyCityMaster::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyCityMaster::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyCityMaster::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyCityMaster::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ReplyCityMaster::name() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.name)
  return *name_;
}
inline void ReplyCityMaster::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.name)
}
inline void ReplyCityMaster::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoBattleField.ReplyCityMaster.name)
}
inline void ReplyCityMaster::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoBattleField.ReplyCityMaster.name)
}
inline ::std::string* ReplyCityMaster::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyCityMaster.name)
  return name_;
}
inline ::std::string* ReplyCityMaster::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReplyCityMaster::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyCityMaster.name)
}

// optional uint32 aid = 3;
inline bool ReplyCityMaster::has_aid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyCityMaster::set_has_aid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyCityMaster::clear_has_aid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyCityMaster::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 ReplyCityMaster::aid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.aid)
  return aid_;
}
inline void ReplyCityMaster::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.aid)
}

// optional uint32 job = 4;
inline bool ReplyCityMaster::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyCityMaster::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyCityMaster::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyCityMaster::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 ReplyCityMaster::job() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.job)
  return job_;
}
inline void ReplyCityMaster::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.job)
}

// optional uint32 level = 5;
inline bool ReplyCityMaster::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyCityMaster::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyCityMaster::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyCityMaster::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ReplyCityMaster::level() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.level)
  return level_;
}
inline void ReplyCityMaster::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.level)
}

// repeated uint32 hero_ids = 6;
inline int ReplyCityMaster::hero_ids_size() const {
  return hero_ids_.size();
}
inline void ReplyCityMaster::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityMaster::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.hero_ids)
  return hero_ids_.Get(index);
}
inline void ReplyCityMaster::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.hero_ids)
}
inline void ReplyCityMaster::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityMaster.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityMaster::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityMaster.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityMaster::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityMaster.hero_ids)
  return &hero_ids_;
}

// repeated uint32 hero_lvl = 7;
inline int ReplyCityMaster::hero_lvl_size() const {
  return hero_lvl_.size();
}
inline void ReplyCityMaster::clear_hero_lvl() {
  hero_lvl_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityMaster::hero_lvl(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.hero_lvl)
  return hero_lvl_.Get(index);
}
inline void ReplyCityMaster::set_hero_lvl(int index, ::google::protobuf::uint32 value) {
  hero_lvl_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.hero_lvl)
}
inline void ReplyCityMaster::add_hero_lvl(::google::protobuf::uint32 value) {
  hero_lvl_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityMaster.hero_lvl)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityMaster::hero_lvl() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityMaster.hero_lvl)
  return hero_lvl_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityMaster::mutable_hero_lvl() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityMaster.hero_lvl)
  return &hero_lvl_;
}

// repeated uint32 hero_troops = 8;
inline int ReplyCityMaster::hero_troops_size() const {
  return hero_troops_.size();
}
inline void ReplyCityMaster::clear_hero_troops() {
  hero_troops_.Clear();
}
inline ::google::protobuf::uint32 ReplyCityMaster::hero_troops(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.hero_troops)
  return hero_troops_.Get(index);
}
inline void ReplyCityMaster::set_hero_troops(int index, ::google::protobuf::uint32 value) {
  hero_troops_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.hero_troops)
}
inline void ReplyCityMaster::add_hero_troops(::google::protobuf::uint32 value) {
  hero_troops_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCityMaster.hero_troops)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyCityMaster::hero_troops() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCityMaster.hero_troops)
  return hero_troops_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyCityMaster::mutable_hero_troops() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCityMaster.hero_troops)
  return &hero_troops_;
}

// required uint32 reward = 9;
inline bool ReplyCityMaster::has_reward() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReplyCityMaster::set_has_reward() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReplyCityMaster::clear_has_reward() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReplyCityMaster::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 ReplyCityMaster::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.reward)
  return reward_;
}
inline void ReplyCityMaster::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.reward)
}

// required uint32 next_reward = 10;
inline bool ReplyCityMaster::has_next_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReplyCityMaster::set_has_next_reward() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReplyCityMaster::clear_has_next_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReplyCityMaster::clear_next_reward() {
  next_reward_ = 0u;
  clear_has_next_reward();
}
inline ::google::protobuf::uint32 ReplyCityMaster::next_reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.next_reward)
  return next_reward_;
}
inline void ReplyCityMaster::set_next_reward(::google::protobuf::uint32 value) {
  set_has_next_reward();
  next_reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.next_reward)
}

// required uint32 ccd = 11;
inline bool ReplyCityMaster::has_ccd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReplyCityMaster::set_has_ccd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReplyCityMaster::clear_has_ccd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReplyCityMaster::clear_ccd() {
  ccd_ = 0u;
  clear_has_ccd();
}
inline ::google::protobuf::uint32 ReplyCityMaster::ccd() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.ccd)
  return ccd_;
}
inline void ReplyCityMaster::set_ccd(::google::protobuf::uint32 value) {
  set_has_ccd();
  ccd_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.ccd)
}

// required uint32 ctimes = 12;
inline bool ReplyCityMaster::has_ctimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReplyCityMaster::set_has_ctimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReplyCityMaster::clear_has_ctimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReplyCityMaster::clear_ctimes() {
  ctimes_ = 0u;
  clear_has_ctimes();
}
inline ::google::protobuf::uint32 ReplyCityMaster::ctimes() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityMaster.ctimes)
  return ctimes_;
}
inline void ReplyCityMaster::set_ctimes(::google::protobuf::uint32 value) {
  set_has_ctimes();
  ctimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityMaster.ctimes)
}

// -------------------------------------------------------------------

// StartCityBattle

// required uint32 cid = 1;
inline bool StartCityBattle::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartCityBattle::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartCityBattle::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartCityBattle::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 StartCityBattle::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.StartCityBattle.cid)
  return cid_;
}
inline void StartCityBattle::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.StartCityBattle.cid)
}

// repeated uint32 hero = 2;
inline int StartCityBattle::hero_size() const {
  return hero_.size();
}
inline void StartCityBattle::clear_hero() {
  hero_.Clear();
}
inline ::google::protobuf::uint32 StartCityBattle::hero(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.StartCityBattle.hero)
  return hero_.Get(index);
}
inline void StartCityBattle::set_hero(int index, ::google::protobuf::uint32 value) {
  hero_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.StartCityBattle.hero)
}
inline void StartCityBattle::add_hero(::google::protobuf::uint32 value) {
  hero_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.StartCityBattle.hero)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartCityBattle::hero() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.StartCityBattle.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartCityBattle::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.StartCityBattle.hero)
  return &hero_;
}

// -------------------------------------------------------------------

// RequestCityReward

// required uint32 cid = 1;
inline bool RequestCityReward::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCityReward::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCityReward::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCityReward::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestCityReward::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestCityReward.cid)
  return cid_;
}
inline void RequestCityReward::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestCityReward.cid)
}

// -------------------------------------------------------------------

// ReplyCityReward

// required uint32 type = 1;
inline bool ReplyCityReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyCityReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyCityReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyCityReward::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReplyCityReward::type() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityReward.type)
  return type_;
}
inline void ReplyCityReward::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityReward.type)
}

// required uint32 count = 2;
inline bool ReplyCityReward::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyCityReward::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyCityReward::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyCityReward::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ReplyCityReward::count() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityReward.count)
  return count_;
}
inline void ReplyCityReward::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityReward.count)
}

// optional uint32 equd = 3;
inline bool ReplyCityReward::has_equd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyCityReward::set_has_equd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyCityReward::clear_has_equd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyCityReward::clear_equd() {
  equd_ = 0u;
  clear_has_equd();
}
inline ::google::protobuf::uint32 ReplyCityReward::equd() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCityReward.equd)
  return equd_;
}
inline void ReplyCityReward::set_equd(::google::protobuf::uint32 value) {
  set_has_equd();
  equd_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCityReward.equd)
}

// -------------------------------------------------------------------

// RequestCity

// required uint32 cid = 1;
inline bool RequestCity::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCity::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCity::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCity::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestCity::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestCity.cid)
  return cid_;
}
inline void RequestCity::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestCity.cid)
}

// -------------------------------------------------------------------

// RequestGate

// required uint32 uid = 1;
inline bool RequestGate::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGate::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGate::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGate::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestGate::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestGate.uid)
  return uid_;
}
inline void RequestGate::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestGate.uid)
}

// -------------------------------------------------------------------

// RequestRush

// required uint32 uid = 1;
inline bool RequestRush::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRush::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRush::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRush::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestRush::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestRush.uid)
  return uid_;
}
inline void RequestRush::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestRush.uid)
}

// required uint32 id = 2;
inline bool RequestRush::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRush::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestRush.id)
  return id_;
}
inline void RequestRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestRush.id)
}

// required uint32 euid = 3;
inline bool RequestRush::has_euid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRush::set_has_euid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRush::clear_has_euid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRush::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 RequestRush::euid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestRush.euid)
  return euid_;
}
inline void RequestRush::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestRush.euid)
}

// required uint32 eid = 4;
inline bool RequestRush::has_eid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRush::set_has_eid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRush::clear_has_eid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRush::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 RequestRush::eid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestRush.eid)
  return eid_;
}
inline void RequestRush::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestRush.eid)
}

// -------------------------------------------------------------------

// RequestLadder

// required uint32 uid = 1;
inline bool RequestLadder::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestLadder::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestLadder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestLadder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestLadder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestLadder.uid)
  return uid_;
}
inline void RequestLadder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestLadder.uid)
}

// -------------------------------------------------------------------

// HeroUid

// required uint32 uid = 1;
inline bool HeroUid::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroUid::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroUid::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroUid::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 HeroUid::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroUid.uid)
  return uid_;
}
inline void HeroUid::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HeroUid.uid)
}

// required .ProtoBattleField.Hero hero = 2;
inline bool HeroUid::has_hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroUid::set_has_hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroUid::clear_has_hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroUid::clear_hero() {
  if (hero_ != NULL) hero_->::ProtoBattleField::Hero::Clear();
  clear_has_hero();
}
inline const ::ProtoBattleField::Hero& HeroUid::hero() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HeroUid.hero)
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::ProtoBattleField::Hero* HeroUid::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::ProtoBattleField::Hero;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.HeroUid.hero)
  return hero_;
}
inline ::ProtoBattleField::Hero* HeroUid::release_hero() {
  clear_has_hero();
  ::ProtoBattleField::Hero* temp = hero_;
  hero_ = NULL;
  return temp;
}
inline void HeroUid::set_allocated_hero(::ProtoBattleField::Hero* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    set_has_hero();
  } else {
    clear_has_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.HeroUid.hero)
}

// -------------------------------------------------------------------

// HidUid

// required uint32 uid = 1;
inline bool HidUid::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HidUid::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HidUid::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HidUid::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 HidUid::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HidUid.uid)
  return uid_;
}
inline void HidUid::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HidUid.uid)
}

// required uint32 id = 2;
inline bool HidUid::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HidUid::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HidUid::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HidUid::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HidUid::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HidUid.id)
  return id_;
}
inline void HidUid::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HidUid.id)
}

// optional uint32 ouid = 3;
inline bool HidUid::has_ouid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HidUid::set_has_ouid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HidUid::clear_has_ouid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HidUid::clear_ouid() {
  ouid_ = 0u;
  clear_has_ouid();
}
inline ::google::protobuf::uint32 HidUid::ouid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HidUid.ouid)
  return ouid_;
}
inline void HidUid::set_ouid(::google::protobuf::uint32 value) {
  set_has_ouid();
  ouid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HidUid.ouid)
}

// optional uint32 oid = 4;
inline bool HidUid::has_oid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HidUid::set_has_oid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HidUid::clear_has_oid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HidUid::clear_oid() {
  oid_ = 0u;
  clear_has_oid();
}
inline ::google::protobuf::uint32 HidUid::oid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.HidUid.oid)
  return oid_;
}
inline void HidUid::set_oid(::google::protobuf::uint32 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.HidUid.oid)
}

// -------------------------------------------------------------------

// UserInfo

// required uint32 uid = 1;
inline bool UserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 UserInfo::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserInfo.uid)
  return uid_;
}
inline void UserInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserInfo.uid)
}

// required bytes name = 2;
inline bool UserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UserInfo::name() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserInfo.name)
  return *name_;
}
inline void UserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserInfo.name)
}
inline void UserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoBattleField.UserInfo.name)
}
inline void UserInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoBattleField.UserInfo.name)
}
inline ::std::string* UserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.UserInfo.name)
  return name_;
}
inline ::std::string* UserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.UserInfo.name)
}

// required uint32 kingdom = 3;
inline bool UserInfo::has_kingdom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfo::set_has_kingdom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfo::clear_has_kingdom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfo::clear_kingdom() {
  kingdom_ = 0u;
  clear_has_kingdom();
}
inline ::google::protobuf::uint32 UserInfo::kingdom() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserInfo.kingdom)
  return kingdom_;
}
inline void UserInfo::set_kingdom(::google::protobuf::uint32 value) {
  set_has_kingdom();
  kingdom_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserInfo.kingdom)
}

// optional bytes fig = 4;
inline bool UserInfo::has_fig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInfo::set_has_fig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInfo::clear_has_fig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInfo::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& UserInfo::fig() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.UserInfo.fig)
  return *fig_;
}
inline void UserInfo::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.UserInfo.fig)
}
inline void UserInfo::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoBattleField.UserInfo.fig)
}
inline void UserInfo::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoBattleField.UserInfo.fig)
}
inline ::std::string* UserInfo::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.UserInfo.fig)
  return fig_;
}
inline ::std::string* UserInfo::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfo::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.UserInfo.fig)
}

// -------------------------------------------------------------------

// Turn

// required uint32 a_shape = 1;
inline bool Turn::has_a_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Turn::set_has_a_shape() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Turn::clear_has_a_shape() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Turn::clear_a_shape() {
  a_shape_ = 0u;
  clear_has_a_shape();
}
inline ::google::protobuf::uint32 Turn::a_shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.a_shape)
  return a_shape_;
}
inline void Turn::set_a_shape(::google::protobuf::uint32 value) {
  set_has_a_shape();
  a_shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.a_shape)
}

// required uint32 d_shape = 2;
inline bool Turn::has_d_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Turn::set_has_d_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Turn::clear_has_d_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Turn::clear_d_shape() {
  d_shape_ = 0u;
  clear_has_d_shape();
}
inline ::google::protobuf::uint32 Turn::d_shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.d_shape)
  return d_shape_;
}
inline void Turn::set_d_shape(::google::protobuf::uint32 value) {
  set_has_d_shape();
  d_shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.d_shape)
}

// required uint32 att_shape = 3;
inline bool Turn::has_att_shape() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Turn::set_has_att_shape() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Turn::clear_has_att_shape() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Turn::clear_att_shape() {
  att_shape_ = 0u;
  clear_has_att_shape();
}
inline ::google::protobuf::uint32 Turn::att_shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.att_shape)
  return att_shape_;
}
inline void Turn::set_att_shape(::google::protobuf::uint32 value) {
  set_has_att_shape();
  att_shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.att_shape)
}

// required uint32 def_shape = 4;
inline bool Turn::has_def_shape() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Turn::set_has_def_shape() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Turn::clear_has_def_shape() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Turn::clear_def_shape() {
  def_shape_ = 0u;
  clear_has_def_shape();
}
inline ::google::protobuf::uint32 Turn::def_shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.def_shape)
  return def_shape_;
}
inline void Turn::set_def_shape(::google::protobuf::uint32 value) {
  set_has_def_shape();
  def_shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.def_shape)
}

// repeated uint32 a_skill = 5;
inline int Turn::a_skill_size() const {
  return a_skill_.size();
}
inline void Turn::clear_a_skill() {
  a_skill_.Clear();
}
inline ::google::protobuf::uint32 Turn::a_skill(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.a_skill)
  return a_skill_.Get(index);
}
inline void Turn::set_a_skill(int index, ::google::protobuf::uint32 value) {
  a_skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.a_skill)
}
inline void Turn::add_a_skill(::google::protobuf::uint32 value) {
  a_skill_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Turn.a_skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Turn::a_skill() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Turn.a_skill)
  return a_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Turn::mutable_a_skill() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Turn.a_skill)
  return &a_skill_;
}

// repeated uint32 d_skill = 6;
inline int Turn::d_skill_size() const {
  return d_skill_.size();
}
inline void Turn::clear_d_skill() {
  d_skill_.Clear();
}
inline ::google::protobuf::uint32 Turn::d_skill(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.d_skill)
  return d_skill_.Get(index);
}
inline void Turn::set_d_skill(int index, ::google::protobuf::uint32 value) {
  d_skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.d_skill)
}
inline void Turn::add_d_skill(::google::protobuf::uint32 value) {
  d_skill_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Turn.d_skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Turn::d_skill() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Turn.d_skill)
  return d_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Turn::mutable_d_skill() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Turn.d_skill)
  return &d_skill_;
}

// repeated uint32 a_attack = 7;
inline int Turn::a_attack_size() const {
  return a_attack_.size();
}
inline void Turn::clear_a_attack() {
  a_attack_.Clear();
}
inline ::google::protobuf::uint32 Turn::a_attack(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.a_attack)
  return a_attack_.Get(index);
}
inline void Turn::set_a_attack(int index, ::google::protobuf::uint32 value) {
  a_attack_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.a_attack)
}
inline void Turn::add_a_attack(::google::protobuf::uint32 value) {
  a_attack_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Turn.a_attack)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Turn::a_attack() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Turn.a_attack)
  return a_attack_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Turn::mutable_a_attack() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Turn.a_attack)
  return &a_attack_;
}

// repeated uint32 d_attack = 8;
inline int Turn::d_attack_size() const {
  return d_attack_.size();
}
inline void Turn::clear_d_attack() {
  d_attack_.Clear();
}
inline ::google::protobuf::uint32 Turn::d_attack(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.d_attack)
  return d_attack_.Get(index);
}
inline void Turn::set_d_attack(int index, ::google::protobuf::uint32 value) {
  d_attack_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.d_attack)
}
inline void Turn::add_d_attack(::google::protobuf::uint32 value) {
  d_attack_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.Turn.d_attack)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Turn::d_attack() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.Turn.d_attack)
  return d_attack_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Turn::mutable_d_attack() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.Turn.d_attack)
  return &d_attack_;
}

// required uint32 ts = 9;
inline bool Turn::has_ts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Turn::set_has_ts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Turn::clear_has_ts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Turn::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 Turn::ts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.ts)
  return ts_;
}
inline void Turn::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.ts)
}

// required uint32 nextts = 10;
inline bool Turn::has_nextts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Turn::set_has_nextts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Turn::clear_has_nextts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Turn::clear_nextts() {
  nextts_ = 0u;
  clear_has_nextts();
}
inline ::google::protobuf::uint32 Turn::nextts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.nextts)
  return nextts_;
}
inline void Turn::set_nextts(::google::protobuf::uint32 value) {
  set_has_nextts();
  nextts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.nextts)
}

// optional uint32 a_explode = 11;
inline bool Turn::has_a_explode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Turn::set_has_a_explode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Turn::clear_has_a_explode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Turn::clear_a_explode() {
  a_explode_ = 0u;
  clear_has_a_explode();
}
inline ::google::protobuf::uint32 Turn::a_explode() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.a_explode)
  return a_explode_;
}
inline void Turn::set_a_explode(::google::protobuf::uint32 value) {
  set_has_a_explode();
  a_explode_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.a_explode)
}

// optional uint32 d_explode = 12;
inline bool Turn::has_d_explode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Turn::set_has_d_explode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Turn::clear_has_d_explode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Turn::clear_d_explode() {
  d_explode_ = 0u;
  clear_has_d_explode();
}
inline ::google::protobuf::uint32 Turn::d_explode() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.Turn.d_explode)
  return d_explode_;
}
inline void Turn::set_d_explode(::google::protobuf::uint32 value) {
  set_has_d_explode();
  d_explode_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.Turn.d_explode)
}

// -------------------------------------------------------------------

// ReplyCity

// repeated .ProtoBattleField.HeroUid attacker = 1;
inline int ReplyCity::attacker_size() const {
  return attacker_.size();
}
inline void ReplyCity::clear_attacker() {
  attacker_.Clear();
}
inline const ::ProtoBattleField::HeroUid& ReplyCity::attacker(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.attacker)
  return attacker_.Get(index);
}
inline ::ProtoBattleField::HeroUid* ReplyCity::mutable_attacker(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyCity.attacker)
  return attacker_.Mutable(index);
}
inline ::ProtoBattleField::HeroUid* ReplyCity::add_attacker() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCity.attacker)
  return attacker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
ReplyCity::attacker() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCity.attacker)
  return attacker_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
ReplyCity::mutable_attacker() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCity.attacker)
  return &attacker_;
}

// repeated .ProtoBattleField.HeroUid defender = 2;
inline int ReplyCity::defender_size() const {
  return defender_.size();
}
inline void ReplyCity::clear_defender() {
  defender_.Clear();
}
inline const ::ProtoBattleField::HeroUid& ReplyCity::defender(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.defender)
  return defender_.Get(index);
}
inline ::ProtoBattleField::HeroUid* ReplyCity::mutable_defender(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyCity.defender)
  return defender_.Mutable(index);
}
inline ::ProtoBattleField::HeroUid* ReplyCity::add_defender() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCity.defender)
  return defender_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
ReplyCity::defender() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCity.defender)
  return defender_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
ReplyCity::mutable_defender() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCity.defender)
  return &defender_;
}

// repeated .ProtoBattleField.UserInfo info = 3;
inline int ReplyCity::info_size() const {
  return info_.size();
}
inline void ReplyCity::clear_info() {
  info_.Clear();
}
inline const ::ProtoBattleField::UserInfo& ReplyCity::info(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.info)
  return info_.Get(index);
}
inline ::ProtoBattleField::UserInfo* ReplyCity::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyCity.info)
  return info_.Mutable(index);
}
inline ::ProtoBattleField::UserInfo* ReplyCity::add_info() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyCity.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >&
ReplyCity::info() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyCity.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >*
ReplyCity::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyCity.info)
  return &info_;
}

// optional uint32 ts = 4;
inline bool ReplyCity::has_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyCity::set_has_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyCity::clear_has_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyCity::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReplyCity::ts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.ts)
  return ts_;
}
inline void ReplyCity::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.ts)
}

// optional uint32 nextts = 5;
inline bool ReplyCity::has_nextts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyCity::set_has_nextts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyCity::clear_has_nextts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyCity::clear_nextts() {
  nextts_ = 0u;
  clear_has_nextts();
}
inline ::google::protobuf::uint32 ReplyCity::nextts() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.nextts)
  return nextts_;
}
inline void ReplyCity::set_nextts(::google::protobuf::uint32 value) {
  set_has_nextts();
  nextts_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.nextts)
}

// optional .ProtoBattleField.Turn turn = 6;
inline bool ReplyCity::has_turn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplyCity::set_has_turn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplyCity::clear_has_turn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplyCity::clear_turn() {
  if (turn_ != NULL) turn_->::ProtoBattleField::Turn::Clear();
  clear_has_turn();
}
inline const ::ProtoBattleField::Turn& ReplyCity::turn() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.turn)
  return turn_ != NULL ? *turn_ : *default_instance_->turn_;
}
inline ::ProtoBattleField::Turn* ReplyCity::mutable_turn() {
  set_has_turn();
  if (turn_ == NULL) turn_ = new ::ProtoBattleField::Turn;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyCity.turn)
  return turn_;
}
inline ::ProtoBattleField::Turn* ReplyCity::release_turn() {
  clear_has_turn();
  ::ProtoBattleField::Turn* temp = turn_;
  turn_ = NULL;
  return temp;
}
inline void ReplyCity::set_allocated_turn(::ProtoBattleField::Turn* turn) {
  delete turn_;
  turn_ = turn;
  if (turn) {
    set_has_turn();
  } else {
    clear_has_turn();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyCity.turn)
}

// required uint32 gid = 7;
inline bool ReplyCity::has_gid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReplyCity::set_has_gid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReplyCity::clear_has_gid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReplyCity::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 ReplyCity::gid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.gid)
  return gid_;
}
inline void ReplyCity::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.gid)
}

// required uint32 type = 8;
inline bool ReplyCity::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReplyCity::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReplyCity::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReplyCity::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReplyCity::type() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.type)
  return type_;
}
inline void ReplyCity::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.type)
}

// required uint32 cid = 9;
inline bool ReplyCity::has_cid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReplyCity::set_has_cid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReplyCity::clear_has_cid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReplyCity::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 ReplyCity::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.cid)
  return cid_;
}
inline void ReplyCity::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.cid)
}

// required uint32 uid = 10;
inline bool ReplyCity::has_uid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReplyCity::set_has_uid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReplyCity::clear_has_uid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReplyCity::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyCity::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.uid)
  return uid_;
}
inline void ReplyCity::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.uid)
}

// required uint32 gate = 11;
inline bool ReplyCity::has_gate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReplyCity::set_has_gate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReplyCity::clear_has_gate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReplyCity::clear_gate() {
  gate_ = 0u;
  clear_has_gate();
}
inline ::google::protobuf::uint32 ReplyCity::gate() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyCity.gate)
  return gate_;
}
inline void ReplyCity::set_gate(::google::protobuf::uint32 value) {
  set_has_gate();
  gate_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyCity.gate)
}

// -------------------------------------------------------------------

// QuitCity

// required uint32 cid = 1;
inline bool QuitCity::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitCity::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitCity::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitCity::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 QuitCity::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitCity.cid)
  return cid_;
}
inline void QuitCity::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitCity.cid)
}

// -------------------------------------------------------------------

// QuitGate

// required uint32 uid = 1;
inline bool QuitGate::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitGate::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitGate::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitGate::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 QuitGate::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitGate.uid)
  return uid_;
}
inline void QuitGate::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitGate.uid)
}

// -------------------------------------------------------------------

// QuitRush

// required uint32 uid = 1;
inline bool QuitRush::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitRush::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitRush::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitRush::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 QuitRush::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitRush.uid)
  return uid_;
}
inline void QuitRush::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitRush.uid)
}

// required uint32 id = 2;
inline bool QuitRush::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuitRush::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuitRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuitRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 QuitRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitRush.id)
  return id_;
}
inline void QuitRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitRush.id)
}

// required uint32 euid = 3;
inline bool QuitRush::has_euid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuitRush::set_has_euid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuitRush::clear_has_euid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuitRush::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 QuitRush::euid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitRush.euid)
  return euid_;
}
inline void QuitRush::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitRush.euid)
}

// required uint32 eid = 4;
inline bool QuitRush::has_eid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuitRush::set_has_eid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuitRush::clear_has_eid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuitRush::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 QuitRush::eid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitRush.eid)
  return eid_;
}
inline void QuitRush::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitRush.eid)
}

// -------------------------------------------------------------------

// QuitLadder

// required uint32 uid = 1;
inline bool QuitLadder::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitLadder::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitLadder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitLadder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 QuitLadder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.QuitLadder.uid)
  return uid_;
}
inline void QuitLadder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.QuitLadder.uid)
}

// -------------------------------------------------------------------

// RequestList

// required uint32 cid = 1;
inline bool RequestList::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestList::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestList::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestList::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestList::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestList.cid)
  return cid_;
}
inline void RequestList::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestList.cid)
}

// required bool attack = 2;
inline bool RequestList::has_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestList::set_has_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestList::clear_has_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestList::clear_attack() {
  attack_ = false;
  clear_has_attack();
}
inline bool RequestList::attack() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestList.attack)
  return attack_;
}
inline void RequestList::set_attack(bool value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestList.attack)
}

// required uint32 page = 3;
inline bool RequestList::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestList::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestList::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestList::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 RequestList::page() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestList.page)
  return page_;
}
inline void RequestList::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestList.page)
}

// -------------------------------------------------------------------

// ReplyList

// repeated .ProtoBattleField.HidUid queue = 1;
inline int ReplyList::queue_size() const {
  return queue_.size();
}
inline void ReplyList::clear_queue() {
  queue_.Clear();
}
inline const ::ProtoBattleField::HidUid& ReplyList::queue(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyList.queue)
  return queue_.Get(index);
}
inline ::ProtoBattleField::HidUid* ReplyList::mutable_queue(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyList.queue)
  return queue_.Mutable(index);
}
inline ::ProtoBattleField::HidUid* ReplyList::add_queue() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyList.queue)
  return queue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HidUid >&
ReplyList::queue() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyList.queue)
  return queue_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HidUid >*
ReplyList::mutable_queue() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyList.queue)
  return &queue_;
}

// repeated .ProtoBattleField.UserInfo info = 2;
inline int ReplyList::info_size() const {
  return info_.size();
}
inline void ReplyList::clear_info() {
  info_.Clear();
}
inline const ::ProtoBattleField::UserInfo& ReplyList::info(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyList.info)
  return info_.Get(index);
}
inline ::ProtoBattleField::UserInfo* ReplyList::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyList.info)
  return info_.Mutable(index);
}
inline ::ProtoBattleField::UserInfo* ReplyList::add_info() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyList.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >&
ReplyList::info() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyList.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::UserInfo >*
ReplyList::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyList.info)
  return &info_;
}

// -------------------------------------------------------------------

// SkillOrShapeCity

// required uint32 hid = 1;
inline bool SkillOrShapeCity::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOrShapeCity::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOrShapeCity::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOrShapeCity::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 SkillOrShapeCity::hid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeCity.hid)
  return hid_;
}
inline void SkillOrShapeCity::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeCity.hid)
}

// required uint32 shape = 2;
inline bool SkillOrShapeCity::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOrShapeCity::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOrShapeCity::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOrShapeCity::clear_shape() {
  shape_ = 0u;
  clear_has_shape();
}
inline ::google::protobuf::uint32 SkillOrShapeCity::shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeCity.shape)
  return shape_;
}
inline void SkillOrShapeCity::set_shape(::google::protobuf::uint32 value) {
  set_has_shape();
  shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeCity.shape)
}

// required uint32 cid = 3;
inline bool SkillOrShapeCity::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillOrShapeCity::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillOrShapeCity::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillOrShapeCity::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 SkillOrShapeCity::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeCity.cid)
  return cid_;
}
inline void SkillOrShapeCity::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeCity.cid)
}

// -------------------------------------------------------------------

// SkillOrShapeGate

// required uint32 hid = 1;
inline bool SkillOrShapeGate::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOrShapeGate::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOrShapeGate::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOrShapeGate::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 SkillOrShapeGate::hid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeGate.hid)
  return hid_;
}
inline void SkillOrShapeGate::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeGate.hid)
}

// required uint32 shape = 2;
inline bool SkillOrShapeGate::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOrShapeGate::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOrShapeGate::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOrShapeGate::clear_shape() {
  shape_ = 0u;
  clear_has_shape();
}
inline ::google::protobuf::uint32 SkillOrShapeGate::shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeGate.shape)
  return shape_;
}
inline void SkillOrShapeGate::set_shape(::google::protobuf::uint32 value) {
  set_has_shape();
  shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeGate.shape)
}

// required uint32 uid = 3;
inline bool SkillOrShapeGate::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillOrShapeGate::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillOrShapeGate::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillOrShapeGate::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SkillOrShapeGate::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeGate.uid)
  return uid_;
}
inline void SkillOrShapeGate::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeGate.uid)
}

// -------------------------------------------------------------------

// SkillOrShapeRush

// required uint32 hid = 1;
inline bool SkillOrShapeRush::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOrShapeRush::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOrShapeRush::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOrShapeRush::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::hid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.hid)
  return hid_;
}
inline void SkillOrShapeRush::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.hid)
}

// required uint32 shape = 2;
inline bool SkillOrShapeRush::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOrShapeRush::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOrShapeRush::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOrShapeRush::clear_shape() {
  shape_ = 0u;
  clear_has_shape();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.shape)
  return shape_;
}
inline void SkillOrShapeRush::set_shape(::google::protobuf::uint32 value) {
  set_has_shape();
  shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.shape)
}

// required uint32 uid = 3;
inline bool SkillOrShapeRush::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillOrShapeRush::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillOrShapeRush::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillOrShapeRush::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.uid)
  return uid_;
}
inline void SkillOrShapeRush::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.uid)
}

// required uint32 id = 4;
inline bool SkillOrShapeRush::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillOrShapeRush::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillOrShapeRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillOrShapeRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.id)
  return id_;
}
inline void SkillOrShapeRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.id)
}

// required uint32 euid = 5;
inline bool SkillOrShapeRush::has_euid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillOrShapeRush::set_has_euid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillOrShapeRush::clear_has_euid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillOrShapeRush::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::euid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.euid)
  return euid_;
}
inline void SkillOrShapeRush::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.euid)
}

// required uint32 eid = 6;
inline bool SkillOrShapeRush::has_eid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillOrShapeRush::set_has_eid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillOrShapeRush::clear_has_eid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillOrShapeRush::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 SkillOrShapeRush::eid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeRush.eid)
  return eid_;
}
inline void SkillOrShapeRush::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeRush.eid)
}

// -------------------------------------------------------------------

// SkillOrShapeLadder

// required uint32 hid = 1;
inline bool SkillOrShapeLadder::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOrShapeLadder::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOrShapeLadder::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOrShapeLadder::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 SkillOrShapeLadder::hid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeLadder.hid)
  return hid_;
}
inline void SkillOrShapeLadder::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeLadder.hid)
}

// required uint32 shape = 2;
inline bool SkillOrShapeLadder::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOrShapeLadder::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOrShapeLadder::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOrShapeLadder::clear_shape() {
  shape_ = 0u;
  clear_has_shape();
}
inline ::google::protobuf::uint32 SkillOrShapeLadder::shape() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeLadder.shape)
  return shape_;
}
inline void SkillOrShapeLadder::set_shape(::google::protobuf::uint32 value) {
  set_has_shape();
  shape_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeLadder.shape)
}

// required uint32 uid = 3;
inline bool SkillOrShapeLadder::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillOrShapeLadder::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillOrShapeLadder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillOrShapeLadder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SkillOrShapeLadder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SkillOrShapeLadder.uid)
  return uid_;
}
inline void SkillOrShapeLadder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SkillOrShapeLadder.uid)
}

// -------------------------------------------------------------------

// BattleOver

// required bool attackerwin = 1;
inline bool BattleOver::has_attackerwin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleOver::set_has_attackerwin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleOver::clear_has_attackerwin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleOver::clear_attackerwin() {
  attackerwin_ = false;
  clear_has_attackerwin();
}
inline bool BattleOver::attackerwin() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleOver.attackerwin)
  return attackerwin_;
}
inline void BattleOver::set_attackerwin(bool value) {
  set_has_attackerwin();
  attackerwin_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleOver.attackerwin)
}

// optional .ProtoBattleField.UserReward reward = 2;
inline bool BattleOver::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleOver::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleOver::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleOver::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoBattleField::UserReward::Clear();
  clear_has_reward();
}
inline const ::ProtoBattleField::UserReward& BattleOver::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleOver.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoBattleField::UserReward* BattleOver::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoBattleField::UserReward;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.BattleOver.reward)
  return reward_;
}
inline ::ProtoBattleField::UserReward* BattleOver::release_reward() {
  clear_has_reward();
  ::ProtoBattleField::UserReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void BattleOver::set_allocated_reward(::ProtoBattleField::UserReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.BattleOver.reward)
}

// optional uint32 gate = 3;
inline bool BattleOver::has_gate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleOver::set_has_gate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleOver::clear_has_gate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleOver::clear_gate() {
  gate_ = 0u;
  clear_has_gate();
}
inline ::google::protobuf::uint32 BattleOver::gate() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.BattleOver.gate)
  return gate_;
}
inline void BattleOver::set_gate(::google::protobuf::uint32 value) {
  set_has_gate();
  gate_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.BattleOver.gate)
}

// -------------------------------------------------------------------

// StartRush

// required uint32 id = 1;
inline bool StartRush::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartRush::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StartRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.StartRush.id)
  return id_;
}
inline void StartRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.StartRush.id)
}

// required uint32 cid = 2;
inline bool StartRush::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartRush::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartRush::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartRush::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 StartRush::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.StartRush.cid)
  return cid_;
}
inline void StartRush::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.StartRush.cid)
}

// -------------------------------------------------------------------

// SendRush

// required uint32 uid = 1;
inline bool SendRush::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendRush::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendRush::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendRush::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SendRush::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SendRush.uid)
  return uid_;
}
inline void SendRush::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SendRush.uid)
}

// required uint32 id = 2;
inline bool SendRush::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendRush::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SendRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SendRush.id)
  return id_;
}
inline void SendRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SendRush.id)
}

// required uint32 euid = 3;
inline bool SendRush::has_euid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendRush::set_has_euid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendRush::clear_has_euid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendRush::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 SendRush::euid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SendRush.euid)
  return euid_;
}
inline void SendRush::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SendRush.euid)
}

// required uint32 eid = 4;
inline bool SendRush::has_eid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendRush::set_has_eid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendRush::clear_has_eid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendRush::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 SendRush::eid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SendRush.eid)
  return eid_;
}
inline void SendRush::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.SendRush.eid)
}

// -------------------------------------------------------------------

// RequestVision

// required uint32 id = 1;
inline bool RequestVision::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestVision::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestVision::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestVision::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestVision::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestVision.id)
  return id_;
}
inline void RequestVision::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestVision.id)
}

// required uint32 cid = 2;
inline bool RequestVision::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestVision::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestVision::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestVision::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RequestVision::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestVision.cid)
  return cid_;
}
inline void RequestVision::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestVision.cid)
}

// optional uint32 equd = 3;
inline bool RequestVision::has_equd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestVision::set_has_equd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestVision::clear_has_equd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestVision::clear_equd() {
  equd_ = 0u;
  clear_has_equd();
}
inline ::google::protobuf::uint32 RequestVision::equd() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestVision.equd)
  return equd_;
}
inline void RequestVision::set_equd(::google::protobuf::uint32 value) {
  set_has_equd();
  equd_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestVision.equd)
}

// -------------------------------------------------------------------

// ReplyVision

// required uint32 id = 1;
inline bool ReplyVision::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyVision::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyVision::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyVision::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ReplyVision::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyVision.id)
  return id_;
}
inline void ReplyVision::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyVision.id)
}

// -------------------------------------------------------------------

// ImmediatelyCity

// required uint32 cid = 1;
inline bool ImmediatelyCity::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImmediatelyCity::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImmediatelyCity::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImmediatelyCity::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 ImmediatelyCity::cid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyCity.cid)
  return cid_;
}
inline void ImmediatelyCity::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyCity.cid)
}

// -------------------------------------------------------------------

// ImmediatelyGate

// required uint32 uid = 1;
inline bool ImmediatelyGate::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImmediatelyGate::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImmediatelyGate::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImmediatelyGate::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ImmediatelyGate::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyGate.uid)
  return uid_;
}
inline void ImmediatelyGate::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyGate.uid)
}

// -------------------------------------------------------------------

// ImmediatelyRush

// required uint32 uid = 1;
inline bool ImmediatelyRush::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImmediatelyRush::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImmediatelyRush::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImmediatelyRush::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ImmediatelyRush::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyRush.uid)
  return uid_;
}
inline void ImmediatelyRush::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyRush.uid)
}

// required uint32 id = 2;
inline bool ImmediatelyRush::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImmediatelyRush::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImmediatelyRush::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImmediatelyRush::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ImmediatelyRush::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyRush.id)
  return id_;
}
inline void ImmediatelyRush::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyRush.id)
}

// required uint32 euid = 3;
inline bool ImmediatelyRush::has_euid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImmediatelyRush::set_has_euid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImmediatelyRush::clear_has_euid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImmediatelyRush::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 ImmediatelyRush::euid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyRush.euid)
  return euid_;
}
inline void ImmediatelyRush::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyRush.euid)
}

// required uint32 eid = 4;
inline bool ImmediatelyRush::has_eid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImmediatelyRush::set_has_eid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImmediatelyRush::clear_has_eid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImmediatelyRush::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 ImmediatelyRush::eid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyRush.eid)
  return eid_;
}
inline void ImmediatelyRush::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyRush.eid)
}

// -------------------------------------------------------------------

// ImmediatelyLadder

// required uint32 uid = 1;
inline bool ImmediatelyLadder::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImmediatelyLadder::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImmediatelyLadder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImmediatelyLadder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ImmediatelyLadder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ImmediatelyLadder.uid)
  return uid_;
}
inline void ImmediatelyLadder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ImmediatelyLadder.uid)
}

// -------------------------------------------------------------------

// NPCMove

// required uint32 id = 1;
inline bool NPCMove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCMove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NPCMove::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.NPCMove.id)
  return id_;
}
inline void NPCMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.NPCMove.id)
}

// repeated uint32 cids = 2;
inline int NPCMove::cids_size() const {
  return cids_.size();
}
inline void NPCMove::clear_cids() {
  cids_.Clear();
}
inline ::google::protobuf::uint32 NPCMove::cids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.NPCMove.cids)
  return cids_.Get(index);
}
inline void NPCMove::set_cids(int index, ::google::protobuf::uint32 value) {
  cids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.NPCMove.cids)
}
inline void NPCMove::add_cids(::google::protobuf::uint32 value) {
  cids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.NPCMove.cids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NPCMove::cids() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.NPCMove.cids)
  return cids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NPCMove::mutable_cids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.NPCMove.cids)
  return &cids_;
}

// -------------------------------------------------------------------

// SendNPCMove

// repeated .ProtoBattleField.NPCMove move = 1;
inline int SendNPCMove::move_size() const {
  return move_.size();
}
inline void SendNPCMove::clear_move() {
  move_.Clear();
}
inline const ::ProtoBattleField::NPCMove& SendNPCMove::move(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.SendNPCMove.move)
  return move_.Get(index);
}
inline ::ProtoBattleField::NPCMove* SendNPCMove::mutable_move(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.SendNPCMove.move)
  return move_.Mutable(index);
}
inline ::ProtoBattleField::NPCMove* SendNPCMove::add_move() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.SendNPCMove.move)
  return move_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::NPCMove >&
SendNPCMove::move() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.SendNPCMove.move)
  return move_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::NPCMove >*
SendNPCMove::mutable_move() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.SendNPCMove.move)
  return &move_;
}

// -------------------------------------------------------------------

// RequestRewardInfo

// -------------------------------------------------------------------

// ReplyRewardInfo

// repeated uint32 history = 1;
inline int ReplyRewardInfo::history_size() const {
  return history_.size();
}
inline void ReplyRewardInfo::clear_history() {
  history_.Clear();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::history(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.history)
  return history_.Get(index);
}
inline void ReplyRewardInfo::set_history(int index, ::google::protobuf::uint32 value) {
  history_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.history)
}
inline void ReplyRewardInfo::add_history(::google::protobuf::uint32 value) {
  history_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyRewardInfo.history)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyRewardInfo::history() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyRewardInfo.history)
  return history_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyRewardInfo::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyRewardInfo.history)
  return &history_;
}

// required uint32 mkill = 2;
inline bool ReplyRewardInfo::has_mkill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyRewardInfo::set_has_mkill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyRewardInfo::clear_has_mkill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyRewardInfo::clear_mkill() {
  mkill_ = 0u;
  clear_has_mkill();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mkill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mkill)
  return mkill_;
}
inline void ReplyRewardInfo::set_mkill(::google::protobuf::uint32 value) {
  set_has_mkill();
  mkill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mkill)
}

// required uint32 kill = 3;
inline bool ReplyRewardInfo::has_kill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyRewardInfo::set_has_kill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyRewardInfo::clear_has_kill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyRewardInfo::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::kill() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.kill)
  return kill_;
}
inline void ReplyRewardInfo::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.kill)
}

// required uint32 occupy = 4;
inline bool ReplyRewardInfo::has_occupy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyRewardInfo::set_has_occupy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyRewardInfo::clear_has_occupy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyRewardInfo::clear_occupy() {
  occupy_ = 0u;
  clear_has_occupy();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::occupy() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.occupy)
  return occupy_;
}
inline void ReplyRewardInfo::set_occupy(::google::protobuf::uint32 value) {
  set_has_occupy();
  occupy_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.occupy)
}

// required uint32 foccupy = 5;
inline bool ReplyRewardInfo::has_foccupy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyRewardInfo::set_has_foccupy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyRewardInfo::clear_has_foccupy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyRewardInfo::clear_foccupy() {
  foccupy_ = 0u;
  clear_has_foccupy();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::foccupy() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.foccupy)
  return foccupy_;
}
inline void ReplyRewardInfo::set_foccupy(::google::protobuf::uint32 value) {
  set_has_foccupy();
  foccupy_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.foccupy)
}

// required uint32 rush = 6;
inline bool ReplyRewardInfo::has_rush() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplyRewardInfo::set_has_rush() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplyRewardInfo::clear_has_rush() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplyRewardInfo::clear_rush() {
  rush_ = 0u;
  clear_has_rush();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::rush() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.rush)
  return rush_;
}
inline void ReplyRewardInfo::set_rush(::google::protobuf::uint32 value) {
  set_has_rush();
  rush_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.rush)
}

// required uint32 reward = 7;
inline bool ReplyRewardInfo::has_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReplyRewardInfo::set_has_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReplyRewardInfo::clear_has_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReplyRewardInfo::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::reward() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.reward)
  return reward_;
}
inline void ReplyRewardInfo::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.reward)
}

// required uint32 rewardb = 8;
inline bool ReplyRewardInfo::has_rewardb() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReplyRewardInfo::set_has_rewardb() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReplyRewardInfo::clear_has_rewardb() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReplyRewardInfo::clear_rewardb() {
  rewardb_ = 0u;
  clear_has_rewardb();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::rewardb() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.rewardb)
  return rewardb_;
}
inline void ReplyRewardInfo::set_rewardb(::google::protobuf::uint32 value) {
  set_has_rewardb();
  rewardb_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.rewardb)
}

// repeated .ProtoBattleField.Mission mission = 9;
inline int ReplyRewardInfo::mission_size() const {
  return mission_.size();
}
inline void ReplyRewardInfo::clear_mission() {
  mission_.Clear();
}
inline const ::ProtoBattleField::Mission& ReplyRewardInfo::mission(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mission)
  return mission_.Get(index);
}
inline ::ProtoBattleField::Mission* ReplyRewardInfo::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyRewardInfo.mission)
  return mission_.Mutable(index);
}
inline ::ProtoBattleField::Mission* ReplyRewardInfo::add_mission() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyRewardInfo.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >&
ReplyRewardInfo::mission() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyRewardInfo.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::Mission >*
ReplyRewardInfo::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyRewardInfo.mission)
  return &mission_;
}

// required uint32 mp1 = 10;
inline bool ReplyRewardInfo::has_mp1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReplyRewardInfo::set_has_mp1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReplyRewardInfo::clear_has_mp1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReplyRewardInfo::clear_mp1() {
  mp1_ = 0u;
  clear_has_mp1();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mp1() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mp1)
  return mp1_;
}
inline void ReplyRewardInfo::set_mp1(::google::protobuf::uint32 value) {
  set_has_mp1();
  mp1_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mp1)
}

// required uint32 mp2 = 11;
inline bool ReplyRewardInfo::has_mp2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReplyRewardInfo::set_has_mp2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReplyRewardInfo::clear_has_mp2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReplyRewardInfo::clear_mp2() {
  mp2_ = 0u;
  clear_has_mp2();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mp2() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mp2)
  return mp2_;
}
inline void ReplyRewardInfo::set_mp2(::google::protobuf::uint32 value) {
  set_has_mp2();
  mp2_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mp2)
}

// required uint32 mk1 = 12;
inline bool ReplyRewardInfo::has_mk1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReplyRewardInfo::set_has_mk1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReplyRewardInfo::clear_has_mk1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReplyRewardInfo::clear_mk1() {
  mk1_ = 0u;
  clear_has_mk1();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mk1() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mk1)
  return mk1_;
}
inline void ReplyRewardInfo::set_mk1(::google::protobuf::uint32 value) {
  set_has_mk1();
  mk1_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mk1)
}

// required uint32 mk2 = 13;
inline bool ReplyRewardInfo::has_mk2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ReplyRewardInfo::set_has_mk2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ReplyRewardInfo::clear_has_mk2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ReplyRewardInfo::clear_mk2() {
  mk2_ = 0u;
  clear_has_mk2();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mk2() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mk2)
  return mk2_;
}
inline void ReplyRewardInfo::set_mk2(::google::protobuf::uint32 value) {
  set_has_mk2();
  mk2_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mk2)
}

// required uint32 mp3 = 14;
inline bool ReplyRewardInfo::has_mp3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ReplyRewardInfo::set_has_mp3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ReplyRewardInfo::clear_has_mp3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ReplyRewardInfo::clear_mp3() {
  mp3_ = 0u;
  clear_has_mp3();
}
inline ::google::protobuf::uint32 ReplyRewardInfo::mp3() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyRewardInfo.mp3)
  return mp3_;
}
inline void ReplyRewardInfo::set_mp3(::google::protobuf::uint32 value) {
  set_has_mp3();
  mp3_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyRewardInfo.mp3)
}

// -------------------------------------------------------------------

// RequestHistoryReward

// -------------------------------------------------------------------

// ReplyHistoryReward

// required uint32 rests = 1;
inline bool ReplyHistoryReward::has_rests() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyHistoryReward::set_has_rests() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyHistoryReward::clear_has_rests() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyHistoryReward::clear_rests() {
  rests_ = 0u;
  clear_has_rests();
}
inline ::google::protobuf::uint32 ReplyHistoryReward::rests() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyHistoryReward.rests)
  return rests_;
}
inline void ReplyHistoryReward::set_rests(::google::protobuf::uint32 value) {
  set_has_rests();
  rests_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyHistoryReward.rests)
}

// required uint32 coin = 2;
inline bool ReplyHistoryReward::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyHistoryReward::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyHistoryReward::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyHistoryReward::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 ReplyHistoryReward::coin() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyHistoryReward.coin)
  return coin_;
}
inline void ReplyHistoryReward::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyHistoryReward.coin)
}

// optional uint32 iron = 3;
inline bool ReplyHistoryReward::has_iron() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyHistoryReward::set_has_iron() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyHistoryReward::clear_has_iron() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyHistoryReward::clear_iron() {
  iron_ = 0u;
  clear_has_iron();
}
inline ::google::protobuf::uint32 ReplyHistoryReward::iron() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyHistoryReward.iron)
  return iron_;
}
inline void ReplyHistoryReward::set_iron(::google::protobuf::uint32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyHistoryReward.iron)
}

// -------------------------------------------------------------------

// RequestKillReward

// -------------------------------------------------------------------

// ReplyKillReward

// optional .DataCommon.EquipmentAllCPP equips = 1;
inline bool ReplyKillReward::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyKillReward::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyKillReward::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyKillReward::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& ReplyKillReward::equips() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyKillReward.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* ReplyKillReward::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyKillReward.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* ReplyKillReward::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void ReplyKillReward::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyKillReward.equips)
}

// optional .DataCommon.CommonBaseRewardCPP base = 2;
inline bool ReplyKillReward::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyKillReward::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyKillReward::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyKillReward::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& ReplyKillReward::base() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyKillReward.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyKillReward::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyKillReward.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyKillReward::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void ReplyKillReward::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyKillReward.base)
}

// required uint32 exploit_box_cnt = 3;
inline bool ReplyKillReward::has_exploit_box_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyKillReward::set_has_exploit_box_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyKillReward::clear_has_exploit_box_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyKillReward::clear_exploit_box_cnt() {
  exploit_box_cnt_ = 0u;
  clear_has_exploit_box_cnt();
}
inline ::google::protobuf::uint32 ReplyKillReward::exploit_box_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyKillReward.exploit_box_cnt)
  return exploit_box_cnt_;
}
inline void ReplyKillReward::set_exploit_box_cnt(::google::protobuf::uint32 value) {
  set_has_exploit_box_cnt();
  exploit_box_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyKillReward.exploit_box_cnt)
}

// required uint32 multiple = 4;
inline bool ReplyKillReward::has_multiple() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyKillReward::set_has_multiple() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyKillReward::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyKillReward::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 ReplyKillReward::multiple() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyKillReward.multiple)
  return multiple_;
}
inline void ReplyKillReward::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyKillReward.multiple)
}

// optional uint32 equips_cnt = 5;
inline bool ReplyKillReward::has_equips_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyKillReward::set_has_equips_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyKillReward::clear_has_equips_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyKillReward::clear_equips_cnt() {
  equips_cnt_ = 0u;
  clear_has_equips_cnt();
}
inline ::google::protobuf::uint32 ReplyKillReward::equips_cnt() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyKillReward.equips_cnt)
  return equips_cnt_;
}
inline void ReplyKillReward::set_equips_cnt(::google::protobuf::uint32 value) {
  set_has_equips_cnt();
  equips_cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyKillReward.equips_cnt)
}

// -------------------------------------------------------------------

// RequestMissionPersonalReward

// required uint32 task_no = 1;
inline bool RequestMissionPersonalReward::has_task_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMissionPersonalReward::set_has_task_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMissionPersonalReward::clear_has_task_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMissionPersonalReward::clear_task_no() {
  task_no_ = 0u;
  clear_has_task_no();
}
inline ::google::protobuf::uint32 RequestMissionPersonalReward::task_no() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestMissionPersonalReward.task_no)
  return task_no_;
}
inline void RequestMissionPersonalReward::set_task_no(::google::protobuf::uint32 value) {
  set_has_task_no();
  task_no_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestMissionPersonalReward.task_no)
}

// -------------------------------------------------------------------

// ReplyMissionPersonalReward

// optional .DataCommon.EquipmentAllCPP equips = 1;
inline bool ReplyMissionPersonalReward::has_equips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMissionPersonalReward::set_has_equips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMissionPersonalReward::clear_has_equips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMissionPersonalReward::clear_equips() {
  if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
  clear_has_equips();
}
inline const ::DataCommon::EquipmentAllCPP& ReplyMissionPersonalReward::equips() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionPersonalReward.equips)
  return equips_ != NULL ? *equips_ : *default_instance_->equips_;
}
inline ::DataCommon::EquipmentAllCPP* ReplyMissionPersonalReward::mutable_equips() {
  set_has_equips();
  if (equips_ == NULL) equips_ = new ::DataCommon::EquipmentAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyMissionPersonalReward.equips)
  return equips_;
}
inline ::DataCommon::EquipmentAllCPP* ReplyMissionPersonalReward::release_equips() {
  clear_has_equips();
  ::DataCommon::EquipmentAllCPP* temp = equips_;
  equips_ = NULL;
  return temp;
}
inline void ReplyMissionPersonalReward::set_allocated_equips(::DataCommon::EquipmentAllCPP* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyMissionPersonalReward.equips)
}

// repeated uint32 equips_cnt = 2;
inline int ReplyMissionPersonalReward::equips_cnt_size() const {
  return equips_cnt_.size();
}
inline void ReplyMissionPersonalReward::clear_equips_cnt() {
  equips_cnt_.Clear();
}
inline ::google::protobuf::uint32 ReplyMissionPersonalReward::equips_cnt(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionPersonalReward.equips_cnt)
  return equips_cnt_.Get(index);
}
inline void ReplyMissionPersonalReward::set_equips_cnt(int index, ::google::protobuf::uint32 value) {
  equips_cnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMissionPersonalReward.equips_cnt)
}
inline void ReplyMissionPersonalReward::add_equips_cnt(::google::protobuf::uint32 value) {
  equips_cnt_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyMissionPersonalReward.equips_cnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyMissionPersonalReward::equips_cnt() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyMissionPersonalReward.equips_cnt)
  return equips_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyMissionPersonalReward::mutable_equips_cnt() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyMissionPersonalReward.equips_cnt)
  return &equips_cnt_;
}

// optional .DataCommon.CommonBaseRewardCPP base = 3;
inline bool ReplyMissionPersonalReward::has_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyMissionPersonalReward::set_has_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyMissionPersonalReward::clear_has_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyMissionPersonalReward::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& ReplyMissionPersonalReward::base() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionPersonalReward.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyMissionPersonalReward::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyMissionPersonalReward.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyMissionPersonalReward::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void ReplyMissionPersonalReward::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyMissionPersonalReward.base)
}

// repeated uint32 mp = 4;
inline int ReplyMissionPersonalReward::mp_size() const {
  return mp_.size();
}
inline void ReplyMissionPersonalReward::clear_mp() {
  mp_.Clear();
}
inline ::google::protobuf::uint32 ReplyMissionPersonalReward::mp(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionPersonalReward.mp)
  return mp_.Get(index);
}
inline void ReplyMissionPersonalReward::set_mp(int index, ::google::protobuf::uint32 value) {
  mp_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMissionPersonalReward.mp)
}
inline void ReplyMissionPersonalReward::add_mp(::google::protobuf::uint32 value) {
  mp_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyMissionPersonalReward.mp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyMissionPersonalReward::mp() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyMissionPersonalReward.mp)
  return mp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyMissionPersonalReward::mutable_mp() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyMissionPersonalReward.mp)
  return &mp_;
}

// -------------------------------------------------------------------

// RequestMissionCountryReward

// required uint32 task_no = 1;
inline bool RequestMissionCountryReward::has_task_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMissionCountryReward::set_has_task_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMissionCountryReward::clear_has_task_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMissionCountryReward::clear_task_no() {
  task_no_ = 0u;
  clear_has_task_no();
}
inline ::google::protobuf::uint32 RequestMissionCountryReward::task_no() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestMissionCountryReward.task_no)
  return task_no_;
}
inline void RequestMissionCountryReward::set_task_no(::google::protobuf::uint32 value) {
  set_has_task_no();
  task_no_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestMissionCountryReward.task_no)
}

// -------------------------------------------------------------------

// ReplyMissionCountryReward

// required .DataCommon.CommonBaseRewardCPP base = 1;
inline bool ReplyMissionCountryReward::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMissionCountryReward::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMissionCountryReward::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMissionCountryReward::clear_base() {
  if (base_ != NULL) base_->::DataCommon::CommonBaseRewardCPP::Clear();
  clear_has_base();
}
inline const ::DataCommon::CommonBaseRewardCPP& ReplyMissionCountryReward::base() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionCountryReward.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyMissionCountryReward::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::DataCommon::CommonBaseRewardCPP;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyMissionCountryReward.base)
  return base_;
}
inline ::DataCommon::CommonBaseRewardCPP* ReplyMissionCountryReward::release_base() {
  clear_has_base();
  ::DataCommon::CommonBaseRewardCPP* temp = base_;
  base_ = NULL;
  return temp;
}
inline void ReplyMissionCountryReward::set_allocated_base(::DataCommon::CommonBaseRewardCPP* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyMissionCountryReward.base)
}

// repeated uint32 mk = 2;
inline int ReplyMissionCountryReward::mk_size() const {
  return mk_.size();
}
inline void ReplyMissionCountryReward::clear_mk() {
  mk_.Clear();
}
inline ::google::protobuf::uint32 ReplyMissionCountryReward::mk(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyMissionCountryReward.mk)
  return mk_.Get(index);
}
inline void ReplyMissionCountryReward::set_mk(int index, ::google::protobuf::uint32 value) {
  mk_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyMissionCountryReward.mk)
}
inline void ReplyMissionCountryReward::add_mk(::google::protobuf::uint32 value) {
  mk_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBattleField.ReplyMissionCountryReward.mk)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyMissionCountryReward::mk() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.ReplyMissionCountryReward.mk)
  return mk_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyMissionCountryReward::mutable_mk() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.ReplyMissionCountryReward.mk)
  return &mk_;
}

// -------------------------------------------------------------------

// RequestAuto

// required bool b_atuo = 1;
inline bool RequestAuto::has_b_atuo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAuto::set_has_b_atuo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAuto::clear_has_b_atuo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAuto::clear_b_atuo() {
  b_atuo_ = false;
  clear_has_b_atuo();
}
inline bool RequestAuto::b_atuo() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestAuto.b_atuo)
  return b_atuo_;
}
inline void RequestAuto::set_b_atuo(bool value) {
  set_has_b_atuo();
  b_atuo_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestAuto.b_atuo)
}

// -------------------------------------------------------------------

// RequestFight

// repeated .ProtoBattleField.HeroUid attacker = 1;
inline int RequestFight::attacker_size() const {
  return attacker_.size();
}
inline void RequestFight::clear_attacker() {
  attacker_.Clear();
}
inline const ::ProtoBattleField::HeroUid& RequestFight::attacker(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestFight.attacker)
  return attacker_.Get(index);
}
inline ::ProtoBattleField::HeroUid* RequestFight::mutable_attacker(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.RequestFight.attacker)
  return attacker_.Mutable(index);
}
inline ::ProtoBattleField::HeroUid* RequestFight::add_attacker() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.RequestFight.attacker)
  return attacker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
RequestFight::attacker() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.RequestFight.attacker)
  return attacker_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
RequestFight::mutable_attacker() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.RequestFight.attacker)
  return &attacker_;
}

// repeated .ProtoBattleField.HeroUid defender = 2;
inline int RequestFight::defender_size() const {
  return defender_.size();
}
inline void RequestFight::clear_defender() {
  defender_.Clear();
}
inline const ::ProtoBattleField::HeroUid& RequestFight::defender(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestFight.defender)
  return defender_.Get(index);
}
inline ::ProtoBattleField::HeroUid* RequestFight::mutable_defender(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.RequestFight.defender)
  return defender_.Mutable(index);
}
inline ::ProtoBattleField::HeroUid* RequestFight::add_defender() {
  // @@protoc_insertion_point(field_add:ProtoBattleField.RequestFight.defender)
  return defender_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >&
RequestFight::defender() const {
  // @@protoc_insertion_point(field_list:ProtoBattleField.RequestFight.defender)
  return defender_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBattleField::HeroUid >*
RequestFight::mutable_defender() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBattleField.RequestFight.defender)
  return &defender_;
}

// required uint32 gid = 3;
inline bool RequestFight::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestFight::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestFight::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestFight::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 RequestFight::gid() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestFight.gid)
  return gid_;
}
inline void RequestFight::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestFight.gid)
}

// required uint32 id = 4;
inline bool RequestFight::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestFight::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestFight::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestFight::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestFight::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.RequestFight.id)
  return id_;
}
inline void RequestFight::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.RequestFight.id)
}

// -------------------------------------------------------------------

// ReplyFight

// required uint32 id = 1;
inline bool ReplyFight::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyFight::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyFight::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyFight::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ReplyFight::id() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyFight.id)
  return id_;
}
inline void ReplyFight::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBattleField.ReplyFight.id)
}

// required .ProtoBattleField.Turn turn = 2;
inline bool ReplyFight::has_turn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyFight::set_has_turn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyFight::clear_has_turn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyFight::clear_turn() {
  if (turn_ != NULL) turn_->::ProtoBattleField::Turn::Clear();
  clear_has_turn();
}
inline const ::ProtoBattleField::Turn& ReplyFight::turn() const {
  // @@protoc_insertion_point(field_get:ProtoBattleField.ReplyFight.turn)
  return turn_ != NULL ? *turn_ : *default_instance_->turn_;
}
inline ::ProtoBattleField::Turn* ReplyFight::mutable_turn() {
  set_has_turn();
  if (turn_ == NULL) turn_ = new ::ProtoBattleField::Turn;
  // @@protoc_insertion_point(field_mutable:ProtoBattleField.ReplyFight.turn)
  return turn_;
}
inline ::ProtoBattleField::Turn* ReplyFight::release_turn() {
  clear_has_turn();
  ::ProtoBattleField::Turn* temp = turn_;
  turn_ = NULL;
  return temp;
}
inline void ReplyFight::set_allocated_turn(::ProtoBattleField::Turn* turn) {
  delete turn_;
  turn_ = turn;
  if (turn) {
    set_has_turn();
  } else {
    clear_has_turn();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoBattleField.ReplyFight.turn)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBattleField

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBattleField_2eproto__INCLUDED
