// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoGovernAffair.proto

#ifndef PROTOBUF_ProtoGovernAffair_2eproto__INCLUDED
#define PROTOBUF_ProtoGovernAffair_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoGovernAffair {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

class AffairItemCPP;
class OpenAffairWindowReq;
class OpenAffairWindowResp;
class GetAffairRewardReq;
class GetAffairRewardResp;
class LoyalExchangeReq;
class LoyalExchangeResp;

// ===================================================================

class AffairItemCPP : public ::google::protobuf::Message {
 public:
  AffairItemCPP();
  virtual ~AffairItemCPP();

  AffairItemCPP(const AffairItemCPP& from);

  inline AffairItemCPP& operator=(const AffairItemCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AffairItemCPP& default_instance();

  void Swap(AffairItemCPP* other);

  // implements Message ----------------------------------------------

  AffairItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AffairItemCPP& from);
  void MergeFrom(const AffairItemCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mission_time = 1;
  inline bool has_mission_time() const;
  inline void clear_mission_time();
  static const int kMissionTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 mission_time() const;
  inline void set_mission_time(::google::protobuf::uint32 value);

  // required uint32 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mission_id() const;
  inline void set_mission_id(::google::protobuf::uint32 value);

  // required uint32 loyal = 3;
  inline bool has_loyal() const;
  inline void clear_loyal();
  static const int kLoyalFieldNumber = 3;
  inline ::google::protobuf::uint32 loyal() const;
  inline void set_loyal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.AffairItemCPP)
 private:
  inline void set_has_mission_time();
  inline void clear_has_mission_time();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_loyal();
  inline void clear_has_loyal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mission_time_;
  ::google::protobuf::uint32 mission_id_;
  ::google::protobuf::uint32 loyal_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static AffairItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class OpenAffairWindowReq : public ::google::protobuf::Message {
 public:
  OpenAffairWindowReq();
  virtual ~OpenAffairWindowReq();

  OpenAffairWindowReq(const OpenAffairWindowReq& from);

  inline OpenAffairWindowReq& operator=(const OpenAffairWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenAffairWindowReq& default_instance();

  void Swap(OpenAffairWindowReq* other);

  // implements Message ----------------------------------------------

  OpenAffairWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenAffairWindowReq& from);
  void MergeFrom(const OpenAffairWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.OpenAffairWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static OpenAffairWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenAffairWindowResp : public ::google::protobuf::Message {
 public:
  OpenAffairWindowResp();
  virtual ~OpenAffairWindowResp();

  OpenAffairWindowResp(const OpenAffairWindowResp& from);

  inline OpenAffairWindowResp& operator=(const OpenAffairWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenAffairWindowResp& default_instance();

  void Swap(OpenAffairWindowResp* other);

  // implements Message ----------------------------------------------

  OpenAffairWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenAffairWindowResp& from);
  void MergeFrom(const OpenAffairWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoGovernAffair.AffairItemCPP affair = 1;
  inline bool has_affair() const;
  inline void clear_affair();
  static const int kAffairFieldNumber = 1;
  inline const ::ProtoGovernAffair::AffairItemCPP& affair() const;
  inline ::ProtoGovernAffair::AffairItemCPP* mutable_affair();
  inline ::ProtoGovernAffair::AffairItemCPP* release_affair();
  inline void set_allocated_affair(::ProtoGovernAffair::AffairItemCPP* affair);

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.OpenAffairWindowResp)
 private:
  inline void set_has_affair();
  inline void clear_has_affair();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoGovernAffair::AffairItemCPP* affair_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static OpenAffairWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class GetAffairRewardReq : public ::google::protobuf::Message {
 public:
  GetAffairRewardReq();
  virtual ~GetAffairRewardReq();

  GetAffairRewardReq(const GetAffairRewardReq& from);

  inline GetAffairRewardReq& operator=(const GetAffairRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAffairRewardReq& default_instance();

  void Swap(GetAffairRewardReq* other);

  // implements Message ----------------------------------------------

  GetAffairRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAffairRewardReq& from);
  void MergeFrom(const GetAffairRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.GetAffairRewardReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static GetAffairRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAffairRewardResp : public ::google::protobuf::Message {
 public:
  GetAffairRewardResp();
  virtual ~GetAffairRewardResp();

  GetAffairRewardResp(const GetAffairRewardResp& from);

  inline GetAffairRewardResp& operator=(const GetAffairRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAffairRewardResp& default_instance();

  void Swap(GetAffairRewardResp* other);

  // implements Message ----------------------------------------------

  GetAffairRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAffairRewardResp& from);
  void MergeFrom(const GetAffairRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 wood = 2;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 2;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // required uint32 food = 3;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 3;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // required uint32 cash = 5;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 5;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required .ProtoGovernAffair.AffairItemCPP affair = 6;
  inline bool has_affair() const;
  inline void clear_affair();
  static const int kAffairFieldNumber = 6;
  inline const ::ProtoGovernAffair::AffairItemCPP& affair() const;
  inline ::ProtoGovernAffair::AffairItemCPP* mutable_affair();
  inline ::ProtoGovernAffair::AffairItemCPP* release_affair();
  inline void set_allocated_affair(::ProtoGovernAffair::AffairItemCPP* affair);

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.GetAffairRewardResp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_affair();
  inline void clear_has_affair();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 cash_;
  ::ProtoGovernAffair::AffairItemCPP* affair_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static GetAffairRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class LoyalExchangeReq : public ::google::protobuf::Message {
 public:
  LoyalExchangeReq();
  virtual ~LoyalExchangeReq();

  LoyalExchangeReq(const LoyalExchangeReq& from);

  inline LoyalExchangeReq& operator=(const LoyalExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoyalExchangeReq& default_instance();

  void Swap(LoyalExchangeReq* other);

  // implements Message ----------------------------------------------

  LoyalExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoyalExchangeReq& from);
  void MergeFrom(const LoyalExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.LoyalExchangeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static LoyalExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

class LoyalExchangeResp : public ::google::protobuf::Message {
 public:
  LoyalExchangeResp();
  virtual ~LoyalExchangeResp();

  LoyalExchangeResp(const LoyalExchangeResp& from);

  inline LoyalExchangeResp& operator=(const LoyalExchangeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoyalExchangeResp& default_instance();

  void Swap(LoyalExchangeResp* other);

  // implements Message ----------------------------------------------

  LoyalExchangeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoyalExchangeResp& from);
  void MergeFrom(const LoyalExchangeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.RewardItemCPP coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline const ::DataCommon::RewardItemCPP& coin() const;
  inline ::DataCommon::RewardItemCPP* mutable_coin();
  inline ::DataCommon::RewardItemCPP* release_coin();
  inline void set_allocated_coin(::DataCommon::RewardItemCPP* coin);

  // required .DataCommon.RewardItemCPP wood = 2;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 2;
  inline const ::DataCommon::RewardItemCPP& wood() const;
  inline ::DataCommon::RewardItemCPP* mutable_wood();
  inline ::DataCommon::RewardItemCPP* release_wood();
  inline void set_allocated_wood(::DataCommon::RewardItemCPP* wood);

  // required .DataCommon.RewardItemCPP food = 3;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 3;
  inline const ::DataCommon::RewardItemCPP& food() const;
  inline ::DataCommon::RewardItemCPP* mutable_food();
  inline ::DataCommon::RewardItemCPP* release_food();
  inline void set_allocated_food(::DataCommon::RewardItemCPP* food);

  // required .DataCommon.RewardItemCPP iron = 4;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 4;
  inline const ::DataCommon::RewardItemCPP& iron() const;
  inline ::DataCommon::RewardItemCPP* mutable_iron();
  inline ::DataCommon::RewardItemCPP* release_iron();
  inline void set_allocated_iron(::DataCommon::RewardItemCPP* iron);

  // required uint32 loyal = 5;
  inline bool has_loyal() const;
  inline void clear_loyal();
  static const int kLoyalFieldNumber = 5;
  inline ::google::protobuf::uint32 loyal() const;
  inline void set_loyal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoGovernAffair.LoyalExchangeResp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_iron();
  inline void clear_has_iron();
  inline void set_has_loyal();
  inline void clear_has_loyal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::RewardItemCPP* coin_;
  ::DataCommon::RewardItemCPP* wood_;
  ::DataCommon::RewardItemCPP* food_;
  ::DataCommon::RewardItemCPP* iron_;
  ::google::protobuf::uint32 loyal_;
  friend void  protobuf_AddDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_AssignDesc_ProtoGovernAffair_2eproto();
  friend void protobuf_ShutdownFile_ProtoGovernAffair_2eproto();

  void InitAsDefaultInstance();
  static LoyalExchangeResp* default_instance_;
};
// ===================================================================


// ===================================================================

// AffairItemCPP

// required uint32 mission_time = 1;
inline bool AffairItemCPP::has_mission_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AffairItemCPP::set_has_mission_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AffairItemCPP::clear_has_mission_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AffairItemCPP::clear_mission_time() {
  mission_time_ = 0u;
  clear_has_mission_time();
}
inline ::google::protobuf::uint32 AffairItemCPP::mission_time() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.AffairItemCPP.mission_time)
  return mission_time_;
}
inline void AffairItemCPP::set_mission_time(::google::protobuf::uint32 value) {
  set_has_mission_time();
  mission_time_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.AffairItemCPP.mission_time)
}

// required uint32 mission_id = 2;
inline bool AffairItemCPP::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AffairItemCPP::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AffairItemCPP::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AffairItemCPP::clear_mission_id() {
  mission_id_ = 0u;
  clear_has_mission_id();
}
inline ::google::protobuf::uint32 AffairItemCPP::mission_id() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.AffairItemCPP.mission_id)
  return mission_id_;
}
inline void AffairItemCPP::set_mission_id(::google::protobuf::uint32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.AffairItemCPP.mission_id)
}

// required uint32 loyal = 3;
inline bool AffairItemCPP::has_loyal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AffairItemCPP::set_has_loyal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AffairItemCPP::clear_has_loyal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AffairItemCPP::clear_loyal() {
  loyal_ = 0u;
  clear_has_loyal();
}
inline ::google::protobuf::uint32 AffairItemCPP::loyal() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.AffairItemCPP.loyal)
  return loyal_;
}
inline void AffairItemCPP::set_loyal(::google::protobuf::uint32 value) {
  set_has_loyal();
  loyal_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.AffairItemCPP.loyal)
}

// -------------------------------------------------------------------

// OpenAffairWindowReq

// -------------------------------------------------------------------

// OpenAffairWindowResp

// required .ProtoGovernAffair.AffairItemCPP affair = 1;
inline bool OpenAffairWindowResp::has_affair() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenAffairWindowResp::set_has_affair() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenAffairWindowResp::clear_has_affair() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenAffairWindowResp::clear_affair() {
  if (affair_ != NULL) affair_->::ProtoGovernAffair::AffairItemCPP::Clear();
  clear_has_affair();
}
inline const ::ProtoGovernAffair::AffairItemCPP& OpenAffairWindowResp::affair() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.OpenAffairWindowResp.affair)
  return affair_ != NULL ? *affair_ : *default_instance_->affair_;
}
inline ::ProtoGovernAffair::AffairItemCPP* OpenAffairWindowResp::mutable_affair() {
  set_has_affair();
  if (affair_ == NULL) affair_ = new ::ProtoGovernAffair::AffairItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.OpenAffairWindowResp.affair)
  return affair_;
}
inline ::ProtoGovernAffair::AffairItemCPP* OpenAffairWindowResp::release_affair() {
  clear_has_affair();
  ::ProtoGovernAffair::AffairItemCPP* temp = affair_;
  affair_ = NULL;
  return temp;
}
inline void OpenAffairWindowResp::set_allocated_affair(::ProtoGovernAffair::AffairItemCPP* affair) {
  delete affair_;
  affair_ = affair;
  if (affair) {
    set_has_affair();
  } else {
    clear_has_affair();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.OpenAffairWindowResp.affair)
}

// -------------------------------------------------------------------

// GetAffairRewardReq

// required uint32 index = 1;
inline bool GetAffairRewardReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAffairRewardReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAffairRewardReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAffairRewardReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GetAffairRewardReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardReq.index)
  return index_;
}
inline void GetAffairRewardReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.GetAffairRewardReq.index)
}

// -------------------------------------------------------------------

// GetAffairRewardResp

// required uint32 coin = 1;
inline bool GetAffairRewardResp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAffairRewardResp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAffairRewardResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAffairRewardResp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 GetAffairRewardResp::coin() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardResp.coin)
  return coin_;
}
inline void GetAffairRewardResp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.GetAffairRewardResp.coin)
}

// required uint32 wood = 2;
inline bool GetAffairRewardResp::has_wood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAffairRewardResp::set_has_wood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAffairRewardResp::clear_has_wood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAffairRewardResp::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 GetAffairRewardResp::wood() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardResp.wood)
  return wood_;
}
inline void GetAffairRewardResp::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.GetAffairRewardResp.wood)
}

// required uint32 food = 3;
inline bool GetAffairRewardResp::has_food() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAffairRewardResp::set_has_food() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAffairRewardResp::clear_has_food() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAffairRewardResp::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 GetAffairRewardResp::food() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardResp.food)
  return food_;
}
inline void GetAffairRewardResp::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.GetAffairRewardResp.food)
}

// required uint32 cash = 5;
inline bool GetAffairRewardResp::has_cash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAffairRewardResp::set_has_cash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAffairRewardResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAffairRewardResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 GetAffairRewardResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardResp.cash)
  return cash_;
}
inline void GetAffairRewardResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.GetAffairRewardResp.cash)
}

// required .ProtoGovernAffair.AffairItemCPP affair = 6;
inline bool GetAffairRewardResp::has_affair() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAffairRewardResp::set_has_affair() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAffairRewardResp::clear_has_affair() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAffairRewardResp::clear_affair() {
  if (affair_ != NULL) affair_->::ProtoGovernAffair::AffairItemCPP::Clear();
  clear_has_affair();
}
inline const ::ProtoGovernAffair::AffairItemCPP& GetAffairRewardResp::affair() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.GetAffairRewardResp.affair)
  return affair_ != NULL ? *affair_ : *default_instance_->affair_;
}
inline ::ProtoGovernAffair::AffairItemCPP* GetAffairRewardResp::mutable_affair() {
  set_has_affair();
  if (affair_ == NULL) affair_ = new ::ProtoGovernAffair::AffairItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.GetAffairRewardResp.affair)
  return affair_;
}
inline ::ProtoGovernAffair::AffairItemCPP* GetAffairRewardResp::release_affair() {
  clear_has_affair();
  ::ProtoGovernAffair::AffairItemCPP* temp = affair_;
  affair_ = NULL;
  return temp;
}
inline void GetAffairRewardResp::set_allocated_affair(::ProtoGovernAffair::AffairItemCPP* affair) {
  delete affair_;
  affair_ = affair;
  if (affair) {
    set_has_affair();
  } else {
    clear_has_affair();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.GetAffairRewardResp.affair)
}

// -------------------------------------------------------------------

// LoyalExchangeReq

// -------------------------------------------------------------------

// LoyalExchangeResp

// required .DataCommon.RewardItemCPP coin = 1;
inline bool LoyalExchangeResp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoyalExchangeResp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoyalExchangeResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoyalExchangeResp::clear_coin() {
  if (coin_ != NULL) coin_->::DataCommon::RewardItemCPP::Clear();
  clear_has_coin();
}
inline const ::DataCommon::RewardItemCPP& LoyalExchangeResp::coin() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.LoyalExchangeResp.coin)
  return coin_ != NULL ? *coin_ : *default_instance_->coin_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::mutable_coin() {
  set_has_coin();
  if (coin_ == NULL) coin_ = new ::DataCommon::RewardItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.LoyalExchangeResp.coin)
  return coin_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::release_coin() {
  clear_has_coin();
  ::DataCommon::RewardItemCPP* temp = coin_;
  coin_ = NULL;
  return temp;
}
inline void LoyalExchangeResp::set_allocated_coin(::DataCommon::RewardItemCPP* coin) {
  delete coin_;
  coin_ = coin;
  if (coin) {
    set_has_coin();
  } else {
    clear_has_coin();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.LoyalExchangeResp.coin)
}

// required .DataCommon.RewardItemCPP wood = 2;
inline bool LoyalExchangeResp::has_wood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoyalExchangeResp::set_has_wood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoyalExchangeResp::clear_has_wood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoyalExchangeResp::clear_wood() {
  if (wood_ != NULL) wood_->::DataCommon::RewardItemCPP::Clear();
  clear_has_wood();
}
inline const ::DataCommon::RewardItemCPP& LoyalExchangeResp::wood() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.LoyalExchangeResp.wood)
  return wood_ != NULL ? *wood_ : *default_instance_->wood_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::mutable_wood() {
  set_has_wood();
  if (wood_ == NULL) wood_ = new ::DataCommon::RewardItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.LoyalExchangeResp.wood)
  return wood_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::release_wood() {
  clear_has_wood();
  ::DataCommon::RewardItemCPP* temp = wood_;
  wood_ = NULL;
  return temp;
}
inline void LoyalExchangeResp::set_allocated_wood(::DataCommon::RewardItemCPP* wood) {
  delete wood_;
  wood_ = wood;
  if (wood) {
    set_has_wood();
  } else {
    clear_has_wood();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.LoyalExchangeResp.wood)
}

// required .DataCommon.RewardItemCPP food = 3;
inline bool LoyalExchangeResp::has_food() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoyalExchangeResp::set_has_food() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoyalExchangeResp::clear_has_food() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoyalExchangeResp::clear_food() {
  if (food_ != NULL) food_->::DataCommon::RewardItemCPP::Clear();
  clear_has_food();
}
inline const ::DataCommon::RewardItemCPP& LoyalExchangeResp::food() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.LoyalExchangeResp.food)
  return food_ != NULL ? *food_ : *default_instance_->food_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::mutable_food() {
  set_has_food();
  if (food_ == NULL) food_ = new ::DataCommon::RewardItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.LoyalExchangeResp.food)
  return food_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::release_food() {
  clear_has_food();
  ::DataCommon::RewardItemCPP* temp = food_;
  food_ = NULL;
  return temp;
}
inline void LoyalExchangeResp::set_allocated_food(::DataCommon::RewardItemCPP* food) {
  delete food_;
  food_ = food;
  if (food) {
    set_has_food();
  } else {
    clear_has_food();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.LoyalExchangeResp.food)
}

// required .DataCommon.RewardItemCPP iron = 4;
inline bool LoyalExchangeResp::has_iron() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoyalExchangeResp::set_has_iron() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoyalExchangeResp::clear_has_iron() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoyalExchangeResp::clear_iron() {
  if (iron_ != NULL) iron_->::DataCommon::RewardItemCPP::Clear();
  clear_has_iron();
}
inline const ::DataCommon::RewardItemCPP& LoyalExchangeResp::iron() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.LoyalExchangeResp.iron)
  return iron_ != NULL ? *iron_ : *default_instance_->iron_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::mutable_iron() {
  set_has_iron();
  if (iron_ == NULL) iron_ = new ::DataCommon::RewardItemCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGovernAffair.LoyalExchangeResp.iron)
  return iron_;
}
inline ::DataCommon::RewardItemCPP* LoyalExchangeResp::release_iron() {
  clear_has_iron();
  ::DataCommon::RewardItemCPP* temp = iron_;
  iron_ = NULL;
  return temp;
}
inline void LoyalExchangeResp::set_allocated_iron(::DataCommon::RewardItemCPP* iron) {
  delete iron_;
  iron_ = iron;
  if (iron) {
    set_has_iron();
  } else {
    clear_has_iron();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGovernAffair.LoyalExchangeResp.iron)
}

// required uint32 loyal = 5;
inline bool LoyalExchangeResp::has_loyal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoyalExchangeResp::set_has_loyal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoyalExchangeResp::clear_has_loyal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoyalExchangeResp::clear_loyal() {
  loyal_ = 0u;
  clear_has_loyal();
}
inline ::google::protobuf::uint32 LoyalExchangeResp::loyal() const {
  // @@protoc_insertion_point(field_get:ProtoGovernAffair.LoyalExchangeResp.loyal)
  return loyal_;
}
inline void LoyalExchangeResp::set_loyal(::google::protobuf::uint32 value) {
  set_has_loyal();
  loyal_ = value;
  // @@protoc_insertion_point(field_set:ProtoGovernAffair.LoyalExchangeResp.loyal)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoGovernAffair

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoGovernAffair_2eproto__INCLUDED
