// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoResourceCopy.proto

#ifndef PROTOBUF_ProtoResourceCopy_2eproto__INCLUDED
#define PROTOBUF_ProtoResourceCopy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoResourceCopy {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

class ResourceCopyCPP;
class ResourceCopyCPPAll;
class OpenGateWindowReq;
class OpenGateWindowResp;
class BuyResourceCopyReq;
class BuyResourceCopyResp;

// ===================================================================

class ResourceCopyCPP : public ::google::protobuf::Message {
 public:
  ResourceCopyCPP();
  virtual ~ResourceCopyCPP();

  ResourceCopyCPP(const ResourceCopyCPP& from);

  inline ResourceCopyCPP& operator=(const ResourceCopyCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceCopyCPP& default_instance();

  void Swap(ResourceCopyCPP* other);

  // implements Message ----------------------------------------------

  ResourceCopyCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceCopyCPP& from);
  void MergeFrom(const ResourceCopyCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 buytimes = 2;
  inline bool has_buytimes() const;
  inline void clear_buytimes();
  static const int kBuytimesFieldNumber = 2;
  inline ::google::protobuf::uint32 buytimes() const;
  inline void set_buytimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.ResourceCopyCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buytimes();
  inline void clear_has_buytimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 buytimes_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static ResourceCopyCPP* default_instance_;
};
// -------------------------------------------------------------------

class ResourceCopyCPPAll : public ::google::protobuf::Message {
 public:
  ResourceCopyCPPAll();
  virtual ~ResourceCopyCPPAll();

  ResourceCopyCPPAll(const ResourceCopyCPPAll& from);

  inline ResourceCopyCPPAll& operator=(const ResourceCopyCPPAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceCopyCPPAll& default_instance();

  void Swap(ResourceCopyCPPAll* other);

  // implements Message ----------------------------------------------

  ResourceCopyCPPAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceCopyCPPAll& from);
  void MergeFrom(const ResourceCopyCPPAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoResourceCopy.ResourceCopyCPP rescopy = 1;
  inline int rescopy_size() const;
  inline void clear_rescopy();
  static const int kRescopyFieldNumber = 1;
  inline const ::ProtoResourceCopy::ResourceCopyCPP& rescopy(int index) const;
  inline ::ProtoResourceCopy::ResourceCopyCPP* mutable_rescopy(int index);
  inline ::ProtoResourceCopy::ResourceCopyCPP* add_rescopy();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoResourceCopy::ResourceCopyCPP >&
      rescopy() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoResourceCopy::ResourceCopyCPP >*
      mutable_rescopy();

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.ResourceCopyCPPAll)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoResourceCopy::ResourceCopyCPP > rescopy_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static ResourceCopyCPPAll* default_instance_;
};
// -------------------------------------------------------------------

class OpenGateWindowReq : public ::google::protobuf::Message {
 public:
  OpenGateWindowReq();
  virtual ~OpenGateWindowReq();

  OpenGateWindowReq(const OpenGateWindowReq& from);

  inline OpenGateWindowReq& operator=(const OpenGateWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenGateWindowReq& default_instance();

  void Swap(OpenGateWindowReq* other);

  // implements Message ----------------------------------------------

  OpenGateWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenGateWindowReq& from);
  void MergeFrom(const OpenGateWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.OpenGateWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static OpenGateWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenGateWindowResp : public ::google::protobuf::Message {
 public:
  OpenGateWindowResp();
  virtual ~OpenGateWindowResp();

  OpenGateWindowResp(const OpenGateWindowResp& from);

  inline OpenGateWindowResp& operator=(const OpenGateWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenGateWindowResp& default_instance();

  void Swap(OpenGateWindowResp* other);

  // implements Message ----------------------------------------------

  OpenGateWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenGateWindowResp& from);
  void MergeFrom(const OpenGateWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoResourceCopy.ResourceCopyCPPAll rescopies = 1;
  inline bool has_rescopies() const;
  inline void clear_rescopies();
  static const int kRescopiesFieldNumber = 1;
  inline const ::ProtoResourceCopy::ResourceCopyCPPAll& rescopies() const;
  inline ::ProtoResourceCopy::ResourceCopyCPPAll* mutable_rescopies();
  inline ::ProtoResourceCopy::ResourceCopyCPPAll* release_rescopies();
  inline void set_allocated_rescopies(::ProtoResourceCopy::ResourceCopyCPPAll* rescopies);

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.OpenGateWindowResp)
 private:
  inline void set_has_rescopies();
  inline void clear_has_rescopies();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoResourceCopy::ResourceCopyCPPAll* rescopies_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static OpenGateWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyResourceCopyReq : public ::google::protobuf::Message {
 public:
  BuyResourceCopyReq();
  virtual ~BuyResourceCopyReq();

  BuyResourceCopyReq(const BuyResourceCopyReq& from);

  inline BuyResourceCopyReq& operator=(const BuyResourceCopyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyResourceCopyReq& default_instance();

  void Swap(BuyResourceCopyReq* other);

  // implements Message ----------------------------------------------

  BuyResourceCopyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyResourceCopyReq& from);
  void MergeFrom(const BuyResourceCopyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.BuyResourceCopyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static BuyResourceCopyReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyResourceCopyResp : public ::google::protobuf::Message {
 public:
  BuyResourceCopyResp();
  virtual ~BuyResourceCopyResp();

  BuyResourceCopyResp(const BuyResourceCopyResp& from);

  inline BuyResourceCopyResp& operator=(const BuyResourceCopyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyResourceCopyResp& default_instance();

  void Swap(BuyResourceCopyResp* other);

  // implements Message ----------------------------------------------

  BuyResourceCopyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyResourceCopyResp& from);
  void MergeFrom(const BuyResourceCopyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoResourceCopy.ResourceCopyCPP rescopy = 1;
  inline bool has_rescopy() const;
  inline void clear_rescopy();
  static const int kRescopyFieldNumber = 1;
  inline const ::ProtoResourceCopy::ResourceCopyCPP& rescopy() const;
  inline ::ProtoResourceCopy::ResourceCopyCPP* mutable_rescopy();
  inline ::ProtoResourceCopy::ResourceCopyCPP* release_rescopy();
  inline void set_allocated_rescopy(::ProtoResourceCopy::ResourceCopyCPP* rescopy);

  // required .User.RewardBagInfo reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::User::RewardBagInfo& reward() const;
  inline ::User::RewardBagInfo* mutable_reward();
  inline ::User::RewardBagInfo* release_reward();
  inline void set_allocated_reward(::User::RewardBagInfo* reward);

  // required uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoResourceCopy.BuyResourceCopyResp)
 private:
  inline void set_has_rescopy();
  inline void clear_has_rescopy();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoResourceCopy::ResourceCopyCPP* rescopy_;
  ::User::RewardBagInfo* reward_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_AssignDesc_ProtoResourceCopy_2eproto();
  friend void protobuf_ShutdownFile_ProtoResourceCopy_2eproto();

  void InitAsDefaultInstance();
  static BuyResourceCopyResp* default_instance_;
};
// ===================================================================


// ===================================================================

// ResourceCopyCPP

// required uint32 id = 1;
inline bool ResourceCopyCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceCopyCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceCopyCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceCopyCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ResourceCopyCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.ResourceCopyCPP.id)
  return id_;
}
inline void ResourceCopyCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoResourceCopy.ResourceCopyCPP.id)
}

// required uint32 buytimes = 2;
inline bool ResourceCopyCPP::has_buytimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceCopyCPP::set_has_buytimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceCopyCPP::clear_has_buytimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceCopyCPP::clear_buytimes() {
  buytimes_ = 0u;
  clear_has_buytimes();
}
inline ::google::protobuf::uint32 ResourceCopyCPP::buytimes() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.ResourceCopyCPP.buytimes)
  return buytimes_;
}
inline void ResourceCopyCPP::set_buytimes(::google::protobuf::uint32 value) {
  set_has_buytimes();
  buytimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoResourceCopy.ResourceCopyCPP.buytimes)
}

// -------------------------------------------------------------------

// ResourceCopyCPPAll

// repeated .ProtoResourceCopy.ResourceCopyCPP rescopy = 1;
inline int ResourceCopyCPPAll::rescopy_size() const {
  return rescopy_.size();
}
inline void ResourceCopyCPPAll::clear_rescopy() {
  rescopy_.Clear();
}
inline const ::ProtoResourceCopy::ResourceCopyCPP& ResourceCopyCPPAll::rescopy(int index) const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.ResourceCopyCPPAll.rescopy)
  return rescopy_.Get(index);
}
inline ::ProtoResourceCopy::ResourceCopyCPP* ResourceCopyCPPAll::mutable_rescopy(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoResourceCopy.ResourceCopyCPPAll.rescopy)
  return rescopy_.Mutable(index);
}
inline ::ProtoResourceCopy::ResourceCopyCPP* ResourceCopyCPPAll::add_rescopy() {
  // @@protoc_insertion_point(field_add:ProtoResourceCopy.ResourceCopyCPPAll.rescopy)
  return rescopy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoResourceCopy::ResourceCopyCPP >&
ResourceCopyCPPAll::rescopy() const {
  // @@protoc_insertion_point(field_list:ProtoResourceCopy.ResourceCopyCPPAll.rescopy)
  return rescopy_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoResourceCopy::ResourceCopyCPP >*
ResourceCopyCPPAll::mutable_rescopy() {
  // @@protoc_insertion_point(field_mutable_list:ProtoResourceCopy.ResourceCopyCPPAll.rescopy)
  return &rescopy_;
}

// -------------------------------------------------------------------

// OpenGateWindowReq

// -------------------------------------------------------------------

// OpenGateWindowResp

// required .ProtoResourceCopy.ResourceCopyCPPAll rescopies = 1;
inline bool OpenGateWindowResp::has_rescopies() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenGateWindowResp::set_has_rescopies() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenGateWindowResp::clear_has_rescopies() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenGateWindowResp::clear_rescopies() {
  if (rescopies_ != NULL) rescopies_->::ProtoResourceCopy::ResourceCopyCPPAll::Clear();
  clear_has_rescopies();
}
inline const ::ProtoResourceCopy::ResourceCopyCPPAll& OpenGateWindowResp::rescopies() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.OpenGateWindowResp.rescopies)
  return rescopies_ != NULL ? *rescopies_ : *default_instance_->rescopies_;
}
inline ::ProtoResourceCopy::ResourceCopyCPPAll* OpenGateWindowResp::mutable_rescopies() {
  set_has_rescopies();
  if (rescopies_ == NULL) rescopies_ = new ::ProtoResourceCopy::ResourceCopyCPPAll;
  // @@protoc_insertion_point(field_mutable:ProtoResourceCopy.OpenGateWindowResp.rescopies)
  return rescopies_;
}
inline ::ProtoResourceCopy::ResourceCopyCPPAll* OpenGateWindowResp::release_rescopies() {
  clear_has_rescopies();
  ::ProtoResourceCopy::ResourceCopyCPPAll* temp = rescopies_;
  rescopies_ = NULL;
  return temp;
}
inline void OpenGateWindowResp::set_allocated_rescopies(::ProtoResourceCopy::ResourceCopyCPPAll* rescopies) {
  delete rescopies_;
  rescopies_ = rescopies;
  if (rescopies) {
    set_has_rescopies();
  } else {
    clear_has_rescopies();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoResourceCopy.OpenGateWindowResp.rescopies)
}

// -------------------------------------------------------------------

// BuyResourceCopyReq

// required uint32 id = 1;
inline bool BuyResourceCopyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyResourceCopyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyResourceCopyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyResourceCopyReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BuyResourceCopyReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.BuyResourceCopyReq.id)
  return id_;
}
inline void BuyResourceCopyReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoResourceCopy.BuyResourceCopyReq.id)
}

// -------------------------------------------------------------------

// BuyResourceCopyResp

// required .ProtoResourceCopy.ResourceCopyCPP rescopy = 1;
inline bool BuyResourceCopyResp::has_rescopy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyResourceCopyResp::set_has_rescopy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyResourceCopyResp::clear_has_rescopy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyResourceCopyResp::clear_rescopy() {
  if (rescopy_ != NULL) rescopy_->::ProtoResourceCopy::ResourceCopyCPP::Clear();
  clear_has_rescopy();
}
inline const ::ProtoResourceCopy::ResourceCopyCPP& BuyResourceCopyResp::rescopy() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.BuyResourceCopyResp.rescopy)
  return rescopy_ != NULL ? *rescopy_ : *default_instance_->rescopy_;
}
inline ::ProtoResourceCopy::ResourceCopyCPP* BuyResourceCopyResp::mutable_rescopy() {
  set_has_rescopy();
  if (rescopy_ == NULL) rescopy_ = new ::ProtoResourceCopy::ResourceCopyCPP;
  // @@protoc_insertion_point(field_mutable:ProtoResourceCopy.BuyResourceCopyResp.rescopy)
  return rescopy_;
}
inline ::ProtoResourceCopy::ResourceCopyCPP* BuyResourceCopyResp::release_rescopy() {
  clear_has_rescopy();
  ::ProtoResourceCopy::ResourceCopyCPP* temp = rescopy_;
  rescopy_ = NULL;
  return temp;
}
inline void BuyResourceCopyResp::set_allocated_rescopy(::ProtoResourceCopy::ResourceCopyCPP* rescopy) {
  delete rescopy_;
  rescopy_ = rescopy;
  if (rescopy) {
    set_has_rescopy();
  } else {
    clear_has_rescopy();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoResourceCopy.BuyResourceCopyResp.rescopy)
}

// required .User.RewardBagInfo reward = 2;
inline bool BuyResourceCopyResp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyResourceCopyResp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyResourceCopyResp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyResourceCopyResp::clear_reward() {
  if (reward_ != NULL) reward_->::User::RewardBagInfo::Clear();
  clear_has_reward();
}
inline const ::User::RewardBagInfo& BuyResourceCopyResp::reward() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.BuyResourceCopyResp.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::User::RewardBagInfo* BuyResourceCopyResp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::User::RewardBagInfo;
  // @@protoc_insertion_point(field_mutable:ProtoResourceCopy.BuyResourceCopyResp.reward)
  return reward_;
}
inline ::User::RewardBagInfo* BuyResourceCopyResp::release_reward() {
  clear_has_reward();
  ::User::RewardBagInfo* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void BuyResourceCopyResp::set_allocated_reward(::User::RewardBagInfo* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoResourceCopy.BuyResourceCopyResp.reward)
}

// required uint32 cash = 3;
inline bool BuyResourceCopyResp::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyResourceCopyResp::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyResourceCopyResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyResourceCopyResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 BuyResourceCopyResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoResourceCopy.BuyResourceCopyResp.cash)
  return cash_;
}
inline void BuyResourceCopyResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoResourceCopy.BuyResourceCopyResp.cash)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoResourceCopy

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoResourceCopy_2eproto__INCLUDED
