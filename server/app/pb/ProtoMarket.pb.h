// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoMarket.proto

#ifndef PROTOBUF_ProtoMarket_2eproto__INCLUDED
#define PROTOBUF_ProtoMarket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoMarket {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoMarket_2eproto();
void protobuf_AssignDesc_ProtoMarket_2eproto();
void protobuf_ShutdownFile_ProtoMarket_2eproto();

class MarketCPP;
class MarketRefreshReq;
class MarketRefreshResp;
class PurchaseMarketReq;
class PurchaseMarketResp;

// ===================================================================

class MarketCPP : public ::google::protobuf::Message {
 public:
  MarketCPP();
  virtual ~MarketCPP();

  MarketCPP(const MarketCPP& from);

  inline MarketCPP& operator=(const MarketCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketCPP& default_instance();

  void Swap(MarketCPP* other);

  // implements Message ----------------------------------------------

  MarketCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketCPP& from);
  void MergeFrom(const MarketCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 refreshtime = 1;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint32 value);

  // required uint32 type1 = 2;
  inline bool has_type1() const;
  inline void clear_type1();
  static const int kType1FieldNumber = 2;
  inline ::google::protobuf::uint32 type1() const;
  inline void set_type1(::google::protobuf::uint32 value);

  // required uint32 character1 = 3;
  inline bool has_character1() const;
  inline void clear_character1();
  static const int kCharacter1FieldNumber = 3;
  inline ::google::protobuf::uint32 character1() const;
  inline void set_character1(::google::protobuf::uint32 value);

  // required uint32 type2 = 4;
  inline bool has_type2() const;
  inline void clear_type2();
  static const int kType2FieldNumber = 4;
  inline ::google::protobuf::uint32 type2() const;
  inline void set_type2(::google::protobuf::uint32 value);

  // required uint32 character2 = 5;
  inline bool has_character2() const;
  inline void clear_character2();
  static const int kCharacter2FieldNumber = 5;
  inline ::google::protobuf::uint32 character2() const;
  inline void set_character2(::google::protobuf::uint32 value);

  // required uint32 type3 = 6;
  inline bool has_type3() const;
  inline void clear_type3();
  static const int kType3FieldNumber = 6;
  inline ::google::protobuf::uint32 type3() const;
  inline void set_type3(::google::protobuf::uint32 value);

  // required uint32 character3 = 7;
  inline bool has_character3() const;
  inline void clear_character3();
  static const int kCharacter3FieldNumber = 7;
  inline ::google::protobuf::uint32 character3() const;
  inline void set_character3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMarket.MarketCPP)
 private:
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_type1();
  inline void clear_has_type1();
  inline void set_has_character1();
  inline void clear_has_character1();
  inline void set_has_type2();
  inline void clear_has_type2();
  inline void set_has_character2();
  inline void clear_has_character2();
  inline void set_has_type3();
  inline void clear_has_type3();
  inline void set_has_character3();
  inline void clear_has_character3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 refreshtime_;
  ::google::protobuf::uint32 type1_;
  ::google::protobuf::uint32 character1_;
  ::google::protobuf::uint32 type2_;
  ::google::protobuf::uint32 character2_;
  ::google::protobuf::uint32 type3_;
  ::google::protobuf::uint32 character3_;
  friend void  protobuf_AddDesc_ProtoMarket_2eproto();
  friend void protobuf_AssignDesc_ProtoMarket_2eproto();
  friend void protobuf_ShutdownFile_ProtoMarket_2eproto();

  void InitAsDefaultInstance();
  static MarketCPP* default_instance_;
};
// -------------------------------------------------------------------

class MarketRefreshReq : public ::google::protobuf::Message {
 public:
  MarketRefreshReq();
  virtual ~MarketRefreshReq();

  MarketRefreshReq(const MarketRefreshReq& from);

  inline MarketRefreshReq& operator=(const MarketRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRefreshReq& default_instance();

  void Swap(MarketRefreshReq* other);

  // implements Message ----------------------------------------------

  MarketRefreshReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRefreshReq& from);
  void MergeFrom(const MarketRefreshReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMarket.MarketRefreshReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoMarket_2eproto();
  friend void protobuf_AssignDesc_ProtoMarket_2eproto();
  friend void protobuf_ShutdownFile_ProtoMarket_2eproto();

  void InitAsDefaultInstance();
  static MarketRefreshReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketRefreshResp : public ::google::protobuf::Message {
 public:
  MarketRefreshResp();
  virtual ~MarketRefreshResp();

  MarketRefreshResp(const MarketRefreshResp& from);

  inline MarketRefreshResp& operator=(const MarketRefreshResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRefreshResp& default_instance();

  void Swap(MarketRefreshResp* other);

  // implements Message ----------------------------------------------

  MarketRefreshResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRefreshResp& from);
  void MergeFrom(const MarketRefreshResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoMarket.MarketCPP market = 1;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 1;
  inline const ::ProtoMarket::MarketCPP& market() const;
  inline ::ProtoMarket::MarketCPP* mutable_market();
  inline ::ProtoMarket::MarketCPP* release_market();
  inline void set_allocated_market(::ProtoMarket::MarketCPP* market);

  // @@protoc_insertion_point(class_scope:ProtoMarket.MarketRefreshResp)
 private:
  inline void set_has_market();
  inline void clear_has_market();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoMarket::MarketCPP* market_;
  friend void  protobuf_AddDesc_ProtoMarket_2eproto();
  friend void protobuf_AssignDesc_ProtoMarket_2eproto();
  friend void protobuf_ShutdownFile_ProtoMarket_2eproto();

  void InitAsDefaultInstance();
  static MarketRefreshResp* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseMarketReq : public ::google::protobuf::Message {
 public:
  PurchaseMarketReq();
  virtual ~PurchaseMarketReq();

  PurchaseMarketReq(const PurchaseMarketReq& from);

  inline PurchaseMarketReq& operator=(const PurchaseMarketReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseMarketReq& default_instance();

  void Swap(PurchaseMarketReq* other);

  // implements Message ----------------------------------------------

  PurchaseMarketReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseMarketReq& from);
  void MergeFrom(const PurchaseMarketReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMarket.PurchaseMarketReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoMarket_2eproto();
  friend void protobuf_AssignDesc_ProtoMarket_2eproto();
  friend void protobuf_ShutdownFile_ProtoMarket_2eproto();

  void InitAsDefaultInstance();
  static PurchaseMarketReq* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseMarketResp : public ::google::protobuf::Message {
 public:
  PurchaseMarketResp();
  virtual ~PurchaseMarketResp();

  PurchaseMarketResp(const PurchaseMarketResp& from);

  inline PurchaseMarketResp& operator=(const PurchaseMarketResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseMarketResp& default_instance();

  void Swap(PurchaseMarketResp* other);

  // implements Message ----------------------------------------------

  PurchaseMarketResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseMarketResp& from);
  void MergeFrom(const PurchaseMarketResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 markettime = 2;
  inline bool has_markettime() const;
  inline void clear_markettime();
  static const int kMarkettimeFieldNumber = 2;
  inline ::google::protobuf::uint32 markettime() const;
  inline void set_markettime(::google::protobuf::uint32 value);

  // required .ProtoMarket.MarketCPP market = 3;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 3;
  inline const ::ProtoMarket::MarketCPP& market() const;
  inline ::ProtoMarket::MarketCPP* mutable_market();
  inline ::ProtoMarket::MarketCPP* release_market();
  inline void set_allocated_market(::ProtoMarket::MarketCPP* market);

  // optional uint32 wood = 4;
  inline bool has_wood() const;
  inline void clear_wood();
  static const int kWoodFieldNumber = 4;
  inline ::google::protobuf::uint32 wood() const;
  inline void set_wood(::google::protobuf::uint32 value);

  // optional uint32 food = 5;
  inline bool has_food() const;
  inline void clear_food();
  static const int kFoodFieldNumber = 5;
  inline ::google::protobuf::uint32 food() const;
  inline void set_food(::google::protobuf::uint32 value);

  // optional uint32 iron = 6;
  inline bool has_iron() const;
  inline void clear_iron();
  static const int kIronFieldNumber = 6;
  inline ::google::protobuf::uint32 iron() const;
  inline void set_iron(::google::protobuf::uint32 value);

  // optional uint32 order = 7;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 7;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMarket.PurchaseMarketResp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_markettime();
  inline void clear_has_markettime();
  inline void set_has_market();
  inline void clear_has_market();
  inline void set_has_wood();
  inline void clear_has_wood();
  inline void set_has_food();
  inline void clear_has_food();
  inline void set_has_iron();
  inline void clear_has_iron();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 markettime_;
  ::ProtoMarket::MarketCPP* market_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 food_;
  ::google::protobuf::uint32 iron_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_ProtoMarket_2eproto();
  friend void protobuf_AssignDesc_ProtoMarket_2eproto();
  friend void protobuf_ShutdownFile_ProtoMarket_2eproto();

  void InitAsDefaultInstance();
  static PurchaseMarketResp* default_instance_;
};
// ===================================================================


// ===================================================================

// MarketCPP

// required uint32 refreshtime = 1;
inline bool MarketCPP::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketCPP::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketCPP::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketCPP::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
inline ::google::protobuf::uint32 MarketCPP::refreshtime() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.refreshtime)
  return refreshtime_;
}
inline void MarketCPP::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.refreshtime)
}

// required uint32 type1 = 2;
inline bool MarketCPP::has_type1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketCPP::set_has_type1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketCPP::clear_has_type1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketCPP::clear_type1() {
  type1_ = 0u;
  clear_has_type1();
}
inline ::google::protobuf::uint32 MarketCPP::type1() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.type1)
  return type1_;
}
inline void MarketCPP::set_type1(::google::protobuf::uint32 value) {
  set_has_type1();
  type1_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.type1)
}

// required uint32 character1 = 3;
inline bool MarketCPP::has_character1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketCPP::set_has_character1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketCPP::clear_has_character1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketCPP::clear_character1() {
  character1_ = 0u;
  clear_has_character1();
}
inline ::google::protobuf::uint32 MarketCPP::character1() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.character1)
  return character1_;
}
inline void MarketCPP::set_character1(::google::protobuf::uint32 value) {
  set_has_character1();
  character1_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.character1)
}

// required uint32 type2 = 4;
inline bool MarketCPP::has_type2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketCPP::set_has_type2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketCPP::clear_has_type2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketCPP::clear_type2() {
  type2_ = 0u;
  clear_has_type2();
}
inline ::google::protobuf::uint32 MarketCPP::type2() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.type2)
  return type2_;
}
inline void MarketCPP::set_type2(::google::protobuf::uint32 value) {
  set_has_type2();
  type2_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.type2)
}

// required uint32 character2 = 5;
inline bool MarketCPP::has_character2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketCPP::set_has_character2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketCPP::clear_has_character2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketCPP::clear_character2() {
  character2_ = 0u;
  clear_has_character2();
}
inline ::google::protobuf::uint32 MarketCPP::character2() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.character2)
  return character2_;
}
inline void MarketCPP::set_character2(::google::protobuf::uint32 value) {
  set_has_character2();
  character2_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.character2)
}

// required uint32 type3 = 6;
inline bool MarketCPP::has_type3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarketCPP::set_has_type3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarketCPP::clear_has_type3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarketCPP::clear_type3() {
  type3_ = 0u;
  clear_has_type3();
}
inline ::google::protobuf::uint32 MarketCPP::type3() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.type3)
  return type3_;
}
inline void MarketCPP::set_type3(::google::protobuf::uint32 value) {
  set_has_type3();
  type3_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.type3)
}

// required uint32 character3 = 7;
inline bool MarketCPP::has_character3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MarketCPP::set_has_character3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MarketCPP::clear_has_character3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MarketCPP::clear_character3() {
  character3_ = 0u;
  clear_has_character3();
}
inline ::google::protobuf::uint32 MarketCPP::character3() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketCPP.character3)
  return character3_;
}
inline void MarketCPP::set_character3(::google::protobuf::uint32 value) {
  set_has_character3();
  character3_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.MarketCPP.character3)
}

// -------------------------------------------------------------------

// MarketRefreshReq

// -------------------------------------------------------------------

// MarketRefreshResp

// required .ProtoMarket.MarketCPP market = 1;
inline bool MarketRefreshResp::has_market() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRefreshResp::set_has_market() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRefreshResp::clear_has_market() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRefreshResp::clear_market() {
  if (market_ != NULL) market_->::ProtoMarket::MarketCPP::Clear();
  clear_has_market();
}
inline const ::ProtoMarket::MarketCPP& MarketRefreshResp::market() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.MarketRefreshResp.market)
  return market_ != NULL ? *market_ : *default_instance_->market_;
}
inline ::ProtoMarket::MarketCPP* MarketRefreshResp::mutable_market() {
  set_has_market();
  if (market_ == NULL) market_ = new ::ProtoMarket::MarketCPP;
  // @@protoc_insertion_point(field_mutable:ProtoMarket.MarketRefreshResp.market)
  return market_;
}
inline ::ProtoMarket::MarketCPP* MarketRefreshResp::release_market() {
  clear_has_market();
  ::ProtoMarket::MarketCPP* temp = market_;
  market_ = NULL;
  return temp;
}
inline void MarketRefreshResp::set_allocated_market(::ProtoMarket::MarketCPP* market) {
  delete market_;
  market_ = market;
  if (market) {
    set_has_market();
  } else {
    clear_has_market();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoMarket.MarketRefreshResp.market)
}

// -------------------------------------------------------------------

// PurchaseMarketReq

// required uint32 index = 1;
inline bool PurchaseMarketReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseMarketReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseMarketReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseMarketReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 PurchaseMarketReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketReq.index)
  return index_;
}
inline void PurchaseMarketReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketReq.index)
}

// -------------------------------------------------------------------

// PurchaseMarketResp

// required uint32 coin = 1;
inline bool PurchaseMarketResp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseMarketResp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseMarketResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseMarketResp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::coin() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.coin)
  return coin_;
}
inline void PurchaseMarketResp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.coin)
}

// required uint32 markettime = 2;
inline bool PurchaseMarketResp::has_markettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PurchaseMarketResp::set_has_markettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PurchaseMarketResp::clear_has_markettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PurchaseMarketResp::clear_markettime() {
  markettime_ = 0u;
  clear_has_markettime();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::markettime() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.markettime)
  return markettime_;
}
inline void PurchaseMarketResp::set_markettime(::google::protobuf::uint32 value) {
  set_has_markettime();
  markettime_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.markettime)
}

// required .ProtoMarket.MarketCPP market = 3;
inline bool PurchaseMarketResp::has_market() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PurchaseMarketResp::set_has_market() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PurchaseMarketResp::clear_has_market() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PurchaseMarketResp::clear_market() {
  if (market_ != NULL) market_->::ProtoMarket::MarketCPP::Clear();
  clear_has_market();
}
inline const ::ProtoMarket::MarketCPP& PurchaseMarketResp::market() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.market)
  return market_ != NULL ? *market_ : *default_instance_->market_;
}
inline ::ProtoMarket::MarketCPP* PurchaseMarketResp::mutable_market() {
  set_has_market();
  if (market_ == NULL) market_ = new ::ProtoMarket::MarketCPP;
  // @@protoc_insertion_point(field_mutable:ProtoMarket.PurchaseMarketResp.market)
  return market_;
}
inline ::ProtoMarket::MarketCPP* PurchaseMarketResp::release_market() {
  clear_has_market();
  ::ProtoMarket::MarketCPP* temp = market_;
  market_ = NULL;
  return temp;
}
inline void PurchaseMarketResp::set_allocated_market(::ProtoMarket::MarketCPP* market) {
  delete market_;
  market_ = market;
  if (market) {
    set_has_market();
  } else {
    clear_has_market();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoMarket.PurchaseMarketResp.market)
}

// optional uint32 wood = 4;
inline bool PurchaseMarketResp::has_wood() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PurchaseMarketResp::set_has_wood() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PurchaseMarketResp::clear_has_wood() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PurchaseMarketResp::clear_wood() {
  wood_ = 0u;
  clear_has_wood();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::wood() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.wood)
  return wood_;
}
inline void PurchaseMarketResp::set_wood(::google::protobuf::uint32 value) {
  set_has_wood();
  wood_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.wood)
}

// optional uint32 food = 5;
inline bool PurchaseMarketResp::has_food() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PurchaseMarketResp::set_has_food() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PurchaseMarketResp::clear_has_food() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PurchaseMarketResp::clear_food() {
  food_ = 0u;
  clear_has_food();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::food() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.food)
  return food_;
}
inline void PurchaseMarketResp::set_food(::google::protobuf::uint32 value) {
  set_has_food();
  food_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.food)
}

// optional uint32 iron = 6;
inline bool PurchaseMarketResp::has_iron() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PurchaseMarketResp::set_has_iron() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PurchaseMarketResp::clear_has_iron() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PurchaseMarketResp::clear_iron() {
  iron_ = 0u;
  clear_has_iron();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::iron() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.iron)
  return iron_;
}
inline void PurchaseMarketResp::set_iron(::google::protobuf::uint32 value) {
  set_has_iron();
  iron_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.iron)
}

// optional uint32 order = 7;
inline bool PurchaseMarketResp::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PurchaseMarketResp::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PurchaseMarketResp::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PurchaseMarketResp::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PurchaseMarketResp::order() const {
  // @@protoc_insertion_point(field_get:ProtoMarket.PurchaseMarketResp.order)
  return order_;
}
inline void PurchaseMarketResp::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:ProtoMarket.PurchaseMarketResp.order)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMarket

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoMarket_2eproto__INCLUDED
