// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPass.proto

#ifndef PROTOBUF_ProtoPass_2eproto__INCLUDED
#define PROTOBUF_ProtoPass_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoPass {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoPass_2eproto();
void protobuf_AssignDesc_ProtoPass_2eproto();
void protobuf_ShutdownFile_ProtoPass_2eproto();

class NPCPassRecord;
class EnterFightReq;

// ===================================================================

class NPCPassRecord : public ::google::protobuf::Message {
 public:
  NPCPassRecord();
  virtual ~NPCPassRecord();

  NPCPassRecord(const NPCPassRecord& from);

  inline NPCPassRecord& operator=(const NPCPassRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCPassRecord& default_instance();

  void Swap(NPCPassRecord* other);

  // implements Message ----------------------------------------------

  NPCPassRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCPassRecord& from);
  void MergeFrom(const NPCPassRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cnt = 2;
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 2;
  inline ::google::protobuf::uint32 cnt() const;
  inline void set_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPass.NPCPassRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cnt();
  inline void clear_has_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cnt_;
  friend void  protobuf_AddDesc_ProtoPass_2eproto();
  friend void protobuf_AssignDesc_ProtoPass_2eproto();
  friend void protobuf_ShutdownFile_ProtoPass_2eproto();

  void InitAsDefaultInstance();
  static NPCPassRecord* default_instance_;
};
// -------------------------------------------------------------------

class EnterFightReq : public ::google::protobuf::Message {
 public:
  EnterFightReq();
  virtual ~EnterFightReq();

  EnterFightReq(const EnterFightReq& from);

  inline EnterFightReq& operator=(const EnterFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterFightReq& default_instance();

  void Swap(EnterFightReq* other);

  // implements Message ----------------------------------------------

  EnterFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterFightReq& from);
  void MergeFrom(const EnterFightReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 hero_ids = 2;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // optional int32 diff = 3;
  inline bool has_diff() const;
  inline void clear_diff();
  static const int kDiffFieldNumber = 3;
  inline ::google::protobuf::int32 diff() const;
  inline void set_diff(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoPass.EnterFightReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_diff();
  inline void clear_has_diff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 diff_;
  friend void  protobuf_AddDesc_ProtoPass_2eproto();
  friend void protobuf_AssignDesc_ProtoPass_2eproto();
  friend void protobuf_ShutdownFile_ProtoPass_2eproto();

  void InitAsDefaultInstance();
  static EnterFightReq* default_instance_;
};
// ===================================================================


// ===================================================================

// NPCPassRecord

// required uint32 id = 1;
inline bool NPCPassRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCPassRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCPassRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCPassRecord::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NPCPassRecord::id() const {
  // @@protoc_insertion_point(field_get:ProtoPass.NPCPassRecord.id)
  return id_;
}
inline void NPCPassRecord::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoPass.NPCPassRecord.id)
}

// required uint32 cnt = 2;
inline bool NPCPassRecord::has_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NPCPassRecord::set_has_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NPCPassRecord::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NPCPassRecord::clear_cnt() {
  cnt_ = 0u;
  clear_has_cnt();
}
inline ::google::protobuf::uint32 NPCPassRecord::cnt() const {
  // @@protoc_insertion_point(field_get:ProtoPass.NPCPassRecord.cnt)
  return cnt_;
}
inline void NPCPassRecord::set_cnt(::google::protobuf::uint32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoPass.NPCPassRecord.cnt)
}

// -------------------------------------------------------------------

// EnterFightReq

// required uint32 id = 1;
inline bool EnterFightReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterFightReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterFightReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterFightReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 EnterFightReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoPass.EnterFightReq.id)
  return id_;
}
inline void EnterFightReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoPass.EnterFightReq.id)
}

// repeated uint32 hero_ids = 2;
inline int EnterFightReq::hero_ids_size() const {
  return hero_ids_.size();
}
inline void EnterFightReq::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 EnterFightReq::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:ProtoPass.EnterFightReq.hero_ids)
  return hero_ids_.Get(index);
}
inline void EnterFightReq::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoPass.EnterFightReq.hero_ids)
}
inline void EnterFightReq::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoPass.EnterFightReq.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnterFightReq::hero_ids() const {
  // @@protoc_insertion_point(field_list:ProtoPass.EnterFightReq.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnterFightReq::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:ProtoPass.EnterFightReq.hero_ids)
  return &hero_ids_;
}

// optional int32 diff = 3;
inline bool EnterFightReq::has_diff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterFightReq::set_has_diff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterFightReq::clear_has_diff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterFightReq::clear_diff() {
  diff_ = 0;
  clear_has_diff();
}
inline ::google::protobuf::int32 EnterFightReq::diff() const {
  // @@protoc_insertion_point(field_get:ProtoPass.EnterFightReq.diff)
  return diff_;
}
inline void EnterFightReq::set_diff(::google::protobuf::int32 value) {
  set_has_diff();
  diff_ = value;
  // @@protoc_insertion_point(field_set:ProtoPass.EnterFightReq.diff)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoPass

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoPass_2eproto__INCLUDED
