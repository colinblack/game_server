// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoHero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoHero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoHero {

namespace {

const ::google::protobuf::Descriptor* HeroBaseInfoCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroBaseInfoCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipmentWrapCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipmentWrapCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroSoldiersCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroSoldiersCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockHeroPushReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockHeroPushReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecruitHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecruitHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecruitHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecruitHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FireHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FireHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FireHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FireHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DressEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DressEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DressEquipResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DressEquipResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnDressEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnDressEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnDressEquipResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnDressEquipResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneKeyDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneKeyDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneKeyDressResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneKeyDressResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwitchDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwitchDressResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchDressResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseRecruitPropReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseRecruitPropReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseRecruitPropResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseRecruitPropResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncSoldiersReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncSoldiersReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncSoldiersResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncSoldiersResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenSmeltWindowReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenSmeltWindowReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenSmeltWindowResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenSmeltWindowResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSmeltReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSmeltReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSmeltResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSmeltResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSmeltPropReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSmeltPropReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSmeltPropResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSmeltPropResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHeroexpPropsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHeroexpPropsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHeroexpPropsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHeroexpPropsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeSuitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeSuitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeSuitResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeSuitResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenParadeWindowReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenParadeWindowReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenParadeWindowResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenParadeWindowResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ParadeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParadeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ParadeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParadeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadCompoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadCompoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadCompoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadCompoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnLoadCompoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnLoadCompoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnLoadCompoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnLoadCompoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* StrengthenCompoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StrengthenCompoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StrengthenCompoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StrengthenCompoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneKeyStrengthenCompoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneKeyStrengthenCompoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneKeyStrengthenCompoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneKeyStrengthenCompoResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoHero_2eproto() {
  protobuf_AddDesc_ProtoHero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoHero.proto");
  GOOGLE_CHECK(file != NULL);
  HeroBaseInfoCPP_descriptor_ = file->message_type(0);
  static const int HeroBaseInfoCPP_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, attacknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, ovonum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, killnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, defend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, rule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, courage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, power_),
  };
  HeroBaseInfoCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroBaseInfoCPP_descriptor_,
      HeroBaseInfoCPP::default_instance_,
      HeroBaseInfoCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBaseInfoCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroBaseInfoCPP));
  EquipmentWrapCPP_descriptor_ = file->message_type(1);
  static const int EquipmentWrapCPP_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentWrapCPP, equips_),
  };
  EquipmentWrapCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipmentWrapCPP_descriptor_,
      EquipmentWrapCPP::default_instance_,
      EquipmentWrapCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentWrapCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentWrapCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipmentWrapCPP));
  HeroSoldiersCPP_descriptor_ = file->message_type(2);
  static const int HeroSoldiersCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSoldiersCPP, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSoldiersCPP, soldiers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSoldiersCPP, max_),
  };
  HeroSoldiersCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroSoldiersCPP_descriptor_,
      HeroSoldiersCPP::default_instance_,
      HeroSoldiersCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSoldiersCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroSoldiersCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroSoldiersCPP));
  UnlockHeroPushReq_descriptor_ = file->message_type(3);
  static const int UnlockHeroPushReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockHeroPushReq, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockHeroPushReq, soidiers_),
  };
  UnlockHeroPushReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockHeroPushReq_descriptor_,
      UnlockHeroPushReq::default_instance_,
      UnlockHeroPushReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockHeroPushReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockHeroPushReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockHeroPushReq));
  RecruitHeroReq_descriptor_ = file->message_type(4);
  static const int RecruitHeroReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroReq, heroid_),
  };
  RecruitHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecruitHeroReq_descriptor_,
      RecruitHeroReq::default_instance_,
      RecruitHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecruitHeroReq));
  RecruitHeroResp_descriptor_ = file->message_type(5);
  static const int RecruitHeroResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroResp, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroResp, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroResp, soidiers_),
  };
  RecruitHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecruitHeroResp_descriptor_,
      RecruitHeroResp::default_instance_,
      RecruitHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecruitHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecruitHeroResp));
  FireHeroReq_descriptor_ = file->message_type(6);
  static const int FireHeroReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroReq, heroid_),
  };
  FireHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FireHeroReq_descriptor_,
      FireHeroReq::default_instance_,
      FireHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FireHeroReq));
  FireHeroResp_descriptor_ = file->message_type(7);
  static const int FireHeroResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroResp, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroResp, equipwrap_),
  };
  FireHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FireHeroResp_descriptor_,
      FireHeroResp::default_instance_,
      FireHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FireHeroResp));
  DressEquipReq_descriptor_ = file->message_type(8);
  static const int DressEquipReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipReq, equd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipReq, oldequd_),
  };
  DressEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DressEquipReq_descriptor_,
      DressEquipReq::default_instance_,
      DressEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DressEquipReq));
  DressEquipResp_descriptor_ = file->message_type(9);
  static const int DressEquipResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipResp, equipwrap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipResp, hero_),
  };
  DressEquipResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DressEquipResp_descriptor_,
      DressEquipResp::default_instance_,
      DressEquipResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DressEquipResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DressEquipResp));
  UnDressEquipReq_descriptor_ = file->message_type(10);
  static const int UnDressEquipReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipReq, equd_),
  };
  UnDressEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnDressEquipReq_descriptor_,
      UnDressEquipReq::default_instance_,
      UnDressEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnDressEquipReq));
  UnDressEquipResp_descriptor_ = file->message_type(11);
  static const int UnDressEquipResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipResp, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipResp, hero_),
  };
  UnDressEquipResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnDressEquipResp_descriptor_,
      UnDressEquipResp::default_instance_,
      UnDressEquipResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDressEquipResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnDressEquipResp));
  OneKeyDressReq_descriptor_ = file->message_type(12);
  static const int OneKeyDressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressReq, heroid_),
  };
  OneKeyDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneKeyDressReq_descriptor_,
      OneKeyDressReq::default_instance_,
      OneKeyDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneKeyDressReq));
  OneKeyDressResp_descriptor_ = file->message_type(13);
  static const int OneKeyDressResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressResp, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressResp, equipwrap_),
  };
  OneKeyDressResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneKeyDressResp_descriptor_,
      OneKeyDressResp::default_instance_,
      OneKeyDressResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyDressResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneKeyDressResp));
  SwitchDressReq_descriptor_ = file->message_type(14);
  static const int SwitchDressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressReq, heroids_),
  };
  SwitchDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwitchDressReq_descriptor_,
      SwitchDressReq::default_instance_,
      SwitchDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwitchDressReq));
  SwitchDressResp_descriptor_ = file->message_type(15);
  static const int SwitchDressResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressResp, heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressResp, equipwrap_),
  };
  SwitchDressResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwitchDressResp_descriptor_,
      SwitchDressResp::default_instance_,
      SwitchDressResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchDressResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwitchDressResp));
  UseRecruitPropReq_descriptor_ = file->message_type(16);
  static const int UseRecruitPropReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropReq, hero_id_),
  };
  UseRecruitPropReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseRecruitPropReq_descriptor_,
      UseRecruitPropReq::default_instance_,
      UseRecruitPropReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseRecruitPropReq));
  UseRecruitPropResp_descriptor_ = file->message_type(17);
  static const int UseRecruitPropResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, cash_),
  };
  UseRecruitPropResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseRecruitPropResp_descriptor_,
      UseRecruitPropResp::default_instance_,
      UseRecruitPropResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseRecruitPropResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseRecruitPropResp));
  SyncSoldiersReq_descriptor_ = file->message_type(18);
  static const int SyncSoldiersReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersReq, hero_ids_),
  };
  SyncSoldiersReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncSoldiersReq_descriptor_,
      SyncSoldiersReq::default_instance_,
      SyncSoldiersReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncSoldiersReq));
  SyncSoldiersResp_descriptor_ = file->message_type(19);
  static const int SyncSoldiersResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersResp, heros_),
  };
  SyncSoldiersResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncSoldiersResp_descriptor_,
      SyncSoldiersResp::default_instance_,
      SyncSoldiersResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncSoldiersResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncSoldiersResp));
  OpenSmeltWindowReq_descriptor_ = file->message_type(20);
  static const int OpenSmeltWindowReq_offsets_[1] = {
  };
  OpenSmeltWindowReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenSmeltWindowReq_descriptor_,
      OpenSmeltWindowReq::default_instance_,
      OpenSmeltWindowReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSmeltWindowReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSmeltWindowReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenSmeltWindowReq));
  OpenSmeltWindowResp_descriptor_ = file->message_type(21);
  static const int OpenSmeltWindowResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSmeltWindowResp, freetimes_),
  };
  OpenSmeltWindowResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenSmeltWindowResp_descriptor_,
      OpenSmeltWindowResp::default_instance_,
      OpenSmeltWindowResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSmeltWindowResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenSmeltWindowResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenSmeltWindowResp));
  EquipSmeltReq_descriptor_ = file->message_type(22);
  static const int EquipSmeltReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltReq, equd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltReq, type_),
  };
  EquipSmeltReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSmeltReq_descriptor_,
      EquipSmeltReq::default_instance_,
      EquipSmeltReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSmeltReq));
  EquipSmeltResp_descriptor_ = file->message_type(23);
  static const int EquipSmeltResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, arefresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, cash_),
  };
  EquipSmeltResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSmeltResp_descriptor_,
      EquipSmeltResp::default_instance_,
      EquipSmeltResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSmeltResp));
  EquipSmeltPropReq_descriptor_ = file->message_type(24);
  static const int EquipSmeltPropReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropReq, prop_ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropReq, equip_ud_),
  };
  EquipSmeltPropReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSmeltPropReq_descriptor_,
      EquipSmeltPropReq::default_instance_,
      EquipSmeltPropReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSmeltPropReq));
  EquipSmeltPropResp_descriptor_ = file->message_type(25);
  static const int EquipSmeltPropResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, prop_ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, prop_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, hero_),
  };
  EquipSmeltPropResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSmeltPropResp_descriptor_,
      EquipSmeltPropResp::default_instance_,
      EquipSmeltPropResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSmeltPropResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSmeltPropResp));
  UseHeroexpPropsReq_descriptor_ = file->message_type(26);
  static const int UseHeroexpPropsReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, equd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, eqid_),
  };
  UseHeroexpPropsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseHeroexpPropsReq_descriptor_,
      UseHeroexpPropsReq::default_instance_,
      UseHeroexpPropsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseHeroexpPropsReq));
  UseHeroexpPropsResp_descriptor_ = file->message_type(27);
  static const int UseHeroexpPropsResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsResp, equd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsResp, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsResp, hero_),
  };
  UseHeroexpPropsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseHeroexpPropsResp_descriptor_,
      UseHeroexpPropsResp::default_instance_,
      UseHeroexpPropsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroexpPropsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseHeroexpPropsResp));
  ComposeSuitReq_descriptor_ = file->message_type(28);
  static const int ComposeSuitReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitReq, equd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitReq, materialud_),
  };
  ComposeSuitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeSuitReq_descriptor_,
      ComposeSuitReq::default_instance_,
      ComposeSuitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeSuitReq));
  ComposeSuitResp_descriptor_ = file->message_type(29);
  static const int ComposeSuitResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitResp, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitResp, hero_),
  };
  ComposeSuitResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeSuitResp_descriptor_,
      ComposeSuitResp::default_instance_,
      ComposeSuitResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeSuitResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeSuitResp));
  OpenParadeWindowReq_descriptor_ = file->message_type(30);
  static const int OpenParadeWindowReq_offsets_[1] = {
  };
  OpenParadeWindowReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenParadeWindowReq_descriptor_,
      OpenParadeWindowReq::default_instance_,
      OpenParadeWindowReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenParadeWindowReq));
  OpenParadeWindowResp_descriptor_ = file->message_type(31);
  static const int OpenParadeWindowResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowResp, banquet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowResp, silk_),
  };
  OpenParadeWindowResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpenParadeWindowResp_descriptor_,
      OpenParadeWindowResp::default_instance_,
      OpenParadeWindowResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenParadeWindowResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpenParadeWindowResp));
  ParadeReq_descriptor_ = file->message_type(32);
  static const int ParadeReq_offsets_[1] = {
  };
  ParadeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParadeReq_descriptor_,
      ParadeReq::default_instance_,
      ParadeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParadeReq));
  ParadeResp_descriptor_ = file->message_type(33);
  static const int ParadeResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeResp, banquet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeResp, silk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeResp, id_),
  };
  ParadeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParadeResp_descriptor_,
      ParadeResp::default_instance_,
      ParadeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParadeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParadeResp));
  LoadCompoReq_descriptor_ = file->message_type(34);
  static const int LoadCompoReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, compud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, oldcompud_),
  };
  LoadCompoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoadCompoReq_descriptor_,
      LoadCompoReq::default_instance_,
      LoadCompoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoadCompoReq));
  LoadCompoResp_descriptor_ = file->message_type(35);
  static const int LoadCompoResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoResp, compoall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoResp, hero_),
  };
  LoadCompoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoadCompoResp_descriptor_,
      LoadCompoResp::default_instance_,
      LoadCompoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadCompoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoadCompoResp));
  UnLoadCompoReq_descriptor_ = file->message_type(36);
  static const int UnLoadCompoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoReq, compud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoReq, heroid_),
  };
  UnLoadCompoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnLoadCompoReq_descriptor_,
      UnLoadCompoReq::default_instance_,
      UnLoadCompoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnLoadCompoReq));
  UnLoadCompoResp_descriptor_ = file->message_type(37);
  static const int UnLoadCompoResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoResp, compo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoResp, hero_),
  };
  UnLoadCompoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnLoadCompoResp_descriptor_,
      UnLoadCompoResp::default_instance_,
      UnLoadCompoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnLoadCompoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnLoadCompoResp));
  StrengthenCompoReq_descriptor_ = file->message_type(38);
  static const int StrengthenCompoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoReq, compud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoReq, othcompud_),
  };
  StrengthenCompoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StrengthenCompoReq_descriptor_,
      StrengthenCompoReq::default_instance_,
      StrengthenCompoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StrengthenCompoReq));
  StrengthenCompoResp_descriptor_ = file->message_type(39);
  static const int StrengthenCompoResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, compo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, delcompos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, wood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, hero_),
  };
  StrengthenCompoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StrengthenCompoResp_descriptor_,
      StrengthenCompoResp::default_instance_,
      StrengthenCompoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrengthenCompoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StrengthenCompoResp));
  OneKeyStrengthenCompoReq_descriptor_ = file->message_type(40);
  static const int OneKeyStrengthenCompoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoReq, compud_),
  };
  OneKeyStrengthenCompoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneKeyStrengthenCompoReq_descriptor_,
      OneKeyStrengthenCompoReq::default_instance_,
      OneKeyStrengthenCompoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneKeyStrengthenCompoReq));
  OneKeyStrengthenCompoResp_descriptor_ = file->message_type(41);
  static const int OneKeyStrengthenCompoResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, compo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, delcompos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, wood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, hero_),
  };
  OneKeyStrengthenCompoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneKeyStrengthenCompoResp_descriptor_,
      OneKeyStrengthenCompoResp::default_instance_,
      OneKeyStrengthenCompoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneKeyStrengthenCompoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneKeyStrengthenCompoResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoHero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroBaseInfoCPP_descriptor_, &HeroBaseInfoCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipmentWrapCPP_descriptor_, &EquipmentWrapCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroSoldiersCPP_descriptor_, &HeroSoldiersCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockHeroPushReq_descriptor_, &UnlockHeroPushReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecruitHeroReq_descriptor_, &RecruitHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecruitHeroResp_descriptor_, &RecruitHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FireHeroReq_descriptor_, &FireHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FireHeroResp_descriptor_, &FireHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DressEquipReq_descriptor_, &DressEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DressEquipResp_descriptor_, &DressEquipResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnDressEquipReq_descriptor_, &UnDressEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnDressEquipResp_descriptor_, &UnDressEquipResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneKeyDressReq_descriptor_, &OneKeyDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneKeyDressResp_descriptor_, &OneKeyDressResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwitchDressReq_descriptor_, &SwitchDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwitchDressResp_descriptor_, &SwitchDressResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseRecruitPropReq_descriptor_, &UseRecruitPropReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseRecruitPropResp_descriptor_, &UseRecruitPropResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncSoldiersReq_descriptor_, &SyncSoldiersReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncSoldiersResp_descriptor_, &SyncSoldiersResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenSmeltWindowReq_descriptor_, &OpenSmeltWindowReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenSmeltWindowResp_descriptor_, &OpenSmeltWindowResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSmeltReq_descriptor_, &EquipSmeltReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSmeltResp_descriptor_, &EquipSmeltResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSmeltPropReq_descriptor_, &EquipSmeltPropReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSmeltPropResp_descriptor_, &EquipSmeltPropResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseHeroexpPropsReq_descriptor_, &UseHeroexpPropsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseHeroexpPropsResp_descriptor_, &UseHeroexpPropsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeSuitReq_descriptor_, &ComposeSuitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeSuitResp_descriptor_, &ComposeSuitResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenParadeWindowReq_descriptor_, &OpenParadeWindowReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpenParadeWindowResp_descriptor_, &OpenParadeWindowResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParadeReq_descriptor_, &ParadeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParadeResp_descriptor_, &ParadeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoadCompoReq_descriptor_, &LoadCompoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoadCompoResp_descriptor_, &LoadCompoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnLoadCompoReq_descriptor_, &UnLoadCompoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnLoadCompoResp_descriptor_, &UnLoadCompoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StrengthenCompoReq_descriptor_, &StrengthenCompoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StrengthenCompoResp_descriptor_, &StrengthenCompoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneKeyStrengthenCompoReq_descriptor_, &OneKeyStrengthenCompoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneKeyStrengthenCompoResp_descriptor_, &OneKeyStrengthenCompoResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoHero_2eproto() {
  delete HeroBaseInfoCPP::default_instance_;
  delete HeroBaseInfoCPP_reflection_;
  delete EquipmentWrapCPP::default_instance_;
  delete EquipmentWrapCPP_reflection_;
  delete HeroSoldiersCPP::default_instance_;
  delete HeroSoldiersCPP_reflection_;
  delete UnlockHeroPushReq::default_instance_;
  delete UnlockHeroPushReq_reflection_;
  delete RecruitHeroReq::default_instance_;
  delete RecruitHeroReq_reflection_;
  delete RecruitHeroResp::default_instance_;
  delete RecruitHeroResp_reflection_;
  delete FireHeroReq::default_instance_;
  delete FireHeroReq_reflection_;
  delete FireHeroResp::default_instance_;
  delete FireHeroResp_reflection_;
  delete DressEquipReq::default_instance_;
  delete DressEquipReq_reflection_;
  delete DressEquipResp::default_instance_;
  delete DressEquipResp_reflection_;
  delete UnDressEquipReq::default_instance_;
  delete UnDressEquipReq_reflection_;
  delete UnDressEquipResp::default_instance_;
  delete UnDressEquipResp_reflection_;
  delete OneKeyDressReq::default_instance_;
  delete OneKeyDressReq_reflection_;
  delete OneKeyDressResp::default_instance_;
  delete OneKeyDressResp_reflection_;
  delete SwitchDressReq::default_instance_;
  delete SwitchDressReq_reflection_;
  delete SwitchDressResp::default_instance_;
  delete SwitchDressResp_reflection_;
  delete UseRecruitPropReq::default_instance_;
  delete UseRecruitPropReq_reflection_;
  delete UseRecruitPropResp::default_instance_;
  delete UseRecruitPropResp_reflection_;
  delete SyncSoldiersReq::default_instance_;
  delete SyncSoldiersReq_reflection_;
  delete SyncSoldiersResp::default_instance_;
  delete SyncSoldiersResp_reflection_;
  delete OpenSmeltWindowReq::default_instance_;
  delete OpenSmeltWindowReq_reflection_;
  delete OpenSmeltWindowResp::default_instance_;
  delete OpenSmeltWindowResp_reflection_;
  delete EquipSmeltReq::default_instance_;
  delete EquipSmeltReq_reflection_;
  delete EquipSmeltResp::default_instance_;
  delete EquipSmeltResp_reflection_;
  delete EquipSmeltPropReq::default_instance_;
  delete EquipSmeltPropReq_reflection_;
  delete EquipSmeltPropResp::default_instance_;
  delete EquipSmeltPropResp_reflection_;
  delete UseHeroexpPropsReq::default_instance_;
  delete UseHeroexpPropsReq_reflection_;
  delete UseHeroexpPropsResp::default_instance_;
  delete UseHeroexpPropsResp_reflection_;
  delete ComposeSuitReq::default_instance_;
  delete ComposeSuitReq_reflection_;
  delete ComposeSuitResp::default_instance_;
  delete ComposeSuitResp_reflection_;
  delete OpenParadeWindowReq::default_instance_;
  delete OpenParadeWindowReq_reflection_;
  delete OpenParadeWindowResp::default_instance_;
  delete OpenParadeWindowResp_reflection_;
  delete ParadeReq::default_instance_;
  delete ParadeReq_reflection_;
  delete ParadeResp::default_instance_;
  delete ParadeResp_reflection_;
  delete LoadCompoReq::default_instance_;
  delete LoadCompoReq_reflection_;
  delete LoadCompoResp::default_instance_;
  delete LoadCompoResp_reflection_;
  delete UnLoadCompoReq::default_instance_;
  delete UnLoadCompoReq_reflection_;
  delete UnLoadCompoResp::default_instance_;
  delete UnLoadCompoResp_reflection_;
  delete StrengthenCompoReq::default_instance_;
  delete StrengthenCompoReq_reflection_;
  delete StrengthenCompoResp::default_instance_;
  delete StrengthenCompoResp_reflection_;
  delete OneKeyStrengthenCompoReq::default_instance_;
  delete OneKeyStrengthenCompoReq_reflection_;
  delete OneKeyStrengthenCompoResp::default_instance_;
  delete OneKeyStrengthenCompoResp_reflection_;
}

void protobuf_AddDesc_ProtoHero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::ProtoComponent::protobuf_AddDesc_ProtoComponent_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ProtoHero.proto\022\tProtoHero\032\020DataCommon"
    ".proto\032\024ProtoComponent.proto\"\333\001\n\017HeroBas"
    "eInfoCPP\022\016\n\006heroid\030\001 \002(\r\022\016\n\006status\030\002 \002(\r"
    "\022\r\n\005level\030\003 \002(\r\022\013\n\003exp\030\004 \002(\004\022\021\n\tattacknu"
    "m\030\005 \002(\r\022\016\n\006ovonum\030\006 \002(\r\022\017\n\007killnum\030\007 \002(\r"
    "\022\n\n\002hp\030\010 \002(\r\022\016\n\006attack\030\t \002(\r\022\016\n\006defend\030\n"
    " \002(\r\022\014\n\004rule\030\013 \002(\r\022\017\n\007courage\030\014 \002(\r\022\r\n\005p"
    "ower\030\r \001(\r\"<\n\020EquipmentWrapCPP\022(\n\006equips"
    "\030\001 \003(\0132\030.DataCommon.EquipmentCPP\"@\n\017Hero"
    "SoldiersCPP\022\016\n\006heroid\030\001 \002(\r\022\020\n\010soldiers\030"
    "\002 \002(\r\022\013\n\003max\030\003 \002(\r\"k\n\021UnlockHeroPushReq\022"
    "(\n\004hero\030\001 \002(\0132\032.ProtoHero.HeroBaseInfoCP"
    "P\022,\n\010soidiers\030\002 \002(\0132\032.ProtoHero.HeroSold"
    "iersCPP\" \n\016RecruitHeroReq\022\016\n\006heroid\030\001 \002("
    "\r\"w\n\017RecruitHeroResp\022\014\n\004coin\030\001 \002(\r\022(\n\004he"
    "ro\030\002 \002(\0132\032.ProtoHero.HeroBaseInfoCPP\022,\n\010"
    "soidiers\030\003 \002(\0132\032.ProtoHero.HeroSoldiersC"
    "PP\"\035\n\013FireHeroReq\022\016\n\006heroid\030\001 \002(\r\"h\n\014Fir"
    "eHeroResp\022(\n\004hero\030\001 \002(\0132\032.ProtoHero.Hero"
    "BaseInfoCPP\022.\n\tequipwrap\030\002 \002(\0132\033.ProtoHe"
    "ro.EquipmentWrapCPP\">\n\rDressEquipReq\022\016\n\006"
    "heroid\030\001 \002(\r\022\014\n\004equd\030\002 \002(\r\022\017\n\007oldequd\030\003 "
    "\002(\r\"j\n\016DressEquipResp\022.\n\tequipwrap\030\001 \002(\013"
    "2\033.ProtoHero.EquipmentWrapCPP\022(\n\004hero\030\002 "
    "\002(\0132\032.ProtoHero.HeroBaseInfoCPP\"/\n\017UnDre"
    "ssEquipReq\022\016\n\006heroid\030\001 \002(\r\022\014\n\004equd\030\002 \002(\r"
    "\"e\n\020UnDressEquipResp\022\'\n\005equip\030\001 \002(\0132\030.Da"
    "taCommon.EquipmentCPP\022(\n\004hero\030\002 \002(\0132\032.Pr"
    "otoHero.HeroBaseInfoCPP\" \n\016OneKeyDressRe"
    "q\022\016\n\006heroid\030\001 \002(\r\"k\n\017OneKeyDressResp\022(\n\004"
    "hero\030\001 \002(\0132\032.ProtoHero.HeroBaseInfoCPP\022."
    "\n\tequipwrap\030\002 \002(\0132\033.ProtoHero.EquipmentW"
    "rapCPP\"!\n\016SwitchDressReq\022\017\n\007heroids\030\001 \003("
    "\r\"m\n\017SwitchDressResp\022*\n\006heroes\030\001 \003(\0132\032.P"
    "rotoHero.HeroBaseInfoCPP\022.\n\tequipwrap\030\002 "
    "\002(\0132\033.ProtoHero.EquipmentWrapCPP\"$\n\021UseR"
    "ecruitPropReq\022\017\n\007hero_id\030\001 \002(\r\"i\n\022UseRec"
    "ruitPropResp\022\r\n\005order\030\001 \002(\r\022(\n\004hero\030\002 \002("
    "\0132\032.ProtoHero.HeroSoldiersCPP\022\014\n\004food\030\003 "
    "\002(\r\022\014\n\004cash\030\004 \002(\r\"#\n\017SyncSoldiersReq\022\020\n\010"
    "hero_ids\030\001 \003(\r\"=\n\020SyncSoldiersResp\022)\n\005he"
    "ros\030\001 \003(\0132\032.ProtoHero.HeroSoldiersCPP\"\024\n"
    "\022OpenSmeltWindowReq\"(\n\023OpenSmeltWindowRe"
    "sp\022\021\n\tfreetimes\030\001 \002(\r\"+\n\rEquipSmeltReq\022\014"
    "\n\004equd\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\"\224\001\n\016EquipSmel"
    "tResp\022\'\n\005equip\030\001 \002(\0132\030.DataCommon.Equipm"
    "entCPP\022(\n\004hero\030\002 \002(\0132\032.ProtoHero.HeroBas"
    "eInfoCPP\022\017\n\007refresh\030\003 \002(\r\022\020\n\010arefresh\030\004 "
    "\002(\r\022\014\n\004cash\030\005 \002(\r\"6\n\021EquipSmeltPropReq\022\017"
    "\n\007prop_ud\030\001 \002(\r\022\020\n\010equip_ud\030\002 \002(\r\"\212\001\n\022Eq"
    "uipSmeltPropResp\022\017\n\007prop_ud\030\001 \002(\r\022\020\n\010pro"
    "p_cnt\030\002 \002(\r\022\'\n\005equip\030\003 \002(\0132\030.DataCommon."
    "EquipmentCPP\022(\n\004hero\030\004 \001(\0132\032.ProtoHero.H"
    "eroBaseInfoCPP\"O\n\022UseHeroexpPropsReq\022\014\n\004"
    "equd\030\001 \002(\r\022\016\n\006heroid\030\002 \002(\r\022\r\n\005count\030\003 \002("
    "\r\022\014\n\004eqid\030\004 \002(\r\"\\\n\023UseHeroexpPropsResp\022\014"
    "\n\004equd\030\001 \002(\r\022\r\n\005count\030\002 \002(\r\022(\n\004hero\030\003 \002("
    "\0132\032.ProtoHero.HeroBaseInfoCPP\"2\n\016Compose"
    "SuitReq\022\014\n\004equd\030\001 \002(\r\022\022\n\nmaterialud\030\002 \003("
    "\r\"h\n\017ComposeSuitResp\022+\n\006equips\030\001 \002(\0132\033.D"
    "ataCommon.EquipmentAllCPP\022(\n\004hero\030\002 \001(\0132"
    "\032.ProtoHero.HeroBaseInfoCPP\"\025\n\023OpenParad"
    "eWindowReq\"5\n\024OpenParadeWindowResp\022\017\n\007ba"
    "nquet\030\001 \002(\r\022\014\n\004silk\030\002 \002(\r\"\013\n\tParadeReq\"7"
    "\n\nParadeResp\022\017\n\007banquet\030\001 \002(\r\022\014\n\004silk\030\002 "
    "\002(\r\022\n\n\002id\030\003 \003(\r\"N\n\014LoadCompoReq\022\016\n\006heroi"
    "d\030\001 \002(\r\022\016\n\006compud\030\002 \002(\r\022\013\n\003pos\030\003 \002(\r\022\021\n\t"
    "oldcompud\030\004 \001(\r\"l\n\rLoadCompoResp\0221\n\010comp"
    "oall\030\001 \002(\0132\037.ProtoComponent.ComponentAll"
    "CPP\022(\n\004hero\030\002 \002(\0132\032.ProtoHero.HeroBaseIn"
    "foCPP\"0\n\016UnLoadCompoReq\022\016\n\006compud\030\001 \002(\r\022"
    "\016\n\006heroid\030\002 \002(\r\"h\n\017UnLoadCompoResp\022+\n\005co"
    "mpo\030\001 \002(\0132\034.ProtoComponent.ComponentCPP\022"
    "(\n\004hero\030\002 \002(\0132\032.ProtoHero.HeroBaseInfoCP"
    "P\"7\n\022StrengthenCompoReq\022\016\n\006compud\030\001 \002(\r\022"
    "\021\n\tothcompud\030\002 \003(\r\"\315\001\n\023StrengthenCompoRe"
    "sp\022+\n\005compo\030\001 \002(\0132\034.ProtoComponent.Compo"
    "nentCPP\022\021\n\tdelcompos\030\002 \003(\r\022%\n\004coin\030\003 \002(\013"
    "2\027.DataCommon.CostItemCPP\022%\n\004wood\030\004 \002(\0132"
    "\027.DataCommon.CostItemCPP\022(\n\004hero\030\005 \001(\0132\032"
    ".ProtoHero.HeroBaseInfoCPP\"*\n\030OneKeyStre"
    "ngthenCompoReq\022\016\n\006compud\030\001 \002(\r\"\323\001\n\031OneKe"
    "yStrengthenCompoResp\022+\n\005compo\030\001 \002(\0132\034.Pr"
    "otoComponent.ComponentCPP\022\021\n\tdelcompos\030\002"
    " \003(\r\022%\n\004coin\030\003 \002(\0132\027.DataCommon.CostItem"
    "CPP\022%\n\004wood\030\004 \002(\0132\027.DataCommon.CostItemC"
    "PP\022(\n\004hero\030\005 \001(\0132\032.ProtoHero.HeroBaseInf"
    "oCPP", 3484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoHero.proto", &protobuf_RegisterTypes);
  HeroBaseInfoCPP::default_instance_ = new HeroBaseInfoCPP();
  EquipmentWrapCPP::default_instance_ = new EquipmentWrapCPP();
  HeroSoldiersCPP::default_instance_ = new HeroSoldiersCPP();
  UnlockHeroPushReq::default_instance_ = new UnlockHeroPushReq();
  RecruitHeroReq::default_instance_ = new RecruitHeroReq();
  RecruitHeroResp::default_instance_ = new RecruitHeroResp();
  FireHeroReq::default_instance_ = new FireHeroReq();
  FireHeroResp::default_instance_ = new FireHeroResp();
  DressEquipReq::default_instance_ = new DressEquipReq();
  DressEquipResp::default_instance_ = new DressEquipResp();
  UnDressEquipReq::default_instance_ = new UnDressEquipReq();
  UnDressEquipResp::default_instance_ = new UnDressEquipResp();
  OneKeyDressReq::default_instance_ = new OneKeyDressReq();
  OneKeyDressResp::default_instance_ = new OneKeyDressResp();
  SwitchDressReq::default_instance_ = new SwitchDressReq();
  SwitchDressResp::default_instance_ = new SwitchDressResp();
  UseRecruitPropReq::default_instance_ = new UseRecruitPropReq();
  UseRecruitPropResp::default_instance_ = new UseRecruitPropResp();
  SyncSoldiersReq::default_instance_ = new SyncSoldiersReq();
  SyncSoldiersResp::default_instance_ = new SyncSoldiersResp();
  OpenSmeltWindowReq::default_instance_ = new OpenSmeltWindowReq();
  OpenSmeltWindowResp::default_instance_ = new OpenSmeltWindowResp();
  EquipSmeltReq::default_instance_ = new EquipSmeltReq();
  EquipSmeltResp::default_instance_ = new EquipSmeltResp();
  EquipSmeltPropReq::default_instance_ = new EquipSmeltPropReq();
  EquipSmeltPropResp::default_instance_ = new EquipSmeltPropResp();
  UseHeroexpPropsReq::default_instance_ = new UseHeroexpPropsReq();
  UseHeroexpPropsResp::default_instance_ = new UseHeroexpPropsResp();
  ComposeSuitReq::default_instance_ = new ComposeSuitReq();
  ComposeSuitResp::default_instance_ = new ComposeSuitResp();
  OpenParadeWindowReq::default_instance_ = new OpenParadeWindowReq();
  OpenParadeWindowResp::default_instance_ = new OpenParadeWindowResp();
  ParadeReq::default_instance_ = new ParadeReq();
  ParadeResp::default_instance_ = new ParadeResp();
  LoadCompoReq::default_instance_ = new LoadCompoReq();
  LoadCompoResp::default_instance_ = new LoadCompoResp();
  UnLoadCompoReq::default_instance_ = new UnLoadCompoReq();
  UnLoadCompoResp::default_instance_ = new UnLoadCompoResp();
  StrengthenCompoReq::default_instance_ = new StrengthenCompoReq();
  StrengthenCompoResp::default_instance_ = new StrengthenCompoResp();
  OneKeyStrengthenCompoReq::default_instance_ = new OneKeyStrengthenCompoReq();
  OneKeyStrengthenCompoResp::default_instance_ = new OneKeyStrengthenCompoResp();
  HeroBaseInfoCPP::default_instance_->InitAsDefaultInstance();
  EquipmentWrapCPP::default_instance_->InitAsDefaultInstance();
  HeroSoldiersCPP::default_instance_->InitAsDefaultInstance();
  UnlockHeroPushReq::default_instance_->InitAsDefaultInstance();
  RecruitHeroReq::default_instance_->InitAsDefaultInstance();
  RecruitHeroResp::default_instance_->InitAsDefaultInstance();
  FireHeroReq::default_instance_->InitAsDefaultInstance();
  FireHeroResp::default_instance_->InitAsDefaultInstance();
  DressEquipReq::default_instance_->InitAsDefaultInstance();
  DressEquipResp::default_instance_->InitAsDefaultInstance();
  UnDressEquipReq::default_instance_->InitAsDefaultInstance();
  UnDressEquipResp::default_instance_->InitAsDefaultInstance();
  OneKeyDressReq::default_instance_->InitAsDefaultInstance();
  OneKeyDressResp::default_instance_->InitAsDefaultInstance();
  SwitchDressReq::default_instance_->InitAsDefaultInstance();
  SwitchDressResp::default_instance_->InitAsDefaultInstance();
  UseRecruitPropReq::default_instance_->InitAsDefaultInstance();
  UseRecruitPropResp::default_instance_->InitAsDefaultInstance();
  SyncSoldiersReq::default_instance_->InitAsDefaultInstance();
  SyncSoldiersResp::default_instance_->InitAsDefaultInstance();
  OpenSmeltWindowReq::default_instance_->InitAsDefaultInstance();
  OpenSmeltWindowResp::default_instance_->InitAsDefaultInstance();
  EquipSmeltReq::default_instance_->InitAsDefaultInstance();
  EquipSmeltResp::default_instance_->InitAsDefaultInstance();
  EquipSmeltPropReq::default_instance_->InitAsDefaultInstance();
  EquipSmeltPropResp::default_instance_->InitAsDefaultInstance();
  UseHeroexpPropsReq::default_instance_->InitAsDefaultInstance();
  UseHeroexpPropsResp::default_instance_->InitAsDefaultInstance();
  ComposeSuitReq::default_instance_->InitAsDefaultInstance();
  ComposeSuitResp::default_instance_->InitAsDefaultInstance();
  OpenParadeWindowReq::default_instance_->InitAsDefaultInstance();
  OpenParadeWindowResp::default_instance_->InitAsDefaultInstance();
  ParadeReq::default_instance_->InitAsDefaultInstance();
  ParadeResp::default_instance_->InitAsDefaultInstance();
  LoadCompoReq::default_instance_->InitAsDefaultInstance();
  LoadCompoResp::default_instance_->InitAsDefaultInstance();
  UnLoadCompoReq::default_instance_->InitAsDefaultInstance();
  UnLoadCompoResp::default_instance_->InitAsDefaultInstance();
  StrengthenCompoReq::default_instance_->InitAsDefaultInstance();
  StrengthenCompoResp::default_instance_->InitAsDefaultInstance();
  OneKeyStrengthenCompoReq::default_instance_->InitAsDefaultInstance();
  OneKeyStrengthenCompoResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoHero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoHero_2eproto {
  StaticDescriptorInitializer_ProtoHero_2eproto() {
    protobuf_AddDesc_ProtoHero_2eproto();
  }
} static_descriptor_initializer_ProtoHero_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HeroBaseInfoCPP::kHeroidFieldNumber;
const int HeroBaseInfoCPP::kStatusFieldNumber;
const int HeroBaseInfoCPP::kLevelFieldNumber;
const int HeroBaseInfoCPP::kExpFieldNumber;
const int HeroBaseInfoCPP::kAttacknumFieldNumber;
const int HeroBaseInfoCPP::kOvonumFieldNumber;
const int HeroBaseInfoCPP::kKillnumFieldNumber;
const int HeroBaseInfoCPP::kHpFieldNumber;
const int HeroBaseInfoCPP::kAttackFieldNumber;
const int HeroBaseInfoCPP::kDefendFieldNumber;
const int HeroBaseInfoCPP::kRuleFieldNumber;
const int HeroBaseInfoCPP::kCourageFieldNumber;
const int HeroBaseInfoCPP::kPowerFieldNumber;
#endif  // !_MSC_VER

HeroBaseInfoCPP::HeroBaseInfoCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.HeroBaseInfoCPP)
}

void HeroBaseInfoCPP::InitAsDefaultInstance() {
}

HeroBaseInfoCPP::HeroBaseInfoCPP(const HeroBaseInfoCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.HeroBaseInfoCPP)
}

void HeroBaseInfoCPP::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  status_ = 0u;
  level_ = 0u;
  exp_ = GOOGLE_ULONGLONG(0);
  attacknum_ = 0u;
  ovonum_ = 0u;
  killnum_ = 0u;
  hp_ = 0u;
  attack_ = 0u;
  defend_ = 0u;
  rule_ = 0u;
  courage_ = 0u;
  power_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroBaseInfoCPP::~HeroBaseInfoCPP() {
  // @@protoc_insertion_point(destructor:ProtoHero.HeroBaseInfoCPP)
  SharedDtor();
}

void HeroBaseInfoCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroBaseInfoCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroBaseInfoCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroBaseInfoCPP_descriptor_;
}

const HeroBaseInfoCPP& HeroBaseInfoCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

HeroBaseInfoCPP* HeroBaseInfoCPP::default_instance_ = NULL;

HeroBaseInfoCPP* HeroBaseInfoCPP::New() const {
  return new HeroBaseInfoCPP;
}

void HeroBaseInfoCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HeroBaseInfoCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(heroid_, hp_);
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(attack_, power_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroBaseInfoCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.HeroBaseInfoCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required uint32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // required uint64 exp = 4;
      case 4: {
        if (tag == 32) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_attacknum;
        break;
      }

      // required uint32 attacknum = 5;
      case 5: {
        if (tag == 40) {
         parse_attacknum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attacknum_)));
          set_has_attacknum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ovonum;
        break;
      }

      // required uint32 ovonum = 6;
      case 6: {
        if (tag == 48) {
         parse_ovonum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ovonum_)));
          set_has_ovonum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_killnum;
        break;
      }

      // required uint32 killnum = 7;
      case 7: {
        if (tag == 56) {
         parse_killnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killnum_)));
          set_has_killnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hp;
        break;
      }

      // required uint32 hp = 8;
      case 8: {
        if (tag == 64) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_attack;
        break;
      }

      // required uint32 attack = 9;
      case 9: {
        if (tag == 72) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_defend;
        break;
      }

      // required uint32 defend = 10;
      case 10: {
        if (tag == 80) {
         parse_defend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &defend_)));
          set_has_defend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_rule;
        break;
      }

      // required uint32 rule = 11;
      case 11: {
        if (tag == 88) {
         parse_rule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rule_)));
          set_has_rule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_courage;
        break;
      }

      // required uint32 courage = 12;
      case 12: {
        if (tag == 96) {
         parse_courage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &courage_)));
          set_has_courage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_power;
        break;
      }

      // optional uint32 power = 13;
      case 13: {
        if (tag == 104) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));
          set_has_power();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.HeroBaseInfoCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.HeroBaseInfoCPP)
  return false;
#undef DO_
}

void HeroBaseInfoCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.HeroBaseInfoCPP)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required uint64 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->exp(), output);
  }

  // required uint32 attacknum = 5;
  if (has_attacknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->attacknum(), output);
  }

  // required uint32 ovonum = 6;
  if (has_ovonum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ovonum(), output);
  }

  // required uint32 killnum = 7;
  if (has_killnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->killnum(), output);
  }

  // required uint32 hp = 8;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->hp(), output);
  }

  // required uint32 attack = 9;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->attack(), output);
  }

  // required uint32 defend = 10;
  if (has_defend()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->defend(), output);
  }

  // required uint32 rule = 11;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->rule(), output);
  }

  // required uint32 courage = 12;
  if (has_courage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->courage(), output);
  }

  // optional uint32 power = 13;
  if (has_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->power(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.HeroBaseInfoCPP)
}

::google::protobuf::uint8* HeroBaseInfoCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.HeroBaseInfoCPP)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required uint64 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->exp(), target);
  }

  // required uint32 attacknum = 5;
  if (has_attacknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->attacknum(), target);
  }

  // required uint32 ovonum = 6;
  if (has_ovonum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ovonum(), target);
  }

  // required uint32 killnum = 7;
  if (has_killnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->killnum(), target);
  }

  // required uint32 hp = 8;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->hp(), target);
  }

  // required uint32 attack = 9;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->attack(), target);
  }

  // required uint32 defend = 10;
  if (has_defend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->defend(), target);
  }

  // required uint32 rule = 11;
  if (has_rule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->rule(), target);
  }

  // required uint32 courage = 12;
  if (has_courage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->courage(), target);
  }

  // optional uint32 power = 13;
  if (has_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->power(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.HeroBaseInfoCPP)
  return target;
}

int HeroBaseInfoCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint64 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // required uint32 attacknum = 5;
    if (has_attacknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attacknum());
    }

    // required uint32 ovonum = 6;
    if (has_ovonum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ovonum());
    }

    // required uint32 killnum = 7;
    if (has_killnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killnum());
    }

    // required uint32 hp = 8;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 attack = 9;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attack());
    }

    // required uint32 defend = 10;
    if (has_defend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->defend());
    }

    // required uint32 rule = 11;
    if (has_rule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rule());
    }

    // required uint32 courage = 12;
    if (has_courage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->courage());
    }

    // optional uint32 power = 13;
    if (has_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->power());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroBaseInfoCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroBaseInfoCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroBaseInfoCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroBaseInfoCPP::MergeFrom(const HeroBaseInfoCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_attacknum()) {
      set_attacknum(from.attacknum());
    }
    if (from.has_ovonum()) {
      set_ovonum(from.ovonum());
    }
    if (from.has_killnum()) {
      set_killnum(from.killnum());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_defend()) {
      set_defend(from.defend());
    }
    if (from.has_rule()) {
      set_rule(from.rule());
    }
    if (from.has_courage()) {
      set_courage(from.courage());
    }
    if (from.has_power()) {
      set_power(from.power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroBaseInfoCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroBaseInfoCPP::CopyFrom(const HeroBaseInfoCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroBaseInfoCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;

  return true;
}

void HeroBaseInfoCPP::Swap(HeroBaseInfoCPP* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(status_, other->status_);
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(attacknum_, other->attacknum_);
    std::swap(ovonum_, other->ovonum_);
    std::swap(killnum_, other->killnum_);
    std::swap(hp_, other->hp_);
    std::swap(attack_, other->attack_);
    std::swap(defend_, other->defend_);
    std::swap(rule_, other->rule_);
    std::swap(courage_, other->courage_);
    std::swap(power_, other->power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroBaseInfoCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroBaseInfoCPP_descriptor_;
  metadata.reflection = HeroBaseInfoCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipmentWrapCPP::kEquipsFieldNumber;
#endif  // !_MSC_VER

EquipmentWrapCPP::EquipmentWrapCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.EquipmentWrapCPP)
}

void EquipmentWrapCPP::InitAsDefaultInstance() {
}

EquipmentWrapCPP::EquipmentWrapCPP(const EquipmentWrapCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.EquipmentWrapCPP)
}

void EquipmentWrapCPP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipmentWrapCPP::~EquipmentWrapCPP() {
  // @@protoc_insertion_point(destructor:ProtoHero.EquipmentWrapCPP)
  SharedDtor();
}

void EquipmentWrapCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipmentWrapCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipmentWrapCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipmentWrapCPP_descriptor_;
}

const EquipmentWrapCPP& EquipmentWrapCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

EquipmentWrapCPP* EquipmentWrapCPP::default_instance_ = NULL;

EquipmentWrapCPP* EquipmentWrapCPP::New() const {
  return new EquipmentWrapCPP;
}

void EquipmentWrapCPP::Clear() {
  equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipmentWrapCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.EquipmentWrapCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataCommon.EquipmentCPP equips = 1;
      case 1: {
        if (tag == 10) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_equips;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.EquipmentWrapCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.EquipmentWrapCPP)
  return false;
#undef DO_
}

void EquipmentWrapCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.EquipmentWrapCPP)
  // repeated .DataCommon.EquipmentCPP equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.EquipmentWrapCPP)
}

::google::protobuf::uint8* EquipmentWrapCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.EquipmentWrapCPP)
  // repeated .DataCommon.EquipmentCPP equips = 1;
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.EquipmentWrapCPP)
  return target;
}

int EquipmentWrapCPP::ByteSize() const {
  int total_size = 0;

  // repeated .DataCommon.EquipmentCPP equips = 1;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipmentWrapCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipmentWrapCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipmentWrapCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipmentWrapCPP::MergeFrom(const EquipmentWrapCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  equips_.MergeFrom(from.equips_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipmentWrapCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipmentWrapCPP::CopyFrom(const EquipmentWrapCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentWrapCPP::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->equips())) return false;
  return true;
}

void EquipmentWrapCPP::Swap(EquipmentWrapCPP* other) {
  if (other != this) {
    equips_.Swap(&other->equips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipmentWrapCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipmentWrapCPP_descriptor_;
  metadata.reflection = EquipmentWrapCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroSoldiersCPP::kHeroidFieldNumber;
const int HeroSoldiersCPP::kSoldiersFieldNumber;
const int HeroSoldiersCPP::kMaxFieldNumber;
#endif  // !_MSC_VER

HeroSoldiersCPP::HeroSoldiersCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.HeroSoldiersCPP)
}

void HeroSoldiersCPP::InitAsDefaultInstance() {
}

HeroSoldiersCPP::HeroSoldiersCPP(const HeroSoldiersCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.HeroSoldiersCPP)
}

void HeroSoldiersCPP::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  soldiers_ = 0u;
  max_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroSoldiersCPP::~HeroSoldiersCPP() {
  // @@protoc_insertion_point(destructor:ProtoHero.HeroSoldiersCPP)
  SharedDtor();
}

void HeroSoldiersCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroSoldiersCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroSoldiersCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroSoldiersCPP_descriptor_;
}

const HeroSoldiersCPP& HeroSoldiersCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

HeroSoldiersCPP* HeroSoldiersCPP::default_instance_ = NULL;

HeroSoldiersCPP* HeroSoldiersCPP::New() const {
  return new HeroSoldiersCPP;
}

void HeroSoldiersCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HeroSoldiersCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, max_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroSoldiersCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.HeroSoldiersCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_soldiers;
        break;
      }

      // required uint32 soldiers = 2;
      case 2: {
        if (tag == 16) {
         parse_soldiers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &soldiers_)));
          set_has_soldiers();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max;
        break;
      }

      // required uint32 max = 3;
      case 3: {
        if (tag == 24) {
         parse_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_)));
          set_has_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.HeroSoldiersCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.HeroSoldiersCPP)
  return false;
#undef DO_
}

void HeroSoldiersCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.HeroSoldiersCPP)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 soldiers = 2;
  if (has_soldiers()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->soldiers(), output);
  }

  // required uint32 max = 3;
  if (has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.HeroSoldiersCPP)
}

::google::protobuf::uint8* HeroSoldiersCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.HeroSoldiersCPP)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 soldiers = 2;
  if (has_soldiers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->soldiers(), target);
  }

  // required uint32 max = 3;
  if (has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.HeroSoldiersCPP)
  return target;
}

int HeroSoldiersCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 soldiers = 2;
    if (has_soldiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->soldiers());
    }

    // required uint32 max = 3;
    if (has_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroSoldiersCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroSoldiersCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroSoldiersCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroSoldiersCPP::MergeFrom(const HeroSoldiersCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_soldiers()) {
      set_soldiers(from.soldiers());
    }
    if (from.has_max()) {
      set_max(from.max());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroSoldiersCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroSoldiersCPP::CopyFrom(const HeroSoldiersCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroSoldiersCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void HeroSoldiersCPP::Swap(HeroSoldiersCPP* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(soldiers_, other->soldiers_);
    std::swap(max_, other->max_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroSoldiersCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroSoldiersCPP_descriptor_;
  metadata.reflection = HeroSoldiersCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockHeroPushReq::kHeroFieldNumber;
const int UnlockHeroPushReq::kSoidiersFieldNumber;
#endif  // !_MSC_VER

UnlockHeroPushReq::UnlockHeroPushReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UnlockHeroPushReq)
}

void UnlockHeroPushReq::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
  soidiers_ = const_cast< ::ProtoHero::HeroSoldiersCPP*>(&::ProtoHero::HeroSoldiersCPP::default_instance());
}

UnlockHeroPushReq::UnlockHeroPushReq(const UnlockHeroPushReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UnlockHeroPushReq)
}

void UnlockHeroPushReq::SharedCtor() {
  _cached_size_ = 0;
  hero_ = NULL;
  soidiers_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockHeroPushReq::~UnlockHeroPushReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.UnlockHeroPushReq)
  SharedDtor();
}

void UnlockHeroPushReq::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
    delete soidiers_;
  }
}

void UnlockHeroPushReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockHeroPushReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockHeroPushReq_descriptor_;
}

const UnlockHeroPushReq& UnlockHeroPushReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UnlockHeroPushReq* UnlockHeroPushReq::default_instance_ = NULL;

UnlockHeroPushReq* UnlockHeroPushReq::New() const {
  return new UnlockHeroPushReq;
}

void UnlockHeroPushReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
    if (has_soidiers()) {
      if (soidiers_ != NULL) soidiers_->::ProtoHero::HeroSoldiersCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockHeroPushReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UnlockHeroPushReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoHero.HeroBaseInfoCPP hero = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_soidiers;
        break;
      }

      // required .ProtoHero.HeroSoldiersCPP soidiers = 2;
      case 2: {
        if (tag == 18) {
         parse_soidiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soidiers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UnlockHeroPushReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UnlockHeroPushReq)
  return false;
#undef DO_
}

void UnlockHeroPushReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UnlockHeroPushReq)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(), output);
  }

  // required .ProtoHero.HeroSoldiersCPP soidiers = 2;
  if (has_soidiers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soidiers(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UnlockHeroPushReq)
}

::google::protobuf::uint8* UnlockHeroPushReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UnlockHeroPushReq)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(), target);
  }

  // required .ProtoHero.HeroSoldiersCPP soidiers = 2;
  if (has_soidiers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soidiers(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UnlockHeroPushReq)
  return target;
}

int UnlockHeroPushReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoHero.HeroBaseInfoCPP hero = 1;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required .ProtoHero.HeroSoldiersCPP soidiers = 2;
    if (has_soidiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soidiers());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockHeroPushReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockHeroPushReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockHeroPushReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockHeroPushReq::MergeFrom(const UnlockHeroPushReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
    if (from.has_soidiers()) {
      mutable_soidiers()->::ProtoHero::HeroSoldiersCPP::MergeFrom(from.soidiers());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockHeroPushReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockHeroPushReq::CopyFrom(const UnlockHeroPushReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockHeroPushReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  if (has_soidiers()) {
    if (!this->soidiers().IsInitialized()) return false;
  }
  return true;
}

void UnlockHeroPushReq::Swap(UnlockHeroPushReq* other) {
  if (other != this) {
    std::swap(hero_, other->hero_);
    std::swap(soidiers_, other->soidiers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnlockHeroPushReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockHeroPushReq_descriptor_;
  metadata.reflection = UnlockHeroPushReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecruitHeroReq::kHeroidFieldNumber;
#endif  // !_MSC_VER

RecruitHeroReq::RecruitHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.RecruitHeroReq)
}

void RecruitHeroReq::InitAsDefaultInstance() {
}

RecruitHeroReq::RecruitHeroReq(const RecruitHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.RecruitHeroReq)
}

void RecruitHeroReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecruitHeroReq::~RecruitHeroReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.RecruitHeroReq)
  SharedDtor();
}

void RecruitHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecruitHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecruitHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecruitHeroReq_descriptor_;
}

const RecruitHeroReq& RecruitHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

RecruitHeroReq* RecruitHeroReq::default_instance_ = NULL;

RecruitHeroReq* RecruitHeroReq::New() const {
  return new RecruitHeroReq;
}

void RecruitHeroReq::Clear() {
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecruitHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.RecruitHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.RecruitHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.RecruitHeroReq)
  return false;
#undef DO_
}

void RecruitHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.RecruitHeroReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.RecruitHeroReq)
}

::google::protobuf::uint8* RecruitHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.RecruitHeroReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.RecruitHeroReq)
  return target;
}

int RecruitHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecruitHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecruitHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecruitHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecruitHeroReq::MergeFrom(const RecruitHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecruitHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecruitHeroReq::CopyFrom(const RecruitHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecruitHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RecruitHeroReq::Swap(RecruitHeroReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecruitHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecruitHeroReq_descriptor_;
  metadata.reflection = RecruitHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecruitHeroResp::kCoinFieldNumber;
const int RecruitHeroResp::kHeroFieldNumber;
const int RecruitHeroResp::kSoidiersFieldNumber;
#endif  // !_MSC_VER

RecruitHeroResp::RecruitHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.RecruitHeroResp)
}

void RecruitHeroResp::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
  soidiers_ = const_cast< ::ProtoHero::HeroSoldiersCPP*>(&::ProtoHero::HeroSoldiersCPP::default_instance());
}

RecruitHeroResp::RecruitHeroResp(const RecruitHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.RecruitHeroResp)
}

void RecruitHeroResp::SharedCtor() {
  _cached_size_ = 0;
  coin_ = 0u;
  hero_ = NULL;
  soidiers_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecruitHeroResp::~RecruitHeroResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.RecruitHeroResp)
  SharedDtor();
}

void RecruitHeroResp::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
    delete soidiers_;
  }
}

void RecruitHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecruitHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecruitHeroResp_descriptor_;
}

const RecruitHeroResp& RecruitHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

RecruitHeroResp* RecruitHeroResp::default_instance_ = NULL;

RecruitHeroResp* RecruitHeroResp::New() const {
  return new RecruitHeroResp;
}

void RecruitHeroResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    coin_ = 0u;
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
    if (has_soidiers()) {
      if (soidiers_ != NULL) soidiers_->::ProtoHero::HeroSoldiersCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecruitHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.RecruitHeroResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 coin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_soidiers;
        break;
      }

      // required .ProtoHero.HeroSoldiersCPP soidiers = 3;
      case 3: {
        if (tag == 26) {
         parse_soidiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soidiers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.RecruitHeroResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.RecruitHeroResp)
  return false;
#undef DO_
}

void RecruitHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.RecruitHeroResp)
  // required uint32 coin = 1;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->coin(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  // required .ProtoHero.HeroSoldiersCPP soidiers = 3;
  if (has_soidiers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->soidiers(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.RecruitHeroResp)
}

::google::protobuf::uint8* RecruitHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.RecruitHeroResp)
  // required uint32 coin = 1;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->coin(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  // required .ProtoHero.HeroSoldiersCPP soidiers = 3;
  if (has_soidiers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->soidiers(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.RecruitHeroResp)
  return target;
}

int RecruitHeroResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 coin = 1;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required .ProtoHero.HeroSoldiersCPP soidiers = 3;
    if (has_soidiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soidiers());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecruitHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecruitHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecruitHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecruitHeroResp::MergeFrom(const RecruitHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
    if (from.has_soidiers()) {
      mutable_soidiers()->::ProtoHero::HeroSoldiersCPP::MergeFrom(from.soidiers());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecruitHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecruitHeroResp::CopyFrom(const RecruitHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecruitHeroResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  if (has_soidiers()) {
    if (!this->soidiers().IsInitialized()) return false;
  }
  return true;
}

void RecruitHeroResp::Swap(RecruitHeroResp* other) {
  if (other != this) {
    std::swap(coin_, other->coin_);
    std::swap(hero_, other->hero_);
    std::swap(soidiers_, other->soidiers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecruitHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecruitHeroResp_descriptor_;
  metadata.reflection = RecruitHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FireHeroReq::kHeroidFieldNumber;
#endif  // !_MSC_VER

FireHeroReq::FireHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.FireHeroReq)
}

void FireHeroReq::InitAsDefaultInstance() {
}

FireHeroReq::FireHeroReq(const FireHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.FireHeroReq)
}

void FireHeroReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FireHeroReq::~FireHeroReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.FireHeroReq)
  SharedDtor();
}

void FireHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FireHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FireHeroReq_descriptor_;
}

const FireHeroReq& FireHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

FireHeroReq* FireHeroReq::default_instance_ = NULL;

FireHeroReq* FireHeroReq::New() const {
  return new FireHeroReq;
}

void FireHeroReq::Clear() {
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FireHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.FireHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.FireHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.FireHeroReq)
  return false;
#undef DO_
}

void FireHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.FireHeroReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.FireHeroReq)
}

::google::protobuf::uint8* FireHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.FireHeroReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.FireHeroReq)
  return target;
}

int FireHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FireHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FireHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FireHeroReq::MergeFrom(const FireHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FireHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireHeroReq::CopyFrom(const FireHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FireHeroReq::Swap(FireHeroReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FireHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FireHeroReq_descriptor_;
  metadata.reflection = FireHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FireHeroResp::kHeroFieldNumber;
const int FireHeroResp::kEquipwrapFieldNumber;
#endif  // !_MSC_VER

FireHeroResp::FireHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.FireHeroResp)
}

void FireHeroResp::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
  equipwrap_ = const_cast< ::ProtoHero::EquipmentWrapCPP*>(&::ProtoHero::EquipmentWrapCPP::default_instance());
}

FireHeroResp::FireHeroResp(const FireHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.FireHeroResp)
}

void FireHeroResp::SharedCtor() {
  _cached_size_ = 0;
  hero_ = NULL;
  equipwrap_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FireHeroResp::~FireHeroResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.FireHeroResp)
  SharedDtor();
}

void FireHeroResp::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
    delete equipwrap_;
  }
}

void FireHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FireHeroResp_descriptor_;
}

const FireHeroResp& FireHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

FireHeroResp* FireHeroResp::default_instance_ = NULL;

FireHeroResp* FireHeroResp::New() const {
  return new FireHeroResp;
}

void FireHeroResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
    if (has_equipwrap()) {
      if (equipwrap_ != NULL) equipwrap_->::ProtoHero::EquipmentWrapCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FireHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.FireHeroResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoHero.HeroBaseInfoCPP hero = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equipwrap;
        break;
      }

      // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
      case 2: {
        if (tag == 18) {
         parse_equipwrap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipwrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.FireHeroResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.FireHeroResp)
  return false;
#undef DO_
}

void FireHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.FireHeroResp)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(), output);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipwrap(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.FireHeroResp)
}

::google::protobuf::uint8* FireHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.FireHeroResp)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(), target);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipwrap(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.FireHeroResp)
  return target;
}

int FireHeroResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoHero.HeroBaseInfoCPP hero = 1;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
    if (has_equipwrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipwrap());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FireHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FireHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FireHeroResp::MergeFrom(const FireHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
    if (from.has_equipwrap()) {
      mutable_equipwrap()->::ProtoHero::EquipmentWrapCPP::MergeFrom(from.equipwrap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FireHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireHeroResp::CopyFrom(const FireHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireHeroResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  if (has_equipwrap()) {
    if (!this->equipwrap().IsInitialized()) return false;
  }
  return true;
}

void FireHeroResp::Swap(FireHeroResp* other) {
  if (other != this) {
    std::swap(hero_, other->hero_);
    std::swap(equipwrap_, other->equipwrap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FireHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FireHeroResp_descriptor_;
  metadata.reflection = FireHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DressEquipReq::kHeroidFieldNumber;
const int DressEquipReq::kEqudFieldNumber;
const int DressEquipReq::kOldequdFieldNumber;
#endif  // !_MSC_VER

DressEquipReq::DressEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.DressEquipReq)
}

void DressEquipReq::InitAsDefaultInstance() {
}

DressEquipReq::DressEquipReq(const DressEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.DressEquipReq)
}

void DressEquipReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  equd_ = 0u;
  oldequd_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DressEquipReq::~DressEquipReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.DressEquipReq)
  SharedDtor();
}

void DressEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DressEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DressEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DressEquipReq_descriptor_;
}

const DressEquipReq& DressEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

DressEquipReq* DressEquipReq::default_instance_ = NULL;

DressEquipReq* DressEquipReq::New() const {
  return new DressEquipReq;
}

void DressEquipReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DressEquipReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, oldequd_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DressEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.DressEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_equd;
        break;
      }

      // required uint32 equd = 2;
      case 2: {
        if (tag == 16) {
         parse_equd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_oldequd;
        break;
      }

      // required uint32 oldequd = 3;
      case 3: {
        if (tag == 24) {
         parse_oldequd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldequd_)));
          set_has_oldequd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.DressEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.DressEquipReq)
  return false;
#undef DO_
}

void DressEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.DressEquipReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 equd = 2;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equd(), output);
  }

  // required uint32 oldequd = 3;
  if (has_oldequd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oldequd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.DressEquipReq)
}

::google::protobuf::uint8* DressEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.DressEquipReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 equd = 2;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equd(), target);
  }

  // required uint32 oldequd = 3;
  if (has_oldequd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oldequd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.DressEquipReq)
  return target;
}

int DressEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 equd = 2;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

    // required uint32 oldequd = 3;
    if (has_oldequd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oldequd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DressEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DressEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DressEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DressEquipReq::MergeFrom(const DressEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_equd()) {
      set_equd(from.equd());
    }
    if (from.has_oldequd()) {
      set_oldequd(from.oldequd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DressEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DressEquipReq::CopyFrom(const DressEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DressEquipReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DressEquipReq::Swap(DressEquipReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(equd_, other->equd_);
    std::swap(oldequd_, other->oldequd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DressEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DressEquipReq_descriptor_;
  metadata.reflection = DressEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DressEquipResp::kEquipwrapFieldNumber;
const int DressEquipResp::kHeroFieldNumber;
#endif  // !_MSC_VER

DressEquipResp::DressEquipResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.DressEquipResp)
}

void DressEquipResp::InitAsDefaultInstance() {
  equipwrap_ = const_cast< ::ProtoHero::EquipmentWrapCPP*>(&::ProtoHero::EquipmentWrapCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

DressEquipResp::DressEquipResp(const DressEquipResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.DressEquipResp)
}

void DressEquipResp::SharedCtor() {
  _cached_size_ = 0;
  equipwrap_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DressEquipResp::~DressEquipResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.DressEquipResp)
  SharedDtor();
}

void DressEquipResp::SharedDtor() {
  if (this != default_instance_) {
    delete equipwrap_;
    delete hero_;
  }
}

void DressEquipResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DressEquipResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DressEquipResp_descriptor_;
}

const DressEquipResp& DressEquipResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

DressEquipResp* DressEquipResp::default_instance_ = NULL;

DressEquipResp* DressEquipResp::New() const {
  return new DressEquipResp;
}

void DressEquipResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_equipwrap()) {
      if (equipwrap_ != NULL) equipwrap_->::ProtoHero::EquipmentWrapCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DressEquipResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.DressEquipResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoHero.EquipmentWrapCPP equipwrap = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipwrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.DressEquipResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.DressEquipResp)
  return false;
#undef DO_
}

void DressEquipResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.DressEquipResp)
  // required .ProtoHero.EquipmentWrapCPP equipwrap = 1;
  if (has_equipwrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equipwrap(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.DressEquipResp)
}

::google::protobuf::uint8* DressEquipResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.DressEquipResp)
  // required .ProtoHero.EquipmentWrapCPP equipwrap = 1;
  if (has_equipwrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equipwrap(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.DressEquipResp)
  return target;
}

int DressEquipResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoHero.EquipmentWrapCPP equipwrap = 1;
    if (has_equipwrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipwrap());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DressEquipResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DressEquipResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DressEquipResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DressEquipResp::MergeFrom(const DressEquipResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equipwrap()) {
      mutable_equipwrap()->::ProtoHero::EquipmentWrapCPP::MergeFrom(from.equipwrap());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DressEquipResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DressEquipResp::CopyFrom(const DressEquipResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DressEquipResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_equipwrap()) {
    if (!this->equipwrap().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void DressEquipResp::Swap(DressEquipResp* other) {
  if (other != this) {
    std::swap(equipwrap_, other->equipwrap_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DressEquipResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DressEquipResp_descriptor_;
  metadata.reflection = DressEquipResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnDressEquipReq::kHeroidFieldNumber;
const int UnDressEquipReq::kEqudFieldNumber;
#endif  // !_MSC_VER

UnDressEquipReq::UnDressEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UnDressEquipReq)
}

void UnDressEquipReq::InitAsDefaultInstance() {
}

UnDressEquipReq::UnDressEquipReq(const UnDressEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UnDressEquipReq)
}

void UnDressEquipReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  equd_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnDressEquipReq::~UnDressEquipReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.UnDressEquipReq)
  SharedDtor();
}

void UnDressEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnDressEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnDressEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnDressEquipReq_descriptor_;
}

const UnDressEquipReq& UnDressEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UnDressEquipReq* UnDressEquipReq::default_instance_ = NULL;

UnDressEquipReq* UnDressEquipReq::New() const {
  return new UnDressEquipReq;
}

void UnDressEquipReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UnDressEquipReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, equd_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnDressEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UnDressEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_equd;
        break;
      }

      // required uint32 equd = 2;
      case 2: {
        if (tag == 16) {
         parse_equd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UnDressEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UnDressEquipReq)
  return false;
#undef DO_
}

void UnDressEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UnDressEquipReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 equd = 2;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UnDressEquipReq)
}

::google::protobuf::uint8* UnDressEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UnDressEquipReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 equd = 2;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UnDressEquipReq)
  return target;
}

int UnDressEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 equd = 2;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnDressEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnDressEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnDressEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnDressEquipReq::MergeFrom(const UnDressEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_equd()) {
      set_equd(from.equd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnDressEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnDressEquipReq::CopyFrom(const UnDressEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnDressEquipReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UnDressEquipReq::Swap(UnDressEquipReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(equd_, other->equd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnDressEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnDressEquipReq_descriptor_;
  metadata.reflection = UnDressEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnDressEquipResp::kEquipFieldNumber;
const int UnDressEquipResp::kHeroFieldNumber;
#endif  // !_MSC_VER

UnDressEquipResp::UnDressEquipResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UnDressEquipResp)
}

void UnDressEquipResp::InitAsDefaultInstance() {
  equip_ = const_cast< ::DataCommon::EquipmentCPP*>(&::DataCommon::EquipmentCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

UnDressEquipResp::UnDressEquipResp(const UnDressEquipResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UnDressEquipResp)
}

void UnDressEquipResp::SharedCtor() {
  _cached_size_ = 0;
  equip_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnDressEquipResp::~UnDressEquipResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.UnDressEquipResp)
  SharedDtor();
}

void UnDressEquipResp::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
    delete hero_;
  }
}

void UnDressEquipResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnDressEquipResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnDressEquipResp_descriptor_;
}

const UnDressEquipResp& UnDressEquipResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UnDressEquipResp* UnDressEquipResp::default_instance_ = NULL;

UnDressEquipResp* UnDressEquipResp::New() const {
  return new UnDressEquipResp;
}

void UnDressEquipResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_equip()) {
      if (equip_ != NULL) equip_->::DataCommon::EquipmentCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnDressEquipResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UnDressEquipResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.EquipmentCPP equip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UnDressEquipResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UnDressEquipResp)
  return false;
#undef DO_
}

void UnDressEquipResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UnDressEquipResp)
  // required .DataCommon.EquipmentCPP equip = 1;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equip(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UnDressEquipResp)
}

::google::protobuf::uint8* UnDressEquipResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UnDressEquipResp)
  // required .DataCommon.EquipmentCPP equip = 1;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equip(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UnDressEquipResp)
  return target;
}

int UnDressEquipResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.EquipmentCPP equip = 1;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnDressEquipResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnDressEquipResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnDressEquipResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnDressEquipResp::MergeFrom(const UnDressEquipResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip()) {
      mutable_equip()->::DataCommon::EquipmentCPP::MergeFrom(from.equip());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnDressEquipResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnDressEquipResp::CopyFrom(const UnDressEquipResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnDressEquipResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_equip()) {
    if (!this->equip().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void UnDressEquipResp::Swap(UnDressEquipResp* other) {
  if (other != this) {
    std::swap(equip_, other->equip_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnDressEquipResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnDressEquipResp_descriptor_;
  metadata.reflection = UnDressEquipResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneKeyDressReq::kHeroidFieldNumber;
#endif  // !_MSC_VER

OneKeyDressReq::OneKeyDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OneKeyDressReq)
}

void OneKeyDressReq::InitAsDefaultInstance() {
}

OneKeyDressReq::OneKeyDressReq(const OneKeyDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OneKeyDressReq)
}

void OneKeyDressReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneKeyDressReq::~OneKeyDressReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.OneKeyDressReq)
  SharedDtor();
}

void OneKeyDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OneKeyDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneKeyDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneKeyDressReq_descriptor_;
}

const OneKeyDressReq& OneKeyDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OneKeyDressReq* OneKeyDressReq::default_instance_ = NULL;

OneKeyDressReq* OneKeyDressReq::New() const {
  return new OneKeyDressReq;
}

void OneKeyDressReq::Clear() {
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneKeyDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OneKeyDressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OneKeyDressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OneKeyDressReq)
  return false;
#undef DO_
}

void OneKeyDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OneKeyDressReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OneKeyDressReq)
}

::google::protobuf::uint8* OneKeyDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OneKeyDressReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OneKeyDressReq)
  return target;
}

int OneKeyDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneKeyDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneKeyDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneKeyDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneKeyDressReq::MergeFrom(const OneKeyDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneKeyDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneKeyDressReq::CopyFrom(const OneKeyDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneKeyDressReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OneKeyDressReq::Swap(OneKeyDressReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneKeyDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneKeyDressReq_descriptor_;
  metadata.reflection = OneKeyDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneKeyDressResp::kHeroFieldNumber;
const int OneKeyDressResp::kEquipwrapFieldNumber;
#endif  // !_MSC_VER

OneKeyDressResp::OneKeyDressResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OneKeyDressResp)
}

void OneKeyDressResp::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
  equipwrap_ = const_cast< ::ProtoHero::EquipmentWrapCPP*>(&::ProtoHero::EquipmentWrapCPP::default_instance());
}

OneKeyDressResp::OneKeyDressResp(const OneKeyDressResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OneKeyDressResp)
}

void OneKeyDressResp::SharedCtor() {
  _cached_size_ = 0;
  hero_ = NULL;
  equipwrap_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneKeyDressResp::~OneKeyDressResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.OneKeyDressResp)
  SharedDtor();
}

void OneKeyDressResp::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
    delete equipwrap_;
  }
}

void OneKeyDressResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneKeyDressResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneKeyDressResp_descriptor_;
}

const OneKeyDressResp& OneKeyDressResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OneKeyDressResp* OneKeyDressResp::default_instance_ = NULL;

OneKeyDressResp* OneKeyDressResp::New() const {
  return new OneKeyDressResp;
}

void OneKeyDressResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
    if (has_equipwrap()) {
      if (equipwrap_ != NULL) equipwrap_->::ProtoHero::EquipmentWrapCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneKeyDressResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OneKeyDressResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoHero.HeroBaseInfoCPP hero = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equipwrap;
        break;
      }

      // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
      case 2: {
        if (tag == 18) {
         parse_equipwrap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipwrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OneKeyDressResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OneKeyDressResp)
  return false;
#undef DO_
}

void OneKeyDressResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OneKeyDressResp)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(), output);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipwrap(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OneKeyDressResp)
}

::google::protobuf::uint8* OneKeyDressResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OneKeyDressResp)
  // required .ProtoHero.HeroBaseInfoCPP hero = 1;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(), target);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipwrap(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OneKeyDressResp)
  return target;
}

int OneKeyDressResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoHero.HeroBaseInfoCPP hero = 1;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
    if (has_equipwrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipwrap());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneKeyDressResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneKeyDressResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneKeyDressResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneKeyDressResp::MergeFrom(const OneKeyDressResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
    if (from.has_equipwrap()) {
      mutable_equipwrap()->::ProtoHero::EquipmentWrapCPP::MergeFrom(from.equipwrap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneKeyDressResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneKeyDressResp::CopyFrom(const OneKeyDressResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneKeyDressResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  if (has_equipwrap()) {
    if (!this->equipwrap().IsInitialized()) return false;
  }
  return true;
}

void OneKeyDressResp::Swap(OneKeyDressResp* other) {
  if (other != this) {
    std::swap(hero_, other->hero_);
    std::swap(equipwrap_, other->equipwrap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneKeyDressResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneKeyDressResp_descriptor_;
  metadata.reflection = OneKeyDressResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SwitchDressReq::kHeroidsFieldNumber;
#endif  // !_MSC_VER

SwitchDressReq::SwitchDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.SwitchDressReq)
}

void SwitchDressReq::InitAsDefaultInstance() {
}

SwitchDressReq::SwitchDressReq(const SwitchDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.SwitchDressReq)
}

void SwitchDressReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwitchDressReq::~SwitchDressReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.SwitchDressReq)
  SharedDtor();
}

void SwitchDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SwitchDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchDressReq_descriptor_;
}

const SwitchDressReq& SwitchDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

SwitchDressReq* SwitchDressReq::default_instance_ = NULL;

SwitchDressReq* SwitchDressReq::New() const {
  return new SwitchDressReq;
}

void SwitchDressReq::Clear() {
  heroids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwitchDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.SwitchDressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 heroids = 1;
      case 1: {
        if (tag == 8) {
         parse_heroids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_heroids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_heroids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_heroids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.SwitchDressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.SwitchDressReq)
  return false;
#undef DO_
}

void SwitchDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.SwitchDressReq)
  // repeated uint32 heroids = 1;
  for (int i = 0; i < this->heroids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->heroids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.SwitchDressReq)
}

::google::protobuf::uint8* SwitchDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.SwitchDressReq)
  // repeated uint32 heroids = 1;
  for (int i = 0; i < this->heroids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->heroids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.SwitchDressReq)
  return target;
}

int SwitchDressReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 heroids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->heroids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->heroids(i));
    }
    total_size += 1 * this->heroids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwitchDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwitchDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwitchDressReq::MergeFrom(const SwitchDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroids_.MergeFrom(from.heroids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwitchDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchDressReq::CopyFrom(const SwitchDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchDressReq::IsInitialized() const {

  return true;
}

void SwitchDressReq::Swap(SwitchDressReq* other) {
  if (other != this) {
    heroids_.Swap(&other->heroids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SwitchDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchDressReq_descriptor_;
  metadata.reflection = SwitchDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SwitchDressResp::kHeroesFieldNumber;
const int SwitchDressResp::kEquipwrapFieldNumber;
#endif  // !_MSC_VER

SwitchDressResp::SwitchDressResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.SwitchDressResp)
}

void SwitchDressResp::InitAsDefaultInstance() {
  equipwrap_ = const_cast< ::ProtoHero::EquipmentWrapCPP*>(&::ProtoHero::EquipmentWrapCPP::default_instance());
}

SwitchDressResp::SwitchDressResp(const SwitchDressResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.SwitchDressResp)
}

void SwitchDressResp::SharedCtor() {
  _cached_size_ = 0;
  equipwrap_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwitchDressResp::~SwitchDressResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.SwitchDressResp)
  SharedDtor();
}

void SwitchDressResp::SharedDtor() {
  if (this != default_instance_) {
    delete equipwrap_;
  }
}

void SwitchDressResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchDressResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchDressResp_descriptor_;
}

const SwitchDressResp& SwitchDressResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

SwitchDressResp* SwitchDressResp::default_instance_ = NULL;

SwitchDressResp* SwitchDressResp::New() const {
  return new SwitchDressResp;
}

void SwitchDressResp::Clear() {
  if (has_equipwrap()) {
    if (equipwrap_ != NULL) equipwrap_->::ProtoHero::EquipmentWrapCPP::Clear();
  }
  heroes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwitchDressResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.SwitchDressResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoHero.HeroBaseInfoCPP heroes = 1;
      case 1: {
        if (tag == 10) {
         parse_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_heroes;
        if (input->ExpectTag(18)) goto parse_equipwrap;
        break;
      }

      // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
      case 2: {
        if (tag == 18) {
         parse_equipwrap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipwrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.SwitchDressResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.SwitchDressResp)
  return false;
#undef DO_
}

void SwitchDressResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.SwitchDressResp)
  // repeated .ProtoHero.HeroBaseInfoCPP heroes = 1;
  for (int i = 0; i < this->heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->heroes(i), output);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipwrap(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.SwitchDressResp)
}

::google::protobuf::uint8* SwitchDressResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.SwitchDressResp)
  // repeated .ProtoHero.HeroBaseInfoCPP heroes = 1;
  for (int i = 0; i < this->heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->heroes(i), target);
  }

  // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
  if (has_equipwrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipwrap(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.SwitchDressResp)
  return target;
}

int SwitchDressResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .ProtoHero.EquipmentWrapCPP equipwrap = 2;
    if (has_equipwrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipwrap());
    }

  }
  // repeated .ProtoHero.HeroBaseInfoCPP heroes = 1;
  total_size += 1 * this->heroes_size();
  for (int i = 0; i < this->heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchDressResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwitchDressResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwitchDressResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwitchDressResp::MergeFrom(const SwitchDressResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroes_.MergeFrom(from.heroes_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_equipwrap()) {
      mutable_equipwrap()->::ProtoHero::EquipmentWrapCPP::MergeFrom(from.equipwrap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwitchDressResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchDressResp::CopyFrom(const SwitchDressResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchDressResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->heroes())) return false;
  if (has_equipwrap()) {
    if (!this->equipwrap().IsInitialized()) return false;
  }
  return true;
}

void SwitchDressResp::Swap(SwitchDressResp* other) {
  if (other != this) {
    heroes_.Swap(&other->heroes_);
    std::swap(equipwrap_, other->equipwrap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SwitchDressResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchDressResp_descriptor_;
  metadata.reflection = SwitchDressResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseRecruitPropReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

UseRecruitPropReq::UseRecruitPropReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UseRecruitPropReq)
}

void UseRecruitPropReq::InitAsDefaultInstance() {
}

UseRecruitPropReq::UseRecruitPropReq(const UseRecruitPropReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UseRecruitPropReq)
}

void UseRecruitPropReq::SharedCtor() {
  _cached_size_ = 0;
  hero_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseRecruitPropReq::~UseRecruitPropReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.UseRecruitPropReq)
  SharedDtor();
}

void UseRecruitPropReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseRecruitPropReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseRecruitPropReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseRecruitPropReq_descriptor_;
}

const UseRecruitPropReq& UseRecruitPropReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UseRecruitPropReq* UseRecruitPropReq::default_instance_ = NULL;

UseRecruitPropReq* UseRecruitPropReq::New() const {
  return new UseRecruitPropReq;
}

void UseRecruitPropReq::Clear() {
  hero_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseRecruitPropReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UseRecruitPropReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hero_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_id_)));
          set_has_hero_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UseRecruitPropReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UseRecruitPropReq)
  return false;
#undef DO_
}

void UseRecruitPropReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UseRecruitPropReq)
  // required uint32 hero_id = 1;
  if (has_hero_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hero_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UseRecruitPropReq)
}

::google::protobuf::uint8* UseRecruitPropReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UseRecruitPropReq)
  // required uint32 hero_id = 1;
  if (has_hero_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hero_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UseRecruitPropReq)
  return target;
}

int UseRecruitPropReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 hero_id = 1;
    if (has_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseRecruitPropReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseRecruitPropReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseRecruitPropReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseRecruitPropReq::MergeFrom(const UseRecruitPropReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero_id()) {
      set_hero_id(from.hero_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseRecruitPropReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseRecruitPropReq::CopyFrom(const UseRecruitPropReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseRecruitPropReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UseRecruitPropReq::Swap(UseRecruitPropReq* other) {
  if (other != this) {
    std::swap(hero_id_, other->hero_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseRecruitPropReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseRecruitPropReq_descriptor_;
  metadata.reflection = UseRecruitPropReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseRecruitPropResp::kOrderFieldNumber;
const int UseRecruitPropResp::kHeroFieldNumber;
const int UseRecruitPropResp::kFoodFieldNumber;
const int UseRecruitPropResp::kCashFieldNumber;
#endif  // !_MSC_VER

UseRecruitPropResp::UseRecruitPropResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UseRecruitPropResp)
}

void UseRecruitPropResp::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroSoldiersCPP*>(&::ProtoHero::HeroSoldiersCPP::default_instance());
}

UseRecruitPropResp::UseRecruitPropResp(const UseRecruitPropResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UseRecruitPropResp)
}

void UseRecruitPropResp::SharedCtor() {
  _cached_size_ = 0;
  order_ = 0u;
  hero_ = NULL;
  food_ = 0u;
  cash_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseRecruitPropResp::~UseRecruitPropResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.UseRecruitPropResp)
  SharedDtor();
}

void UseRecruitPropResp::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void UseRecruitPropResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseRecruitPropResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseRecruitPropResp_descriptor_;
}

const UseRecruitPropResp& UseRecruitPropResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UseRecruitPropResp* UseRecruitPropResp::default_instance_ = NULL;

UseRecruitPropResp* UseRecruitPropResp::New() const {
  return new UseRecruitPropResp;
}

void UseRecruitPropResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UseRecruitPropResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(order_, cash_);
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroSoldiersCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseRecruitPropResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UseRecruitPropResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 order = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroSoldiersCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_food;
        break;
      }

      // required uint32 food = 3;
      case 3: {
        if (tag == 24) {
         parse_food:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &food_)));
          set_has_food();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cash;
        break;
      }

      // required uint32 cash = 4;
      case 4: {
        if (tag == 32) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UseRecruitPropResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UseRecruitPropResp)
  return false;
#undef DO_
}

void UseRecruitPropResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UseRecruitPropResp)
  // required uint32 order = 1;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order(), output);
  }

  // required .ProtoHero.HeroSoldiersCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  // required uint32 food = 3;
  if (has_food()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->food(), output);
  }

  // required uint32 cash = 4;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UseRecruitPropResp)
}

::google::protobuf::uint8* UseRecruitPropResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UseRecruitPropResp)
  // required uint32 order = 1;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order(), target);
  }

  // required .ProtoHero.HeroSoldiersCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  // required uint32 food = 3;
  if (has_food()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->food(), target);
  }

  // required uint32 cash = 4;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UseRecruitPropResp)
  return target;
}

int UseRecruitPropResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->order());
    }

    // required .ProtoHero.HeroSoldiersCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required uint32 food = 3;
    if (has_food()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->food());
    }

    // required uint32 cash = 4;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseRecruitPropResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseRecruitPropResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseRecruitPropResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseRecruitPropResp::MergeFrom(const UseRecruitPropResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroSoldiersCPP::MergeFrom(from.hero());
    }
    if (from.has_food()) {
      set_food(from.food());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseRecruitPropResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseRecruitPropResp::CopyFrom(const UseRecruitPropResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseRecruitPropResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void UseRecruitPropResp::Swap(UseRecruitPropResp* other) {
  if (other != this) {
    std::swap(order_, other->order_);
    std::swap(hero_, other->hero_);
    std::swap(food_, other->food_);
    std::swap(cash_, other->cash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseRecruitPropResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseRecruitPropResp_descriptor_;
  metadata.reflection = UseRecruitPropResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncSoldiersReq::kHeroIdsFieldNumber;
#endif  // !_MSC_VER

SyncSoldiersReq::SyncSoldiersReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.SyncSoldiersReq)
}

void SyncSoldiersReq::InitAsDefaultInstance() {
}

SyncSoldiersReq::SyncSoldiersReq(const SyncSoldiersReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.SyncSoldiersReq)
}

void SyncSoldiersReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncSoldiersReq::~SyncSoldiersReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.SyncSoldiersReq)
  SharedDtor();
}

void SyncSoldiersReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncSoldiersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncSoldiersReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncSoldiersReq_descriptor_;
}

const SyncSoldiersReq& SyncSoldiersReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

SyncSoldiersReq* SyncSoldiersReq::default_instance_ = NULL;

SyncSoldiersReq* SyncSoldiersReq::New() const {
  return new SyncSoldiersReq;
}

void SyncSoldiersReq::Clear() {
  hero_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncSoldiersReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.SyncSoldiersReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 hero_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_hero_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_hero_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hero_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_hero_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.SyncSoldiersReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.SyncSoldiersReq)
  return false;
#undef DO_
}

void SyncSoldiersReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.SyncSoldiersReq)
  // repeated uint32 hero_ids = 1;
  for (int i = 0; i < this->hero_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->hero_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.SyncSoldiersReq)
}

::google::protobuf::uint8* SyncSoldiersReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.SyncSoldiersReq)
  // repeated uint32 hero_ids = 1;
  for (int i = 0; i < this->hero_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->hero_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.SyncSoldiersReq)
  return target;
}

int SyncSoldiersReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 hero_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->hero_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hero_ids(i));
    }
    total_size += 1 * this->hero_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncSoldiersReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncSoldiersReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncSoldiersReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncSoldiersReq::MergeFrom(const SyncSoldiersReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_ids_.MergeFrom(from.hero_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncSoldiersReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncSoldiersReq::CopyFrom(const SyncSoldiersReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncSoldiersReq::IsInitialized() const {

  return true;
}

void SyncSoldiersReq::Swap(SyncSoldiersReq* other) {
  if (other != this) {
    hero_ids_.Swap(&other->hero_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncSoldiersReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncSoldiersReq_descriptor_;
  metadata.reflection = SyncSoldiersReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncSoldiersResp::kHerosFieldNumber;
#endif  // !_MSC_VER

SyncSoldiersResp::SyncSoldiersResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.SyncSoldiersResp)
}

void SyncSoldiersResp::InitAsDefaultInstance() {
}

SyncSoldiersResp::SyncSoldiersResp(const SyncSoldiersResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.SyncSoldiersResp)
}

void SyncSoldiersResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncSoldiersResp::~SyncSoldiersResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.SyncSoldiersResp)
  SharedDtor();
}

void SyncSoldiersResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncSoldiersResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncSoldiersResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncSoldiersResp_descriptor_;
}

const SyncSoldiersResp& SyncSoldiersResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

SyncSoldiersResp* SyncSoldiersResp::default_instance_ = NULL;

SyncSoldiersResp* SyncSoldiersResp::New() const {
  return new SyncSoldiersResp;
}

void SyncSoldiersResp::Clear() {
  heros_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncSoldiersResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.SyncSoldiersResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoHero.HeroSoldiersCPP heros = 1;
      case 1: {
        if (tag == 10) {
         parse_heros:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heros()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_heros;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.SyncSoldiersResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.SyncSoldiersResp)
  return false;
#undef DO_
}

void SyncSoldiersResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.SyncSoldiersResp)
  // repeated .ProtoHero.HeroSoldiersCPP heros = 1;
  for (int i = 0; i < this->heros_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->heros(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.SyncSoldiersResp)
}

::google::protobuf::uint8* SyncSoldiersResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.SyncSoldiersResp)
  // repeated .ProtoHero.HeroSoldiersCPP heros = 1;
  for (int i = 0; i < this->heros_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->heros(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.SyncSoldiersResp)
  return target;
}

int SyncSoldiersResp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoHero.HeroSoldiersCPP heros = 1;
  total_size += 1 * this->heros_size();
  for (int i = 0; i < this->heros_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heros(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncSoldiersResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncSoldiersResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncSoldiersResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncSoldiersResp::MergeFrom(const SyncSoldiersResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  heros_.MergeFrom(from.heros_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncSoldiersResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncSoldiersResp::CopyFrom(const SyncSoldiersResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncSoldiersResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->heros())) return false;
  return true;
}

void SyncSoldiersResp::Swap(SyncSoldiersResp* other) {
  if (other != this) {
    heros_.Swap(&other->heros_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncSoldiersResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncSoldiersResp_descriptor_;
  metadata.reflection = SyncSoldiersResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

OpenSmeltWindowReq::OpenSmeltWindowReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OpenSmeltWindowReq)
}

void OpenSmeltWindowReq::InitAsDefaultInstance() {
}

OpenSmeltWindowReq::OpenSmeltWindowReq(const OpenSmeltWindowReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OpenSmeltWindowReq)
}

void OpenSmeltWindowReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenSmeltWindowReq::~OpenSmeltWindowReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.OpenSmeltWindowReq)
  SharedDtor();
}

void OpenSmeltWindowReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenSmeltWindowReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenSmeltWindowReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenSmeltWindowReq_descriptor_;
}

const OpenSmeltWindowReq& OpenSmeltWindowReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OpenSmeltWindowReq* OpenSmeltWindowReq::default_instance_ = NULL;

OpenSmeltWindowReq* OpenSmeltWindowReq::New() const {
  return new OpenSmeltWindowReq;
}

void OpenSmeltWindowReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenSmeltWindowReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OpenSmeltWindowReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OpenSmeltWindowReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OpenSmeltWindowReq)
  return false;
#undef DO_
}

void OpenSmeltWindowReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OpenSmeltWindowReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OpenSmeltWindowReq)
}

::google::protobuf::uint8* OpenSmeltWindowReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OpenSmeltWindowReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OpenSmeltWindowReq)
  return target;
}

int OpenSmeltWindowReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenSmeltWindowReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenSmeltWindowReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenSmeltWindowReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenSmeltWindowReq::MergeFrom(const OpenSmeltWindowReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenSmeltWindowReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenSmeltWindowReq::CopyFrom(const OpenSmeltWindowReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenSmeltWindowReq::IsInitialized() const {

  return true;
}

void OpenSmeltWindowReq::Swap(OpenSmeltWindowReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenSmeltWindowReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenSmeltWindowReq_descriptor_;
  metadata.reflection = OpenSmeltWindowReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpenSmeltWindowResp::kFreetimesFieldNumber;
#endif  // !_MSC_VER

OpenSmeltWindowResp::OpenSmeltWindowResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OpenSmeltWindowResp)
}

void OpenSmeltWindowResp::InitAsDefaultInstance() {
}

OpenSmeltWindowResp::OpenSmeltWindowResp(const OpenSmeltWindowResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OpenSmeltWindowResp)
}

void OpenSmeltWindowResp::SharedCtor() {
  _cached_size_ = 0;
  freetimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenSmeltWindowResp::~OpenSmeltWindowResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.OpenSmeltWindowResp)
  SharedDtor();
}

void OpenSmeltWindowResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenSmeltWindowResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenSmeltWindowResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenSmeltWindowResp_descriptor_;
}

const OpenSmeltWindowResp& OpenSmeltWindowResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OpenSmeltWindowResp* OpenSmeltWindowResp::default_instance_ = NULL;

OpenSmeltWindowResp* OpenSmeltWindowResp::New() const {
  return new OpenSmeltWindowResp;
}

void OpenSmeltWindowResp::Clear() {
  freetimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenSmeltWindowResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OpenSmeltWindowResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 freetimes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freetimes_)));
          set_has_freetimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OpenSmeltWindowResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OpenSmeltWindowResp)
  return false;
#undef DO_
}

void OpenSmeltWindowResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OpenSmeltWindowResp)
  // required uint32 freetimes = 1;
  if (has_freetimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->freetimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OpenSmeltWindowResp)
}

::google::protobuf::uint8* OpenSmeltWindowResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OpenSmeltWindowResp)
  // required uint32 freetimes = 1;
  if (has_freetimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->freetimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OpenSmeltWindowResp)
  return target;
}

int OpenSmeltWindowResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 freetimes = 1;
    if (has_freetimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freetimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenSmeltWindowResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenSmeltWindowResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenSmeltWindowResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenSmeltWindowResp::MergeFrom(const OpenSmeltWindowResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_freetimes()) {
      set_freetimes(from.freetimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenSmeltWindowResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenSmeltWindowResp::CopyFrom(const OpenSmeltWindowResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenSmeltWindowResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OpenSmeltWindowResp::Swap(OpenSmeltWindowResp* other) {
  if (other != this) {
    std::swap(freetimes_, other->freetimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenSmeltWindowResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenSmeltWindowResp_descriptor_;
  metadata.reflection = OpenSmeltWindowResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSmeltReq::kEqudFieldNumber;
const int EquipSmeltReq::kTypeFieldNumber;
#endif  // !_MSC_VER

EquipSmeltReq::EquipSmeltReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.EquipSmeltReq)
}

void EquipSmeltReq::InitAsDefaultInstance() {
}

EquipSmeltReq::EquipSmeltReq(const EquipSmeltReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.EquipSmeltReq)
}

void EquipSmeltReq::SharedCtor() {
  _cached_size_ = 0;
  equd_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSmeltReq::~EquipSmeltReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.EquipSmeltReq)
  SharedDtor();
}

void EquipSmeltReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSmeltReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSmeltReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSmeltReq_descriptor_;
}

const EquipSmeltReq& EquipSmeltReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

EquipSmeltReq* EquipSmeltReq::default_instance_ = NULL;

EquipSmeltReq* EquipSmeltReq::New() const {
  return new EquipSmeltReq;
}

void EquipSmeltReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipSmeltReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(equd_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSmeltReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.EquipSmeltReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 equd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.EquipSmeltReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.EquipSmeltReq)
  return false;
#undef DO_
}

void EquipSmeltReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.EquipSmeltReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equd(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.EquipSmeltReq)
}

::google::protobuf::uint8* EquipSmeltReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.EquipSmeltReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equd(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.EquipSmeltReq)
  return target;
}

int EquipSmeltReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 equd = 1;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSmeltReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSmeltReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSmeltReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSmeltReq::MergeFrom(const EquipSmeltReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equd()) {
      set_equd(from.equd());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSmeltReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSmeltReq::CopyFrom(const EquipSmeltReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSmeltReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EquipSmeltReq::Swap(EquipSmeltReq* other) {
  if (other != this) {
    std::swap(equd_, other->equd_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSmeltReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSmeltReq_descriptor_;
  metadata.reflection = EquipSmeltReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSmeltResp::kEquipFieldNumber;
const int EquipSmeltResp::kHeroFieldNumber;
const int EquipSmeltResp::kRefreshFieldNumber;
const int EquipSmeltResp::kArefreshFieldNumber;
const int EquipSmeltResp::kCashFieldNumber;
#endif  // !_MSC_VER

EquipSmeltResp::EquipSmeltResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.EquipSmeltResp)
}

void EquipSmeltResp::InitAsDefaultInstance() {
  equip_ = const_cast< ::DataCommon::EquipmentCPP*>(&::DataCommon::EquipmentCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

EquipSmeltResp::EquipSmeltResp(const EquipSmeltResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.EquipSmeltResp)
}

void EquipSmeltResp::SharedCtor() {
  _cached_size_ = 0;
  equip_ = NULL;
  hero_ = NULL;
  refresh_ = 0u;
  arefresh_ = 0u;
  cash_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSmeltResp::~EquipSmeltResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.EquipSmeltResp)
  SharedDtor();
}

void EquipSmeltResp::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
    delete hero_;
  }
}

void EquipSmeltResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSmeltResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSmeltResp_descriptor_;
}

const EquipSmeltResp& EquipSmeltResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

EquipSmeltResp* EquipSmeltResp::default_instance_ = NULL;

EquipSmeltResp* EquipSmeltResp::New() const {
  return new EquipSmeltResp;
}

void EquipSmeltResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipSmeltResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(refresh_, cash_);
    if (has_equip()) {
      if (equip_ != NULL) equip_->::DataCommon::EquipmentCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSmeltResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.EquipSmeltResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.EquipmentCPP equip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_refresh;
        break;
      }

      // required uint32 refresh = 3;
      case 3: {
        if (tag == 24) {
         parse_refresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_arefresh;
        break;
      }

      // required uint32 arefresh = 4;
      case 4: {
        if (tag == 32) {
         parse_arefresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arefresh_)));
          set_has_arefresh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash;
        break;
      }

      // required uint32 cash = 5;
      case 5: {
        if (tag == 40) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.EquipSmeltResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.EquipSmeltResp)
  return false;
#undef DO_
}

void EquipSmeltResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.EquipSmeltResp)
  // required .DataCommon.EquipmentCPP equip = 1;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equip(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  // required uint32 refresh = 3;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refresh(), output);
  }

  // required uint32 arefresh = 4;
  if (has_arefresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->arefresh(), output);
  }

  // required uint32 cash = 5;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.EquipSmeltResp)
}

::google::protobuf::uint8* EquipSmeltResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.EquipSmeltResp)
  // required .DataCommon.EquipmentCPP equip = 1;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equip(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  // required uint32 refresh = 3;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refresh(), target);
  }

  // required uint32 arefresh = 4;
  if (has_arefresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->arefresh(), target);
  }

  // required uint32 cash = 5;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.EquipSmeltResp)
  return target;
}

int EquipSmeltResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.EquipmentCPP equip = 1;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // required uint32 refresh = 3;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refresh());
    }

    // required uint32 arefresh = 4;
    if (has_arefresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->arefresh());
    }

    // required uint32 cash = 5;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSmeltResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSmeltResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSmeltResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSmeltResp::MergeFrom(const EquipSmeltResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip()) {
      mutable_equip()->::DataCommon::EquipmentCPP::MergeFrom(from.equip());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
    if (from.has_arefresh()) {
      set_arefresh(from.arefresh());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSmeltResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSmeltResp::CopyFrom(const EquipSmeltResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSmeltResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_equip()) {
    if (!this->equip().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void EquipSmeltResp::Swap(EquipSmeltResp* other) {
  if (other != this) {
    std::swap(equip_, other->equip_);
    std::swap(hero_, other->hero_);
    std::swap(refresh_, other->refresh_);
    std::swap(arefresh_, other->arefresh_);
    std::swap(cash_, other->cash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSmeltResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSmeltResp_descriptor_;
  metadata.reflection = EquipSmeltResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSmeltPropReq::kPropUdFieldNumber;
const int EquipSmeltPropReq::kEquipUdFieldNumber;
#endif  // !_MSC_VER

EquipSmeltPropReq::EquipSmeltPropReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.EquipSmeltPropReq)
}

void EquipSmeltPropReq::InitAsDefaultInstance() {
}

EquipSmeltPropReq::EquipSmeltPropReq(const EquipSmeltPropReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.EquipSmeltPropReq)
}

void EquipSmeltPropReq::SharedCtor() {
  _cached_size_ = 0;
  prop_ud_ = 0u;
  equip_ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSmeltPropReq::~EquipSmeltPropReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.EquipSmeltPropReq)
  SharedDtor();
}

void EquipSmeltPropReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSmeltPropReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSmeltPropReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSmeltPropReq_descriptor_;
}

const EquipSmeltPropReq& EquipSmeltPropReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

EquipSmeltPropReq* EquipSmeltPropReq::default_instance_ = NULL;

EquipSmeltPropReq* EquipSmeltPropReq::New() const {
  return new EquipSmeltPropReq;
}

void EquipSmeltPropReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipSmeltPropReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(prop_ud_, equip_ud_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSmeltPropReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.EquipSmeltPropReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 prop_ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_ud_)));
          set_has_prop_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_equip_ud;
        break;
      }

      // required uint32 equip_ud = 2;
      case 2: {
        if (tag == 16) {
         parse_equip_ud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_ud_)));
          set_has_equip_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.EquipSmeltPropReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.EquipSmeltPropReq)
  return false;
#undef DO_
}

void EquipSmeltPropReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.EquipSmeltPropReq)
  // required uint32 prop_ud = 1;
  if (has_prop_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prop_ud(), output);
  }

  // required uint32 equip_ud = 2;
  if (has_equip_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equip_ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.EquipSmeltPropReq)
}

::google::protobuf::uint8* EquipSmeltPropReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.EquipSmeltPropReq)
  // required uint32 prop_ud = 1;
  if (has_prop_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prop_ud(), target);
  }

  // required uint32 equip_ud = 2;
  if (has_equip_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equip_ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.EquipSmeltPropReq)
  return target;
}

int EquipSmeltPropReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 prop_ud = 1;
    if (has_prop_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prop_ud());
    }

    // required uint32 equip_ud = 2;
    if (has_equip_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equip_ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSmeltPropReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSmeltPropReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSmeltPropReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSmeltPropReq::MergeFrom(const EquipSmeltPropReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prop_ud()) {
      set_prop_ud(from.prop_ud());
    }
    if (from.has_equip_ud()) {
      set_equip_ud(from.equip_ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSmeltPropReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSmeltPropReq::CopyFrom(const EquipSmeltPropReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSmeltPropReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EquipSmeltPropReq::Swap(EquipSmeltPropReq* other) {
  if (other != this) {
    std::swap(prop_ud_, other->prop_ud_);
    std::swap(equip_ud_, other->equip_ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSmeltPropReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSmeltPropReq_descriptor_;
  metadata.reflection = EquipSmeltPropReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSmeltPropResp::kPropUdFieldNumber;
const int EquipSmeltPropResp::kPropCntFieldNumber;
const int EquipSmeltPropResp::kEquipFieldNumber;
const int EquipSmeltPropResp::kHeroFieldNumber;
#endif  // !_MSC_VER

EquipSmeltPropResp::EquipSmeltPropResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.EquipSmeltPropResp)
}

void EquipSmeltPropResp::InitAsDefaultInstance() {
  equip_ = const_cast< ::DataCommon::EquipmentCPP*>(&::DataCommon::EquipmentCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

EquipSmeltPropResp::EquipSmeltPropResp(const EquipSmeltPropResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.EquipSmeltPropResp)
}

void EquipSmeltPropResp::SharedCtor() {
  _cached_size_ = 0;
  prop_ud_ = 0u;
  prop_cnt_ = 0u;
  equip_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSmeltPropResp::~EquipSmeltPropResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.EquipSmeltPropResp)
  SharedDtor();
}

void EquipSmeltPropResp::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
    delete hero_;
  }
}

void EquipSmeltPropResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSmeltPropResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSmeltPropResp_descriptor_;
}

const EquipSmeltPropResp& EquipSmeltPropResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

EquipSmeltPropResp* EquipSmeltPropResp::default_instance_ = NULL;

EquipSmeltPropResp* EquipSmeltPropResp::New() const {
  return new EquipSmeltPropResp;
}

void EquipSmeltPropResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipSmeltPropResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(prop_ud_, prop_cnt_);
    if (has_equip()) {
      if (equip_ != NULL) equip_->::DataCommon::EquipmentCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSmeltPropResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.EquipSmeltPropResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 prop_ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_ud_)));
          set_has_prop_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_prop_cnt;
        break;
      }

      // required uint32 prop_cnt = 2;
      case 2: {
        if (tag == 16) {
         parse_prop_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_cnt_)));
          set_has_prop_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_equip;
        break;
      }

      // required .DataCommon.EquipmentCPP equip = 3;
      case 3: {
        if (tag == 26) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_hero;
        break;
      }

      // optional .ProtoHero.HeroBaseInfoCPP hero = 4;
      case 4: {
        if (tag == 34) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.EquipSmeltPropResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.EquipSmeltPropResp)
  return false;
#undef DO_
}

void EquipSmeltPropResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.EquipSmeltPropResp)
  // required uint32 prop_ud = 1;
  if (has_prop_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prop_ud(), output);
  }

  // required uint32 prop_cnt = 2;
  if (has_prop_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prop_cnt(), output);
  }

  // required .DataCommon.EquipmentCPP equip = 3;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->equip(), output);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 4;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.EquipSmeltPropResp)
}

::google::protobuf::uint8* EquipSmeltPropResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.EquipSmeltPropResp)
  // required uint32 prop_ud = 1;
  if (has_prop_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prop_ud(), target);
  }

  // required uint32 prop_cnt = 2;
  if (has_prop_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prop_cnt(), target);
  }

  // required .DataCommon.EquipmentCPP equip = 3;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->equip(), target);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 4;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.EquipSmeltPropResp)
  return target;
}

int EquipSmeltPropResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 prop_ud = 1;
    if (has_prop_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prop_ud());
    }

    // required uint32 prop_cnt = 2;
    if (has_prop_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prop_cnt());
    }

    // required .DataCommon.EquipmentCPP equip = 3;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

    // optional .ProtoHero.HeroBaseInfoCPP hero = 4;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSmeltPropResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSmeltPropResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSmeltPropResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSmeltPropResp::MergeFrom(const EquipSmeltPropResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prop_ud()) {
      set_prop_ud(from.prop_ud());
    }
    if (from.has_prop_cnt()) {
      set_prop_cnt(from.prop_cnt());
    }
    if (from.has_equip()) {
      mutable_equip()->::DataCommon::EquipmentCPP::MergeFrom(from.equip());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSmeltPropResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSmeltPropResp::CopyFrom(const EquipSmeltPropResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSmeltPropResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_equip()) {
    if (!this->equip().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void EquipSmeltPropResp::Swap(EquipSmeltPropResp* other) {
  if (other != this) {
    std::swap(prop_ud_, other->prop_ud_);
    std::swap(prop_cnt_, other->prop_cnt_);
    std::swap(equip_, other->equip_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSmeltPropResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSmeltPropResp_descriptor_;
  metadata.reflection = EquipSmeltPropResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseHeroexpPropsReq::kEqudFieldNumber;
const int UseHeroexpPropsReq::kHeroidFieldNumber;
const int UseHeroexpPropsReq::kCountFieldNumber;
const int UseHeroexpPropsReq::kEqidFieldNumber;
#endif  // !_MSC_VER

UseHeroexpPropsReq::UseHeroexpPropsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UseHeroexpPropsReq)
}

void UseHeroexpPropsReq::InitAsDefaultInstance() {
}

UseHeroexpPropsReq::UseHeroexpPropsReq(const UseHeroexpPropsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UseHeroexpPropsReq)
}

void UseHeroexpPropsReq::SharedCtor() {
  _cached_size_ = 0;
  equd_ = 0u;
  heroid_ = 0u;
  count_ = 0u;
  eqid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseHeroexpPropsReq::~UseHeroexpPropsReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.UseHeroexpPropsReq)
  SharedDtor();
}

void UseHeroexpPropsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseHeroexpPropsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHeroexpPropsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHeroexpPropsReq_descriptor_;
}

const UseHeroexpPropsReq& UseHeroexpPropsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UseHeroexpPropsReq* UseHeroexpPropsReq::default_instance_ = NULL;

UseHeroexpPropsReq* UseHeroexpPropsReq::New() const {
  return new UseHeroexpPropsReq;
}

void UseHeroexpPropsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UseHeroexpPropsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(equd_, eqid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseHeroexpPropsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UseHeroexpPropsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 equd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_heroid;
        break;
      }

      // required uint32 heroid = 2;
      case 2: {
        if (tag == 16) {
         parse_heroid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // required uint32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eqid;
        break;
      }

      // required uint32 eqid = 4;
      case 4: {
        if (tag == 32) {
         parse_eqid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eqid_)));
          set_has_eqid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UseHeroexpPropsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UseHeroexpPropsReq)
  return false;
#undef DO_
}

void UseHeroexpPropsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UseHeroexpPropsReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equd(), output);
  }

  // required uint32 heroid = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }

  // required uint32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // required uint32 eqid = 4;
  if (has_eqid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->eqid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UseHeroexpPropsReq)
}

::google::protobuf::uint8* UseHeroexpPropsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UseHeroexpPropsReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equd(), target);
  }

  // required uint32 heroid = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }

  // required uint32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // required uint32 eqid = 4;
  if (has_eqid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->eqid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UseHeroexpPropsReq)
  return target;
}

int UseHeroexpPropsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 equd = 1;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

    // required uint32 heroid = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // required uint32 eqid = 4;
    if (has_eqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eqid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHeroexpPropsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseHeroexpPropsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseHeroexpPropsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseHeroexpPropsReq::MergeFrom(const UseHeroexpPropsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equd()) {
      set_equd(from.equd());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_eqid()) {
      set_eqid(from.eqid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseHeroexpPropsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHeroexpPropsReq::CopyFrom(const UseHeroexpPropsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHeroexpPropsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UseHeroexpPropsReq::Swap(UseHeroexpPropsReq* other) {
  if (other != this) {
    std::swap(equd_, other->equd_);
    std::swap(heroid_, other->heroid_);
    std::swap(count_, other->count_);
    std::swap(eqid_, other->eqid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseHeroexpPropsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHeroexpPropsReq_descriptor_;
  metadata.reflection = UseHeroexpPropsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseHeroexpPropsResp::kEqudFieldNumber;
const int UseHeroexpPropsResp::kCountFieldNumber;
const int UseHeroexpPropsResp::kHeroFieldNumber;
#endif  // !_MSC_VER

UseHeroexpPropsResp::UseHeroexpPropsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UseHeroexpPropsResp)
}

void UseHeroexpPropsResp::InitAsDefaultInstance() {
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

UseHeroexpPropsResp::UseHeroexpPropsResp(const UseHeroexpPropsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UseHeroexpPropsResp)
}

void UseHeroexpPropsResp::SharedCtor() {
  _cached_size_ = 0;
  equd_ = 0u;
  count_ = 0u;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseHeroexpPropsResp::~UseHeroexpPropsResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.UseHeroexpPropsResp)
  SharedDtor();
}

void UseHeroexpPropsResp::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void UseHeroexpPropsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHeroexpPropsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHeroexpPropsResp_descriptor_;
}

const UseHeroexpPropsResp& UseHeroexpPropsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UseHeroexpPropsResp* UseHeroexpPropsResp::default_instance_ = NULL;

UseHeroexpPropsResp* UseHeroexpPropsResp::New() const {
  return new UseHeroexpPropsResp;
}

void UseHeroexpPropsResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UseHeroexpPropsResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(equd_, count_);
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseHeroexpPropsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UseHeroexpPropsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 equd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 3;
      case 3: {
        if (tag == 26) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UseHeroexpPropsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UseHeroexpPropsResp)
  return false;
#undef DO_
}

void UseHeroexpPropsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UseHeroexpPropsResp)
  // required uint32 equd = 1;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equd(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 3;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UseHeroexpPropsResp)
}

::google::protobuf::uint8* UseHeroexpPropsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UseHeroexpPropsResp)
  // required uint32 equd = 1;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equd(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 3;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UseHeroexpPropsResp)
  return target;
}

int UseHeroexpPropsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 equd = 1;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 3;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHeroexpPropsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseHeroexpPropsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseHeroexpPropsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseHeroexpPropsResp::MergeFrom(const UseHeroexpPropsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equd()) {
      set_equd(from.equd());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseHeroexpPropsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHeroexpPropsResp::CopyFrom(const UseHeroexpPropsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHeroexpPropsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void UseHeroexpPropsResp::Swap(UseHeroexpPropsResp* other) {
  if (other != this) {
    std::swap(equd_, other->equd_);
    std::swap(count_, other->count_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseHeroexpPropsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHeroexpPropsResp_descriptor_;
  metadata.reflection = UseHeroexpPropsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeSuitReq::kEqudFieldNumber;
const int ComposeSuitReq::kMaterialudFieldNumber;
#endif  // !_MSC_VER

ComposeSuitReq::ComposeSuitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.ComposeSuitReq)
}

void ComposeSuitReq::InitAsDefaultInstance() {
}

ComposeSuitReq::ComposeSuitReq(const ComposeSuitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.ComposeSuitReq)
}

void ComposeSuitReq::SharedCtor() {
  _cached_size_ = 0;
  equd_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeSuitReq::~ComposeSuitReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.ComposeSuitReq)
  SharedDtor();
}

void ComposeSuitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComposeSuitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeSuitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeSuitReq_descriptor_;
}

const ComposeSuitReq& ComposeSuitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

ComposeSuitReq* ComposeSuitReq::default_instance_ = NULL;

ComposeSuitReq* ComposeSuitReq::New() const {
  return new ComposeSuitReq;
}

void ComposeSuitReq::Clear() {
  equd_ = 0u;
  materialud_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeSuitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.ComposeSuitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 equd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equd_)));
          set_has_equd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_materialud;
        break;
      }

      // repeated uint32 materialud = 2;
      case 2: {
        if (tag == 16) {
         parse_materialud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_materialud())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_materialud())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_materialud;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.ComposeSuitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.ComposeSuitReq)
  return false;
#undef DO_
}

void ComposeSuitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.ComposeSuitReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equd(), output);
  }

  // repeated uint32 materialud = 2;
  for (int i = 0; i < this->materialud_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->materialud(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.ComposeSuitReq)
}

::google::protobuf::uint8* ComposeSuitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.ComposeSuitReq)
  // required uint32 equd = 1;
  if (has_equd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equd(), target);
  }

  // repeated uint32 materialud = 2;
  for (int i = 0; i < this->materialud_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->materialud(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.ComposeSuitReq)
  return target;
}

int ComposeSuitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 equd = 1;
    if (has_equd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equd());
    }

  }
  // repeated uint32 materialud = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->materialud_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->materialud(i));
    }
    total_size += 1 * this->materialud_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeSuitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeSuitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeSuitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeSuitReq::MergeFrom(const ComposeSuitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  materialud_.MergeFrom(from.materialud_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equd()) {
      set_equd(from.equd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeSuitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeSuitReq::CopyFrom(const ComposeSuitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeSuitReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComposeSuitReq::Swap(ComposeSuitReq* other) {
  if (other != this) {
    std::swap(equd_, other->equd_);
    materialud_.Swap(&other->materialud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeSuitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeSuitReq_descriptor_;
  metadata.reflection = ComposeSuitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeSuitResp::kEquipsFieldNumber;
const int ComposeSuitResp::kHeroFieldNumber;
#endif  // !_MSC_VER

ComposeSuitResp::ComposeSuitResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.ComposeSuitResp)
}

void ComposeSuitResp::InitAsDefaultInstance() {
  equips_ = const_cast< ::DataCommon::EquipmentAllCPP*>(&::DataCommon::EquipmentAllCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

ComposeSuitResp::ComposeSuitResp(const ComposeSuitResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.ComposeSuitResp)
}

void ComposeSuitResp::SharedCtor() {
  _cached_size_ = 0;
  equips_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeSuitResp::~ComposeSuitResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.ComposeSuitResp)
  SharedDtor();
}

void ComposeSuitResp::SharedDtor() {
  if (this != default_instance_) {
    delete equips_;
    delete hero_;
  }
}

void ComposeSuitResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeSuitResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeSuitResp_descriptor_;
}

const ComposeSuitResp& ComposeSuitResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

ComposeSuitResp* ComposeSuitResp::default_instance_ = NULL;

ComposeSuitResp* ComposeSuitResp::New() const {
  return new ComposeSuitResp;
}

void ComposeSuitResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_equips()) {
      if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeSuitResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.ComposeSuitResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.EquipmentAllCPP equips = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // optional .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.ComposeSuitResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.ComposeSuitResp)
  return false;
#undef DO_
}

void ComposeSuitResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.ComposeSuitResp)
  // required .DataCommon.EquipmentAllCPP equips = 1;
  if (has_equips()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(), output);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.ComposeSuitResp)
}

::google::protobuf::uint8* ComposeSuitResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.ComposeSuitResp)
  // required .DataCommon.EquipmentAllCPP equips = 1;
  if (has_equips()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(), target);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.ComposeSuitResp)
  return target;
}

int ComposeSuitResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.EquipmentAllCPP equips = 1;
    if (has_equips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equips());
    }

    // optional .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeSuitResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeSuitResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeSuitResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeSuitResp::MergeFrom(const ComposeSuitResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equips()) {
      mutable_equips()->::DataCommon::EquipmentAllCPP::MergeFrom(from.equips());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeSuitResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeSuitResp::CopyFrom(const ComposeSuitResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeSuitResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_equips()) {
    if (!this->equips().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void ComposeSuitResp::Swap(ComposeSuitResp* other) {
  if (other != this) {
    std::swap(equips_, other->equips_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeSuitResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeSuitResp_descriptor_;
  metadata.reflection = ComposeSuitResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

OpenParadeWindowReq::OpenParadeWindowReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OpenParadeWindowReq)
}

void OpenParadeWindowReq::InitAsDefaultInstance() {
}

OpenParadeWindowReq::OpenParadeWindowReq(const OpenParadeWindowReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OpenParadeWindowReq)
}

void OpenParadeWindowReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenParadeWindowReq::~OpenParadeWindowReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.OpenParadeWindowReq)
  SharedDtor();
}

void OpenParadeWindowReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenParadeWindowReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenParadeWindowReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenParadeWindowReq_descriptor_;
}

const OpenParadeWindowReq& OpenParadeWindowReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OpenParadeWindowReq* OpenParadeWindowReq::default_instance_ = NULL;

OpenParadeWindowReq* OpenParadeWindowReq::New() const {
  return new OpenParadeWindowReq;
}

void OpenParadeWindowReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenParadeWindowReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OpenParadeWindowReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OpenParadeWindowReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OpenParadeWindowReq)
  return false;
#undef DO_
}

void OpenParadeWindowReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OpenParadeWindowReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OpenParadeWindowReq)
}

::google::protobuf::uint8* OpenParadeWindowReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OpenParadeWindowReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OpenParadeWindowReq)
  return target;
}

int OpenParadeWindowReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenParadeWindowReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenParadeWindowReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenParadeWindowReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenParadeWindowReq::MergeFrom(const OpenParadeWindowReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenParadeWindowReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenParadeWindowReq::CopyFrom(const OpenParadeWindowReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenParadeWindowReq::IsInitialized() const {

  return true;
}

void OpenParadeWindowReq::Swap(OpenParadeWindowReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenParadeWindowReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenParadeWindowReq_descriptor_;
  metadata.reflection = OpenParadeWindowReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpenParadeWindowResp::kBanquetFieldNumber;
const int OpenParadeWindowResp::kSilkFieldNumber;
#endif  // !_MSC_VER

OpenParadeWindowResp::OpenParadeWindowResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OpenParadeWindowResp)
}

void OpenParadeWindowResp::InitAsDefaultInstance() {
}

OpenParadeWindowResp::OpenParadeWindowResp(const OpenParadeWindowResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OpenParadeWindowResp)
}

void OpenParadeWindowResp::SharedCtor() {
  _cached_size_ = 0;
  banquet_ = 0u;
  silk_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenParadeWindowResp::~OpenParadeWindowResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.OpenParadeWindowResp)
  SharedDtor();
}

void OpenParadeWindowResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenParadeWindowResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenParadeWindowResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenParadeWindowResp_descriptor_;
}

const OpenParadeWindowResp& OpenParadeWindowResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OpenParadeWindowResp* OpenParadeWindowResp::default_instance_ = NULL;

OpenParadeWindowResp* OpenParadeWindowResp::New() const {
  return new OpenParadeWindowResp;
}

void OpenParadeWindowResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OpenParadeWindowResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(banquet_, silk_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpenParadeWindowResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OpenParadeWindowResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 banquet = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banquet_)));
          set_has_banquet();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_silk;
        break;
      }

      // required uint32 silk = 2;
      case 2: {
        if (tag == 16) {
         parse_silk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &silk_)));
          set_has_silk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OpenParadeWindowResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OpenParadeWindowResp)
  return false;
#undef DO_
}

void OpenParadeWindowResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OpenParadeWindowResp)
  // required uint32 banquet = 1;
  if (has_banquet()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->banquet(), output);
  }

  // required uint32 silk = 2;
  if (has_silk()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->silk(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OpenParadeWindowResp)
}

::google::protobuf::uint8* OpenParadeWindowResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OpenParadeWindowResp)
  // required uint32 banquet = 1;
  if (has_banquet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->banquet(), target);
  }

  // required uint32 silk = 2;
  if (has_silk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->silk(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OpenParadeWindowResp)
  return target;
}

int OpenParadeWindowResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 banquet = 1;
    if (has_banquet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banquet());
    }

    // required uint32 silk = 2;
    if (has_silk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->silk());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenParadeWindowResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpenParadeWindowResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpenParadeWindowResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenParadeWindowResp::MergeFrom(const OpenParadeWindowResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_banquet()) {
      set_banquet(from.banquet());
    }
    if (from.has_silk()) {
      set_silk(from.silk());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpenParadeWindowResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenParadeWindowResp::CopyFrom(const OpenParadeWindowResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenParadeWindowResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void OpenParadeWindowResp::Swap(OpenParadeWindowResp* other) {
  if (other != this) {
    std::swap(banquet_, other->banquet_);
    std::swap(silk_, other->silk_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpenParadeWindowResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenParadeWindowResp_descriptor_;
  metadata.reflection = OpenParadeWindowResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ParadeReq::ParadeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.ParadeReq)
}

void ParadeReq::InitAsDefaultInstance() {
}

ParadeReq::ParadeReq(const ParadeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.ParadeReq)
}

void ParadeReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParadeReq::~ParadeReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.ParadeReq)
  SharedDtor();
}

void ParadeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ParadeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParadeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParadeReq_descriptor_;
}

const ParadeReq& ParadeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

ParadeReq* ParadeReq::default_instance_ = NULL;

ParadeReq* ParadeReq::New() const {
  return new ParadeReq;
}

void ParadeReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParadeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.ParadeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.ParadeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.ParadeReq)
  return false;
#undef DO_
}

void ParadeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.ParadeReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.ParadeReq)
}

::google::protobuf::uint8* ParadeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.ParadeReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.ParadeReq)
  return target;
}

int ParadeReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParadeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParadeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParadeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParadeReq::MergeFrom(const ParadeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParadeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParadeReq::CopyFrom(const ParadeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParadeReq::IsInitialized() const {

  return true;
}

void ParadeReq::Swap(ParadeReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParadeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParadeReq_descriptor_;
  metadata.reflection = ParadeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ParadeResp::kBanquetFieldNumber;
const int ParadeResp::kSilkFieldNumber;
const int ParadeResp::kIdFieldNumber;
#endif  // !_MSC_VER

ParadeResp::ParadeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.ParadeResp)
}

void ParadeResp::InitAsDefaultInstance() {
}

ParadeResp::ParadeResp(const ParadeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.ParadeResp)
}

void ParadeResp::SharedCtor() {
  _cached_size_ = 0;
  banquet_ = 0u;
  silk_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParadeResp::~ParadeResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.ParadeResp)
  SharedDtor();
}

void ParadeResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ParadeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParadeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParadeResp_descriptor_;
}

const ParadeResp& ParadeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

ParadeResp* ParadeResp::default_instance_ = NULL;

ParadeResp* ParadeResp::New() const {
  return new ParadeResp;
}

void ParadeResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ParadeResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(banquet_, silk_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParadeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.ParadeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 banquet = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banquet_)));
          set_has_banquet();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_silk;
        break;
      }

      // required uint32 silk = 2;
      case 2: {
        if (tag == 16) {
         parse_silk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &silk_)));
          set_has_silk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // repeated uint32 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.ParadeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.ParadeResp)
  return false;
#undef DO_
}

void ParadeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.ParadeResp)
  // required uint32 banquet = 1;
  if (has_banquet()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->banquet(), output);
  }

  // required uint32 silk = 2;
  if (has_silk()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->silk(), output);
  }

  // repeated uint32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.ParadeResp)
}

::google::protobuf::uint8* ParadeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.ParadeResp)
  // required uint32 banquet = 1;
  if (has_banquet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->banquet(), target);
  }

  // required uint32 silk = 2;
  if (has_silk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->silk(), target);
  }

  // repeated uint32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.ParadeResp)
  return target;
}

int ParadeResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 banquet = 1;
    if (has_banquet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banquet());
    }

    // required uint32 silk = 2;
    if (has_silk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->silk());
    }

  }
  // repeated uint32 id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParadeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParadeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParadeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParadeResp::MergeFrom(const ParadeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_banquet()) {
      set_banquet(from.banquet());
    }
    if (from.has_silk()) {
      set_silk(from.silk());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParadeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParadeResp::CopyFrom(const ParadeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParadeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ParadeResp::Swap(ParadeResp* other) {
  if (other != this) {
    std::swap(banquet_, other->banquet_);
    std::swap(silk_, other->silk_);
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParadeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParadeResp_descriptor_;
  metadata.reflection = ParadeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoadCompoReq::kHeroidFieldNumber;
const int LoadCompoReq::kCompudFieldNumber;
const int LoadCompoReq::kPosFieldNumber;
const int LoadCompoReq::kOldcompudFieldNumber;
#endif  // !_MSC_VER

LoadCompoReq::LoadCompoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.LoadCompoReq)
}

void LoadCompoReq::InitAsDefaultInstance() {
}

LoadCompoReq::LoadCompoReq(const LoadCompoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.LoadCompoReq)
}

void LoadCompoReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  compud_ = 0u;
  pos_ = 0u;
  oldcompud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoadCompoReq::~LoadCompoReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.LoadCompoReq)
  SharedDtor();
}

void LoadCompoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadCompoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadCompoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadCompoReq_descriptor_;
}

const LoadCompoReq& LoadCompoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

LoadCompoReq* LoadCompoReq::default_instance_ = NULL;

LoadCompoReq* LoadCompoReq::New() const {
  return new LoadCompoReq;
}

void LoadCompoReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LoadCompoReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroid_, oldcompud_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoadCompoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.LoadCompoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_compud;
        break;
      }

      // required uint32 compud = 2;
      case 2: {
        if (tag == 16) {
         parse_compud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compud_)));
          set_has_compud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // required uint32 pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_oldcompud;
        break;
      }

      // optional uint32 oldcompud = 4;
      case 4: {
        if (tag == 32) {
         parse_oldcompud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldcompud_)));
          set_has_oldcompud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.LoadCompoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.LoadCompoReq)
  return false;
#undef DO_
}

void LoadCompoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.LoadCompoReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 compud = 2;
  if (has_compud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->compud(), output);
  }

  // required uint32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  // optional uint32 oldcompud = 4;
  if (has_oldcompud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->oldcompud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.LoadCompoReq)
}

::google::protobuf::uint8* LoadCompoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.LoadCompoReq)
  // required uint32 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 compud = 2;
  if (has_compud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->compud(), target);
  }

  // required uint32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  // optional uint32 oldcompud = 4;
  if (has_oldcompud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->oldcompud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.LoadCompoReq)
  return target;
}

int LoadCompoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 compud = 2;
    if (has_compud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compud());
    }

    // required uint32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 oldcompud = 4;
    if (has_oldcompud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oldcompud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadCompoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoadCompoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoadCompoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoadCompoReq::MergeFrom(const LoadCompoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_compud()) {
      set_compud(from.compud());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_oldcompud()) {
      set_oldcompud(from.oldcompud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoadCompoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadCompoReq::CopyFrom(const LoadCompoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadCompoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void LoadCompoReq::Swap(LoadCompoReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(compud_, other->compud_);
    std::swap(pos_, other->pos_);
    std::swap(oldcompud_, other->oldcompud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoadCompoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadCompoReq_descriptor_;
  metadata.reflection = LoadCompoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoadCompoResp::kCompoallFieldNumber;
const int LoadCompoResp::kHeroFieldNumber;
#endif  // !_MSC_VER

LoadCompoResp::LoadCompoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.LoadCompoResp)
}

void LoadCompoResp::InitAsDefaultInstance() {
  compoall_ = const_cast< ::ProtoComponent::ComponentAllCPP*>(&::ProtoComponent::ComponentAllCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

LoadCompoResp::LoadCompoResp(const LoadCompoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.LoadCompoResp)
}

void LoadCompoResp::SharedCtor() {
  _cached_size_ = 0;
  compoall_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoadCompoResp::~LoadCompoResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.LoadCompoResp)
  SharedDtor();
}

void LoadCompoResp::SharedDtor() {
  if (this != default_instance_) {
    delete compoall_;
    delete hero_;
  }
}

void LoadCompoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadCompoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadCompoResp_descriptor_;
}

const LoadCompoResp& LoadCompoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

LoadCompoResp* LoadCompoResp::default_instance_ = NULL;

LoadCompoResp* LoadCompoResp::New() const {
  return new LoadCompoResp;
}

void LoadCompoResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_compoall()) {
      if (compoall_ != NULL) compoall_->::ProtoComponent::ComponentAllCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoadCompoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.LoadCompoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoComponent.ComponentAllCPP compoall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compoall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.LoadCompoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.LoadCompoResp)
  return false;
#undef DO_
}

void LoadCompoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.LoadCompoResp)
  // required .ProtoComponent.ComponentAllCPP compoall = 1;
  if (has_compoall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compoall(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.LoadCompoResp)
}

::google::protobuf::uint8* LoadCompoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.LoadCompoResp)
  // required .ProtoComponent.ComponentAllCPP compoall = 1;
  if (has_compoall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->compoall(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.LoadCompoResp)
  return target;
}

int LoadCompoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoComponent.ComponentAllCPP compoall = 1;
    if (has_compoall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compoall());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadCompoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoadCompoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoadCompoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoadCompoResp::MergeFrom(const LoadCompoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compoall()) {
      mutable_compoall()->::ProtoComponent::ComponentAllCPP::MergeFrom(from.compoall());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoadCompoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadCompoResp::CopyFrom(const LoadCompoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadCompoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_compoall()) {
    if (!this->compoall().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void LoadCompoResp::Swap(LoadCompoResp* other) {
  if (other != this) {
    std::swap(compoall_, other->compoall_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoadCompoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadCompoResp_descriptor_;
  metadata.reflection = LoadCompoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnLoadCompoReq::kCompudFieldNumber;
const int UnLoadCompoReq::kHeroidFieldNumber;
#endif  // !_MSC_VER

UnLoadCompoReq::UnLoadCompoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UnLoadCompoReq)
}

void UnLoadCompoReq::InitAsDefaultInstance() {
}

UnLoadCompoReq::UnLoadCompoReq(const UnLoadCompoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UnLoadCompoReq)
}

void UnLoadCompoReq::SharedCtor() {
  _cached_size_ = 0;
  compud_ = 0u;
  heroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnLoadCompoReq::~UnLoadCompoReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.UnLoadCompoReq)
  SharedDtor();
}

void UnLoadCompoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnLoadCompoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnLoadCompoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnLoadCompoReq_descriptor_;
}

const UnLoadCompoReq& UnLoadCompoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UnLoadCompoReq* UnLoadCompoReq::default_instance_ = NULL;

UnLoadCompoReq* UnLoadCompoReq::New() const {
  return new UnLoadCompoReq;
}

void UnLoadCompoReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UnLoadCompoReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(compud_, heroid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnLoadCompoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UnLoadCompoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 compud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compud_)));
          set_has_compud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_heroid;
        break;
      }

      // required uint32 heroid = 2;
      case 2: {
        if (tag == 16) {
         parse_heroid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UnLoadCompoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UnLoadCompoReq)
  return false;
#undef DO_
}

void UnLoadCompoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UnLoadCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compud(), output);
  }

  // required uint32 heroid = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UnLoadCompoReq)
}

::google::protobuf::uint8* UnLoadCompoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UnLoadCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compud(), target);
  }

  // required uint32 heroid = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UnLoadCompoReq)
  return target;
}

int UnLoadCompoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 compud = 1;
    if (has_compud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compud());
    }

    // required uint32 heroid = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnLoadCompoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnLoadCompoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnLoadCompoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnLoadCompoReq::MergeFrom(const UnLoadCompoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compud()) {
      set_compud(from.compud());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnLoadCompoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnLoadCompoReq::CopyFrom(const UnLoadCompoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnLoadCompoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UnLoadCompoReq::Swap(UnLoadCompoReq* other) {
  if (other != this) {
    std::swap(compud_, other->compud_);
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnLoadCompoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnLoadCompoReq_descriptor_;
  metadata.reflection = UnLoadCompoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnLoadCompoResp::kCompoFieldNumber;
const int UnLoadCompoResp::kHeroFieldNumber;
#endif  // !_MSC_VER

UnLoadCompoResp::UnLoadCompoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.UnLoadCompoResp)
}

void UnLoadCompoResp::InitAsDefaultInstance() {
  compo_ = const_cast< ::ProtoComponent::ComponentCPP*>(&::ProtoComponent::ComponentCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

UnLoadCompoResp::UnLoadCompoResp(const UnLoadCompoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.UnLoadCompoResp)
}

void UnLoadCompoResp::SharedCtor() {
  _cached_size_ = 0;
  compo_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnLoadCompoResp::~UnLoadCompoResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.UnLoadCompoResp)
  SharedDtor();
}

void UnLoadCompoResp::SharedDtor() {
  if (this != default_instance_) {
    delete compo_;
    delete hero_;
  }
}

void UnLoadCompoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnLoadCompoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnLoadCompoResp_descriptor_;
}

const UnLoadCompoResp& UnLoadCompoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

UnLoadCompoResp* UnLoadCompoResp::default_instance_ = NULL;

UnLoadCompoResp* UnLoadCompoResp::New() const {
  return new UnLoadCompoResp;
}

void UnLoadCompoResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_compo()) {
      if (compo_ != NULL) compo_->::ProtoComponent::ComponentCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnLoadCompoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.UnLoadCompoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoComponent.ComponentCPP compo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // required .ProtoHero.HeroBaseInfoCPP hero = 2;
      case 2: {
        if (tag == 18) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.UnLoadCompoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.UnLoadCompoResp)
  return false;
#undef DO_
}

void UnLoadCompoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.UnLoadCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compo(), output);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.UnLoadCompoResp)
}

::google::protobuf::uint8* UnLoadCompoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.UnLoadCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->compo(), target);
  }

  // required .ProtoHero.HeroBaseInfoCPP hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.UnLoadCompoResp)
  return target;
}

int UnLoadCompoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoComponent.ComponentCPP compo = 1;
    if (has_compo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compo());
    }

    // required .ProtoHero.HeroBaseInfoCPP hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnLoadCompoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnLoadCompoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnLoadCompoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnLoadCompoResp::MergeFrom(const UnLoadCompoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compo()) {
      mutable_compo()->::ProtoComponent::ComponentCPP::MergeFrom(from.compo());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnLoadCompoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnLoadCompoResp::CopyFrom(const UnLoadCompoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnLoadCompoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_compo()) {
    if (!this->compo().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void UnLoadCompoResp::Swap(UnLoadCompoResp* other) {
  if (other != this) {
    std::swap(compo_, other->compo_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnLoadCompoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnLoadCompoResp_descriptor_;
  metadata.reflection = UnLoadCompoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StrengthenCompoReq::kCompudFieldNumber;
const int StrengthenCompoReq::kOthcompudFieldNumber;
#endif  // !_MSC_VER

StrengthenCompoReq::StrengthenCompoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.StrengthenCompoReq)
}

void StrengthenCompoReq::InitAsDefaultInstance() {
}

StrengthenCompoReq::StrengthenCompoReq(const StrengthenCompoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.StrengthenCompoReq)
}

void StrengthenCompoReq::SharedCtor() {
  _cached_size_ = 0;
  compud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StrengthenCompoReq::~StrengthenCompoReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.StrengthenCompoReq)
  SharedDtor();
}

void StrengthenCompoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StrengthenCompoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StrengthenCompoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StrengthenCompoReq_descriptor_;
}

const StrengthenCompoReq& StrengthenCompoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

StrengthenCompoReq* StrengthenCompoReq::default_instance_ = NULL;

StrengthenCompoReq* StrengthenCompoReq::New() const {
  return new StrengthenCompoReq;
}

void StrengthenCompoReq::Clear() {
  compud_ = 0u;
  othcompud_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StrengthenCompoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.StrengthenCompoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 compud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compud_)));
          set_has_compud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_othcompud;
        break;
      }

      // repeated uint32 othcompud = 2;
      case 2: {
        if (tag == 16) {
         parse_othcompud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_othcompud())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_othcompud())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_othcompud;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.StrengthenCompoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.StrengthenCompoReq)
  return false;
#undef DO_
}

void StrengthenCompoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.StrengthenCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compud(), output);
  }

  // repeated uint32 othcompud = 2;
  for (int i = 0; i < this->othcompud_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->othcompud(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.StrengthenCompoReq)
}

::google::protobuf::uint8* StrengthenCompoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.StrengthenCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compud(), target);
  }

  // repeated uint32 othcompud = 2;
  for (int i = 0; i < this->othcompud_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->othcompud(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.StrengthenCompoReq)
  return target;
}

int StrengthenCompoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 compud = 1;
    if (has_compud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compud());
    }

  }
  // repeated uint32 othcompud = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->othcompud_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->othcompud(i));
    }
    total_size += 1 * this->othcompud_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StrengthenCompoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StrengthenCompoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StrengthenCompoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StrengthenCompoReq::MergeFrom(const StrengthenCompoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  othcompud_.MergeFrom(from.othcompud_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compud()) {
      set_compud(from.compud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StrengthenCompoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrengthenCompoReq::CopyFrom(const StrengthenCompoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrengthenCompoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StrengthenCompoReq::Swap(StrengthenCompoReq* other) {
  if (other != this) {
    std::swap(compud_, other->compud_);
    othcompud_.Swap(&other->othcompud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StrengthenCompoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StrengthenCompoReq_descriptor_;
  metadata.reflection = StrengthenCompoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StrengthenCompoResp::kCompoFieldNumber;
const int StrengthenCompoResp::kDelcomposFieldNumber;
const int StrengthenCompoResp::kCoinFieldNumber;
const int StrengthenCompoResp::kWoodFieldNumber;
const int StrengthenCompoResp::kHeroFieldNumber;
#endif  // !_MSC_VER

StrengthenCompoResp::StrengthenCompoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.StrengthenCompoResp)
}

void StrengthenCompoResp::InitAsDefaultInstance() {
  compo_ = const_cast< ::ProtoComponent::ComponentCPP*>(&::ProtoComponent::ComponentCPP::default_instance());
  coin_ = const_cast< ::DataCommon::CostItemCPP*>(&::DataCommon::CostItemCPP::default_instance());
  wood_ = const_cast< ::DataCommon::CostItemCPP*>(&::DataCommon::CostItemCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

StrengthenCompoResp::StrengthenCompoResp(const StrengthenCompoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.StrengthenCompoResp)
}

void StrengthenCompoResp::SharedCtor() {
  _cached_size_ = 0;
  compo_ = NULL;
  coin_ = NULL;
  wood_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StrengthenCompoResp::~StrengthenCompoResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.StrengthenCompoResp)
  SharedDtor();
}

void StrengthenCompoResp::SharedDtor() {
  if (this != default_instance_) {
    delete compo_;
    delete coin_;
    delete wood_;
    delete hero_;
  }
}

void StrengthenCompoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StrengthenCompoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StrengthenCompoResp_descriptor_;
}

const StrengthenCompoResp& StrengthenCompoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

StrengthenCompoResp* StrengthenCompoResp::default_instance_ = NULL;

StrengthenCompoResp* StrengthenCompoResp::New() const {
  return new StrengthenCompoResp;
}

void StrengthenCompoResp::Clear() {
  if (_has_bits_[0 / 32] & 29) {
    if (has_compo()) {
      if (compo_ != NULL) compo_->::ProtoComponent::ComponentCPP::Clear();
    }
    if (has_coin()) {
      if (coin_ != NULL) coin_->::DataCommon::CostItemCPP::Clear();
    }
    if (has_wood()) {
      if (wood_ != NULL) wood_->::DataCommon::CostItemCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  delcompos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StrengthenCompoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.StrengthenCompoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoComponent.ComponentCPP compo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delcompos;
        break;
      }

      // repeated uint32 delcompos = 2;
      case 2: {
        if (tag == 16) {
         parse_delcompos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_delcompos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_delcompos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delcompos;
        if (input->ExpectTag(26)) goto parse_coin;
        break;
      }

      // required .DataCommon.CostItemCPP coin = 3;
      case 3: {
        if (tag == 26) {
         parse_coin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_wood;
        break;
      }

      // required .DataCommon.CostItemCPP wood = 4;
      case 4: {
        if (tag == 34) {
         parse_wood:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wood()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_hero;
        break;
      }

      // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
      case 5: {
        if (tag == 42) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.StrengthenCompoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.StrengthenCompoResp)
  return false;
#undef DO_
}

void StrengthenCompoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.StrengthenCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compo(), output);
  }

  // repeated uint32 delcompos = 2;
  for (int i = 0; i < this->delcompos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->delcompos(i), output);
  }

  // required .DataCommon.CostItemCPP coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->coin(), output);
  }

  // required .DataCommon.CostItemCPP wood = 4;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->wood(), output);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.StrengthenCompoResp)
}

::google::protobuf::uint8* StrengthenCompoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.StrengthenCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->compo(), target);
  }

  // repeated uint32 delcompos = 2;
  for (int i = 0; i < this->delcompos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->delcompos(i), target);
  }

  // required .DataCommon.CostItemCPP coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->coin(), target);
  }

  // required .DataCommon.CostItemCPP wood = 4;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->wood(), target);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.StrengthenCompoResp)
  return target;
}

int StrengthenCompoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoComponent.ComponentCPP compo = 1;
    if (has_compo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compo());
    }

    // required .DataCommon.CostItemCPP coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coin());
    }

    // required .DataCommon.CostItemCPP wood = 4;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wood());
    }

    // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  // repeated uint32 delcompos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->delcompos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->delcompos(i));
    }
    total_size += 1 * this->delcompos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StrengthenCompoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StrengthenCompoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StrengthenCompoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StrengthenCompoResp::MergeFrom(const StrengthenCompoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  delcompos_.MergeFrom(from.delcompos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compo()) {
      mutable_compo()->::ProtoComponent::ComponentCPP::MergeFrom(from.compo());
    }
    if (from.has_coin()) {
      mutable_coin()->::DataCommon::CostItemCPP::MergeFrom(from.coin());
    }
    if (from.has_wood()) {
      mutable_wood()->::DataCommon::CostItemCPP::MergeFrom(from.wood());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StrengthenCompoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrengthenCompoResp::CopyFrom(const StrengthenCompoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrengthenCompoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  if (has_compo()) {
    if (!this->compo().IsInitialized()) return false;
  }
  if (has_coin()) {
    if (!this->coin().IsInitialized()) return false;
  }
  if (has_wood()) {
    if (!this->wood().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void StrengthenCompoResp::Swap(StrengthenCompoResp* other) {
  if (other != this) {
    std::swap(compo_, other->compo_);
    delcompos_.Swap(&other->delcompos_);
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StrengthenCompoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StrengthenCompoResp_descriptor_;
  metadata.reflection = StrengthenCompoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneKeyStrengthenCompoReq::kCompudFieldNumber;
#endif  // !_MSC_VER

OneKeyStrengthenCompoReq::OneKeyStrengthenCompoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OneKeyStrengthenCompoReq)
}

void OneKeyStrengthenCompoReq::InitAsDefaultInstance() {
}

OneKeyStrengthenCompoReq::OneKeyStrengthenCompoReq(const OneKeyStrengthenCompoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OneKeyStrengthenCompoReq)
}

void OneKeyStrengthenCompoReq::SharedCtor() {
  _cached_size_ = 0;
  compud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneKeyStrengthenCompoReq::~OneKeyStrengthenCompoReq() {
  // @@protoc_insertion_point(destructor:ProtoHero.OneKeyStrengthenCompoReq)
  SharedDtor();
}

void OneKeyStrengthenCompoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OneKeyStrengthenCompoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneKeyStrengthenCompoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneKeyStrengthenCompoReq_descriptor_;
}

const OneKeyStrengthenCompoReq& OneKeyStrengthenCompoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OneKeyStrengthenCompoReq* OneKeyStrengthenCompoReq::default_instance_ = NULL;

OneKeyStrengthenCompoReq* OneKeyStrengthenCompoReq::New() const {
  return new OneKeyStrengthenCompoReq;
}

void OneKeyStrengthenCompoReq::Clear() {
  compud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneKeyStrengthenCompoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OneKeyStrengthenCompoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 compud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compud_)));
          set_has_compud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OneKeyStrengthenCompoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OneKeyStrengthenCompoReq)
  return false;
#undef DO_
}

void OneKeyStrengthenCompoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OneKeyStrengthenCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OneKeyStrengthenCompoReq)
}

::google::protobuf::uint8* OneKeyStrengthenCompoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OneKeyStrengthenCompoReq)
  // required uint32 compud = 1;
  if (has_compud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OneKeyStrengthenCompoReq)
  return target;
}

int OneKeyStrengthenCompoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 compud = 1;
    if (has_compud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneKeyStrengthenCompoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneKeyStrengthenCompoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneKeyStrengthenCompoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneKeyStrengthenCompoReq::MergeFrom(const OneKeyStrengthenCompoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compud()) {
      set_compud(from.compud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneKeyStrengthenCompoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneKeyStrengthenCompoReq::CopyFrom(const OneKeyStrengthenCompoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneKeyStrengthenCompoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OneKeyStrengthenCompoReq::Swap(OneKeyStrengthenCompoReq* other) {
  if (other != this) {
    std::swap(compud_, other->compud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneKeyStrengthenCompoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneKeyStrengthenCompoReq_descriptor_;
  metadata.reflection = OneKeyStrengthenCompoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneKeyStrengthenCompoResp::kCompoFieldNumber;
const int OneKeyStrengthenCompoResp::kDelcomposFieldNumber;
const int OneKeyStrengthenCompoResp::kCoinFieldNumber;
const int OneKeyStrengthenCompoResp::kWoodFieldNumber;
const int OneKeyStrengthenCompoResp::kHeroFieldNumber;
#endif  // !_MSC_VER

OneKeyStrengthenCompoResp::OneKeyStrengthenCompoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoHero.OneKeyStrengthenCompoResp)
}

void OneKeyStrengthenCompoResp::InitAsDefaultInstance() {
  compo_ = const_cast< ::ProtoComponent::ComponentCPP*>(&::ProtoComponent::ComponentCPP::default_instance());
  coin_ = const_cast< ::DataCommon::CostItemCPP*>(&::DataCommon::CostItemCPP::default_instance());
  wood_ = const_cast< ::DataCommon::CostItemCPP*>(&::DataCommon::CostItemCPP::default_instance());
  hero_ = const_cast< ::ProtoHero::HeroBaseInfoCPP*>(&::ProtoHero::HeroBaseInfoCPP::default_instance());
}

OneKeyStrengthenCompoResp::OneKeyStrengthenCompoResp(const OneKeyStrengthenCompoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoHero.OneKeyStrengthenCompoResp)
}

void OneKeyStrengthenCompoResp::SharedCtor() {
  _cached_size_ = 0;
  compo_ = NULL;
  coin_ = NULL;
  wood_ = NULL;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneKeyStrengthenCompoResp::~OneKeyStrengthenCompoResp() {
  // @@protoc_insertion_point(destructor:ProtoHero.OneKeyStrengthenCompoResp)
  SharedDtor();
}

void OneKeyStrengthenCompoResp::SharedDtor() {
  if (this != default_instance_) {
    delete compo_;
    delete coin_;
    delete wood_;
    delete hero_;
  }
}

void OneKeyStrengthenCompoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneKeyStrengthenCompoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneKeyStrengthenCompoResp_descriptor_;
}

const OneKeyStrengthenCompoResp& OneKeyStrengthenCompoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoHero_2eproto();
  return *default_instance_;
}

OneKeyStrengthenCompoResp* OneKeyStrengthenCompoResp::default_instance_ = NULL;

OneKeyStrengthenCompoResp* OneKeyStrengthenCompoResp::New() const {
  return new OneKeyStrengthenCompoResp;
}

void OneKeyStrengthenCompoResp::Clear() {
  if (_has_bits_[0 / 32] & 29) {
    if (has_compo()) {
      if (compo_ != NULL) compo_->::ProtoComponent::ComponentCPP::Clear();
    }
    if (has_coin()) {
      if (coin_ != NULL) coin_->::DataCommon::CostItemCPP::Clear();
    }
    if (has_wood()) {
      if (wood_ != NULL) wood_->::DataCommon::CostItemCPP::Clear();
    }
    if (has_hero()) {
      if (hero_ != NULL) hero_->::ProtoHero::HeroBaseInfoCPP::Clear();
    }
  }
  delcompos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneKeyStrengthenCompoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoHero.OneKeyStrengthenCompoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoComponent.ComponentCPP compo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delcompos;
        break;
      }

      // repeated uint32 delcompos = 2;
      case 2: {
        if (tag == 16) {
         parse_delcompos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_delcompos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_delcompos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delcompos;
        if (input->ExpectTag(26)) goto parse_coin;
        break;
      }

      // required .DataCommon.CostItemCPP coin = 3;
      case 3: {
        if (tag == 26) {
         parse_coin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_wood;
        break;
      }

      // required .DataCommon.CostItemCPP wood = 4;
      case 4: {
        if (tag == 34) {
         parse_wood:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wood()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_hero;
        break;
      }

      // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
      case 5: {
        if (tag == 42) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoHero.OneKeyStrengthenCompoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoHero.OneKeyStrengthenCompoResp)
  return false;
#undef DO_
}

void OneKeyStrengthenCompoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoHero.OneKeyStrengthenCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compo(), output);
  }

  // repeated uint32 delcompos = 2;
  for (int i = 0; i < this->delcompos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->delcompos(i), output);
  }

  // required .DataCommon.CostItemCPP coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->coin(), output);
  }

  // required .DataCommon.CostItemCPP wood = 4;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->wood(), output);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoHero.OneKeyStrengthenCompoResp)
}

::google::protobuf::uint8* OneKeyStrengthenCompoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHero.OneKeyStrengthenCompoResp)
  // required .ProtoComponent.ComponentCPP compo = 1;
  if (has_compo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->compo(), target);
  }

  // repeated uint32 delcompos = 2;
  for (int i = 0; i < this->delcompos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->delcompos(i), target);
  }

  // required .DataCommon.CostItemCPP coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->coin(), target);
  }

  // required .DataCommon.CostItemCPP wood = 4;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->wood(), target);
  }

  // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHero.OneKeyStrengthenCompoResp)
  return target;
}

int OneKeyStrengthenCompoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoComponent.ComponentCPP compo = 1;
    if (has_compo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compo());
    }

    // required .DataCommon.CostItemCPP coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coin());
    }

    // required .DataCommon.CostItemCPP wood = 4;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wood());
    }

    // optional .ProtoHero.HeroBaseInfoCPP hero = 5;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  // repeated uint32 delcompos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->delcompos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->delcompos(i));
    }
    total_size += 1 * this->delcompos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneKeyStrengthenCompoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneKeyStrengthenCompoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneKeyStrengthenCompoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneKeyStrengthenCompoResp::MergeFrom(const OneKeyStrengthenCompoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  delcompos_.MergeFrom(from.delcompos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compo()) {
      mutable_compo()->::ProtoComponent::ComponentCPP::MergeFrom(from.compo());
    }
    if (from.has_coin()) {
      mutable_coin()->::DataCommon::CostItemCPP::MergeFrom(from.coin());
    }
    if (from.has_wood()) {
      mutable_wood()->::DataCommon::CostItemCPP::MergeFrom(from.wood());
    }
    if (from.has_hero()) {
      mutable_hero()->::ProtoHero::HeroBaseInfoCPP::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneKeyStrengthenCompoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneKeyStrengthenCompoResp::CopyFrom(const OneKeyStrengthenCompoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneKeyStrengthenCompoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  if (has_compo()) {
    if (!this->compo().IsInitialized()) return false;
  }
  if (has_coin()) {
    if (!this->coin().IsInitialized()) return false;
  }
  if (has_wood()) {
    if (!this->wood().IsInitialized()) return false;
  }
  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void OneKeyStrengthenCompoResp::Swap(OneKeyStrengthenCompoResp* other) {
  if (other != this) {
    std::swap(compo_, other->compo_);
    delcompos_.Swap(&other->delcompos_);
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneKeyStrengthenCompoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneKeyStrengthenCompoResp_descriptor_;
  metadata.reflection = OneKeyStrengthenCompoResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoHero

// @@protoc_insertion_point(global_scope)
