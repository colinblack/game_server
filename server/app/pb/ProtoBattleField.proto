import "DataCommon.proto";

package ProtoBattleField;

message Hero {
	required uint32 id	 		= 1;//玩家英雄是英雄id，幻影和npc是全局编号
	repeated int32 property		= 2;//英雄属性
	repeated int32 hp			= 3;//各排血量
	repeated uint32 shape		= 4;//各排阵形 战场中有
	optional uint32 skill		= 5;//可释放技能数 战场中有
	required uint32 extraid	 	= 6;//副将id
	required uint32 city	 	= 7;//所在城市
	required uint32 gate	 	= 8;//所在关卡
	optional uint32 ouid		= 9;//幻影的uid,npc的kingdom 幻影和npc才有
	optional uint32 oid			= 10;//npc或幻影的hero id  幻影和npc才有
}
message City {
	required uint32 cid	 		= 1;
	required uint32 kingdom	 	= 2;
	required bool fight			= 3;//是否战斗
	required uint32 uid			= 4;//城主
	optional bytes name			= 5;
}
message Mission { //国家任务状态
	required uint32 m1	 		= 1;//任务1目标
	required uint32 m2			= 2;//任务2目标
	required uint32 m1status 	= 3;//任务1状态，0:DEF_LOSE,1:DEF_WIN,2:DEF_ING,3:DEF_OVER,4:ATK_LOSE,5:ATK_WIN,6:ATK_ING,6:ATK_OVER
	required uint32 m2status 	= 4;//任务2状态
}
message RMIField {
	required uint32 aid	 					= 1;
	required uint32 job	 					= 2;
	required bool is_atuo	 				= 3;
	required uint32 forbid_talk_ts	 		= 4;
	required uint32 forbid_move_ts	 		= 5;
	required uint32 silk	 				= 6;
}
message BattleReward {
	repeated uint32 c	 					= 1;//随机据点10
	repeated uint32 r	 					= 2;//随机奖励10
	required uint32 rp	 					= 4;//领取状态bit
	required uint32 ccd	 					= 5;//挑战城主cd
	required uint32 ctimes 					= 6;//城主奖励次数
}
message Field {//放在登录包中
	repeated Hero hero 			= 1;
	repeated City city		 	= 2;
	repeated Mission mission	= 3;
	required RMIField rmi		= 4;
	required BattleReward reward = 5;
}
message ResetBattleReward {
	repeated uint32 c	 					= 1;//随机据点 3*10*10
	repeated uint32 r	 					= 2;//随机奖励 3*10*10
}
message RequestBattleReward { 
	required uint32 index 					= 1;//随机奖励据点序号0-9
	required bool cash						= 2;
}
message ReplyBattleReward {
	required uint32 type 					= 1;//类型
	required uint32 count					= 2;//数量
	optional uint32 equd					= 3;
}

message HeroReward {
	required uint32 id			= 1;
	required uint32 hexp		= 2;//增加的英雄经验
	required uint32 occupy		= 3;//增加的累计攻城数
	required uint32 win			= 4;//增加的累计胜利单挑数
	required uint32 kill		= 5;//增加的累计杀敌数
}
message ItemReward{
	required uint32 id			= 1;
	required uint32 count		= 2;
}
message UserReward {
	required uint32 exp			= 1;//增加的人物经验
	required uint32 coin		= 2;//增加的银币
	required uint32 wood		= 3;//增加的木材
	required uint32 food		= 4;//增加的粮食
	required uint32 iron		= 5;//增加的镔铁
	required uint32 gem			= 6;//增加的龙鳞
	repeated HeroReward hexp	= 7;
	optional uint32 kill		= 8;//杀敌数  闯关结束才有
	optional uint32 hurt		= 9;//受伤  闯关结束才有
	optional uint32 head		= 10;//人头  闯关结束才有
	optional uint32 reward		= 11;//功勋 争霸才有
	optional uint32 bkill		= 12;//杀敌 争霸才有
	repeated ItemReward item	= 13;//物品奖励
}

message MissionState {//推送任务状态，3个，发布任务或任务完成、失败时推送
	repeated Mission mission	= 1;
}

message RequestHero {}
message HeroState {//推送英雄状态，停止移动或战斗阶段结束时推送
	repeated Hero hero 			= 1;
	optional UserReward reward	= 2;
}
message CityState {//推送城市状态，城市进入、离开战斗时推送
	repeated City city		 	= 1;
}

message RequestMove {//请求移动
	required uint32 id	 		= 1;//英雄id
	repeated uint32 cids 		= 2;//据点路径
}
message ReplyMove {
	required uint32 id	 		= 1;//英雄id
	required uint32 ts 			= 2;//当前时间
	required uint32 mts			= 3;//移动停止时间
}
message RequestStop {//请求停止
	required uint32 id	 		= 1;//英雄id
}

message RequestCityKingdom{
	repeated uint32 cid	 		= 1;
}
message ReplyCityKingdom{
	repeated uint32 cid			= 1;
	repeated uint32 kingdom		= 2;
	repeated bool fight			= 3;
}
message RequestCityCount{
	required uint32 cid	 		= 1;
}
message ReplyCityCount{
	repeated uint32 count		= 1;//3个国家人数
}

message RequestCityMaster{
	required uint32 cid	 		= 1;
}
message ReplyCityMaster{
	required uint32 uid			= 1;//城主
	optional bytes name			= 2;
	optional uint32 aid	 		= 3;//部门
	optional uint32 job	 		= 4;//职位
	optional uint32 level 		= 5;//等级
	repeated uint32 hero_ids	= 6;//对方英雄
	repeated uint32	hero_lvl	= 7; //英雄等级
	repeated uint32	hero_troops	= 8; //带兵量
	required uint32 reward		= 9;//奖励
	required uint32 next_reward	= 10;//下次奖励
	required uint32 ccd			= 11;//挑战cd ts
	required uint32 ctimes		= 12;//今日已领奖次数
}
message StartCityBattle {
	required uint32 cid	 		= 1;
	repeated uint32 hero		= 2;//上阵英雄
}
message RequestCityReward { 
	required uint32 cid 					= 1;
}
message ReplyCityReward {
	required uint32 type 					= 1;//类型
	required uint32 count					= 2;//数量
	optional uint32 equd					= 3;
}

message RequestCity {//进入城市观战
	required uint32 cid	 		= 1;
}
message RequestGate {//进入闯关观战
	required uint32 uid 		= 1;//闯关者的uid
}
message RequestRush {//进入单挑观战
	required uint32 uid 		= 1;//攻方
	required uint32 id	 		= 2;//攻方
	required uint32 euid 		= 3;//守方
	required uint32 eid	 		= 4;//守方
}
message RequestLadder {//进入竞技场观战
	required uint32 uid 		= 1;//竞技场的uid
}

message HeroUid {//用于战场
	required uint32 uid	 		= 1;//玩家是uid，1城防军， 2远征军， 3禁卫军， 4玩家幻影， 5闯关敌人
	required Hero hero			= 2;
}
message HidUid {//用于列表
	required uint32 uid	 		= 1;//玩家是uid，1城防军， 2远征军， 3禁卫军， 4玩家幻影， 5闯关敌人
	required uint32 id			= 2;//玩家英雄是英雄id，幻影和npc是全局编号
	optional uint32 ouid		= 3;//幻影的uid npc的kingdom
	optional uint32 oid			= 4;//npc或幻影的hero id
}
message UserInfo {//战场中有fig，战斗列表没有fig
	required uint32 uid	 		= 1;
	required bytes name			= 2;
	required uint32 kingdom		= 3;
	optional bytes fig			= 4;
}
message Turn {//进入战斗阶段后推送
	required uint32 a_shape 	= 1;//攻方战术伤害
	required uint32 d_shape 	= 2;//守方战术伤害
	required uint32 att_shape 	= 3;//攻方战术
	required uint32 def_shape 	= 4;//守方战术
	repeated uint32 a_skill		= 5;//攻方战法伤害
	repeated uint32 d_skill		= 6;//守方战法伤害
	repeated uint32 a_attack	= 7;//攻方普攻伤害
	repeated uint32 d_attack	= 8;//守方普攻伤害
	required uint32 ts			= 9;
	required uint32 nextts		= 10;
	optional uint32 a_explode	= 11;
	optional uint32 d_explode	= 12;
}
message ReplyCity {//回复或进入等待阶段后推送。
	repeated HeroUid attacker	= 1;
	repeated HeroUid defender	= 2;
	repeated UserInfo info		= 3;
	optional uint32 ts			= 4;//处于等待阶段才有
	optional uint32 nextts		= 5;//处于等待阶段才有
	optional Turn turn			= 6;//处于战斗阶段才有
	required uint32 gid			= 7;//地形
	required uint32 type		= 8;//战斗类型
	required uint32 cid			= 9;//争霸和单挑的城市
	required uint32 uid			= 10;//闯关者的uid
	required uint32 gate		= 11;//关卡
}
message QuitCity {//离开观战
	required uint32 cid	 		= 1;
}
message QuitGate {//离开观战
	required uint32 uid 		= 1;//闯关者的uid
}
message QuitRush {//离开观战
	required uint32 uid 		= 1;//攻方
	required uint32 id	 		= 2;//攻方
	required uint32 euid 		= 3;//守方
	required uint32 eid	 		= 4;//守方
}
message QuitLadder {//离开观战
	required uint32 uid 		= 1;//竞技场的uid
}

message RequestList {//请求队伍列表
	required uint32 cid	 		= 1;
	required bool attack		= 2;
	required uint32 page		= 3;
}
message ReplyList {
	repeated HidUid queue		= 1;
	repeated UserInfo info		= 2;
}
message SkillOrShapeCity {//释放技能或阵形
	required uint32 hid			= 1;
	required uint32 shape		= 2;//0123 0是技能
	required uint32 cid	 		= 3;
}
message SkillOrShapeGate {//释放技能或阵形
	required uint32 hid			= 1;
	required uint32 shape		= 2;//0123 0是技能
	required uint32 uid 		= 3;//闯关者的uid
}
message SkillOrShapeRush {//释放技能或阵形
	required uint32 hid			= 1;
	required uint32 shape		= 2;//0123 0是技能
	required uint32 uid 		= 3;//攻方
	required uint32 id	 		= 4;//攻方
	required uint32 euid 		= 5;//守方
	required uint32 eid	 		= 6;//守方
}
message SkillOrShapeLadder {//释放技能或阵形
	required uint32 hid			= 1;
	required uint32 shape		= 2;//0123 0是技能
	required uint32 uid 		= 3;//竞技场的uid
}

message BattleOver { //战斗结束后推送
	required bool attackerwin	= 1;
	optional UserReward reward	= 2;//闯关者才会收到
	optional uint32 gate		= 3;//闯关者才会收到
}
message StartRush{//请求单挑，返回ReplyCity，给被单挑方推送SendRush，消耗1000 coin 前端自己扣显示
	required uint32 id	 		= 1;//英雄
	required uint32 cid	 		= 2;//城市
}
message SendRush {//被单挑
	required uint32 uid 		= 1;//攻方
	required uint32 id	 		= 2;//攻方
	required uint32 euid 		= 3;//守方
	required uint32 eid	 		= 4;//守方
}
message RequestVision{//释放幻影
	required uint32 id	 		= 1;//英雄
	required uint32 cid	 		= 2;//城市
	optional uint32 equd		= 3;//幻影令ud
}
message ReplyVision{//回复幻影
	required uint32 id	 		= 1;//幻影的id
}
message ImmediatelyCity {//立即结束
	required uint32 cid	 		= 1;
}
message ImmediatelyGate {//立即结束
	required uint32 uid 		= 1;//闯关者的uid
}
message ImmediatelyRush{//立即结束
	required uint32 uid 		= 1;//攻方
	required uint32 id	 		= 2;//攻方
	required uint32 euid 		= 3;//守方
	required uint32 eid	 		= 4;//守方
}
message ImmediatelyLadder {//立即结束
	required uint32 uid 		= 1;//竞技场的uid
}

message NPCMove{//npc路径
	required uint32 id	 		= 1;//npc类型
	repeated uint32 cids 		= 2;//据点路径
}
message SendNPCMove{
	repeated NPCMove move		= 1;
}

message RequestRewardInfo {//请求奖励信息
}
message ReplyRewardInfo {
	repeated uint32 history		= 1;//最近据点历史 24*城市数
	required uint32 mkill		= 2;//本次国战期间杀敌数
	required uint32 kill		= 3;//今日杀敌
	required uint32 occupy		= 4;//今日占领
	required uint32 foccupy		= 5;//今日助攻
	required uint32 rush		= 6;//今日单挑
	required uint32 reward		= 7;//今日功勋
	required uint32 rewardb		= 8;//功勋宝箱数
	repeated Mission mission	= 9;//国家任务状态
	required uint32 mp1			= 10;//个人任务1，0不可领取，1可领取，2已领取
	required uint32 mp2			= 11;//个人任务2，0不可领取，1可领取，2已领取
	required uint32 mk1			= 12;//国家任务1，0可领取，1已领取
	required uint32 mk2			= 13;//国家任务2，0可领取，1已领取
	required uint32 mp3			= 14;//个人任务3，0可领取，1已领取，是否达成目标客户端自己计算
}

message RequestHistoryReward{//领取据点资源奖励
}
message ReplyHistoryReward 
{
	required uint32 rests	= 1;  //领取国战资源时间戳的时间
	required uint32 coin	= 2;   //银两
	optional uint32 iron 	= 3;  //镔铁
}

message RequestKillReward {//领取功勋进度奖励
	
}

//奖励只有一种，装备或或者资源等   根据optional字段的有无判断奖励的东西
message ReplyKillReward {
	optional	DataCommon.EquipmentAllCPP 		equips			= 1;
	optional	DataCommon.CommonBaseRewardCPP	base			= 2;
	required	uint32							exploit_box_cnt = 3; //最新的宝箱个数
	required	uint32							multiple		= 4; //资源暴击倍数 
	optional	uint32							equips_cnt		= 5; //有装备的情况奖励装备数
}


//国战个人奖励
message RequestMissionPersonalReward {//领取任务奖励
	required	uint32 		task_no = 1; //任务编号 (1,2,3)	
}
message ReplyMissionPersonalReward {
	optional	DataCommon.EquipmentAllCPP 		equips			= 1;
	repeated	uint32							equips_cnt		= 2;
	optional	DataCommon.CommonBaseRewardCPP	base			= 3;
	repeated	uint32							mp				= 4; //对应的三个个人任务最新状态值
	
}

//国战国家任务奖励
message RequestMissionCountryReward {//领取任务奖励
	required	uint32 		task_no = 1; //任务编号 (1,2)	
}
message ReplyMissionCountryReward {
	required	DataCommon.CommonBaseRewardCPP	base = 1;   //奖励
	repeated	uint32							mk	 = 2;	//对应的两个国战任务奖励
}

message RequestAuto{
	required bool b_atuo						= 1;
}

message RequestFight{
	repeated HeroUid attacker	= 1;
	repeated HeroUid defender	= 2;
	required uint32 gid			= 3;//地形
	required uint32 id			= 4;//自定义编号
}
message ReplyFight{
	required uint32 id			= 1;//自定义编号
	required Turn turn			= 2;
}
