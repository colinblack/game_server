// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoYellowVip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoYellowVip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoYellowVip {

namespace {

const ::google::protobuf::Descriptor* FinalRewardCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinalRewardCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* YellowVipCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YellowVipCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewerGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewerGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewerGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewerGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDailyGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDailyGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDailyGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDailyGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetYearDailyGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetYearDailyGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetYearDailyGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetYearDailyGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLevelGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLevelGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLevelGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLevelGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* QQZoneGetDailyGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QQZoneGetDailyGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* QQZoneGetDailyGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QQZoneGetDailyGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* QQZoneGetLevelGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QQZoneGetLevelGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* QQZoneGetLevelGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QQZoneGetLevelGiftResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoYellowVip_2eproto() {
  protobuf_AddDesc_ProtoYellowVip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoYellowVip.proto");
  GOOGLE_CHECK(file != NULL);
  FinalRewardCPP_descriptor_ = file->message_type(0);
  static const int FinalRewardCPP_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, wood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, iron_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, hammer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, order_),
  };
  FinalRewardCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinalRewardCPP_descriptor_,
      FinalRewardCPP::default_instance_,
      FinalRewardCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalRewardCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinalRewardCPP));
  YellowVipCPP_descriptor_ = file->message_type(1);
  static const int YellowVipCPP_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, newerstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, dailystatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, yearstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, levelstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, daily_reward_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, year_reward_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, qqzone_dailystatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, qqzone_daily_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, qqzone_levelstatus_),
  };
  YellowVipCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YellowVipCPP_descriptor_,
      YellowVipCPP::default_instance_,
      YellowVipCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YellowVipCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YellowVipCPP));
  GetNewerGiftReq_descriptor_ = file->message_type(2);
  static const int GetNewerGiftReq_offsets_[1] = {
  };
  GetNewerGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewerGiftReq_descriptor_,
      GetNewerGiftReq::default_instance_,
      GetNewerGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewerGiftReq));
  GetNewerGiftResp_descriptor_ = file->message_type(3);
  static const int GetNewerGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftResp, yellowvip_),
  };
  GetNewerGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewerGiftResp_descriptor_,
      GetNewerGiftResp::default_instance_,
      GetNewerGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewerGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewerGiftResp));
  GetDailyGiftReq_descriptor_ = file->message_type(4);
  static const int GetDailyGiftReq_offsets_[1] = {
  };
  GetDailyGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDailyGiftReq_descriptor_,
      GetDailyGiftReq::default_instance_,
      GetDailyGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDailyGiftReq));
  GetDailyGiftResp_descriptor_ = file->message_type(5);
  static const int GetDailyGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftResp, yellowvip_),
  };
  GetDailyGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDailyGiftResp_descriptor_,
      GetDailyGiftResp::default_instance_,
      GetDailyGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDailyGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDailyGiftResp));
  GetYearDailyGiftReq_descriptor_ = file->message_type(6);
  static const int GetYearDailyGiftReq_offsets_[1] = {
  };
  GetYearDailyGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetYearDailyGiftReq_descriptor_,
      GetYearDailyGiftReq::default_instance_,
      GetYearDailyGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetYearDailyGiftReq));
  GetYearDailyGiftResp_descriptor_ = file->message_type(7);
  static const int GetYearDailyGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftResp, yellowvip_),
  };
  GetYearDailyGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetYearDailyGiftResp_descriptor_,
      GetYearDailyGiftResp::default_instance_,
      GetYearDailyGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetYearDailyGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetYearDailyGiftResp));
  GetLevelGiftReq_descriptor_ = file->message_type(8);
  static const int GetLevelGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftReq, index_),
  };
  GetLevelGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLevelGiftReq_descriptor_,
      GetLevelGiftReq::default_instance_,
      GetLevelGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLevelGiftReq));
  GetLevelGiftResp_descriptor_ = file->message_type(9);
  static const int GetLevelGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftResp, yellowvip_),
  };
  GetLevelGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLevelGiftResp_descriptor_,
      GetLevelGiftResp::default_instance_,
      GetLevelGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLevelGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLevelGiftResp));
  QQZoneGetDailyGiftReq_descriptor_ = file->message_type(10);
  static const int QQZoneGetDailyGiftReq_offsets_[1] = {
  };
  QQZoneGetDailyGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QQZoneGetDailyGiftReq_descriptor_,
      QQZoneGetDailyGiftReq::default_instance_,
      QQZoneGetDailyGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QQZoneGetDailyGiftReq));
  QQZoneGetDailyGiftResp_descriptor_ = file->message_type(11);
  static const int QQZoneGetDailyGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftResp, yellowvip_),
  };
  QQZoneGetDailyGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QQZoneGetDailyGiftResp_descriptor_,
      QQZoneGetDailyGiftResp::default_instance_,
      QQZoneGetDailyGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetDailyGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QQZoneGetDailyGiftResp));
  QQZoneGetLevelGiftReq_descriptor_ = file->message_type(12);
  static const int QQZoneGetLevelGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftReq, index_),
  };
  QQZoneGetLevelGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QQZoneGetLevelGiftReq_descriptor_,
      QQZoneGetLevelGiftReq::default_instance_,
      QQZoneGetLevelGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QQZoneGetLevelGiftReq));
  QQZoneGetLevelGiftResp_descriptor_ = file->message_type(13);
  static const int QQZoneGetLevelGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftResp, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftResp, yellowvip_),
  };
  QQZoneGetLevelGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QQZoneGetLevelGiftResp_descriptor_,
      QQZoneGetLevelGiftResp::default_instance_,
      QQZoneGetLevelGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QQZoneGetLevelGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QQZoneGetLevelGiftResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoYellowVip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinalRewardCPP_descriptor_, &FinalRewardCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YellowVipCPP_descriptor_, &YellowVipCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewerGiftReq_descriptor_, &GetNewerGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewerGiftResp_descriptor_, &GetNewerGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDailyGiftReq_descriptor_, &GetDailyGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDailyGiftResp_descriptor_, &GetDailyGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetYearDailyGiftReq_descriptor_, &GetYearDailyGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetYearDailyGiftResp_descriptor_, &GetYearDailyGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLevelGiftReq_descriptor_, &GetLevelGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLevelGiftResp_descriptor_, &GetLevelGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QQZoneGetDailyGiftReq_descriptor_, &QQZoneGetDailyGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QQZoneGetDailyGiftResp_descriptor_, &QQZoneGetDailyGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QQZoneGetLevelGiftReq_descriptor_, &QQZoneGetLevelGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QQZoneGetLevelGiftResp_descriptor_, &QQZoneGetLevelGiftResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoYellowVip_2eproto() {
  delete FinalRewardCPP::default_instance_;
  delete FinalRewardCPP_reflection_;
  delete YellowVipCPP::default_instance_;
  delete YellowVipCPP_reflection_;
  delete GetNewerGiftReq::default_instance_;
  delete GetNewerGiftReq_reflection_;
  delete GetNewerGiftResp::default_instance_;
  delete GetNewerGiftResp_reflection_;
  delete GetDailyGiftReq::default_instance_;
  delete GetDailyGiftReq_reflection_;
  delete GetDailyGiftResp::default_instance_;
  delete GetDailyGiftResp_reflection_;
  delete GetYearDailyGiftReq::default_instance_;
  delete GetYearDailyGiftReq_reflection_;
  delete GetYearDailyGiftResp::default_instance_;
  delete GetYearDailyGiftResp_reflection_;
  delete GetLevelGiftReq::default_instance_;
  delete GetLevelGiftReq_reflection_;
  delete GetLevelGiftResp::default_instance_;
  delete GetLevelGiftResp_reflection_;
  delete QQZoneGetDailyGiftReq::default_instance_;
  delete QQZoneGetDailyGiftReq_reflection_;
  delete QQZoneGetDailyGiftResp::default_instance_;
  delete QQZoneGetDailyGiftResp_reflection_;
  delete QQZoneGetLevelGiftReq::default_instance_;
  delete QQZoneGetLevelGiftReq_reflection_;
  delete QQZoneGetLevelGiftResp::default_instance_;
  delete QQZoneGetLevelGiftResp_reflection_;
}

void protobuf_AddDesc_ProtoYellowVip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoYellowVip.proto\022\016ProtoYellowVip\032\020"
    "DataCommon.proto\"\224\001\n\016FinalRewardCPP\022+\n\006e"
    "quips\030\001 \001(\0132\033.DataCommon.EquipmentAllCPP"
    "\022\014\n\004coin\030\002 \001(\005\022\014\n\004wood\030\003 \001(\005\022\014\n\004food\030\004 \001"
    "(\005\022\014\n\004iron\030\005 \001(\005\022\016\n\006hammer\030\006 \001(\005\022\r\n\005orde"
    "r\030\007 \001(\005\"\351\001\n\014YellowVipCPP\022\023\n\013newerstatus\030"
    "\001 \002(\r\022\023\n\013dailystatus\030\002 \002(\r\022\022\n\nyearstatus"
    "\030\003 \002(\r\022\023\n\013levelstatus\030\004 \002(\r\022\031\n\021daily_rew"
    "ard_time\030\005 \002(\r\022\030\n\020year_reward_time\030\006 \002(\r"
    "\022\032\n\022qqzone_dailystatus\030\007 \002(\r\022\031\n\021qqzone_d"
    "aily_time\030\010 \002(\r\022\032\n\022qqzone_levelstatus\030\t "
    "\002(\r\"\021\n\017GetNewerGiftReq\"s\n\020GetNewerGiftRe"
    "sp\022.\n\006reward\030\001 \002(\0132\036.ProtoYellowVip.Fina"
    "lRewardCPP\022/\n\tyellowvip\030\002 \002(\0132\034.ProtoYel"
    "lowVip.YellowVipCPP\"\021\n\017GetDailyGiftReq\"s"
    "\n\020GetDailyGiftResp\022.\n\006reward\030\001 \002(\0132\036.Pro"
    "toYellowVip.FinalRewardCPP\022/\n\tyellowvip\030"
    "\002 \002(\0132\034.ProtoYellowVip.YellowVipCPP\"\025\n\023G"
    "etYearDailyGiftReq\"w\n\024GetYearDailyGiftRe"
    "sp\022.\n\006reward\030\001 \002(\0132\036.ProtoYellowVip.Fina"
    "lRewardCPP\022/\n\tyellowvip\030\002 \002(\0132\034.ProtoYel"
    "lowVip.YellowVipCPP\" \n\017GetLevelGiftReq\022\r"
    "\n\005index\030\001 \002(\r\"s\n\020GetLevelGiftResp\022.\n\006rew"
    "ard\030\001 \002(\0132\036.ProtoYellowVip.FinalRewardCP"
    "P\022/\n\tyellowvip\030\002 \002(\0132\034.ProtoYellowVip.Ye"
    "llowVipCPP\"\027\n\025QQZoneGetDailyGiftReq\"y\n\026Q"
    "QZoneGetDailyGiftResp\022.\n\006reward\030\001 \002(\0132\036."
    "ProtoYellowVip.FinalRewardCPP\022/\n\tyellowv"
    "ip\030\002 \002(\0132\034.ProtoYellowVip.YellowVipCPP\"&"
    "\n\025QQZoneGetLevelGiftReq\022\r\n\005index\030\001 \002(\r\"y"
    "\n\026QQZoneGetLevelGiftResp\022.\n\006reward\030\001 \002(\013"
    "2\036.ProtoYellowVip.FinalRewardCPP\022/\n\tyell"
    "owvip\030\002 \002(\0132\034.ProtoYellowVip.YellowVipCP"
    "P", 1321);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoYellowVip.proto", &protobuf_RegisterTypes);
  FinalRewardCPP::default_instance_ = new FinalRewardCPP();
  YellowVipCPP::default_instance_ = new YellowVipCPP();
  GetNewerGiftReq::default_instance_ = new GetNewerGiftReq();
  GetNewerGiftResp::default_instance_ = new GetNewerGiftResp();
  GetDailyGiftReq::default_instance_ = new GetDailyGiftReq();
  GetDailyGiftResp::default_instance_ = new GetDailyGiftResp();
  GetYearDailyGiftReq::default_instance_ = new GetYearDailyGiftReq();
  GetYearDailyGiftResp::default_instance_ = new GetYearDailyGiftResp();
  GetLevelGiftReq::default_instance_ = new GetLevelGiftReq();
  GetLevelGiftResp::default_instance_ = new GetLevelGiftResp();
  QQZoneGetDailyGiftReq::default_instance_ = new QQZoneGetDailyGiftReq();
  QQZoneGetDailyGiftResp::default_instance_ = new QQZoneGetDailyGiftResp();
  QQZoneGetLevelGiftReq::default_instance_ = new QQZoneGetLevelGiftReq();
  QQZoneGetLevelGiftResp::default_instance_ = new QQZoneGetLevelGiftResp();
  FinalRewardCPP::default_instance_->InitAsDefaultInstance();
  YellowVipCPP::default_instance_->InitAsDefaultInstance();
  GetNewerGiftReq::default_instance_->InitAsDefaultInstance();
  GetNewerGiftResp::default_instance_->InitAsDefaultInstance();
  GetDailyGiftReq::default_instance_->InitAsDefaultInstance();
  GetDailyGiftResp::default_instance_->InitAsDefaultInstance();
  GetYearDailyGiftReq::default_instance_->InitAsDefaultInstance();
  GetYearDailyGiftResp::default_instance_->InitAsDefaultInstance();
  GetLevelGiftReq::default_instance_->InitAsDefaultInstance();
  GetLevelGiftResp::default_instance_->InitAsDefaultInstance();
  QQZoneGetDailyGiftReq::default_instance_->InitAsDefaultInstance();
  QQZoneGetDailyGiftResp::default_instance_->InitAsDefaultInstance();
  QQZoneGetLevelGiftReq::default_instance_->InitAsDefaultInstance();
  QQZoneGetLevelGiftResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoYellowVip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoYellowVip_2eproto {
  StaticDescriptorInitializer_ProtoYellowVip_2eproto() {
    protobuf_AddDesc_ProtoYellowVip_2eproto();
  }
} static_descriptor_initializer_ProtoYellowVip_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int FinalRewardCPP::kEquipsFieldNumber;
const int FinalRewardCPP::kCoinFieldNumber;
const int FinalRewardCPP::kWoodFieldNumber;
const int FinalRewardCPP::kFoodFieldNumber;
const int FinalRewardCPP::kIronFieldNumber;
const int FinalRewardCPP::kHammerFieldNumber;
const int FinalRewardCPP::kOrderFieldNumber;
#endif  // !_MSC_VER

FinalRewardCPP::FinalRewardCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.FinalRewardCPP)
}

void FinalRewardCPP::InitAsDefaultInstance() {
  equips_ = const_cast< ::DataCommon::EquipmentAllCPP*>(&::DataCommon::EquipmentAllCPP::default_instance());
}

FinalRewardCPP::FinalRewardCPP(const FinalRewardCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.FinalRewardCPP)
}

void FinalRewardCPP::SharedCtor() {
  _cached_size_ = 0;
  equips_ = NULL;
  coin_ = 0;
  wood_ = 0;
  food_ = 0;
  iron_ = 0;
  hammer_ = 0;
  order_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinalRewardCPP::~FinalRewardCPP() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.FinalRewardCPP)
  SharedDtor();
}

void FinalRewardCPP::SharedDtor() {
  if (this != default_instance_) {
    delete equips_;
  }
}

void FinalRewardCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinalRewardCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinalRewardCPP_descriptor_;
}

const FinalRewardCPP& FinalRewardCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

FinalRewardCPP* FinalRewardCPP::default_instance_ = NULL;

FinalRewardCPP* FinalRewardCPP::New() const {
  return new FinalRewardCPP;
}

void FinalRewardCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FinalRewardCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(coin_, order_);
    if (has_equips()) {
      if (equips_ != NULL) equips_->::DataCommon::EquipmentAllCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinalRewardCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.FinalRewardCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataCommon.EquipmentAllCPP equips = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_coin;
        break;
      }

      // optional int32 coin = 2;
      case 2: {
        if (tag == 16) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_wood;
        break;
      }

      // optional int32 wood = 3;
      case 3: {
        if (tag == 24) {
         parse_wood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wood_)));
          set_has_wood();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_food;
        break;
      }

      // optional int32 food = 4;
      case 4: {
        if (tag == 32) {
         parse_food:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &food_)));
          set_has_food();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iron;
        break;
      }

      // optional int32 iron = 5;
      case 5: {
        if (tag == 40) {
         parse_iron:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iron_)));
          set_has_iron();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hammer;
        break;
      }

      // optional int32 hammer = 6;
      case 6: {
        if (tag == 48) {
         parse_hammer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hammer_)));
          set_has_hammer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.FinalRewardCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.FinalRewardCPP)
  return false;
#undef DO_
}

void FinalRewardCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.FinalRewardCPP)
  // optional .DataCommon.EquipmentAllCPP equips = 1;
  if (has_equips()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(), output);
  }

  // optional int32 coin = 2;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->coin(), output);
  }

  // optional int32 wood = 3;
  if (has_wood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wood(), output);
  }

  // optional int32 food = 4;
  if (has_food()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->food(), output);
  }

  // optional int32 iron = 5;
  if (has_iron()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->iron(), output);
  }

  // optional int32 hammer = 6;
  if (has_hammer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hammer(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.FinalRewardCPP)
}

::google::protobuf::uint8* FinalRewardCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.FinalRewardCPP)
  // optional .DataCommon.EquipmentAllCPP equips = 1;
  if (has_equips()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(), target);
  }

  // optional int32 coin = 2;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->coin(), target);
  }

  // optional int32 wood = 3;
  if (has_wood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wood(), target);
  }

  // optional int32 food = 4;
  if (has_food()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->food(), target);
  }

  // optional int32 iron = 5;
  if (has_iron()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->iron(), target);
  }

  // optional int32 hammer = 6;
  if (has_hammer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hammer(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.FinalRewardCPP)
  return target;
}

int FinalRewardCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DataCommon.EquipmentAllCPP equips = 1;
    if (has_equips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equips());
    }

    // optional int32 coin = 2;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // optional int32 wood = 3;
    if (has_wood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wood());
    }

    // optional int32 food = 4;
    if (has_food()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->food());
    }

    // optional int32 iron = 5;
    if (has_iron()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iron());
    }

    // optional int32 hammer = 6;
    if (has_hammer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hammer());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinalRewardCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinalRewardCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinalRewardCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinalRewardCPP::MergeFrom(const FinalRewardCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equips()) {
      mutable_equips()->::DataCommon::EquipmentAllCPP::MergeFrom(from.equips());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_wood()) {
      set_wood(from.wood());
    }
    if (from.has_food()) {
      set_food(from.food());
    }
    if (from.has_iron()) {
      set_iron(from.iron());
    }
    if (from.has_hammer()) {
      set_hammer(from.hammer());
    }
    if (from.has_order()) {
      set_order(from.order());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinalRewardCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinalRewardCPP::CopyFrom(const FinalRewardCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalRewardCPP::IsInitialized() const {

  if (has_equips()) {
    if (!this->equips().IsInitialized()) return false;
  }
  return true;
}

void FinalRewardCPP::Swap(FinalRewardCPP* other) {
  if (other != this) {
    std::swap(equips_, other->equips_);
    std::swap(coin_, other->coin_);
    std::swap(wood_, other->wood_);
    std::swap(food_, other->food_);
    std::swap(iron_, other->iron_);
    std::swap(hammer_, other->hammer_);
    std::swap(order_, other->order_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinalRewardCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinalRewardCPP_descriptor_;
  metadata.reflection = FinalRewardCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YellowVipCPP::kNewerstatusFieldNumber;
const int YellowVipCPP::kDailystatusFieldNumber;
const int YellowVipCPP::kYearstatusFieldNumber;
const int YellowVipCPP::kLevelstatusFieldNumber;
const int YellowVipCPP::kDailyRewardTimeFieldNumber;
const int YellowVipCPP::kYearRewardTimeFieldNumber;
const int YellowVipCPP::kQqzoneDailystatusFieldNumber;
const int YellowVipCPP::kQqzoneDailyTimeFieldNumber;
const int YellowVipCPP::kQqzoneLevelstatusFieldNumber;
#endif  // !_MSC_VER

YellowVipCPP::YellowVipCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.YellowVipCPP)
}

void YellowVipCPP::InitAsDefaultInstance() {
}

YellowVipCPP::YellowVipCPP(const YellowVipCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.YellowVipCPP)
}

void YellowVipCPP::SharedCtor() {
  _cached_size_ = 0;
  newerstatus_ = 0u;
  dailystatus_ = 0u;
  yearstatus_ = 0u;
  levelstatus_ = 0u;
  daily_reward_time_ = 0u;
  year_reward_time_ = 0u;
  qqzone_dailystatus_ = 0u;
  qqzone_daily_time_ = 0u;
  qqzone_levelstatus_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YellowVipCPP::~YellowVipCPP() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.YellowVipCPP)
  SharedDtor();
}

void YellowVipCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YellowVipCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YellowVipCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YellowVipCPP_descriptor_;
}

const YellowVipCPP& YellowVipCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

YellowVipCPP* YellowVipCPP::default_instance_ = NULL;

YellowVipCPP* YellowVipCPP::New() const {
  return new YellowVipCPP;
}

void YellowVipCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<YellowVipCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(newerstatus_, qqzone_daily_time_);
  }
  qqzone_levelstatus_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YellowVipCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.YellowVipCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 newerstatus = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newerstatus_)));
          set_has_newerstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dailystatus;
        break;
      }

      // required uint32 dailystatus = 2;
      case 2: {
        if (tag == 16) {
         parse_dailystatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dailystatus_)));
          set_has_dailystatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_yearstatus;
        break;
      }

      // required uint32 yearstatus = 3;
      case 3: {
        if (tag == 24) {
         parse_yearstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yearstatus_)));
          set_has_yearstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_levelstatus;
        break;
      }

      // required uint32 levelstatus = 4;
      case 4: {
        if (tag == 32) {
         parse_levelstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelstatus_)));
          set_has_levelstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_daily_reward_time;
        break;
      }

      // required uint32 daily_reward_time = 5;
      case 5: {
        if (tag == 40) {
         parse_daily_reward_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_reward_time_)));
          set_has_daily_reward_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_year_reward_time;
        break;
      }

      // required uint32 year_reward_time = 6;
      case 6: {
        if (tag == 48) {
         parse_year_reward_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &year_reward_time_)));
          set_has_year_reward_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_qqzone_dailystatus;
        break;
      }

      // required uint32 qqzone_dailystatus = 7;
      case 7: {
        if (tag == 56) {
         parse_qqzone_dailystatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qqzone_dailystatus_)));
          set_has_qqzone_dailystatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_qqzone_daily_time;
        break;
      }

      // required uint32 qqzone_daily_time = 8;
      case 8: {
        if (tag == 64) {
         parse_qqzone_daily_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qqzone_daily_time_)));
          set_has_qqzone_daily_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_qqzone_levelstatus;
        break;
      }

      // required uint32 qqzone_levelstatus = 9;
      case 9: {
        if (tag == 72) {
         parse_qqzone_levelstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qqzone_levelstatus_)));
          set_has_qqzone_levelstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.YellowVipCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.YellowVipCPP)
  return false;
#undef DO_
}

void YellowVipCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.YellowVipCPP)
  // required uint32 newerstatus = 1;
  if (has_newerstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->newerstatus(), output);
  }

  // required uint32 dailystatus = 2;
  if (has_dailystatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dailystatus(), output);
  }

  // required uint32 yearstatus = 3;
  if (has_yearstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->yearstatus(), output);
  }

  // required uint32 levelstatus = 4;
  if (has_levelstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->levelstatus(), output);
  }

  // required uint32 daily_reward_time = 5;
  if (has_daily_reward_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->daily_reward_time(), output);
  }

  // required uint32 year_reward_time = 6;
  if (has_year_reward_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->year_reward_time(), output);
  }

  // required uint32 qqzone_dailystatus = 7;
  if (has_qqzone_dailystatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->qqzone_dailystatus(), output);
  }

  // required uint32 qqzone_daily_time = 8;
  if (has_qqzone_daily_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->qqzone_daily_time(), output);
  }

  // required uint32 qqzone_levelstatus = 9;
  if (has_qqzone_levelstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->qqzone_levelstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.YellowVipCPP)
}

::google::protobuf::uint8* YellowVipCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.YellowVipCPP)
  // required uint32 newerstatus = 1;
  if (has_newerstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->newerstatus(), target);
  }

  // required uint32 dailystatus = 2;
  if (has_dailystatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dailystatus(), target);
  }

  // required uint32 yearstatus = 3;
  if (has_yearstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->yearstatus(), target);
  }

  // required uint32 levelstatus = 4;
  if (has_levelstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->levelstatus(), target);
  }

  // required uint32 daily_reward_time = 5;
  if (has_daily_reward_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->daily_reward_time(), target);
  }

  // required uint32 year_reward_time = 6;
  if (has_year_reward_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->year_reward_time(), target);
  }

  // required uint32 qqzone_dailystatus = 7;
  if (has_qqzone_dailystatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->qqzone_dailystatus(), target);
  }

  // required uint32 qqzone_daily_time = 8;
  if (has_qqzone_daily_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->qqzone_daily_time(), target);
  }

  // required uint32 qqzone_levelstatus = 9;
  if (has_qqzone_levelstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->qqzone_levelstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.YellowVipCPP)
  return target;
}

int YellowVipCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 newerstatus = 1;
    if (has_newerstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newerstatus());
    }

    // required uint32 dailystatus = 2;
    if (has_dailystatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dailystatus());
    }

    // required uint32 yearstatus = 3;
    if (has_yearstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yearstatus());
    }

    // required uint32 levelstatus = 4;
    if (has_levelstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->levelstatus());
    }

    // required uint32 daily_reward_time = 5;
    if (has_daily_reward_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->daily_reward_time());
    }

    // required uint32 year_reward_time = 6;
    if (has_year_reward_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->year_reward_time());
    }

    // required uint32 qqzone_dailystatus = 7;
    if (has_qqzone_dailystatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->qqzone_dailystatus());
    }

    // required uint32 qqzone_daily_time = 8;
    if (has_qqzone_daily_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->qqzone_daily_time());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 qqzone_levelstatus = 9;
    if (has_qqzone_levelstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->qqzone_levelstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YellowVipCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YellowVipCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YellowVipCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YellowVipCPP::MergeFrom(const YellowVipCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_newerstatus()) {
      set_newerstatus(from.newerstatus());
    }
    if (from.has_dailystatus()) {
      set_dailystatus(from.dailystatus());
    }
    if (from.has_yearstatus()) {
      set_yearstatus(from.yearstatus());
    }
    if (from.has_levelstatus()) {
      set_levelstatus(from.levelstatus());
    }
    if (from.has_daily_reward_time()) {
      set_daily_reward_time(from.daily_reward_time());
    }
    if (from.has_year_reward_time()) {
      set_year_reward_time(from.year_reward_time());
    }
    if (from.has_qqzone_dailystatus()) {
      set_qqzone_dailystatus(from.qqzone_dailystatus());
    }
    if (from.has_qqzone_daily_time()) {
      set_qqzone_daily_time(from.qqzone_daily_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qqzone_levelstatus()) {
      set_qqzone_levelstatus(from.qqzone_levelstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YellowVipCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YellowVipCPP::CopyFrom(const YellowVipCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YellowVipCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void YellowVipCPP::Swap(YellowVipCPP* other) {
  if (other != this) {
    std::swap(newerstatus_, other->newerstatus_);
    std::swap(dailystatus_, other->dailystatus_);
    std::swap(yearstatus_, other->yearstatus_);
    std::swap(levelstatus_, other->levelstatus_);
    std::swap(daily_reward_time_, other->daily_reward_time_);
    std::swap(year_reward_time_, other->year_reward_time_);
    std::swap(qqzone_dailystatus_, other->qqzone_dailystatus_);
    std::swap(qqzone_daily_time_, other->qqzone_daily_time_);
    std::swap(qqzone_levelstatus_, other->qqzone_levelstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YellowVipCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YellowVipCPP_descriptor_;
  metadata.reflection = YellowVipCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetNewerGiftReq::GetNewerGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetNewerGiftReq)
}

void GetNewerGiftReq::InitAsDefaultInstance() {
}

GetNewerGiftReq::GetNewerGiftReq(const GetNewerGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetNewerGiftReq)
}

void GetNewerGiftReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewerGiftReq::~GetNewerGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetNewerGiftReq)
  SharedDtor();
}

void GetNewerGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNewerGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewerGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewerGiftReq_descriptor_;
}

const GetNewerGiftReq& GetNewerGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetNewerGiftReq* GetNewerGiftReq::default_instance_ = NULL;

GetNewerGiftReq* GetNewerGiftReq::New() const {
  return new GetNewerGiftReq;
}

void GetNewerGiftReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewerGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetNewerGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetNewerGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetNewerGiftReq)
  return false;
#undef DO_
}

void GetNewerGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetNewerGiftReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetNewerGiftReq)
}

::google::protobuf::uint8* GetNewerGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetNewerGiftReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetNewerGiftReq)
  return target;
}

int GetNewerGiftReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewerGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewerGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewerGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewerGiftReq::MergeFrom(const GetNewerGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewerGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewerGiftReq::CopyFrom(const GetNewerGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewerGiftReq::IsInitialized() const {

  return true;
}

void GetNewerGiftReq::Swap(GetNewerGiftReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewerGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewerGiftReq_descriptor_;
  metadata.reflection = GetNewerGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNewerGiftResp::kRewardFieldNumber;
const int GetNewerGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

GetNewerGiftResp::GetNewerGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetNewerGiftResp)
}

void GetNewerGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

GetNewerGiftResp::GetNewerGiftResp(const GetNewerGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetNewerGiftResp)
}

void GetNewerGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewerGiftResp::~GetNewerGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetNewerGiftResp)
  SharedDtor();
}

void GetNewerGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void GetNewerGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewerGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewerGiftResp_descriptor_;
}

const GetNewerGiftResp& GetNewerGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetNewerGiftResp* GetNewerGiftResp::default_instance_ = NULL;

GetNewerGiftResp* GetNewerGiftResp::New() const {
  return new GetNewerGiftResp;
}

void GetNewerGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewerGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetNewerGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetNewerGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetNewerGiftResp)
  return false;
#undef DO_
}

void GetNewerGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetNewerGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetNewerGiftResp)
}

::google::protobuf::uint8* GetNewerGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetNewerGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetNewerGiftResp)
  return target;
}

int GetNewerGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewerGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewerGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewerGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewerGiftResp::MergeFrom(const GetNewerGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewerGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewerGiftResp::CopyFrom(const GetNewerGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewerGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void GetNewerGiftResp::Swap(GetNewerGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewerGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewerGiftResp_descriptor_;
  metadata.reflection = GetNewerGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetDailyGiftReq::GetDailyGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetDailyGiftReq)
}

void GetDailyGiftReq::InitAsDefaultInstance() {
}

GetDailyGiftReq::GetDailyGiftReq(const GetDailyGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetDailyGiftReq)
}

void GetDailyGiftReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDailyGiftReq::~GetDailyGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetDailyGiftReq)
  SharedDtor();
}

void GetDailyGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDailyGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDailyGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDailyGiftReq_descriptor_;
}

const GetDailyGiftReq& GetDailyGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetDailyGiftReq* GetDailyGiftReq::default_instance_ = NULL;

GetDailyGiftReq* GetDailyGiftReq::New() const {
  return new GetDailyGiftReq;
}

void GetDailyGiftReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDailyGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetDailyGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetDailyGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetDailyGiftReq)
  return false;
#undef DO_
}

void GetDailyGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetDailyGiftReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetDailyGiftReq)
}

::google::protobuf::uint8* GetDailyGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetDailyGiftReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetDailyGiftReq)
  return target;
}

int GetDailyGiftReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDailyGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDailyGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDailyGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDailyGiftReq::MergeFrom(const GetDailyGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDailyGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDailyGiftReq::CopyFrom(const GetDailyGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyGiftReq::IsInitialized() const {

  return true;
}

void GetDailyGiftReq::Swap(GetDailyGiftReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDailyGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDailyGiftReq_descriptor_;
  metadata.reflection = GetDailyGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetDailyGiftResp::kRewardFieldNumber;
const int GetDailyGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

GetDailyGiftResp::GetDailyGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetDailyGiftResp)
}

void GetDailyGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

GetDailyGiftResp::GetDailyGiftResp(const GetDailyGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetDailyGiftResp)
}

void GetDailyGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDailyGiftResp::~GetDailyGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetDailyGiftResp)
  SharedDtor();
}

void GetDailyGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void GetDailyGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDailyGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDailyGiftResp_descriptor_;
}

const GetDailyGiftResp& GetDailyGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetDailyGiftResp* GetDailyGiftResp::default_instance_ = NULL;

GetDailyGiftResp* GetDailyGiftResp::New() const {
  return new GetDailyGiftResp;
}

void GetDailyGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDailyGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetDailyGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetDailyGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetDailyGiftResp)
  return false;
#undef DO_
}

void GetDailyGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetDailyGiftResp)
}

::google::protobuf::uint8* GetDailyGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetDailyGiftResp)
  return target;
}

int GetDailyGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDailyGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDailyGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDailyGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDailyGiftResp::MergeFrom(const GetDailyGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDailyGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDailyGiftResp::CopyFrom(const GetDailyGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void GetDailyGiftResp::Swap(GetDailyGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDailyGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDailyGiftResp_descriptor_;
  metadata.reflection = GetDailyGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetYearDailyGiftReq::GetYearDailyGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetYearDailyGiftReq)
}

void GetYearDailyGiftReq::InitAsDefaultInstance() {
}

GetYearDailyGiftReq::GetYearDailyGiftReq(const GetYearDailyGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetYearDailyGiftReq)
}

void GetYearDailyGiftReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetYearDailyGiftReq::~GetYearDailyGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetYearDailyGiftReq)
  SharedDtor();
}

void GetYearDailyGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetYearDailyGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetYearDailyGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetYearDailyGiftReq_descriptor_;
}

const GetYearDailyGiftReq& GetYearDailyGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetYearDailyGiftReq* GetYearDailyGiftReq::default_instance_ = NULL;

GetYearDailyGiftReq* GetYearDailyGiftReq::New() const {
  return new GetYearDailyGiftReq;
}

void GetYearDailyGiftReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetYearDailyGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetYearDailyGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetYearDailyGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetYearDailyGiftReq)
  return false;
#undef DO_
}

void GetYearDailyGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetYearDailyGiftReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetYearDailyGiftReq)
}

::google::protobuf::uint8* GetYearDailyGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetYearDailyGiftReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetYearDailyGiftReq)
  return target;
}

int GetYearDailyGiftReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetYearDailyGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetYearDailyGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetYearDailyGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetYearDailyGiftReq::MergeFrom(const GetYearDailyGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetYearDailyGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetYearDailyGiftReq::CopyFrom(const GetYearDailyGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetYearDailyGiftReq::IsInitialized() const {

  return true;
}

void GetYearDailyGiftReq::Swap(GetYearDailyGiftReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetYearDailyGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetYearDailyGiftReq_descriptor_;
  metadata.reflection = GetYearDailyGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetYearDailyGiftResp::kRewardFieldNumber;
const int GetYearDailyGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

GetYearDailyGiftResp::GetYearDailyGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetYearDailyGiftResp)
}

void GetYearDailyGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

GetYearDailyGiftResp::GetYearDailyGiftResp(const GetYearDailyGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetYearDailyGiftResp)
}

void GetYearDailyGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetYearDailyGiftResp::~GetYearDailyGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetYearDailyGiftResp)
  SharedDtor();
}

void GetYearDailyGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void GetYearDailyGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetYearDailyGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetYearDailyGiftResp_descriptor_;
}

const GetYearDailyGiftResp& GetYearDailyGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetYearDailyGiftResp* GetYearDailyGiftResp::default_instance_ = NULL;

GetYearDailyGiftResp* GetYearDailyGiftResp::New() const {
  return new GetYearDailyGiftResp;
}

void GetYearDailyGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetYearDailyGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetYearDailyGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetYearDailyGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetYearDailyGiftResp)
  return false;
#undef DO_
}

void GetYearDailyGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetYearDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetYearDailyGiftResp)
}

::google::protobuf::uint8* GetYearDailyGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetYearDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetYearDailyGiftResp)
  return target;
}

int GetYearDailyGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetYearDailyGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetYearDailyGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetYearDailyGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetYearDailyGiftResp::MergeFrom(const GetYearDailyGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetYearDailyGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetYearDailyGiftResp::CopyFrom(const GetYearDailyGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetYearDailyGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void GetYearDailyGiftResp::Swap(GetYearDailyGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetYearDailyGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetYearDailyGiftResp_descriptor_;
  metadata.reflection = GetYearDailyGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLevelGiftReq::kIndexFieldNumber;
#endif  // !_MSC_VER

GetLevelGiftReq::GetLevelGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetLevelGiftReq)
}

void GetLevelGiftReq::InitAsDefaultInstance() {
}

GetLevelGiftReq::GetLevelGiftReq(const GetLevelGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetLevelGiftReq)
}

void GetLevelGiftReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLevelGiftReq::~GetLevelGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetLevelGiftReq)
  SharedDtor();
}

void GetLevelGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetLevelGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLevelGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLevelGiftReq_descriptor_;
}

const GetLevelGiftReq& GetLevelGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetLevelGiftReq* GetLevelGiftReq::default_instance_ = NULL;

GetLevelGiftReq* GetLevelGiftReq::New() const {
  return new GetLevelGiftReq;
}

void GetLevelGiftReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLevelGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetLevelGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetLevelGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetLevelGiftReq)
  return false;
#undef DO_
}

void GetLevelGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetLevelGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetLevelGiftReq)
}

::google::protobuf::uint8* GetLevelGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetLevelGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetLevelGiftReq)
  return target;
}

int GetLevelGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLevelGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLevelGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLevelGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLevelGiftReq::MergeFrom(const GetLevelGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLevelGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLevelGiftReq::CopyFrom(const GetLevelGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLevelGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetLevelGiftReq::Swap(GetLevelGiftReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLevelGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLevelGiftReq_descriptor_;
  metadata.reflection = GetLevelGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLevelGiftResp::kRewardFieldNumber;
const int GetLevelGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

GetLevelGiftResp::GetLevelGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.GetLevelGiftResp)
}

void GetLevelGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

GetLevelGiftResp::GetLevelGiftResp(const GetLevelGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.GetLevelGiftResp)
}

void GetLevelGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLevelGiftResp::~GetLevelGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.GetLevelGiftResp)
  SharedDtor();
}

void GetLevelGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void GetLevelGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLevelGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLevelGiftResp_descriptor_;
}

const GetLevelGiftResp& GetLevelGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

GetLevelGiftResp* GetLevelGiftResp::default_instance_ = NULL;

GetLevelGiftResp* GetLevelGiftResp::New() const {
  return new GetLevelGiftResp;
}

void GetLevelGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLevelGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.GetLevelGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.GetLevelGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.GetLevelGiftResp)
  return false;
#undef DO_
}

void GetLevelGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.GetLevelGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.GetLevelGiftResp)
}

::google::protobuf::uint8* GetLevelGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.GetLevelGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.GetLevelGiftResp)
  return target;
}

int GetLevelGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLevelGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLevelGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLevelGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLevelGiftResp::MergeFrom(const GetLevelGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLevelGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLevelGiftResp::CopyFrom(const GetLevelGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLevelGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void GetLevelGiftResp::Swap(GetLevelGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLevelGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLevelGiftResp_descriptor_;
  metadata.reflection = GetLevelGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

QQZoneGetDailyGiftReq::QQZoneGetDailyGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.QQZoneGetDailyGiftReq)
}

void QQZoneGetDailyGiftReq::InitAsDefaultInstance() {
}

QQZoneGetDailyGiftReq::QQZoneGetDailyGiftReq(const QQZoneGetDailyGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.QQZoneGetDailyGiftReq)
}

void QQZoneGetDailyGiftReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QQZoneGetDailyGiftReq::~QQZoneGetDailyGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.QQZoneGetDailyGiftReq)
  SharedDtor();
}

void QQZoneGetDailyGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QQZoneGetDailyGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QQZoneGetDailyGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QQZoneGetDailyGiftReq_descriptor_;
}

const QQZoneGetDailyGiftReq& QQZoneGetDailyGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

QQZoneGetDailyGiftReq* QQZoneGetDailyGiftReq::default_instance_ = NULL;

QQZoneGetDailyGiftReq* QQZoneGetDailyGiftReq::New() const {
  return new QQZoneGetDailyGiftReq;
}

void QQZoneGetDailyGiftReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QQZoneGetDailyGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.QQZoneGetDailyGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.QQZoneGetDailyGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.QQZoneGetDailyGiftReq)
  return false;
#undef DO_
}

void QQZoneGetDailyGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.QQZoneGetDailyGiftReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.QQZoneGetDailyGiftReq)
}

::google::protobuf::uint8* QQZoneGetDailyGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.QQZoneGetDailyGiftReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.QQZoneGetDailyGiftReq)
  return target;
}

int QQZoneGetDailyGiftReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QQZoneGetDailyGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QQZoneGetDailyGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QQZoneGetDailyGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QQZoneGetDailyGiftReq::MergeFrom(const QQZoneGetDailyGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QQZoneGetDailyGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QQZoneGetDailyGiftReq::CopyFrom(const QQZoneGetDailyGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QQZoneGetDailyGiftReq::IsInitialized() const {

  return true;
}

void QQZoneGetDailyGiftReq::Swap(QQZoneGetDailyGiftReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QQZoneGetDailyGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QQZoneGetDailyGiftReq_descriptor_;
  metadata.reflection = QQZoneGetDailyGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QQZoneGetDailyGiftResp::kRewardFieldNumber;
const int QQZoneGetDailyGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

QQZoneGetDailyGiftResp::QQZoneGetDailyGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.QQZoneGetDailyGiftResp)
}

void QQZoneGetDailyGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

QQZoneGetDailyGiftResp::QQZoneGetDailyGiftResp(const QQZoneGetDailyGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.QQZoneGetDailyGiftResp)
}

void QQZoneGetDailyGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QQZoneGetDailyGiftResp::~QQZoneGetDailyGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.QQZoneGetDailyGiftResp)
  SharedDtor();
}

void QQZoneGetDailyGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void QQZoneGetDailyGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QQZoneGetDailyGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QQZoneGetDailyGiftResp_descriptor_;
}

const QQZoneGetDailyGiftResp& QQZoneGetDailyGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

QQZoneGetDailyGiftResp* QQZoneGetDailyGiftResp::default_instance_ = NULL;

QQZoneGetDailyGiftResp* QQZoneGetDailyGiftResp::New() const {
  return new QQZoneGetDailyGiftResp;
}

void QQZoneGetDailyGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QQZoneGetDailyGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.QQZoneGetDailyGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.QQZoneGetDailyGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.QQZoneGetDailyGiftResp)
  return false;
#undef DO_
}

void QQZoneGetDailyGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.QQZoneGetDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.QQZoneGetDailyGiftResp)
}

::google::protobuf::uint8* QQZoneGetDailyGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.QQZoneGetDailyGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.QQZoneGetDailyGiftResp)
  return target;
}

int QQZoneGetDailyGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QQZoneGetDailyGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QQZoneGetDailyGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QQZoneGetDailyGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QQZoneGetDailyGiftResp::MergeFrom(const QQZoneGetDailyGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QQZoneGetDailyGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QQZoneGetDailyGiftResp::CopyFrom(const QQZoneGetDailyGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QQZoneGetDailyGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void QQZoneGetDailyGiftResp::Swap(QQZoneGetDailyGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QQZoneGetDailyGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QQZoneGetDailyGiftResp_descriptor_;
  metadata.reflection = QQZoneGetDailyGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QQZoneGetLevelGiftReq::kIndexFieldNumber;
#endif  // !_MSC_VER

QQZoneGetLevelGiftReq::QQZoneGetLevelGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.QQZoneGetLevelGiftReq)
}

void QQZoneGetLevelGiftReq::InitAsDefaultInstance() {
}

QQZoneGetLevelGiftReq::QQZoneGetLevelGiftReq(const QQZoneGetLevelGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.QQZoneGetLevelGiftReq)
}

void QQZoneGetLevelGiftReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QQZoneGetLevelGiftReq::~QQZoneGetLevelGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.QQZoneGetLevelGiftReq)
  SharedDtor();
}

void QQZoneGetLevelGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QQZoneGetLevelGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QQZoneGetLevelGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QQZoneGetLevelGiftReq_descriptor_;
}

const QQZoneGetLevelGiftReq& QQZoneGetLevelGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

QQZoneGetLevelGiftReq* QQZoneGetLevelGiftReq::default_instance_ = NULL;

QQZoneGetLevelGiftReq* QQZoneGetLevelGiftReq::New() const {
  return new QQZoneGetLevelGiftReq;
}

void QQZoneGetLevelGiftReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QQZoneGetLevelGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.QQZoneGetLevelGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.QQZoneGetLevelGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.QQZoneGetLevelGiftReq)
  return false;
#undef DO_
}

void QQZoneGetLevelGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.QQZoneGetLevelGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.QQZoneGetLevelGiftReq)
}

::google::protobuf::uint8* QQZoneGetLevelGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.QQZoneGetLevelGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.QQZoneGetLevelGiftReq)
  return target;
}

int QQZoneGetLevelGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QQZoneGetLevelGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QQZoneGetLevelGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QQZoneGetLevelGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QQZoneGetLevelGiftReq::MergeFrom(const QQZoneGetLevelGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QQZoneGetLevelGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QQZoneGetLevelGiftReq::CopyFrom(const QQZoneGetLevelGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QQZoneGetLevelGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QQZoneGetLevelGiftReq::Swap(QQZoneGetLevelGiftReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QQZoneGetLevelGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QQZoneGetLevelGiftReq_descriptor_;
  metadata.reflection = QQZoneGetLevelGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QQZoneGetLevelGiftResp::kRewardFieldNumber;
const int QQZoneGetLevelGiftResp::kYellowvipFieldNumber;
#endif  // !_MSC_VER

QQZoneGetLevelGiftResp::QQZoneGetLevelGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoYellowVip.QQZoneGetLevelGiftResp)
}

void QQZoneGetLevelGiftResp::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoYellowVip::FinalRewardCPP*>(&::ProtoYellowVip::FinalRewardCPP::default_instance());
  yellowvip_ = const_cast< ::ProtoYellowVip::YellowVipCPP*>(&::ProtoYellowVip::YellowVipCPP::default_instance());
}

QQZoneGetLevelGiftResp::QQZoneGetLevelGiftResp(const QQZoneGetLevelGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoYellowVip.QQZoneGetLevelGiftResp)
}

void QQZoneGetLevelGiftResp::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  yellowvip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QQZoneGetLevelGiftResp::~QQZoneGetLevelGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoYellowVip.QQZoneGetLevelGiftResp)
  SharedDtor();
}

void QQZoneGetLevelGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
    delete yellowvip_;
  }
}

void QQZoneGetLevelGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QQZoneGetLevelGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QQZoneGetLevelGiftResp_descriptor_;
}

const QQZoneGetLevelGiftResp& QQZoneGetLevelGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoYellowVip_2eproto();
  return *default_instance_;
}

QQZoneGetLevelGiftResp* QQZoneGetLevelGiftResp::default_instance_ = NULL;

QQZoneGetLevelGiftResp* QQZoneGetLevelGiftResp::New() const {
  return new QQZoneGetLevelGiftResp;
}

void QQZoneGetLevelGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoYellowVip::FinalRewardCPP::Clear();
    }
    if (has_yellowvip()) {
      if (yellowvip_ != NULL) yellowvip_->::ProtoYellowVip::YellowVipCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QQZoneGetLevelGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoYellowVip.QQZoneGetLevelGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoYellowVip.FinalRewardCPP reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yellowvip;
        break;
      }

      // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
      case 2: {
        if (tag == 18) {
         parse_yellowvip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yellowvip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoYellowVip.QQZoneGetLevelGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoYellowVip.QQZoneGetLevelGiftResp)
  return false;
#undef DO_
}

void QQZoneGetLevelGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoYellowVip.QQZoneGetLevelGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yellowvip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoYellowVip.QQZoneGetLevelGiftResp)
}

::google::protobuf::uint8* QQZoneGetLevelGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoYellowVip.QQZoneGetLevelGiftResp)
  // required .ProtoYellowVip.FinalRewardCPP reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
  if (has_yellowvip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yellowvip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoYellowVip.QQZoneGetLevelGiftResp)
  return target;
}

int QQZoneGetLevelGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoYellowVip.FinalRewardCPP reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required .ProtoYellowVip.YellowVipCPP yellowvip = 2;
    if (has_yellowvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yellowvip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QQZoneGetLevelGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QQZoneGetLevelGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QQZoneGetLevelGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QQZoneGetLevelGiftResp::MergeFrom(const QQZoneGetLevelGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoYellowVip::FinalRewardCPP::MergeFrom(from.reward());
    }
    if (from.has_yellowvip()) {
      mutable_yellowvip()->::ProtoYellowVip::YellowVipCPP::MergeFrom(from.yellowvip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QQZoneGetLevelGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QQZoneGetLevelGiftResp::CopyFrom(const QQZoneGetLevelGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QQZoneGetLevelGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  if (has_yellowvip()) {
    if (!this->yellowvip().IsInitialized()) return false;
  }
  return true;
}

void QQZoneGetLevelGiftResp::Swap(QQZoneGetLevelGiftResp* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(yellowvip_, other->yellowvip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QQZoneGetLevelGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QQZoneGetLevelGiftResp_descriptor_;
  metadata.reflection = QQZoneGetLevelGiftResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoYellowVip

// @@protoc_insertion_point(global_scope)
