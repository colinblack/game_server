// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoDailyMission.proto

#ifndef PROTOBUF_ProtoDailyMission_2eproto__INCLUDED
#define PROTOBUF_ProtoDailyMission_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoDailyMission {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoDailyMission_2eproto();
void protobuf_AssignDesc_ProtoDailyMission_2eproto();
void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

class DailyMissionCPP;
class DailyMissionAllCPP;
class RefreshDailyMissionReq;
class RefreshDailyMissionResp;
class CashRefreshMissionReq;
class CashRefreshMissionResp;
class OpenDailyMissionWindowReq;
class OpenDailyMissionWindowResp;
class PushDailyMissionReq;
class GetDailyMissionRewardReq;
class GetDailyMissionRewardResp;

// ===================================================================

class DailyMissionCPP : public ::google::protobuf::Message {
 public:
  DailyMissionCPP();
  virtual ~DailyMissionCPP();

  DailyMissionCPP(const DailyMissionCPP& from);

  inline DailyMissionCPP& operator=(const DailyMissionCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyMissionCPP& default_instance();

  void Swap(DailyMissionCPP* other);

  // implements Message ----------------------------------------------

  DailyMissionCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyMissionCPP& from);
  void MergeFrom(const DailyMissionCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 missid = 1;
  inline bool has_missid() const;
  inline void clear_missid();
  static const int kMissidFieldNumber = 1;
  inline ::google::protobuf::uint32 missid() const;
  inline void set_missid(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 current = 4;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 4;
  inline ::google::protobuf::uint32 current() const;
  inline void set_current(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.DailyMissionCPP)
 private:
  inline void set_has_missid();
  inline void clear_has_missid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_current();
  inline void clear_has_current();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 missid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 current_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static DailyMissionCPP* default_instance_;
};
// -------------------------------------------------------------------

class DailyMissionAllCPP : public ::google::protobuf::Message {
 public:
  DailyMissionAllCPP();
  virtual ~DailyMissionAllCPP();

  DailyMissionAllCPP(const DailyMissionAllCPP& from);

  inline DailyMissionAllCPP& operator=(const DailyMissionAllCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyMissionAllCPP& default_instance();

  void Swap(DailyMissionAllCPP* other);

  // implements Message ----------------------------------------------

  DailyMissionAllCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyMissionAllCPP& from);
  void MergeFrom(const DailyMissionAllCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
  inline int missions_size() const;
  inline void clear_missions();
  static const int kMissionsFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionCPP& missions(int index) const;
  inline ::ProtoDailyMission::DailyMissionCPP* mutable_missions(int index);
  inline ::ProtoDailyMission::DailyMissionCPP* add_missions();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoDailyMission::DailyMissionCPP >&
      missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoDailyMission::DailyMissionCPP >*
      mutable_missions();

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.DailyMissionAllCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoDailyMission::DailyMissionCPP > missions_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static DailyMissionAllCPP* default_instance_;
};
// -------------------------------------------------------------------

class RefreshDailyMissionReq : public ::google::protobuf::Message {
 public:
  RefreshDailyMissionReq();
  virtual ~RefreshDailyMissionReq();

  RefreshDailyMissionReq(const RefreshDailyMissionReq& from);

  inline RefreshDailyMissionReq& operator=(const RefreshDailyMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshDailyMissionReq& default_instance();

  void Swap(RefreshDailyMissionReq* other);

  // implements Message ----------------------------------------------

  RefreshDailyMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshDailyMissionReq& from);
  void MergeFrom(const RefreshDailyMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.RefreshDailyMissionReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static RefreshDailyMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class RefreshDailyMissionResp : public ::google::protobuf::Message {
 public:
  RefreshDailyMissionResp();
  virtual ~RefreshDailyMissionResp();

  RefreshDailyMissionResp(const RefreshDailyMissionResp& from);

  inline RefreshDailyMissionResp& operator=(const RefreshDailyMissionResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshDailyMissionResp& default_instance();

  void Swap(RefreshDailyMissionResp* other);

  // implements Message ----------------------------------------------

  RefreshDailyMissionResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshDailyMissionResp& from);
  void MergeFrom(const RefreshDailyMissionResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  inline bool has_missionall() const;
  inline void clear_missionall();
  static const int kMissionallFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionAllCPP& missionall() const;
  inline ::ProtoDailyMission::DailyMissionAllCPP* mutable_missionall();
  inline ::ProtoDailyMission::DailyMissionAllCPP* release_missionall();
  inline void set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall);

  // required uint32 refreshtime = 2;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint32 value);

  // required uint32 freetimes = 3;
  inline bool has_freetimes() const;
  inline void clear_freetimes();
  static const int kFreetimesFieldNumber = 3;
  inline ::google::protobuf::uint32 freetimes() const;
  inline void set_freetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.RefreshDailyMissionResp)
 private:
  inline void set_has_missionall();
  inline void clear_has_missionall();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_freetimes();
  inline void clear_has_freetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoDailyMission::DailyMissionAllCPP* missionall_;
  ::google::protobuf::uint32 refreshtime_;
  ::google::protobuf::uint32 freetimes_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static RefreshDailyMissionResp* default_instance_;
};
// -------------------------------------------------------------------

class CashRefreshMissionReq : public ::google::protobuf::Message {
 public:
  CashRefreshMissionReq();
  virtual ~CashRefreshMissionReq();

  CashRefreshMissionReq(const CashRefreshMissionReq& from);

  inline CashRefreshMissionReq& operator=(const CashRefreshMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashRefreshMissionReq& default_instance();

  void Swap(CashRefreshMissionReq* other);

  // implements Message ----------------------------------------------

  CashRefreshMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashRefreshMissionReq& from);
  void MergeFrom(const CashRefreshMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.CashRefreshMissionReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static CashRefreshMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class CashRefreshMissionResp : public ::google::protobuf::Message {
 public:
  CashRefreshMissionResp();
  virtual ~CashRefreshMissionResp();

  CashRefreshMissionResp(const CashRefreshMissionResp& from);

  inline CashRefreshMissionResp& operator=(const CashRefreshMissionResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashRefreshMissionResp& default_instance();

  void Swap(CashRefreshMissionResp* other);

  // implements Message ----------------------------------------------

  CashRefreshMissionResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CashRefreshMissionResp& from);
  void MergeFrom(const CashRefreshMissionResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  inline bool has_missionall() const;
  inline void clear_missionall();
  static const int kMissionallFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionAllCPP& missionall() const;
  inline ::ProtoDailyMission::DailyMissionAllCPP* mutable_missionall();
  inline ::ProtoDailyMission::DailyMissionAllCPP* release_missionall();
  inline void set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.CashRefreshMissionResp)
 private:
  inline void set_has_missionall();
  inline void clear_has_missionall();
  inline void set_has_cash();
  inline void clear_has_cash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoDailyMission::DailyMissionAllCPP* missionall_;
  ::google::protobuf::uint32 cash_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static CashRefreshMissionResp* default_instance_;
};
// -------------------------------------------------------------------

class OpenDailyMissionWindowReq : public ::google::protobuf::Message {
 public:
  OpenDailyMissionWindowReq();
  virtual ~OpenDailyMissionWindowReq();

  OpenDailyMissionWindowReq(const OpenDailyMissionWindowReq& from);

  inline OpenDailyMissionWindowReq& operator=(const OpenDailyMissionWindowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenDailyMissionWindowReq& default_instance();

  void Swap(OpenDailyMissionWindowReq* other);

  // implements Message ----------------------------------------------

  OpenDailyMissionWindowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenDailyMissionWindowReq& from);
  void MergeFrom(const OpenDailyMissionWindowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.OpenDailyMissionWindowReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static OpenDailyMissionWindowReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenDailyMissionWindowResp : public ::google::protobuf::Message {
 public:
  OpenDailyMissionWindowResp();
  virtual ~OpenDailyMissionWindowResp();

  OpenDailyMissionWindowResp(const OpenDailyMissionWindowResp& from);

  inline OpenDailyMissionWindowResp& operator=(const OpenDailyMissionWindowResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenDailyMissionWindowResp& default_instance();

  void Swap(OpenDailyMissionWindowResp* other);

  // implements Message ----------------------------------------------

  OpenDailyMissionWindowResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenDailyMissionWindowResp& from);
  void MergeFrom(const OpenDailyMissionWindowResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  inline bool has_missionall() const;
  inline void clear_missionall();
  static const int kMissionallFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionAllCPP& missionall() const;
  inline ::ProtoDailyMission::DailyMissionAllCPP* mutable_missionall();
  inline ::ProtoDailyMission::DailyMissionAllCPP* release_missionall();
  inline void set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.OpenDailyMissionWindowResp)
 private:
  inline void set_has_missionall();
  inline void clear_has_missionall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoDailyMission::DailyMissionAllCPP* missionall_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static OpenDailyMissionWindowResp* default_instance_;
};
// -------------------------------------------------------------------

class PushDailyMissionReq : public ::google::protobuf::Message {
 public:
  PushDailyMissionReq();
  virtual ~PushDailyMissionReq();

  PushDailyMissionReq(const PushDailyMissionReq& from);

  inline PushDailyMissionReq& operator=(const PushDailyMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushDailyMissionReq& default_instance();

  void Swap(PushDailyMissionReq* other);

  // implements Message ----------------------------------------------

  PushDailyMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushDailyMissionReq& from);
  void MergeFrom(const PushDailyMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
  inline bool has_missionall() const;
  inline void clear_missionall();
  static const int kMissionallFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionAllCPP& missionall() const;
  inline ::ProtoDailyMission::DailyMissionAllCPP* mutable_missionall();
  inline ::ProtoDailyMission::DailyMissionAllCPP* release_missionall();
  inline void set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.PushDailyMissionReq)
 private:
  inline void set_has_missionall();
  inline void clear_has_missionall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoDailyMission::DailyMissionAllCPP* missionall_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static PushDailyMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyMissionRewardReq : public ::google::protobuf::Message {
 public:
  GetDailyMissionRewardReq();
  virtual ~GetDailyMissionRewardReq();

  GetDailyMissionRewardReq(const GetDailyMissionRewardReq& from);

  inline GetDailyMissionRewardReq& operator=(const GetDailyMissionRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyMissionRewardReq& default_instance();

  void Swap(GetDailyMissionRewardReq* other);

  // implements Message ----------------------------------------------

  GetDailyMissionRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyMissionRewardReq& from);
  void MergeFrom(const GetDailyMissionRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 missid = 1;
  inline bool has_missid() const;
  inline void clear_missid();
  static const int kMissidFieldNumber = 1;
  inline ::google::protobuf::uint32 missid() const;
  inline void set_missid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.GetDailyMissionRewardReq)
 private:
  inline void set_has_missid();
  inline void clear_has_missid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 missid_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static GetDailyMissionRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyMissionRewardResp : public ::google::protobuf::Message {
 public:
  GetDailyMissionRewardResp();
  virtual ~GetDailyMissionRewardResp();

  GetDailyMissionRewardResp(const GetDailyMissionRewardResp& from);

  inline GetDailyMissionRewardResp& operator=(const GetDailyMissionRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyMissionRewardResp& default_instance();

  void Swap(GetDailyMissionRewardResp* other);

  // implements Message ----------------------------------------------

  GetDailyMissionRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyMissionRewardResp& from);
  void MergeFrom(const GetDailyMissionRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoDailyMission.DailyMissionCPP mission = 1;
  inline bool has_mission() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 1;
  inline const ::ProtoDailyMission::DailyMissionCPP& mission() const;
  inline ::ProtoDailyMission::DailyMissionCPP* mutable_mission();
  inline ::ProtoDailyMission::DailyMissionCPP* release_mission();
  inline void set_allocated_mission(::ProtoDailyMission::DailyMissionCPP* mission);

  // required uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // required uint32 reward_times = 3;
  inline bool has_reward_times() const;
  inline void clear_reward_times();
  static const int kRewardTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 reward_times() const;
  inline void set_reward_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoDailyMission.GetDailyMissionRewardResp)
 private:
  inline void set_has_mission();
  inline void clear_has_mission();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_reward_times();
  inline void clear_has_reward_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoDailyMission::DailyMissionCPP* mission_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 reward_times_;
  friend void  protobuf_AddDesc_ProtoDailyMission_2eproto();
  friend void protobuf_AssignDesc_ProtoDailyMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoDailyMission_2eproto();

  void InitAsDefaultInstance();
  static GetDailyMissionRewardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyMissionCPP

// required uint32 missid = 1;
inline bool DailyMissionCPP::has_missid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyMissionCPP::set_has_missid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyMissionCPP::clear_has_missid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyMissionCPP::clear_missid() {
  missid_ = 0u;
  clear_has_missid();
}
inline ::google::protobuf::uint32 DailyMissionCPP::missid() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.DailyMissionCPP.missid)
  return missid_;
}
inline void DailyMissionCPP::set_missid(::google::protobuf::uint32 value) {
  set_has_missid();
  missid_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.DailyMissionCPP.missid)
}

// required uint32 star = 2;
inline bool DailyMissionCPP::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyMissionCPP::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyMissionCPP::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyMissionCPP::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 DailyMissionCPP::star() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.DailyMissionCPP.star)
  return star_;
}
inline void DailyMissionCPP::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.DailyMissionCPP.star)
}

// required uint32 status = 3;
inline bool DailyMissionCPP::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyMissionCPP::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyMissionCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyMissionCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DailyMissionCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.DailyMissionCPP.status)
  return status_;
}
inline void DailyMissionCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.DailyMissionCPP.status)
}

// required uint32 current = 4;
inline bool DailyMissionCPP::has_current() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyMissionCPP::set_has_current() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyMissionCPP::clear_has_current() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyMissionCPP::clear_current() {
  current_ = 0u;
  clear_has_current();
}
inline ::google::protobuf::uint32 DailyMissionCPP::current() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.DailyMissionCPP.current)
  return current_;
}
inline void DailyMissionCPP::set_current(::google::protobuf::uint32 value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.DailyMissionCPP.current)
}

// -------------------------------------------------------------------

// DailyMissionAllCPP

// repeated .ProtoDailyMission.DailyMissionCPP missions = 1;
inline int DailyMissionAllCPP::missions_size() const {
  return missions_.size();
}
inline void DailyMissionAllCPP::clear_missions() {
  missions_.Clear();
}
inline const ::ProtoDailyMission::DailyMissionCPP& DailyMissionAllCPP::missions(int index) const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.DailyMissionAllCPP.missions)
  return missions_.Get(index);
}
inline ::ProtoDailyMission::DailyMissionCPP* DailyMissionAllCPP::mutable_missions(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.DailyMissionAllCPP.missions)
  return missions_.Mutable(index);
}
inline ::ProtoDailyMission::DailyMissionCPP* DailyMissionAllCPP::add_missions() {
  // @@protoc_insertion_point(field_add:ProtoDailyMission.DailyMissionAllCPP.missions)
  return missions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoDailyMission::DailyMissionCPP >&
DailyMissionAllCPP::missions() const {
  // @@protoc_insertion_point(field_list:ProtoDailyMission.DailyMissionAllCPP.missions)
  return missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoDailyMission::DailyMissionCPP >*
DailyMissionAllCPP::mutable_missions() {
  // @@protoc_insertion_point(field_mutable_list:ProtoDailyMission.DailyMissionAllCPP.missions)
  return &missions_;
}

// -------------------------------------------------------------------

// RefreshDailyMissionReq

// -------------------------------------------------------------------

// RefreshDailyMissionResp

// required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
inline bool RefreshDailyMissionResp::has_missionall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshDailyMissionResp::set_has_missionall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshDailyMissionResp::clear_has_missionall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshDailyMissionResp::clear_missionall() {
  if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  clear_has_missionall();
}
inline const ::ProtoDailyMission::DailyMissionAllCPP& RefreshDailyMissionResp::missionall() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.RefreshDailyMissionResp.missionall)
  return missionall_ != NULL ? *missionall_ : *default_instance_->missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* RefreshDailyMissionResp::mutable_missionall() {
  set_has_missionall();
  if (missionall_ == NULL) missionall_ = new ::ProtoDailyMission::DailyMissionAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.RefreshDailyMissionResp.missionall)
  return missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* RefreshDailyMissionResp::release_missionall() {
  clear_has_missionall();
  ::ProtoDailyMission::DailyMissionAllCPP* temp = missionall_;
  missionall_ = NULL;
  return temp;
}
inline void RefreshDailyMissionResp::set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall) {
  delete missionall_;
  missionall_ = missionall;
  if (missionall) {
    set_has_missionall();
  } else {
    clear_has_missionall();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoDailyMission.RefreshDailyMissionResp.missionall)
}

// required uint32 refreshtime = 2;
inline bool RefreshDailyMissionResp::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshDailyMissionResp::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshDailyMissionResp::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshDailyMissionResp::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
inline ::google::protobuf::uint32 RefreshDailyMissionResp::refreshtime() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.RefreshDailyMissionResp.refreshtime)
  return refreshtime_;
}
inline void RefreshDailyMissionResp::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.RefreshDailyMissionResp.refreshtime)
}

// required uint32 freetimes = 3;
inline bool RefreshDailyMissionResp::has_freetimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshDailyMissionResp::set_has_freetimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshDailyMissionResp::clear_has_freetimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshDailyMissionResp::clear_freetimes() {
  freetimes_ = 0u;
  clear_has_freetimes();
}
inline ::google::protobuf::uint32 RefreshDailyMissionResp::freetimes() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.RefreshDailyMissionResp.freetimes)
  return freetimes_;
}
inline void RefreshDailyMissionResp::set_freetimes(::google::protobuf::uint32 value) {
  set_has_freetimes();
  freetimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.RefreshDailyMissionResp.freetimes)
}

// -------------------------------------------------------------------

// CashRefreshMissionReq

// -------------------------------------------------------------------

// CashRefreshMissionResp

// required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
inline bool CashRefreshMissionResp::has_missionall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashRefreshMissionResp::set_has_missionall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashRefreshMissionResp::clear_has_missionall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashRefreshMissionResp::clear_missionall() {
  if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  clear_has_missionall();
}
inline const ::ProtoDailyMission::DailyMissionAllCPP& CashRefreshMissionResp::missionall() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.CashRefreshMissionResp.missionall)
  return missionall_ != NULL ? *missionall_ : *default_instance_->missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* CashRefreshMissionResp::mutable_missionall() {
  set_has_missionall();
  if (missionall_ == NULL) missionall_ = new ::ProtoDailyMission::DailyMissionAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.CashRefreshMissionResp.missionall)
  return missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* CashRefreshMissionResp::release_missionall() {
  clear_has_missionall();
  ::ProtoDailyMission::DailyMissionAllCPP* temp = missionall_;
  missionall_ = NULL;
  return temp;
}
inline void CashRefreshMissionResp::set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall) {
  delete missionall_;
  missionall_ = missionall;
  if (missionall) {
    set_has_missionall();
  } else {
    clear_has_missionall();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoDailyMission.CashRefreshMissionResp.missionall)
}

// required uint32 cash = 2;
inline bool CashRefreshMissionResp::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashRefreshMissionResp::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashRefreshMissionResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashRefreshMissionResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CashRefreshMissionResp::cash() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.CashRefreshMissionResp.cash)
  return cash_;
}
inline void CashRefreshMissionResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.CashRefreshMissionResp.cash)
}

// -------------------------------------------------------------------

// OpenDailyMissionWindowReq

// -------------------------------------------------------------------

// OpenDailyMissionWindowResp

// required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
inline bool OpenDailyMissionWindowResp::has_missionall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenDailyMissionWindowResp::set_has_missionall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenDailyMissionWindowResp::clear_has_missionall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenDailyMissionWindowResp::clear_missionall() {
  if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  clear_has_missionall();
}
inline const ::ProtoDailyMission::DailyMissionAllCPP& OpenDailyMissionWindowResp::missionall() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.OpenDailyMissionWindowResp.missionall)
  return missionall_ != NULL ? *missionall_ : *default_instance_->missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* OpenDailyMissionWindowResp::mutable_missionall() {
  set_has_missionall();
  if (missionall_ == NULL) missionall_ = new ::ProtoDailyMission::DailyMissionAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.OpenDailyMissionWindowResp.missionall)
  return missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* OpenDailyMissionWindowResp::release_missionall() {
  clear_has_missionall();
  ::ProtoDailyMission::DailyMissionAllCPP* temp = missionall_;
  missionall_ = NULL;
  return temp;
}
inline void OpenDailyMissionWindowResp::set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall) {
  delete missionall_;
  missionall_ = missionall;
  if (missionall) {
    set_has_missionall();
  } else {
    clear_has_missionall();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoDailyMission.OpenDailyMissionWindowResp.missionall)
}

// -------------------------------------------------------------------

// PushDailyMissionReq

// required .ProtoDailyMission.DailyMissionAllCPP missionall = 1;
inline bool PushDailyMissionReq::has_missionall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushDailyMissionReq::set_has_missionall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushDailyMissionReq::clear_has_missionall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushDailyMissionReq::clear_missionall() {
  if (missionall_ != NULL) missionall_->::ProtoDailyMission::DailyMissionAllCPP::Clear();
  clear_has_missionall();
}
inline const ::ProtoDailyMission::DailyMissionAllCPP& PushDailyMissionReq::missionall() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.PushDailyMissionReq.missionall)
  return missionall_ != NULL ? *missionall_ : *default_instance_->missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* PushDailyMissionReq::mutable_missionall() {
  set_has_missionall();
  if (missionall_ == NULL) missionall_ = new ::ProtoDailyMission::DailyMissionAllCPP;
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.PushDailyMissionReq.missionall)
  return missionall_;
}
inline ::ProtoDailyMission::DailyMissionAllCPP* PushDailyMissionReq::release_missionall() {
  clear_has_missionall();
  ::ProtoDailyMission::DailyMissionAllCPP* temp = missionall_;
  missionall_ = NULL;
  return temp;
}
inline void PushDailyMissionReq::set_allocated_missionall(::ProtoDailyMission::DailyMissionAllCPP* missionall) {
  delete missionall_;
  missionall_ = missionall;
  if (missionall) {
    set_has_missionall();
  } else {
    clear_has_missionall();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoDailyMission.PushDailyMissionReq.missionall)
}

// -------------------------------------------------------------------

// GetDailyMissionRewardReq

// required uint32 missid = 1;
inline bool GetDailyMissionRewardReq::has_missid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyMissionRewardReq::set_has_missid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyMissionRewardReq::clear_has_missid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyMissionRewardReq::clear_missid() {
  missid_ = 0u;
  clear_has_missid();
}
inline ::google::protobuf::uint32 GetDailyMissionRewardReq::missid() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.GetDailyMissionRewardReq.missid)
  return missid_;
}
inline void GetDailyMissionRewardReq::set_missid(::google::protobuf::uint32 value) {
  set_has_missid();
  missid_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.GetDailyMissionRewardReq.missid)
}

// -------------------------------------------------------------------

// GetDailyMissionRewardResp

// required .ProtoDailyMission.DailyMissionCPP mission = 1;
inline bool GetDailyMissionRewardResp::has_mission() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyMissionRewardResp::set_has_mission() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyMissionRewardResp::clear_has_mission() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyMissionRewardResp::clear_mission() {
  if (mission_ != NULL) mission_->::ProtoDailyMission::DailyMissionCPP::Clear();
  clear_has_mission();
}
inline const ::ProtoDailyMission::DailyMissionCPP& GetDailyMissionRewardResp::mission() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.GetDailyMissionRewardResp.mission)
  return mission_ != NULL ? *mission_ : *default_instance_->mission_;
}
inline ::ProtoDailyMission::DailyMissionCPP* GetDailyMissionRewardResp::mutable_mission() {
  set_has_mission();
  if (mission_ == NULL) mission_ = new ::ProtoDailyMission::DailyMissionCPP;
  // @@protoc_insertion_point(field_mutable:ProtoDailyMission.GetDailyMissionRewardResp.mission)
  return mission_;
}
inline ::ProtoDailyMission::DailyMissionCPP* GetDailyMissionRewardResp::release_mission() {
  clear_has_mission();
  ::ProtoDailyMission::DailyMissionCPP* temp = mission_;
  mission_ = NULL;
  return temp;
}
inline void GetDailyMissionRewardResp::set_allocated_mission(::ProtoDailyMission::DailyMissionCPP* mission) {
  delete mission_;
  mission_ = mission;
  if (mission) {
    set_has_mission();
  } else {
    clear_has_mission();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoDailyMission.GetDailyMissionRewardResp.mission)
}

// required uint64 exp = 2;
inline bool GetDailyMissionRewardResp::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDailyMissionRewardResp::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDailyMissionRewardResp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDailyMissionRewardResp::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 GetDailyMissionRewardResp::exp() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.GetDailyMissionRewardResp.exp)
  return exp_;
}
inline void GetDailyMissionRewardResp::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.GetDailyMissionRewardResp.exp)
}

// required uint32 reward_times = 3;
inline bool GetDailyMissionRewardResp::has_reward_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetDailyMissionRewardResp::set_has_reward_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetDailyMissionRewardResp::clear_has_reward_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetDailyMissionRewardResp::clear_reward_times() {
  reward_times_ = 0u;
  clear_has_reward_times();
}
inline ::google::protobuf::uint32 GetDailyMissionRewardResp::reward_times() const {
  // @@protoc_insertion_point(field_get:ProtoDailyMission.GetDailyMissionRewardResp.reward_times)
  return reward_times_;
}
inline void GetDailyMissionRewardResp::set_reward_times(::google::protobuf::uint32 value) {
  set_has_reward_times();
  reward_times_ = value;
  // @@protoc_insertion_point(field_set:ProtoDailyMission.GetDailyMissionRewardResp.reward_times)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoDailyMission

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoDailyMission_2eproto__INCLUDED
