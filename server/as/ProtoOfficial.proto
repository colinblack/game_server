package ProtoOfficial;


//部门
enum eDepartment
{
	e_None		= 0;	//无部门
	e_Commander = 1;  	//司令部	
	e_Defense 	= 2;	//国防部	
	e_President = 3; 	//总统府
	e_Marshal 	= 4;	//元帅府
	e_Staff 	= 5;  	//参谋部
};

//官职表示
//1--部长;(10)--副级其实值 ;(20)--队长起始值 ;0--成员

//部门记录op意义
/*
enum record_op
{
	e_ApplyJoin_op 	= 1, //申请加入
	e_Join_op	   	= 2, //加入记录
	e_Appoint_op	= 3, //任命  一定是总统任命副总统
	e_Exit_op		= 4, //退出
	e_Usurp_op		= 5, //夺取官职
};
*/

//部门的特权记录
//各个字段对应的不同操作含义不一样
message DepartmentRecord
{
	required uint32		params  	= 1;  //参数记录  例如操作者的uid
	required bytes		operate 	= 2;  //操作者， 名字
	required bytes		target	 	= 3;  //目操作者
	required uint32		operate_job = 4;  //操作者官职
	required uint32		target_job  = 5;  //目标职位
	required uint32		ts			= 6;  //操作时间	
	required uint32		op			= 7;  //操作类型
}

//人事记录
message PersonnelRecord
{
	required bytes			operate 	= 1;  //进攻者
	required bytes			target	 	= 2;  //防守者
	required eDepartment 	department 	= 3;  //部门
	required uint32	 	 	official	= 4;  //官职
	required uint32			ts			= 5;  //操作时间	
}

//特权
message PrivilegeRecord
{
	required bytes			operate 	= 1;  //进攻者
	required bytes			target	 	= 2;  //目标名称 
	required eDepartment 	department 	= 3;  //部门
	required uint32	 	 	official	= 4;  //官职
	required uint32			ts			= 5;  //操作时间
	required uint32 		type		= 6;  //操作类型
	required uint32 		params		= 7;  //扩展参数	
}

message DepartmentMember
{
	required uint32	 	official		= 1;  //官职
	required uint32		uid 			= 2;  //0--npc; >0真实玩家
	required bytes		name 			= 3;  //玩家名字   可能为空
	required uint32		lvl	 			= 4;  //玩家等级   可能为空
	required bytes		head			= 5;  //头像问题
}


message DepartmentLeader
{
	required 	eDepartment 	 type	  = 1;  //部门类型
	required	DepartmentMember leader   = 2;
	required	uint32			 prestige = 3;  //威望
}

//官员令
message PublishToken
{
	required eDepartment department = 1; //发布官员令的部长
	required uint32		 ts			= 2; //到期时间
	required uint32		 city_id	= 3; //城市id
	required bytes		 text		= 4; //自定义官员令对应文字信息
	required bytes		 name		= 5; //发布人名字
	required uint32		 kingdom	= 6; //官员令的国家
}

//////////////////////////////////////////////////////////////////
//打开部门界面信息
message OfficialInfoReq
{
	required 	eDepartment 	 department	  = 1;  //部门类型
}

message OfficialInfoResp
{
	repeated DepartmentLeader		leaders 	= 1; 		//元首列表
	required eDepartment 	 		department 	= 2;  		//部门类型
	repeated DepartmentMember		members	   	= 3;  		//部门成员
	required bytes					country_notice	= 4;  	//国家公告
	required bytes					depart_notice	= 5; 	//部门公告
}

//当玩家职位发生变化时，会收到该协议
message PushJobChangeMsg
{
	required eDepartment 	origin_depart		= 1;  //原部门  0--表示没有
	required int32			origin_job			= 2;  //原职位   
	required eDepartment	target_depart		= 3;  //新部门 0--表示没有
	required int32			target_job			= 4;  //新职位 
}

//挑战队长
message ChallengeReq
{
	required eDepartment department		= 1;  //部门
	required uint32	 	 official		= 2;  //官职
}

message ChallengeResp
{
	required eDepartment department		= 1; //部门
	required uint32	 	 official		= 2; //官职
	repeated uint32		 hero_ids 		= 3; //英雄ID 对方的英雄队列  可能为 空	
	repeated uint32		 hero_lvl		= 4; //英雄等级
	repeated uint32		 hero_troops	= 5; //带兵量
}

//开始战斗
message StartChallengeReq
{
	required eDepartment 	department		= 1;  //部门
	required uint32			official		= 2; //官职		
	repeated uint32			hero_ids 		= 3; //英雄ID		
}

//任命/解雇副部长
message AppointDeputyReq
{
	required eDepartment 		department		= 1;  //部门
	required uint32				uid				= 2;  //被任命的人或被解雇的人
}

//
message AppointDeputyResp
{
	required eDepartment 	department		= 1;  //部门
	required uint32			uid				= 2;  //被任命的人或被解雇的人
	required uint32			origin			= 3;  //起始官职
	required uint32			target			= 4;  //目标官职
	required bytes			name			= 5;  //发布人的名字
	repeated DepartmentMember	members	   	= 6;  //部门成员
	repeated DepartmentRecord 	records		= 7;  //部门记录
}

//加入申请   
message ApplyJoinReq
{
	required eDepartment 	department		= 1;  //部门
}

message ApplyJoinResp
{
	required eDepartment 		department	= 1;  //部门
	repeated DepartmentMember	members	   	= 2;  //部门成员
	repeated DepartmentRecord 	records		= 3;  //部门记录
}

//退出
message ApplyExitReq
{
	required eDepartment 	department		= 1;  //部门	
}

//
message ApplyExitResp
{
	required eDepartment 	  department		= 1;  //最新部门
	required uint32			  official		= 2;  //官职	
	required uint32			  prestige		= 3;  //官威
	repeated DepartmentMember members	   	= 4;  		//部门成员
}

//同意  申请入部门
message AgreeJoinReq
{
	required uint32				uid				= 1; //申请者
	required eDepartment 		department		= 2;  //部门
}

message AgreeJoinResp
{
	required eDepartment 		department		= 1;  //部门
	repeated DepartmentMember	members	   		= 2;  //部门成员
	repeated DepartmentRecord 	records			= 3;  //部门记录
}

//拒绝 申请入部门
message RefuseJoinReq
{
	required uint32				uid				= 1; //申请者
	required eDepartment 		department		= 2;  //部门
}

message RefuseJoinResp
{
	required eDepartment 		department		= 1;  //部门
	repeated DepartmentRecord 	records			= 2;  //部门记录
}

//设置公告  只有总统才能编辑国家公告
message SetNoticeReq
{
	required eDepartment 	department		= 1;  //0--国家公告
	required bytes			text 			= 2;  //玩家名字   可能为空
}

//领取俸禄
message GetSalaryReq
{
}

message GetSalaryResp
{
	required uint32		salary			= 1; //领取的俸禄
	required uint32		coins			= 2; //最新的钞票数
	required uint32     job_reward_ts	= 3; //军职奖励时间
}

//部门记录
message GetDepartmentRecordReq
{
	required eDepartment  department   = 1;
}

//部门记录
message GetDepartmentRecordResp
{
	repeated DepartmentRecord records	= 1; //部门记录
}

//官员令
message PublishTokenReq
{
	required uint32			city_id		= 1; //城市
	required bytes  		text		= 2; //内容
	required eDepartment 	department  = 3; //部门 //发布官员令的部长所在部门
}

//本国的人都会收到   推送协议
message PushPublishToken
{	
	required PublishToken token		= 1; //
}

//响应官员令
message RespondTokenReq
{
	repeated uint32		hero_ids 	= 1; //英雄ID		
}

message RespondTokenResp
{
	repeated uint32		hero_ids 	= 1; //成功的英雄列表
	required uint32		token_ts	= 2; //官员令响应时间戳
}


//人事记录
message GetPersonnelRecordReq
{
}


message GetPersonnelRecordResp
{
	repeated PersonnelRecord records	= 1; //记录
}

//特权记录
message GetPrivilegeRecordReq
{
}


message GetPrivilegeRecordResp
{
	repeated PrivilegeRecord records	= 1; //记录
}

//T人
message KickOutMemberReq
{
	required uint32				uid				= 1; //被T的成员uid
	required eDepartment 		department		= 2;  //部门
}

message KickOutMemberResp
{
	required eDepartment 		department		= 1;  //部门
	repeated DepartmentMember	members	   		= 2;  //部门成员
	repeated DepartmentRecord 	records			= 3;  //部门记录
}


