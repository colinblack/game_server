import "DataCommon.proto";
import "User.proto";

package ProtoActivity;

////////////////////////////////////////////////////////////////////////
message LimitShopItem
{
	required uint32	 id 	 = 1; //
	required uint32  buy_cnt = 2; //已经购买次数
}

message LimitShopBuyReq
{
	required uint32	 id = 1;
}

message LimitShopBuyResp
{
	required uint32	 						id 			= 1;
	required uint32							cash		= 2; //最新钻石
	required uint32							buy_cnt		= 3; //已经购买次数
	required DataCommon.EquipmentAllCPP 	equip	   	= 4; //礼包	
}


//
message LimitShopUserInfoReq
{
	
}

message LimitShopUserInfoResp
{
	repeated LimitShopItem			items = 1;   //
}

///////////////////////////////////////////////////////////////////////
//充值返现
message CashBackItem
{
	required uint32 id 				= 1;
	required bool	is_get_reward 	= 2;  //是否可以领奖 true--可以 false--不可以
}

//
message CashBackInfoReq
{
	
}

message CashBackInfoResp
{
	repeated CashBackItem  items 			= 1;  //各项领取信息
	required uint32		   total_recharge 	= 2;  //累计充值
}

//领奖
message CashBackRewardReq
{
	required uint32 id 				= 1;
}

message CashBackRewardResp
{
	required CashBackItem  					item = 1;  //各项领取信息
	required DataCommon.CommonBaseRewardCPP reward = 2; 
}

///////////////////////////////////////////////////////
//闯关返钻
message PassActivityItem
{
	required uint32	 id 	 		= 1; //对应配置文件的id项
	required bool	 is_get_reward 	= 2; //ture--已经领取 false--不可领取，或未领取
}

message PassActivityRecord
{
	required bytes	name 		= 1;  //领取奖励玩家名字
	required uint32	pass_id 	= 2;  //过关口
	required uint32	cash		= 3;  //领取的钻石
}

//获取信息
message PassActivityInfoReq
{
}

message PassActivityInfoResp
{
	repeated PassActivityItem	items	= 1; //领取信息
	repeated PassActivityRecord records = 2;
}

//领取奖励
message PassActivityRewardReq
{
	required uint32 id		= 1; //对应配置文件id项，非关卡id
}

message PassActivityRewardResp
{
	required PassActivityItem				items	= 1; 
	required DataCommon.CommonBaseRewardCPP reward  = 2; 
}
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//洗练放送
message  SmeltItem
{
	required uint32 id 						= 1;  //1--至尊洗练令 2--升级洗练令 3--指定洗练令
	required uint32 reward_cnt 				= 2;  //可领取次数
	required uint32	yet_cnt		  			= 3;  //已经领取 次数
}

//获取洗练数据
message SmeltInfoReq
{
}

message SmeltInfoResp
{
	required uint32		total_smelt_cnt = 1; //累计洗练次数
	repeated SmeltItem	items			= 2; 
}

//领取奖励
message SmeltRewardReq
{
	required uint32 	id = 1; //1--至尊洗练令 2--升级洗练令 3--指定洗练令
}

message SmeltRewardResp
{
	required SmeltItem 						item 		= 1;
	required DataCommon.EquipmentAllCPP 	equip	   	= 2; //道具	
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
//摸金校尉
//古墓
message TouchGoldTombItem
{
	required uint32		id 			= 1;  //对应配置文件
	required bool		is_locked 	= 2;  //true-已经解锁
} 

message TouchGoldInfo
{
	repeated TouchGoldTombItem 	tombs 		 = 1;  //各个古墓
	required uint32				total_touch  = 2;  //累计已经摸金次数
	required uint32				total_limit	 = 3;  //累计摸金限制
	required uint32				surplus		 = 4;  //剩余摸金次数
	repeated uint32				out			 = 5;  //产出列表 >0表示产出值 0--表示还未摸金
	required uint32 			component	 = 6;  //零件		
	required uint32 			cur_tomb_id	 = 7;  //当前古墓ID		
}

//返回TouchGoldInfo
message TouchGoldInfoReq
{
}

//单次摸金  返回TouchGoldResp
message TouchGoldOnceReq
{
	required uint32 index = 1;
}

//一键摸金  返回TouchGoldResp
message TouchGoldAllReq
{

}

//解锁  返回TouchGoldResp
message TouchGoldUnlockReq
{
	required uint32 id = 1; //解锁的陵墓id
}

message TouchGoldResp
{
	required TouchGoldInfo  info = 1;
	required uint32			cash = 2;
}

//重置  返回TouchGoldInfo
message TouchGoldResetReq
{

}

//切换古墓  //返回TouchGoldInfo
message TouchGoldSwitchReq
{
	required uint32 id = 1; //切换到的古墓
}
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//超值钜惠
message HugeDiscountItem
{
	required uint32	 id 	 = 1; //
	required uint32  buy_cnt = 2; //已经购买次数
}

message HugeDiscountPage
{
	required uint32	 			page_id 	= 1;  //页面id
	repeated HugeDiscountItem  	goods		= 2; //
}

//信息
message HugeDiscountInfoReq
{
	
}

message HugeDiscountInfoResp
{
	repeated HugeDiscountPage	items 		= 1;   //对应页面没有数据返回，说明没有购买信息
	required uint32				recharge 	= 2;  //当前充值
}

//购买
message HugeDiscountBuyReq
{
	required uint32 	page_id	= 1;
	required uint32	 	id 		= 2;
}

message HugeDiscountBuyResp
{
	required uint32 						page_id		= 1;
	required HugeDiscountItem				item_info	= 2;
	required uint32							cash		= 3; //最新钻石
	required DataCommon.EquipmentAllCPP 	equip	   	= 4; //购买物品
}

//@end 超值钜惠

///////////////////////////////////////////////////////////////////////////
//充点小钱
//打开窗口
message OpenLittleChargeWindowReq
{
	
}

message OpenLittleChargeWindowResp
{
	required uint32 cash = 1;  //当日充值
}

message LittleChargeRewardReq
{
	
}

message LittleChargeRewardResp
{
	required uint32 shadow = 1;  //是否领取字段,第1位
	required DataCommon.EquipmentAllCPP equip = 2; //礼包
}

///////////////////////////////////////////////////////////////////////////
//杀敌活跃
//打开窗口
message OpenEnlivenKillWindowReq
{
	
}

message OpenEnlivenKillWindowResp
{
	required uint32 kill = 1;  //当日杀敌
	required uint32 shadow	= 2; //杀敌是否领取字段，第2-5位
}

//领取活跃奖励
message ReceiveDailyKillRewardReq
{
	required uint32 index	= 1;
}

message ReceiveDailyKillRewardResp
{
	required uint32 shadow	= 1;  //杀敌是否领取字段，第2-5位
	required User.RewardBagInfo reward	= 2;  //奖励 
}

///////////////////////////////////////////////////////////////////////////
//部件售卖
message SellComponentCPP
{
	required uint32 num1	= 1;  //格子1的已购买数量
	required uint32 num2	= 2;  //格子2的已购买数量
}

//打开窗口
message OpenSellComponentWindowReq
{
	
}

message OpenSellComponentWindowResp
{
	required SellComponentCPP sellinfo	= 1;   
}

//购买商品
message BuyComponentReq
{
	required uint32 index	= 1;
}

message BuyComponentResp
{
	required SellComponentCPP sellinfo	= 1; 
	required User.RewardBagInfo reward	= 2;  //奖励 
	required uint32 cash	= 3;
	required uint32 index	= 4;
}

//@end 