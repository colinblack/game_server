import "DataCommon.proto";
import "ProtoComponent.proto";

package ProtoHero;

message HeroBaseInfoCPP
{
	required uint32 heroid		= 1;  //英雄id
	required uint32 status		= 2;  //英雄状态
	required uint32 level		= 3;   //英雄等级
	required uint64 exp			= 4;  //英雄经验
	required uint32 attacknum	= 5;   //累计攻城数
	required uint32 ovonum		= 6;   //累计单挑数
	required uint32 killnum 	= 7;   //累计杀敌数
	required uint32 hp			= 8;	//血量
	required uint32 attack		= 9;   //攻击
	required uint32 defend		= 10;  //防御
	required uint32 rule		= 11;   //统
	required uint32 courage 	= 12;   //勇
	optional uint32 power 		= 13;   //战力
}

message EquipmentWrapCPP
{
	repeated DataCommon.EquipmentCPP equips 	= 1;   //装备信息
}

message HeroSoldiersCPP
{
	required uint32 heroid			= 1;
	required uint32 soldiers		= 2; //实际士兵数
	required uint32 max				= 3; //最大兵力数
}

//英雄解锁推送
message UnlockHeroPushReq
{
	required HeroBaseInfoCPP hero		= 1;
	required HeroSoldiersCPP soidiers	= 2;
}

//招募英雄
message RecruitHeroReq
{
	required uint32 heroid	= 1;
}

message RecruitHeroResp
{
	required uint32 coin					= 1;   //银两
	required HeroBaseInfoCPP hero			= 2;   //英雄信息
	required HeroSoldiersCPP soidiers		= 3;   //士兵信息
}

//英雄解雇
message FireHeroReq
{
	required uint32 heroid	= 1;
}

message FireHeroResp
{
	required HeroBaseInfoCPP hero			= 1;   //英雄信息
	required EquipmentWrapCPP equipwrap			= 2;   //脱下的装备信息
}

//穿装备
message DressEquipReq
{
	required uint32 heroid		= 1;	//英雄id
	required uint32 equd		= 2;	//新装备ud
	required uint32 oldequd		= 3;	//旧的装备ud
}

message DressEquipResp
{
	required EquipmentWrapCPP equipwrap		= 1;  //装备信息
	required HeroBaseInfoCPP hero  		  	= 2;  //英雄信息 
}

//脱装备
message UnDressEquipReq
{
	required uint32 heroid		= 1;  //英雄id
	required uint32 equd		= 2;   //装备ud
}

message UnDressEquipResp
{
	required DataCommon.EquipmentCPP equip     = 1;  //脱下的装备信息
	required HeroBaseInfoCPP hero   = 2;  //英雄信息
}

//一键装备
message OneKeyDressReq
{
	required uint32 heroid = 1;
}

message OneKeyDressResp
{
	required HeroBaseInfoCPP hero   = 1;   
	required EquipmentWrapCPP equipwrap		= 2; //一键穿戴上的装备信息
}

//英雄换装
message SwitchDressReq
{
	repeated uint32 heroids			= 1;        
}

message SwitchDressResp
{
	repeated HeroBaseInfoCPP heroes   = 1;  
	required EquipmentWrapCPP equipwrap		= 2;   //互换的装备信息
}

//使用 募兵令 
message UseRecruitPropReq
{
	required uint32 hero_id	= 1;//英雄Id
}

message UseRecruitPropResp
{
	required uint32 		 order  = 1; //募兵令
	required HeroSoldiersCPP hero	= 2;//英雄Id
	required uint32			 food	= 3; //最新粮食
	required uint32			 cash	= 4; //钻石
}

//同步士兵数
message SyncSoldiersReq
{
	repeated uint32 hero_ids = 1; //英雄集合
}

message SyncSoldiersResp
{
	repeated HeroSoldiersCPP heros = 1; //英雄兵力信息集合
}

message OpenSmeltWindowReq
{

}

message OpenSmeltWindowResp
{
	required uint32 freetimes = 1;   //免费洗练次数
}

//装备洗练
message EquipSmeltReq
{
	required uint32 equd	= 1;    //装备ud
	required uint32 type	= 2;	//洗练方式,免费洗练或至尊洗练
}

message EquipSmeltResp
{
	required DataCommon.EquipmentCPP equip     	= 1;  //装备信息
	required HeroBaseInfoCPP hero				= 2;   //英雄信息,可能有，可能没有
	required uint32  refresh		= 3;		//免费洗练次数
	required uint32  arefresh		= 4;	//至尊洗练次数
	required uint32  cash			= 5;	//钻石
}

//至尊洗练令洗练
message EquipSmeltPropReq
{
	required uint32 prop_ud		= 1; //至尊洗练令的ud
	required uint32 equip_ud	= 2; //装备ud 
}

message EquipSmeltPropResp
{
	required uint32 prop_ud					= 1; //道具ud
	required uint32 prop_cnt				= 2; //道具剩余数量
	required DataCommon.EquipmentCPP equip     	= 3;  //装备信息
	optional HeroBaseInfoCPP hero				= 4;   //英雄信息,可能有，可能没有
}



//英雄经验道具使用
message UseHeroexpPropsReq
{
	required uint32 equd	= 1;	//道具ud
	required uint32 heroid	= 2;	//英雄id
	required uint32 count	= 3;	//道具数量
	required uint32 eqid	= 4;	//道具id
}

message UseHeroexpPropsResp
{
	required uint32 equd 				= 1;   //道具ud
	required uint32 count				= 2;	//道具剩余数量
	required HeroBaseInfoCPP hero		= 3;  //英雄信息
}

//套装合成
message ComposeSuitReq
{
	required uint32 equd	= 1; 	//消耗的装备ud
	repeated uint32 materialud = 2;  //材料ud
}

message ComposeSuitResp
{
	required DataCommon.EquipmentAllCPP equips = 1;  //装备信息	
	optional HeroBaseInfoCPP hero	= 2;   //英雄信息,可能有，可能没有
}

//打开阅兵窗口
message OpenParadeWindowReq
{
	
}

message OpenParadeWindowResp
{
	required uint32 banquet	= 1;  //阅兵次数
	required uint32 silk	= 2;  //回血次数	
}

//阅兵
message ParadeReq
{
	
}

message ParadeResp
{
	required uint32 banquet	= 1;  //阅兵次数
	required uint32 silk	= 2;  //回血次数
	repeated uint32 id		= 3; //回满血的英雄
}

//装载部件
message LoadCompoReq
{
	required uint32 heroid		= 1;	//英雄id
	required uint32 compud		= 2;	//新部件ud
	required uint32 pos			= 3;  //位置
	optional uint32 oldcompud	= 4;	//旧部件ud
}

message LoadCompoResp
{
	required ProtoComponent.ComponentAllCPP  compoall	= 1;  //部件信息
	required HeroBaseInfoCPP hero  		  				= 2;  //英雄信息 
}

//卸载部件
message UnLoadCompoReq
{
	required uint32 compud		= 1;   //部件ud
	required uint32 heroid		= 2;  //英雄id
}

message UnLoadCompoResp
{
	required ProtoComponent.ComponentCPP compo     = 1;  //卸载下的部件信息
	required HeroBaseInfoCPP hero   = 2;  //英雄信息
}

//强化部件
message StrengthenCompoReq
{
	required uint32 compud		= 1;  //强化的部件
	repeated uint32 othcompud	= 2;   //消耗的部件
}

message StrengthenCompoResp
{
	required ProtoComponent.ComponentCPP compo	= 1;   //部件
	repeated uint32 				delcompos	= 2;  //被吞噬的部件ud集合
	required DataCommon.CostItemCPP coin		= 3;  //钞票
	required DataCommon.CostItemCPP wood		= 4;  //钢材
	optional HeroBaseInfoCPP 		hero   		= 5;  //英雄信息
}

//一键强化部件
message OneKeyStrengthenCompoReq
{
	required uint32 compud	= 1;
}

message OneKeyStrengthenCompoResp
{
	required ProtoComponent.ComponentCPP compo	= 1;  //强化的部件
	repeated uint32 				delcompos	= 2;  //被吞噬的部件ud集合
	required DataCommon.CostItemCPP		coin	= 3;  //钞票
	required DataCommon.CostItemCPP		wood	= 4;   //钢材
	optional HeroBaseInfoCPP 			hero  	= 5;  //英雄
}
