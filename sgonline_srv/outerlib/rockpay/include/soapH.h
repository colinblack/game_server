/* soapH.h
   Generated by gSOAP 2.8.3 from pockpay.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CommitTransactionNTDResponse
#define SOAP_TYPE__ns1__CommitTransactionNTDResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CommitTransactionNTDResponse(struct soap*, const char*, int, const _ns1__CommitTransactionNTDResponse *, const char*);
SOAP_FMAC3 _ns1__CommitTransactionNTDResponse * SOAP_FMAC4 soap_in__ns1__CommitTransactionNTDResponse(struct soap*, const char*, _ns1__CommitTransactionNTDResponse *, const char*);

#ifndef soap_write__ns1__CommitTransactionNTDResponse
#define soap_write__ns1__CommitTransactionNTDResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CommitTransactionNTDResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CommitTransactionNTDResponse
#define soap_read__ns1__CommitTransactionNTDResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CommitTransactionNTDResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionNTDResponse * SOAP_FMAC4 soap_get__ns1__CommitTransactionNTDResponse(struct soap*, _ns1__CommitTransactionNTDResponse *, const char*, const char*);

#define soap_new__ns1__CommitTransactionNTDResponse(soap, n) soap_instantiate__ns1__CommitTransactionNTDResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CommitTransactionNTDResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CommitTransactionNTDResponse * SOAP_FMAC2 soap_instantiate__ns1__CommitTransactionNTDResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CommitTransactionNTDResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CommitTransactionNTD
#define SOAP_TYPE__ns1__CommitTransactionNTD (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CommitTransactionNTD(struct soap*, const char*, int, const _ns1__CommitTransactionNTD *, const char*);
SOAP_FMAC3 _ns1__CommitTransactionNTD * SOAP_FMAC4 soap_in__ns1__CommitTransactionNTD(struct soap*, const char*, _ns1__CommitTransactionNTD *, const char*);

#ifndef soap_write__ns1__CommitTransactionNTD
#define soap_write__ns1__CommitTransactionNTD(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CommitTransactionNTD", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CommitTransactionNTD
#define soap_read__ns1__CommitTransactionNTD(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CommitTransactionNTD(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionNTD * SOAP_FMAC4 soap_get__ns1__CommitTransactionNTD(struct soap*, _ns1__CommitTransactionNTD *, const char*, const char*);

#define soap_new__ns1__CommitTransactionNTD(soap, n) soap_instantiate__ns1__CommitTransactionNTD(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CommitTransactionNTD(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CommitTransactionNTD * SOAP_FMAC2 soap_instantiate__ns1__CommitTransactionNTD(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CommitTransactionNTD(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CommitTransactionResponse
#define SOAP_TYPE__ns1__CommitTransactionResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CommitTransactionResponse(struct soap*, const char*, int, const _ns1__CommitTransactionResponse *, const char*);
SOAP_FMAC3 _ns1__CommitTransactionResponse * SOAP_FMAC4 soap_in__ns1__CommitTransactionResponse(struct soap*, const char*, _ns1__CommitTransactionResponse *, const char*);

#ifndef soap_write__ns1__CommitTransactionResponse
#define soap_write__ns1__CommitTransactionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CommitTransactionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CommitTransactionResponse
#define soap_read__ns1__CommitTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CommitTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionResponse * SOAP_FMAC4 soap_get__ns1__CommitTransactionResponse(struct soap*, _ns1__CommitTransactionResponse *, const char*, const char*);

#define soap_new__ns1__CommitTransactionResponse(soap, n) soap_instantiate__ns1__CommitTransactionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CommitTransactionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CommitTransactionResponse * SOAP_FMAC2 soap_instantiate__ns1__CommitTransactionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CommitTransactionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CommitTransaction
#define SOAP_TYPE__ns1__CommitTransaction (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CommitTransaction(struct soap*, const char*, int, const _ns1__CommitTransaction *, const char*);
SOAP_FMAC3 _ns1__CommitTransaction * SOAP_FMAC4 soap_in__ns1__CommitTransaction(struct soap*, const char*, _ns1__CommitTransaction *, const char*);

#ifndef soap_write__ns1__CommitTransaction
#define soap_write__ns1__CommitTransaction(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CommitTransaction", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CommitTransaction
#define soap_read__ns1__CommitTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CommitTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransaction * SOAP_FMAC4 soap_get__ns1__CommitTransaction(struct soap*, _ns1__CommitTransaction *, const char*, const char*);

#define soap_new__ns1__CommitTransaction(soap, n) soap_instantiate__ns1__CommitTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CommitTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CommitTransaction * SOAP_FMAC2 soap_instantiate__ns1__CommitTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CommitTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckTransactionWithCurrencyResponse
#define SOAP_TYPE__ns1__CheckTransactionWithCurrencyResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckTransactionWithCurrencyResponse(struct soap*, const char*, int, const _ns1__CheckTransactionWithCurrencyResponse *, const char*);
SOAP_FMAC3 _ns1__CheckTransactionWithCurrencyResponse * SOAP_FMAC4 soap_in__ns1__CheckTransactionWithCurrencyResponse(struct soap*, const char*, _ns1__CheckTransactionWithCurrencyResponse *, const char*);

#ifndef soap_write__ns1__CheckTransactionWithCurrencyResponse
#define soap_write__ns1__CheckTransactionWithCurrencyResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CheckTransactionWithCurrencyResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CheckTransactionWithCurrencyResponse
#define soap_read__ns1__CheckTransactionWithCurrencyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckTransactionWithCurrencyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionWithCurrencyResponse * SOAP_FMAC4 soap_get__ns1__CheckTransactionWithCurrencyResponse(struct soap*, _ns1__CheckTransactionWithCurrencyResponse *, const char*, const char*);

#define soap_new__ns1__CheckTransactionWithCurrencyResponse(soap, n) soap_instantiate__ns1__CheckTransactionWithCurrencyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckTransactionWithCurrencyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckTransactionWithCurrencyResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckTransactionWithCurrencyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckTransactionWithCurrencyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckTransactionWithCurrency
#define SOAP_TYPE__ns1__CheckTransactionWithCurrency (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckTransactionWithCurrency(struct soap*, const char*, int, const _ns1__CheckTransactionWithCurrency *, const char*);
SOAP_FMAC3 _ns1__CheckTransactionWithCurrency * SOAP_FMAC4 soap_in__ns1__CheckTransactionWithCurrency(struct soap*, const char*, _ns1__CheckTransactionWithCurrency *, const char*);

#ifndef soap_write__ns1__CheckTransactionWithCurrency
#define soap_write__ns1__CheckTransactionWithCurrency(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CheckTransactionWithCurrency", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CheckTransactionWithCurrency
#define soap_read__ns1__CheckTransactionWithCurrency(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckTransactionWithCurrency(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionWithCurrency * SOAP_FMAC4 soap_get__ns1__CheckTransactionWithCurrency(struct soap*, _ns1__CheckTransactionWithCurrency *, const char*, const char*);

#define soap_new__ns1__CheckTransactionWithCurrency(soap, n) soap_instantiate__ns1__CheckTransactionWithCurrency(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckTransactionWithCurrency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckTransactionWithCurrency * SOAP_FMAC2 soap_instantiate__ns1__CheckTransactionWithCurrency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckTransactionWithCurrency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckTransactionResponse
#define SOAP_TYPE__ns1__CheckTransactionResponse (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckTransactionResponse(struct soap*, const char*, int, const _ns1__CheckTransactionResponse *, const char*);
SOAP_FMAC3 _ns1__CheckTransactionResponse * SOAP_FMAC4 soap_in__ns1__CheckTransactionResponse(struct soap*, const char*, _ns1__CheckTransactionResponse *, const char*);

#ifndef soap_write__ns1__CheckTransactionResponse
#define soap_write__ns1__CheckTransactionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CheckTransactionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CheckTransactionResponse
#define soap_read__ns1__CheckTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionResponse * SOAP_FMAC4 soap_get__ns1__CheckTransactionResponse(struct soap*, _ns1__CheckTransactionResponse *, const char*, const char*);

#define soap_new__ns1__CheckTransactionResponse(soap, n) soap_instantiate__ns1__CheckTransactionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckTransactionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckTransactionResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckTransactionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckTransactionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckTransaction
#define SOAP_TYPE__ns1__CheckTransaction (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckTransaction(struct soap*, const char*, int, const _ns1__CheckTransaction *, const char*);
SOAP_FMAC3 _ns1__CheckTransaction * SOAP_FMAC4 soap_in__ns1__CheckTransaction(struct soap*, const char*, _ns1__CheckTransaction *, const char*);

#ifndef soap_write__ns1__CheckTransaction
#define soap_write__ns1__CheckTransaction(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:CheckTransaction", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__CheckTransaction
#define soap_read__ns1__CheckTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransaction * SOAP_FMAC4 soap_get__ns1__CheckTransaction(struct soap*, _ns1__CheckTransaction *, const char*, const char*);

#define soap_new__ns1__CheckTransaction(soap, n) soap_instantiate__ns1__CheckTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckTransaction * SOAP_FMAC2 soap_instantiate__ns1__CheckTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfString
#define SOAP_TYPE_ns1__ArrayOfString (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfString(struct soap*, const char*, int, const ns1__ArrayOfString *, const char*);
SOAP_FMAC3 ns1__ArrayOfString * SOAP_FMAC4 soap_in_ns1__ArrayOfString(struct soap*, const char*, ns1__ArrayOfString *, const char*);

#ifndef soap_write_ns1__ArrayOfString
#define soap_write_ns1__ArrayOfString(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:ArrayOfString", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__ArrayOfString
#define soap_read_ns1__ArrayOfString(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfString(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__ArrayOfString * SOAP_FMAC4 soap_get_ns1__ArrayOfString(struct soap*, ns1__ArrayOfString *, const char*, const char*);

#define soap_new_ns1__ArrayOfString(soap, n) soap_instantiate_ns1__ArrayOfString(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__ArrayOfString(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__ArrayOfString * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfString(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfString(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns3__CommitTransactionNTD
#define SOAP_TYPE___ns3__CommitTransactionNTD (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CommitTransactionNTD(struct soap*, struct __ns3__CommitTransactionNTD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CommitTransactionNTD(struct soap*, const struct __ns3__CommitTransactionNTD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CommitTransactionNTD(struct soap*, const char*, int, const struct __ns3__CommitTransactionNTD *, const char*);
SOAP_FMAC3 struct __ns3__CommitTransactionNTD * SOAP_FMAC4 soap_in___ns3__CommitTransactionNTD(struct soap*, const char*, struct __ns3__CommitTransactionNTD *, const char*);

#ifndef soap_write___ns3__CommitTransactionNTD
#define soap_write___ns3__CommitTransactionNTD(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CommitTransactionNTD(soap, data), 0) || soap_put___ns3__CommitTransactionNTD(soap, data, "-ns3:CommitTransactionNTD", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CommitTransactionNTD(struct soap*, const struct __ns3__CommitTransactionNTD *, const char*, const char*);

#ifndef soap_read___ns3__CommitTransactionNTD
#define soap_read___ns3__CommitTransactionNTD(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CommitTransactionNTD(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CommitTransactionNTD * SOAP_FMAC4 soap_get___ns3__CommitTransactionNTD(struct soap*, struct __ns3__CommitTransactionNTD *, const char*, const char*);

#define soap_new___ns3__CommitTransactionNTD(soap, n) soap_instantiate___ns3__CommitTransactionNTD(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__CommitTransactionNTD(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__CommitTransactionNTD * SOAP_FMAC2 soap_instantiate___ns3__CommitTransactionNTD(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__CommitTransactionNTD(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__CommitTransaction
#define SOAP_TYPE___ns3__CommitTransaction (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CommitTransaction(struct soap*, struct __ns3__CommitTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CommitTransaction(struct soap*, const struct __ns3__CommitTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CommitTransaction(struct soap*, const char*, int, const struct __ns3__CommitTransaction *, const char*);
SOAP_FMAC3 struct __ns3__CommitTransaction * SOAP_FMAC4 soap_in___ns3__CommitTransaction(struct soap*, const char*, struct __ns3__CommitTransaction *, const char*);

#ifndef soap_write___ns3__CommitTransaction
#define soap_write___ns3__CommitTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CommitTransaction(soap, data), 0) || soap_put___ns3__CommitTransaction(soap, data, "-ns3:CommitTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CommitTransaction(struct soap*, const struct __ns3__CommitTransaction *, const char*, const char*);

#ifndef soap_read___ns3__CommitTransaction
#define soap_read___ns3__CommitTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CommitTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CommitTransaction * SOAP_FMAC4 soap_get___ns3__CommitTransaction(struct soap*, struct __ns3__CommitTransaction *, const char*, const char*);

#define soap_new___ns3__CommitTransaction(soap, n) soap_instantiate___ns3__CommitTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__CommitTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__CommitTransaction * SOAP_FMAC2 soap_instantiate___ns3__CommitTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__CommitTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__CheckTransactionWithCurrency
#define SOAP_TYPE___ns3__CheckTransactionWithCurrency (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CheckTransactionWithCurrency(struct soap*, struct __ns3__CheckTransactionWithCurrency *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CheckTransactionWithCurrency(struct soap*, const struct __ns3__CheckTransactionWithCurrency *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CheckTransactionWithCurrency(struct soap*, const char*, int, const struct __ns3__CheckTransactionWithCurrency *, const char*);
SOAP_FMAC3 struct __ns3__CheckTransactionWithCurrency * SOAP_FMAC4 soap_in___ns3__CheckTransactionWithCurrency(struct soap*, const char*, struct __ns3__CheckTransactionWithCurrency *, const char*);

#ifndef soap_write___ns3__CheckTransactionWithCurrency
#define soap_write___ns3__CheckTransactionWithCurrency(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CheckTransactionWithCurrency(soap, data), 0) || soap_put___ns3__CheckTransactionWithCurrency(soap, data, "-ns3:CheckTransactionWithCurrency", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CheckTransactionWithCurrency(struct soap*, const struct __ns3__CheckTransactionWithCurrency *, const char*, const char*);

#ifndef soap_read___ns3__CheckTransactionWithCurrency
#define soap_read___ns3__CheckTransactionWithCurrency(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CheckTransactionWithCurrency(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CheckTransactionWithCurrency * SOAP_FMAC4 soap_get___ns3__CheckTransactionWithCurrency(struct soap*, struct __ns3__CheckTransactionWithCurrency *, const char*, const char*);

#define soap_new___ns3__CheckTransactionWithCurrency(soap, n) soap_instantiate___ns3__CheckTransactionWithCurrency(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__CheckTransactionWithCurrency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__CheckTransactionWithCurrency * SOAP_FMAC2 soap_instantiate___ns3__CheckTransactionWithCurrency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__CheckTransactionWithCurrency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__CheckTransaction
#define SOAP_TYPE___ns3__CheckTransaction (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CheckTransaction(struct soap*, struct __ns3__CheckTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CheckTransaction(struct soap*, const struct __ns3__CheckTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CheckTransaction(struct soap*, const char*, int, const struct __ns3__CheckTransaction *, const char*);
SOAP_FMAC3 struct __ns3__CheckTransaction * SOAP_FMAC4 soap_in___ns3__CheckTransaction(struct soap*, const char*, struct __ns3__CheckTransaction *, const char*);

#ifndef soap_write___ns3__CheckTransaction
#define soap_write___ns3__CheckTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CheckTransaction(soap, data), 0) || soap_put___ns3__CheckTransaction(soap, data, "-ns3:CheckTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CheckTransaction(struct soap*, const struct __ns3__CheckTransaction *, const char*, const char*);

#ifndef soap_read___ns3__CheckTransaction
#define soap_read___ns3__CheckTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CheckTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CheckTransaction * SOAP_FMAC4 soap_get___ns3__CheckTransaction(struct soap*, struct __ns3__CheckTransaction *, const char*, const char*);

#define soap_new___ns3__CheckTransaction(soap, n) soap_instantiate___ns3__CheckTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__CheckTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__CheckTransaction * SOAP_FMAC2 soap_instantiate___ns3__CheckTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__CheckTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CommitTransactionNTD
#define SOAP_TYPE___ns2__CommitTransactionNTD (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CommitTransactionNTD(struct soap*, struct __ns2__CommitTransactionNTD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CommitTransactionNTD(struct soap*, const struct __ns2__CommitTransactionNTD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CommitTransactionNTD(struct soap*, const char*, int, const struct __ns2__CommitTransactionNTD *, const char*);
SOAP_FMAC3 struct __ns2__CommitTransactionNTD * SOAP_FMAC4 soap_in___ns2__CommitTransactionNTD(struct soap*, const char*, struct __ns2__CommitTransactionNTD *, const char*);

#ifndef soap_write___ns2__CommitTransactionNTD
#define soap_write___ns2__CommitTransactionNTD(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CommitTransactionNTD(soap, data), 0) || soap_put___ns2__CommitTransactionNTD(soap, data, "-ns2:CommitTransactionNTD", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CommitTransactionNTD(struct soap*, const struct __ns2__CommitTransactionNTD *, const char*, const char*);

#ifndef soap_read___ns2__CommitTransactionNTD
#define soap_read___ns2__CommitTransactionNTD(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CommitTransactionNTD(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CommitTransactionNTD * SOAP_FMAC4 soap_get___ns2__CommitTransactionNTD(struct soap*, struct __ns2__CommitTransactionNTD *, const char*, const char*);

#define soap_new___ns2__CommitTransactionNTD(soap, n) soap_instantiate___ns2__CommitTransactionNTD(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__CommitTransactionNTD(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__CommitTransactionNTD * SOAP_FMAC2 soap_instantiate___ns2__CommitTransactionNTD(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CommitTransactionNTD(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CommitTransaction
#define SOAP_TYPE___ns2__CommitTransaction (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CommitTransaction(struct soap*, struct __ns2__CommitTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CommitTransaction(struct soap*, const struct __ns2__CommitTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CommitTransaction(struct soap*, const char*, int, const struct __ns2__CommitTransaction *, const char*);
SOAP_FMAC3 struct __ns2__CommitTransaction * SOAP_FMAC4 soap_in___ns2__CommitTransaction(struct soap*, const char*, struct __ns2__CommitTransaction *, const char*);

#ifndef soap_write___ns2__CommitTransaction
#define soap_write___ns2__CommitTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CommitTransaction(soap, data), 0) || soap_put___ns2__CommitTransaction(soap, data, "-ns2:CommitTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CommitTransaction(struct soap*, const struct __ns2__CommitTransaction *, const char*, const char*);

#ifndef soap_read___ns2__CommitTransaction
#define soap_read___ns2__CommitTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CommitTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CommitTransaction * SOAP_FMAC4 soap_get___ns2__CommitTransaction(struct soap*, struct __ns2__CommitTransaction *, const char*, const char*);

#define soap_new___ns2__CommitTransaction(soap, n) soap_instantiate___ns2__CommitTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__CommitTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__CommitTransaction * SOAP_FMAC2 soap_instantiate___ns2__CommitTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CommitTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CheckTransactionWithCurrency
#define SOAP_TYPE___ns2__CheckTransactionWithCurrency (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CheckTransactionWithCurrency(struct soap*, struct __ns2__CheckTransactionWithCurrency *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CheckTransactionWithCurrency(struct soap*, const struct __ns2__CheckTransactionWithCurrency *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CheckTransactionWithCurrency(struct soap*, const char*, int, const struct __ns2__CheckTransactionWithCurrency *, const char*);
SOAP_FMAC3 struct __ns2__CheckTransactionWithCurrency * SOAP_FMAC4 soap_in___ns2__CheckTransactionWithCurrency(struct soap*, const char*, struct __ns2__CheckTransactionWithCurrency *, const char*);

#ifndef soap_write___ns2__CheckTransactionWithCurrency
#define soap_write___ns2__CheckTransactionWithCurrency(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CheckTransactionWithCurrency(soap, data), 0) || soap_put___ns2__CheckTransactionWithCurrency(soap, data, "-ns2:CheckTransactionWithCurrency", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CheckTransactionWithCurrency(struct soap*, const struct __ns2__CheckTransactionWithCurrency *, const char*, const char*);

#ifndef soap_read___ns2__CheckTransactionWithCurrency
#define soap_read___ns2__CheckTransactionWithCurrency(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CheckTransactionWithCurrency(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CheckTransactionWithCurrency * SOAP_FMAC4 soap_get___ns2__CheckTransactionWithCurrency(struct soap*, struct __ns2__CheckTransactionWithCurrency *, const char*, const char*);

#define soap_new___ns2__CheckTransactionWithCurrency(soap, n) soap_instantiate___ns2__CheckTransactionWithCurrency(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__CheckTransactionWithCurrency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__CheckTransactionWithCurrency * SOAP_FMAC2 soap_instantiate___ns2__CheckTransactionWithCurrency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CheckTransactionWithCurrency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CheckTransaction
#define SOAP_TYPE___ns2__CheckTransaction (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CheckTransaction(struct soap*, struct __ns2__CheckTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CheckTransaction(struct soap*, const struct __ns2__CheckTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CheckTransaction(struct soap*, const char*, int, const struct __ns2__CheckTransaction *, const char*);
SOAP_FMAC3 struct __ns2__CheckTransaction * SOAP_FMAC4 soap_in___ns2__CheckTransaction(struct soap*, const char*, struct __ns2__CheckTransaction *, const char*);

#ifndef soap_write___ns2__CheckTransaction
#define soap_write___ns2__CheckTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CheckTransaction(soap, data), 0) || soap_put___ns2__CheckTransaction(soap, data, "-ns2:CheckTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CheckTransaction(struct soap*, const struct __ns2__CheckTransaction *, const char*, const char*);

#ifndef soap_read___ns2__CheckTransaction
#define soap_read___ns2__CheckTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CheckTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CheckTransaction * SOAP_FMAC4 soap_get___ns2__CheckTransaction(struct soap*, struct __ns2__CheckTransaction *, const char*, const char*);

#define soap_new___ns2__CheckTransaction(soap, n) soap_instantiate___ns2__CheckTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__CheckTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__CheckTransaction * SOAP_FMAC2 soap_instantiate___ns2__CheckTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CheckTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CommitTransactionNTDResponse
#define SOAP_TYPE_PointerTo_ns1__CommitTransactionNTDResponse (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CommitTransactionNTDResponse(struct soap*, _ns1__CommitTransactionNTDResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CommitTransactionNTDResponse(struct soap*, const char *, int, _ns1__CommitTransactionNTDResponse *const*, const char *);
SOAP_FMAC3 _ns1__CommitTransactionNTDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CommitTransactionNTDResponse(struct soap*, const char*, _ns1__CommitTransactionNTDResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CommitTransactionNTDResponse
#define soap_write_PointerTo_ns1__CommitTransactionNTDResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CommitTransactionNTDResponse(soap, data), 0) || soap_put_PointerTo_ns1__CommitTransactionNTDResponse(soap, data, "ns1:CommitTransactionNTDResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CommitTransactionNTDResponse(struct soap*, _ns1__CommitTransactionNTDResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CommitTransactionNTDResponse
#define soap_read_PointerTo_ns1__CommitTransactionNTDResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CommitTransactionNTDResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionNTDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CommitTransactionNTDResponse(struct soap*, _ns1__CommitTransactionNTDResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CommitTransactionNTD
#define SOAP_TYPE_PointerTo_ns1__CommitTransactionNTD (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CommitTransactionNTD(struct soap*, _ns1__CommitTransactionNTD *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CommitTransactionNTD(struct soap*, const char *, int, _ns1__CommitTransactionNTD *const*, const char *);
SOAP_FMAC3 _ns1__CommitTransactionNTD ** SOAP_FMAC4 soap_in_PointerTo_ns1__CommitTransactionNTD(struct soap*, const char*, _ns1__CommitTransactionNTD **, const char*);

#ifndef soap_write_PointerTo_ns1__CommitTransactionNTD
#define soap_write_PointerTo_ns1__CommitTransactionNTD(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CommitTransactionNTD(soap, data), 0) || soap_put_PointerTo_ns1__CommitTransactionNTD(soap, data, "ns1:CommitTransactionNTD", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CommitTransactionNTD(struct soap*, _ns1__CommitTransactionNTD *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CommitTransactionNTD
#define soap_read_PointerTo_ns1__CommitTransactionNTD(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CommitTransactionNTD(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionNTD ** SOAP_FMAC4 soap_get_PointerTo_ns1__CommitTransactionNTD(struct soap*, _ns1__CommitTransactionNTD **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CommitTransactionResponse
#define SOAP_TYPE_PointerTo_ns1__CommitTransactionResponse (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CommitTransactionResponse(struct soap*, _ns1__CommitTransactionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CommitTransactionResponse(struct soap*, const char *, int, _ns1__CommitTransactionResponse *const*, const char *);
SOAP_FMAC3 _ns1__CommitTransactionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CommitTransactionResponse(struct soap*, const char*, _ns1__CommitTransactionResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CommitTransactionResponse
#define soap_write_PointerTo_ns1__CommitTransactionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CommitTransactionResponse(soap, data), 0) || soap_put_PointerTo_ns1__CommitTransactionResponse(soap, data, "ns1:CommitTransactionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CommitTransactionResponse(struct soap*, _ns1__CommitTransactionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CommitTransactionResponse
#define soap_read_PointerTo_ns1__CommitTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CommitTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransactionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CommitTransactionResponse(struct soap*, _ns1__CommitTransactionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CommitTransaction
#define SOAP_TYPE_PointerTo_ns1__CommitTransaction (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CommitTransaction(struct soap*, _ns1__CommitTransaction *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CommitTransaction(struct soap*, const char *, int, _ns1__CommitTransaction *const*, const char *);
SOAP_FMAC3 _ns1__CommitTransaction ** SOAP_FMAC4 soap_in_PointerTo_ns1__CommitTransaction(struct soap*, const char*, _ns1__CommitTransaction **, const char*);

#ifndef soap_write_PointerTo_ns1__CommitTransaction
#define soap_write_PointerTo_ns1__CommitTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CommitTransaction(soap, data), 0) || soap_put_PointerTo_ns1__CommitTransaction(soap, data, "ns1:CommitTransaction", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CommitTransaction(struct soap*, _ns1__CommitTransaction *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CommitTransaction
#define soap_read_PointerTo_ns1__CommitTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CommitTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CommitTransaction ** SOAP_FMAC4 soap_get_PointerTo_ns1__CommitTransaction(struct soap*, _ns1__CommitTransaction **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckTransactionWithCurrencyResponse
#define SOAP_TYPE_PointerTo_ns1__CheckTransactionWithCurrencyResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckTransactionWithCurrencyResponse(struct soap*, _ns1__CheckTransactionWithCurrencyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckTransactionWithCurrencyResponse(struct soap*, const char *, int, _ns1__CheckTransactionWithCurrencyResponse *const*, const char *);
SOAP_FMAC3 _ns1__CheckTransactionWithCurrencyResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckTransactionWithCurrencyResponse(struct soap*, const char*, _ns1__CheckTransactionWithCurrencyResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckTransactionWithCurrencyResponse
#define soap_write_PointerTo_ns1__CheckTransactionWithCurrencyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckTransactionWithCurrencyResponse(soap, data), 0) || soap_put_PointerTo_ns1__CheckTransactionWithCurrencyResponse(soap, data, "ns1:CheckTransactionWithCurrencyResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckTransactionWithCurrencyResponse(struct soap*, _ns1__CheckTransactionWithCurrencyResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckTransactionWithCurrencyResponse
#define soap_read_PointerTo_ns1__CheckTransactionWithCurrencyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckTransactionWithCurrencyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionWithCurrencyResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckTransactionWithCurrencyResponse(struct soap*, _ns1__CheckTransactionWithCurrencyResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckTransactionWithCurrency
#define SOAP_TYPE_PointerTo_ns1__CheckTransactionWithCurrency (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckTransactionWithCurrency(struct soap*, _ns1__CheckTransactionWithCurrency *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckTransactionWithCurrency(struct soap*, const char *, int, _ns1__CheckTransactionWithCurrency *const*, const char *);
SOAP_FMAC3 _ns1__CheckTransactionWithCurrency ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckTransactionWithCurrency(struct soap*, const char*, _ns1__CheckTransactionWithCurrency **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckTransactionWithCurrency
#define soap_write_PointerTo_ns1__CheckTransactionWithCurrency(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckTransactionWithCurrency(soap, data), 0) || soap_put_PointerTo_ns1__CheckTransactionWithCurrency(soap, data, "ns1:CheckTransactionWithCurrency", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckTransactionWithCurrency(struct soap*, _ns1__CheckTransactionWithCurrency *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckTransactionWithCurrency
#define soap_read_PointerTo_ns1__CheckTransactionWithCurrency(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckTransactionWithCurrency(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionWithCurrency ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckTransactionWithCurrency(struct soap*, _ns1__CheckTransactionWithCurrency **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckTransactionResponse
#define SOAP_TYPE_PointerTo_ns1__CheckTransactionResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckTransactionResponse(struct soap*, _ns1__CheckTransactionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckTransactionResponse(struct soap*, const char *, int, _ns1__CheckTransactionResponse *const*, const char *);
SOAP_FMAC3 _ns1__CheckTransactionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckTransactionResponse(struct soap*, const char*, _ns1__CheckTransactionResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckTransactionResponse
#define soap_write_PointerTo_ns1__CheckTransactionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckTransactionResponse(soap, data), 0) || soap_put_PointerTo_ns1__CheckTransactionResponse(soap, data, "ns1:CheckTransactionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckTransactionResponse(struct soap*, _ns1__CheckTransactionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckTransactionResponse
#define soap_read_PointerTo_ns1__CheckTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransactionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckTransactionResponse(struct soap*, _ns1__CheckTransactionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckTransaction
#define SOAP_TYPE_PointerTo_ns1__CheckTransaction (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckTransaction(struct soap*, _ns1__CheckTransaction *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckTransaction(struct soap*, const char *, int, _ns1__CheckTransaction *const*, const char *);
SOAP_FMAC3 _ns1__CheckTransaction ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckTransaction(struct soap*, const char*, _ns1__CheckTransaction **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckTransaction
#define soap_write_PointerTo_ns1__CheckTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckTransaction(soap, data), 0) || soap_put_PointerTo_ns1__CheckTransaction(soap, data, "ns1:CheckTransaction", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckTransaction(struct soap*, _ns1__CheckTransaction *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckTransaction
#define soap_read_PointerTo_ns1__CheckTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__CheckTransaction ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckTransaction(struct soap*, _ns1__CheckTransaction **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__ArrayOfString
#define SOAP_TYPE_PointerTons1__ArrayOfString (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfString(struct soap*, ns1__ArrayOfString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfString(struct soap*, const char *, int, ns1__ArrayOfString *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfString ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfString(struct soap*, const char*, ns1__ArrayOfString **, const char*);

#ifndef soap_write_PointerTons1__ArrayOfString
#define soap_write_PointerTons1__ArrayOfString(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfString(soap, data), 0) || soap_put_PointerTons1__ArrayOfString(soap, data, "ns1:ArrayOfString", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfString(struct soap*, ns1__ArrayOfString *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfString
#define soap_read_PointerTons1__ArrayOfString(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfString(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__ArrayOfString ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfString(struct soap*, ns1__ArrayOfString **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);

#define soap_new_std__vectorTemplateOfstd__string(soap, n) soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfstd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
