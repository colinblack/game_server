// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgSuit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgSuit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgSuit {

namespace {

const ::google::protobuf::Descriptor* Suit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Suit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Suits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Suits_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgSuit_2eproto() {
  protobuf_AddDesc_CfgSuit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgSuit.proto");
  GOOGLE_CHECK(file != NULL);
  Suit_descriptor_ = file->message_type(0);
  static const int Suit_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, skills_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, mode_),
  };
  Suit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Suit_descriptor_,
      Suit::default_instance_,
      Suit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Suit));
  Suits_descriptor_ = file->message_type(1);
  static const int Suits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, suits_),
  };
  Suits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Suits_descriptor_,
      Suits::default_instance_,
      Suits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Suits));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgSuit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Suit_descriptor_, &Suit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Suits_descriptor_, &Suits::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgSuit_2eproto() {
  delete Suit::default_instance_;
  delete Suit_reflection_;
  delete Suits::default_instance_;
  delete Suits_reflection_;
}

void protobuf_AddDesc_CfgSuit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CfgCommon::protobuf_AddDesc_CfgCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rCfgSuit.proto\022\007CfgSuit\032\017CfgCommon.prot"
    "o\"\200\001\n\004Suit\022\014\n\004star\030\001 \002(\r\022\"\n\004attr\030\002 \003(\0132\024"
    ".CfgCommon.Attribute\022\r\n\005level\030\003 \002(\r\022\r\n\005c"
    "olor\030\004 \002(\r\022\016\n\006skills\030\005 \003(\r\022\n\n\002id\030\006 \002(\r\022\014"
    "\n\004mode\030\007 \002(\r\"%\n\005Suits\022\034\n\005suits\030\001 \003(\0132\r.C"
    "fgSuit.Suit", 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgSuit.proto", &protobuf_RegisterTypes);
  Suit::default_instance_ = new Suit();
  Suits::default_instance_ = new Suits();
  Suit::default_instance_->InitAsDefaultInstance();
  Suits::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgSuit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgSuit_2eproto {
  StaticDescriptorInitializer_CfgSuit_2eproto() {
    protobuf_AddDesc_CfgSuit_2eproto();
  }
} static_descriptor_initializer_CfgSuit_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Suit::kStarFieldNumber;
const int Suit::kAttrFieldNumber;
const int Suit::kLevelFieldNumber;
const int Suit::kColorFieldNumber;
const int Suit::kSkillsFieldNumber;
const int Suit::kIdFieldNumber;
const int Suit::kModeFieldNumber;
#endif  // !_MSC_VER

Suit::Suit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgSuit.Suit)
}

void Suit::InitAsDefaultInstance() {
}

Suit::Suit(const Suit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgSuit.Suit)
}

void Suit::SharedCtor() {
  _cached_size_ = 0;
  star_ = 0u;
  level_ = 0u;
  color_ = 0u;
  id_ = 0u;
  mode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Suit::~Suit() {
  // @@protoc_insertion_point(destructor:CfgSuit.Suit)
  SharedDtor();
}

void Suit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Suit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Suit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Suit_descriptor_;
}

const Suit& Suit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgSuit_2eproto();
  return *default_instance_;
}

Suit* Suit::default_instance_ = NULL;

Suit* Suit::New() const {
  return new Suit;
}

void Suit::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Suit*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 109) {
    ZR_(star_, level_);
    ZR_(color_, mode_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  attr_.Clear();
  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Suit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgSuit.Suit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 star = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 2;
      case 2: {
        if (tag == 18) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_color;
        break;
      }

      // required uint32 color = 4;
      case 4: {
        if (tag == 32) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_skills;
        break;
      }

      // repeated uint32 skills = 5;
      case 5: {
        if (tag == 40) {
         parse_skills:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_skills())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_skills())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_skills;
        if (input->ExpectTag(48)) goto parse_id;
        break;
      }

      // required uint32 id = 6;
      case 6: {
        if (tag == 48) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mode;
        break;
      }

      // required uint32 mode = 7;
      case 7: {
        if (tag == 56) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
          set_has_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgSuit.Suit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgSuit.Suit)
  return false;
#undef DO_
}

void Suit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgSuit.Suit)
  // required uint32 star = 1;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->star(), output);
  }

  // repeated .CfgCommon.Attribute attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required uint32 color = 4;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->color(), output);
  }

  // repeated uint32 skills = 5;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->skills(i), output);
  }

  // required uint32 id = 6;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->id(), output);
  }

  // required uint32 mode = 7;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgSuit.Suit)
}

::google::protobuf::uint8* Suit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgSuit.Suit)
  // required uint32 star = 1;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->star(), target);
  }

  // repeated .CfgCommon.Attribute attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(i), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required uint32 color = 4;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->color(), target);
  }

  // repeated uint32 skills = 5;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->skills(i), target);
  }

  // required uint32 id = 6;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->id(), target);
  }

  // required uint32 mode = 7;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgSuit.Suit)
  return target;
}

int Suit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 star = 1;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 color = 4;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

    // required uint32 id = 6;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 mode = 7;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mode());
    }

  }
  // repeated .CfgCommon.Attribute attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  // repeated uint32 skills = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->skills_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->skills(i));
    }
    total_size += 1 * this->skills_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Suit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Suit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Suit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Suit::MergeFrom(const Suit& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  skills_.MergeFrom(from.skills_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Suit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Suit::CopyFrom(const Suit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Suit::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000006d) != 0x0000006d) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  return true;
}

void Suit::Swap(Suit* other) {
  if (other != this) {
    std::swap(star_, other->star_);
    attr_.Swap(&other->attr_);
    std::swap(level_, other->level_);
    std::swap(color_, other->color_);
    skills_.Swap(&other->skills_);
    std::swap(id_, other->id_);
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Suit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Suit_descriptor_;
  metadata.reflection = Suit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Suits::kSuitsFieldNumber;
#endif  // !_MSC_VER

Suits::Suits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgSuit.Suits)
}

void Suits::InitAsDefaultInstance() {
}

Suits::Suits(const Suits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgSuit.Suits)
}

void Suits::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Suits::~Suits() {
  // @@protoc_insertion_point(destructor:CfgSuit.Suits)
  SharedDtor();
}

void Suits::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Suits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Suits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Suits_descriptor_;
}

const Suits& Suits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgSuit_2eproto();
  return *default_instance_;
}

Suits* Suits::default_instance_ = NULL;

Suits* Suits::New() const {
  return new Suits;
}

void Suits::Clear() {
  suits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Suits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgSuit.Suits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgSuit.Suit suits = 1;
      case 1: {
        if (tag == 10) {
         parse_suits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_suits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_suits;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgSuit.Suits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgSuit.Suits)
  return false;
#undef DO_
}

void Suits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgSuit.Suits)
  // repeated .CfgSuit.Suit suits = 1;
  for (int i = 0; i < this->suits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->suits(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgSuit.Suits)
}

::google::protobuf::uint8* Suits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgSuit.Suits)
  // repeated .CfgSuit.Suit suits = 1;
  for (int i = 0; i < this->suits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->suits(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgSuit.Suits)
  return target;
}

int Suits::ByteSize() const {
  int total_size = 0;

  // repeated .CfgSuit.Suit suits = 1;
  total_size += 1 * this->suits_size();
  for (int i = 0; i < this->suits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->suits(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Suits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Suits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Suits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Suits::MergeFrom(const Suits& from) {
  GOOGLE_CHECK_NE(&from, this);
  suits_.MergeFrom(from.suits_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Suits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Suits::CopyFrom(const Suits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Suits::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->suits())) return false;
  return true;
}

void Suits::Swap(Suits* other) {
  if (other != this) {
    suits_.Swap(&other->suits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Suits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Suits_descriptor_;
  metadata.reflection = Suits_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgSuit

// @@protoc_insertion_point(global_scope)
