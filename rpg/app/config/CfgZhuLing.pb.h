// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgZhuLing.proto

#ifndef PROTOBUF_CfgZhuLing_2eproto__INCLUDED
#define PROTOBUF_CfgZhuLing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgZhuLing {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgZhuLing_2eproto();
void protobuf_AssignDesc_CfgZhuLing_2eproto();
void protobuf_ShutdownFile_CfgZhuLing_2eproto();

class zhuLing;
class zhuLings;
class Spet;
class Spets;

// ===================================================================

class zhuLing : public ::google::protobuf::Message {
 public:
  zhuLing();
  virtual ~zhuLing();

  zhuLing(const zhuLing& from);

  inline zhuLing& operator=(const zhuLing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const zhuLing& default_instance();

  void Swap(zhuLing* other);

  // implements Message ----------------------------------------------

  zhuLing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const zhuLing& from);
  void MergeFrom(const zhuLing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 advance = 1;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 1;
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // required uint32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required uint32 consum = 3;
  inline bool has_consum() const;
  inline void clear_consum();
  static const int kConsumFieldNumber = 3;
  inline ::google::protobuf::uint32 consum() const;
  inline void set_consum(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgZhuLing.zhuLing)
 private:
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_consum();
  inline void clear_has_consum();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 consum_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_CfgZhuLing_2eproto();
  friend void protobuf_AssignDesc_CfgZhuLing_2eproto();
  friend void protobuf_ShutdownFile_CfgZhuLing_2eproto();

  void InitAsDefaultInstance();
  static zhuLing* default_instance_;
};
// -------------------------------------------------------------------

class zhuLings : public ::google::protobuf::Message {
 public:
  zhuLings();
  virtual ~zhuLings();

  zhuLings(const zhuLings& from);

  inline zhuLings& operator=(const zhuLings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const zhuLings& default_instance();

  void Swap(zhuLings* other);

  // implements Message ----------------------------------------------

  zhuLings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const zhuLings& from);
  void MergeFrom(const zhuLings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgZhuLing.zhuLing zhuling = 1;
  inline int zhuling_size() const;
  inline void clear_zhuling();
  static const int kZhulingFieldNumber = 1;
  inline const ::CfgZhuLing::zhuLing& zhuling(int index) const;
  inline ::CfgZhuLing::zhuLing* mutable_zhuling(int index);
  inline ::CfgZhuLing::zhuLing* add_zhuling();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::zhuLing >&
      zhuling() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::zhuLing >*
      mutable_zhuling();

  // @@protoc_insertion_point(class_scope:CfgZhuLing.zhuLings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::zhuLing > zhuling_;
  friend void  protobuf_AddDesc_CfgZhuLing_2eproto();
  friend void protobuf_AssignDesc_CfgZhuLing_2eproto();
  friend void protobuf_ShutdownFile_CfgZhuLing_2eproto();

  void InitAsDefaultInstance();
  static zhuLings* default_instance_;
};
// -------------------------------------------------------------------

class Spet : public ::google::protobuf::Message {
 public:
  Spet();
  virtual ~Spet();

  Spet(const Spet& from);

  inline Spet& operator=(const Spet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Spet& default_instance();

  void Swap(Spet* other);

  // implements Message ----------------------------------------------

  Spet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Spet& from);
  void MergeFrom(const Spet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 advance = 1;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 1;
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 2;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // required uint32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required uint32 limit = 4;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // required uint32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 part = 6;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 6;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgZhuLing.Spet)
 private:
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 part_;
  friend void  protobuf_AddDesc_CfgZhuLing_2eproto();
  friend void protobuf_AssignDesc_CfgZhuLing_2eproto();
  friend void protobuf_ShutdownFile_CfgZhuLing_2eproto();

  void InitAsDefaultInstance();
  static Spet* default_instance_;
};
// -------------------------------------------------------------------

class Spets : public ::google::protobuf::Message {
 public:
  Spets();
  virtual ~Spets();

  Spets(const Spets& from);

  inline Spets& operator=(const Spets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Spets& default_instance();

  void Swap(Spets* other);

  // implements Message ----------------------------------------------

  Spets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Spets& from);
  void MergeFrom(const Spets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgZhuLing.Spet spets = 1;
  inline int spets_size() const;
  inline void clear_spets();
  static const int kSpetsFieldNumber = 1;
  inline const ::CfgZhuLing::Spet& spets(int index) const;
  inline ::CfgZhuLing::Spet* mutable_spets(int index);
  inline ::CfgZhuLing::Spet* add_spets();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::Spet >&
      spets() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::Spet >*
      mutable_spets();

  // @@protoc_insertion_point(class_scope:CfgZhuLing.Spets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::Spet > spets_;
  friend void  protobuf_AddDesc_CfgZhuLing_2eproto();
  friend void protobuf_AssignDesc_CfgZhuLing_2eproto();
  friend void protobuf_ShutdownFile_CfgZhuLing_2eproto();

  void InitAsDefaultInstance();
  static Spets* default_instance_;
};
// ===================================================================


// ===================================================================

// zhuLing

// required uint32 advance = 1;
inline bool zhuLing::has_advance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void zhuLing::set_has_advance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void zhuLing::clear_has_advance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void zhuLing::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 zhuLing::advance() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLing.advance)
  return advance_;
}
inline void zhuLing::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.zhuLing.advance)
}

// required uint32 rate = 2;
inline bool zhuLing::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void zhuLing::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void zhuLing::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void zhuLing::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 zhuLing::rate() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLing.rate)
  return rate_;
}
inline void zhuLing::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.zhuLing.rate)
}

// required uint32 consum = 3;
inline bool zhuLing::has_consum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void zhuLing::set_has_consum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void zhuLing::clear_has_consum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void zhuLing::clear_consum() {
  consum_ = 0u;
  clear_has_consum();
}
inline ::google::protobuf::uint32 zhuLing::consum() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLing.consum)
  return consum_;
}
inline void zhuLing::set_consum(::google::protobuf::uint32 value) {
  set_has_consum();
  consum_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.zhuLing.consum)
}

// required uint32 level = 4;
inline bool zhuLing::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void zhuLing::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void zhuLing::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void zhuLing::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 zhuLing::level() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLing.level)
  return level_;
}
inline void zhuLing::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.zhuLing.level)
}

// required uint32 id = 5;
inline bool zhuLing::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void zhuLing::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void zhuLing::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void zhuLing::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 zhuLing::id() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLing.id)
  return id_;
}
inline void zhuLing::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.zhuLing.id)
}

// -------------------------------------------------------------------

// zhuLings

// repeated .CfgZhuLing.zhuLing zhuling = 1;
inline int zhuLings::zhuling_size() const {
  return zhuling_.size();
}
inline void zhuLings::clear_zhuling() {
  zhuling_.Clear();
}
inline const ::CfgZhuLing::zhuLing& zhuLings::zhuling(int index) const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.zhuLings.zhuling)
  return zhuling_.Get(index);
}
inline ::CfgZhuLing::zhuLing* zhuLings::mutable_zhuling(int index) {
  // @@protoc_insertion_point(field_mutable:CfgZhuLing.zhuLings.zhuling)
  return zhuling_.Mutable(index);
}
inline ::CfgZhuLing::zhuLing* zhuLings::add_zhuling() {
  // @@protoc_insertion_point(field_add:CfgZhuLing.zhuLings.zhuling)
  return zhuling_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::zhuLing >&
zhuLings::zhuling() const {
  // @@protoc_insertion_point(field_list:CfgZhuLing.zhuLings.zhuling)
  return zhuling_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::zhuLing >*
zhuLings::mutable_zhuling() {
  // @@protoc_insertion_point(field_mutable_list:CfgZhuLing.zhuLings.zhuling)
  return &zhuling_;
}

// -------------------------------------------------------------------

// Spet

// required uint32 advance = 1;
inline bool Spet::has_advance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Spet::set_has_advance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Spet::clear_has_advance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Spet::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 Spet::advance() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.advance)
  return advance_;
}
inline void Spet::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.Spet.advance)
}

// repeated .CfgCommon.Attribute attr = 2;
inline int Spet::attr_size() const {
  return attr_.size();
}
inline void Spet::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Spet::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Spet::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgZhuLing.Spet.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Spet::add_attr() {
  // @@protoc_insertion_point(field_add:CfgZhuLing.Spet.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Spet::attr() const {
  // @@protoc_insertion_point(field_list:CfgZhuLing.Spet.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Spet::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgZhuLing.Spet.attr)
  return &attr_;
}

// required uint32 rate = 3;
inline bool Spet::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Spet::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Spet::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Spet::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 Spet::rate() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.rate)
  return rate_;
}
inline void Spet::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.Spet.rate)
}

// required uint32 limit = 4;
inline bool Spet::has_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Spet::set_has_limit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Spet::clear_has_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Spet::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 Spet::limit() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.limit)
  return limit_;
}
inline void Spet::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.Spet.limit)
}

// required uint32 id = 5;
inline bool Spet::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Spet::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Spet::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Spet::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Spet::id() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.id)
  return id_;
}
inline void Spet::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.Spet.id)
}

// required uint32 part = 6;
inline bool Spet::has_part() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Spet::set_has_part() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Spet::clear_has_part() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Spet::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 Spet::part() const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spet.part)
  return part_;
}
inline void Spet::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:CfgZhuLing.Spet.part)
}

// -------------------------------------------------------------------

// Spets

// repeated .CfgZhuLing.Spet spets = 1;
inline int Spets::spets_size() const {
  return spets_.size();
}
inline void Spets::clear_spets() {
  spets_.Clear();
}
inline const ::CfgZhuLing::Spet& Spets::spets(int index) const {
  // @@protoc_insertion_point(field_get:CfgZhuLing.Spets.spets)
  return spets_.Get(index);
}
inline ::CfgZhuLing::Spet* Spets::mutable_spets(int index) {
  // @@protoc_insertion_point(field_mutable:CfgZhuLing.Spets.spets)
  return spets_.Mutable(index);
}
inline ::CfgZhuLing::Spet* Spets::add_spets() {
  // @@protoc_insertion_point(field_add:CfgZhuLing.Spets.spets)
  return spets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::Spet >&
Spets::spets() const {
  // @@protoc_insertion_point(field_list:CfgZhuLing.Spets.spets)
  return spets_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgZhuLing::Spet >*
Spets::mutable_spets() {
  // @@protoc_insertion_point(field_mutable_list:CfgZhuLing.Spets.spets)
  return &spets_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgZhuLing

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgZhuLing_2eproto__INCLUDED
