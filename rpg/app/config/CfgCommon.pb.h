// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgCommon.proto

#ifndef PROTOBUF_CfgCommon_2eproto__INCLUDED
#define PROTOBUF_CfgCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CfgCommon {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgCommon_2eproto();
void protobuf_AssignDesc_CfgCommon_2eproto();
void protobuf_ShutdownFile_CfgCommon_2eproto();

class Reward;
class Attribute;

// ===================================================================

class Reward : public ::google::protobuf::Message {
 public:
  Reward();
  virtual ~Reward();

  Reward(const Reward& from);

  inline Reward& operator=(const Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reward& default_instance();

  void Swap(Reward* other);

  // implements Message ----------------------------------------------

  Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reward& from);
  void MergeFrom(const Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgCommon.Reward)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_CfgCommon_2eproto();
  friend void protobuf_AssignDesc_CfgCommon_2eproto();
  friend void protobuf_ShutdownFile_CfgCommon_2eproto();

  void InitAsDefaultInstance();
  static Reward* default_instance_;
};
// -------------------------------------------------------------------

class Attribute : public ::google::protobuf::Message {
 public:
  Attribute();
  virtual ~Attribute();

  Attribute(const Attribute& from);

  inline Attribute& operator=(const Attribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attribute& default_instance();

  void Swap(Attribute* other);

  // implements Message ----------------------------------------------

  Attribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attribute& from);
  void MergeFrom(const Attribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CfgCommon.Attribute)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 num_;
  friend void  protobuf_AddDesc_CfgCommon_2eproto();
  friend void protobuf_AssignDesc_CfgCommon_2eproto();
  friend void protobuf_ShutdownFile_CfgCommon_2eproto();

  void InitAsDefaultInstance();
  static Attribute* default_instance_;
};
// ===================================================================


// ===================================================================

// Reward

// required uint32 item = 1;
inline bool Reward::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reward::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reward::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reward::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 Reward::item() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Reward.item)
  return item_;
}
inline void Reward::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Reward.item)
}

// required uint32 num = 2;
inline bool Reward::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reward::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reward::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reward::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Reward::num() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Reward.num)
  return num_;
}
inline void Reward::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Reward.num)
}

// optional uint32 rate = 3;
inline bool Reward::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reward::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reward::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reward::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 Reward::rate() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Reward.rate)
  return rate_;
}
inline void Reward::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Reward.rate)
}

// -------------------------------------------------------------------

// Attribute

// required int32 group = 1;
inline bool Attribute::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attribute::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attribute::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attribute::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 Attribute::group() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Attribute.group)
  return group_;
}
inline void Attribute::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Attribute.group)
}

// required int32 type = 2;
inline bool Attribute::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attribute::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attribute::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attribute::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Attribute::type() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Attribute.type)
  return type_;
}
inline void Attribute::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Attribute.type)
}

// required int64 num = 3;
inline bool Attribute::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Attribute::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Attribute::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Attribute::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 Attribute::num() const {
  // @@protoc_insertion_point(field_get:CfgCommon.Attribute.num)
  return num_;
}
inline void Attribute::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgCommon.Attribute.num)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgCommon

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgCommon_2eproto__INCLUDED
