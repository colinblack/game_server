// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgTrump.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgTrump.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgTrump {

namespace {

const ::google::protobuf::Descriptor* TrumpInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrumpInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Trumps_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Trumps_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrumpSkillInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrumpSkillInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrumpSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrumpSkill_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgTrump_2eproto() {
  protobuf_AddDesc_CfgTrump_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgTrump.proto");
  GOOGLE_CHECK(file != NULL);
  TrumpInfo_descriptor_ = file->message_type(0);
  static const int TrumpInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, cost_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, cost_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, attr_),
  };
  TrumpInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrumpInfo_descriptor_,
      TrumpInfo::default_instance_,
      TrumpInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrumpInfo));
  Trumps_descriptor_ = file->message_type(1);
  static const int Trumps_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trumps, trump_),
  };
  Trumps_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Trumps_descriptor_,
      Trumps::default_instance_,
      Trumps_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trumps, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trumps, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Trumps));
  TrumpSkillInfo_descriptor_ = file->message_type(2);
  static const int TrumpSkillInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkillInfo, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkillInfo, attr_),
  };
  TrumpSkillInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrumpSkillInfo_descriptor_,
      TrumpSkillInfo::default_instance_,
      TrumpSkillInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkillInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkillInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrumpSkillInfo));
  TrumpSkill_descriptor_ = file->message_type(3);
  static const int TrumpSkill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkill, trump_skill_),
  };
  TrumpSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrumpSkill_descriptor_,
      TrumpSkill::default_instance_,
      TrumpSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrumpSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrumpSkill));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgTrump_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrumpInfo_descriptor_, &TrumpInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Trumps_descriptor_, &Trumps::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrumpSkillInfo_descriptor_, &TrumpSkillInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrumpSkill_descriptor_, &TrumpSkill::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgTrump_2eproto() {
  delete TrumpInfo::default_instance_;
  delete TrumpInfo_reflection_;
  delete Trumps::default_instance_;
  delete Trumps_reflection_;
  delete TrumpSkillInfo::default_instance_;
  delete TrumpSkillInfo_reflection_;
  delete TrumpSkill::default_instance_;
  delete TrumpSkill_reflection_;
}

void protobuf_AddDesc_CfgTrump_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CfgCommon::protobuf_AddDesc_CfgCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016CfgTrump.proto\022\010CfgTrump\032\017CfgCommon.pr"
    "oto\"\202\001\n\tTrumpInfo\022\r\n\005level\030\001 \002(\005\022\014\n\004star"
    "\030\002 \002(\005\022\r\n\005stage\030\003 \002(\005\022\021\n\tcost_item\030\004 \002(\005"
    "\022\022\n\ncost_count\030\005 \002(\005\022\"\n\004attr\030\006 \003(\0132\024.Cfg"
    "Common.Attribute\",\n\006Trumps\022\"\n\005trump\030\001 \003("
    "\0132\023.CfgTrump.TrumpInfo\"C\n\016TrumpSkillInfo"
    "\022\r\n\005stage\030\001 \002(\005\022\"\n\004attr\030\002 \003(\0132\024.CfgCommo"
    "n.Attribute\";\n\nTrumpSkill\022-\n\013trump_skill"
    "\030\001 \003(\0132\030.CfgTrump.TrumpSkillInfo", 352);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgTrump.proto", &protobuf_RegisterTypes);
  TrumpInfo::default_instance_ = new TrumpInfo();
  Trumps::default_instance_ = new Trumps();
  TrumpSkillInfo::default_instance_ = new TrumpSkillInfo();
  TrumpSkill::default_instance_ = new TrumpSkill();
  TrumpInfo::default_instance_->InitAsDefaultInstance();
  Trumps::default_instance_->InitAsDefaultInstance();
  TrumpSkillInfo::default_instance_->InitAsDefaultInstance();
  TrumpSkill::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgTrump_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgTrump_2eproto {
  StaticDescriptorInitializer_CfgTrump_2eproto() {
    protobuf_AddDesc_CfgTrump_2eproto();
  }
} static_descriptor_initializer_CfgTrump_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TrumpInfo::kLevelFieldNumber;
const int TrumpInfo::kStarFieldNumber;
const int TrumpInfo::kStageFieldNumber;
const int TrumpInfo::kCostItemFieldNumber;
const int TrumpInfo::kCostCountFieldNumber;
const int TrumpInfo::kAttrFieldNumber;
#endif  // !_MSC_VER

TrumpInfo::TrumpInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgTrump.TrumpInfo)
}

void TrumpInfo::InitAsDefaultInstance() {
}

TrumpInfo::TrumpInfo(const TrumpInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgTrump.TrumpInfo)
}

void TrumpInfo::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  star_ = 0;
  stage_ = 0;
  cost_item_ = 0;
  cost_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrumpInfo::~TrumpInfo() {
  // @@protoc_insertion_point(destructor:CfgTrump.TrumpInfo)
  SharedDtor();
}

void TrumpInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrumpInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrumpInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrumpInfo_descriptor_;
}

const TrumpInfo& TrumpInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgTrump_2eproto();
  return *default_instance_;
}

TrumpInfo* TrumpInfo::default_instance_ = NULL;

TrumpInfo* TrumpInfo::New() const {
  return new TrumpInfo;
}

void TrumpInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TrumpInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(level_, cost_item_);
    cost_count_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrumpInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgTrump.TrumpInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_star;
        break;
      }

      // required int32 star = 2;
      case 2: {
        if (tag == 16) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }

      // required int32 stage = 3;
      case 3: {
        if (tag == 24) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cost_item;
        break;
      }

      // required int32 cost_item = 4;
      case 4: {
        if (tag == 32) {
         parse_cost_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_item_)));
          set_has_cost_item();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cost_count;
        break;
      }

      // required int32 cost_count = 5;
      case 5: {
        if (tag == 40) {
         parse_cost_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_count_)));
          set_has_cost_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 6;
      case 6: {
        if (tag == 50) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgTrump.TrumpInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgTrump.TrumpInfo)
  return false;
#undef DO_
}

void TrumpInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgTrump.TrumpInfo)
  // required int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->star(), output);
  }

  // required int32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stage(), output);
  }

  // required int32 cost_item = 4;
  if (has_cost_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cost_item(), output);
  }

  // required int32 cost_count = 5;
  if (has_cost_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cost_count(), output);
  }

  // repeated .CfgCommon.Attribute attr = 6;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgTrump.TrumpInfo)
}

::google::protobuf::uint8* TrumpInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgTrump.TrumpInfo)
  // required int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->star(), target);
  }

  // required int32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stage(), target);
  }

  // required int32 cost_item = 4;
  if (has_cost_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cost_item(), target);
  }

  // required int32 cost_count = 5;
  if (has_cost_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cost_count(), target);
  }

  // repeated .CfgCommon.Attribute attr = 6;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgTrump.TrumpInfo)
  return target;
}

int TrumpInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required int32 star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->star());
    }

    // required int32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }

    // required int32 cost_item = 4;
    if (has_cost_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_item());
    }

    // required int32 cost_count = 5;
    if (has_cost_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_count());
    }

  }
  // repeated .CfgCommon.Attribute attr = 6;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrumpInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrumpInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrumpInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrumpInfo::MergeFrom(const TrumpInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_cost_item()) {
      set_cost_item(from.cost_item());
    }
    if (from.has_cost_count()) {
      set_cost_count(from.cost_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrumpInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrumpInfo::CopyFrom(const TrumpInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrumpInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  return true;
}

void TrumpInfo::Swap(TrumpInfo* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(star_, other->star_);
    std::swap(stage_, other->stage_);
    std::swap(cost_item_, other->cost_item_);
    std::swap(cost_count_, other->cost_count_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrumpInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrumpInfo_descriptor_;
  metadata.reflection = TrumpInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Trumps::kTrumpFieldNumber;
#endif  // !_MSC_VER

Trumps::Trumps()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgTrump.Trumps)
}

void Trumps::InitAsDefaultInstance() {
}

Trumps::Trumps(const Trumps& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgTrump.Trumps)
}

void Trumps::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Trumps::~Trumps() {
  // @@protoc_insertion_point(destructor:CfgTrump.Trumps)
  SharedDtor();
}

void Trumps::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Trumps::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trumps::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Trumps_descriptor_;
}

const Trumps& Trumps::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgTrump_2eproto();
  return *default_instance_;
}

Trumps* Trumps::default_instance_ = NULL;

Trumps* Trumps::New() const {
  return new Trumps;
}

void Trumps::Clear() {
  trump_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Trumps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgTrump.Trumps)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgTrump.TrumpInfo trump = 1;
      case 1: {
        if (tag == 10) {
         parse_trump:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trump()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_trump;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgTrump.Trumps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgTrump.Trumps)
  return false;
#undef DO_
}

void Trumps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgTrump.Trumps)
  // repeated .CfgTrump.TrumpInfo trump = 1;
  for (int i = 0; i < this->trump_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->trump(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgTrump.Trumps)
}

::google::protobuf::uint8* Trumps::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgTrump.Trumps)
  // repeated .CfgTrump.TrumpInfo trump = 1;
  for (int i = 0; i < this->trump_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->trump(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgTrump.Trumps)
  return target;
}

int Trumps::ByteSize() const {
  int total_size = 0;

  // repeated .CfgTrump.TrumpInfo trump = 1;
  total_size += 1 * this->trump_size();
  for (int i = 0; i < this->trump_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trump(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trumps::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Trumps* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Trumps*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Trumps::MergeFrom(const Trumps& from) {
  GOOGLE_CHECK_NE(&from, this);
  trump_.MergeFrom(from.trump_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Trumps::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trumps::CopyFrom(const Trumps& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trumps::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->trump())) return false;
  return true;
}

void Trumps::Swap(Trumps* other) {
  if (other != this) {
    trump_.Swap(&other->trump_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Trumps::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Trumps_descriptor_;
  metadata.reflection = Trumps_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrumpSkillInfo::kStageFieldNumber;
const int TrumpSkillInfo::kAttrFieldNumber;
#endif  // !_MSC_VER

TrumpSkillInfo::TrumpSkillInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgTrump.TrumpSkillInfo)
}

void TrumpSkillInfo::InitAsDefaultInstance() {
}

TrumpSkillInfo::TrumpSkillInfo(const TrumpSkillInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgTrump.TrumpSkillInfo)
}

void TrumpSkillInfo::SharedCtor() {
  _cached_size_ = 0;
  stage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrumpSkillInfo::~TrumpSkillInfo() {
  // @@protoc_insertion_point(destructor:CfgTrump.TrumpSkillInfo)
  SharedDtor();
}

void TrumpSkillInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrumpSkillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrumpSkillInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrumpSkillInfo_descriptor_;
}

const TrumpSkillInfo& TrumpSkillInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgTrump_2eproto();
  return *default_instance_;
}

TrumpSkillInfo* TrumpSkillInfo::default_instance_ = NULL;

TrumpSkillInfo* TrumpSkillInfo::New() const {
  return new TrumpSkillInfo;
}

void TrumpSkillInfo::Clear() {
  stage_ = 0;
  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrumpSkillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgTrump.TrumpSkillInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stage = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 2;
      case 2: {
        if (tag == 18) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgTrump.TrumpSkillInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgTrump.TrumpSkillInfo)
  return false;
#undef DO_
}

void TrumpSkillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgTrump.TrumpSkillInfo)
  // required int32 stage = 1;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stage(), output);
  }

  // repeated .CfgCommon.Attribute attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgTrump.TrumpSkillInfo)
}

::google::protobuf::uint8* TrumpSkillInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgTrump.TrumpSkillInfo)
  // required int32 stage = 1;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stage(), target);
  }

  // repeated .CfgCommon.Attribute attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgTrump.TrumpSkillInfo)
  return target;
}

int TrumpSkillInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }

  }
  // repeated .CfgCommon.Attribute attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrumpSkillInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrumpSkillInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrumpSkillInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrumpSkillInfo::MergeFrom(const TrumpSkillInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stage()) {
      set_stage(from.stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrumpSkillInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrumpSkillInfo::CopyFrom(const TrumpSkillInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrumpSkillInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  return true;
}

void TrumpSkillInfo::Swap(TrumpSkillInfo* other) {
  if (other != this) {
    std::swap(stage_, other->stage_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrumpSkillInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrumpSkillInfo_descriptor_;
  metadata.reflection = TrumpSkillInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrumpSkill::kTrumpSkillFieldNumber;
#endif  // !_MSC_VER

TrumpSkill::TrumpSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgTrump.TrumpSkill)
}

void TrumpSkill::InitAsDefaultInstance() {
}

TrumpSkill::TrumpSkill(const TrumpSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgTrump.TrumpSkill)
}

void TrumpSkill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrumpSkill::~TrumpSkill() {
  // @@protoc_insertion_point(destructor:CfgTrump.TrumpSkill)
  SharedDtor();
}

void TrumpSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrumpSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrumpSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrumpSkill_descriptor_;
}

const TrumpSkill& TrumpSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgTrump_2eproto();
  return *default_instance_;
}

TrumpSkill* TrumpSkill::default_instance_ = NULL;

TrumpSkill* TrumpSkill::New() const {
  return new TrumpSkill;
}

void TrumpSkill::Clear() {
  trump_skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrumpSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgTrump.TrumpSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgTrump.TrumpSkillInfo trump_skill = 1;
      case 1: {
        if (tag == 10) {
         parse_trump_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trump_skill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_trump_skill;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgTrump.TrumpSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgTrump.TrumpSkill)
  return false;
#undef DO_
}

void TrumpSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgTrump.TrumpSkill)
  // repeated .CfgTrump.TrumpSkillInfo trump_skill = 1;
  for (int i = 0; i < this->trump_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->trump_skill(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgTrump.TrumpSkill)
}

::google::protobuf::uint8* TrumpSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgTrump.TrumpSkill)
  // repeated .CfgTrump.TrumpSkillInfo trump_skill = 1;
  for (int i = 0; i < this->trump_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->trump_skill(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgTrump.TrumpSkill)
  return target;
}

int TrumpSkill::ByteSize() const {
  int total_size = 0;

  // repeated .CfgTrump.TrumpSkillInfo trump_skill = 1;
  total_size += 1 * this->trump_skill_size();
  for (int i = 0; i < this->trump_skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trump_skill(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrumpSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrumpSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrumpSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrumpSkill::MergeFrom(const TrumpSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  trump_skill_.MergeFrom(from.trump_skill_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrumpSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrumpSkill::CopyFrom(const TrumpSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrumpSkill::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->trump_skill())) return false;
  return true;
}

void TrumpSkill::Swap(TrumpSkill* other) {
  if (other != this) {
    trump_skill_.Swap(&other->trump_skill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrumpSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrumpSkill_descriptor_;
  metadata.reflection = TrumpSkill_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgTrump

// @@protoc_insertion_point(global_scope)
