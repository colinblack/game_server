// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgRing.proto

#ifndef PROTOBUF_CfgRing_2eproto__INCLUDED
#define PROTOBUF_CfgRing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgRing {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgRing_2eproto();
void protobuf_AssignDesc_CfgRing_2eproto();
void protobuf_ShutdownFile_CfgRing_2eproto();

class Ring;
class Rings;

// ===================================================================

class Ring : public ::google::protobuf::Message {
 public:
  Ring();
  virtual ~Ring();

  Ring(const Ring& from);

  inline Ring& operator=(const Ring& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ring& default_instance();

  void Swap(Ring* other);

  // implements Message ----------------------------------------------

  Ring* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ring& from);
  void MergeFrom(const Ring& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 3;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgRing.Ring)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  friend void  protobuf_AddDesc_CfgRing_2eproto();
  friend void protobuf_AssignDesc_CfgRing_2eproto();
  friend void protobuf_ShutdownFile_CfgRing_2eproto();

  void InitAsDefaultInstance();
  static Ring* default_instance_;
};
// -------------------------------------------------------------------

class Rings : public ::google::protobuf::Message {
 public:
  Rings();
  virtual ~Rings();

  Rings(const Rings& from);

  inline Rings& operator=(const Rings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rings& default_instance();

  void Swap(Rings* other);

  // implements Message ----------------------------------------------

  Rings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rings& from);
  void MergeFrom(const Rings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgRing.Ring ring = 1;
  inline int ring_size() const;
  inline void clear_ring();
  static const int kRingFieldNumber = 1;
  inline const ::CfgRing::Ring& ring(int index) const;
  inline ::CfgRing::Ring* mutable_ring(int index);
  inline ::CfgRing::Ring* add_ring();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgRing::Ring >&
      ring() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgRing::Ring >*
      mutable_ring();

  // @@protoc_insertion_point(class_scope:CfgRing.Rings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgRing::Ring > ring_;
  friend void  protobuf_AddDesc_CfgRing_2eproto();
  friend void protobuf_AssignDesc_CfgRing_2eproto();
  friend void protobuf_ShutdownFile_CfgRing_2eproto();

  void InitAsDefaultInstance();
  static Rings* default_instance_;
};
// ===================================================================


// ===================================================================

// Ring

// required uint32 level = 1;
inline bool Ring::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ring::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ring::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ring::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Ring::level() const {
  // @@protoc_insertion_point(field_get:CfgRing.Ring.level)
  return level_;
}
inline void Ring::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgRing.Ring.level)
}

// required uint32 exp = 2;
inline bool Ring::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ring::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ring::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ring::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 Ring::exp() const {
  // @@protoc_insertion_point(field_get:CfgRing.Ring.exp)
  return exp_;
}
inline void Ring::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CfgRing.Ring.exp)
}

// repeated .CfgCommon.Attribute attr = 3;
inline int Ring::attr_size() const {
  return attr_.size();
}
inline void Ring::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Ring::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgRing.Ring.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Ring::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgRing.Ring.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Ring::add_attr() {
  // @@protoc_insertion_point(field_add:CfgRing.Ring.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Ring::attr() const {
  // @@protoc_insertion_point(field_list:CfgRing.Ring.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Ring::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgRing.Ring.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Rings

// repeated .CfgRing.Ring ring = 1;
inline int Rings::ring_size() const {
  return ring_.size();
}
inline void Rings::clear_ring() {
  ring_.Clear();
}
inline const ::CfgRing::Ring& Rings::ring(int index) const {
  // @@protoc_insertion_point(field_get:CfgRing.Rings.ring)
  return ring_.Get(index);
}
inline ::CfgRing::Ring* Rings::mutable_ring(int index) {
  // @@protoc_insertion_point(field_mutable:CfgRing.Rings.ring)
  return ring_.Mutable(index);
}
inline ::CfgRing::Ring* Rings::add_ring() {
  // @@protoc_insertion_point(field_add:CfgRing.Rings.ring)
  return ring_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgRing::Ring >&
Rings::ring() const {
  // @@protoc_insertion_point(field_list:CfgRing.Rings.ring)
  return ring_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgRing::Ring >*
Rings::mutable_ring() {
  // @@protoc_insertion_point(field_mutable_list:CfgRing.Rings.ring)
  return &ring_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgRing

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgRing_2eproto__INCLUDED
