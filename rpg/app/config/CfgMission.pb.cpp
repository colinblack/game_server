// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgMission.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgMission.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgMission {

namespace {

const ::google::protobuf::Descriptor* Condition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Condition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mission_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mission_reflection_ = NULL;
const ::google::protobuf::Descriptor* Missions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Missions_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgMission_2eproto() {
  protobuf_AddDesc_CfgMission_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgMission.proto");
  GOOGLE_CHECK(file != NULL);
  Condition_descriptor_ = file->message_type(0);
  static const int Condition_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, v6_),
  };
  Condition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Condition_descriptor_,
      Condition::default_instance_,
      Condition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Condition));
  Mission_descriptor_ = file->message_type(1);
  static const int Mission_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, shengid_),
  };
  Mission_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Mission_descriptor_,
      Mission::default_instance_,
      Mission_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Mission));
  Missions_descriptor_ = file->message_type(2);
  static const int Missions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Missions, missions_),
  };
  Missions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Missions_descriptor_,
      Missions::default_instance_,
      Missions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Missions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Missions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Missions));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgMission_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Condition_descriptor_, &Condition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Mission_descriptor_, &Mission::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Missions_descriptor_, &Missions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgMission_2eproto() {
  delete Condition::default_instance_;
  delete Condition_reflection_;
  delete Mission::default_instance_;
  delete Mission_reflection_;
  delete Missions::default_instance_;
  delete Missions_reflection_;
}

void protobuf_AddDesc_CfgMission_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CfgCommon::protobuf_AddDesc_CfgCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020CfgMission.proto\022\nCfgMission\032\017CfgCommo"
    "n.proto\"_\n\tCondition\022\n\n\002v0\030\001 \002(\r\022\n\n\002v1\030\002"
    " \002(\r\022\n\n\002v2\030\003 \001(\r\022\n\n\002v3\030\004 \001(\r\022\n\n\002v4\030\005 \001(\r"
    "\022\n\n\002v5\030\006 \001(\r\022\n\n\002v6\030\007 \001(\r\"\216\001\n\007Mission\022\n\n\002"
    "id\030\001 \002(\r\022(\n\tcondition\030\002 \003(\0132\025.CfgMission"
    ".Condition\022!\n\006reward\030\003 \003(\0132\021.CfgCommon.R"
    "eward\022\013\n\003exp\030\004 \002(\r\022\014\n\004type\030\005 \002(\r\022\017\n\007shen"
    "gId\030\006 \002(\r\"1\n\010Missions\022%\n\010missions\030\001 \003(\0132"
    "\023.CfgMission.Mission", 340);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgMission.proto", &protobuf_RegisterTypes);
  Condition::default_instance_ = new Condition();
  Mission::default_instance_ = new Mission();
  Missions::default_instance_ = new Missions();
  Condition::default_instance_->InitAsDefaultInstance();
  Mission::default_instance_->InitAsDefaultInstance();
  Missions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgMission_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgMission_2eproto {
  StaticDescriptorInitializer_CfgMission_2eproto() {
    protobuf_AddDesc_CfgMission_2eproto();
  }
} static_descriptor_initializer_CfgMission_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Condition::kV0FieldNumber;
const int Condition::kV1FieldNumber;
const int Condition::kV2FieldNumber;
const int Condition::kV3FieldNumber;
const int Condition::kV4FieldNumber;
const int Condition::kV5FieldNumber;
const int Condition::kV6FieldNumber;
#endif  // !_MSC_VER

Condition::Condition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgMission.Condition)
}

void Condition::InitAsDefaultInstance() {
}

Condition::Condition(const Condition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgMission.Condition)
}

void Condition::SharedCtor() {
  _cached_size_ = 0;
  v0_ = 0u;
  v1_ = 0u;
  v2_ = 0u;
  v3_ = 0u;
  v4_ = 0u;
  v5_ = 0u;
  v6_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Condition::~Condition() {
  // @@protoc_insertion_point(destructor:CfgMission.Condition)
  SharedDtor();
}

void Condition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Condition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Condition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Condition_descriptor_;
}

const Condition& Condition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgMission_2eproto();
  return *default_instance_;
}

Condition* Condition::default_instance_ = NULL;

Condition* Condition::New() const {
  return new Condition;
}

void Condition::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Condition*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(v0_, v6_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgMission.Condition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 v0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v0_)));
          set_has_v0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_v1;
        break;
      }

      // required uint32 v1 = 2;
      case 2: {
        if (tag == 16) {
         parse_v1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v1_)));
          set_has_v1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_v2;
        break;
      }

      // optional uint32 v2 = 3;
      case 3: {
        if (tag == 24) {
         parse_v2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v2_)));
          set_has_v2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_v3;
        break;
      }

      // optional uint32 v3 = 4;
      case 4: {
        if (tag == 32) {
         parse_v3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v3_)));
          set_has_v3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_v4;
        break;
      }

      // optional uint32 v4 = 5;
      case 5: {
        if (tag == 40) {
         parse_v4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v4_)));
          set_has_v4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_v5;
        break;
      }

      // optional uint32 v5 = 6;
      case 6: {
        if (tag == 48) {
         parse_v5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v5_)));
          set_has_v5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_v6;
        break;
      }

      // optional uint32 v6 = 7;
      case 7: {
        if (tag == 56) {
         parse_v6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v6_)));
          set_has_v6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgMission.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgMission.Condition)
  return false;
#undef DO_
}

void Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgMission.Condition)
  // required uint32 v0 = 1;
  if (has_v0()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->v0(), output);
  }

  // required uint32 v1 = 2;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->v1(), output);
  }

  // optional uint32 v2 = 3;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->v2(), output);
  }

  // optional uint32 v3 = 4;
  if (has_v3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->v3(), output);
  }

  // optional uint32 v4 = 5;
  if (has_v4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->v4(), output);
  }

  // optional uint32 v5 = 6;
  if (has_v5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->v5(), output);
  }

  // optional uint32 v6 = 7;
  if (has_v6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->v6(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgMission.Condition)
}

::google::protobuf::uint8* Condition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMission.Condition)
  // required uint32 v0 = 1;
  if (has_v0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->v0(), target);
  }

  // required uint32 v1 = 2;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->v1(), target);
  }

  // optional uint32 v2 = 3;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->v2(), target);
  }

  // optional uint32 v3 = 4;
  if (has_v3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->v3(), target);
  }

  // optional uint32 v4 = 5;
  if (has_v4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->v4(), target);
  }

  // optional uint32 v5 = 6;
  if (has_v5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->v5(), target);
  }

  // optional uint32 v6 = 7;
  if (has_v6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->v6(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMission.Condition)
  return target;
}

int Condition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 v0 = 1;
    if (has_v0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v0());
    }

    // required uint32 v1 = 2;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v1());
    }

    // optional uint32 v2 = 3;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v2());
    }

    // optional uint32 v3 = 4;
    if (has_v3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v3());
    }

    // optional uint32 v4 = 5;
    if (has_v4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v4());
    }

    // optional uint32 v5 = 6;
    if (has_v5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v5());
    }

    // optional uint32 v6 = 7;
    if (has_v6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v6());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Condition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Condition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Condition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Condition::MergeFrom(const Condition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v0()) {
      set_v0(from.v0());
    }
    if (from.has_v1()) {
      set_v1(from.v1());
    }
    if (from.has_v2()) {
      set_v2(from.v2());
    }
    if (from.has_v3()) {
      set_v3(from.v3());
    }
    if (from.has_v4()) {
      set_v4(from.v4());
    }
    if (from.has_v5()) {
      set_v5(from.v5());
    }
    if (from.has_v6()) {
      set_v6(from.v6());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Condition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Condition::CopyFrom(const Condition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Condition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Condition::Swap(Condition* other) {
  if (other != this) {
    std::swap(v0_, other->v0_);
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(v3_, other->v3_);
    std::swap(v4_, other->v4_);
    std::swap(v5_, other->v5_);
    std::swap(v6_, other->v6_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Condition_descriptor_;
  metadata.reflection = Condition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Mission::kIdFieldNumber;
const int Mission::kConditionFieldNumber;
const int Mission::kRewardFieldNumber;
const int Mission::kExpFieldNumber;
const int Mission::kTypeFieldNumber;
const int Mission::kShengIdFieldNumber;
#endif  // !_MSC_VER

Mission::Mission()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgMission.Mission)
}

void Mission::InitAsDefaultInstance() {
}

Mission::Mission(const Mission& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgMission.Mission)
}

void Mission::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  exp_ = 0u;
  type_ = 0u;
  shengid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Mission::~Mission() {
  // @@protoc_insertion_point(destructor:CfgMission.Mission)
  SharedDtor();
}

void Mission::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Mission::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mission::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mission_descriptor_;
}

const Mission& Mission::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgMission_2eproto();
  return *default_instance_;
}

Mission* Mission::default_instance_ = NULL;

Mission* Mission::New() const {
  return new Mission;
}

void Mission::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Mission*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, exp_);
  ZR_(type_, shengid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  condition_.Clear();
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Mission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgMission.Mission)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        break;
      }

      // repeated .CfgMission.Condition condition = 2;
      case 2: {
        if (tag == 18) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }

      // repeated .CfgCommon.Reward reward = 3;
      case 3: {
        if (tag == 26) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reward;
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // required uint32 exp = 4;
      case 4: {
        if (tag == 32) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // required uint32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_shengId;
        break;
      }

      // required uint32 shengId = 6;
      case 6: {
        if (tag == 48) {
         parse_shengId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shengid_)));
          set_has_shengid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgMission.Mission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgMission.Mission)
  return false;
#undef DO_
}

void Mission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgMission.Mission)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CfgMission.Condition condition = 2;
  for (int i = 0; i < this->condition_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->condition(i), output);
  }

  // repeated .CfgCommon.Reward reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(i), output);
  }

  // required uint32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exp(), output);
  }

  // required uint32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // required uint32 shengId = 6;
  if (has_shengid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->shengid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgMission.Mission)
}

::google::protobuf::uint8* Mission::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMission.Mission)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CfgMission.Condition condition = 2;
  for (int i = 0; i < this->condition_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->condition(i), target);
  }

  // repeated .CfgCommon.Reward reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(i), target);
  }

  // required uint32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exp(), target);
  }

  // required uint32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // required uint32 shengId = 6;
  if (has_shengid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->shengid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMission.Mission)
  return target;
}

int Mission::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exp());
    }

    // required uint32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 shengId = 6;
    if (has_shengid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shengid());
    }

  }
  // repeated .CfgMission.Condition condition = 2;
  total_size += 1 * this->condition_size();
  for (int i = 0; i < this->condition_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->condition(i));
  }

  // repeated .CfgCommon.Reward reward = 3;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mission::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Mission* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Mission*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Mission::MergeFrom(const Mission& from) {
  GOOGLE_CHECK_NE(&from, this);
  condition_.MergeFrom(from.condition_);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_shengid()) {
      set_shengid(from.shengid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Mission::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mission::CopyFrom(const Mission& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mission::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000039) != 0x00000039) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->condition())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward())) return false;
  return true;
}

void Mission::Swap(Mission* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    condition_.Swap(&other->condition_);
    reward_.Swap(&other->reward_);
    std::swap(exp_, other->exp_);
    std::swap(type_, other->type_);
    std::swap(shengid_, other->shengid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Mission::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mission_descriptor_;
  metadata.reflection = Mission_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Missions::kMissionsFieldNumber;
#endif  // !_MSC_VER

Missions::Missions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgMission.Missions)
}

void Missions::InitAsDefaultInstance() {
}

Missions::Missions(const Missions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgMission.Missions)
}

void Missions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Missions::~Missions() {
  // @@protoc_insertion_point(destructor:CfgMission.Missions)
  SharedDtor();
}

void Missions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Missions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Missions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Missions_descriptor_;
}

const Missions& Missions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgMission_2eproto();
  return *default_instance_;
}

Missions* Missions::default_instance_ = NULL;

Missions* Missions::New() const {
  return new Missions;
}

void Missions::Clear() {
  missions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Missions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgMission.Missions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgMission.Mission missions = 1;
      case 1: {
        if (tag == 10) {
         parse_missions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_missions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_missions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgMission.Missions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgMission.Missions)
  return false;
#undef DO_
}

void Missions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgMission.Missions)
  // repeated .CfgMission.Mission missions = 1;
  for (int i = 0; i < this->missions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgMission.Missions)
}

::google::protobuf::uint8* Missions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMission.Missions)
  // repeated .CfgMission.Mission missions = 1;
  for (int i = 0; i < this->missions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->missions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMission.Missions)
  return target;
}

int Missions::ByteSize() const {
  int total_size = 0;

  // repeated .CfgMission.Mission missions = 1;
  total_size += 1 * this->missions_size();
  for (int i = 0; i < this->missions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->missions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Missions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Missions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Missions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Missions::MergeFrom(const Missions& from) {
  GOOGLE_CHECK_NE(&from, this);
  missions_.MergeFrom(from.missions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Missions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Missions::CopyFrom(const Missions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Missions::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->missions())) return false;
  return true;
}

void Missions::Swap(Missions* other) {
  if (other != this) {
    missions_.Swap(&other->missions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Missions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Missions_descriptor_;
  metadata.reflection = Missions_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgMission

// @@protoc_insertion_point(global_scope)
