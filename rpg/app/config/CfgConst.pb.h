// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgConst.proto

#ifndef PROTOBUF_CfgConst_2eproto__INCLUDED
#define PROTOBUF_CfgConst_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CfgConst {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgConst_2eproto();
void protobuf_AssignDesc_CfgConst_2eproto();
void protobuf_ShutdownFile_CfgConst_2eproto();

class Item;
class Items;

// ===================================================================

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required string a = 2;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 2;
  inline const ::std::string& a() const;
  inline void set_a(const ::std::string& value);
  inline void set_a(const char* value);
  inline void set_a(const char* value, size_t size);
  inline ::std::string* mutable_a();
  inline ::std::string* release_a();
  inline void set_allocated_a(::std::string* a);

  // required string m = 3;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 3;
  inline const ::std::string& m() const;
  inline void set_m(const ::std::string& value);
  inline void set_m(const char* value);
  inline void set_m(const char* value, size_t size);
  inline ::std::string* mutable_m();
  inline ::std::string* release_m();
  inline void set_allocated_m(::std::string* m);

  // required string s = 4;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 4;
  inline const ::std::string& s() const;
  inline void set_s(const ::std::string& value);
  inline void set_s(const char* value);
  inline void set_s(const char* value, size_t size);
  inline ::std::string* mutable_s();
  inline ::std::string* release_s();
  inline void set_allocated_s(::std::string* s);

  // required int32 v1 = 5;
  inline bool has_v1() const;
  inline void clear_v1();
  static const int kV1FieldNumber = 5;
  inline ::google::protobuf::int32 v1() const;
  inline void set_v1(::google::protobuf::int32 value);

  // required int32 v2 = 6;
  inline bool has_v2() const;
  inline void clear_v2();
  static const int kV2FieldNumber = 6;
  inline ::google::protobuf::int32 v2() const;
  inline void set_v2(::google::protobuf::int32 value);

  // required int32 v3 = 7;
  inline bool has_v3() const;
  inline void clear_v3();
  static const int kV3FieldNumber = 7;
  inline ::google::protobuf::int32 v3() const;
  inline void set_v3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CfgConst.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_v1();
  inline void clear_has_v1();
  inline void set_has_v2();
  inline void clear_has_v2();
  inline void set_has_v3();
  inline void clear_has_v3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::std::string* a_;
  ::std::string* m_;
  ::std::string* s_;
  ::google::protobuf::int32 v1_;
  ::google::protobuf::int32 v2_;
  ::google::protobuf::int32 v3_;
  friend void  protobuf_AddDesc_CfgConst_2eproto();
  friend void protobuf_AssignDesc_CfgConst_2eproto();
  friend void protobuf_ShutdownFile_CfgConst_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  Items* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgConst.Item consts = 1;
  inline int consts_size() const;
  inline void clear_consts();
  static const int kConstsFieldNumber = 1;
  inline const ::CfgConst::Item& consts(int index) const;
  inline ::CfgConst::Item* mutable_consts(int index);
  inline ::CfgConst::Item* add_consts();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgConst::Item >&
      consts() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgConst::Item >*
      mutable_consts();

  // @@protoc_insertion_point(class_scope:CfgConst.Items)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgConst::Item > consts_;
  friend void  protobuf_AddDesc_CfgConst_2eproto();
  friend void protobuf_AssignDesc_CfgConst_2eproto();
  friend void protobuf_ShutdownFile_CfgConst_2eproto();

  void InitAsDefaultInstance();
  static Items* default_instance_;
};
// ===================================================================


// ===================================================================

// Item

// required string id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& Item::id() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.id)
  return *id_;
}
inline void Item::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:CfgConst.Item.id)
}
inline void Item::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:CfgConst.Item.id)
}
inline void Item::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CfgConst.Item.id)
}
inline ::std::string* Item::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CfgConst.Item.id)
  return id_;
}
inline ::std::string* Item::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CfgConst.Item.id)
}

// required string a = 2;
inline bool Item::has_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_a() {
  if (a_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    a_->clear();
  }
  clear_has_a();
}
inline const ::std::string& Item::a() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.a)
  return *a_;
}
inline void Item::set_a(const ::std::string& value) {
  set_has_a();
  if (a_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    a_ = new ::std::string;
  }
  a_->assign(value);
  // @@protoc_insertion_point(field_set:CfgConst.Item.a)
}
inline void Item::set_a(const char* value) {
  set_has_a();
  if (a_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    a_ = new ::std::string;
  }
  a_->assign(value);
  // @@protoc_insertion_point(field_set_char:CfgConst.Item.a)
}
inline void Item::set_a(const char* value, size_t size) {
  set_has_a();
  if (a_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    a_ = new ::std::string;
  }
  a_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CfgConst.Item.a)
}
inline ::std::string* Item::mutable_a() {
  set_has_a();
  if (a_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    a_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CfgConst.Item.a)
  return a_;
}
inline ::std::string* Item::release_a() {
  clear_has_a();
  if (a_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = a_;
    a_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_a(::std::string* a) {
  if (a_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete a_;
  }
  if (a) {
    set_has_a();
    a_ = a;
  } else {
    clear_has_a();
    a_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CfgConst.Item.a)
}

// required string m = 3;
inline bool Item::has_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_m() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_m() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_m() {
  if (m_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_->clear();
  }
  clear_has_m();
}
inline const ::std::string& Item::m() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.m)
  return *m_;
}
inline void Item::set_m(const ::std::string& value) {
  set_has_m();
  if (m_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_ = new ::std::string;
  }
  m_->assign(value);
  // @@protoc_insertion_point(field_set:CfgConst.Item.m)
}
inline void Item::set_m(const char* value) {
  set_has_m();
  if (m_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_ = new ::std::string;
  }
  m_->assign(value);
  // @@protoc_insertion_point(field_set_char:CfgConst.Item.m)
}
inline void Item::set_m(const char* value, size_t size) {
  set_has_m();
  if (m_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_ = new ::std::string;
  }
  m_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CfgConst.Item.m)
}
inline ::std::string* Item::mutable_m() {
  set_has_m();
  if (m_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CfgConst.Item.m)
  return m_;
}
inline ::std::string* Item::release_m() {
  clear_has_m();
  if (m_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = m_;
    m_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_m(::std::string* m) {
  if (m_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_;
  }
  if (m) {
    set_has_m();
    m_ = m;
  } else {
    clear_has_m();
    m_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CfgConst.Item.m)
}

// required string s = 4;
inline bool Item::has_s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_s() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_s() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_s() {
  if (s_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_->clear();
  }
  clear_has_s();
}
inline const ::std::string& Item::s() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.s)
  return *s_;
}
inline void Item::set_s(const ::std::string& value) {
  set_has_s();
  if (s_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_ = new ::std::string;
  }
  s_->assign(value);
  // @@protoc_insertion_point(field_set:CfgConst.Item.s)
}
inline void Item::set_s(const char* value) {
  set_has_s();
  if (s_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_ = new ::std::string;
  }
  s_->assign(value);
  // @@protoc_insertion_point(field_set_char:CfgConst.Item.s)
}
inline void Item::set_s(const char* value, size_t size) {
  set_has_s();
  if (s_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_ = new ::std::string;
  }
  s_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CfgConst.Item.s)
}
inline ::std::string* Item::mutable_s() {
  set_has_s();
  if (s_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CfgConst.Item.s)
  return s_;
}
inline ::std::string* Item::release_s() {
  clear_has_s();
  if (s_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = s_;
    s_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_s(::std::string* s) {
  if (s_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s_;
  }
  if (s) {
    set_has_s();
    s_ = s;
  } else {
    clear_has_s();
    s_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CfgConst.Item.s)
}

// required int32 v1 = 5;
inline bool Item::has_v1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_v1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_v1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_v1() {
  v1_ = 0;
  clear_has_v1();
}
inline ::google::protobuf::int32 Item::v1() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.v1)
  return v1_;
}
inline void Item::set_v1(::google::protobuf::int32 value) {
  set_has_v1();
  v1_ = value;
  // @@protoc_insertion_point(field_set:CfgConst.Item.v1)
}

// required int32 v2 = 6;
inline bool Item::has_v2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_v2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_v2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_v2() {
  v2_ = 0;
  clear_has_v2();
}
inline ::google::protobuf::int32 Item::v2() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.v2)
  return v2_;
}
inline void Item::set_v2(::google::protobuf::int32 value) {
  set_has_v2();
  v2_ = value;
  // @@protoc_insertion_point(field_set:CfgConst.Item.v2)
}

// required int32 v3 = 7;
inline bool Item::has_v3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_v3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_v3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_v3() {
  v3_ = 0;
  clear_has_v3();
}
inline ::google::protobuf::int32 Item::v3() const {
  // @@protoc_insertion_point(field_get:CfgConst.Item.v3)
  return v3_;
}
inline void Item::set_v3(::google::protobuf::int32 value) {
  set_has_v3();
  v3_ = value;
  // @@protoc_insertion_point(field_set:CfgConst.Item.v3)
}

// -------------------------------------------------------------------

// Items

// repeated .CfgConst.Item consts = 1;
inline int Items::consts_size() const {
  return consts_.size();
}
inline void Items::clear_consts() {
  consts_.Clear();
}
inline const ::CfgConst::Item& Items::consts(int index) const {
  // @@protoc_insertion_point(field_get:CfgConst.Items.consts)
  return consts_.Get(index);
}
inline ::CfgConst::Item* Items::mutable_consts(int index) {
  // @@protoc_insertion_point(field_mutable:CfgConst.Items.consts)
  return consts_.Mutable(index);
}
inline ::CfgConst::Item* Items::add_consts() {
  // @@protoc_insertion_point(field_add:CfgConst.Items.consts)
  return consts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgConst::Item >&
Items::consts() const {
  // @@protoc_insertion_point(field_list:CfgConst.Items.consts)
  return consts_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgConst::Item >*
Items::mutable_consts() {
  // @@protoc_insertion_point(field_mutable_list:CfgConst.Items.consts)
  return &consts_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgConst

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgConst_2eproto__INCLUDED
