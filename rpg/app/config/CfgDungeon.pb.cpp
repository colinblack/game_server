// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgDungeon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgDungeon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgDungeon {

namespace {

const ::google::protobuf::Descriptor* DungeonItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dungeon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dungeon_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgDungeon_2eproto() {
  protobuf_AddDesc_CfgDungeon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgDungeon.proto");
  GOOGLE_CHECK(file != NULL);
  DungeonItem_descriptor_ = file->message_type(0);
  static const int DungeonItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonItem, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonItem, aroundborninterposlist_),
  };
  DungeonItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DungeonItem_descriptor_,
      DungeonItem::default_instance_,
      DungeonItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DungeonItem));
  Dungeon_descriptor_ = file->message_type(1);
  static const int Dungeon_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, dungeonconfig_),
  };
  Dungeon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Dungeon_descriptor_,
      Dungeon::default_instance_,
      Dungeon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Dungeon));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgDungeon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DungeonItem_descriptor_, &DungeonItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Dungeon_descriptor_, &Dungeon::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgDungeon_2eproto() {
  delete DungeonItem::default_instance_;
  delete DungeonItem_reflection_;
  delete Dungeon::default_instance_;
  delete Dungeon_reflection_;
}

void protobuf_AddDesc_CfgDungeon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020CfgDungeon.proto\022\nCfgDungeon\"H\n\013Dungeo"
    "nItem\022\n\n\002ID\030\001 \002(\r\022\r\n\005MapId\030\002 \002(\r\022\036\n\026Arou"
    "ndBornInterPosList\030\003 \001(\t\"9\n\007Dungeon\022.\n\rD"
    "ungeonconfig\030\001 \003(\0132\027.CfgDungeon.DungeonI"
    "tem", 163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgDungeon.proto", &protobuf_RegisterTypes);
  DungeonItem::default_instance_ = new DungeonItem();
  Dungeon::default_instance_ = new Dungeon();
  DungeonItem::default_instance_->InitAsDefaultInstance();
  Dungeon::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgDungeon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgDungeon_2eproto {
  StaticDescriptorInitializer_CfgDungeon_2eproto() {
    protobuf_AddDesc_CfgDungeon_2eproto();
  }
} static_descriptor_initializer_CfgDungeon_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DungeonItem::kIDFieldNumber;
const int DungeonItem::kMapIdFieldNumber;
const int DungeonItem::kAroundBornInterPosListFieldNumber;
#endif  // !_MSC_VER

DungeonItem::DungeonItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgDungeon.DungeonItem)
}

void DungeonItem::InitAsDefaultInstance() {
}

DungeonItem::DungeonItem(const DungeonItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgDungeon.DungeonItem)
}

void DungeonItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  mapid_ = 0u;
  aroundborninterposlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DungeonItem::~DungeonItem() {
  // @@protoc_insertion_point(destructor:CfgDungeon.DungeonItem)
  SharedDtor();
}

void DungeonItem::SharedDtor() {
  if (aroundborninterposlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete aroundborninterposlist_;
  }
  if (this != default_instance_) {
  }
}

void DungeonItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonItem_descriptor_;
}

const DungeonItem& DungeonItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgDungeon_2eproto();
  return *default_instance_;
}

DungeonItem* DungeonItem::default_instance_ = NULL;

DungeonItem* DungeonItem::New() const {
  return new DungeonItem;
}

void DungeonItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DungeonItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, mapid_);
    if (has_aroundborninterposlist()) {
      if (aroundborninterposlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        aroundborninterposlist_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DungeonItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgDungeon.DungeonItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MapId;
        break;
      }

      // required uint32 MapId = 2;
      case 2: {
        if (tag == 16) {
         parse_MapId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AroundBornInterPosList;
        break;
      }

      // optional string AroundBornInterPosList = 3;
      case 3: {
        if (tag == 26) {
         parse_AroundBornInterPosList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aroundborninterposlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aroundborninterposlist().data(), this->aroundborninterposlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "aroundborninterposlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgDungeon.DungeonItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgDungeon.DungeonItem)
  return false;
#undef DO_
}

void DungeonItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgDungeon.DungeonItem)
  // required uint32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 MapId = 2;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mapid(), output);
  }

  // optional string AroundBornInterPosList = 3;
  if (has_aroundborninterposlist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aroundborninterposlist().data(), this->aroundborninterposlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "aroundborninterposlist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->aroundborninterposlist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgDungeon.DungeonItem)
}

::google::protobuf::uint8* DungeonItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDungeon.DungeonItem)
  // required uint32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 MapId = 2;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mapid(), target);
  }

  // optional string AroundBornInterPosList = 3;
  if (has_aroundborninterposlist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aroundborninterposlist().data(), this->aroundborninterposlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "aroundborninterposlist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->aroundborninterposlist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDungeon.DungeonItem)
  return target;
}

int DungeonItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 MapId = 2;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

    // optional string AroundBornInterPosList = 3;
    if (has_aroundborninterposlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aroundborninterposlist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DungeonItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DungeonItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DungeonItem::MergeFrom(const DungeonItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_aroundborninterposlist()) {
      set_aroundborninterposlist(from.aroundborninterposlist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DungeonItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonItem::CopyFrom(const DungeonItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DungeonItem::Swap(DungeonItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(mapid_, other->mapid_);
    std::swap(aroundborninterposlist_, other->aroundborninterposlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DungeonItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonItem_descriptor_;
  metadata.reflection = DungeonItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Dungeon::kDungeonconfigFieldNumber;
#endif  // !_MSC_VER

Dungeon::Dungeon()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgDungeon.Dungeon)
}

void Dungeon::InitAsDefaultInstance() {
}

Dungeon::Dungeon(const Dungeon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgDungeon.Dungeon)
}

void Dungeon::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Dungeon::~Dungeon() {
  // @@protoc_insertion_point(destructor:CfgDungeon.Dungeon)
  SharedDtor();
}

void Dungeon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Dungeon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dungeon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dungeon_descriptor_;
}

const Dungeon& Dungeon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgDungeon_2eproto();
  return *default_instance_;
}

Dungeon* Dungeon::default_instance_ = NULL;

Dungeon* Dungeon::New() const {
  return new Dungeon;
}

void Dungeon::Clear() {
  dungeonconfig_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Dungeon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgDungeon.Dungeon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgDungeon.DungeonItem Dungeonconfig = 1;
      case 1: {
        if (tag == 10) {
         parse_Dungeonconfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dungeonconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Dungeonconfig;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgDungeon.Dungeon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgDungeon.Dungeon)
  return false;
#undef DO_
}

void Dungeon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgDungeon.Dungeon)
  // repeated .CfgDungeon.DungeonItem Dungeonconfig = 1;
  for (int i = 0; i < this->dungeonconfig_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dungeonconfig(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgDungeon.Dungeon)
}

::google::protobuf::uint8* Dungeon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDungeon.Dungeon)
  // repeated .CfgDungeon.DungeonItem Dungeonconfig = 1;
  for (int i = 0; i < this->dungeonconfig_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dungeonconfig(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDungeon.Dungeon)
  return target;
}

int Dungeon::ByteSize() const {
  int total_size = 0;

  // repeated .CfgDungeon.DungeonItem Dungeonconfig = 1;
  total_size += 1 * this->dungeonconfig_size();
  for (int i = 0; i < this->dungeonconfig_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dungeonconfig(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dungeon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Dungeon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Dungeon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Dungeon::MergeFrom(const Dungeon& from) {
  GOOGLE_CHECK_NE(&from, this);
  dungeonconfig_.MergeFrom(from.dungeonconfig_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Dungeon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dungeon::CopyFrom(const Dungeon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dungeon::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->dungeonconfig())) return false;
  return true;
}

void Dungeon::Swap(Dungeon* other) {
  if (other != this) {
    dungeonconfig_.Swap(&other->dungeonconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Dungeon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dungeon_descriptor_;
  metadata.reflection = Dungeon_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgDungeon

// @@protoc_insertion_point(global_scope)
