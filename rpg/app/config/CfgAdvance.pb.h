// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgAdvance.proto

#ifndef PROTOBUF_CfgAdvance_2eproto__INCLUDED
#define PROTOBUF_CfgAdvance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgAdvance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgAdvance_2eproto();
void protobuf_AssignDesc_CfgAdvance_2eproto();
void protobuf_ShutdownFile_CfgAdvance_2eproto();

class Advance;
class Advances;
class Dan;
class Dans;

// ===================================================================

class Advance : public ::google::protobuf::Message {
 public:
  Advance();
  virtual ~Advance();

  Advance(const Advance& from);

  inline Advance& operator=(const Advance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Advance& default_instance();

  void Swap(Advance* other);

  // implements Message ----------------------------------------------

  Advance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Advance& from);
  void MergeFrom(const Advance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // required uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 cost_item = 4;
  inline bool has_cost_item() const;
  inline void clear_cost_item();
  static const int kCostItemFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_item() const;
  inline void set_cost_item(::google::protobuf::uint32 value);

  // required uint32 cost_num = 5;
  inline bool has_cost_num() const;
  inline void clear_cost_num();
  static const int kCostNumFieldNumber = 5;
  inline ::google::protobuf::uint32 cost_num() const;
  inline void set_cost_num(::google::protobuf::uint32 value);

  // required uint32 bless = 6;
  inline bool has_bless() const;
  inline void clear_bless();
  static const int kBlessFieldNumber = 6;
  inline ::google::protobuf::uint32 bless() const;
  inline void set_bless(::google::protobuf::uint32 value);

  // required uint32 max_bless = 7;
  inline bool has_max_bless() const;
  inline void clear_max_bless();
  static const int kMaxBlessFieldNumber = 7;
  inline ::google::protobuf::uint32 max_bless() const;
  inline void set_max_bless(::google::protobuf::uint32 value);

  // required uint32 mode = 8;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 8;
  inline ::google::protobuf::uint32 mode() const;
  inline void set_mode(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 9;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 9;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Advance)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_cost_item();
  inline void clear_has_cost_item();
  inline void set_has_cost_num();
  inline void clear_has_cost_num();
  inline void set_has_bless();
  inline void clear_has_bless();
  inline void set_has_max_bless();
  inline void clear_has_max_bless();
  inline void set_has_mode();
  inline void clear_has_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 group_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 cost_item_;
  ::google::protobuf::uint32 cost_num_;
  ::google::protobuf::uint32 bless_;
  ::google::protobuf::uint32 max_bless_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Advance* default_instance_;
};
// -------------------------------------------------------------------

class Advances : public ::google::protobuf::Message {
 public:
  Advances();
  virtual ~Advances();

  Advances(const Advances& from);

  inline Advances& operator=(const Advances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Advances& default_instance();

  void Swap(Advances* other);

  // implements Message ----------------------------------------------

  Advances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Advances& from);
  void MergeFrom(const Advances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Advance advances = 1;
  inline int advances_size() const;
  inline void clear_advances();
  static const int kAdvancesFieldNumber = 1;
  inline const ::CfgAdvance::Advance& advances(int index) const;
  inline ::CfgAdvance::Advance* mutable_advances(int index);
  inline ::CfgAdvance::Advance* add_advances();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >&
      advances() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >*
      mutable_advances();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Advances)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance > advances_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Advances* default_instance_;
};
// -------------------------------------------------------------------

class Dan : public ::google::protobuf::Message {
 public:
  Dan();
  virtual ~Dan();

  Dan(const Dan& from);

  inline Dan& operator=(const Dan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dan& default_instance();

  void Swap(Dan* other);

  // implements Message ----------------------------------------------

  Dan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dan& from);
  void MergeFrom(const Dan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 total = 5;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 5;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 6;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 6;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Dan)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 total_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Dan* default_instance_;
};
// -------------------------------------------------------------------

class Dans : public ::google::protobuf::Message {
 public:
  Dans();
  virtual ~Dans();

  Dans(const Dans& from);

  inline Dans& operator=(const Dans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dans& default_instance();

  void Swap(Dans* other);

  // implements Message ----------------------------------------------

  Dans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dans& from);
  void MergeFrom(const Dans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Dan dans = 1;
  inline int dans_size() const;
  inline void clear_dans();
  static const int kDansFieldNumber = 1;
  inline const ::CfgAdvance::Dan& dans(int index) const;
  inline ::CfgAdvance::Dan* mutable_dans(int index);
  inline ::CfgAdvance::Dan* add_dans();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >&
      dans() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >*
      mutable_dans();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Dans)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan > dans_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Dans* default_instance_;
};
// ===================================================================


// ===================================================================

// Advance

// required uint32 type = 1;
inline bool Advance::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Advance::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Advance::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Advance::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Advance::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.type)
  return type_;
}
inline void Advance::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.type)
}

// required uint32 group = 2;
inline bool Advance::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Advance::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Advance::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Advance::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 Advance::group() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.group)
  return group_;
}
inline void Advance::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.group)
}

// required uint32 star = 3;
inline bool Advance::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Advance::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Advance::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Advance::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 Advance::star() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.star)
  return star_;
}
inline void Advance::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.star)
}

// required uint32 cost_item = 4;
inline bool Advance::has_cost_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Advance::set_has_cost_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Advance::clear_has_cost_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Advance::clear_cost_item() {
  cost_item_ = 0u;
  clear_has_cost_item();
}
inline ::google::protobuf::uint32 Advance::cost_item() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.cost_item)
  return cost_item_;
}
inline void Advance::set_cost_item(::google::protobuf::uint32 value) {
  set_has_cost_item();
  cost_item_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.cost_item)
}

// required uint32 cost_num = 5;
inline bool Advance::has_cost_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Advance::set_has_cost_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Advance::clear_has_cost_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Advance::clear_cost_num() {
  cost_num_ = 0u;
  clear_has_cost_num();
}
inline ::google::protobuf::uint32 Advance::cost_num() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.cost_num)
  return cost_num_;
}
inline void Advance::set_cost_num(::google::protobuf::uint32 value) {
  set_has_cost_num();
  cost_num_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.cost_num)
}

// required uint32 bless = 6;
inline bool Advance::has_bless() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Advance::set_has_bless() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Advance::clear_has_bless() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Advance::clear_bless() {
  bless_ = 0u;
  clear_has_bless();
}
inline ::google::protobuf::uint32 Advance::bless() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.bless)
  return bless_;
}
inline void Advance::set_bless(::google::protobuf::uint32 value) {
  set_has_bless();
  bless_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.bless)
}

// required uint32 max_bless = 7;
inline bool Advance::has_max_bless() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Advance::set_has_max_bless() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Advance::clear_has_max_bless() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Advance::clear_max_bless() {
  max_bless_ = 0u;
  clear_has_max_bless();
}
inline ::google::protobuf::uint32 Advance::max_bless() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.max_bless)
  return max_bless_;
}
inline void Advance::set_max_bless(::google::protobuf::uint32 value) {
  set_has_max_bless();
  max_bless_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.max_bless)
}

// required uint32 mode = 8;
inline bool Advance::has_mode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Advance::set_has_mode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Advance::clear_has_mode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Advance::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 Advance::mode() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.mode)
  return mode_;
}
inline void Advance::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.mode)
}

// repeated .CfgCommon.Attribute attr = 9;
inline int Advance::attr_size() const {
  return attr_.size();
}
inline void Advance::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Advance::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Advance::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Advance.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Advance::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Advance.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Advance::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Advance.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Advance::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Advance.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Advances

// repeated .CfgAdvance.Advance advances = 1;
inline int Advances::advances_size() const {
  return advances_.size();
}
inline void Advances::clear_advances() {
  advances_.Clear();
}
inline const ::CfgAdvance::Advance& Advances::advances(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advances.advances)
  return advances_.Get(index);
}
inline ::CfgAdvance::Advance* Advances::mutable_advances(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Advances.advances)
  return advances_.Mutable(index);
}
inline ::CfgAdvance::Advance* Advances::add_advances() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Advances.advances)
  return advances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >&
Advances::advances() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Advances.advances)
  return advances_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >*
Advances::mutable_advances() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Advances.advances)
  return &advances_;
}

// -------------------------------------------------------------------

// Dan

// required uint32 item = 1;
inline bool Dan::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dan::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dan::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dan::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 Dan::item() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.item)
  return item_;
}
inline void Dan::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.item)
}

// required uint32 id = 2;
inline bool Dan::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dan::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dan::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dan::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Dan::id() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.id)
  return id_;
}
inline void Dan::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.id)
}

// required uint32 type = 3;
inline bool Dan::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dan::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dan::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dan::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Dan::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.type)
  return type_;
}
inline void Dan::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.type)
}

// required uint32 level = 4;
inline bool Dan::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dan::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dan::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dan::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Dan::level() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.level)
  return level_;
}
inline void Dan::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.level)
}

// required uint32 total = 5;
inline bool Dan::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Dan::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Dan::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Dan::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 Dan::total() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.total)
  return total_;
}
inline void Dan::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.total)
}

// repeated .CfgCommon.Attribute attr = 6;
inline int Dan::attr_size() const {
  return attr_.size();
}
inline void Dan::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Dan::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Dan::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Dan.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Dan::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Dan.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Dan::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Dan.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Dan::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Dan.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Dans

// repeated .CfgAdvance.Dan dans = 1;
inline int Dans::dans_size() const {
  return dans_.size();
}
inline void Dans::clear_dans() {
  dans_.Clear();
}
inline const ::CfgAdvance::Dan& Dans::dans(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dans.dans)
  return dans_.Get(index);
}
inline ::CfgAdvance::Dan* Dans::mutable_dans(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Dans.dans)
  return dans_.Mutable(index);
}
inline ::CfgAdvance::Dan* Dans::add_dans() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Dans.dans)
  return dans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >&
Dans::dans() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Dans.dans)
  return dans_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >*
Dans::mutable_dans() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Dans.dans)
  return &dans_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgAdvance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgAdvance_2eproto__INCLUDED
