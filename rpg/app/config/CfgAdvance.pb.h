// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgAdvance.proto

#ifndef PROTOBUF_CfgAdvance_2eproto__INCLUDED
#define PROTOBUF_CfgAdvance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgAdvance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgAdvance_2eproto();
void protobuf_AssignDesc_CfgAdvance_2eproto();
void protobuf_ShutdownFile_CfgAdvance_2eproto();

class Advance;
class Advances;
class Dan;
class Dans;
class EquipStrength;
class EquipStrengths;
class Consume;
class Awaken;
class Awakens;
class Target;
class Targets;

// ===================================================================

class Advance : public ::google::protobuf::Message {
 public:
  Advance();
  virtual ~Advance();

  Advance(const Advance& from);

  inline Advance& operator=(const Advance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Advance& default_instance();

  void Swap(Advance* other);

  // implements Message ----------------------------------------------

  Advance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Advance& from);
  void MergeFrom(const Advance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // required uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 cost_item = 4;
  inline bool has_cost_item() const;
  inline void clear_cost_item();
  static const int kCostItemFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_item() const;
  inline void set_cost_item(::google::protobuf::uint32 value);

  // required uint32 cost_num = 5;
  inline bool has_cost_num() const;
  inline void clear_cost_num();
  static const int kCostNumFieldNumber = 5;
  inline ::google::protobuf::uint32 cost_num() const;
  inline void set_cost_num(::google::protobuf::uint32 value);

  // required uint32 bless = 6;
  inline bool has_bless() const;
  inline void clear_bless();
  static const int kBlessFieldNumber = 6;
  inline ::google::protobuf::uint32 bless() const;
  inline void set_bless(::google::protobuf::uint32 value);

  // required uint32 max_bless = 7;
  inline bool has_max_bless() const;
  inline void clear_max_bless();
  static const int kMaxBlessFieldNumber = 7;
  inline ::google::protobuf::uint32 max_bless() const;
  inline void set_max_bless(::google::protobuf::uint32 value);

  // required uint32 mode = 8;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 8;
  inline ::google::protobuf::uint32 mode() const;
  inline void set_mode(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 9;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 9;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // repeated uint32 skill = 10;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 10;
  inline ::google::protobuf::uint32 skill(int index) const;
  inline void set_skill(int index, ::google::protobuf::uint32 value);
  inline void add_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Advance)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_cost_item();
  inline void clear_has_cost_item();
  inline void set_has_cost_num();
  inline void clear_has_cost_num();
  inline void set_has_bless();
  inline void clear_has_bless();
  inline void set_has_max_bless();
  inline void clear_has_max_bless();
  inline void set_has_mode();
  inline void clear_has_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 group_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 cost_item_;
  ::google::protobuf::uint32 cost_num_;
  ::google::protobuf::uint32 bless_;
  ::google::protobuf::uint32 max_bless_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Advance* default_instance_;
};
// -------------------------------------------------------------------

class Advances : public ::google::protobuf::Message {
 public:
  Advances();
  virtual ~Advances();

  Advances(const Advances& from);

  inline Advances& operator=(const Advances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Advances& default_instance();

  void Swap(Advances* other);

  // implements Message ----------------------------------------------

  Advances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Advances& from);
  void MergeFrom(const Advances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Advance advances = 1;
  inline int advances_size() const;
  inline void clear_advances();
  static const int kAdvancesFieldNumber = 1;
  inline const ::CfgAdvance::Advance& advances(int index) const;
  inline ::CfgAdvance::Advance* mutable_advances(int index);
  inline ::CfgAdvance::Advance* add_advances();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >&
      advances() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >*
      mutable_advances();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Advances)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance > advances_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Advances* default_instance_;
};
// -------------------------------------------------------------------

class Dan : public ::google::protobuf::Message {
 public:
  Dan();
  virtual ~Dan();

  Dan(const Dan& from);

  inline Dan& operator=(const Dan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dan& default_instance();

  void Swap(Dan* other);

  // implements Message ----------------------------------------------

  Dan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dan& from);
  void MergeFrom(const Dan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 total = 5;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 5;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 6;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 6;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Dan)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 total_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Dan* default_instance_;
};
// -------------------------------------------------------------------

class Dans : public ::google::protobuf::Message {
 public:
  Dans();
  virtual ~Dans();

  Dans(const Dans& from);

  inline Dans& operator=(const Dans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dans& default_instance();

  void Swap(Dans* other);

  // implements Message ----------------------------------------------

  Dans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dans& from);
  void MergeFrom(const Dans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Dan dans = 1;
  inline int dans_size() const;
  inline void clear_dans();
  static const int kDansFieldNumber = 1;
  inline const ::CfgAdvance::Dan& dans(int index) const;
  inline ::CfgAdvance::Dan* mutable_dans(int index);
  inline ::CfgAdvance::Dan* add_dans();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >&
      dans() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >*
      mutable_dans();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Dans)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan > dans_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Dans* default_instance_;
};
// -------------------------------------------------------------------

class EquipStrength : public ::google::protobuf::Message {
 public:
  EquipStrength();
  virtual ~EquipStrength();

  EquipStrength(const EquipStrength& from);

  inline EquipStrength& operator=(const EquipStrength& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipStrength& default_instance();

  void Swap(EquipStrength* other);

  // implements Message ----------------------------------------------

  EquipStrength* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipStrength& from);
  void MergeFrom(const EquipStrength& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCommon.Attribute attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // required uint32 consumId = 2;
  inline bool has_consumid() const;
  inline void clear_consumid();
  static const int kConsumIdFieldNumber = 2;
  inline ::google::protobuf::uint32 consumid() const;
  inline void set_consumid(::google::protobuf::uint32 value);

  // required uint32 consumCnt = 3;
  inline bool has_consumcnt() const;
  inline void clear_consumcnt();
  static const int kConsumCntFieldNumber = 3;
  inline ::google::protobuf::uint32 consumcnt() const;
  inline void set_consumcnt(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 part = 6;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 6;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgAdvance.EquipStrength)
 private:
  inline void set_has_consumid();
  inline void clear_has_consumid();
  inline void set_has_consumcnt();
  inline void clear_has_consumcnt();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 consumid_;
  ::google::protobuf::uint32 consumcnt_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 part_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static EquipStrength* default_instance_;
};
// -------------------------------------------------------------------

class EquipStrengths : public ::google::protobuf::Message {
 public:
  EquipStrengths();
  virtual ~EquipStrengths();

  EquipStrengths(const EquipStrengths& from);

  inline EquipStrengths& operator=(const EquipStrengths& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipStrengths& default_instance();

  void Swap(EquipStrengths* other);

  // implements Message ----------------------------------------------

  EquipStrengths* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipStrengths& from);
  void MergeFrom(const EquipStrengths& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.EquipStrength strength = 1;
  inline int strength_size() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 1;
  inline const ::CfgAdvance::EquipStrength& strength(int index) const;
  inline ::CfgAdvance::EquipStrength* mutable_strength(int index);
  inline ::CfgAdvance::EquipStrength* add_strength();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::EquipStrength >&
      strength() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::EquipStrength >*
      mutable_strength();

  // @@protoc_insertion_point(class_scope:CfgAdvance.EquipStrengths)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::EquipStrength > strength_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static EquipStrengths* default_instance_;
};
// -------------------------------------------------------------------

class Consume : public ::google::protobuf::Message {
 public:
  Consume();
  virtual ~Consume();

  Consume(const Consume& from);

  inline Consume& operator=(const Consume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Consume& default_instance();

  void Swap(Consume* other);

  // implements Message ----------------------------------------------

  Consume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Consume& from);
  void MergeFrom(const Consume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgAdvance.Consume)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Consume* default_instance_;
};
// -------------------------------------------------------------------

class Awaken : public ::google::protobuf::Message {
 public:
  Awaken();
  virtual ~Awaken();

  Awaken(const Awaken& from);

  inline Awaken& operator=(const Awaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Awaken& default_instance();

  void Swap(Awaken* other);

  // implements Message ----------------------------------------------

  Awaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Awaken& from);
  void MergeFrom(const Awaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCommon.Attribute attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // optional .CfgAdvance.Consume consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline const ::CfgAdvance::Consume& consume() const;
  inline ::CfgAdvance::Consume* mutable_consume();
  inline ::CfgAdvance::Consume* release_consume();
  inline void set_allocated_consume(::CfgAdvance::Consume* consume);

  // required uint32 advance = 3;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 3;
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // required uint32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgAdvance.Awaken)
 private:
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::CfgAdvance::Consume* consume_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Awaken* default_instance_;
};
// -------------------------------------------------------------------

class Awakens : public ::google::protobuf::Message {
 public:
  Awakens();
  virtual ~Awakens();

  Awakens(const Awakens& from);

  inline Awakens& operator=(const Awakens& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Awakens& default_instance();

  void Swap(Awakens* other);

  // implements Message ----------------------------------------------

  Awakens* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Awakens& from);
  void MergeFrom(const Awakens& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Awaken awaken = 1;
  inline int awaken_size() const;
  inline void clear_awaken();
  static const int kAwakenFieldNumber = 1;
  inline const ::CfgAdvance::Awaken& awaken(int index) const;
  inline ::CfgAdvance::Awaken* mutable_awaken(int index);
  inline ::CfgAdvance::Awaken* add_awaken();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Awaken >&
      awaken() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Awaken >*
      mutable_awaken();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Awakens)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Awaken > awaken_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Awakens* default_instance_;
};
// -------------------------------------------------------------------

class Target : public ::google::protobuf::Message {
 public:
  Target();
  virtual ~Target();

  Target(const Target& from);

  inline Target& operator=(const Target& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Target& default_instance();

  void Swap(Target* other);

  // implements Message ----------------------------------------------

  Target* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Target& from);
  void MergeFrom(const Target& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCommon.Attribute attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // required uint32 advance = 2;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 2;
  inline ::google::protobuf::uint32 advance() const;
  inline void set_advance(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgAdvance.Target)
 private:
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 advance_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Target* default_instance_;
};
// -------------------------------------------------------------------

class Targets : public ::google::protobuf::Message {
 public:
  Targets();
  virtual ~Targets();

  Targets(const Targets& from);

  inline Targets& operator=(const Targets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Targets& default_instance();

  void Swap(Targets* other);

  // implements Message ----------------------------------------------

  Targets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Targets& from);
  void MergeFrom(const Targets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgAdvance.Target target = 1;
  inline int target_size() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::CfgAdvance::Target& target(int index) const;
  inline ::CfgAdvance::Target* mutable_target(int index);
  inline ::CfgAdvance::Target* add_target();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Target >&
      target() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Target >*
      mutable_target();

  // @@protoc_insertion_point(class_scope:CfgAdvance.Targets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Target > target_;
  friend void  protobuf_AddDesc_CfgAdvance_2eproto();
  friend void protobuf_AssignDesc_CfgAdvance_2eproto();
  friend void protobuf_ShutdownFile_CfgAdvance_2eproto();

  void InitAsDefaultInstance();
  static Targets* default_instance_;
};
// ===================================================================


// ===================================================================

// Advance

// required uint32 type = 1;
inline bool Advance::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Advance::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Advance::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Advance::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Advance::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.type)
  return type_;
}
inline void Advance::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.type)
}

// required uint32 group = 2;
inline bool Advance::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Advance::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Advance::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Advance::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 Advance::group() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.group)
  return group_;
}
inline void Advance::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.group)
}

// required uint32 star = 3;
inline bool Advance::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Advance::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Advance::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Advance::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 Advance::star() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.star)
  return star_;
}
inline void Advance::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.star)
}

// required uint32 cost_item = 4;
inline bool Advance::has_cost_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Advance::set_has_cost_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Advance::clear_has_cost_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Advance::clear_cost_item() {
  cost_item_ = 0u;
  clear_has_cost_item();
}
inline ::google::protobuf::uint32 Advance::cost_item() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.cost_item)
  return cost_item_;
}
inline void Advance::set_cost_item(::google::protobuf::uint32 value) {
  set_has_cost_item();
  cost_item_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.cost_item)
}

// required uint32 cost_num = 5;
inline bool Advance::has_cost_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Advance::set_has_cost_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Advance::clear_has_cost_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Advance::clear_cost_num() {
  cost_num_ = 0u;
  clear_has_cost_num();
}
inline ::google::protobuf::uint32 Advance::cost_num() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.cost_num)
  return cost_num_;
}
inline void Advance::set_cost_num(::google::protobuf::uint32 value) {
  set_has_cost_num();
  cost_num_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.cost_num)
}

// required uint32 bless = 6;
inline bool Advance::has_bless() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Advance::set_has_bless() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Advance::clear_has_bless() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Advance::clear_bless() {
  bless_ = 0u;
  clear_has_bless();
}
inline ::google::protobuf::uint32 Advance::bless() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.bless)
  return bless_;
}
inline void Advance::set_bless(::google::protobuf::uint32 value) {
  set_has_bless();
  bless_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.bless)
}

// required uint32 max_bless = 7;
inline bool Advance::has_max_bless() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Advance::set_has_max_bless() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Advance::clear_has_max_bless() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Advance::clear_max_bless() {
  max_bless_ = 0u;
  clear_has_max_bless();
}
inline ::google::protobuf::uint32 Advance::max_bless() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.max_bless)
  return max_bless_;
}
inline void Advance::set_max_bless(::google::protobuf::uint32 value) {
  set_has_max_bless();
  max_bless_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.max_bless)
}

// required uint32 mode = 8;
inline bool Advance::has_mode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Advance::set_has_mode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Advance::clear_has_mode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Advance::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 Advance::mode() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.mode)
  return mode_;
}
inline void Advance::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.mode)
}

// repeated .CfgCommon.Attribute attr = 9;
inline int Advance::attr_size() const {
  return attr_.size();
}
inline void Advance::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Advance::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Advance::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Advance.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Advance::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Advance.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Advance::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Advance.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Advance::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Advance.attr)
  return &attr_;
}

// repeated uint32 skill = 10;
inline int Advance::skill_size() const {
  return skill_.size();
}
inline void Advance::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::uint32 Advance::skill(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advance.skill)
  return skill_.Get(index);
}
inline void Advance::set_skill(int index, ::google::protobuf::uint32 value) {
  skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:CfgAdvance.Advance.skill)
}
inline void Advance::add_skill(::google::protobuf::uint32 value) {
  skill_.Add(value);
  // @@protoc_insertion_point(field_add:CfgAdvance.Advance.skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Advance::skill() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Advance.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Advance::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Advance.skill)
  return &skill_;
}

// -------------------------------------------------------------------

// Advances

// repeated .CfgAdvance.Advance advances = 1;
inline int Advances::advances_size() const {
  return advances_.size();
}
inline void Advances::clear_advances() {
  advances_.Clear();
}
inline const ::CfgAdvance::Advance& Advances::advances(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Advances.advances)
  return advances_.Get(index);
}
inline ::CfgAdvance::Advance* Advances::mutable_advances(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Advances.advances)
  return advances_.Mutable(index);
}
inline ::CfgAdvance::Advance* Advances::add_advances() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Advances.advances)
  return advances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >&
Advances::advances() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Advances.advances)
  return advances_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Advance >*
Advances::mutable_advances() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Advances.advances)
  return &advances_;
}

// -------------------------------------------------------------------

// Dan

// required uint32 item = 1;
inline bool Dan::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dan::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dan::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dan::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 Dan::item() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.item)
  return item_;
}
inline void Dan::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.item)
}

// required uint32 id = 2;
inline bool Dan::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dan::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dan::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dan::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Dan::id() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.id)
  return id_;
}
inline void Dan::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.id)
}

// required uint32 type = 3;
inline bool Dan::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dan::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dan::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dan::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Dan::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.type)
  return type_;
}
inline void Dan::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.type)
}

// required uint32 level = 4;
inline bool Dan::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dan::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dan::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dan::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Dan::level() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.level)
  return level_;
}
inline void Dan::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.level)
}

// required uint32 total = 5;
inline bool Dan::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Dan::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Dan::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Dan::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 Dan::total() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.total)
  return total_;
}
inline void Dan::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Dan.total)
}

// repeated .CfgCommon.Attribute attr = 6;
inline int Dan::attr_size() const {
  return attr_.size();
}
inline void Dan::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Dan::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dan.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Dan::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Dan.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Dan::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Dan.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Dan::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Dan.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Dan::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Dan.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Dans

// repeated .CfgAdvance.Dan dans = 1;
inline int Dans::dans_size() const {
  return dans_.size();
}
inline void Dans::clear_dans() {
  dans_.Clear();
}
inline const ::CfgAdvance::Dan& Dans::dans(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Dans.dans)
  return dans_.Get(index);
}
inline ::CfgAdvance::Dan* Dans::mutable_dans(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Dans.dans)
  return dans_.Mutable(index);
}
inline ::CfgAdvance::Dan* Dans::add_dans() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Dans.dans)
  return dans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >&
Dans::dans() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Dans.dans)
  return dans_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Dan >*
Dans::mutable_dans() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Dans.dans)
  return &dans_;
}

// -------------------------------------------------------------------

// EquipStrength

// repeated .CfgCommon.Attribute attr = 1;
inline int EquipStrength::attr_size() const {
  return attr_.size();
}
inline void EquipStrength::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& EquipStrength::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* EquipStrength::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.EquipStrength.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* EquipStrength::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.EquipStrength.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
EquipStrength::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.EquipStrength.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
EquipStrength::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.EquipStrength.attr)
  return &attr_;
}

// required uint32 consumId = 2;
inline bool EquipStrength::has_consumid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipStrength::set_has_consumid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipStrength::clear_has_consumid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipStrength::clear_consumid() {
  consumid_ = 0u;
  clear_has_consumid();
}
inline ::google::protobuf::uint32 EquipStrength::consumid() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.consumId)
  return consumid_;
}
inline void EquipStrength::set_consumid(::google::protobuf::uint32 value) {
  set_has_consumid();
  consumid_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.EquipStrength.consumId)
}

// required uint32 consumCnt = 3;
inline bool EquipStrength::has_consumcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipStrength::set_has_consumcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipStrength::clear_has_consumcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipStrength::clear_consumcnt() {
  consumcnt_ = 0u;
  clear_has_consumcnt();
}
inline ::google::protobuf::uint32 EquipStrength::consumcnt() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.consumCnt)
  return consumcnt_;
}
inline void EquipStrength::set_consumcnt(::google::protobuf::uint32 value) {
  set_has_consumcnt();
  consumcnt_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.EquipStrength.consumCnt)
}

// required uint32 level = 4;
inline bool EquipStrength::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipStrength::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipStrength::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipStrength::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 EquipStrength::level() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.level)
  return level_;
}
inline void EquipStrength::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.EquipStrength.level)
}

// required uint32 type = 5;
inline bool EquipStrength::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipStrength::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipStrength::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipStrength::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 EquipStrength::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.type)
  return type_;
}
inline void EquipStrength::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.EquipStrength.type)
}

// required uint32 part = 6;
inline bool EquipStrength::has_part() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipStrength::set_has_part() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipStrength::clear_has_part() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipStrength::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 EquipStrength::part() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrength.part)
  return part_;
}
inline void EquipStrength::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.EquipStrength.part)
}

// -------------------------------------------------------------------

// EquipStrengths

// repeated .CfgAdvance.EquipStrength strength = 1;
inline int EquipStrengths::strength_size() const {
  return strength_.size();
}
inline void EquipStrengths::clear_strength() {
  strength_.Clear();
}
inline const ::CfgAdvance::EquipStrength& EquipStrengths::strength(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.EquipStrengths.strength)
  return strength_.Get(index);
}
inline ::CfgAdvance::EquipStrength* EquipStrengths::mutable_strength(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.EquipStrengths.strength)
  return strength_.Mutable(index);
}
inline ::CfgAdvance::EquipStrength* EquipStrengths::add_strength() {
  // @@protoc_insertion_point(field_add:CfgAdvance.EquipStrengths.strength)
  return strength_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::EquipStrength >&
EquipStrengths::strength() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.EquipStrengths.strength)
  return strength_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::EquipStrength >*
EquipStrengths::mutable_strength() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.EquipStrengths.strength)
  return &strength_;
}

// -------------------------------------------------------------------

// Consume

// required uint32 id = 1;
inline bool Consume::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Consume::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Consume::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Consume::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Consume::id() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Consume.id)
  return id_;
}
inline void Consume::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Consume.id)
}

// required uint32 num = 2;
inline bool Consume::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Consume::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Consume::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Consume::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Consume::num() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Consume.num)
  return num_;
}
inline void Consume::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Consume.num)
}

// -------------------------------------------------------------------

// Awaken

// repeated .CfgCommon.Attribute attr = 1;
inline int Awaken::attr_size() const {
  return attr_.size();
}
inline void Awaken::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Awaken::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awaken.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Awaken::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Awaken.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Awaken::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Awaken.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Awaken::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Awaken.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Awaken::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Awaken.attr)
  return &attr_;
}

// optional .CfgAdvance.Consume consume = 2;
inline bool Awaken::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Awaken::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Awaken::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Awaken::clear_consume() {
  if (consume_ != NULL) consume_->::CfgAdvance::Consume::Clear();
  clear_has_consume();
}
inline const ::CfgAdvance::Consume& Awaken::consume() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awaken.consume)
  return consume_ != NULL ? *consume_ : *default_instance_->consume_;
}
inline ::CfgAdvance::Consume* Awaken::mutable_consume() {
  set_has_consume();
  if (consume_ == NULL) consume_ = new ::CfgAdvance::Consume;
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Awaken.consume)
  return consume_;
}
inline ::CfgAdvance::Consume* Awaken::release_consume() {
  clear_has_consume();
  ::CfgAdvance::Consume* temp = consume_;
  consume_ = NULL;
  return temp;
}
inline void Awaken::set_allocated_consume(::CfgAdvance::Consume* consume) {
  delete consume_;
  consume_ = consume;
  if (consume) {
    set_has_consume();
  } else {
    clear_has_consume();
  }
  // @@protoc_insertion_point(field_set_allocated:CfgAdvance.Awaken.consume)
}

// required uint32 advance = 3;
inline bool Awaken::has_advance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Awaken::set_has_advance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Awaken::clear_has_advance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Awaken::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 Awaken::advance() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awaken.advance)
  return advance_;
}
inline void Awaken::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Awaken.advance)
}

// required uint32 star = 4;
inline bool Awaken::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Awaken::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Awaken::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Awaken::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 Awaken::star() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awaken.star)
  return star_;
}
inline void Awaken::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Awaken.star)
}

// required uint32 type = 5;
inline bool Awaken::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Awaken::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Awaken::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Awaken::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Awaken::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awaken.type)
  return type_;
}
inline void Awaken::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Awaken.type)
}

// -------------------------------------------------------------------

// Awakens

// repeated .CfgAdvance.Awaken awaken = 1;
inline int Awakens::awaken_size() const {
  return awaken_.size();
}
inline void Awakens::clear_awaken() {
  awaken_.Clear();
}
inline const ::CfgAdvance::Awaken& Awakens::awaken(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Awakens.awaken)
  return awaken_.Get(index);
}
inline ::CfgAdvance::Awaken* Awakens::mutable_awaken(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Awakens.awaken)
  return awaken_.Mutable(index);
}
inline ::CfgAdvance::Awaken* Awakens::add_awaken() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Awakens.awaken)
  return awaken_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Awaken >&
Awakens::awaken() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Awakens.awaken)
  return awaken_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Awaken >*
Awakens::mutable_awaken() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Awakens.awaken)
  return &awaken_;
}

// -------------------------------------------------------------------

// Target

// repeated .CfgCommon.Attribute attr = 1;
inline int Target::attr_size() const {
  return attr_.size();
}
inline void Target::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Target::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Target.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Target::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Target.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Target::add_attr() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Target.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Target::attr() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Target.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Target::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Target.attr)
  return &attr_;
}

// required uint32 advance = 2;
inline bool Target::has_advance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Target::set_has_advance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Target::clear_has_advance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Target::clear_advance() {
  advance_ = 0u;
  clear_has_advance();
}
inline ::google::protobuf::uint32 Target::advance() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Target.advance)
  return advance_;
}
inline void Target::set_advance(::google::protobuf::uint32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Target.advance)
}

// required uint32 type = 3;
inline bool Target::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Target::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Target::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Target::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Target::type() const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Target.type)
  return type_;
}
inline void Target::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgAdvance.Target.type)
}

// -------------------------------------------------------------------

// Targets

// repeated .CfgAdvance.Target target = 1;
inline int Targets::target_size() const {
  return target_.size();
}
inline void Targets::clear_target() {
  target_.Clear();
}
inline const ::CfgAdvance::Target& Targets::target(int index) const {
  // @@protoc_insertion_point(field_get:CfgAdvance.Targets.target)
  return target_.Get(index);
}
inline ::CfgAdvance::Target* Targets::mutable_target(int index) {
  // @@protoc_insertion_point(field_mutable:CfgAdvance.Targets.target)
  return target_.Mutable(index);
}
inline ::CfgAdvance::Target* Targets::add_target() {
  // @@protoc_insertion_point(field_add:CfgAdvance.Targets.target)
  return target_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Target >&
Targets::target() const {
  // @@protoc_insertion_point(field_list:CfgAdvance.Targets.target)
  return target_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgAdvance::Target >*
Targets::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:CfgAdvance.Targets.target)
  return &target_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgAdvance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgAdvance_2eproto__INCLUDED
