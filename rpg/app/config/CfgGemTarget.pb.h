// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgGemTarget.proto

#ifndef PROTOBUF_CfgGemTarget_2eproto__INCLUDED
#define PROTOBUF_CfgGemTarget_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgGemTarget {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgGemTarget_2eproto();
void protobuf_AssignDesc_CfgGemTarget_2eproto();
void protobuf_ShutdownFile_CfgGemTarget_2eproto();

class GemTarget;
class GemTargets;

// ===================================================================

class GemTarget : public ::google::protobuf::Message {
 public:
  GemTarget();
  virtual ~GemTarget();

  GemTarget(const GemTarget& from);

  inline GemTarget& operator=(const GemTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemTarget& default_instance();

  void Swap(GemTarget* other);

  // implements Message ----------------------------------------------

  GemTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemTarget& from);
  void MergeFrom(const GemTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 gemLV = 3;
  inline bool has_gemlv() const;
  inline void clear_gemlv();
  static const int kGemLVFieldNumber = 3;
  inline ::google::protobuf::uint32 gemlv() const;
  inline void set_gemlv(::google::protobuf::uint32 value);

  // repeated uint32 gemType = 4;
  inline int gemtype_size() const;
  inline void clear_gemtype();
  static const int kGemTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 gemtype(int index) const;
  inline void set_gemtype(int index, ::google::protobuf::uint32 value);
  inline void add_gemtype(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gemtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gemtype();

  // repeated .CfgCommon.Attribute attr = 5;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 5;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgGemTarget.GemTarget)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_gemlv();
  inline void clear_has_gemlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gemtype_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 gemlv_;
  friend void  protobuf_AddDesc_CfgGemTarget_2eproto();
  friend void protobuf_AssignDesc_CfgGemTarget_2eproto();
  friend void protobuf_ShutdownFile_CfgGemTarget_2eproto();

  void InitAsDefaultInstance();
  static GemTarget* default_instance_;
};
// -------------------------------------------------------------------

class GemTargets : public ::google::protobuf::Message {
 public:
  GemTargets();
  virtual ~GemTargets();

  GemTargets(const GemTargets& from);

  inline GemTargets& operator=(const GemTargets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemTargets& default_instance();

  void Swap(GemTargets* other);

  // implements Message ----------------------------------------------

  GemTargets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemTargets& from);
  void MergeFrom(const GemTargets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgGemTarget.GemTarget gem_targets = 1;
  inline int gem_targets_size() const;
  inline void clear_gem_targets();
  static const int kGemTargetsFieldNumber = 1;
  inline const ::CfgGemTarget::GemTarget& gem_targets(int index) const;
  inline ::CfgGemTarget::GemTarget* mutable_gem_targets(int index);
  inline ::CfgGemTarget::GemTarget* add_gem_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgGemTarget::GemTarget >&
      gem_targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgGemTarget::GemTarget >*
      mutable_gem_targets();

  // @@protoc_insertion_point(class_scope:CfgGemTarget.GemTargets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgGemTarget::GemTarget > gem_targets_;
  friend void  protobuf_AddDesc_CfgGemTarget_2eproto();
  friend void protobuf_AssignDesc_CfgGemTarget_2eproto();
  friend void protobuf_ShutdownFile_CfgGemTarget_2eproto();

  void InitAsDefaultInstance();
  static GemTargets* default_instance_;
};
// ===================================================================


// ===================================================================

// GemTarget

// required uint32 id = 1;
inline bool GemTarget::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemTarget::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemTarget::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemTarget::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GemTarget::id() const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTarget.id)
  return id_;
}
inline void GemTarget::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgGemTarget.GemTarget.id)
}

// required uint32 count = 2;
inline bool GemTarget::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemTarget::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemTarget::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemTarget::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GemTarget::count() const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTarget.count)
  return count_;
}
inline void GemTarget::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CfgGemTarget.GemTarget.count)
}

// required uint32 gemLV = 3;
inline bool GemTarget::has_gemlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GemTarget::set_has_gemlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GemTarget::clear_has_gemlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GemTarget::clear_gemlv() {
  gemlv_ = 0u;
  clear_has_gemlv();
}
inline ::google::protobuf::uint32 GemTarget::gemlv() const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTarget.gemLV)
  return gemlv_;
}
inline void GemTarget::set_gemlv(::google::protobuf::uint32 value) {
  set_has_gemlv();
  gemlv_ = value;
  // @@protoc_insertion_point(field_set:CfgGemTarget.GemTarget.gemLV)
}

// repeated uint32 gemType = 4;
inline int GemTarget::gemtype_size() const {
  return gemtype_.size();
}
inline void GemTarget::clear_gemtype() {
  gemtype_.Clear();
}
inline ::google::protobuf::uint32 GemTarget::gemtype(int index) const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTarget.gemType)
  return gemtype_.Get(index);
}
inline void GemTarget::set_gemtype(int index, ::google::protobuf::uint32 value) {
  gemtype_.Set(index, value);
  // @@protoc_insertion_point(field_set:CfgGemTarget.GemTarget.gemType)
}
inline void GemTarget::add_gemtype(::google::protobuf::uint32 value) {
  gemtype_.Add(value);
  // @@protoc_insertion_point(field_add:CfgGemTarget.GemTarget.gemType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GemTarget::gemtype() const {
  // @@protoc_insertion_point(field_list:CfgGemTarget.GemTarget.gemType)
  return gemtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GemTarget::mutable_gemtype() {
  // @@protoc_insertion_point(field_mutable_list:CfgGemTarget.GemTarget.gemType)
  return &gemtype_;
}

// repeated .CfgCommon.Attribute attr = 5;
inline int GemTarget::attr_size() const {
  return attr_.size();
}
inline void GemTarget::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& GemTarget::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTarget.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* GemTarget::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgGemTarget.GemTarget.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* GemTarget::add_attr() {
  // @@protoc_insertion_point(field_add:CfgGemTarget.GemTarget.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
GemTarget::attr() const {
  // @@protoc_insertion_point(field_list:CfgGemTarget.GemTarget.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
GemTarget::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgGemTarget.GemTarget.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// GemTargets

// repeated .CfgGemTarget.GemTarget gem_targets = 1;
inline int GemTargets::gem_targets_size() const {
  return gem_targets_.size();
}
inline void GemTargets::clear_gem_targets() {
  gem_targets_.Clear();
}
inline const ::CfgGemTarget::GemTarget& GemTargets::gem_targets(int index) const {
  // @@protoc_insertion_point(field_get:CfgGemTarget.GemTargets.gem_targets)
  return gem_targets_.Get(index);
}
inline ::CfgGemTarget::GemTarget* GemTargets::mutable_gem_targets(int index) {
  // @@protoc_insertion_point(field_mutable:CfgGemTarget.GemTargets.gem_targets)
  return gem_targets_.Mutable(index);
}
inline ::CfgGemTarget::GemTarget* GemTargets::add_gem_targets() {
  // @@protoc_insertion_point(field_add:CfgGemTarget.GemTargets.gem_targets)
  return gem_targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgGemTarget::GemTarget >&
GemTargets::gem_targets() const {
  // @@protoc_insertion_point(field_list:CfgGemTarget.GemTargets.gem_targets)
  return gem_targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgGemTarget::GemTarget >*
GemTargets::mutable_gem_targets() {
  // @@protoc_insertion_point(field_mutable_list:CfgGemTarget.GemTargets.gem_targets)
  return &gem_targets_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgGemTarget

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgGemTarget_2eproto__INCLUDED
