// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgTreasure.proto

#ifndef PROTOBUF_CfgTreasure_2eproto__INCLUDED
#define PROTOBUF_CfgTreasure_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgTreasure {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgTreasure_2eproto();
void protobuf_AssignDesc_CfgTreasure_2eproto();
void protobuf_ShutdownFile_CfgTreasure_2eproto();

class Dan;
class Dans;
class CostItem;
class Treasure;
class Treasures;
class Hunt;
class Hunts;
class HuntBase;
class HuntBases;

// ===================================================================

class Dan : public ::google::protobuf::Message {
 public:
  Dan();
  virtual ~Dan();

  Dan(const Dan& from);

  inline Dan& operator=(const Dan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dan& default_instance();

  void Swap(Dan* other);

  // implements Message ----------------------------------------------

  Dan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dan& from);
  void MergeFrom(const Dan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgTreasure.Dan)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Dan* default_instance_;
};
// -------------------------------------------------------------------

class Dans : public ::google::protobuf::Message {
 public:
  Dans();
  virtual ~Dans();

  Dans(const Dans& from);

  inline Dans& operator=(const Dans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dans& default_instance();

  void Swap(Dans* other);

  // implements Message ----------------------------------------------

  Dans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dans& from);
  void MergeFrom(const Dans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgTreasure.Dan dans = 1;
  inline int dans_size() const;
  inline void clear_dans();
  static const int kDansFieldNumber = 1;
  inline const ::CfgTreasure::Dan& dans(int index) const;
  inline ::CfgTreasure::Dan* mutable_dans(int index);
  inline ::CfgTreasure::Dan* add_dans();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Dan >&
      dans() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Dan >*
      mutable_dans();

  // @@protoc_insertion_point(class_scope:CfgTreasure.Dans)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Dan > dans_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Dans* default_instance_;
};
// -------------------------------------------------------------------

class CostItem : public ::google::protobuf::Message {
 public:
  CostItem();
  virtual ~CostItem();

  CostItem(const CostItem& from);

  inline CostItem& operator=(const CostItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostItem& default_instance();

  void Swap(CostItem* other);

  // implements Message ----------------------------------------------

  CostItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostItem& from);
  void MergeFrom(const CostItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:CfgTreasure.CostItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static CostItem* default_instance_;
};
// -------------------------------------------------------------------

class Treasure : public ::google::protobuf::Message {
 public:
  Treasure();
  virtual ~Treasure();

  Treasure(const Treasure& from);

  inline Treasure& operator=(const Treasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure& default_instance();

  void Swap(Treasure* other);

  // implements Message ----------------------------------------------

  Treasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure& from);
  void MergeFrom(const Treasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCommon.Attribute attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // required uint32 bless = 2;
  inline bool has_bless() const;
  inline void clear_bless();
  static const int kBlessFieldNumber = 2;
  inline ::google::protobuf::uint32 bless() const;
  inline void set_bless(::google::protobuf::uint32 value);

  // repeated .CfgTreasure.CostItem cost_items = 3;
  inline int cost_items_size() const;
  inline void clear_cost_items();
  static const int kCostItemsFieldNumber = 3;
  inline const ::CfgTreasure::CostItem& cost_items(int index) const;
  inline ::CfgTreasure::CostItem* mutable_cost_items(int index);
  inline ::CfgTreasure::CostItem* add_cost_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::CostItem >&
      cost_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::CostItem >*
      mutable_cost_items();

  // required uint32 cost_num = 4;
  inline bool has_cost_num() const;
  inline void clear_cost_num();
  static const int kCostNumFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_num() const;
  inline void set_cost_num(::google::protobuf::uint32 value);

  // required .CfgTreasure.Dans dans = 5;
  inline bool has_dans() const;
  inline void clear_dans();
  static const int kDansFieldNumber = 5;
  inline const ::CfgTreasure::Dans& dans() const;
  inline ::CfgTreasure::Dans* mutable_dans();
  inline ::CfgTreasure::Dans* release_dans();
  inline void set_allocated_dans(::CfgTreasure::Dans* dans);

  // required uint32 id = 6;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 6;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 star = 8;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 8;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 type = 9;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgTreasure.Treasure)
 private:
  inline void set_has_bless();
  inline void clear_has_bless();
  inline void set_has_cost_num();
  inline void clear_has_cost_num();
  inline void set_has_dans();
  inline void clear_has_dans();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::RepeatedPtrField< ::CfgTreasure::CostItem > cost_items_;
  ::google::protobuf::uint32 bless_;
  ::google::protobuf::uint32 cost_num_;
  ::CfgTreasure::Dans* dans_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure* default_instance_;
};
// -------------------------------------------------------------------

class Treasures : public ::google::protobuf::Message {
 public:
  Treasures();
  virtual ~Treasures();

  Treasures(const Treasures& from);

  inline Treasures& operator=(const Treasures& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasures& default_instance();

  void Swap(Treasures* other);

  // implements Message ----------------------------------------------

  Treasures* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasures& from);
  void MergeFrom(const Treasures& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgTreasure.Treasure treasures = 1;
  inline int treasures_size() const;
  inline void clear_treasures();
  static const int kTreasuresFieldNumber = 1;
  inline const ::CfgTreasure::Treasure& treasures(int index) const;
  inline ::CfgTreasure::Treasure* mutable_treasures(int index);
  inline ::CfgTreasure::Treasure* add_treasures();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Treasure >&
      treasures() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Treasure >*
      mutable_treasures();

  // @@protoc_insertion_point(class_scope:CfgTreasure.Treasures)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Treasure > treasures_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Treasures* default_instance_;
};
// -------------------------------------------------------------------

class Hunt : public ::google::protobuf::Message {
 public:
  Hunt();
  virtual ~Hunt();

  Hunt(const Hunt& from);

  inline Hunt& operator=(const Hunt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hunt& default_instance();

  void Swap(Hunt* other);

  // implements Message ----------------------------------------------

  Hunt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hunt& from);
  void MergeFrom(const Hunt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 career_level_min = 2;
  inline bool has_career_level_min() const;
  inline void clear_career_level_min();
  static const int kCareerLevelMinFieldNumber = 2;
  inline ::google::protobuf::uint32 career_level_min() const;
  inline void set_career_level_min(::google::protobuf::uint32 value);

  // required uint32 career_level_max = 3;
  inline bool has_career_level_max() const;
  inline void clear_career_level_max();
  static const int kCareerLevelMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 career_level_max() const;
  inline void set_career_level_max(::google::protobuf::uint32 value);

  // required uint32 item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required uint32 rate = 6;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 6;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required uint32 type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 must = 8;
  inline bool has_must() const;
  inline void clear_must();
  static const int kMustFieldNumber = 8;
  inline ::google::protobuf::uint32 must() const;
  inline void set_must(::google::protobuf::uint32 value);

  // required uint32 xiyou = 9;
  inline bool has_xiyou() const;
  inline void clear_xiyou();
  static const int kXiyouFieldNumber = 9;
  inline ::google::protobuf::uint32 xiyou() const;
  inline void set_xiyou(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgTreasure.Hunt)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_career_level_min();
  inline void clear_has_career_level_min();
  inline void set_has_career_level_max();
  inline void clear_has_career_level_max();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_must();
  inline void clear_has_must();
  inline void set_has_xiyou();
  inline void clear_has_xiyou();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 career_level_min_;
  ::google::protobuf::uint32 career_level_max_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 must_;
  ::google::protobuf::uint32 xiyou_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Hunt* default_instance_;
};
// -------------------------------------------------------------------

class Hunts : public ::google::protobuf::Message {
 public:
  Hunts();
  virtual ~Hunts();

  Hunts(const Hunts& from);

  inline Hunts& operator=(const Hunts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hunts& default_instance();

  void Swap(Hunts* other);

  // implements Message ----------------------------------------------

  Hunts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hunts& from);
  void MergeFrom(const Hunts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgTreasure.Hunt hunts = 1;
  inline int hunts_size() const;
  inline void clear_hunts();
  static const int kHuntsFieldNumber = 1;
  inline const ::CfgTreasure::Hunt& hunts(int index) const;
  inline ::CfgTreasure::Hunt* mutable_hunts(int index);
  inline ::CfgTreasure::Hunt* add_hunts();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Hunt >&
      hunts() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Hunt >*
      mutable_hunts();

  // @@protoc_insertion_point(class_scope:CfgTreasure.Hunts)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Hunt > hunts_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static Hunts* default_instance_;
};
// -------------------------------------------------------------------

class HuntBase : public ::google::protobuf::Message {
 public:
  HuntBase();
  virtual ~HuntBase();

  HuntBase(const HuntBase& from);

  inline HuntBase& operator=(const HuntBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HuntBase& default_instance();

  void Swap(HuntBase* other);

  // implements Message ----------------------------------------------

  HuntBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HuntBase& from);
  void MergeFrom(const HuntBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 fifty = 3;
  inline bool has_fifty() const;
  inline void clear_fifty();
  static const int kFiftyFieldNumber = 3;
  inline ::google::protobuf::uint32 fifty() const;
  inline void set_fifty(::google::protobuf::uint32 value);

  // required uint32 cost_item = 4;
  inline bool has_cost_item() const;
  inline void clear_cost_item();
  static const int kCostItemFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_item() const;
  inline void set_cost_item(::google::protobuf::uint32 value);

  // required uint32 cost_num = 5;
  inline bool has_cost_num() const;
  inline void clear_cost_num();
  static const int kCostNumFieldNumber = 5;
  inline ::google::protobuf::uint32 cost_num() const;
  inline void set_cost_num(::google::protobuf::uint32 value);

  // required uint32 day = 6;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 6;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 free_num = 7;
  inline bool has_free_num() const;
  inline void clear_free_num();
  static const int kFreeNumFieldNumber = 7;
  inline ::google::protobuf::uint32 free_num() const;
  inline void set_free_num(::google::protobuf::uint32 value);

  // required uint32 score_item = 8;
  inline bool has_score_item() const;
  inline void clear_score_item();
  static const int kScoreItemFieldNumber = 8;
  inline ::google::protobuf::uint32 score_item() const;
  inline void set_score_item(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgTreasure.HuntBase)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_fifty();
  inline void clear_has_fifty();
  inline void set_has_cost_item();
  inline void clear_has_cost_item();
  inline void set_has_cost_num();
  inline void clear_has_cost_num();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_free_num();
  inline void clear_has_free_num();
  inline void set_has_score_item();
  inline void clear_has_score_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 fifty_;
  ::google::protobuf::uint32 cost_item_;
  ::google::protobuf::uint32 cost_num_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 free_num_;
  ::google::protobuf::uint32 score_item_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static HuntBase* default_instance_;
};
// -------------------------------------------------------------------

class HuntBases : public ::google::protobuf::Message {
 public:
  HuntBases();
  virtual ~HuntBases();

  HuntBases(const HuntBases& from);

  inline HuntBases& operator=(const HuntBases& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HuntBases& default_instance();

  void Swap(HuntBases* other);

  // implements Message ----------------------------------------------

  HuntBases* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HuntBases& from);
  void MergeFrom(const HuntBases& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgTreasure.HuntBase bases = 1;
  inline int bases_size() const;
  inline void clear_bases();
  static const int kBasesFieldNumber = 1;
  inline const ::CfgTreasure::HuntBase& bases(int index) const;
  inline ::CfgTreasure::HuntBase* mutable_bases(int index);
  inline ::CfgTreasure::HuntBase* add_bases();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::HuntBase >&
      bases() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::HuntBase >*
      mutable_bases();

  // @@protoc_insertion_point(class_scope:CfgTreasure.HuntBases)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgTreasure::HuntBase > bases_;
  friend void  protobuf_AddDesc_CfgTreasure_2eproto();
  friend void protobuf_AssignDesc_CfgTreasure_2eproto();
  friend void protobuf_ShutdownFile_CfgTreasure_2eproto();

  void InitAsDefaultInstance();
  static HuntBases* default_instance_;
};
// ===================================================================


// ===================================================================

// Dan

// required uint32 item = 1;
inline bool Dan::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dan::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dan::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dan::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 Dan::item() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Dan.item)
  return item_;
}
inline void Dan::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Dan.item)
}

// required uint32 num = 2;
inline bool Dan::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dan::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dan::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dan::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Dan::num() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Dan.num)
  return num_;
}
inline void Dan::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Dan.num)
}

// -------------------------------------------------------------------

// Dans

// repeated .CfgTreasure.Dan dans = 1;
inline int Dans::dans_size() const {
  return dans_.size();
}
inline void Dans::clear_dans() {
  dans_.Clear();
}
inline const ::CfgTreasure::Dan& Dans::dans(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Dans.dans)
  return dans_.Get(index);
}
inline ::CfgTreasure::Dan* Dans::mutable_dans(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Dans.dans)
  return dans_.Mutable(index);
}
inline ::CfgTreasure::Dan* Dans::add_dans() {
  // @@protoc_insertion_point(field_add:CfgTreasure.Dans.dans)
  return dans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Dan >&
Dans::dans() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.Dans.dans)
  return dans_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Dan >*
Dans::mutable_dans() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.Dans.dans)
  return &dans_;
}

// -------------------------------------------------------------------

// CostItem

// repeated uint32 id = 1;
inline int CostItem::id_size() const {
  return id_.size();
}
inline void CostItem::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 CostItem::id(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.CostItem.id)
  return id_.Get(index);
}
inline void CostItem::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CfgTreasure.CostItem.id)
}
inline void CostItem::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:CfgTreasure.CostItem.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CostItem::id() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.CostItem.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CostItem::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.CostItem.id)
  return &id_;
}

// -------------------------------------------------------------------

// Treasure

// repeated .CfgCommon.Attribute attr = 1;
inline int Treasure::attr_size() const {
  return attr_.size();
}
inline void Treasure::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Treasure::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Treasure::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Treasure.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Treasure::add_attr() {
  // @@protoc_insertion_point(field_add:CfgTreasure.Treasure.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Treasure::attr() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.Treasure.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Treasure::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.Treasure.attr)
  return &attr_;
}

// required uint32 bless = 2;
inline bool Treasure::has_bless() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Treasure::set_has_bless() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Treasure::clear_has_bless() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Treasure::clear_bless() {
  bless_ = 0u;
  clear_has_bless();
}
inline ::google::protobuf::uint32 Treasure::bless() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.bless)
  return bless_;
}
inline void Treasure::set_bless(::google::protobuf::uint32 value) {
  set_has_bless();
  bless_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.bless)
}

// repeated .CfgTreasure.CostItem cost_items = 3;
inline int Treasure::cost_items_size() const {
  return cost_items_.size();
}
inline void Treasure::clear_cost_items() {
  cost_items_.Clear();
}
inline const ::CfgTreasure::CostItem& Treasure::cost_items(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.cost_items)
  return cost_items_.Get(index);
}
inline ::CfgTreasure::CostItem* Treasure::mutable_cost_items(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Treasure.cost_items)
  return cost_items_.Mutable(index);
}
inline ::CfgTreasure::CostItem* Treasure::add_cost_items() {
  // @@protoc_insertion_point(field_add:CfgTreasure.Treasure.cost_items)
  return cost_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::CostItem >&
Treasure::cost_items() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.Treasure.cost_items)
  return cost_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::CostItem >*
Treasure::mutable_cost_items() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.Treasure.cost_items)
  return &cost_items_;
}

// required uint32 cost_num = 4;
inline bool Treasure::has_cost_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Treasure::set_has_cost_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Treasure::clear_has_cost_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Treasure::clear_cost_num() {
  cost_num_ = 0u;
  clear_has_cost_num();
}
inline ::google::protobuf::uint32 Treasure::cost_num() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.cost_num)
  return cost_num_;
}
inline void Treasure::set_cost_num(::google::protobuf::uint32 value) {
  set_has_cost_num();
  cost_num_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.cost_num)
}

// required .CfgTreasure.Dans dans = 5;
inline bool Treasure::has_dans() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Treasure::set_has_dans() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Treasure::clear_has_dans() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Treasure::clear_dans() {
  if (dans_ != NULL) dans_->::CfgTreasure::Dans::Clear();
  clear_has_dans();
}
inline const ::CfgTreasure::Dans& Treasure::dans() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.dans)
  return dans_ != NULL ? *dans_ : *default_instance_->dans_;
}
inline ::CfgTreasure::Dans* Treasure::mutable_dans() {
  set_has_dans();
  if (dans_ == NULL) dans_ = new ::CfgTreasure::Dans;
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Treasure.dans)
  return dans_;
}
inline ::CfgTreasure::Dans* Treasure::release_dans() {
  clear_has_dans();
  ::CfgTreasure::Dans* temp = dans_;
  dans_ = NULL;
  return temp;
}
inline void Treasure::set_allocated_dans(::CfgTreasure::Dans* dans) {
  delete dans_;
  dans_ = dans;
  if (dans) {
    set_has_dans();
  } else {
    clear_has_dans();
  }
  // @@protoc_insertion_point(field_set_allocated:CfgTreasure.Treasure.dans)
}

// required uint32 id = 6;
inline bool Treasure::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Treasure::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Treasure::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Treasure::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Treasure::id() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.id)
  return id_;
}
inline void Treasure::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.id)
}

// required uint32 level = 7;
inline bool Treasure::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Treasure::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Treasure::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Treasure::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Treasure::level() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.level)
  return level_;
}
inline void Treasure::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.level)
}

// required uint32 star = 8;
inline bool Treasure::has_star() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Treasure::set_has_star() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Treasure::clear_has_star() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Treasure::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 Treasure::star() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.star)
  return star_;
}
inline void Treasure::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.star)
}

// required uint32 type = 9;
inline bool Treasure::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Treasure::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Treasure::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Treasure::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Treasure::type() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasure.type)
  return type_;
}
inline void Treasure::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Treasure.type)
}

// -------------------------------------------------------------------

// Treasures

// repeated .CfgTreasure.Treasure treasures = 1;
inline int Treasures::treasures_size() const {
  return treasures_.size();
}
inline void Treasures::clear_treasures() {
  treasures_.Clear();
}
inline const ::CfgTreasure::Treasure& Treasures::treasures(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Treasures.treasures)
  return treasures_.Get(index);
}
inline ::CfgTreasure::Treasure* Treasures::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Treasures.treasures)
  return treasures_.Mutable(index);
}
inline ::CfgTreasure::Treasure* Treasures::add_treasures() {
  // @@protoc_insertion_point(field_add:CfgTreasure.Treasures.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Treasure >&
Treasures::treasures() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.Treasures.treasures)
  return treasures_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Treasure >*
Treasures::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.Treasures.treasures)
  return &treasures_;
}

// -------------------------------------------------------------------

// Hunt

// required uint32 id = 1;
inline bool Hunt::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hunt::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hunt::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hunt::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Hunt::id() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.id)
  return id_;
}
inline void Hunt::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.id)
}

// required uint32 career_level_min = 2;
inline bool Hunt::has_career_level_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Hunt::set_has_career_level_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Hunt::clear_has_career_level_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Hunt::clear_career_level_min() {
  career_level_min_ = 0u;
  clear_has_career_level_min();
}
inline ::google::protobuf::uint32 Hunt::career_level_min() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.career_level_min)
  return career_level_min_;
}
inline void Hunt::set_career_level_min(::google::protobuf::uint32 value) {
  set_has_career_level_min();
  career_level_min_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.career_level_min)
}

// required uint32 career_level_max = 3;
inline bool Hunt::has_career_level_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Hunt::set_has_career_level_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Hunt::clear_has_career_level_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Hunt::clear_career_level_max() {
  career_level_max_ = 0u;
  clear_has_career_level_max();
}
inline ::google::protobuf::uint32 Hunt::career_level_max() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.career_level_max)
  return career_level_max_;
}
inline void Hunt::set_career_level_max(::google::protobuf::uint32 value) {
  set_has_career_level_max();
  career_level_max_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.career_level_max)
}

// required uint32 item = 4;
inline bool Hunt::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Hunt::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Hunt::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Hunt::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 Hunt::item() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.item)
  return item_;
}
inline void Hunt::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.item)
}

// required uint32 num = 5;
inline bool Hunt::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Hunt::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Hunt::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Hunt::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Hunt::num() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.num)
  return num_;
}
inline void Hunt::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.num)
}

// required uint32 rate = 6;
inline bool Hunt::has_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Hunt::set_has_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Hunt::clear_has_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Hunt::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 Hunt::rate() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.rate)
  return rate_;
}
inline void Hunt::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.rate)
}

// required uint32 type = 7;
inline bool Hunt::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Hunt::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Hunt::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Hunt::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Hunt::type() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.type)
  return type_;
}
inline void Hunt::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.type)
}

// required uint32 must = 8;
inline bool Hunt::has_must() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Hunt::set_has_must() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Hunt::clear_has_must() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Hunt::clear_must() {
  must_ = 0u;
  clear_has_must();
}
inline ::google::protobuf::uint32 Hunt::must() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.must)
  return must_;
}
inline void Hunt::set_must(::google::protobuf::uint32 value) {
  set_has_must();
  must_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.must)
}

// required uint32 xiyou = 9;
inline bool Hunt::has_xiyou() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Hunt::set_has_xiyou() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Hunt::clear_has_xiyou() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Hunt::clear_xiyou() {
  xiyou_ = 0u;
  clear_has_xiyou();
}
inline ::google::protobuf::uint32 Hunt::xiyou() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunt.xiyou)
  return xiyou_;
}
inline void Hunt::set_xiyou(::google::protobuf::uint32 value) {
  set_has_xiyou();
  xiyou_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.Hunt.xiyou)
}

// -------------------------------------------------------------------

// Hunts

// repeated .CfgTreasure.Hunt hunts = 1;
inline int Hunts::hunts_size() const {
  return hunts_.size();
}
inline void Hunts::clear_hunts() {
  hunts_.Clear();
}
inline const ::CfgTreasure::Hunt& Hunts::hunts(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.Hunts.hunts)
  return hunts_.Get(index);
}
inline ::CfgTreasure::Hunt* Hunts::mutable_hunts(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.Hunts.hunts)
  return hunts_.Mutable(index);
}
inline ::CfgTreasure::Hunt* Hunts::add_hunts() {
  // @@protoc_insertion_point(field_add:CfgTreasure.Hunts.hunts)
  return hunts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Hunt >&
Hunts::hunts() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.Hunts.hunts)
  return hunts_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::Hunt >*
Hunts::mutable_hunts() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.Hunts.hunts)
  return &hunts_;
}

// -------------------------------------------------------------------

// HuntBase

// required uint32 type = 1;
inline bool HuntBase::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HuntBase::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HuntBase::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HuntBase::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 HuntBase::type() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.type)
  return type_;
}
inline void HuntBase::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.type)
}

// required uint32 gold = 2;
inline bool HuntBase::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HuntBase::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HuntBase::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HuntBase::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 HuntBase::gold() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.gold)
  return gold_;
}
inline void HuntBase::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.gold)
}

// required uint32 fifty = 3;
inline bool HuntBase::has_fifty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HuntBase::set_has_fifty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HuntBase::clear_has_fifty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HuntBase::clear_fifty() {
  fifty_ = 0u;
  clear_has_fifty();
}
inline ::google::protobuf::uint32 HuntBase::fifty() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.fifty)
  return fifty_;
}
inline void HuntBase::set_fifty(::google::protobuf::uint32 value) {
  set_has_fifty();
  fifty_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.fifty)
}

// required uint32 cost_item = 4;
inline bool HuntBase::has_cost_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HuntBase::set_has_cost_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HuntBase::clear_has_cost_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HuntBase::clear_cost_item() {
  cost_item_ = 0u;
  clear_has_cost_item();
}
inline ::google::protobuf::uint32 HuntBase::cost_item() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.cost_item)
  return cost_item_;
}
inline void HuntBase::set_cost_item(::google::protobuf::uint32 value) {
  set_has_cost_item();
  cost_item_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.cost_item)
}

// required uint32 cost_num = 5;
inline bool HuntBase::has_cost_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HuntBase::set_has_cost_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HuntBase::clear_has_cost_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HuntBase::clear_cost_num() {
  cost_num_ = 0u;
  clear_has_cost_num();
}
inline ::google::protobuf::uint32 HuntBase::cost_num() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.cost_num)
  return cost_num_;
}
inline void HuntBase::set_cost_num(::google::protobuf::uint32 value) {
  set_has_cost_num();
  cost_num_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.cost_num)
}

// required uint32 day = 6;
inline bool HuntBase::has_day() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HuntBase::set_has_day() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HuntBase::clear_has_day() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HuntBase::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 HuntBase::day() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.day)
  return day_;
}
inline void HuntBase::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.day)
}

// required uint32 free_num = 7;
inline bool HuntBase::has_free_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HuntBase::set_has_free_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HuntBase::clear_has_free_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HuntBase::clear_free_num() {
  free_num_ = 0u;
  clear_has_free_num();
}
inline ::google::protobuf::uint32 HuntBase::free_num() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.free_num)
  return free_num_;
}
inline void HuntBase::set_free_num(::google::protobuf::uint32 value) {
  set_has_free_num();
  free_num_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.free_num)
}

// required uint32 score_item = 8;
inline bool HuntBase::has_score_item() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HuntBase::set_has_score_item() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HuntBase::clear_has_score_item() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HuntBase::clear_score_item() {
  score_item_ = 0u;
  clear_has_score_item();
}
inline ::google::protobuf::uint32 HuntBase::score_item() const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBase.score_item)
  return score_item_;
}
inline void HuntBase::set_score_item(::google::protobuf::uint32 value) {
  set_has_score_item();
  score_item_ = value;
  // @@protoc_insertion_point(field_set:CfgTreasure.HuntBase.score_item)
}

// -------------------------------------------------------------------

// HuntBases

// repeated .CfgTreasure.HuntBase bases = 1;
inline int HuntBases::bases_size() const {
  return bases_.size();
}
inline void HuntBases::clear_bases() {
  bases_.Clear();
}
inline const ::CfgTreasure::HuntBase& HuntBases::bases(int index) const {
  // @@protoc_insertion_point(field_get:CfgTreasure.HuntBases.bases)
  return bases_.Get(index);
}
inline ::CfgTreasure::HuntBase* HuntBases::mutable_bases(int index) {
  // @@protoc_insertion_point(field_mutable:CfgTreasure.HuntBases.bases)
  return bases_.Mutable(index);
}
inline ::CfgTreasure::HuntBase* HuntBases::add_bases() {
  // @@protoc_insertion_point(field_add:CfgTreasure.HuntBases.bases)
  return bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgTreasure::HuntBase >&
HuntBases::bases() const {
  // @@protoc_insertion_point(field_list:CfgTreasure.HuntBases.bases)
  return bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgTreasure::HuntBase >*
HuntBases::mutable_bases() {
  // @@protoc_insertion_point(field_mutable_list:CfgTreasure.HuntBases.bases)
  return &bases_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgTreasure

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgTreasure_2eproto__INCLUDED
