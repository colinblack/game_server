// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgBoss.proto

#ifndef PROTOBUF_CfgBoss_2eproto__INCLUDED
#define PROTOBUF_CfgBoss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgBoss {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgBoss_2eproto();
void protobuf_AssignDesc_CfgBoss_2eproto();
void protobuf_ShutdownFile_CfgBoss_2eproto();

class Boss;
class Bosses;

// ===================================================================

class Boss : public ::google::protobuf::Message {
 public:
  Boss();
  virtual ~Boss();

  Boss(const Boss& from);

  inline Boss& operator=(const Boss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Boss& default_instance();

  void Swap(Boss* other);

  // implements Message ----------------------------------------------

  Boss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Boss& from);
  void MergeFrom(const Boss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 reincarnLevel = 1;
  inline bool has_reincarnlevel() const;
  inline void clear_reincarnlevel();
  static const int kReincarnLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 reincarnlevel() const;
  inline void set_reincarnlevel(::google::protobuf::uint32 value);

  // required uint32 bossid = 2;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossidFieldNumber = 2;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);

  // required uint32 copyId = 3;
  inline bool has_copyid() const;
  inline void clear_copyid();
  static const int kCopyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 copyid() const;
  inline void set_copyid(::google::protobuf::uint32 value);

  // required uint32 useType = 4;
  inline bool has_usetype() const;
  inline void clear_usetype();
  static const int kUseTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 usetype() const;
  inline void set_usetype(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward reward = 5;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::CfgCommon::Reward& reward(int index) const;
  inline ::CfgCommon::Reward* mutable_reward(int index);
  inline ::CfgCommon::Reward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:CfgBoss.Boss)
 private:
  inline void set_has_reincarnlevel();
  inline void clear_has_reincarnlevel();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_copyid();
  inline void clear_has_copyid();
  inline void set_has_usetype();
  inline void clear_has_usetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 reincarnlevel_;
  ::google::protobuf::uint32 bossid_;
  ::google::protobuf::uint32 copyid_;
  ::google::protobuf::uint32 usetype_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > reward_;
  friend void  protobuf_AddDesc_CfgBoss_2eproto();
  friend void protobuf_AssignDesc_CfgBoss_2eproto();
  friend void protobuf_ShutdownFile_CfgBoss_2eproto();

  void InitAsDefaultInstance();
  static Boss* default_instance_;
};
// -------------------------------------------------------------------

class Bosses : public ::google::protobuf::Message {
 public:
  Bosses();
  virtual ~Bosses();

  Bosses(const Bosses& from);

  inline Bosses& operator=(const Bosses& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bosses& default_instance();

  void Swap(Bosses* other);

  // implements Message ----------------------------------------------

  Bosses* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bosses& from);
  void MergeFrom(const Bosses& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgBoss.Boss boss = 1;
  inline int boss_size() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 1;
  inline const ::CfgBoss::Boss& boss(int index) const;
  inline ::CfgBoss::Boss* mutable_boss(int index);
  inline ::CfgBoss::Boss* add_boss();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgBoss::Boss >&
      boss() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgBoss::Boss >*
      mutable_boss();

  // @@protoc_insertion_point(class_scope:CfgBoss.Bosses)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgBoss::Boss > boss_;
  friend void  protobuf_AddDesc_CfgBoss_2eproto();
  friend void protobuf_AssignDesc_CfgBoss_2eproto();
  friend void protobuf_ShutdownFile_CfgBoss_2eproto();

  void InitAsDefaultInstance();
  static Bosses* default_instance_;
};
// ===================================================================


// ===================================================================

// Boss

// required uint32 reincarnLevel = 1;
inline bool Boss::has_reincarnlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Boss::set_has_reincarnlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Boss::clear_has_reincarnlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Boss::clear_reincarnlevel() {
  reincarnlevel_ = 0u;
  clear_has_reincarnlevel();
}
inline ::google::protobuf::uint32 Boss::reincarnlevel() const {
  // @@protoc_insertion_point(field_get:CfgBoss.Boss.reincarnLevel)
  return reincarnlevel_;
}
inline void Boss::set_reincarnlevel(::google::protobuf::uint32 value) {
  set_has_reincarnlevel();
  reincarnlevel_ = value;
  // @@protoc_insertion_point(field_set:CfgBoss.Boss.reincarnLevel)
}

// required uint32 bossid = 2;
inline bool Boss::has_bossid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Boss::set_has_bossid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Boss::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Boss::clear_bossid() {
  bossid_ = 0u;
  clear_has_bossid();
}
inline ::google::protobuf::uint32 Boss::bossid() const {
  // @@protoc_insertion_point(field_get:CfgBoss.Boss.bossid)
  return bossid_;
}
inline void Boss::set_bossid(::google::protobuf::uint32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:CfgBoss.Boss.bossid)
}

// required uint32 copyId = 3;
inline bool Boss::has_copyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Boss::set_has_copyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Boss::clear_has_copyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Boss::clear_copyid() {
  copyid_ = 0u;
  clear_has_copyid();
}
inline ::google::protobuf::uint32 Boss::copyid() const {
  // @@protoc_insertion_point(field_get:CfgBoss.Boss.copyId)
  return copyid_;
}
inline void Boss::set_copyid(::google::protobuf::uint32 value) {
  set_has_copyid();
  copyid_ = value;
  // @@protoc_insertion_point(field_set:CfgBoss.Boss.copyId)
}

// required uint32 useType = 4;
inline bool Boss::has_usetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Boss::set_has_usetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Boss::clear_has_usetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Boss::clear_usetype() {
  usetype_ = 0u;
  clear_has_usetype();
}
inline ::google::protobuf::uint32 Boss::usetype() const {
  // @@protoc_insertion_point(field_get:CfgBoss.Boss.useType)
  return usetype_;
}
inline void Boss::set_usetype(::google::protobuf::uint32 value) {
  set_has_usetype();
  usetype_ = value;
  // @@protoc_insertion_point(field_set:CfgBoss.Boss.useType)
}

// repeated .CfgCommon.Reward reward = 5;
inline int Boss::reward_size() const {
  return reward_.size();
}
inline void Boss::clear_reward() {
  reward_.Clear();
}
inline const ::CfgCommon::Reward& Boss::reward(int index) const {
  // @@protoc_insertion_point(field_get:CfgBoss.Boss.reward)
  return reward_.Get(index);
}
inline ::CfgCommon::Reward* Boss::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgBoss.Boss.reward)
  return reward_.Mutable(index);
}
inline ::CfgCommon::Reward* Boss::add_reward() {
  // @@protoc_insertion_point(field_add:CfgBoss.Boss.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Boss::reward() const {
  // @@protoc_insertion_point(field_list:CfgBoss.Boss.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Boss::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:CfgBoss.Boss.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// Bosses

// repeated .CfgBoss.Boss boss = 1;
inline int Bosses::boss_size() const {
  return boss_.size();
}
inline void Bosses::clear_boss() {
  boss_.Clear();
}
inline const ::CfgBoss::Boss& Bosses::boss(int index) const {
  // @@protoc_insertion_point(field_get:CfgBoss.Bosses.boss)
  return boss_.Get(index);
}
inline ::CfgBoss::Boss* Bosses::mutable_boss(int index) {
  // @@protoc_insertion_point(field_mutable:CfgBoss.Bosses.boss)
  return boss_.Mutable(index);
}
inline ::CfgBoss::Boss* Bosses::add_boss() {
  // @@protoc_insertion_point(field_add:CfgBoss.Bosses.boss)
  return boss_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgBoss::Boss >&
Bosses::boss() const {
  // @@protoc_insertion_point(field_list:CfgBoss.Bosses.boss)
  return boss_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgBoss::Boss >*
Bosses::mutable_boss() {
  // @@protoc_insertion_point(field_mutable_list:CfgBoss.Bosses.boss)
  return &boss_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgBoss

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgBoss_2eproto__INCLUDED
