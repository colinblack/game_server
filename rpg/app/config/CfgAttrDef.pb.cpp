// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgAttrDef.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgAttrDef.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgAttrDef {

namespace {

const ::google::protobuf::Descriptor* AttrDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttrDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttrDefs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttrDefs_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgAttrDef_2eproto() {
  protobuf_AddDesc_CfgAttrDef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgAttrDef.proto");
  GOOGLE_CHECK(file != NULL);
  AttrDef_descriptor_ = file->message_type(0);
  static const int AttrDef_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDef, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDef, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDef, percent_),
  };
  AttrDef_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttrDef_descriptor_,
      AttrDef::default_instance_,
      AttrDef_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDef, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDef, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttrDef));
  AttrDefs_descriptor_ = file->message_type(1);
  static const int AttrDefs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDefs, attr_defs_),
  };
  AttrDefs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttrDefs_descriptor_,
      AttrDefs::default_instance_,
      AttrDefs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDefs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrDefs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttrDefs));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgAttrDef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttrDef_descriptor_, &AttrDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttrDefs_descriptor_, &AttrDefs::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgAttrDef_2eproto() {
  delete AttrDef::default_instance_;
  delete AttrDef_reflection_;
  delete AttrDefs::default_instance_;
  delete AttrDefs_reflection_;
}

void protobuf_AddDesc_CfgAttrDef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020CfgAttrDef.proto\022\nCfgAttrDef\"7\n\007AttrDe"
    "f\022\r\n\005group\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\017\n\007percen"
    "t\030\003 \002(\010\"2\n\010AttrDefs\022&\n\tattr_defs\030\001 \003(\0132\023"
    ".CfgAttrDef.AttrDef", 139);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgAttrDef.proto", &protobuf_RegisterTypes);
  AttrDef::default_instance_ = new AttrDef();
  AttrDefs::default_instance_ = new AttrDefs();
  AttrDef::default_instance_->InitAsDefaultInstance();
  AttrDefs::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgAttrDef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgAttrDef_2eproto {
  StaticDescriptorInitializer_CfgAttrDef_2eproto() {
    protobuf_AddDesc_CfgAttrDef_2eproto();
  }
} static_descriptor_initializer_CfgAttrDef_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AttrDef::kGroupFieldNumber;
const int AttrDef::kTypeFieldNumber;
const int AttrDef::kPercentFieldNumber;
#endif  // !_MSC_VER

AttrDef::AttrDef()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgAttrDef.AttrDef)
}

void AttrDef::InitAsDefaultInstance() {
}

AttrDef::AttrDef(const AttrDef& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgAttrDef.AttrDef)
}

void AttrDef::SharedCtor() {
  _cached_size_ = 0;
  group_ = 0u;
  type_ = 0u;
  percent_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttrDef::~AttrDef() {
  // @@protoc_insertion_point(destructor:CfgAttrDef.AttrDef)
  SharedDtor();
}

void AttrDef::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AttrDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttrDef_descriptor_;
}

const AttrDef& AttrDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgAttrDef_2eproto();
  return *default_instance_;
}

AttrDef* AttrDef::default_instance_ = NULL;

AttrDef* AttrDef::New() const {
  return new AttrDef;
}

void AttrDef::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AttrDef*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(group_, percent_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttrDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgAttrDef.AttrDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_percent;
        break;
      }

      // required bool percent = 3;
      case 3: {
        if (tag == 24) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &percent_)));
          set_has_percent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgAttrDef.AttrDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgAttrDef.AttrDef)
  return false;
#undef DO_
}

void AttrDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgAttrDef.AttrDef)
  // required uint32 group = 1;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required bool percent = 3;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->percent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgAttrDef.AttrDef)
}

::google::protobuf::uint8* AttrDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgAttrDef.AttrDef)
  // required uint32 group = 1;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required bool percent = 3;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->percent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgAttrDef.AttrDef)
  return target;
}

int AttrDef::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 group = 1;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required bool percent = 3;
    if (has_percent()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrDef::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttrDef* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttrDef*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttrDef::MergeFrom(const AttrDef& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_percent()) {
      set_percent(from.percent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttrDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrDef::CopyFrom(const AttrDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttrDef::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AttrDef::Swap(AttrDef* other) {
  if (other != this) {
    std::swap(group_, other->group_);
    std::swap(type_, other->type_);
    std::swap(percent_, other->percent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttrDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttrDef_descriptor_;
  metadata.reflection = AttrDef_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AttrDefs::kAttrDefsFieldNumber;
#endif  // !_MSC_VER

AttrDefs::AttrDefs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgAttrDef.AttrDefs)
}

void AttrDefs::InitAsDefaultInstance() {
}

AttrDefs::AttrDefs(const AttrDefs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgAttrDef.AttrDefs)
}

void AttrDefs::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttrDefs::~AttrDefs() {
  // @@protoc_insertion_point(destructor:CfgAttrDef.AttrDefs)
  SharedDtor();
}

void AttrDefs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AttrDefs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrDefs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttrDefs_descriptor_;
}

const AttrDefs& AttrDefs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgAttrDef_2eproto();
  return *default_instance_;
}

AttrDefs* AttrDefs::default_instance_ = NULL;

AttrDefs* AttrDefs::New() const {
  return new AttrDefs;
}

void AttrDefs::Clear() {
  attr_defs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttrDefs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgAttrDef.AttrDefs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgAttrDef.AttrDef attr_defs = 1;
      case 1: {
        if (tag == 10) {
         parse_attr_defs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr_defs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_attr_defs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgAttrDef.AttrDefs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgAttrDef.AttrDefs)
  return false;
#undef DO_
}

void AttrDefs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgAttrDef.AttrDefs)
  // repeated .CfgAttrDef.AttrDef attr_defs = 1;
  for (int i = 0; i < this->attr_defs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attr_defs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgAttrDef.AttrDefs)
}

::google::protobuf::uint8* AttrDefs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgAttrDef.AttrDefs)
  // repeated .CfgAttrDef.AttrDef attr_defs = 1;
  for (int i = 0; i < this->attr_defs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attr_defs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgAttrDef.AttrDefs)
  return target;
}

int AttrDefs::ByteSize() const {
  int total_size = 0;

  // repeated .CfgAttrDef.AttrDef attr_defs = 1;
  total_size += 1 * this->attr_defs_size();
  for (int i = 0; i < this->attr_defs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr_defs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrDefs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttrDefs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttrDefs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttrDefs::MergeFrom(const AttrDefs& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_defs_.MergeFrom(from.attr_defs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttrDefs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrDefs::CopyFrom(const AttrDefs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttrDefs::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->attr_defs())) return false;
  return true;
}

void AttrDefs::Swap(AttrDefs* other) {
  if (other != this) {
    attr_defs_.Swap(&other->attr_defs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttrDefs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttrDefs_descriptor_;
  metadata.reflection = AttrDefs_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgAttrDef

// @@protoc_insertion_point(global_scope)
