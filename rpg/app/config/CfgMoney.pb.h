// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgMoney.proto

#ifndef PROTOBUF_CfgMoney_2eproto__INCLUDED
#define PROTOBUF_CfgMoney_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CfgMoney {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgMoney_2eproto();
void protobuf_AssignDesc_CfgMoney_2eproto();
void protobuf_ShutdownFile_CfgMoney_2eproto();

class ItemMoney;
class ItemMoneys;

// ===================================================================

class ItemMoney : public ::google::protobuf::Message {
 public:
  ItemMoney();
  virtual ~ItemMoney();

  ItemMoney(const ItemMoney& from);

  inline ItemMoney& operator=(const ItemMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemMoney& default_instance();

  void Swap(ItemMoney* other);

  // implements Message ----------------------------------------------

  ItemMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemMoney& from);
  void MergeFrom(const ItemMoney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgMoney.ItemMoney)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_CfgMoney_2eproto();
  friend void protobuf_AssignDesc_CfgMoney_2eproto();
  friend void protobuf_ShutdownFile_CfgMoney_2eproto();

  void InitAsDefaultInstance();
  static ItemMoney* default_instance_;
};
// -------------------------------------------------------------------

class ItemMoneys : public ::google::protobuf::Message {
 public:
  ItemMoneys();
  virtual ~ItemMoneys();

  ItemMoneys(const ItemMoneys& from);

  inline ItemMoneys& operator=(const ItemMoneys& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemMoneys& default_instance();

  void Swap(ItemMoneys* other);

  // implements Message ----------------------------------------------

  ItemMoneys* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemMoneys& from);
  void MergeFrom(const ItemMoneys& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgMoney.ItemMoney item_money = 1;
  inline int item_money_size() const;
  inline void clear_item_money();
  static const int kItemMoneyFieldNumber = 1;
  inline const ::CfgMoney::ItemMoney& item_money(int index) const;
  inline ::CfgMoney::ItemMoney* mutable_item_money(int index);
  inline ::CfgMoney::ItemMoney* add_item_money();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgMoney::ItemMoney >&
      item_money() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgMoney::ItemMoney >*
      mutable_item_money();

  // @@protoc_insertion_point(class_scope:CfgMoney.ItemMoneys)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgMoney::ItemMoney > item_money_;
  friend void  protobuf_AddDesc_CfgMoney_2eproto();
  friend void protobuf_AssignDesc_CfgMoney_2eproto();
  friend void protobuf_ShutdownFile_CfgMoney_2eproto();

  void InitAsDefaultInstance();
  static ItemMoneys* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemMoney

// required uint32 id = 1;
inline bool ItemMoney::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemMoney::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemMoney::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemMoney::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ItemMoney::id() const {
  // @@protoc_insertion_point(field_get:CfgMoney.ItemMoney.id)
  return id_;
}
inline void ItemMoney::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgMoney.ItemMoney.id)
}

// required uint32 limit = 2;
inline bool ItemMoney::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemMoney::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemMoney::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemMoney::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 ItemMoney::limit() const {
  // @@protoc_insertion_point(field_get:CfgMoney.ItemMoney.limit)
  return limit_;
}
inline void ItemMoney::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:CfgMoney.ItemMoney.limit)
}

// -------------------------------------------------------------------

// ItemMoneys

// repeated .CfgMoney.ItemMoney item_money = 1;
inline int ItemMoneys::item_money_size() const {
  return item_money_.size();
}
inline void ItemMoneys::clear_item_money() {
  item_money_.Clear();
}
inline const ::CfgMoney::ItemMoney& ItemMoneys::item_money(int index) const {
  // @@protoc_insertion_point(field_get:CfgMoney.ItemMoneys.item_money)
  return item_money_.Get(index);
}
inline ::CfgMoney::ItemMoney* ItemMoneys::mutable_item_money(int index) {
  // @@protoc_insertion_point(field_mutable:CfgMoney.ItemMoneys.item_money)
  return item_money_.Mutable(index);
}
inline ::CfgMoney::ItemMoney* ItemMoneys::add_item_money() {
  // @@protoc_insertion_point(field_add:CfgMoney.ItemMoneys.item_money)
  return item_money_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgMoney::ItemMoney >&
ItemMoneys::item_money() const {
  // @@protoc_insertion_point(field_list:CfgMoney.ItemMoneys.item_money)
  return item_money_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgMoney::ItemMoney >*
ItemMoneys::mutable_item_money() {
  // @@protoc_insertion_point(field_mutable_list:CfgMoney.ItemMoneys.item_money)
  return &item_money_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgMoney

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgMoney_2eproto__INCLUDED
