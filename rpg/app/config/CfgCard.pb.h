// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgCard.proto

#ifndef PROTOBUF_CfgCard_2eproto__INCLUDED
#define PROTOBUF_CfgCard_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgCard {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgCard_2eproto();
void protobuf_AssignDesc_CfgCard_2eproto();
void protobuf_ShutdownFile_CfgCard_2eproto();

class Card;
class Cards;
class CardGroup;
class CardGroups;
class Suit;
class Suits;
class Star;
class Stars;

// ===================================================================

class Card : public ::google::protobuf::Message {
 public:
  Card();
  virtual ~Card();

  Card(const Card& from);

  inline Card& operator=(const Card& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Card& default_instance();

  void Swap(Card* other);

  // implements Message ----------------------------------------------

  Card* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Card& from);
  void MergeFrom(const Card& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 skill = 2;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 2;
  inline ::google::protobuf::uint32 skill() const;
  inline void set_skill(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 3;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // repeated .CfgCommon.Attribute exAttr = 4;
  inline int exattr_size() const;
  inline void clear_exattr();
  static const int kExAttrFieldNumber = 4;
  inline const ::CfgCommon::Attribute& exattr(int index) const;
  inline ::CfgCommon::Attribute* mutable_exattr(int index);
  inline ::CfgCommon::Attribute* add_exattr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      exattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_exattr();

  // @@protoc_insertion_point(class_scope:CfgCard.Card)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_skill();
  inline void clear_has_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 skill_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > exattr_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Card* default_instance_;
};
// -------------------------------------------------------------------

class Cards : public ::google::protobuf::Message {
 public:
  Cards();
  virtual ~Cards();

  Cards(const Cards& from);

  inline Cards& operator=(const Cards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cards& default_instance();

  void Swap(Cards* other);

  // implements Message ----------------------------------------------

  Cards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cards& from);
  void MergeFrom(const Cards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCard.Card cards = 1;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 1;
  inline const ::CfgCard::Card& cards(int index) const;
  inline ::CfgCard::Card* mutable_cards(int index);
  inline ::CfgCard::Card* add_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Card >&
      cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Card >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:CfgCard.Cards)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCard::Card > cards_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Cards* default_instance_;
};
// -------------------------------------------------------------------

class CardGroup : public ::google::protobuf::Message {
 public:
  CardGroup();
  virtual ~CardGroup();

  CardGroup(const CardGroup& from);

  inline CardGroup& operator=(const CardGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardGroup& default_instance();

  void Swap(CardGroup* other);

  // implements Message ----------------------------------------------

  CardGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardGroup& from);
  void MergeFrom(const CardGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 groupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 needNum = 3;
  inline bool has_neednum() const;
  inline void clear_neednum();
  static const int kNeedNumFieldNumber = 3;
  inline ::google::protobuf::uint32 neednum() const;
  inline void set_neednum(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 4;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 4;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgCard.CardGroup)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_neednum();
  inline void clear_has_neednum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 neednum_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static CardGroup* default_instance_;
};
// -------------------------------------------------------------------

class CardGroups : public ::google::protobuf::Message {
 public:
  CardGroups();
  virtual ~CardGroups();

  CardGroups(const CardGroups& from);

  inline CardGroups& operator=(const CardGroups& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardGroups& default_instance();

  void Swap(CardGroups* other);

  // implements Message ----------------------------------------------

  CardGroups* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardGroups& from);
  void MergeFrom(const CardGroups& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCard.CardGroup groups = 1;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 1;
  inline const ::CfgCard::CardGroup& groups(int index) const;
  inline ::CfgCard::CardGroup* mutable_groups(int index);
  inline ::CfgCard::CardGroup* add_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::CardGroup >&
      groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCard::CardGroup >*
      mutable_groups();

  // @@protoc_insertion_point(class_scope:CfgCard.CardGroups)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCard::CardGroup > groups_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static CardGroups* default_instance_;
};
// -------------------------------------------------------------------

class Suit : public ::google::protobuf::Message {
 public:
  Suit();
  virtual ~Suit();

  Suit(const Suit& from);

  inline Suit& operator=(const Suit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Suit& default_instance();

  void Swap(Suit* other);

  // implements Message ----------------------------------------------

  Suit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Suit& from);
  void MergeFrom(const Suit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 include = 2;
  inline int include_size() const;
  inline void clear_include();
  static const int kIncludeFieldNumber = 2;
  inline ::google::protobuf::uint32 include(int index) const;
  inline void set_include(int index, ::google::protobuf::uint32 value);
  inline void add_include(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      include() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_include();

  // @@protoc_insertion_point(class_scope:CfgCard.Suit)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > include_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Suit* default_instance_;
};
// -------------------------------------------------------------------

class Suits : public ::google::protobuf::Message {
 public:
  Suits();
  virtual ~Suits();

  Suits(const Suits& from);

  inline Suits& operator=(const Suits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Suits& default_instance();

  void Swap(Suits* other);

  // implements Message ----------------------------------------------

  Suits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Suits& from);
  void MergeFrom(const Suits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCard.Suit suits = 1;
  inline int suits_size() const;
  inline void clear_suits();
  static const int kSuitsFieldNumber = 1;
  inline const ::CfgCard::Suit& suits(int index) const;
  inline ::CfgCard::Suit* mutable_suits(int index);
  inline ::CfgCard::Suit* add_suits();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Suit >&
      suits() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Suit >*
      mutable_suits();

  // @@protoc_insertion_point(class_scope:CfgCard.Suits)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCard::Suit > suits_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Suits* default_instance_;
};
// -------------------------------------------------------------------

class Star : public ::google::protobuf::Message {
 public:
  Star();
  virtual ~Star();

  Star(const Star& from);

  inline Star& operator=(const Star& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Star& default_instance();

  void Swap(Star* other);

  // implements Message ----------------------------------------------

  Star* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Star& from);
  void MergeFrom(const Star& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCommon.Attribute attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // required uint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 color = 3;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 3;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgCard.Star)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Star* default_instance_;
};
// -------------------------------------------------------------------

class Stars : public ::google::protobuf::Message {
 public:
  Stars();
  virtual ~Stars();

  Stars(const Stars& from);

  inline Stars& operator=(const Stars& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stars& default_instance();

  void Swap(Stars* other);

  // implements Message ----------------------------------------------

  Stars* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stars& from);
  void MergeFrom(const Stars& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgCard.Star star = 1;
  inline int star_size() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline const ::CfgCard::Star& star(int index) const;
  inline ::CfgCard::Star* mutable_star(int index);
  inline ::CfgCard::Star* add_star();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Star >&
      star() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Star >*
      mutable_star();

  // @@protoc_insertion_point(class_scope:CfgCard.Stars)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCard::Star > star_;
  friend void  protobuf_AddDesc_CfgCard_2eproto();
  friend void protobuf_AssignDesc_CfgCard_2eproto();
  friend void protobuf_ShutdownFile_CfgCard_2eproto();

  void InitAsDefaultInstance();
  static Stars* default_instance_;
};
// ===================================================================


// ===================================================================

// Card

// required uint32 id = 1;
inline bool Card::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Card::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Card::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Card::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Card::id() const {
  // @@protoc_insertion_point(field_get:CfgCard.Card.id)
  return id_;
}
inline void Card::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Card.id)
}

// required uint32 skill = 2;
inline bool Card::has_skill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Card::set_has_skill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Card::clear_has_skill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Card::clear_skill() {
  skill_ = 0u;
  clear_has_skill();
}
inline ::google::protobuf::uint32 Card::skill() const {
  // @@protoc_insertion_point(field_get:CfgCard.Card.skill)
  return skill_;
}
inline void Card::set_skill(::google::protobuf::uint32 value) {
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Card.skill)
}

// repeated .CfgCommon.Attribute attr = 3;
inline int Card::attr_size() const {
  return attr_.size();
}
inline void Card::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Card::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Card.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Card::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Card.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Card::add_attr() {
  // @@protoc_insertion_point(field_add:CfgCard.Card.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Card::attr() const {
  // @@protoc_insertion_point(field_list:CfgCard.Card.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Card::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Card.attr)
  return &attr_;
}

// repeated .CfgCommon.Attribute exAttr = 4;
inline int Card::exattr_size() const {
  return exattr_.size();
}
inline void Card::clear_exattr() {
  exattr_.Clear();
}
inline const ::CfgCommon::Attribute& Card::exattr(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Card.exAttr)
  return exattr_.Get(index);
}
inline ::CfgCommon::Attribute* Card::mutable_exattr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Card.exAttr)
  return exattr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Card::add_exattr() {
  // @@protoc_insertion_point(field_add:CfgCard.Card.exAttr)
  return exattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Card::exattr() const {
  // @@protoc_insertion_point(field_list:CfgCard.Card.exAttr)
  return exattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Card::mutable_exattr() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Card.exAttr)
  return &exattr_;
}

// -------------------------------------------------------------------

// Cards

// repeated .CfgCard.Card cards = 1;
inline int Cards::cards_size() const {
  return cards_.size();
}
inline void Cards::clear_cards() {
  cards_.Clear();
}
inline const ::CfgCard::Card& Cards::cards(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Cards.cards)
  return cards_.Get(index);
}
inline ::CfgCard::Card* Cards::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Cards.cards)
  return cards_.Mutable(index);
}
inline ::CfgCard::Card* Cards::add_cards() {
  // @@protoc_insertion_point(field_add:CfgCard.Cards.cards)
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Card >&
Cards::cards() const {
  // @@protoc_insertion_point(field_list:CfgCard.Cards.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Card >*
Cards::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Cards.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// CardGroup

// required uint32 groupId = 1;
inline bool CardGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardGroup::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 CardGroup::groupid() const {
  // @@protoc_insertion_point(field_get:CfgCard.CardGroup.groupId)
  return groupid_;
}
inline void CardGroup::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.CardGroup.groupId)
}

// required uint32 type = 2;
inline bool CardGroup::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardGroup::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardGroup::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardGroup::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CardGroup::type() const {
  // @@protoc_insertion_point(field_get:CfgCard.CardGroup.type)
  return type_;
}
inline void CardGroup::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.CardGroup.type)
}

// required uint32 needNum = 3;
inline bool CardGroup::has_neednum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardGroup::set_has_neednum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardGroup::clear_has_neednum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardGroup::clear_neednum() {
  neednum_ = 0u;
  clear_has_neednum();
}
inline ::google::protobuf::uint32 CardGroup::neednum() const {
  // @@protoc_insertion_point(field_get:CfgCard.CardGroup.needNum)
  return neednum_;
}
inline void CardGroup::set_neednum(::google::protobuf::uint32 value) {
  set_has_neednum();
  neednum_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.CardGroup.needNum)
}

// repeated .CfgCommon.Attribute attr = 4;
inline int CardGroup::attr_size() const {
  return attr_.size();
}
inline void CardGroup::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& CardGroup::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.CardGroup.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* CardGroup::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.CardGroup.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* CardGroup::add_attr() {
  // @@protoc_insertion_point(field_add:CfgCard.CardGroup.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
CardGroup::attr() const {
  // @@protoc_insertion_point(field_list:CfgCard.CardGroup.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
CardGroup::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.CardGroup.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// CardGroups

// repeated .CfgCard.CardGroup groups = 1;
inline int CardGroups::groups_size() const {
  return groups_.size();
}
inline void CardGroups::clear_groups() {
  groups_.Clear();
}
inline const ::CfgCard::CardGroup& CardGroups::groups(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.CardGroups.groups)
  return groups_.Get(index);
}
inline ::CfgCard::CardGroup* CardGroups::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.CardGroups.groups)
  return groups_.Mutable(index);
}
inline ::CfgCard::CardGroup* CardGroups::add_groups() {
  // @@protoc_insertion_point(field_add:CfgCard.CardGroups.groups)
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::CardGroup >&
CardGroups::groups() const {
  // @@protoc_insertion_point(field_list:CfgCard.CardGroups.groups)
  return groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCard::CardGroup >*
CardGroups::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.CardGroups.groups)
  return &groups_;
}

// -------------------------------------------------------------------

// Suit

// required uint32 id = 1;
inline bool Suit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Suit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Suit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Suit::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Suit::id() const {
  // @@protoc_insertion_point(field_get:CfgCard.Suit.id)
  return id_;
}
inline void Suit::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Suit.id)
}

// repeated uint32 include = 2;
inline int Suit::include_size() const {
  return include_.size();
}
inline void Suit::clear_include() {
  include_.Clear();
}
inline ::google::protobuf::uint32 Suit::include(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Suit.include)
  return include_.Get(index);
}
inline void Suit::set_include(int index, ::google::protobuf::uint32 value) {
  include_.Set(index, value);
  // @@protoc_insertion_point(field_set:CfgCard.Suit.include)
}
inline void Suit::add_include(::google::protobuf::uint32 value) {
  include_.Add(value);
  // @@protoc_insertion_point(field_add:CfgCard.Suit.include)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Suit::include() const {
  // @@protoc_insertion_point(field_list:CfgCard.Suit.include)
  return include_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Suit::mutable_include() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Suit.include)
  return &include_;
}

// -------------------------------------------------------------------

// Suits

// repeated .CfgCard.Suit suits = 1;
inline int Suits::suits_size() const {
  return suits_.size();
}
inline void Suits::clear_suits() {
  suits_.Clear();
}
inline const ::CfgCard::Suit& Suits::suits(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Suits.suits)
  return suits_.Get(index);
}
inline ::CfgCard::Suit* Suits::mutable_suits(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Suits.suits)
  return suits_.Mutable(index);
}
inline ::CfgCard::Suit* Suits::add_suits() {
  // @@protoc_insertion_point(field_add:CfgCard.Suits.suits)
  return suits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Suit >&
Suits::suits() const {
  // @@protoc_insertion_point(field_list:CfgCard.Suits.suits)
  return suits_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Suit >*
Suits::mutable_suits() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Suits.suits)
  return &suits_;
}

// -------------------------------------------------------------------

// Star

// repeated .CfgCommon.Attribute attr = 1;
inline int Star::attr_size() const {
  return attr_.size();
}
inline void Star::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Star::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Star.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Star::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Star.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Star::add_attr() {
  // @@protoc_insertion_point(field_add:CfgCard.Star.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Star::attr() const {
  // @@protoc_insertion_point(field_list:CfgCard.Star.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Star::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Star.attr)
  return &attr_;
}

// required uint32 exp = 2;
inline bool Star::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Star::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Star::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Star::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 Star::exp() const {
  // @@protoc_insertion_point(field_get:CfgCard.Star.exp)
  return exp_;
}
inline void Star::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Star.exp)
}

// required uint32 color = 3;
inline bool Star::has_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Star::set_has_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Star::clear_has_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Star::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 Star::color() const {
  // @@protoc_insertion_point(field_get:CfgCard.Star.color)
  return color_;
}
inline void Star::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Star.color)
}

// required uint32 level = 4;
inline bool Star::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Star::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Star::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Star::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Star::level() const {
  // @@protoc_insertion_point(field_get:CfgCard.Star.level)
  return level_;
}
inline void Star::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgCard.Star.level)
}

// -------------------------------------------------------------------

// Stars

// repeated .CfgCard.Star star = 1;
inline int Stars::star_size() const {
  return star_.size();
}
inline void Stars::clear_star() {
  star_.Clear();
}
inline const ::CfgCard::Star& Stars::star(int index) const {
  // @@protoc_insertion_point(field_get:CfgCard.Stars.star)
  return star_.Get(index);
}
inline ::CfgCard::Star* Stars::mutable_star(int index) {
  // @@protoc_insertion_point(field_mutable:CfgCard.Stars.star)
  return star_.Mutable(index);
}
inline ::CfgCard::Star* Stars::add_star() {
  // @@protoc_insertion_point(field_add:CfgCard.Stars.star)
  return star_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCard::Star >&
Stars::star() const {
  // @@protoc_insertion_point(field_list:CfgCard.Stars.star)
  return star_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCard::Star >*
Stars::mutable_star() {
  // @@protoc_insertion_point(field_mutable_list:CfgCard.Stars.star)
  return &star_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgCard

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgCard_2eproto__INCLUDED
