// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgItem.proto

#ifndef PROTOBUF_CfgItem_2eproto__INCLUDED
#define PROTOBUF_CfgItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgItem {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgItem_2eproto();
void protobuf_AssignDesc_CfgItem_2eproto();
void protobuf_ShutdownFile_CfgItem_2eproto();

class Item;
class Items;
class StarRate;
class Sundry;
class Equip;
class Equips;
class Attr;
class Attrs;
class ShenQi;
class ShenQis;
class Gift;
class Gifts;
class Drop;
class Drops;

// ===================================================================

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 itemType = 3;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // required uint32 subType = 4;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);

  // required uint32 color = 5;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 5;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 data = 7;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline ::google::protobuf::uint32 data() const;
  inline void set_data(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 8;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 8;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // repeated .CfgCommon.Reward smeltAward = 9;
  inline int smeltaward_size() const;
  inline void clear_smeltaward();
  static const int kSmeltAwardFieldNumber = 9;
  inline const ::CfgCommon::Reward& smeltaward(int index) const;
  inline ::CfgCommon::Reward* mutable_smeltaward(int index);
  inline ::CfgCommon::Reward* add_smeltaward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      smeltaward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_smeltaward();

  // @@protoc_insertion_point(class_scope:CfgItem.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_subtype();
  inline void clear_has_subtype();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > smeltaward_;
  ::google::protobuf::uint32 data_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  Items* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.Item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CfgItem::Item& items(int index) const;
  inline ::CfgItem::Item* mutable_items(int index);
  inline ::CfgItem::Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CfgItem.Items)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::Item > items_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Items* default_instance_;
};
// -------------------------------------------------------------------

class StarRate : public ::google::protobuf::Message {
 public:
  StarRate();
  virtual ~StarRate();

  StarRate(const StarRate& from);

  inline StarRate& operator=(const StarRate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarRate& default_instance();

  void Swap(StarRate* other);

  // implements Message ----------------------------------------------

  StarRate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarRate& from);
  void MergeFrom(const StarRate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgItem.StarRate)
 private:
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static StarRate* default_instance_;
};
// -------------------------------------------------------------------

class Sundry : public ::google::protobuf::Message {
 public:
  Sundry();
  virtual ~Sundry();

  Sundry(const Sundry& from);

  inline Sundry& operator=(const Sundry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sundry& default_instance();

  void Swap(Sundry* other);

  // implements Message ----------------------------------------------

  Sundry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sundry& from);
  void MergeFrom(const Sundry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgItem.Sundry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Sundry* default_instance_;
};
// -------------------------------------------------------------------

class Equip : public ::google::protobuf::Message {
 public:
  Equip();
  virtual ~Equip();

  Equip(const Equip& from);

  inline Equip& operator=(const Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Equip& default_instance();

  void Swap(Equip* other);

  // implements Message ----------------------------------------------

  Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Equip& from);
  void MergeFrom(const Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward smeltAward = 2;
  inline int smeltaward_size() const;
  inline void clear_smeltaward();
  static const int kSmeltAwardFieldNumber = 2;
  inline const ::CfgCommon::Reward& smeltaward(int index) const;
  inline ::CfgCommon::Reward* mutable_smeltaward(int index);
  inline ::CfgCommon::Reward* add_smeltaward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      smeltaward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_smeltaward();

  // required uint32 part = 3;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 3;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);

  // required uint32 career = 4;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 4;
  inline ::google::protobuf::uint32 career() const;
  inline void set_career(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 5;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 5;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // repeated .CfgItem.StarRate starRate = 6;
  inline int starrate_size() const;
  inline void clear_starrate();
  static const int kStarRateFieldNumber = 6;
  inline const ::CfgItem::StarRate& starrate(int index) const;
  inline ::CfgItem::StarRate* mutable_starrate(int index);
  inline ::CfgItem::StarRate* add_starrate();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::StarRate >&
      starrate() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::StarRate >*
      mutable_starrate();

  // required uint32 color = 7;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 7;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // required uint32 sub = 8;
  inline bool has_sub() const;
  inline void clear_sub();
  static const int kSubFieldNumber = 8;
  inline ::google::protobuf::uint32 sub() const;
  inline void set_sub(::google::protobuf::uint32 value);

  // required uint32 changeLevel = 9;
  inline bool has_changelevel() const;
  inline void clear_changelevel();
  static const int kChangeLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 changelevel() const;
  inline void set_changelevel(::google::protobuf::uint32 value);

  // required uint32 active_min = 10;
  inline bool has_active_min() const;
  inline void clear_active_min();
  static const int kActiveMinFieldNumber = 10;
  inline ::google::protobuf::uint32 active_min() const;
  inline void set_active_min(::google::protobuf::uint32 value);

  // optional .CfgItem.Sundry sundry = 11;
  inline bool has_sundry() const;
  inline void clear_sundry();
  static const int kSundryFieldNumber = 11;
  inline const ::CfgItem::Sundry& sundry() const;
  inline ::CfgItem::Sundry* mutable_sundry();
  inline ::CfgItem::Sundry* release_sundry();
  inline void set_allocated_sundry(::CfgItem::Sundry* sundry);

  // required uint32 type = 12;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgItem.Equip)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_sub();
  inline void clear_has_sub();
  inline void set_has_changelevel();
  inline void clear_has_changelevel();
  inline void set_has_active_min();
  inline void clear_has_active_min();
  inline void set_has_sundry();
  inline void clear_has_sundry();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > smeltaward_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 part_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 career_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::StarRate > starrate_;
  ::google::protobuf::uint32 sub_;
  ::google::protobuf::uint32 changelevel_;
  ::CfgItem::Sundry* sundry_;
  ::google::protobuf::uint32 active_min_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Equip* default_instance_;
};
// -------------------------------------------------------------------

class Equips : public ::google::protobuf::Message {
 public:
  Equips();
  virtual ~Equips();

  Equips(const Equips& from);

  inline Equips& operator=(const Equips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Equips& default_instance();

  void Swap(Equips* other);

  // implements Message ----------------------------------------------

  Equips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Equips& from);
  void MergeFrom(const Equips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.Equip equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::CfgItem::Equip& equips(int index) const;
  inline ::CfgItem::Equip* mutable_equips(int index);
  inline ::CfgItem::Equip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Equip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Equip >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:CfgItem.Equips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::Equip > equips_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Equips* default_instance_;
};
// -------------------------------------------------------------------

class Attr : public ::google::protobuf::Message {
 public:
  Attr();
  virtual ~Attr();

  Attr(const Attr& from);

  inline Attr& operator=(const Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr& default_instance();

  void Swap(Attr* other);

  // implements Message ----------------------------------------------

  Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr& from);
  void MergeFrom(const Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required bool best = 4;
  inline bool has_best() const;
  inline void clear_best();
  static const int kBestFieldNumber = 4;
  inline bool best() const;
  inline void set_best(bool value);

  // required uint32 group = 5;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 5;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 6;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 6;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgItem.Attr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_best();
  inline void clear_has_best();
  inline void set_has_group();
  inline void clear_has_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 rate_;
  bool best_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 group_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Attr* default_instance_;
};
// -------------------------------------------------------------------

class Attrs : public ::google::protobuf::Message {
 public:
  Attrs();
  virtual ~Attrs();

  Attrs(const Attrs& from);

  inline Attrs& operator=(const Attrs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attrs& default_instance();

  void Swap(Attrs* other);

  // implements Message ----------------------------------------------

  Attrs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attrs& from);
  void MergeFrom(const Attrs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.Attr attrs = 1;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 1;
  inline const ::CfgItem::Attr& attrs(int index) const;
  inline ::CfgItem::Attr* mutable_attrs(int index);
  inline ::CfgItem::Attr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Attr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Attr >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:CfgItem.Attrs)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::Attr > attrs_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Attrs* default_instance_;
};
// -------------------------------------------------------------------

class ShenQi : public ::google::protobuf::Message {
 public:
  ShenQi();
  virtual ~ShenQi();

  ShenQi(const ShenQi& from);

  inline ShenQi& operator=(const ShenQi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShenQi& default_instance();

  void Swap(ShenQi* other);

  // implements Message ----------------------------------------------

  ShenQi* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShenQi& from);
  void MergeFrom(const ShenQi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgItem.ShenQi)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static ShenQi* default_instance_;
};
// -------------------------------------------------------------------

class ShenQis : public ::google::protobuf::Message {
 public:
  ShenQis();
  virtual ~ShenQis();

  ShenQis(const ShenQis& from);

  inline ShenQis& operator=(const ShenQis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShenQis& default_instance();

  void Swap(ShenQis* other);

  // implements Message ----------------------------------------------

  ShenQis* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShenQis& from);
  void MergeFrom(const ShenQis& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.ShenQi shenqis = 1;
  inline int shenqis_size() const;
  inline void clear_shenqis();
  static const int kShenqisFieldNumber = 1;
  inline const ::CfgItem::ShenQi& shenqis(int index) const;
  inline ::CfgItem::ShenQi* mutable_shenqis(int index);
  inline ::CfgItem::ShenQi* add_shenqis();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::ShenQi >&
      shenqis() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::ShenQi >*
      mutable_shenqis();

  // @@protoc_insertion_point(class_scope:CfgItem.ShenQis)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::ShenQi > shenqis_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static ShenQis* default_instance_;
};
// -------------------------------------------------------------------

class Gift : public ::google::protobuf::Message {
 public:
  Gift();
  virtual ~Gift();

  Gift(const Gift& from);

  inline Gift& operator=(const Gift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gift& default_instance();

  void Swap(Gift* other);

  // implements Message ----------------------------------------------

  Gift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gift& from);
  void MergeFrom(const Gift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 subtype = 2;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubtypeFieldNumber = 2;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CfgCommon::Reward& reward(int index) const;
  inline ::CfgCommon::Reward* mutable_reward(int index);
  inline ::CfgCommon::Reward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_reward();

  // repeated .CfgCommon.Reward extend = 4;
  inline int extend_size() const;
  inline void clear_extend();
  static const int kExtendFieldNumber = 4;
  inline const ::CfgCommon::Reward& extend(int index) const;
  inline ::CfgCommon::Reward* mutable_extend(int index);
  inline ::CfgCommon::Reward* add_extend();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      extend() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_extend();

  // @@protoc_insertion_point(class_scope:CfgItem.Gift)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_subtype();
  inline void clear_has_subtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > reward_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > extend_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Gift* default_instance_;
};
// -------------------------------------------------------------------

class Gifts : public ::google::protobuf::Message {
 public:
  Gifts();
  virtual ~Gifts();

  Gifts(const Gifts& from);

  inline Gifts& operator=(const Gifts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gifts& default_instance();

  void Swap(Gifts* other);

  // implements Message ----------------------------------------------

  Gifts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gifts& from);
  void MergeFrom(const Gifts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.Gift gifts = 1;
  inline int gifts_size() const;
  inline void clear_gifts();
  static const int kGiftsFieldNumber = 1;
  inline const ::CfgItem::Gift& gifts(int index) const;
  inline ::CfgItem::Gift* mutable_gifts(int index);
  inline ::CfgItem::Gift* add_gifts();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Gift >&
      gifts() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Gift >*
      mutable_gifts();

  // @@protoc_insertion_point(class_scope:CfgItem.Gifts)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::Gift > gifts_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Gifts* default_instance_;
};
// -------------------------------------------------------------------

class Drop : public ::google::protobuf::Message {
 public:
  Drop();
  virtual ~Drop();

  Drop(const Drop& from);

  inline Drop& operator=(const Drop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Drop& default_instance();

  void Swap(Drop* other);

  // implements Message ----------------------------------------------

  Drop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Drop& from);
  void MergeFrom(const Drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 randomCount = 2;
  inline bool has_randomcount() const;
  inline void clear_randomcount();
  static const int kRandomCountFieldNumber = 2;
  inline ::google::protobuf::uint32 randomcount() const;
  inline void set_randomcount(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward fixedReward = 3;
  inline int fixedreward_size() const;
  inline void clear_fixedreward();
  static const int kFixedRewardFieldNumber = 3;
  inline const ::CfgCommon::Reward& fixedreward(int index) const;
  inline ::CfgCommon::Reward* mutable_fixedreward(int index);
  inline ::CfgCommon::Reward* add_fixedreward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      fixedreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_fixedreward();

  // repeated .CfgCommon.Reward randomReward = 4;
  inline int randomreward_size() const;
  inline void clear_randomreward();
  static const int kRandomRewardFieldNumber = 4;
  inline const ::CfgCommon::Reward& randomreward(int index) const;
  inline ::CfgCommon::Reward* mutable_randomreward(int index);
  inline ::CfgCommon::Reward* add_randomreward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      randomreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_randomreward();

  // optional uint32 ownRewardCount = 6;
  inline bool has_ownrewardcount() const;
  inline void clear_ownrewardcount();
  static const int kOwnRewardCountFieldNumber = 6;
  inline ::google::protobuf::uint32 ownrewardcount() const;
  inline void set_ownrewardcount(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward ownReward = 7;
  inline int ownreward_size() const;
  inline void clear_ownreward();
  static const int kOwnRewardFieldNumber = 7;
  inline const ::CfgCommon::Reward& ownreward(int index) const;
  inline ::CfgCommon::Reward* mutable_ownreward(int index);
  inline ::CfgCommon::Reward* add_ownreward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      ownreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_ownreward();

  // optional uint32 killRewardCount = 8;
  inline bool has_killrewardcount() const;
  inline void clear_killrewardcount();
  static const int kKillRewardCountFieldNumber = 8;
  inline ::google::protobuf::uint32 killrewardcount() const;
  inline void set_killrewardcount(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Reward killReward = 9;
  inline int killreward_size() const;
  inline void clear_killreward();
  static const int kKillRewardFieldNumber = 9;
  inline const ::CfgCommon::Reward& killreward(int index) const;
  inline ::CfgCommon::Reward* mutable_killreward(int index);
  inline ::CfgCommon::Reward* add_killreward();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
      killreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
      mutable_killreward();

  // @@protoc_insertion_point(class_scope:CfgItem.Drop)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_randomcount();
  inline void clear_has_randomcount();
  inline void set_has_ownrewardcount();
  inline void clear_has_ownrewardcount();
  inline void set_has_killrewardcount();
  inline void clear_has_killrewardcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 randomcount_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > fixedreward_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > randomreward_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > ownreward_;
  ::google::protobuf::uint32 ownrewardcount_;
  ::google::protobuf::uint32 killrewardcount_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward > killreward_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Drop* default_instance_;
};
// -------------------------------------------------------------------

class Drops : public ::google::protobuf::Message {
 public:
  Drops();
  virtual ~Drops();

  Drops(const Drops& from);

  inline Drops& operator=(const Drops& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Drops& default_instance();

  void Swap(Drops* other);

  // implements Message ----------------------------------------------

  Drops* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Drops& from);
  void MergeFrom(const Drops& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgItem.Drop drops = 1;
  inline int drops_size() const;
  inline void clear_drops();
  static const int kDropsFieldNumber = 1;
  inline const ::CfgItem::Drop& drops(int index) const;
  inline ::CfgItem::Drop* mutable_drops(int index);
  inline ::CfgItem::Drop* add_drops();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Drop >&
      drops() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Drop >*
      mutable_drops();

  // @@protoc_insertion_point(class_scope:CfgItem.Drops)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgItem::Drop > drops_;
  friend void  protobuf_AddDesc_CfgItem_2eproto();
  friend void protobuf_AssignDesc_CfgItem_2eproto();
  friend void protobuf_ShutdownFile_CfgItem_2eproto();

  void InitAsDefaultInstance();
  static Drops* default_instance_;
};
// ===================================================================


// ===================================================================

// Item

// required uint32 id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Item::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.id)
  return id_;
}
inline void Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.id)
}

// required uint32 type = 2;
inline bool Item::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Item::type() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.type)
  return type_;
}
inline void Item::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.type)
}

// required uint32 itemType = 3;
inline bool Item::has_itemtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_itemtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 Item::itemtype() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.itemType)
  return itemtype_;
}
inline void Item::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.itemType)
}

// required uint32 subType = 4;
inline bool Item::has_subtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_subtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_subtype() {
  subtype_ = 0u;
  clear_has_subtype();
}
inline ::google::protobuf::uint32 Item::subtype() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.subType)
  return subtype_;
}
inline void Item::set_subtype(::google::protobuf::uint32 value) {
  set_has_subtype();
  subtype_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.subType)
}

// required uint32 color = 5;
inline bool Item::has_color() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_color() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_color() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 Item::color() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.color)
  return color_;
}
inline void Item::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.color)
}

// required uint32 level = 6;
inline bool Item::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Item::level() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.level)
  return level_;
}
inline void Item::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.level)
}

// required uint32 data = 7;
inline bool Item::has_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_data() {
  data_ = 0u;
  clear_has_data();
}
inline ::google::protobuf::uint32 Item::data() const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.data)
  return data_;
}
inline void Item::set_data(::google::protobuf::uint32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Item.data)
}

// repeated .CfgCommon.Attribute attr = 8;
inline int Item::attr_size() const {
  return attr_.size();
}
inline void Item::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Item::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Item::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Item.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Item::add_attr() {
  // @@protoc_insertion_point(field_add:CfgItem.Item.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Item::attr() const {
  // @@protoc_insertion_point(field_list:CfgItem.Item.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Item::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Item.attr)
  return &attr_;
}

// repeated .CfgCommon.Reward smeltAward = 9;
inline int Item::smeltaward_size() const {
  return smeltaward_.size();
}
inline void Item::clear_smeltaward() {
  smeltaward_.Clear();
}
inline const ::CfgCommon::Reward& Item::smeltaward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Item.smeltAward)
  return smeltaward_.Get(index);
}
inline ::CfgCommon::Reward* Item::mutable_smeltaward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Item.smeltAward)
  return smeltaward_.Mutable(index);
}
inline ::CfgCommon::Reward* Item::add_smeltaward() {
  // @@protoc_insertion_point(field_add:CfgItem.Item.smeltAward)
  return smeltaward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Item::smeltaward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Item.smeltAward)
  return smeltaward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Item::mutable_smeltaward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Item.smeltAward)
  return &smeltaward_;
}

// -------------------------------------------------------------------

// Items

// repeated .CfgItem.Item items = 1;
inline int Items::items_size() const {
  return items_.size();
}
inline void Items::clear_items() {
  items_.Clear();
}
inline const ::CfgItem::Item& Items::items(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Items.items)
  return items_.Get(index);
}
inline ::CfgItem::Item* Items::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Items.items)
  return items_.Mutable(index);
}
inline ::CfgItem::Item* Items::add_items() {
  // @@protoc_insertion_point(field_add:CfgItem.Items.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Item >&
Items::items() const {
  // @@protoc_insertion_point(field_list:CfgItem.Items.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Item >*
Items::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Items.items)
  return &items_;
}

// -------------------------------------------------------------------

// StarRate

// required uint32 star = 1;
inline bool StarRate::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarRate::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarRate::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarRate::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 StarRate::star() const {
  // @@protoc_insertion_point(field_get:CfgItem.StarRate.star)
  return star_;
}
inline void StarRate::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.StarRate.star)
}

// required uint32 rate = 2;
inline bool StarRate::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarRate::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarRate::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarRate::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 StarRate::rate() const {
  // @@protoc_insertion_point(field_get:CfgItem.StarRate.rate)
  return rate_;
}
inline void StarRate::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.StarRate.rate)
}

// -------------------------------------------------------------------

// Sundry

// required uint32 id = 1;
inline bool Sundry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sundry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sundry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sundry::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Sundry::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Sundry.id)
  return id_;
}
inline void Sundry::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Sundry.id)
}

// required uint32 num = 2;
inline bool Sundry::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sundry::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sundry::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sundry::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Sundry::num() const {
  // @@protoc_insertion_point(field_get:CfgItem.Sundry.num)
  return num_;
}
inline void Sundry::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Sundry.num)
}

// -------------------------------------------------------------------

// Equip

// required uint32 id = 1;
inline bool Equip::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Equip::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Equip::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Equip::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Equip::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.id)
  return id_;
}
inline void Equip::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.id)
}

// repeated .CfgCommon.Reward smeltAward = 2;
inline int Equip::smeltaward_size() const {
  return smeltaward_.size();
}
inline void Equip::clear_smeltaward() {
  smeltaward_.Clear();
}
inline const ::CfgCommon::Reward& Equip::smeltaward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.smeltAward)
  return smeltaward_.Get(index);
}
inline ::CfgCommon::Reward* Equip::mutable_smeltaward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Equip.smeltAward)
  return smeltaward_.Mutable(index);
}
inline ::CfgCommon::Reward* Equip::add_smeltaward() {
  // @@protoc_insertion_point(field_add:CfgItem.Equip.smeltAward)
  return smeltaward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Equip::smeltaward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Equip.smeltAward)
  return smeltaward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Equip::mutable_smeltaward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Equip.smeltAward)
  return &smeltaward_;
}

// required uint32 part = 3;
inline bool Equip::has_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Equip::set_has_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Equip::clear_has_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Equip::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 Equip::part() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.part)
  return part_;
}
inline void Equip::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.part)
}

// required uint32 career = 4;
inline bool Equip::has_career() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Equip::set_has_career() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Equip::clear_has_career() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Equip::clear_career() {
  career_ = 0u;
  clear_has_career();
}
inline ::google::protobuf::uint32 Equip::career() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.career)
  return career_;
}
inline void Equip::set_career(::google::protobuf::uint32 value) {
  set_has_career();
  career_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.career)
}

// repeated .CfgCommon.Attribute attr = 5;
inline int Equip::attr_size() const {
  return attr_.size();
}
inline void Equip::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Equip::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Equip::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Equip.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Equip::add_attr() {
  // @@protoc_insertion_point(field_add:CfgItem.Equip.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Equip::attr() const {
  // @@protoc_insertion_point(field_list:CfgItem.Equip.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Equip::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Equip.attr)
  return &attr_;
}

// repeated .CfgItem.StarRate starRate = 6;
inline int Equip::starrate_size() const {
  return starrate_.size();
}
inline void Equip::clear_starrate() {
  starrate_.Clear();
}
inline const ::CfgItem::StarRate& Equip::starrate(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.starRate)
  return starrate_.Get(index);
}
inline ::CfgItem::StarRate* Equip::mutable_starrate(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Equip.starRate)
  return starrate_.Mutable(index);
}
inline ::CfgItem::StarRate* Equip::add_starrate() {
  // @@protoc_insertion_point(field_add:CfgItem.Equip.starRate)
  return starrate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::StarRate >&
Equip::starrate() const {
  // @@protoc_insertion_point(field_list:CfgItem.Equip.starRate)
  return starrate_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::StarRate >*
Equip::mutable_starrate() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Equip.starRate)
  return &starrate_;
}

// required uint32 color = 7;
inline bool Equip::has_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Equip::set_has_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Equip::clear_has_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Equip::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 Equip::color() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.color)
  return color_;
}
inline void Equip::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.color)
}

// required uint32 sub = 8;
inline bool Equip::has_sub() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Equip::set_has_sub() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Equip::clear_has_sub() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Equip::clear_sub() {
  sub_ = 0u;
  clear_has_sub();
}
inline ::google::protobuf::uint32 Equip::sub() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.sub)
  return sub_;
}
inline void Equip::set_sub(::google::protobuf::uint32 value) {
  set_has_sub();
  sub_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.sub)
}

// required uint32 changeLevel = 9;
inline bool Equip::has_changelevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Equip::set_has_changelevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Equip::clear_has_changelevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Equip::clear_changelevel() {
  changelevel_ = 0u;
  clear_has_changelevel();
}
inline ::google::protobuf::uint32 Equip::changelevel() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.changeLevel)
  return changelevel_;
}
inline void Equip::set_changelevel(::google::protobuf::uint32 value) {
  set_has_changelevel();
  changelevel_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.changeLevel)
}

// required uint32 active_min = 10;
inline bool Equip::has_active_min() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Equip::set_has_active_min() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Equip::clear_has_active_min() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Equip::clear_active_min() {
  active_min_ = 0u;
  clear_has_active_min();
}
inline ::google::protobuf::uint32 Equip::active_min() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.active_min)
  return active_min_;
}
inline void Equip::set_active_min(::google::protobuf::uint32 value) {
  set_has_active_min();
  active_min_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.active_min)
}

// optional .CfgItem.Sundry sundry = 11;
inline bool Equip::has_sundry() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Equip::set_has_sundry() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Equip::clear_has_sundry() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Equip::clear_sundry() {
  if (sundry_ != NULL) sundry_->::CfgItem::Sundry::Clear();
  clear_has_sundry();
}
inline const ::CfgItem::Sundry& Equip::sundry() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.sundry)
  return sundry_ != NULL ? *sundry_ : *default_instance_->sundry_;
}
inline ::CfgItem::Sundry* Equip::mutable_sundry() {
  set_has_sundry();
  if (sundry_ == NULL) sundry_ = new ::CfgItem::Sundry;
  // @@protoc_insertion_point(field_mutable:CfgItem.Equip.sundry)
  return sundry_;
}
inline ::CfgItem::Sundry* Equip::release_sundry() {
  clear_has_sundry();
  ::CfgItem::Sundry* temp = sundry_;
  sundry_ = NULL;
  return temp;
}
inline void Equip::set_allocated_sundry(::CfgItem::Sundry* sundry) {
  delete sundry_;
  sundry_ = sundry;
  if (sundry) {
    set_has_sundry();
  } else {
    clear_has_sundry();
  }
  // @@protoc_insertion_point(field_set_allocated:CfgItem.Equip.sundry)
}

// required uint32 type = 12;
inline bool Equip::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Equip::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Equip::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Equip::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Equip::type() const {
  // @@protoc_insertion_point(field_get:CfgItem.Equip.type)
  return type_;
}
inline void Equip::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Equip.type)
}

// -------------------------------------------------------------------

// Equips

// repeated .CfgItem.Equip equips = 1;
inline int Equips::equips_size() const {
  return equips_.size();
}
inline void Equips::clear_equips() {
  equips_.Clear();
}
inline const ::CfgItem::Equip& Equips::equips(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Equips.equips)
  return equips_.Get(index);
}
inline ::CfgItem::Equip* Equips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Equips.equips)
  return equips_.Mutable(index);
}
inline ::CfgItem::Equip* Equips::add_equips() {
  // @@protoc_insertion_point(field_add:CfgItem.Equips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Equip >&
Equips::equips() const {
  // @@protoc_insertion_point(field_list:CfgItem.Equips.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Equip >*
Equips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Equips.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// Attr

// required uint32 id = 1;
inline bool Attr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.id)
  return id_;
}
inline void Attr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Attr.id)
}

// required uint32 star = 2;
inline bool Attr::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 Attr::star() const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.star)
  return star_;
}
inline void Attr::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Attr.star)
}

// required uint32 rate = 3;
inline bool Attr::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Attr::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Attr::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Attr::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 Attr::rate() const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.rate)
  return rate_;
}
inline void Attr::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Attr.rate)
}

// required bool best = 4;
inline bool Attr::has_best() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Attr::set_has_best() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Attr::clear_has_best() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Attr::clear_best() {
  best_ = false;
  clear_has_best();
}
inline bool Attr::best() const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.best)
  return best_;
}
inline void Attr::set_best(bool value) {
  set_has_best();
  best_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Attr.best)
}

// required uint32 group = 5;
inline bool Attr::has_group() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Attr::set_has_group() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Attr::clear_has_group() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Attr::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 Attr::group() const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.group)
  return group_;
}
inline void Attr::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Attr.group)
}

// repeated .CfgCommon.Attribute attr = 6;
inline int Attr::attr_size() const {
  return attr_.size();
}
inline void Attr::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Attr::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Attr.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Attr::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Attr.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Attr::add_attr() {
  // @@protoc_insertion_point(field_add:CfgItem.Attr.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Attr::attr() const {
  // @@protoc_insertion_point(field_list:CfgItem.Attr.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Attr::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Attr.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Attrs

// repeated .CfgItem.Attr attrs = 1;
inline int Attrs::attrs_size() const {
  return attrs_.size();
}
inline void Attrs::clear_attrs() {
  attrs_.Clear();
}
inline const ::CfgItem::Attr& Attrs::attrs(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Attrs.attrs)
  return attrs_.Get(index);
}
inline ::CfgItem::Attr* Attrs::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Attrs.attrs)
  return attrs_.Mutable(index);
}
inline ::CfgItem::Attr* Attrs::add_attrs() {
  // @@protoc_insertion_point(field_add:CfgItem.Attrs.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Attr >&
Attrs::attrs() const {
  // @@protoc_insertion_point(field_list:CfgItem.Attrs.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Attr >*
Attrs::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Attrs.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// ShenQi

// required uint32 item = 1;
inline bool ShenQi::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShenQi::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShenQi::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShenQi::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 ShenQi::item() const {
  // @@protoc_insertion_point(field_get:CfgItem.ShenQi.item)
  return item_;
}
inline void ShenQi::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.ShenQi.item)
}

// required uint32 id = 2;
inline bool ShenQi::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShenQi::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShenQi::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShenQi::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShenQi::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.ShenQi.id)
  return id_;
}
inline void ShenQi::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.ShenQi.id)
}

// -------------------------------------------------------------------

// ShenQis

// repeated .CfgItem.ShenQi shenqis = 1;
inline int ShenQis::shenqis_size() const {
  return shenqis_.size();
}
inline void ShenQis::clear_shenqis() {
  shenqis_.Clear();
}
inline const ::CfgItem::ShenQi& ShenQis::shenqis(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.ShenQis.shenqis)
  return shenqis_.Get(index);
}
inline ::CfgItem::ShenQi* ShenQis::mutable_shenqis(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.ShenQis.shenqis)
  return shenqis_.Mutable(index);
}
inline ::CfgItem::ShenQi* ShenQis::add_shenqis() {
  // @@protoc_insertion_point(field_add:CfgItem.ShenQis.shenqis)
  return shenqis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::ShenQi >&
ShenQis::shenqis() const {
  // @@protoc_insertion_point(field_list:CfgItem.ShenQis.shenqis)
  return shenqis_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::ShenQi >*
ShenQis::mutable_shenqis() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.ShenQis.shenqis)
  return &shenqis_;
}

// -------------------------------------------------------------------

// Gift

// required uint32 id = 1;
inline bool Gift::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gift::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gift::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gift::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Gift::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Gift.id)
  return id_;
}
inline void Gift::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Gift.id)
}

// required uint32 subtype = 2;
inline bool Gift::has_subtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gift::set_has_subtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gift::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gift::clear_subtype() {
  subtype_ = 0u;
  clear_has_subtype();
}
inline ::google::protobuf::uint32 Gift::subtype() const {
  // @@protoc_insertion_point(field_get:CfgItem.Gift.subtype)
  return subtype_;
}
inline void Gift::set_subtype(::google::protobuf::uint32 value) {
  set_has_subtype();
  subtype_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Gift.subtype)
}

// repeated .CfgCommon.Reward reward = 3;
inline int Gift::reward_size() const {
  return reward_.size();
}
inline void Gift::clear_reward() {
  reward_.Clear();
}
inline const ::CfgCommon::Reward& Gift::reward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Gift.reward)
  return reward_.Get(index);
}
inline ::CfgCommon::Reward* Gift::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Gift.reward)
  return reward_.Mutable(index);
}
inline ::CfgCommon::Reward* Gift::add_reward() {
  // @@protoc_insertion_point(field_add:CfgItem.Gift.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Gift::reward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Gift.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Gift::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Gift.reward)
  return &reward_;
}

// repeated .CfgCommon.Reward extend = 4;
inline int Gift::extend_size() const {
  return extend_.size();
}
inline void Gift::clear_extend() {
  extend_.Clear();
}
inline const ::CfgCommon::Reward& Gift::extend(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Gift.extend)
  return extend_.Get(index);
}
inline ::CfgCommon::Reward* Gift::mutable_extend(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Gift.extend)
  return extend_.Mutable(index);
}
inline ::CfgCommon::Reward* Gift::add_extend() {
  // @@protoc_insertion_point(field_add:CfgItem.Gift.extend)
  return extend_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Gift::extend() const {
  // @@protoc_insertion_point(field_list:CfgItem.Gift.extend)
  return extend_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Gift::mutable_extend() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Gift.extend)
  return &extend_;
}

// -------------------------------------------------------------------

// Gifts

// repeated .CfgItem.Gift gifts = 1;
inline int Gifts::gifts_size() const {
  return gifts_.size();
}
inline void Gifts::clear_gifts() {
  gifts_.Clear();
}
inline const ::CfgItem::Gift& Gifts::gifts(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Gifts.gifts)
  return gifts_.Get(index);
}
inline ::CfgItem::Gift* Gifts::mutable_gifts(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Gifts.gifts)
  return gifts_.Mutable(index);
}
inline ::CfgItem::Gift* Gifts::add_gifts() {
  // @@protoc_insertion_point(field_add:CfgItem.Gifts.gifts)
  return gifts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Gift >&
Gifts::gifts() const {
  // @@protoc_insertion_point(field_list:CfgItem.Gifts.gifts)
  return gifts_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Gift >*
Gifts::mutable_gifts() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Gifts.gifts)
  return &gifts_;
}

// -------------------------------------------------------------------

// Drop

// required uint32 id = 1;
inline bool Drop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Drop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Drop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Drop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Drop::id() const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.id)
  return id_;
}
inline void Drop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Drop.id)
}

// required uint32 randomCount = 2;
inline bool Drop::has_randomcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Drop::set_has_randomcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Drop::clear_has_randomcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Drop::clear_randomcount() {
  randomcount_ = 0u;
  clear_has_randomcount();
}
inline ::google::protobuf::uint32 Drop::randomcount() const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.randomCount)
  return randomcount_;
}
inline void Drop::set_randomcount(::google::protobuf::uint32 value) {
  set_has_randomcount();
  randomcount_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Drop.randomCount)
}

// repeated .CfgCommon.Reward fixedReward = 3;
inline int Drop::fixedreward_size() const {
  return fixedreward_.size();
}
inline void Drop::clear_fixedreward() {
  fixedreward_.Clear();
}
inline const ::CfgCommon::Reward& Drop::fixedreward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.fixedReward)
  return fixedreward_.Get(index);
}
inline ::CfgCommon::Reward* Drop::mutable_fixedreward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Drop.fixedReward)
  return fixedreward_.Mutable(index);
}
inline ::CfgCommon::Reward* Drop::add_fixedreward() {
  // @@protoc_insertion_point(field_add:CfgItem.Drop.fixedReward)
  return fixedreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Drop::fixedreward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Drop.fixedReward)
  return fixedreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Drop::mutable_fixedreward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Drop.fixedReward)
  return &fixedreward_;
}

// repeated .CfgCommon.Reward randomReward = 4;
inline int Drop::randomreward_size() const {
  return randomreward_.size();
}
inline void Drop::clear_randomreward() {
  randomreward_.Clear();
}
inline const ::CfgCommon::Reward& Drop::randomreward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.randomReward)
  return randomreward_.Get(index);
}
inline ::CfgCommon::Reward* Drop::mutable_randomreward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Drop.randomReward)
  return randomreward_.Mutable(index);
}
inline ::CfgCommon::Reward* Drop::add_randomreward() {
  // @@protoc_insertion_point(field_add:CfgItem.Drop.randomReward)
  return randomreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Drop::randomreward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Drop.randomReward)
  return randomreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Drop::mutable_randomreward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Drop.randomReward)
  return &randomreward_;
}

// optional uint32 ownRewardCount = 6;
inline bool Drop::has_ownrewardcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Drop::set_has_ownrewardcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Drop::clear_has_ownrewardcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Drop::clear_ownrewardcount() {
  ownrewardcount_ = 0u;
  clear_has_ownrewardcount();
}
inline ::google::protobuf::uint32 Drop::ownrewardcount() const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.ownRewardCount)
  return ownrewardcount_;
}
inline void Drop::set_ownrewardcount(::google::protobuf::uint32 value) {
  set_has_ownrewardcount();
  ownrewardcount_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Drop.ownRewardCount)
}

// repeated .CfgCommon.Reward ownReward = 7;
inline int Drop::ownreward_size() const {
  return ownreward_.size();
}
inline void Drop::clear_ownreward() {
  ownreward_.Clear();
}
inline const ::CfgCommon::Reward& Drop::ownreward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.ownReward)
  return ownreward_.Get(index);
}
inline ::CfgCommon::Reward* Drop::mutable_ownreward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Drop.ownReward)
  return ownreward_.Mutable(index);
}
inline ::CfgCommon::Reward* Drop::add_ownreward() {
  // @@protoc_insertion_point(field_add:CfgItem.Drop.ownReward)
  return ownreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Drop::ownreward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Drop.ownReward)
  return ownreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Drop::mutable_ownreward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Drop.ownReward)
  return &ownreward_;
}

// optional uint32 killRewardCount = 8;
inline bool Drop::has_killrewardcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Drop::set_has_killrewardcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Drop::clear_has_killrewardcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Drop::clear_killrewardcount() {
  killrewardcount_ = 0u;
  clear_has_killrewardcount();
}
inline ::google::protobuf::uint32 Drop::killrewardcount() const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.killRewardCount)
  return killrewardcount_;
}
inline void Drop::set_killrewardcount(::google::protobuf::uint32 value) {
  set_has_killrewardcount();
  killrewardcount_ = value;
  // @@protoc_insertion_point(field_set:CfgItem.Drop.killRewardCount)
}

// repeated .CfgCommon.Reward killReward = 9;
inline int Drop::killreward_size() const {
  return killreward_.size();
}
inline void Drop::clear_killreward() {
  killreward_.Clear();
}
inline const ::CfgCommon::Reward& Drop::killreward(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Drop.killReward)
  return killreward_.Get(index);
}
inline ::CfgCommon::Reward* Drop::mutable_killreward(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Drop.killReward)
  return killreward_.Mutable(index);
}
inline ::CfgCommon::Reward* Drop::add_killreward() {
  // @@protoc_insertion_point(field_add:CfgItem.Drop.killReward)
  return killreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >&
Drop::killreward() const {
  // @@protoc_insertion_point(field_list:CfgItem.Drop.killReward)
  return killreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Reward >*
Drop::mutable_killreward() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Drop.killReward)
  return &killreward_;
}

// -------------------------------------------------------------------

// Drops

// repeated .CfgItem.Drop drops = 1;
inline int Drops::drops_size() const {
  return drops_.size();
}
inline void Drops::clear_drops() {
  drops_.Clear();
}
inline const ::CfgItem::Drop& Drops::drops(int index) const {
  // @@protoc_insertion_point(field_get:CfgItem.Drops.drops)
  return drops_.Get(index);
}
inline ::CfgItem::Drop* Drops::mutable_drops(int index) {
  // @@protoc_insertion_point(field_mutable:CfgItem.Drops.drops)
  return drops_.Mutable(index);
}
inline ::CfgItem::Drop* Drops::add_drops() {
  // @@protoc_insertion_point(field_add:CfgItem.Drops.drops)
  return drops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgItem::Drop >&
Drops::drops() const {
  // @@protoc_insertion_point(field_list:CfgItem.Drops.drops)
  return drops_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgItem::Drop >*
Drops::mutable_drops() {
  // @@protoc_insertion_point(field_mutable_list:CfgItem.Drops.drops)
  return &drops_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgItem

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgItem_2eproto__INCLUDED
