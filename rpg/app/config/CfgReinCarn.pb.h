// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgReinCarn.proto

#ifndef PROTOBUF_CfgReinCarn_2eproto__INCLUDED
#define PROTOBUF_CfgReinCarn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgReinCarn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgReinCarn_2eproto();
void protobuf_AssignDesc_CfgReinCarn_2eproto();
void protobuf_ShutdownFile_CfgReinCarn_2eproto();

class ReinCarn;
class ReinCarns;

// ===================================================================

class ReinCarn : public ::google::protobuf::Message {
 public:
  ReinCarn();
  virtual ~ReinCarn();

  ReinCarn(const ReinCarn& from);

  inline ReinCarn& operator=(const ReinCarn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReinCarn& default_instance();

  void Swap(ReinCarn* other);

  // implements Message ----------------------------------------------

  ReinCarn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReinCarn& from);
  void MergeFrom(const ReinCarn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 skillId = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 4;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 4;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgReinCarn.ReinCarn)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_CfgReinCarn_2eproto();
  friend void protobuf_AssignDesc_CfgReinCarn_2eproto();
  friend void protobuf_ShutdownFile_CfgReinCarn_2eproto();

  void InitAsDefaultInstance();
  static ReinCarn* default_instance_;
};
// -------------------------------------------------------------------

class ReinCarns : public ::google::protobuf::Message {
 public:
  ReinCarns();
  virtual ~ReinCarns();

  ReinCarns(const ReinCarns& from);

  inline ReinCarns& operator=(const ReinCarns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReinCarns& default_instance();

  void Swap(ReinCarns* other);

  // implements Message ----------------------------------------------

  ReinCarns* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReinCarns& from);
  void MergeFrom(const ReinCarns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgReinCarn.ReinCarn reincarn = 1;
  inline int reincarn_size() const;
  inline void clear_reincarn();
  static const int kReincarnFieldNumber = 1;
  inline const ::CfgReinCarn::ReinCarn& reincarn(int index) const;
  inline ::CfgReinCarn::ReinCarn* mutable_reincarn(int index);
  inline ::CfgReinCarn::ReinCarn* add_reincarn();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgReinCarn::ReinCarn >&
      reincarn() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgReinCarn::ReinCarn >*
      mutable_reincarn();

  // @@protoc_insertion_point(class_scope:CfgReinCarn.ReinCarns)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgReinCarn::ReinCarn > reincarn_;
  friend void  protobuf_AddDesc_CfgReinCarn_2eproto();
  friend void protobuf_AssignDesc_CfgReinCarn_2eproto();
  friend void protobuf_ShutdownFile_CfgReinCarn_2eproto();

  void InitAsDefaultInstance();
  static ReinCarns* default_instance_;
};
// ===================================================================


// ===================================================================

// ReinCarn

// required uint32 level = 1;
inline bool ReinCarn::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReinCarn::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReinCarn::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReinCarn::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ReinCarn::level() const {
  // @@protoc_insertion_point(field_get:CfgReinCarn.ReinCarn.level)
  return level_;
}
inline void ReinCarn::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgReinCarn.ReinCarn.level)
}

// required uint32 value = 2;
inline bool ReinCarn::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReinCarn::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReinCarn::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReinCarn::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ReinCarn::value() const {
  // @@protoc_insertion_point(field_get:CfgReinCarn.ReinCarn.value)
  return value_;
}
inline void ReinCarn::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CfgReinCarn.ReinCarn.value)
}

// required uint32 skillId = 3;
inline bool ReinCarn::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReinCarn::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReinCarn::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReinCarn::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 ReinCarn::skillid() const {
  // @@protoc_insertion_point(field_get:CfgReinCarn.ReinCarn.skillId)
  return skillid_;
}
inline void ReinCarn::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:CfgReinCarn.ReinCarn.skillId)
}

// repeated .CfgCommon.Attribute attr = 4;
inline int ReinCarn::attr_size() const {
  return attr_.size();
}
inline void ReinCarn::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& ReinCarn::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgReinCarn.ReinCarn.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* ReinCarn::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgReinCarn.ReinCarn.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* ReinCarn::add_attr() {
  // @@protoc_insertion_point(field_add:CfgReinCarn.ReinCarn.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
ReinCarn::attr() const {
  // @@protoc_insertion_point(field_list:CfgReinCarn.ReinCarn.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
ReinCarn::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgReinCarn.ReinCarn.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// ReinCarns

// repeated .CfgReinCarn.ReinCarn reincarn = 1;
inline int ReinCarns::reincarn_size() const {
  return reincarn_.size();
}
inline void ReinCarns::clear_reincarn() {
  reincarn_.Clear();
}
inline const ::CfgReinCarn::ReinCarn& ReinCarns::reincarn(int index) const {
  // @@protoc_insertion_point(field_get:CfgReinCarn.ReinCarns.reincarn)
  return reincarn_.Get(index);
}
inline ::CfgReinCarn::ReinCarn* ReinCarns::mutable_reincarn(int index) {
  // @@protoc_insertion_point(field_mutable:CfgReinCarn.ReinCarns.reincarn)
  return reincarn_.Mutable(index);
}
inline ::CfgReinCarn::ReinCarn* ReinCarns::add_reincarn() {
  // @@protoc_insertion_point(field_add:CfgReinCarn.ReinCarns.reincarn)
  return reincarn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgReinCarn::ReinCarn >&
ReinCarns::reincarn() const {
  // @@protoc_insertion_point(field_list:CfgReinCarn.ReinCarns.reincarn)
  return reincarn_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgReinCarn::ReinCarn >*
ReinCarns::mutable_reincarn() {
  // @@protoc_insertion_point(field_mutable_list:CfgReinCarn.ReinCarns.reincarn)
  return &reincarn_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgReinCarn

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgReinCarn_2eproto__INCLUDED
