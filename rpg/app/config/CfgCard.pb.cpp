// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgCard.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgCard.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgCard {

namespace {

const ::google::protobuf::Descriptor* Card_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Card_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cards_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cards_reflection_ = NULL;
const ::google::protobuf::Descriptor* CardGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CardGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* CardGroups_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CardGroups_reflection_ = NULL;
const ::google::protobuf::Descriptor* Suit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Suit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Suits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Suits_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgCard_2eproto() {
  protobuf_AddDesc_CfgCard_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgCard.proto");
  GOOGLE_CHECK(file != NULL);
  Card_descriptor_ = file->message_type(0);
  static const int Card_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, exattr_),
  };
  Card_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Card_descriptor_,
      Card::default_instance_,
      Card_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Card));
  Cards_descriptor_ = file->message_type(1);
  static const int Cards_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cards, cards_),
  };
  Cards_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Cards_descriptor_,
      Cards::default_instance_,
      Cards_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cards, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cards, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Cards));
  CardGroup_descriptor_ = file->message_type(2);
  static const int CardGroup_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, neednum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, attr_),
  };
  CardGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CardGroup_descriptor_,
      CardGroup::default_instance_,
      CardGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CardGroup));
  CardGroups_descriptor_ = file->message_type(3);
  static const int CardGroups_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroups, groups_),
  };
  CardGroups_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CardGroups_descriptor_,
      CardGroups::default_instance_,
      CardGroups_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroups, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardGroups, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CardGroups));
  Suit_descriptor_ = file->message_type(4);
  static const int Suit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, include_),
  };
  Suit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Suit_descriptor_,
      Suit::default_instance_,
      Suit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Suit));
  Suits_descriptor_ = file->message_type(5);
  static const int Suits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, suits_),
  };
  Suits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Suits_descriptor_,
      Suits::default_instance_,
      Suits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Suits, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Suits));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgCard_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Card_descriptor_, &Card::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Cards_descriptor_, &Cards::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CardGroup_descriptor_, &CardGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CardGroups_descriptor_, &CardGroups::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Suit_descriptor_, &Suit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Suits_descriptor_, &Suits::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgCard_2eproto() {
  delete Card::default_instance_;
  delete Card_reflection_;
  delete Cards::default_instance_;
  delete Cards_reflection_;
  delete CardGroup::default_instance_;
  delete CardGroup_reflection_;
  delete CardGroups::default_instance_;
  delete CardGroups_reflection_;
  delete Suit::default_instance_;
  delete Suit_reflection_;
  delete Suits::default_instance_;
  delete Suits_reflection_;
}

void protobuf_AddDesc_CfgCard_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CfgCommon::protobuf_AddDesc_CfgCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rCfgCard.proto\022\007CfgCard\032\017CfgCommon.prot"
    "o\"k\n\004Card\022\n\n\002id\030\001 \002(\r\022\r\n\005skill\030\002 \002(\r\022\"\n\004"
    "attr\030\003 \003(\0132\024.CfgCommon.Attribute\022$\n\006exAt"
    "tr\030\004 \003(\0132\024.CfgCommon.Attribute\"%\n\005Cards\022"
    "\034\n\005cards\030\001 \003(\0132\r.CfgCard.Card\"_\n\tCardGro"
    "up\022\017\n\007groupId\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\017\n\007nee"
    "dNum\030\003 \002(\r\022\"\n\004attr\030\004 \003(\0132\024.CfgCommon.Att"
    "ribute\"0\n\nCardGroups\022\"\n\006groups\030\001 \003(\0132\022.C"
    "fgCard.CardGroup\"#\n\004Suit\022\n\n\002id\030\001 \002(\r\022\017\n\007"
    "include\030\002 \003(\r\"%\n\005Suits\022\034\n\005suits\030\001 \003(\0132\r."
    "CfgCard.Suit", 412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgCard.proto", &protobuf_RegisterTypes);
  Card::default_instance_ = new Card();
  Cards::default_instance_ = new Cards();
  CardGroup::default_instance_ = new CardGroup();
  CardGroups::default_instance_ = new CardGroups();
  Suit::default_instance_ = new Suit();
  Suits::default_instance_ = new Suits();
  Card::default_instance_->InitAsDefaultInstance();
  Cards::default_instance_->InitAsDefaultInstance();
  CardGroup::default_instance_->InitAsDefaultInstance();
  CardGroups::default_instance_->InitAsDefaultInstance();
  Suit::default_instance_->InitAsDefaultInstance();
  Suits::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgCard_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgCard_2eproto {
  StaticDescriptorInitializer_CfgCard_2eproto() {
    protobuf_AddDesc_CfgCard_2eproto();
  }
} static_descriptor_initializer_CfgCard_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Card::kIdFieldNumber;
const int Card::kSkillFieldNumber;
const int Card::kAttrFieldNumber;
const int Card::kExAttrFieldNumber;
#endif  // !_MSC_VER

Card::Card()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.Card)
}

void Card::InitAsDefaultInstance() {
}

Card::Card(const Card& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.Card)
}

void Card::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  skill_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:CfgCard.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Card_descriptor_;
}

const Card& Card::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

Card* Card::default_instance_ = NULL;

Card* Card::New() const {
  return new Card;
}

void Card::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Card*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, skill_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  attr_.Clear();
  exattr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_skill;
        break;
      }

      // required uint32 skill = 2;
      case 2: {
        if (tag == 16) {
         parse_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_)));
          set_has_skill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 3;
      case 3: {
        if (tag == 26) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_attr;
        if (input->ExpectTag(34)) goto parse_exAttr;
        break;
      }

      // repeated .CfgCommon.Attribute exAttr = 4;
      case 4: {
        if (tag == 34) {
         parse_exAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_exattr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exAttr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.Card)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 skill = 2;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skill(), output);
  }

  // repeated .CfgCommon.Attribute attr = 3;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attr(i), output);
  }

  // repeated .CfgCommon.Attribute exAttr = 4;
  for (int i = 0; i < this->exattr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->exattr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.Card)
}

::google::protobuf::uint8* Card::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.Card)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 skill = 2;
  if (has_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skill(), target);
  }

  // repeated .CfgCommon.Attribute attr = 3;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attr(i), target);
  }

  // repeated .CfgCommon.Attribute exAttr = 4;
  for (int i = 0; i < this->exattr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->exattr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.Card)
  return target;
}

int Card::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 skill = 2;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skill());
    }

  }
  // repeated .CfgCommon.Attribute attr = 3;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  // repeated .CfgCommon.Attribute exAttr = 4;
  total_size += 1 * this->exattr_size();
  for (int i = 0; i < this->exattr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exattr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Card* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Card*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  exattr_.MergeFrom(from.exattr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_skill()) {
      set_skill(from.skill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->exattr())) return false;
  return true;
}

void Card::Swap(Card* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(skill_, other->skill_);
    attr_.Swap(&other->attr_);
    exattr_.Swap(&other->exattr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Card_descriptor_;
  metadata.reflection = Card_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Cards::kCardsFieldNumber;
#endif  // !_MSC_VER

Cards::Cards()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.Cards)
}

void Cards::InitAsDefaultInstance() {
}

Cards::Cards(const Cards& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.Cards)
}

void Cards::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Cards::~Cards() {
  // @@protoc_insertion_point(destructor:CfgCard.Cards)
  SharedDtor();
}

void Cards::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Cards::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cards::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cards_descriptor_;
}

const Cards& Cards::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

Cards* Cards::default_instance_ = NULL;

Cards* Cards::New() const {
  return new Cards;
}

void Cards::Clear() {
  cards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Cards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.Cards)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgCard.Card cards = 1;
      case 1: {
        if (tag == 10) {
         parse_cards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cards;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.Cards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.Cards)
  return false;
#undef DO_
}

void Cards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.Cards)
  // repeated .CfgCard.Card cards = 1;
  for (int i = 0; i < this->cards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cards(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.Cards)
}

::google::protobuf::uint8* Cards::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.Cards)
  // repeated .CfgCard.Card cards = 1;
  for (int i = 0; i < this->cards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cards(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.Cards)
  return target;
}

int Cards::ByteSize() const {
  int total_size = 0;

  // repeated .CfgCard.Card cards = 1;
  total_size += 1 * this->cards_size();
  for (int i = 0; i < this->cards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cards(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cards::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Cards* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Cards*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Cards::MergeFrom(const Cards& from) {
  GOOGLE_CHECK_NE(&from, this);
  cards_.MergeFrom(from.cards_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Cards::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cards::CopyFrom(const Cards& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cards::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cards())) return false;
  return true;
}

void Cards::Swap(Cards* other) {
  if (other != this) {
    cards_.Swap(&other->cards_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Cards::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cards_descriptor_;
  metadata.reflection = Cards_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CardGroup::kGroupIdFieldNumber;
const int CardGroup::kTypeFieldNumber;
const int CardGroup::kNeedNumFieldNumber;
const int CardGroup::kAttrFieldNumber;
#endif  // !_MSC_VER

CardGroup::CardGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.CardGroup)
}

void CardGroup::InitAsDefaultInstance() {
}

CardGroup::CardGroup(const CardGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.CardGroup)
}

void CardGroup::SharedCtor() {
  _cached_size_ = 0;
  groupid_ = 0u;
  type_ = 0u;
  neednum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CardGroup::~CardGroup() {
  // @@protoc_insertion_point(destructor:CfgCard.CardGroup)
  SharedDtor();
}

void CardGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CardGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CardGroup_descriptor_;
}

const CardGroup& CardGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

CardGroup* CardGroup::default_instance_ = NULL;

CardGroup* CardGroup::New() const {
  return new CardGroup;
}

void CardGroup::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CardGroup*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(groupid_, type_);
    neednum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CardGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.CardGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_needNum;
        break;
      }

      // required uint32 needNum = 3;
      case 3: {
        if (tag == 24) {
         parse_needNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &neednum_)));
          set_has_neednum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 4;
      case 4: {
        if (tag == 34) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.CardGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.CardGroup)
  return false;
#undef DO_
}

void CardGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.CardGroup)
  // required uint32 groupId = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required uint32 needNum = 3;
  if (has_neednum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->neednum(), output);
  }

  // repeated .CfgCommon.Attribute attr = 4;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.CardGroup)
}

::google::protobuf::uint8* CardGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.CardGroup)
  // required uint32 groupId = 1;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required uint32 needNum = 3;
  if (has_neednum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->neednum(), target);
  }

  // repeated .CfgCommon.Attribute attr = 4;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.CardGroup)
  return target;
}

int CardGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 groupId = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupid());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 needNum = 3;
    if (has_neednum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->neednum());
    }

  }
  // repeated .CfgCommon.Attribute attr = 4;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CardGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CardGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CardGroup::MergeFrom(const CardGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_neednum()) {
      set_neednum(from.neednum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CardGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardGroup::CopyFrom(const CardGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  return true;
}

void CardGroup::Swap(CardGroup* other) {
  if (other != this) {
    std::swap(groupid_, other->groupid_);
    std::swap(type_, other->type_);
    std::swap(neednum_, other->neednum_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CardGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CardGroup_descriptor_;
  metadata.reflection = CardGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CardGroups::kGroupsFieldNumber;
#endif  // !_MSC_VER

CardGroups::CardGroups()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.CardGroups)
}

void CardGroups::InitAsDefaultInstance() {
}

CardGroups::CardGroups(const CardGroups& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.CardGroups)
}

void CardGroups::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CardGroups::~CardGroups() {
  // @@protoc_insertion_point(destructor:CfgCard.CardGroups)
  SharedDtor();
}

void CardGroups::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CardGroups::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardGroups::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CardGroups_descriptor_;
}

const CardGroups& CardGroups::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

CardGroups* CardGroups::default_instance_ = NULL;

CardGroups* CardGroups::New() const {
  return new CardGroups;
}

void CardGroups::Clear() {
  groups_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CardGroups::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.CardGroups)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgCard.CardGroup groups = 1;
      case 1: {
        if (tag == 10) {
         parse_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_groups;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.CardGroups)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.CardGroups)
  return false;
#undef DO_
}

void CardGroups::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.CardGroups)
  // repeated .CfgCard.CardGroup groups = 1;
  for (int i = 0; i < this->groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->groups(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.CardGroups)
}

::google::protobuf::uint8* CardGroups::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.CardGroups)
  // repeated .CfgCard.CardGroup groups = 1;
  for (int i = 0; i < this->groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->groups(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.CardGroups)
  return target;
}

int CardGroups::ByteSize() const {
  int total_size = 0;

  // repeated .CfgCard.CardGroup groups = 1;
  total_size += 1 * this->groups_size();
  for (int i = 0; i < this->groups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groups(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardGroups::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CardGroups* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CardGroups*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CardGroups::MergeFrom(const CardGroups& from) {
  GOOGLE_CHECK_NE(&from, this);
  groups_.MergeFrom(from.groups_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CardGroups::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardGroups::CopyFrom(const CardGroups& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardGroups::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->groups())) return false;
  return true;
}

void CardGroups::Swap(CardGroups* other) {
  if (other != this) {
    groups_.Swap(&other->groups_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CardGroups::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CardGroups_descriptor_;
  metadata.reflection = CardGroups_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Suit::kIdFieldNumber;
const int Suit::kIncludeFieldNumber;
#endif  // !_MSC_VER

Suit::Suit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.Suit)
}

void Suit::InitAsDefaultInstance() {
}

Suit::Suit(const Suit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.Suit)
}

void Suit::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Suit::~Suit() {
  // @@protoc_insertion_point(destructor:CfgCard.Suit)
  SharedDtor();
}

void Suit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Suit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Suit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Suit_descriptor_;
}

const Suit& Suit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

Suit* Suit::default_instance_ = NULL;

Suit* Suit::New() const {
  return new Suit;
}

void Suit::Clear() {
  id_ = 0u;
  include_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Suit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.Suit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_include;
        break;
      }

      // repeated uint32 include = 2;
      case 2: {
        if (tag == 16) {
         parse_include:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_include())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_include())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_include;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.Suit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.Suit)
  return false;
#undef DO_
}

void Suit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.Suit)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 include = 2;
  for (int i = 0; i < this->include_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->include(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.Suit)
}

::google::protobuf::uint8* Suit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.Suit)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated uint32 include = 2;
  for (int i = 0; i < this->include_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->include(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.Suit)
  return target;
}

int Suit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated uint32 include = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->include_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->include(i));
    }
    total_size += 1 * this->include_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Suit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Suit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Suit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Suit::MergeFrom(const Suit& from) {
  GOOGLE_CHECK_NE(&from, this);
  include_.MergeFrom(from.include_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Suit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Suit::CopyFrom(const Suit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Suit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Suit::Swap(Suit* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    include_.Swap(&other->include_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Suit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Suit_descriptor_;
  metadata.reflection = Suit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Suits::kSuitsFieldNumber;
#endif  // !_MSC_VER

Suits::Suits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgCard.Suits)
}

void Suits::InitAsDefaultInstance() {
}

Suits::Suits(const Suits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgCard.Suits)
}

void Suits::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Suits::~Suits() {
  // @@protoc_insertion_point(destructor:CfgCard.Suits)
  SharedDtor();
}

void Suits::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Suits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Suits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Suits_descriptor_;
}

const Suits& Suits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgCard_2eproto();
  return *default_instance_;
}

Suits* Suits::default_instance_ = NULL;

Suits* Suits::New() const {
  return new Suits;
}

void Suits::Clear() {
  suits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Suits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgCard.Suits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgCard.Suit suits = 1;
      case 1: {
        if (tag == 10) {
         parse_suits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_suits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_suits;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgCard.Suits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgCard.Suits)
  return false;
#undef DO_
}

void Suits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgCard.Suits)
  // repeated .CfgCard.Suit suits = 1;
  for (int i = 0; i < this->suits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->suits(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgCard.Suits)
}

::google::protobuf::uint8* Suits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgCard.Suits)
  // repeated .CfgCard.Suit suits = 1;
  for (int i = 0; i < this->suits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->suits(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgCard.Suits)
  return target;
}

int Suits::ByteSize() const {
  int total_size = 0;

  // repeated .CfgCard.Suit suits = 1;
  total_size += 1 * this->suits_size();
  for (int i = 0; i < this->suits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->suits(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Suits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Suits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Suits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Suits::MergeFrom(const Suits& from) {
  GOOGLE_CHECK_NE(&from, this);
  suits_.MergeFrom(from.suits_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Suits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Suits::CopyFrom(const Suits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Suits::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->suits())) return false;
  return true;
}

void Suits::Swap(Suits* other) {
  if (other != this) {
    suits_.Swap(&other->suits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Suits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Suits_descriptor_;
  metadata.reflection = Suits_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgCard

// @@protoc_insertion_point(global_scope)
