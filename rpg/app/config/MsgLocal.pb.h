// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLocal.proto

#ifndef PROTOBUF_MsgLocal_2eproto__INCLUDED
#define PROTOBUF_MsgLocal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MsgLocal {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgLocal_2eproto();
void protobuf_AssignDesc_MsgLocal_2eproto();
void protobuf_ShutdownFile_MsgLocal_2eproto();

class TreasureHuntRecord;
class LevelRewardRecord;
class LevelRewardRecords;
class TreasureHuntRecords;

// ===================================================================

class TreasureHuntRecord : public ::google::protobuf::Message {
 public:
  TreasureHuntRecord();
  virtual ~TreasureHuntRecord();

  TreasureHuntRecord(const TreasureHuntRecord& from);

  inline TreasureHuntRecord& operator=(const TreasureHuntRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureHuntRecord& default_instance();

  void Swap(TreasureHuntRecord* other);

  // implements Message ----------------------------------------------

  TreasureHuntRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureHuntRecord& from);
  void MergeFrom(const TreasureHuntRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 treasureId = 3;
  inline bool has_treasureid() const;
  inline void clear_treasureid();
  static const int kTreasureIdFieldNumber = 3;
  inline ::google::protobuf::int32 treasureid() const;
  inline void set_treasureid(::google::protobuf::int32 value);

  // required int32 playerId = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 career = 6;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 6;
  inline ::google::protobuf::int32 career() const;
  inline void set_career(::google::protobuf::int32 value);

  // required int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 careerLevel = 8;
  inline bool has_careerlevel() const;
  inline void clear_careerlevel();
  static const int kCareerLevelFieldNumber = 8;
  inline ::google::protobuf::int32 careerlevel() const;
  inline void set_careerlevel(::google::protobuf::int32 value);

  // required int32 drawDt = 9;
  inline bool has_drawdt() const;
  inline void clear_drawdt();
  static const int kDrawDtFieldNumber = 9;
  inline ::google::protobuf::int32 drawdt() const;
  inline void set_drawdt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgLocal.TreasureHuntRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_treasureid();
  inline void clear_has_treasureid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_careerlevel();
  inline void clear_has_careerlevel();
  inline void set_has_drawdt();
  inline void clear_has_drawdt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 treasureid_;
  ::google::protobuf::int32 playerid_;
  ::std::string* name_;
  ::google::protobuf::int32 career_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 careerlevel_;
  ::google::protobuf::int32 drawdt_;
  friend void  protobuf_AddDesc_MsgLocal_2eproto();
  friend void protobuf_AssignDesc_MsgLocal_2eproto();
  friend void protobuf_ShutdownFile_MsgLocal_2eproto();

  void InitAsDefaultInstance();
  static TreasureHuntRecord* default_instance_;
};
// -------------------------------------------------------------------

class LevelRewardRecord : public ::google::protobuf::Message {
 public:
  LevelRewardRecord();
  virtual ~LevelRewardRecord();

  LevelRewardRecord(const LevelRewardRecord& from);

  inline LevelRewardRecord& operator=(const LevelRewardRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelRewardRecord& default_instance();

  void Swap(LevelRewardRecord* other);

  // implements Message ----------------------------------------------

  LevelRewardRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelRewardRecord& from);
  void MergeFrom(const LevelRewardRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 careerLevel = 1;
  inline bool has_careerlevel() const;
  inline void clear_careerlevel();
  static const int kCareerLevelFieldNumber = 1;
  inline ::google::protobuf::int32 careerlevel() const;
  inline void set_careerlevel(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 leftCount = 3;
  inline bool has_leftcount() const;
  inline void clear_leftcount();
  static const int kLeftCountFieldNumber = 3;
  inline ::google::protobuf::int32 leftcount() const;
  inline void set_leftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgLocal.LevelRewardRecord)
 private:
  inline void set_has_careerlevel();
  inline void clear_has_careerlevel();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_leftcount();
  inline void clear_has_leftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 careerlevel_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 leftcount_;
  friend void  protobuf_AddDesc_MsgLocal_2eproto();
  friend void protobuf_AssignDesc_MsgLocal_2eproto();
  friend void protobuf_ShutdownFile_MsgLocal_2eproto();

  void InitAsDefaultInstance();
  static LevelRewardRecord* default_instance_;
};
// -------------------------------------------------------------------

class LevelRewardRecords : public ::google::protobuf::Message {
 public:
  LevelRewardRecords();
  virtual ~LevelRewardRecords();

  LevelRewardRecords(const LevelRewardRecords& from);

  inline LevelRewardRecords& operator=(const LevelRewardRecords& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelRewardRecords& default_instance();

  void Swap(LevelRewardRecords* other);

  // implements Message ----------------------------------------------

  LevelRewardRecords* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelRewardRecords& from);
  void MergeFrom(const LevelRewardRecords& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgLocal.LevelRewardRecord records = 1;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 1;
  inline const ::MsgLocal::LevelRewardRecord& records(int index) const;
  inline ::MsgLocal::LevelRewardRecord* mutable_records(int index);
  inline ::MsgLocal::LevelRewardRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgLocal::LevelRewardRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgLocal::LevelRewardRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:MsgLocal.LevelRewardRecords)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgLocal::LevelRewardRecord > records_;
  friend void  protobuf_AddDesc_MsgLocal_2eproto();
  friend void protobuf_AssignDesc_MsgLocal_2eproto();
  friend void protobuf_ShutdownFile_MsgLocal_2eproto();

  void InitAsDefaultInstance();
  static LevelRewardRecords* default_instance_;
};
// -------------------------------------------------------------------

class TreasureHuntRecords : public ::google::protobuf::Message {
 public:
  TreasureHuntRecords();
  virtual ~TreasureHuntRecords();

  TreasureHuntRecords(const TreasureHuntRecords& from);

  inline TreasureHuntRecords& operator=(const TreasureHuntRecords& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureHuntRecords& default_instance();

  void Swap(TreasureHuntRecords* other);

  // implements Message ----------------------------------------------

  TreasureHuntRecords* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureHuntRecords& from);
  void MergeFrom(const TreasureHuntRecords& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgLocal.TreasureHuntRecord records = 1;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 1;
  inline const ::MsgLocal::TreasureHuntRecord& records(int index) const;
  inline ::MsgLocal::TreasureHuntRecord* mutable_records(int index);
  inline ::MsgLocal::TreasureHuntRecord* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgLocal::TreasureHuntRecord >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgLocal::TreasureHuntRecord >*
      mutable_records();

  // @@protoc_insertion_point(class_scope:MsgLocal.TreasureHuntRecords)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgLocal::TreasureHuntRecord > records_;
  friend void  protobuf_AddDesc_MsgLocal_2eproto();
  friend void protobuf_AssignDesc_MsgLocal_2eproto();
  friend void protobuf_ShutdownFile_MsgLocal_2eproto();

  void InitAsDefaultInstance();
  static TreasureHuntRecords* default_instance_;
};
// ===================================================================


// ===================================================================

// TreasureHuntRecord

// required int32 id = 1;
inline bool TreasureHuntRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureHuntRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureHuntRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureHuntRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TreasureHuntRecord::id() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.id)
  return id_;
}
inline void TreasureHuntRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.id)
}

// required int32 type = 2;
inline bool TreasureHuntRecord::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureHuntRecord::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureHuntRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureHuntRecord::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TreasureHuntRecord::type() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.type)
  return type_;
}
inline void TreasureHuntRecord::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.type)
}

// required int32 treasureId = 3;
inline bool TreasureHuntRecord::has_treasureid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureHuntRecord::set_has_treasureid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureHuntRecord::clear_has_treasureid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureHuntRecord::clear_treasureid() {
  treasureid_ = 0;
  clear_has_treasureid();
}
inline ::google::protobuf::int32 TreasureHuntRecord::treasureid() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.treasureId)
  return treasureid_;
}
inline void TreasureHuntRecord::set_treasureid(::google::protobuf::int32 value) {
  set_has_treasureid();
  treasureid_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.treasureId)
}

// required int32 playerId = 4;
inline bool TreasureHuntRecord::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureHuntRecord::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureHuntRecord::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureHuntRecord::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 TreasureHuntRecord::playerid() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.playerId)
  return playerid_;
}
inline void TreasureHuntRecord::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.playerId)
}

// required string name = 5;
inline bool TreasureHuntRecord::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TreasureHuntRecord::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TreasureHuntRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TreasureHuntRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TreasureHuntRecord::name() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.name)
  return *name_;
}
inline void TreasureHuntRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.name)
}
inline void TreasureHuntRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgLocal.TreasureHuntRecord.name)
}
inline void TreasureHuntRecord::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgLocal.TreasureHuntRecord.name)
}
inline ::std::string* TreasureHuntRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgLocal.TreasureHuntRecord.name)
  return name_;
}
inline ::std::string* TreasureHuntRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TreasureHuntRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgLocal.TreasureHuntRecord.name)
}

// required int32 career = 6;
inline bool TreasureHuntRecord::has_career() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TreasureHuntRecord::set_has_career() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TreasureHuntRecord::clear_has_career() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TreasureHuntRecord::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 TreasureHuntRecord::career() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.career)
  return career_;
}
inline void TreasureHuntRecord::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.career)
}

// required int32 level = 7;
inline bool TreasureHuntRecord::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TreasureHuntRecord::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TreasureHuntRecord::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TreasureHuntRecord::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 TreasureHuntRecord::level() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.level)
  return level_;
}
inline void TreasureHuntRecord::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.level)
}

// required int32 careerLevel = 8;
inline bool TreasureHuntRecord::has_careerlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TreasureHuntRecord::set_has_careerlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TreasureHuntRecord::clear_has_careerlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TreasureHuntRecord::clear_careerlevel() {
  careerlevel_ = 0;
  clear_has_careerlevel();
}
inline ::google::protobuf::int32 TreasureHuntRecord::careerlevel() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.careerLevel)
  return careerlevel_;
}
inline void TreasureHuntRecord::set_careerlevel(::google::protobuf::int32 value) {
  set_has_careerlevel();
  careerlevel_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.careerLevel)
}

// required int32 drawDt = 9;
inline bool TreasureHuntRecord::has_drawdt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TreasureHuntRecord::set_has_drawdt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TreasureHuntRecord::clear_has_drawdt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TreasureHuntRecord::clear_drawdt() {
  drawdt_ = 0;
  clear_has_drawdt();
}
inline ::google::protobuf::int32 TreasureHuntRecord::drawdt() const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecord.drawDt)
  return drawdt_;
}
inline void TreasureHuntRecord::set_drawdt(::google::protobuf::int32 value) {
  set_has_drawdt();
  drawdt_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.TreasureHuntRecord.drawDt)
}

// -------------------------------------------------------------------

// LevelRewardRecord

// required int32 careerLevel = 1;
inline bool LevelRewardRecord::has_careerlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelRewardRecord::set_has_careerlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelRewardRecord::clear_has_careerlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelRewardRecord::clear_careerlevel() {
  careerlevel_ = 0;
  clear_has_careerlevel();
}
inline ::google::protobuf::int32 LevelRewardRecord::careerlevel() const {
  // @@protoc_insertion_point(field_get:MsgLocal.LevelRewardRecord.careerLevel)
  return careerlevel_;
}
inline void LevelRewardRecord::set_careerlevel(::google::protobuf::int32 value) {
  set_has_careerlevel();
  careerlevel_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.LevelRewardRecord.careerLevel)
}

// required int32 level = 2;
inline bool LevelRewardRecord::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelRewardRecord::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelRewardRecord::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelRewardRecord::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 LevelRewardRecord::level() const {
  // @@protoc_insertion_point(field_get:MsgLocal.LevelRewardRecord.level)
  return level_;
}
inline void LevelRewardRecord::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.LevelRewardRecord.level)
}

// required int32 leftCount = 3;
inline bool LevelRewardRecord::has_leftcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelRewardRecord::set_has_leftcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelRewardRecord::clear_has_leftcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelRewardRecord::clear_leftcount() {
  leftcount_ = 0;
  clear_has_leftcount();
}
inline ::google::protobuf::int32 LevelRewardRecord::leftcount() const {
  // @@protoc_insertion_point(field_get:MsgLocal.LevelRewardRecord.leftCount)
  return leftcount_;
}
inline void LevelRewardRecord::set_leftcount(::google::protobuf::int32 value) {
  set_has_leftcount();
  leftcount_ = value;
  // @@protoc_insertion_point(field_set:MsgLocal.LevelRewardRecord.leftCount)
}

// -------------------------------------------------------------------

// LevelRewardRecords

// repeated .MsgLocal.LevelRewardRecord records = 1;
inline int LevelRewardRecords::records_size() const {
  return records_.size();
}
inline void LevelRewardRecords::clear_records() {
  records_.Clear();
}
inline const ::MsgLocal::LevelRewardRecord& LevelRewardRecords::records(int index) const {
  // @@protoc_insertion_point(field_get:MsgLocal.LevelRewardRecords.records)
  return records_.Get(index);
}
inline ::MsgLocal::LevelRewardRecord* LevelRewardRecords::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:MsgLocal.LevelRewardRecords.records)
  return records_.Mutable(index);
}
inline ::MsgLocal::LevelRewardRecord* LevelRewardRecords::add_records() {
  // @@protoc_insertion_point(field_add:MsgLocal.LevelRewardRecords.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgLocal::LevelRewardRecord >&
LevelRewardRecords::records() const {
  // @@protoc_insertion_point(field_list:MsgLocal.LevelRewardRecords.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgLocal::LevelRewardRecord >*
LevelRewardRecords::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:MsgLocal.LevelRewardRecords.records)
  return &records_;
}

// -------------------------------------------------------------------

// TreasureHuntRecords

// repeated .MsgLocal.TreasureHuntRecord records = 1;
inline int TreasureHuntRecords::records_size() const {
  return records_.size();
}
inline void TreasureHuntRecords::clear_records() {
  records_.Clear();
}
inline const ::MsgLocal::TreasureHuntRecord& TreasureHuntRecords::records(int index) const {
  // @@protoc_insertion_point(field_get:MsgLocal.TreasureHuntRecords.records)
  return records_.Get(index);
}
inline ::MsgLocal::TreasureHuntRecord* TreasureHuntRecords::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:MsgLocal.TreasureHuntRecords.records)
  return records_.Mutable(index);
}
inline ::MsgLocal::TreasureHuntRecord* TreasureHuntRecords::add_records() {
  // @@protoc_insertion_point(field_add:MsgLocal.TreasureHuntRecords.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgLocal::TreasureHuntRecord >&
TreasureHuntRecords::records() const {
  // @@protoc_insertion_point(field_list:MsgLocal.TreasureHuntRecords.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgLocal::TreasureHuntRecord >*
TreasureHuntRecords::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:MsgLocal.TreasureHuntRecords.records)
  return &records_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgLocal

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgLocal_2eproto__INCLUDED
