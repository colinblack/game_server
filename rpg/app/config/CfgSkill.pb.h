// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgSkill.proto

#ifndef PROTOBUF_CfgSkill_2eproto__INCLUDED
#define PROTOBUF_CfgSkill_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CfgCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace CfgSkill {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgSkill_2eproto();
void protobuf_AssignDesc_CfgSkill_2eproto();
void protobuf_ShutdownFile_CfgSkill_2eproto();

class Skill;
class Skills;
class Monsters;
class Base;
class Bases;

// ===================================================================

class Skill : public ::google::protobuf::Message {
 public:
  Skill();
  virtual ~Skill();

  Skill(const Skill& from);

  inline Skill& operator=(const Skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill& default_instance();

  void Swap(Skill* other);

  // implements Message ----------------------------------------------

  Skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill& from);
  void MergeFrom(const Skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 serial = 1;
  inline bool has_serial() const;
  inline void clear_serial();
  static const int kSerialFieldNumber = 1;
  inline ::google::protobuf::uint32 serial() const;
  inline void set_serial(::google::protobuf::uint32 value);

  // required uint32 career = 2;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 2;
  inline ::google::protobuf::uint32 career() const;
  inline void set_career(::google::protobuf::uint32 value);

  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cd = 4;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 4;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // required uint32 range = 5;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 5;
  inline ::google::protobuf::uint32 range() const;
  inline void set_range(::google::protobuf::uint32 value);

  // required uint32 range2 = 6;
  inline bool has_range2() const;
  inline void clear_range2();
  static const int kRange2FieldNumber = 6;
  inline ::google::protobuf::uint32 range2() const;
  inline void set_range2(::google::protobuf::uint32 value);

  // required uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string buff = 8;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 8;
  inline const ::std::string& buff() const;
  inline void set_buff(const ::std::string& value);
  inline void set_buff(const char* value);
  inline void set_buff(const char* value, size_t size);
  inline ::std::string* mutable_buff();
  inline ::std::string* release_buff();
  inline void set_allocated_buff(::std::string* buff);

  // required uint32 type = 9;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 type2 = 10;
  inline bool has_type2() const;
  inline void clear_type2();
  static const int kType2FieldNumber = 10;
  inline ::google::protobuf::uint32 type2() const;
  inline void set_type2(::google::protobuf::uint32 value);

  // required uint32 hurt = 11;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 11;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);

  // required uint32 unlock = 12;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 12;
  inline ::google::protobuf::uint32 unlock() const;
  inline void set_unlock(::google::protobuf::uint32 value);

  // required uint32 cost = 13;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 13;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // optional uint32 careerlevel = 14;
  inline bool has_careerlevel() const;
  inline void clear_careerlevel();
  static const int kCareerlevelFieldNumber = 14;
  inline ::google::protobuf::uint32 careerlevel() const;
  inline void set_careerlevel(::google::protobuf::uint32 value);

  // repeated .CfgCommon.Attribute attr = 15;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 15;
  inline const ::CfgCommon::Attribute& attr(int index) const;
  inline ::CfgCommon::Attribute* mutable_attr(int index);
  inline ::CfgCommon::Attribute* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:CfgSkill.Skill)
 private:
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_range();
  inline void clear_has_range();
  inline void set_has_range2();
  inline void clear_has_range2();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_type2();
  inline void clear_has_type2();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_careerlevel();
  inline void clear_has_careerlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 serial_;
  ::google::protobuf::uint32 career_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cd_;
  ::google::protobuf::uint32 range_;
  ::google::protobuf::uint32 range2_;
  ::std::string* buff_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 type2_;
  ::google::protobuf::uint32 hurt_;
  ::google::protobuf::uint32 unlock_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute > attr_;
  ::google::protobuf::uint32 careerlevel_;
  friend void  protobuf_AddDesc_CfgSkill_2eproto();
  friend void protobuf_AssignDesc_CfgSkill_2eproto();
  friend void protobuf_ShutdownFile_CfgSkill_2eproto();

  void InitAsDefaultInstance();
  static Skill* default_instance_;
};
// -------------------------------------------------------------------

class Skills : public ::google::protobuf::Message {
 public:
  Skills();
  virtual ~Skills();

  Skills(const Skills& from);

  inline Skills& operator=(const Skills& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skills& default_instance();

  void Swap(Skills* other);

  // implements Message ----------------------------------------------

  Skills* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skills& from);
  void MergeFrom(const Skills& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgSkill.Skill skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::CfgSkill::Skill& skills(int index) const;
  inline ::CfgSkill::Skill* mutable_skills(int index);
  inline ::CfgSkill::Skill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:CfgSkill.Skills)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill > skills_;
  friend void  protobuf_AddDesc_CfgSkill_2eproto();
  friend void protobuf_AssignDesc_CfgSkill_2eproto();
  friend void protobuf_ShutdownFile_CfgSkill_2eproto();

  void InitAsDefaultInstance();
  static Skills* default_instance_;
};
// -------------------------------------------------------------------

class Monsters : public ::google::protobuf::Message {
 public:
  Monsters();
  virtual ~Monsters();

  Monsters(const Monsters& from);

  inline Monsters& operator=(const Monsters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Monsters& default_instance();

  void Swap(Monsters* other);

  // implements Message ----------------------------------------------

  Monsters* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Monsters& from);
  void MergeFrom(const Monsters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgSkill.Skill monsters = 1;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 1;
  inline const ::CfgSkill::Skill& monsters(int index) const;
  inline ::CfgSkill::Skill* mutable_monsters(int index);
  inline ::CfgSkill::Skill* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >*
      mutable_monsters();

  // @@protoc_insertion_point(class_scope:CfgSkill.Monsters)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill > monsters_;
  friend void  protobuf_AddDesc_CfgSkill_2eproto();
  friend void protobuf_AssignDesc_CfgSkill_2eproto();
  friend void protobuf_ShutdownFile_CfgSkill_2eproto();

  void InitAsDefaultInstance();
  static Monsters* default_instance_;
};
// -------------------------------------------------------------------

class Base : public ::google::protobuf::Message {
 public:
  Base();
  virtual ~Base();

  Base(const Base& from);

  inline Base& operator=(const Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Base& default_instance();

  void Swap(Base* other);

  // implements Message ----------------------------------------------

  Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Base& from);
  void MergeFrom(const Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cost = 2;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 2;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // required uint32 xishu = 3;
  inline bool has_xishu() const;
  inline void clear_xishu();
  static const int kXishuFieldNumber = 3;
  inline ::google::protobuf::uint32 xishu() const;
  inline void set_xishu(::google::protobuf::uint32 value);

  // required uint32 hurt = 4;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 4;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);

  // required uint32 unlocklevel = 5;
  inline bool has_unlocklevel() const;
  inline void clear_unlocklevel();
  static const int kUnlocklevelFieldNumber = 5;
  inline ::google::protobuf::uint32 unlocklevel() const;
  inline void set_unlocklevel(::google::protobuf::uint32 value);

  // required uint32 hurtAdd = 6;
  inline bool has_hurtadd() const;
  inline void clear_hurtadd();
  static const int kHurtAddFieldNumber = 6;
  inline ::google::protobuf::uint32 hurtadd() const;
  inline void set_hurtadd(::google::protobuf::uint32 value);

  // required uint32 maxLevel = 7;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);

  // required uint32 learnLevel = 8;
  inline bool has_learnlevel() const;
  inline void clear_learnlevel();
  static const int kLearnLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 learnlevel() const;
  inline void set_learnlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgSkill.Base)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_xishu();
  inline void clear_has_xishu();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_unlocklevel();
  inline void clear_has_unlocklevel();
  inline void set_has_hurtadd();
  inline void clear_has_hurtadd();
  inline void set_has_maxlevel();
  inline void clear_has_maxlevel();
  inline void set_has_learnlevel();
  inline void clear_has_learnlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::uint32 xishu_;
  ::google::protobuf::uint32 hurt_;
  ::google::protobuf::uint32 unlocklevel_;
  ::google::protobuf::uint32 hurtadd_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 learnlevel_;
  friend void  protobuf_AddDesc_CfgSkill_2eproto();
  friend void protobuf_AssignDesc_CfgSkill_2eproto();
  friend void protobuf_ShutdownFile_CfgSkill_2eproto();

  void InitAsDefaultInstance();
  static Base* default_instance_;
};
// -------------------------------------------------------------------

class Bases : public ::google::protobuf::Message {
 public:
  Bases();
  virtual ~Bases();

  Bases(const Bases& from);

  inline Bases& operator=(const Bases& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bases& default_instance();

  void Swap(Bases* other);

  // implements Message ----------------------------------------------

  Bases* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bases& from);
  void MergeFrom(const Bases& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgSkill.Base bases = 1;
  inline int bases_size() const;
  inline void clear_bases();
  static const int kBasesFieldNumber = 1;
  inline const ::CfgSkill::Base& bases(int index) const;
  inline ::CfgSkill::Base* mutable_bases(int index);
  inline ::CfgSkill::Base* add_bases();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Base >&
      bases() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Base >*
      mutable_bases();

  // @@protoc_insertion_point(class_scope:CfgSkill.Bases)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgSkill::Base > bases_;
  friend void  protobuf_AddDesc_CfgSkill_2eproto();
  friend void protobuf_AssignDesc_CfgSkill_2eproto();
  friend void protobuf_ShutdownFile_CfgSkill_2eproto();

  void InitAsDefaultInstance();
  static Bases* default_instance_;
};
// ===================================================================


// ===================================================================

// Skill

// required uint32 serial = 1;
inline bool Skill::has_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill::set_has_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill::clear_has_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill::clear_serial() {
  serial_ = 0u;
  clear_has_serial();
}
inline ::google::protobuf::uint32 Skill::serial() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.serial)
  return serial_;
}
inline void Skill::set_serial(::google::protobuf::uint32 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.serial)
}

// required uint32 career = 2;
inline bool Skill::has_career() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill::set_has_career() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill::clear_has_career() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill::clear_career() {
  career_ = 0u;
  clear_has_career();
}
inline ::google::protobuf::uint32 Skill::career() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.career)
  return career_;
}
inline void Skill::set_career(::google::protobuf::uint32 value) {
  set_has_career();
  career_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.career)
}

// required uint32 id = 3;
inline bool Skill::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Skill::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Skill::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Skill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Skill::id() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.id)
  return id_;
}
inline void Skill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.id)
}

// required uint32 cd = 4;
inline bool Skill::has_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Skill::set_has_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Skill::clear_has_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Skill::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 Skill::cd() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.cd)
  return cd_;
}
inline void Skill::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.cd)
}

// required uint32 range = 5;
inline bool Skill::has_range() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Skill::set_has_range() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Skill::clear_has_range() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Skill::clear_range() {
  range_ = 0u;
  clear_has_range();
}
inline ::google::protobuf::uint32 Skill::range() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.range)
  return range_;
}
inline void Skill::set_range(::google::protobuf::uint32 value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.range)
}

// required uint32 range2 = 6;
inline bool Skill::has_range2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Skill::set_has_range2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Skill::clear_has_range2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Skill::clear_range2() {
  range2_ = 0u;
  clear_has_range2();
}
inline ::google::protobuf::uint32 Skill::range2() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.range2)
  return range2_;
}
inline void Skill::set_range2(::google::protobuf::uint32 value) {
  set_has_range2();
  range2_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.range2)
}

// required uint32 level = 7;
inline bool Skill::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Skill::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Skill::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Skill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Skill::level() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.level)
  return level_;
}
inline void Skill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.level)
}

// required string buff = 8;
inline bool Skill::has_buff() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Skill::set_has_buff() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Skill::clear_has_buff() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Skill::clear_buff() {
  if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_->clear();
  }
  clear_has_buff();
}
inline const ::std::string& Skill::buff() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.buff)
  return *buff_;
}
inline void Skill::set_buff(const ::std::string& value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.buff)
}
inline void Skill::set_buff(const char* value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
  // @@protoc_insertion_point(field_set_char:CfgSkill.Skill.buff)
}
inline void Skill::set_buff(const char* value, size_t size) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CfgSkill.Skill.buff)
}
inline ::std::string* Skill::mutable_buff() {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CfgSkill.Skill.buff)
  return buff_;
}
inline ::std::string* Skill::release_buff() {
  clear_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buff_;
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Skill::set_allocated_buff(::std::string* buff) {
  if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buff_;
  }
  if (buff) {
    set_has_buff();
    buff_ = buff;
  } else {
    clear_has_buff();
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CfgSkill.Skill.buff)
}

// required uint32 type = 9;
inline bool Skill::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Skill::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Skill::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Skill::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Skill::type() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.type)
  return type_;
}
inline void Skill::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.type)
}

// required uint32 type2 = 10;
inline bool Skill::has_type2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Skill::set_has_type2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Skill::clear_has_type2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Skill::clear_type2() {
  type2_ = 0u;
  clear_has_type2();
}
inline ::google::protobuf::uint32 Skill::type2() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.type2)
  return type2_;
}
inline void Skill::set_type2(::google::protobuf::uint32 value) {
  set_has_type2();
  type2_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.type2)
}

// required uint32 hurt = 11;
inline bool Skill::has_hurt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Skill::set_has_hurt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Skill::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Skill::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 Skill::hurt() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.hurt)
  return hurt_;
}
inline void Skill::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.hurt)
}

// required uint32 unlock = 12;
inline bool Skill::has_unlock() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Skill::set_has_unlock() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Skill::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Skill::clear_unlock() {
  unlock_ = 0u;
  clear_has_unlock();
}
inline ::google::protobuf::uint32 Skill::unlock() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.unlock)
  return unlock_;
}
inline void Skill::set_unlock(::google::protobuf::uint32 value) {
  set_has_unlock();
  unlock_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.unlock)
}

// required uint32 cost = 13;
inline bool Skill::has_cost() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Skill::set_has_cost() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Skill::clear_has_cost() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Skill::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 Skill::cost() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.cost)
  return cost_;
}
inline void Skill::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.cost)
}

// optional uint32 careerlevel = 14;
inline bool Skill::has_careerlevel() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Skill::set_has_careerlevel() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Skill::clear_has_careerlevel() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Skill::clear_careerlevel() {
  careerlevel_ = 0u;
  clear_has_careerlevel();
}
inline ::google::protobuf::uint32 Skill::careerlevel() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.careerlevel)
  return careerlevel_;
}
inline void Skill::set_careerlevel(::google::protobuf::uint32 value) {
  set_has_careerlevel();
  careerlevel_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Skill.careerlevel)
}

// repeated .CfgCommon.Attribute attr = 15;
inline int Skill::attr_size() const {
  return attr_.size();
}
inline void Skill::clear_attr() {
  attr_.Clear();
}
inline const ::CfgCommon::Attribute& Skill::attr(int index) const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skill.attr)
  return attr_.Get(index);
}
inline ::CfgCommon::Attribute* Skill::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:CfgSkill.Skill.attr)
  return attr_.Mutable(index);
}
inline ::CfgCommon::Attribute* Skill::add_attr() {
  // @@protoc_insertion_point(field_add:CfgSkill.Skill.attr)
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >&
Skill::attr() const {
  // @@protoc_insertion_point(field_list:CfgSkill.Skill.attr)
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgCommon::Attribute >*
Skill::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:CfgSkill.Skill.attr)
  return &attr_;
}

// -------------------------------------------------------------------

// Skills

// repeated .CfgSkill.Skill skills = 1;
inline int Skills::skills_size() const {
  return skills_.size();
}
inline void Skills::clear_skills() {
  skills_.Clear();
}
inline const ::CfgSkill::Skill& Skills::skills(int index) const {
  // @@protoc_insertion_point(field_get:CfgSkill.Skills.skills)
  return skills_.Get(index);
}
inline ::CfgSkill::Skill* Skills::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:CfgSkill.Skills.skills)
  return skills_.Mutable(index);
}
inline ::CfgSkill::Skill* Skills::add_skills() {
  // @@protoc_insertion_point(field_add:CfgSkill.Skills.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >&
Skills::skills() const {
  // @@protoc_insertion_point(field_list:CfgSkill.Skills.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >*
Skills::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:CfgSkill.Skills.skills)
  return &skills_;
}

// -------------------------------------------------------------------

// Monsters

// repeated .CfgSkill.Skill monsters = 1;
inline int Monsters::monsters_size() const {
  return monsters_.size();
}
inline void Monsters::clear_monsters() {
  monsters_.Clear();
}
inline const ::CfgSkill::Skill& Monsters::monsters(int index) const {
  // @@protoc_insertion_point(field_get:CfgSkill.Monsters.monsters)
  return monsters_.Get(index);
}
inline ::CfgSkill::Skill* Monsters::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:CfgSkill.Monsters.monsters)
  return monsters_.Mutable(index);
}
inline ::CfgSkill::Skill* Monsters::add_monsters() {
  // @@protoc_insertion_point(field_add:CfgSkill.Monsters.monsters)
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >&
Monsters::monsters() const {
  // @@protoc_insertion_point(field_list:CfgSkill.Monsters.monsters)
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Skill >*
Monsters::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:CfgSkill.Monsters.monsters)
  return &monsters_;
}

// -------------------------------------------------------------------

// Base

// required uint32 id = 1;
inline bool Base::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Base::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Base::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Base::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Base::id() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.id)
  return id_;
}
inline void Base::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.id)
}

// required uint32 cost = 2;
inline bool Base::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Base::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Base::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Base::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 Base::cost() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.cost)
  return cost_;
}
inline void Base::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.cost)
}

// required uint32 xishu = 3;
inline bool Base::has_xishu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Base::set_has_xishu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Base::clear_has_xishu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Base::clear_xishu() {
  xishu_ = 0u;
  clear_has_xishu();
}
inline ::google::protobuf::uint32 Base::xishu() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.xishu)
  return xishu_;
}
inline void Base::set_xishu(::google::protobuf::uint32 value) {
  set_has_xishu();
  xishu_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.xishu)
}

// required uint32 hurt = 4;
inline bool Base::has_hurt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Base::set_has_hurt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Base::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Base::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 Base::hurt() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.hurt)
  return hurt_;
}
inline void Base::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.hurt)
}

// required uint32 unlocklevel = 5;
inline bool Base::has_unlocklevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Base::set_has_unlocklevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Base::clear_has_unlocklevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Base::clear_unlocklevel() {
  unlocklevel_ = 0u;
  clear_has_unlocklevel();
}
inline ::google::protobuf::uint32 Base::unlocklevel() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.unlocklevel)
  return unlocklevel_;
}
inline void Base::set_unlocklevel(::google::protobuf::uint32 value) {
  set_has_unlocklevel();
  unlocklevel_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.unlocklevel)
}

// required uint32 hurtAdd = 6;
inline bool Base::has_hurtadd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Base::set_has_hurtadd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Base::clear_has_hurtadd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Base::clear_hurtadd() {
  hurtadd_ = 0u;
  clear_has_hurtadd();
}
inline ::google::protobuf::uint32 Base::hurtadd() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.hurtAdd)
  return hurtadd_;
}
inline void Base::set_hurtadd(::google::protobuf::uint32 value) {
  set_has_hurtadd();
  hurtadd_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.hurtAdd)
}

// required uint32 maxLevel = 7;
inline bool Base::has_maxlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Base::set_has_maxlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Base::clear_has_maxlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Base::clear_maxlevel() {
  maxlevel_ = 0u;
  clear_has_maxlevel();
}
inline ::google::protobuf::uint32 Base::maxlevel() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.maxLevel)
  return maxlevel_;
}
inline void Base::set_maxlevel(::google::protobuf::uint32 value) {
  set_has_maxlevel();
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.maxLevel)
}

// required uint32 learnLevel = 8;
inline bool Base::has_learnlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Base::set_has_learnlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Base::clear_has_learnlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Base::clear_learnlevel() {
  learnlevel_ = 0u;
  clear_has_learnlevel();
}
inline ::google::protobuf::uint32 Base::learnlevel() const {
  // @@protoc_insertion_point(field_get:CfgSkill.Base.learnLevel)
  return learnlevel_;
}
inline void Base::set_learnlevel(::google::protobuf::uint32 value) {
  set_has_learnlevel();
  learnlevel_ = value;
  // @@protoc_insertion_point(field_set:CfgSkill.Base.learnLevel)
}

// -------------------------------------------------------------------

// Bases

// repeated .CfgSkill.Base bases = 1;
inline int Bases::bases_size() const {
  return bases_.size();
}
inline void Bases::clear_bases() {
  bases_.Clear();
}
inline const ::CfgSkill::Base& Bases::bases(int index) const {
  // @@protoc_insertion_point(field_get:CfgSkill.Bases.bases)
  return bases_.Get(index);
}
inline ::CfgSkill::Base* Bases::mutable_bases(int index) {
  // @@protoc_insertion_point(field_mutable:CfgSkill.Bases.bases)
  return bases_.Mutable(index);
}
inline ::CfgSkill::Base* Bases::add_bases() {
  // @@protoc_insertion_point(field_add:CfgSkill.Bases.bases)
  return bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgSkill::Base >&
Bases::bases() const {
  // @@protoc_insertion_point(field_list:CfgSkill.Bases.bases)
  return bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgSkill::Base >*
Bases::mutable_bases() {
  // @@protoc_insertion_point(field_mutable_list:CfgSkill.Bases.bases)
  return &bases_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgSkill

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgSkill_2eproto__INCLUDED
