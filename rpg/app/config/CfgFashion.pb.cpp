// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgFashion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CfgFashion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CfgFashion {

namespace {

const ::google::protobuf::Descriptor* SkillAndLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillAndLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* Fashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Fashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* Fashions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Fashions_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CfgFashion_2eproto() {
  protobuf_AddDesc_CfgFashion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CfgFashion.proto");
  GOOGLE_CHECK(file != NULL);
  SkillAndLevel_descriptor_ = file->message_type(0);
  static const int SkillAndLevel_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillAndLevel, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillAndLevel, level_),
  };
  SkillAndLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillAndLevel_descriptor_,
      SkillAndLevel::default_instance_,
      SkillAndLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillAndLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillAndLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillAndLevel));
  Fashion_descriptor_ = file->message_type(1);
  static const int Fashion_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, itemcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, limittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, skillandlevel_),
  };
  Fashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Fashion_descriptor_,
      Fashion::default_instance_,
      Fashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Fashion));
  Fashions_descriptor_ = file->message_type(2);
  static const int Fashions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashions, fashions_),
  };
  Fashions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Fashions_descriptor_,
      Fashions::default_instance_,
      Fashions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fashions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Fashions));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CfgFashion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillAndLevel_descriptor_, &SkillAndLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Fashion_descriptor_, &Fashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Fashions_descriptor_, &Fashions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CfgFashion_2eproto() {
  delete SkillAndLevel::default_instance_;
  delete SkillAndLevel_reflection_;
  delete Fashion::default_instance_;
  delete Fashion_reflection_;
  delete Fashions::default_instance_;
  delete Fashions_reflection_;
}

void protobuf_AddDesc_CfgFashion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CfgCommon::protobuf_AddDesc_CfgCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020CfgFashion.proto\022\nCfgFashion\032\017CfgCommo"
    "n.proto\"/\n\rSkillAndLevel\022\017\n\007SkillId\030\001 \002("
    "\r\022\r\n\005level\030\002 \002(\r\"\322\001\n\007Fashion\022\n\n\002id\030\001 \002(\r"
    "\022\016\n\006itemId\030\002 \002(\r\022\021\n\titemCount\030\003 \002(\r\022\r\n\005l"
    "evel\030\004 \002(\r\022\021\n\tlimitTime\030\005 \002(\r\022\017\n\007skillID"
    "\030\006 \002(\r\022\017\n\007modelID\030\007 \002(\r\022\"\n\004attr\030\010 \003(\0132\024."
    "CfgCommon.Attribute\0220\n\rskillAndLevel\030\t \003"
    "(\0132\031.CfgFashion.SkillAndLevel\"1\n\010Fashion"
    "s\022%\n\010fashions\030\001 \003(\0132\023.CfgFashion.Fashion", 360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CfgFashion.proto", &protobuf_RegisterTypes);
  SkillAndLevel::default_instance_ = new SkillAndLevel();
  Fashion::default_instance_ = new Fashion();
  Fashions::default_instance_ = new Fashions();
  SkillAndLevel::default_instance_->InitAsDefaultInstance();
  Fashion::default_instance_->InitAsDefaultInstance();
  Fashions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CfgFashion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CfgFashion_2eproto {
  StaticDescriptorInitializer_CfgFashion_2eproto() {
    protobuf_AddDesc_CfgFashion_2eproto();
  }
} static_descriptor_initializer_CfgFashion_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SkillAndLevel::kSkillIdFieldNumber;
const int SkillAndLevel::kLevelFieldNumber;
#endif  // !_MSC_VER

SkillAndLevel::SkillAndLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgFashion.SkillAndLevel)
}

void SkillAndLevel::InitAsDefaultInstance() {
}

SkillAndLevel::SkillAndLevel(const SkillAndLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgFashion.SkillAndLevel)
}

void SkillAndLevel::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillAndLevel::~SkillAndLevel() {
  // @@protoc_insertion_point(destructor:CfgFashion.SkillAndLevel)
  SharedDtor();
}

void SkillAndLevel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillAndLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillAndLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillAndLevel_descriptor_;
}

const SkillAndLevel& SkillAndLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgFashion_2eproto();
  return *default_instance_;
}

SkillAndLevel* SkillAndLevel::default_instance_ = NULL;

SkillAndLevel* SkillAndLevel::New() const {
  return new SkillAndLevel;
}

void SkillAndLevel::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SkillAndLevel*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(skillid_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillAndLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgFashion.SkillAndLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 SkillId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgFashion.SkillAndLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgFashion.SkillAndLevel)
  return false;
#undef DO_
}

void SkillAndLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgFashion.SkillAndLevel)
  // required uint32 SkillId = 1;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgFashion.SkillAndLevel)
}

::google::protobuf::uint8* SkillAndLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgFashion.SkillAndLevel)
  // required uint32 SkillId = 1;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgFashion.SkillAndLevel)
  return target;
}

int SkillAndLevel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 SkillId = 1;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillAndLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillAndLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillAndLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillAndLevel::MergeFrom(const SkillAndLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillAndLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillAndLevel::CopyFrom(const SkillAndLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillAndLevel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SkillAndLevel::Swap(SkillAndLevel* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillAndLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillAndLevel_descriptor_;
  metadata.reflection = SkillAndLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Fashion::kIdFieldNumber;
const int Fashion::kItemIdFieldNumber;
const int Fashion::kItemCountFieldNumber;
const int Fashion::kLevelFieldNumber;
const int Fashion::kLimitTimeFieldNumber;
const int Fashion::kSkillIDFieldNumber;
const int Fashion::kModelIDFieldNumber;
const int Fashion::kAttrFieldNumber;
const int Fashion::kSkillAndLevelFieldNumber;
#endif  // !_MSC_VER

Fashion::Fashion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgFashion.Fashion)
}

void Fashion::InitAsDefaultInstance() {
}

Fashion::Fashion(const Fashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgFashion.Fashion)
}

void Fashion::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  itemid_ = 0u;
  itemcount_ = 0u;
  level_ = 0u;
  limittime_ = 0u;
  skillid_ = 0u;
  modelid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Fashion::~Fashion() {
  // @@protoc_insertion_point(destructor:CfgFashion.Fashion)
  SharedDtor();
}

void Fashion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Fashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Fashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Fashion_descriptor_;
}

const Fashion& Fashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgFashion_2eproto();
  return *default_instance_;
}

Fashion* Fashion::default_instance_ = NULL;

Fashion* Fashion::New() const {
  return new Fashion;
}

void Fashion::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Fashion*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(id_, skillid_);
    modelid_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  attr_.Clear();
  skillandlevel_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Fashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgFashion.Fashion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_itemId;
        break;
      }

      // required uint32 itemId = 2;
      case 2: {
        if (tag == 16) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemCount;
        break;
      }

      // required uint32 itemCount = 3;
      case 3: {
        if (tag == 24) {
         parse_itemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }

      // required uint32 level = 4;
      case 4: {
        if (tag == 32) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_limitTime;
        break;
      }

      // required uint32 limitTime = 5;
      case 5: {
        if (tag == 40) {
         parse_limitTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limittime_)));
          set_has_limittime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skillID;
        break;
      }

      // required uint32 skillID = 6;
      case 6: {
        if (tag == 48) {
         parse_skillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_modelID;
        break;
      }

      // required uint32 modelID = 7;
      case 7: {
        if (tag == 56) {
         parse_modelID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modelid_)));
          set_has_modelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_attr;
        break;
      }

      // repeated .CfgCommon.Attribute attr = 8;
      case 8: {
        if (tag == 66) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_attr;
        if (input->ExpectTag(74)) goto parse_skillAndLevel;
        break;
      }

      // repeated .CfgFashion.SkillAndLevel skillAndLevel = 9;
      case 9: {
        if (tag == 74) {
         parse_skillAndLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillandlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_skillAndLevel;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgFashion.Fashion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgFashion.Fashion)
  return false;
#undef DO_
}

void Fashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgFashion.Fashion)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 itemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemid(), output);
  }

  // required uint32 itemCount = 3;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemcount(), output);
  }

  // required uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // required uint32 limitTime = 5;
  if (has_limittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->limittime(), output);
  }

  // required uint32 skillID = 6;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->skillid(), output);
  }

  // required uint32 modelID = 7;
  if (has_modelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->modelid(), output);
  }

  // repeated .CfgCommon.Attribute attr = 8;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->attr(i), output);
  }

  // repeated .CfgFashion.SkillAndLevel skillAndLevel = 9;
  for (int i = 0; i < this->skillandlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->skillandlevel(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgFashion.Fashion)
}

::google::protobuf::uint8* Fashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgFashion.Fashion)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 itemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemid(), target);
  }

  // required uint32 itemCount = 3;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemcount(), target);
  }

  // required uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // required uint32 limitTime = 5;
  if (has_limittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->limittime(), target);
  }

  // required uint32 skillID = 6;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->skillid(), target);
  }

  // required uint32 modelID = 7;
  if (has_modelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->modelid(), target);
  }

  // repeated .CfgCommon.Attribute attr = 8;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->attr(i), target);
  }

  // repeated .CfgFashion.SkillAndLevel skillAndLevel = 9;
  for (int i = 0; i < this->skillandlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->skillandlevel(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgFashion.Fashion)
  return target;
}

int Fashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // required uint32 itemCount = 3;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemcount());
    }

    // required uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 limitTime = 5;
    if (has_limittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limittime());
    }

    // required uint32 skillID = 6;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // required uint32 modelID = 7;
    if (has_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modelid());
    }

  }
  // repeated .CfgCommon.Attribute attr = 8;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  // repeated .CfgFashion.SkillAndLevel skillAndLevel = 9;
  total_size += 1 * this->skillandlevel_size();
  for (int i = 0; i < this->skillandlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillandlevel(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Fashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Fashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Fashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Fashion::MergeFrom(const Fashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  skillandlevel_.MergeFrom(from.skillandlevel_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_limittime()) {
      set_limittime(from.limittime());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_modelid()) {
      set_modelid(from.modelid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Fashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fashion::CopyFrom(const Fashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->attr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->skillandlevel())) return false;
  return true;
}

void Fashion::Swap(Fashion* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(level_, other->level_);
    std::swap(limittime_, other->limittime_);
    std::swap(skillid_, other->skillid_);
    std::swap(modelid_, other->modelid_);
    attr_.Swap(&other->attr_);
    skillandlevel_.Swap(&other->skillandlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Fashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Fashion_descriptor_;
  metadata.reflection = Fashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Fashions::kFashionsFieldNumber;
#endif  // !_MSC_VER

Fashions::Fashions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CfgFashion.Fashions)
}

void Fashions::InitAsDefaultInstance() {
}

Fashions::Fashions(const Fashions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CfgFashion.Fashions)
}

void Fashions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Fashions::~Fashions() {
  // @@protoc_insertion_point(destructor:CfgFashion.Fashions)
  SharedDtor();
}

void Fashions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Fashions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Fashions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Fashions_descriptor_;
}

const Fashions& Fashions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CfgFashion_2eproto();
  return *default_instance_;
}

Fashions* Fashions::default_instance_ = NULL;

Fashions* Fashions::New() const {
  return new Fashions;
}

void Fashions::Clear() {
  fashions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Fashions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CfgFashion.Fashions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CfgFashion.Fashion fashions = 1;
      case 1: {
        if (tag == 10) {
         parse_fashions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_fashions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CfgFashion.Fashions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CfgFashion.Fashions)
  return false;
#undef DO_
}

void Fashions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CfgFashion.Fashions)
  // repeated .CfgFashion.Fashion fashions = 1;
  for (int i = 0; i < this->fashions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fashions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CfgFashion.Fashions)
}

::google::protobuf::uint8* Fashions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgFashion.Fashions)
  // repeated .CfgFashion.Fashion fashions = 1;
  for (int i = 0; i < this->fashions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fashions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgFashion.Fashions)
  return target;
}

int Fashions::ByteSize() const {
  int total_size = 0;

  // repeated .CfgFashion.Fashion fashions = 1;
  total_size += 1 * this->fashions_size();
  for (int i = 0; i < this->fashions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Fashions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Fashions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Fashions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Fashions::MergeFrom(const Fashions& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashions_.MergeFrom(from.fashions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Fashions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fashions::CopyFrom(const Fashions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fashions::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->fashions())) return false;
  return true;
}

void Fashions::Swap(Fashions* other) {
  if (other != this) {
    fashions_.Swap(&other->fashions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Fashions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Fashions_descriptor_;
  metadata.reflection = Fashions_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgFashion

// @@protoc_insertion_point(global_scope)
