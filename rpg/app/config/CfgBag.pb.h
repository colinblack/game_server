// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgBag.proto

#ifndef PROTOBUF_CfgBag_2eproto__INCLUDED
#define PROTOBUF_CfgBag_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CfgBag {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgBag_2eproto();
void protobuf_AssignDesc_CfgBag_2eproto();
void protobuf_ShutdownFile_CfgBag_2eproto();

class Grid;
class Grids;

// ===================================================================

class Grid : public ::google::protobuf::Message {
 public:
  Grid();
  virtual ~Grid();

  Grid(const Grid& from);

  inline Grid& operator=(const Grid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grid& default_instance();

  void Swap(Grid* other);

  // implements Message ----------------------------------------------

  Grid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Grid& from);
  void MergeFrom(const Grid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required uint32 cost = 3;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgBag.Grid)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 cost_;
  friend void  protobuf_AddDesc_CfgBag_2eproto();
  friend void protobuf_AssignDesc_CfgBag_2eproto();
  friend void protobuf_ShutdownFile_CfgBag_2eproto();

  void InitAsDefaultInstance();
  static Grid* default_instance_;
};
// -------------------------------------------------------------------

class Grids : public ::google::protobuf::Message {
 public:
  Grids();
  virtual ~Grids();

  Grids(const Grids& from);

  inline Grids& operator=(const Grids& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grids& default_instance();

  void Swap(Grids* other);

  // implements Message ----------------------------------------------

  Grids* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Grids& from);
  void MergeFrom(const Grids& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgBag.Grid grids = 1;
  inline int grids_size() const;
  inline void clear_grids();
  static const int kGridsFieldNumber = 1;
  inline const ::CfgBag::Grid& grids(int index) const;
  inline ::CfgBag::Grid* mutable_grids(int index);
  inline ::CfgBag::Grid* add_grids();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgBag::Grid >&
      grids() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgBag::Grid >*
      mutable_grids();

  // @@protoc_insertion_point(class_scope:CfgBag.Grids)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgBag::Grid > grids_;
  friend void  protobuf_AddDesc_CfgBag_2eproto();
  friend void protobuf_AssignDesc_CfgBag_2eproto();
  friend void protobuf_ShutdownFile_CfgBag_2eproto();

  void InitAsDefaultInstance();
  static Grids* default_instance_;
};
// ===================================================================


// ===================================================================

// Grid

// required uint32 type = 1;
inline bool Grid::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Grid::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Grid::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Grid::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Grid::type() const {
  // @@protoc_insertion_point(field_get:CfgBag.Grid.type)
  return type_;
}
inline void Grid::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CfgBag.Grid.type)
}

// required uint32 num = 2;
inline bool Grid::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Grid::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Grid::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Grid::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Grid::num() const {
  // @@protoc_insertion_point(field_get:CfgBag.Grid.num)
  return num_;
}
inline void Grid::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgBag.Grid.num)
}

// required uint32 cost = 3;
inline bool Grid::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Grid::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Grid::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Grid::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 Grid::cost() const {
  // @@protoc_insertion_point(field_get:CfgBag.Grid.cost)
  return cost_;
}
inline void Grid::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:CfgBag.Grid.cost)
}

// -------------------------------------------------------------------

// Grids

// repeated .CfgBag.Grid grids = 1;
inline int Grids::grids_size() const {
  return grids_.size();
}
inline void Grids::clear_grids() {
  grids_.Clear();
}
inline const ::CfgBag::Grid& Grids::grids(int index) const {
  // @@protoc_insertion_point(field_get:CfgBag.Grids.grids)
  return grids_.Get(index);
}
inline ::CfgBag::Grid* Grids::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:CfgBag.Grids.grids)
  return grids_.Mutable(index);
}
inline ::CfgBag::Grid* Grids::add_grids() {
  // @@protoc_insertion_point(field_add:CfgBag.Grids.grids)
  return grids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgBag::Grid >&
Grids::grids() const {
  // @@protoc_insertion_point(field_list:CfgBag.Grids.grids)
  return grids_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgBag::Grid >*
Grids::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:CfgBag.Grids.grids)
  return &grids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgBag

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgBag_2eproto__INCLUDED
