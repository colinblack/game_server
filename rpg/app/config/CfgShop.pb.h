// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CfgShop.proto

#ifndef PROTOBUF_CfgShop_2eproto__INCLUDED
#define PROTOBUF_CfgShop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CfgShop {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CfgShop_2eproto();
void protobuf_AssignDesc_CfgShop_2eproto();
void protobuf_ShutdownFile_CfgShop_2eproto();

class ShopCell;
class ShopCells;

// ===================================================================

class ShopCell : public ::google::protobuf::Message {
 public:
  ShopCell();
  virtual ~ShopCell();

  ShopCell(const ShopCell& from);

  inline ShopCell& operator=(const ShopCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCell& default_instance();

  void Swap(ShopCell* other);

  // implements Message ----------------------------------------------

  ShopCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopCell& from);
  void MergeFrom(const ShopCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 buy_limit = 3;
  inline bool has_buy_limit() const;
  inline void clear_buy_limit();
  static const int kBuyLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 buy_limit() const;
  inline void set_buy_limit(::google::protobuf::uint32 value);

  // required uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required uint32 real_price = 5;
  inline bool has_real_price() const;
  inline void clear_real_price();
  static const int kRealPriceFieldNumber = 5;
  inline ::google::protobuf::uint32 real_price() const;
  inline void set_real_price(::google::protobuf::uint32 value);

  // required uint32 money_type = 6;
  inline bool has_money_type() const;
  inline void clear_money_type();
  static const int kMoneyTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 money_type() const;
  inline void set_money_type(::google::protobuf::uint32 value);

  // required uint32 limit_type = 7;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 limit_type() const;
  inline void set_limit_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CfgShop.ShopCell)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_buy_limit();
  inline void clear_has_buy_limit();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_real_price();
  inline void clear_has_real_price();
  inline void set_has_money_type();
  inline void clear_has_money_type();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 buy_limit_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 real_price_;
  ::google::protobuf::uint32 money_type_;
  ::google::protobuf::uint32 limit_type_;
  friend void  protobuf_AddDesc_CfgShop_2eproto();
  friend void protobuf_AssignDesc_CfgShop_2eproto();
  friend void protobuf_ShutdownFile_CfgShop_2eproto();

  void InitAsDefaultInstance();
  static ShopCell* default_instance_;
};
// -------------------------------------------------------------------

class ShopCells : public ::google::protobuf::Message {
 public:
  ShopCells();
  virtual ~ShopCells();

  ShopCells(const ShopCells& from);

  inline ShopCells& operator=(const ShopCells& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCells& default_instance();

  void Swap(ShopCells* other);

  // implements Message ----------------------------------------------

  ShopCells* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopCells& from);
  void MergeFrom(const ShopCells& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CfgShop.ShopCell shop_cell = 1;
  inline int shop_cell_size() const;
  inline void clear_shop_cell();
  static const int kShopCellFieldNumber = 1;
  inline const ::CfgShop::ShopCell& shop_cell(int index) const;
  inline ::CfgShop::ShopCell* mutable_shop_cell(int index);
  inline ::CfgShop::ShopCell* add_shop_cell();
  inline const ::google::protobuf::RepeatedPtrField< ::CfgShop::ShopCell >&
      shop_cell() const;
  inline ::google::protobuf::RepeatedPtrField< ::CfgShop::ShopCell >*
      mutable_shop_cell();

  // @@protoc_insertion_point(class_scope:CfgShop.ShopCells)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CfgShop::ShopCell > shop_cell_;
  friend void  protobuf_AddDesc_CfgShop_2eproto();
  friend void protobuf_AssignDesc_CfgShop_2eproto();
  friend void protobuf_ShutdownFile_CfgShop_2eproto();

  void InitAsDefaultInstance();
  static ShopCells* default_instance_;
};
// ===================================================================


// ===================================================================

// ShopCell

// required uint32 id = 1;
inline bool ShopCell::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopCell::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopCell::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopCell::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShopCell::id() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.id)
  return id_;
}
inline void ShopCell::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.id)
}

// required uint32 item_id = 2;
inline bool ShopCell::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopCell::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopCell::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopCell::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 ShopCell::item_id() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.item_id)
  return item_id_;
}
inline void ShopCell::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.item_id)
}

// required uint32 buy_limit = 3;
inline bool ShopCell::has_buy_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopCell::set_has_buy_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopCell::clear_has_buy_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopCell::clear_buy_limit() {
  buy_limit_ = 0u;
  clear_has_buy_limit();
}
inline ::google::protobuf::uint32 ShopCell::buy_limit() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.buy_limit)
  return buy_limit_;
}
inline void ShopCell::set_buy_limit(::google::protobuf::uint32 value) {
  set_has_buy_limit();
  buy_limit_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.buy_limit)
}

// required uint32 num = 4;
inline bool ShopCell::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopCell::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopCell::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopCell::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ShopCell::num() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.num)
  return num_;
}
inline void ShopCell::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.num)
}

// required uint32 real_price = 5;
inline bool ShopCell::has_real_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopCell::set_has_real_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopCell::clear_has_real_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopCell::clear_real_price() {
  real_price_ = 0u;
  clear_has_real_price();
}
inline ::google::protobuf::uint32 ShopCell::real_price() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.real_price)
  return real_price_;
}
inline void ShopCell::set_real_price(::google::protobuf::uint32 value) {
  set_has_real_price();
  real_price_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.real_price)
}

// required uint32 money_type = 6;
inline bool ShopCell::has_money_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShopCell::set_has_money_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShopCell::clear_has_money_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShopCell::clear_money_type() {
  money_type_ = 0u;
  clear_has_money_type();
}
inline ::google::protobuf::uint32 ShopCell::money_type() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.money_type)
  return money_type_;
}
inline void ShopCell::set_money_type(::google::protobuf::uint32 value) {
  set_has_money_type();
  money_type_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.money_type)
}

// required uint32 limit_type = 7;
inline bool ShopCell::has_limit_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShopCell::set_has_limit_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShopCell::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShopCell::clear_limit_type() {
  limit_type_ = 0u;
  clear_has_limit_type();
}
inline ::google::protobuf::uint32 ShopCell::limit_type() const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCell.limit_type)
  return limit_type_;
}
inline void ShopCell::set_limit_type(::google::protobuf::uint32 value) {
  set_has_limit_type();
  limit_type_ = value;
  // @@protoc_insertion_point(field_set:CfgShop.ShopCell.limit_type)
}

// -------------------------------------------------------------------

// ShopCells

// repeated .CfgShop.ShopCell shop_cell = 1;
inline int ShopCells::shop_cell_size() const {
  return shop_cell_.size();
}
inline void ShopCells::clear_shop_cell() {
  shop_cell_.Clear();
}
inline const ::CfgShop::ShopCell& ShopCells::shop_cell(int index) const {
  // @@protoc_insertion_point(field_get:CfgShop.ShopCells.shop_cell)
  return shop_cell_.Get(index);
}
inline ::CfgShop::ShopCell* ShopCells::mutable_shop_cell(int index) {
  // @@protoc_insertion_point(field_mutable:CfgShop.ShopCells.shop_cell)
  return shop_cell_.Mutable(index);
}
inline ::CfgShop::ShopCell* ShopCells::add_shop_cell() {
  // @@protoc_insertion_point(field_add:CfgShop.ShopCells.shop_cell)
  return shop_cell_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CfgShop::ShopCell >&
ShopCells::shop_cell() const {
  // @@protoc_insertion_point(field_list:CfgShop.ShopCells.shop_cell)
  return shop_cell_;
}
inline ::google::protobuf::RepeatedPtrField< ::CfgShop::ShopCell >*
ShopCells::mutable_shop_cell() {
  // @@protoc_insertion_point(field_mutable_list:CfgShop.ShopCells.shop_cell)
  return &shop_cell_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CfgShop

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CfgShop_2eproto__INCLUDED
